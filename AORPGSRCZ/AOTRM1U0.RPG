     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas AO Update Tllr Ctrls/Ttls Hdr Access Obj')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Access Objects Module                            *
     F*                                                               *
     F*  AOTRM1U0 - Update Tllr Ctrls/Totals Header Access Object     *
     F*                                                               *
     F*  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Prev Amend No. CRT001  *CREATE    Date 28Feb95               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
     F*  MD046248 - Finastra Rebranding                               *
     F*  CRT001 - Retail Teller System                                *
     F*                                                               *
     F*****************************************************************
     FTTRNTM1 UF  E                    DISK         KCOMIT            UC
     F                                              KINFSR SRFILE
      *
      * Define TTRNTM1 file
      *
     F/EJECT
      *
      *  Copyright table
      *
     E                    CPY@    1   1 80
      *
      *  List of valid calling programs
      *
     E                    PGM@    1   2 10
      *
      *  Error texts
      *
     E                    ERR@    1   5 80
      *
      *  Array of QCMDEXC commands
      *
     E                    CMD@    1   1 80
      *
      *  Array of QCMDEXC command to edit
      *
     E                    EDT        80  1
      *
      *  Subroutine stack
      *
     E                    @STK       20 10
     E/EJECT
      *
      *  Data structure for compilation  - Copyright insertion
      *
     ICPYR@#      DS
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
      *
      *  Program data structure
      *
     IDSPGM     ESDSY2PGDSP
      *
      *  Send message data structure
      *
     IDBDTA       DS
     I                                        1  10 DBPGM
     I                                       11  20 DBFILE
     I                                       21  50 DBKEY
     I                                       51  550DBERNB
     I                                       56 135 DBNARR
     I                                      136 145 DBSTK
     I                                      146 175 DBPREF
      *
      *  File structure for file update.
      *
     II#TRM1    E DSTTRNTM1
     I              NORE                            PNORE
     I                                        1 256 P1DTA
      *
      *  Input parameters data structure for AOCNTLR0
      *
     IP#CNTL      DS                            256
      *                                       Access Check
     I                                        1   1 P#ACCK
     I/EJECT
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      *
      * Initialise program
      *
     C           *IN50     IFEQ '0'
     C                     EXSR SRINIT
     C                     END
      *
      * Update TTRNTM1 file with passed data
      *
     C                     EXSR SRTRM1
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      * Return to calling program
      *
     C                     RETRN
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRTRM1   : Update TTRNTM1 file                               *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRTRM1    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRTRM1'  @STK,Q
      *
      *  Define entry parameters
      *
     C           *ENTRY    PLIST
     C                     PARM           W0RTN   7
     C           P1DTA     PARM           W0DTA 256
      *
      *
      *  Read TTRNTM1 record for update
      *
     C           1         SETLLTTRNTM1F             9390    Set file
     C                     READ TTRNTM1F                 90
     C           *IN90     IFEQ '1'
     C           *IN93     OREQ '1'
     C                     MOVEL'TTRNTM1F'W0FILE
     C                     MOVEL'FIRST'   W0KEY
     C                     Z-ADD1         W0ERNB
     C                     MOVELERR@,3    W0NARR
     C                     EXSR SRERR
     C                     END
      *
      *  Change values on TTRNTM1 record
      *
     C                     Z-ADDPNORE     NORE
      *
      *  Update TTRNTM1 fields
      *
     C                     EXCPTUPDTM1
      *
      *  Unwind subroutine stack name
      *
     C           EXTRM1    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRACCS   : Check for valid access                            *
      *                                                               *
      *  CALLED BY: SRINIT  - Initialise and define fields            *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRACCS    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRACCS'  @STK,Q
      *
      *  Call AOCNTLR0 to see if access should be checked
      *
     C                     CALL 'AOCNTLR0'             9090
     C           R#RTN     PARM *BLANKS   O#RTN   7
     C                     PARM           P#CNTL
      *
     C           *IN90     IFEQ '1'
     C           R#RTN     ORNE *BLANKS
     C                     MOVEL'AOCNTLR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY
     C                     Z-ADD2         W0ERNB
     C                     MOVELERR@,5    DBNARR
     C                     EXSR SRERR
     C                     MOVEL*BLANKS   R#RTN   7
     C                     END
      *
      * No access validation required
      *
     C           P#ACCK    CABEQ'N'       EXACCS
      *
      *  Check for valid access
      *
     C                     MOVEL*BLANKS   @PGMF  10
     C                     MOVEL*BLANKS   @PGMFA 10
      *
      *  If already found only test for change
      *
     C           @T        IFGE 1
     C                     CALL 'AOCREPT'              9090
     C                     PARM 'CPF9898' #MSGID  7
     C                     PARM 'QCPFMSG' #MSGF  10
     C                     PARM *BLANKS   #MSGFL 10
     C                     PARM 'Check'   #MSGDT256
     C                     PARM '*PRV'    #MSGR   5
     C                     PARM PGM@,@T   #PRGM  10
     C                     PARM *BLANKS   #MSGQ  10
     C                     PARM '*INFO  ' #MSGT   7
      *
      *  If found set flag to stop checking of all valid programs
      *
     C           *IN90     IFEQ '0'
     C           PGM@,1    ANDNEPGM@,X
     C                     MOVEL'PG_FND'  @PGMF
     C                     ELSE
     C                     Z-ADD0         @T      50
     C                     END
     C                     END
      *
     C                     DO   2         X       50
      *
      *  Check for program in stack
      *
     C                     CALL 'AOCREPT'              9090
     C                     PARM 'CPF9898' #MSGID
     C                     PARM 'QCPFMSG' #MSGF
     C                     PARM *BLANKS   #MSGFL
     C                     PARM 'Check'   #MSGDT
     C                     PARM '*PRV'    #MSGR
     C                     PARM PGM@,X    #PRGM
     C                     PARM *BLANKS   #MSGQ
     C                     PARM '*INFO  ' #MSGT
      *
      *  Set flag if program found
      *
     C           *IN90     IFEQ '0'
     C           PGM@,1    ANDNEPGM@,X
     C                     MOVEL'PG_FND'  @PGMF
     C                     Z-ADDX         @T      50
     C           @PGMFA    IFEQ 'PG_FND'
     C                     GOTO ENDLOP
     C                     END
     C                     END
     C           *IN90     IFEQ '0'
     C           PGM@,1    ANDEQPGM@,X
     C                     MOVEL'PG_FND'  @PGMFA
     C           @PGMF     IFEQ 'PG_FND'
     C                     GOTO ENDLOP
     C                     END
     C                     END
     C                     END
     C           ENDLOP    TAG
      *
      *  Set flag if program found
      *
     C           @PGMF     IFNE 'PG_FND'
     C           @PGMFA    ORNE 'PG_FND'
     C                     MOVEL'*PROGRAM'W0FILE
     C                     MOVEL'*ONLY'   W0KEY
     C                     Z-ADD3         W0ERNB
     C                     MOVELERR@,2    W0NARR
     C                     EXSR SRERR
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXACCS    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRERR    : Report error and close down program               *
      *                                                               *
      *  CALLED BY: SRACCS - Valid access                             *
      *             SRINIT - Initialise and define fields             *
      *                                                               *
      *  CALLS    : *NONE                                             *
      *                                                               *
      *****************************************************************
     CSR         SRERR     BEGSR
      *
      *  Dump program
      *
     C                     DUMP
      *
      *  Send message to MOPERQ
      *
     C                     MOVEL*BLANKS   DBDTA
     C                     MOVEL'AOTRM1U0'DBPGM
     C                     MOVEL@STK,Q    DBSTK
     C                     MOVELW0KEY     DBKEY
     C                     MOVELW0ERNB    DBERNB
     C                     MOVELW0FILE    DBFILE
     C           W0NARR    IFEQ *BLANKS
     C                     MOVELERR@,1    DBNARR
     C                     ELSE
     C                     MOVELW0NARR    DBNARR
     C                     END
      *
     C                     CALL 'AOCREPT'              9090
     C                     PARM 'MEM5000' #MSGID
     C                     PARM 'MIDAS  ' #MSGF
     C                     PARM *BLANKS   #MSGFL
     C                     PARM DBDTA     #MSGDT
     C                     PARM '*PRV'    #MSGR
     C                     PARM '*'       #PRGM
     C                     PARM 'MOPERQ ' #MSGQ
     C                     PARM '*INFO  ' #MSGT
      *
      *  Close down program
      *
     C                     SETON                     LR
     C                     MOVEL'*ERROR*' W0RTN
     C                     RETRN
      *
     CSR         EXERR     ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRFILE   : *PSSR routine for all files                       *
      *                                                               *
      *  CALLED BY: IBM controlled - invalid access to file           *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRFILE    BEGSR
      *
      *  Dump program
      *
     C                     DUMP
      *
      *  If called again seton LR and return
      *
     C           @@FILE    IFNE *BLANKS
     C                     MOVEL'1'       *INLR
     C                     RETRN
     C                     END
     C                     MOVEL'Y'       @@FILE  1
      *
      *  Send message to MOPERQ
      *
     C                     MOVEL*BLANKS   DBDTA
     C                     MOVEL'AOTRM1U0'DBPGM
     C                     MOVEL@STK,Q    DBSTK
     C                     MOVEL##ERST    DBKEY
     C                     Z-ADD4         DBERNB
     C                     MOVEL##ERFL    DBFILE
     C                     MOVELERR@,4    DBNARR
      *
     C                     CALL 'AOCREPT'              9090
     C                     PARM 'MEM5000' #MSGID
     C                     PARM 'MIDAS  ' #MSGF
     C                     PARM *BLANKS   #MSGFL
     C                     PARM DBDTA     #MSGDT
     C                     PARM '*PRV'    #MSGR
     C                     PARM '*'       #PRGM
     C                     PARM 'MOPERQ ' #MSGQ
     C                     PARM '*INFO  ' #MSGT
      *
      *  Close down program
      *
     C                     SETON                     LR
     C                     MOVEL'*ERROR*' W0RTN
     C                     RETRN
      *
     CSR         EXFILE    ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *  CALLS    : SRACCS - valid access                             *
      *                                                               *
      *****************************************************************
     CSR         SRINIT    BEGSR
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      BIS@   80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *  Define W0 database error variables
      *
     C           *LIKE     DEFN DBFILE    W0FILE
     C           *LIKE     DEFN DBKEY     W0KEY
     C           *LIKE     DEFN DBERNB    W0ERNB
     C           *LIKE     DEFN DBNARR    W0NARR
     C           *LIKE     DEFN DBPREF    W0PREF
      *
      *  Check for programs in stack if none found error
      *
     C                     EXSR SRACCS
      *
      *  Override file TTRNTM1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'TTRNTM1' U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD5         W0ERNB
     C                     EXSR SRERR
     C                     END
      *
      *  Open TTRNTM1 file for update
      *
     C                     OPEN TTRNTM1
      *
      *  Indicate that set up is complete
      *
     C                     SETON                     50
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
     OTTRNTM1FE                UPDTM1
     O                         NORE
**  CPY@ table
(c) Finastra International Limited 2001
**  List of valid access programs
AOTRM1U0      Control Update of Teller Controls
QCL           Command Entry
**  Error text
See dump for further information
Invalid Access to update object
Record not found or marked as deleted
File access error occurred - see dump for full details - see key for opcode
Error occurred on call to program - see dumps for further details
** Command Array
OVRDBF     FILE(XXXXXXXXXX) SHARE(*NO) SECURE(*YES)
