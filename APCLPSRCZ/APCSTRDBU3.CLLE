/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('Midas AP Start the database updaters 3')              */
/*********************************************************************/
/*                                                                   */
/*       Midas - APIs                                                */
/*                                                                   */
/*       APCSTRDBU3 - Start the database updaters 2                  */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2003           */
/*                                                                   */
/*       Last Amend No. CGL133             Date 01May13              */
/*       Prev Amend No. CGL132             Date 01May13              */
/*                      AR972677           Date 17May12              */
/*                      CER059             Date 19Jul10              */
/*                      BUG26776           Date 19Nov09              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CAP183             Date 05Jan06              */
/*                      CGL032             Date 05Jul04              */
/*                      226659             Date 25Apr04              */
/*                      CAP079             Date 19Aug02              */
/*                      CAP078             Date 31Oct02              */
/*                      CAP077             Date 19Aug02              */
/*                      CAP076             Date 26Mar02              */
/*                      CAP075             Date 12Aug02              */
/*                      CAP074             Date 26Mar02              */
/*                      CAP073             Date 18May02              */
/*                      CSE040             Date 28Mar03              */
/*                      CAP182 *CREATE     Date 14Mar03              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CGL133 - FATCA Phase 1 - Customers' Identification and      */
/*                Classification - Enquiry Only                      */
/*       CGL132 - FATCA Phase 1 - Customers' Identification and      */
/*                Classification - Master                            */
/*       AR972677 - NAHL and JACM should not be linked to CGL032     */
/*                  but well to Swift changes 2007 (Child: AR972680) */
/*       CER059 - German Feature Upgrade to Delhi                    */
/*       BUG26776 - Run only API jobs based on system settings in    */
/*                  SCSARDPD and SDMMODPD.                           */
/*       CAP183 - Conversion of Market Prices Input into modular     */
/*                structure to use APIs                              */
/*       CGL032 - Automatic Exchange of Information                  */
/*       226659 - ENDAPIDBU fails for FEEM because wrong data area   */
/*                is locked                                          */
/*       CAP079 - Lending API enhancements - Repayments schedule     */
/*       CAP078 - Lending API enhancements - Fee input               */
/*       CAP077 - Lending API enhancements - Manual payments         */
/*       CAP076 - Lending API enhancements - Rollover Instructions   */
/*       CAP075 - Lending API enhancements - Loan amendments         */
/*       CAP074 - Lending API enhancements - Loans input.            */
/*       CAP073 - Lending API enhancements - Facility Input          */
/*       CSE040 - Securities Statement Processing                    */
/*       CAP182 - Automatic Settlement of Trades                     */
/*              - Conversion of SE Trade Settlement Input maintence  */
/*                function to modular structure to use as APIs.      */
/*                                                                   */
/*********************************************************************/
 
/**********  PGM        PARM(&SYSTEM &TRSM &STPR)                                         /*CAP073*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP)                        /*CAP073*/ /*CAP074*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP)                  /*CAP074*/ /*CAP075*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM)            /*CAP075*/ /*CAP076*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                        &LERI)                                                 /*CAP076*/ /*CAP077*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                        &LERI &MAPY)                                           /*CAP077*/ /*CAP078*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                        &LERI &MAPY &FEEM)                                     /*CAP078*/ /*CAP079*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                        &LERI &MAPY &FEEM &RPSC)                               /*CAP079*/ /*CGL032*/
/**********  PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                        &LERI &MAPY &FEEM &RPSC &ACUD &CCTX &JACM &NAHL &NATX) /*CGL032*/ /*CAP183*/
 
             PGM        PARM(&SYSTEM &TRSM &STPR &FCIP &CLIP &LOAM +
                          &LERI &MAPY &FEEM &RPSC &ACUD &CCTX &JACM +
                          &NAHL &NATX &MPRI)                                              /*CAP183*/
 
             DCL        VAR(&SYSTEM) TYPE(*CHAR) LEN(2)
             DCL        VAR(&TRSM) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STPR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&FCIP) TYPE(*CHAR) LEN(1)                                     /*CAP073*/
             DCL        VAR(&CLIP) TYPE(*CHAR) LEN(1)                                     /*CAP074*/
             DCL        VAR(&LOAM) TYPE(*CHAR) LEN(1)                                     /*CAP075*/
             DCL        VAR(&LERI) TYPE(*CHAR) LEN(1)                                     /*CAP076*/
             DCL        VAR(&MAPY) TYPE(*CHAR) LEN(1)                                     /*CAP077*/
             DCL        VAR(&FEEM) TYPE(*CHAR) LEN(1)                                     /*CAP078*/
             DCL        VAR(&RPSC) TYPE(*CHAR) LEN(1)                                     /*CAP079*/
             DCL        VAR(&ACUD) TYPE(*CHAR) LEN(1)                                     /*CGL032*/
             DCL        VAR(&CCTX) TYPE(*CHAR) LEN(1)                                     /*CGL032*/
             DCL        VAR(&JACM) TYPE(*CHAR) LEN(1)                                     /*CGL032*/
             DCL        VAR(&NAHL) TYPE(*CHAR) LEN(1)                                     /*CGL032*/
             DCL        VAR(&NATX) TYPE(*CHAR) LEN(1)                                     /*CGL032*/
             DCL        VAR(&MPRI) TYPE(*CHAR) LEN(1)                                     /*CAP183*/
 
             DCL        VAR(&SRTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&CAP182) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CSE040) TYPE(*CHAR) LEN(1)                                   /*CSE040*/
             DCL        VAR(&CAP073) TYPE(*CHAR) LEN(1)                                   /*CAP073*/
             DCL        VAR(&CAP074) TYPE(*CHAR) LEN(1)                                   /*CAP074*/
             DCL        VAR(&CAP075) TYPE(*CHAR) LEN(1)                                   /*CAP075*/
             DCL        VAR(&CAP076) TYPE(*CHAR) LEN(1)                                   /*CAP076*/
             DCL        VAR(&CAP077) TYPE(*CHAR) LEN(1)                                   /*CAP077*/
             DCL        VAR(&CAP078) TYPE(*CHAR) LEN(1)                                   /*CAP078*/
             DCL        VAR(&CAP079) TYPE(*CHAR) LEN(1)                                   /*CAP079*/
             DCL        VAR(&CGL032) TYPE(*CHAR) LEN(1)                                   /*CGL032*/
             DCL        VAR(&CSW207) TYPE(*CHAR) LEN(1)                                 /*AR972677*/
             DCL        VAR(&CAP183) TYPE(*CHAR) LEN(1)                                   /*CAP183*/
             DCL        VAR(&FATCA) TYPE(*CHAR) LEN(1)                                    /*CGL132*/
             DCL        VAR(&XLIB) TYPE(*CHAR) LEN(10) +
                          VALUE('xxXLIB    ')
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(10) +
                          VALUE('xxDPLIB   ')
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7) VALUE(' ')                        /*BUG26776*/
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7) VALUE('*FIRST ')                  /*BUG26776*/
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)                                  /*BUG26776*/
                                                                                        /*BUG26776*/
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2003')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGVAR     VAR(%SST(&XLIB 1 2)) VALUE(&SYSTEM)
             CHGVAR     VAR(%SST(&DPLIB 1 2)) VALUE(&SYSTEM)
/**/                                                                                    /*BUG26776*/
             CALL       PGM(AOMMODR0) PARM(&RTCD &OPTN &FMT)                            /*BUG26776*/
/**/                                                                                    /*BUG26776*/
/** Database error handling                                        */                   /*BUG26776*/
/**/                                                                                    /*BUG26776*/
             IF         COND(&RTCD *NE '       ') THEN(DO)                              /*BUG26776*/
               SNDPGMMSG  MSG('Error on access to ICD file +
                            AOMMODPD') TOMSGQ(MOPERQ)                                   /*BUG26776*/
               GOTO       CMDLBL(ABNOR)                                                 /*BUG26776*/
             ENDDO                                                                      /*BUG26776*/
/* +
   For each database updater requested:  +
     set up the variables required and call a lower level routine +
     to process it.  */
 
/** Check if the TRSM Switchable Feature is on. */
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP182')
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP182) VALUE('Y'))
 
/**********  IF         COND(&TRSM *EQ 'Y' *AND &CAP182 *EQ 'Y') +      **/             /*BUG26776*/
/**********               THEN(DO)                                      **/             /*BUG26776*/
             IF         COND(&TRSM *EQ 'Y' *AND &CAP182 *EQ 'Y' *AND +
                           %SST(&FMT 31 1) *EQ 'Y')  THEN(DO)                           /*BUG26776*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'TRSM' +
                             'SETRSMLCK ' 'DBU_TRSM  ')
             ENDDO
                                                                                          /*CSE040*/
/** Check if the STPR Switchable Feature is on. */                                        /*CSE040*/
                                                                                          /*CSE040*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CSE040')                     /*CSE040*/
                                                                                          /*CSE040*/
             IF         (&STPR *EQ 'Y' *AND &SRTCD *EQ '       ') +
               DO                                                                         /*CSE040*/
                 CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'STPR' +
                              'SESTPRLCK ' 'DBU_STPR  ')                                  /*CSE040*/
             ENDDO                                                                        /*CSE040*/
                                                                                          /*CAP073*/
/** Check if the FCIP Switchable Feature is on. */                                        /*CAP073*/
                                                                                          /*CAP073*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP073')
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP073) VALUE('Y'))                                        /*CAP073*/
             IF         COND(&FCIP *EQ 'Y' *AND &CAP073 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP073*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'FCIP' +
                             'LEFCIPLCK ' 'DBU_FCIP  ')                                   /*CAP073*/
             ENDDO                                                                        /*CAP073*/
/** Check if the CLIP Switchable Feature is on. */                                        /*CAP074*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP074')                     /*CAP074*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP074) VALUE('Y'))                                        /*CAP074*/
             IF         COND(&CLIP *EQ 'Y' *AND &CAP074 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP074*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'CLIP' +
                             'LECLIPLCK ' 'DBU_CLIP  ')                                   /*CAP074*/
             ENDDO                                                                        /*CAP074*/
/** Check if the LOAM Switchable Feature is on. */                                        /*CAP075*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP075')
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP075) VALUE('Y'))                                        /*CAP075*/
             IF         COND(&LOAM *EQ 'Y' *AND &CAP075 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP075*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'LOAM' +
                             'LELOAMLCK ' 'DBU_LOAM  ')                                   /*CAP075*/
             ENDDO                                                                        /*CAP075*/
/** Check if the LERI Switchable Feature is on. */                                        /*CAP076*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP076')
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP076) VALUE('Y'))                                        /*CAP076*/
             IF         COND(&LERI *EQ 'Y' *AND &CAP076 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP076*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'LERI' +
                             'LELERILCK ' 'DBU_LERI  ')                                   /*CAP076*/
             ENDDO                                                                        /*CAP076*/
/** Check if the MAPY Switchable Feature is on. */                                        /*CAP077*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP077')
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP077) VALUE('Y'))                                        /*CAP077*/
             IF         COND(&MAPY *EQ 'Y' *AND &CAP077 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP077*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'MAPY' +
                             'LEMAPYLCK ' 'DBU_MAPY  ')                                   /*CAP077*/
             ENDDO                                                                        /*CAP077*/
/** Check if the FEEM switchable feature is on. */                                        /*CAP078*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP078')                     /*CAP078*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP078) VALUE('Y'))                                        /*CAP078*/
             IF         COND(&FEEM *EQ 'Y' *AND &CAP078 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP078*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'FEEM' +
                             'LEFEEMLCK ' 'DBU_FEEM  ')                                   /*226659*/
 /*********                  'LEFEEMUPC ' 'DBU_FEEM  ')                       /*CAP078*/  /*226659*/
             ENDDO                                                                        /*CAP078*/
/** Check if the RPSC Switchable Feature is on. */                                        /*CAP079*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP079')                     /*CAP079*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP079) VALUE('Y'))                                        /*CAP079*/
             IF         COND(&RPSC *EQ 'Y' *AND &CAP079 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP079*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'RPSC' +
                             'LERPSCLCK ' 'DBU_RPSC  ')                                   /*CAP079*/
             ENDDO                                                                        /*CAP079*/
 
/** Check if the CGL032 Switchable Feature is on. */                                      /*CGL032*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CGL032')                     /*CGL032*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CGL032) VALUE('Y'))                                        /*CGL032*/
                                                                                        /*AR972677*/
/** Check if the CSW207 Switchable Feature is on. */                                    /*AR972677*/
             CALL       PGM(SWIF2007) PARM(&SRTCD)                                      /*AR972677*/
             IF         COND(&SRTCD *EQ 'CSW2007') THEN(CHGVAR +
                          VAR(&CSW207) VALUE('Y'))                                      /*AR972677*/
                                                                                          /*CGL132*/
/** Check if CGL132 Switchable Feature is on */                                           /*CGL132*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CGL132')                     /*CGL132*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&FATCA) VALUE('Y'))                                         /*CGL132*/
                                                                                          /*CGL133*/
/** Check if CGL133 Switchable Feature is on */                                           /*CGL133*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CGL133')                     /*CGL133*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&FATCA) VALUE('Y'))                                         /*CGL133*/
                                                                                          /*CGL032*/
             IF         COND(&ACUD *EQ 'Y' ) THEN(DO)                                     /*CGL032*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'ACUD' +
                             'SDACUDLCK ' 'DBU_ACUD  ')                                   /*CGL032*/
             ENDDO                                                                        /*CGL032*/
                                                                                          /*CGL032*/
             IF         COND(&CCTX *EQ 'Y' *AND &CGL032 *EQ 'Y') +
                          THEN(DO)                                                        /*CGL032*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'CCTX' +
                             'SDCCTXLCK ' 'DBU_CCTX  ')                                   /*CGL032*/
             ENDDO                                                                        /*CGL032*/
                                                                                          /*CGL032*/
/**********  IF         COND(&JACM *EQ 'Y' *AND &CGL032 *EQ 'Y') +
                          THEN(DO)                                        */ /*CGL032*/ /*AR972677*/
/**********  IF         COND((&JACM *EQ 'Y' *AND &CGL032 *EQ 'Y') *OR +   */              /*CGL132*/
/**********                  (&JACM *EQ 'Y' *AND &CSW207 *EQ 'Y')) +      */              /*CGL132*/
/**********               THEN(DO)                                        */     /*AR972677 CGL132*/
             IF         COND((&JACM *EQ 'Y' *AND &CGL032 *EQ 'Y') *OR +
                             (&JACM *EQ 'Y' *AND &CSW207 *EQ 'Y') *OR +
                             (&JACM *EQ 'Y' *AND &FATCA *EQ 'Y')) +
                          THEN(DO)                                                        /*CGL132*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'JACM' +
                             'SDJACMLCK ' 'DBU_JACM  ')                                   /*CGL032*/
             ENDDO                                                                        /*CGL032*/
                                                                                          /*CGL032*/
/**********  IF         COND(&NAHL *EQ 'Y' *AND &CGL032 *EQ 'Y') +
                          THEN(DO)                                        */ /*CGL032*/ /*AR972677*/
/**********  IF         COND((&NAHL *EQ 'Y' *AND &CGL032 *EQ 'Y') *OR +                */ /*CGL132*/
/**********                  (&NAHL *EQ 'Y' *AND &CSW207 *EQ 'Y')) +                   */ /*CGL132*/
/**********               THEN(DO)                                        */ /*AR972677*/ /*CGL132*/
             IF         COND((&NAHL *EQ 'Y' *AND &CGL032 *EQ 'Y') *OR +
                             (&NAHL *EQ 'Y' *AND &CSW207 *EQ 'Y') *OR +
                             (&NAHL *EQ 'Y' *AND &FATCA *EQ 'Y')) +
                          THEN(DO)                                                        /*CGL132*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'NAHL' +
                             'SDNAHLLCK ' 'DBU_NAHL  ')                                   /*CGL032*/
             ENDDO                                                                        /*CGL032*/
                                                                                          /*CGL032*/
             IF         COND(&NATX *EQ 'Y' *AND &CGL032 *EQ 'Y') +
                          THEN(DO)                                                        /*CGL032*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'NATX' +
                             'SDNATXLCK ' 'DBU_NATX  ')                                   /*CGL032*/
             ENDDO                                                                        /*CGL032*/
                                                                                          /*CGL032*/
/** Check if the MPRI Switchable Feature is on. */                                        /*CAP183*/
             CALL       PGM(AOSARDR0) PARM(&SRTCD '*VERIFY' 'CAP183')                     /*CAP183*/
             IF         COND(&SRTCD *EQ '       ') THEN(CHGVAR +
                          VAR(&CAP183) VALUE('Y'))                                        /*CAP183*/
             IF         COND(&MPRI *EQ 'Y' *AND &CAP183 *EQ 'Y') +
                          THEN(DO)                                                        /*CAP183*/
                CALLPRC    PRC(APCSTRDBU2) PARM(&XLIB &DPLIB 'MPRI' +
                             'FFMPRILCK ' 'DBU_MPRI  ')                                   /*CAP183*/
             ENDDO                                                                        /*CAP183*/
                                                                                          /*CAP183*/
/* Allocate the lock dataarea to avoid other users */
/* attempting to submit the same jobs              */
 
             ALCOBJ     OBJ((APDBULCK *DTAARA *EXCL)) WAIT(0)
             MONMSG     MSGID(CPF1002) EXEC(GOTO CMDLBL(END))
 
 
             GOTO       CMDLBL(END)
 
 ABNOR:
             CHGJOB     SWS(XXXXXX11)
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          APCSTRDBU ended abnormally - see job log')
             MONMSG     MSGID(CPF0000 MCH0000)
 
 END:
             DLCOBJ     OBJ((APDBULCK *DTAARA *EXCL))
             MONMSG     MSGID(CPF0000)
 
             ENDPGM
