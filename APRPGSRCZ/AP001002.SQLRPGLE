     H DEBUG
     H COPYRIGHT('(c) Finastra International Limited 2012')
      *****************************************************************
/*STD *  RPGSQLBND                                                    *
/*EXI *  TEXT('Midas SD Transaction Transferred to PEA')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  AP001002 - Midas SD Transactions Transferred to PEA          *
      *                                                               *
      *  (c) Finastra International Limited 2012                      *
      *                                                               *
      *  Last Amend No. MD058079           Date 11May21               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 AR1007705          Date 20Nov12               *
      *                 AR1002981          Date 09Jul12               *
      *                 AR1001649          Date 09Jul12               *
      *                 AR1001631          Date 08Jul12               *
      *                 CSC054  *CREATE    Date 23Feb12               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD058079 - Deliverable Data Split for sundry files           *
      *  MD046248 - Finastra Rebranding                               *
      *  AR1007705 - Accrued interest report field should have 2      *
      *              decimal places                                   *
      *  AR1002981 - Corrected header title for OTCO transactions.    *
      *  AR1001649 - Changed title of report in PEA system to be      *
      *              consistent with the live report. (Recompile)     *
      *  AR1001631 - Error in I/C report generated by transaction     *
      *              transfer to PEA system.                          *
      *  CSC054 - Period End Adjustments                              *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E   I N D E X                              *
      *                                                               *
      * *INZSR    - Program initialisation                            *
      * *PSSR     - Error handling subroutine                         *
      * SrPrcesRpt - Subroutine to process the main report            *
      * SrPrcesHdr - Subroutine to get API Header                     *
      * SrPrcesDtl - Subroutine to get list of details to report      *
      * SrPrintRcd - Subroutine to print the record on the main PRTF  *
      * SrGetDetails - Subroutine to get the details records          *
      * SrExcSQLF - Subroutine to the declare and create aliases      *
      *             for files used in SQL statements in the program   *
      * SrClsSQLF - Subroutine to drop aliases used for files used in *
      *             SQL statements in the program                     *
      * SrGetUsrR - Subroutine to get User ID for Request of the      *
      *             report                                            *
      * SrExcSQL1 - Subroutine to execute SQL script for getting      *
      *             Level 1 field in the report                       *
      * SrExcSQLU - Subroutine to execute SQL script for getting      *
      *             User ID for Request of the report                 *
      * SRFtcSQLU - Subroutine to fetch records of StmSQLU for        *
      *             getting User ID for Request of the report         *
      * SrClsSQL1 - Subroutine to close recordset of StmSQL1          *
      * SrClsSQLU - Subroutine to close recordset of StmSQLU          *
      * SrOpenPrtF - Subroutine to open the main PRTF of the report   *
      * SrClsPrtF - Subroutine to close the main PRTF or the report   *
      * SrRCFP1 - Register the P1 Printer File via RCF                *
      * SrInitParm - Initialize calling program parameters            *
      * SrGLINTCInit - Init GLINTC Parameters                         *
      * SrGLINTCParm - Move GLINTC Parameters                         *
      * SrGLINTCCall - Call GLINTC Program                            *
      * SrPrcesBITH - Subroutine to get BITH detail                   *
      * SrExcSQL2 - Subroutine to execute SQL script for getting      *
      *             Level 2 field in the report                       *
      * SRFtcSQL2 - Subroutine to fetch records of StmSQL2 for getting*
      *             Level 2 field in the report                       *
      * SrClsSQL2 - Subroutine to close recordset of StmSQL2          *
      * SRFtcSQLU - Subroutine to fetch records of StmSQLU for getting*
      *             User ID for Request of the report                 *
      * CheckOverflow - Check overflow line                           *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  I N D I C A T O R S   I N D E X                              *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  V A R I A B L E   I N D E X                                  *
      *                                                               *
      * LPMode = 1 : Report for all users                             *
      * LPMode = 2 : Report for a specific user                       *
      * LPMode = 3 : Report for a list of specific users              *
      *              Tables to be used are overriden                  *
      *                                                               *
      *****************************************************************
      *
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
      *
      ** Midas SD API Report Control File
      *
     F*APARCFL0* IF   E           K DISK                                                    MD058079
      *
      ** Midas SD API Report Control File by API and Program
      *
     F*APARCFL1* IF   E           K DISK                                                    MD058079
     F**********                                RENAME(APARCFD0:APARCFD1)                   MD058079
      *
      ** Midas GL Transaction Transferred to PEA
      *
     FAP001002P1O    E             PRINTER USROPN
     F                                     INFSR(*PSSR)
     F                                     INFDS(SPOOL1)
     F
     F
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ Automatically included D-specs       ¦
      ** ¦ ==============================       ¦
      ** +--------------------------------------+

      **---------------------------------------------------------------
      ** The following /COPY line includes (among others) the LDA
      ** layout and the copyright array definition:
     D/COPY ZACPYSRC,STD_D_SPEC
      **---------------------------------------------------------------
      *****************************************************************
      /EJECT
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
      *
      ** External DS for Bank Details
      *
     D SDBANK        E DS                  EXTNAME(SDBANKPD)
      *
      ** Short DS for Access Objects
      *
     D DSFDY         E DS                  EXTNAME(DSFDY)
      *
     D SDDEAL        E DS                  EXTNAME(SDDEALPD)                              MD058079
      ** Dealing ICD                                                                      MD058079
      ** File information DS for main PRTF
      *
     D SPOOL1          DS
     D  SFILE1                83     92
     D  SFNUM1               123    124B 0
     D  OFLLN1               188    189B 0
     D  PRTLN1               367    368B 0
      *
      ** File information DS for audit PRTF
      *
     D SPOOLU          DS
     D  SFILEU                83     92
     D  SFNUMU               123    124B 0
      *
     DSDS             SDS
     D  JBNAM                244    253
     D  JBUSR                254    263
     D  JBNUM                264    269
      *
      ** DS for SQL cursor dsTRANS
      **    A.TRAPI                   7A
      **    A.TRDLNO                 60A
      **    A.TRPARM              32000A   VARYING
      **    A.TRTMST                 26A
     D dsTRANS         DS
     D APIModule               1      7
     D TransRef                8     67
     D TransParm              68  32067A   VARYING
     D TransDate           32068  32094
      *
      ** DS for SQL cursor dsTRANS2 for BITP
      *
     D dsTRANS2        DS
     D APIModule2              1      7
     D TransRef2               8     67
     D TransParm2             68  32067
     D TransDate2          32068  32094
      *
      ** Temporary DS for SQL cursor dsTRANSz
      *
     D dsTRANSz        DS
     D zAPIModule              1      7
     D zTransRef               8     67
     D zTransParm             68  32067
     D zTransDate          32068  32094
     D dsBIT1          DS
     D bit1APIModule           1      6
     D bit1TransRef            7      9
     D dsBIT2          DS
     D bit2APIModule           1      6
     D bit2TransRef            7      9
      *
     D DSRSU           DS
     D SU_USID                 1     10
     D**********       DS                                                                  AR1007705
     D*DSWZINTR*                     30P 0                                                 AR1007705
     D**IWZINTR*               1     21A                                                   AR1007705
     D**DWZINTR*              22     30A                                                   AR1007705
      *
      ** Compile-time array to contain Module/Module Description
      *
     D  TabMod         S              4    DIM(47) CTDATA PERRCD(1)
     D  TabDes         S             50    DIM(47) ALT(TabMod)
     D  AccDesc        S             30    DIM(3) CTDATA PERRCD(1)
      *
      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
      *
      ** Program entry parameters
      *
     D PSeq            S              5A
     D PLevl           S              1A
     D PEnty           S              3A
      *
      ** Parameters for ZSFILE
      *
     D PZSEnty         S              3
     D PZSFile         S             10
     D PZSNum          S              6  0
     D PZSErr          S              1
     D PZSSeq          S              5A
      *
      ** Parameters for Access Programs
      *
     D POption         S              7A
     D PRetCode        S              7A

     D PErms           S             50A
     D PFchk           S              1A
     D PZone           S             10A
     D PShtc           S              4A
     D PRdnb           S              5P 0
     D PDnwd           S              5P 0
     D PCcy            S              3A
     D PNjob           S              1P 0
      *
      ** SQL work variables
      *
     D StmSQL1         S           2000A
     D StmSQL2         S           2000A
     D StmSQLU         S           2000A
      *
      ** Other work variables
      *
     D WRun            S              1A
     D Error           S              1A
     D BegPos          S              5S 0
     D EndPos          S              5S 0
     D FldLen          S              5S 0
     D FldVal          S            100A   VARYING
     D FldValBeg       S              5S 0
     D FldValEnd       S              5S 0
     D APIMod          S             10A
     D Mod             S              4A
     D DetailLen       S              5S 0
     D LenDef          S              5S 0
     D HEadInd         S              1A
     D ReadInd         S              1A
     D Wxlate          S             50A
     D WCallPgm        S              1A
     D WRCAPGM         S             10A
     D WZIBEG          S              5P 0
     D WZIEND          S              5P 0
     D WZICALC         S              1P 0
     D WZIAMT          S             15P 0
     D WZIRATE         S             11P 7
     D WZIBEG2         S              5P 0
     D WZIEND2         S              5P 0
     D WZICALC2        S              1P 0
     D WZIAMT2         S             15P 0
     D WZIRATE2        S             11P 7
     D WZINTR          S             30P 9
     D WSVZINTR        S             30P 9
     D WTransrefHdr    S              3A
     D PFLD15          S             15P 0
     D PDECS           S              1P 0
     D PCODE           S              1A
     D POUT21          S             21A
     D RundCons        S             30A
     D ChkPos          S              2  0
     D WCalInt         S             15P 2                                                 AR1007705
     D APARCF        E DS                  EXTNAME(APARCJW0)                                MD058079
     D/COPY ZSRSRC,ZEDITZ1LE
      *
      ** +--------------------------------------+
      ** ¦ Declared constants                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      * MAIN PROCEDURE                                                *
      *****************************************************************
      *
      ** Process Report
      *
     C                   EXSR      SrPrcesRpt
      *
      ** Return
      *
     C                   EVAL      *INLR = *ON
     C                   RETURN
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrPrcesRpt - Subroutine to process the main report            *
      *                                                               *
      * Called by: Main Procedure                                     *
      *                                                               *
      * Calls: SrOpenPrtF, SrPrcesLv1, SrClsPrtF, SrClsSQLF           *
      *                                                               *
      *****************************************************************
     C     SrPrcesRpt    BEGSR
      *
      ** Open Report file
      *
     C                   EXSR      SrOpenPrtF
      *
      ** Process Header field of the Report
      *
     C                   EXSR      SrPrcesHdr
      *
      ** Close Report file
      *
     C                   EXSR      SrClsPrtF
      *
      ** Close SQL query F - Files Declaration
      *
     C                   EXSR      SrClsSQLF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrPrcesHdr - Subroutine to get API Header                     *
      *                                                               *
      * Called by: SrPrcesRpt                                         *
      *                                                               *
      * Calls: SrExcSQL1, SrFtcSQL1, SrClsSQL1, SrPrcesLv2            *
      *                                                               *
      *****************************************************************
     C     SrPrcesHdr    BEGSR
      *
      ** Excecute SQL query 1
      *
     C                   EXSR      SrExcSQL1
      *
      ** Fetch first recordset of SQL query 1
      *
     C                   EXSR      SrFtcSQL1
     C                   DOW       SQLCODE = *ZEROS
      *
      ** Process Detail of the Report
      *
     C                   EXSR      SrPrcesDtl
      *
      ** Process Detail for BITH
      *
     C                   EXSR      SrPrcesBITH
      *
      ** Process Detail of the Report
      *
     C                   EXSR      SrPrcesDtl
      *
      ** Fetch next recordset of SQL query 1
      *
     C                   EXSR      SrFtcSQL1
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDDO
      *
      ** Close SQL query 1
      *
     C                   EXSR      SrClsSQL1
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrPrcesDtl - Subroutine to get list of Details to report      *
      *                                                               *
      * Called by: SrPrcesHdr                                         *
      *                                                               *
      * Calls: SrExcSQL2, SrFtcSQL2, SrClsSQL2, SrPrcesLv3            *
      *                                                               *
      *****************************************************************
     C     SrPrcesDtl    BEGSR
      *
      ** Print Report Record
      *
     C                   EXSR      SrPrintRcd
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrPrintRcd - Subroutine to print the record on the main PRTF  *
      *                                                               *
      * Called by: SrPrcesLv3                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrPrintRcd    BEGSR
      *
      ** Write API Header
      *
     C                   EVAL      APIMod = APIModule
      *
     C                   IF        APIModule <> zAPIModule
     C                   Exsr      CheckOverflow
     C                   IF        APIModule = 'BITH' AND
     C                             zAPIModule = 'BITP'
     C                   MOVE      '1'           *IN55
     C                   ELSE
     C**********         IF        %TLookup(APIMod:TabMod:TabDes)                          AR1001631
     C                   IF        %TLookup(%SUBST(APIMod:1:4)                             AR1001631
     C                             :TabMod:TabDes)                                         AR1001631
     C                   EVAL      R_TRAPI = TabDes
     C                   ENDIF
     C                   MOVE      '0'           *IN55
     C                   ENDIF
     C                   EVAL      HeadInd = *BLANKS
     C                   ENDIF
      *
      ** Write Details
      *
     C                   IF        TransRef <> zTransRef
     C                   Exsr      CheckOverflow
     C                   EXSR      SrGetDetails
     C                   ENDIF
     C                   EVAL      dsTRANSz = dsTRANS
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrGetDetails - Subroutine to get the details records          *
      *                                                               *
      * Called by: SrPrintRcd                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrGetDetails  BEGSR
      *
      ** Get Fields Detail in API Report Control File
      *
     C                   EVAL      ReadInd = *BLANKS
     C*****APIMod        SETLL     APARCFL0                                                 MD058079
     C*****APIMod        READE     APARCFL0                                                 MD058079
     C/EXEC SQL                                                                             MD058079
     C+ close ACursor                                                                       MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ declare ACursor insensitive scroll cursor for                                       MD058079
     C+ select * from APARCJW0                                                              MD058079
     C+ where RCAPGM = '               ' and RCAPIN = :APIMod                               MD058079
     C+ order by RCAPIN, RCSEQN                                                             MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ open ACursor                                                                        MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ fetch next from ACursor into :APARCF                                                MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C**********         DOW       Not %EOF(APARCFL0)                                       MD058079
     C                   DOW       SQLCODE = 0                                              MD058079
      *
     C                   EVAL      ReadInd = 'Y'
      *
     C                   IF        HeadInd <> 'Y'
     C                             And APIMOD <> 'BITP'
     C                   Exsr      CheckOverflow
     C                   WRITE     HEADER1
     C                   EVAL      HeadInd = 'Y'
     C                   ENDIF
      *
     C                   IF        RCPANL = 'Y'
     C     '&':' '       XLATE     RDETAIL       RDETAIL
     C                   Exsr      CheckOverflow
     C                   WRITE     DETAIL1
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDIF
      *
      ** Get Field Length
      *
     C                   EVAL      FldLen = %Len(%Trim(RCFLDN))
      *
      ** Get Field Begin Position
      *
     C                   EVAL      BegPos = %Scan((%Trim(RCFLDN) +
     C                                      '>'): TransParm:1)
      *
      ** Field found
      *
     C                   IF        BegPos <> *Zeros
      *
      ** Get Field End Position
      *
     C                   EVAL      EndPos= %Scan('</':TransParm:BegPos)
     C
      *
      ** Get Field value
      *
     C                   EVAL      FldValBeg = BegPos + FldLen + 1
     C                   EVAL      FldValEnd = EndPos - FldValBeg
      *
      ** Include remaining blanks
      *
     C                   EVAL      Wxlate =%Subst(TransParm:FldValBeg:FldValEnd)
     C     ' ':'&'       XLATE     Wxlate        Wxlate
      *
     C                   IF        RCPANL = 'Y'
     C                   EVAL      RDETAIL=%Trim(RDETAIL) +
     C                              %Trim(RCDESC) + ': ' +
     C                              %Subst(Wxlate:1:RCFLDB)
     C                   ELSE
     C                   EVAL      RDETAIL=%Trim(RDETAIL) + '  ' +
     C                              %Trim(RCDESC) + ': ' +
     C                              %Subst(Wxlate:1:RCFLDB)
     C                   ENDIF
     C                   ENDIF
      *
     C                   EVAL      DetailLen = %Len(%Trim(RDetail))
     C                   IF        DetailLen >= 120
     C     '&':' '       XLATE     RDETAIL       RDETAIL
     C                   Exsr      CheckOverflow
     C                   WRITE     DETAIL1
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDIF
      *
     C*****APIMod        READE     APARCFL0                                                 MD058079
     C/EXEC SQL                                                                             MD058079
     C+ fetch next from ACursor into :APARCF                                                MD058079
     C/END-EXEC                                                                             MD058079
     C                   ENDDO
      *
     C/EXEC SQL                                                                             MD058079
     C+ close ACursor                                                                       MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C                   IF        RDetail <> *Blanks
     C     '&':' '       XLATE     RDETAIL       RDETAIL
     C                   Exsr      CheckOverflow
     C                   WRITE     DETAIL1
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDIF
      *
      ** Check if there is a calling program
      *
     C                   EVAL      ReadInd = *BLANKS
     C*****APIMod        CHAIN     APARCFL1                                                 MD058079
     C/EXEC SQL                                                                             MD058079
     C+ SELECT *                                                                            MD058079
     C+ into :APARCF                                                                        MD058079
     C+ from APARCJW0                                                                       MD058079
     C+ where RCAPGM <> '               ' and RCAPIN = :APIMod                              MD058079
     C/END-EXEC                                                                             MD058079
     C**********         IF        %Found(APARCFL1)                                         MD058079
     C                   IF        SQLCODE <> 100                                           MD058079
     C                             And RCAPGM <> *BLANKS
      *
     C*****APIMod        SETLL     APARCFL1                                                 MD058079
     C*****APIMod        READE     APARCFL1                                                 MD058079
     C/EXEC SQL                                                                             MD058079
     C+ close BCursor                                                                       MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ declare BCursor insensitive scroll cursor for                                       MD058079
     C+ select * from APARCJW0                                                              MD058079
     C+ where RCAPGM <> '               ' and RCAPIN = :APIMod                              MD058079
     C+ order by RCAPIN, RCAPGM                                                             MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ open BCursor                                                                        MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C/EXEC SQL                                                                             MD058079
     C+ fetch next from BCursor into :APARCF                                                MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C**********         DOW       Not %EOF(APARCFL1)                                       MD058079
     C                   DOW       SQLCODE = 0                                              MD058079
      *
     C                   EVAL      ReadInd = 'Y'
      *
      *
     C                   IF        RCFLDN = *BLANKS
     C                   EVAL      WRCAPGM = RCAPGM
     C                   EXSR      SrInitParms
     C                   ELSE
      *
      ** Get Field Length
      *
     C                   EVAL      FldLen = %Len(%Trim(RCFLDN))
      *
      ** Get Field Begin Position
      *
     C                   EVAL      BegPos = %Scan((%Trim(RCFLDN) +
     C                                      '>'): TransParm:1)
      *
      ** Field found
      *
     C                   IF        BegPos <> *Zeros
      *
      ** Get Field End Position
      *
     C                   EVAL      EndPos= %Scan('</':TransParm:BegPos)
     C
      *
      ** Get Field value
      *
     C                   EVAL      FldValBeg = BegPos + FldLen + 1
     C                   EVAL      FldValEnd = EndPos - FldValBeg
      *
      ** Include remaining blanks
      *
     C                   EVAL      RDETAIL=%Trim(RDETAIL)
     C                             + %Subst(TransParm:FldValBeg:FldValEnd)
     C

     C                   IF        RDETAIL <> *BLANKS
     C                   SELECT
     C     WRCAPGM       WHENEQ    'GLINTC'
     C                   EXSR      SrGLINTCParm
     C                   ENDSL
     C                   ENDIF
      *
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDIF
     C                   ENDIF
      *
     C*****APIMod        READE     APARCFL1                                                 MD058079
     C/EXEC SQL                                                                             MD058079
     C+ fetch next from BCursor into :APARCF                                                MD058079
     C/END-EXEC                                                                             MD058079
     C                   ENDDO
      *
     C/EXEC SQL                                                                             MD058079
     C+ close BCursor                                                                       MD058079
     C/END-EXEC                                                                             MD058079
                                                                                            MD058079
     C                   IF        ReadInd = 'Y'
     C                   IF        APIMod = 'CIRS' OR APIMod = 'SIRS'
     C                   EVAL      RundCons = AccDesc(2)
     C                   ELSE
     C                   EVAL      RundCons = AccDesc(1)
     C                   ENDIF
      *
      ** Call Accrued Interest calculation program
      *
     C                   SELECT
     C     WRCAPGM       WHENEQ    'GLINTC'
     C                   EXSR      SrGLINTCCall
     C                   IF        APIMod = 'CIRS' OR APIMod = 'SIRS'
     C                   MOVEL     WZIBEG2       WZIBEG
     C                   MOVEL     WZIEND2       WZIEND
     C                   MOVEL     WZICALC2      WZICALC
     C                   MOVEL     WZIAMT2       WZIAMT
     C                   MOVEL     WZIRATE2      WZIRATE
     C                   EVAL      RundCons = AccDesc(3)
     C                   EXSR      SrGLINTCCall
     C                   ENDIF
     C                   ENDSL
     C                   EVAL      ReadInd = *BLANKS
     C                   ENDIF
      *
      ** Write details of Accrued Interest
      *
     C                   IF        HeadInd <> 'Y'
     C                   Exsr      CheckOverflow
     C                   WRITE     HEADER1
     C                   EVAL      HeadInd = 'Y'
     C                   ENDIF
     C                   IF        RDETAIL <> *Blanks
     C                   Exsr      CheckOverflow
     C                   WRITE     DETAIL1
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDIF
     C                   EVAL      ReadInd = *BLANKS
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrExcSQLF - Subroutine to the declare and create aliases      *
      *             for files used in SQL statements in the program   *
      *                                                               *
      * Called by: *INZSR                                             *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrExcSQLF     BEGSR
      *
     C/EXEC SQL
     C+ CREATE ALIAS QTEMP/A FOR T_PEATRANS
     C/END-EXEC
      *
     C/EXEC SQL
     C+ CREATE ALIAS QTEMP/F FOR FCRREQPD
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrClsSQLF - Subroutine to drop aliases used for files used in *
      *             SQL statements in the program                     *
      *                                                               *
      * Called by: SrPrcesRpt                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrClsSQLF     BEGSR
      *
     C/EXEC SQL
     C+ DROP ALIAS QTEMP/A
     C/END-EXEC
      *
     C/EXEC SQL
     C+ DROP ALIAS QTEMP/F
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrGetUsrR - Subroutine to get User ID for Request of the      *
      *             report                                            *
      *                                                               *
      * Called by: *INZSR                                             *
      *                                                               *
      * Calls: SrExcSQLU, SrFtcSQLU, SrClsSQLU                        *
      *                                                               *
      *****************************************************************
     C     SrGetUsrR     BEGSR
      *
     C                   EXSR      SrExcSQLU
      *
     C                   EXSR      SrFtcSQLU
      *
     C                   EXSR      SrClsSQLU
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrExcSQL1 - Subroutine to execute SQL script for getting      *
      *             Level 1 field in the report                       *
      *                                                               *
      * Called by: SrPrcesLv1                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrExcSQL1     BEGSR
      *
      ** Reset SQL Statement
      *
     C                   EVAL      StmSQL1 = *BLANKS
      *
      ** Statement: SELECT
      *
     C                   EVAL      StmSQL1 = 'SELECT                          '+
     C                             ' A.TRAPI   ,                              '+
     C                             ' A.TRDLNO  ,                              '+
     C                             ' A.TRPARM  ,                              '+
     C                             ' A.TRTMST                                 '
      *
      ** Statement: FROM
      *
     C                   EVAL      StmSQL1 = %TRIM(StmSQL1) + ' FROM          '+
     C                             ' QTEMP/A                                  '
      *
      ** Statement: WHERE
      *
     C                   EVAL      StmSQL1 = %TRIM(StmSQL1) + ' WHERE' +
     C                             ' A.LOGID IN (SELECT MAX(A.LOGID)' +
     C                             ' FROM QTEMP/A' +
     C                             ' WHERE A.TRZONE = '''
     C                             + PZone + '''' +
     C                             ' AND A.TRAPI <> ''BITP''' +
     C                             ' GROUP BY A.TRDLNO)'
      *
      ** Statement: ORDER BY
      *
     C                   EVAL      StmSQL1 = %TRIM(StmSQL1) + ' ORDER BY      '+
     C                             ' A.TRAPI, A.TRDLNO                        '
      *
     C/EXEC SQL
     C+ PREPARE STATEMENT1
     C+   FROM :StmSQL1
     C/END-EXEC
      *
     C/EXEC SQL
     C+ DECLARE TRANS CURSOR
     C+   FOR STATEMENT1
     C/END-EXEC
      *
     C/EXEC SQL
     C+  OPEN TRANS
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrExcSQLU - Subroutine to execute SQL script for getting      *
      *             User ID for Request of the report                 *
      *                                                               *
      * Called by: SrGetUsrR                                          *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrExcSQLU     BEGSR
      *
      ** Reset SQL Statement
      *
     C                   EVAL      StmSQLU = *BLANKS
      *
      ** Statement: SELECT
      *
     C                   EVAL      StmSQLU = %TRIM(StmSQLU) + 'SELECT         '+
     C                             ' F.D5USRR                                 '
      *
      ** Statement: FROM
      *
     C                   EVAL      StmSQLU = %TRIM(StmSQLU) + ' FROM          '+
     C                             ' QTEMP/F                                  '
      *
      ** Statement: WHERE
      *
     C                   EVAL      StmSQLU = %TRIM(StmSQLU) + ' WHERE         '+
     C                             ' F.D5RQSQ = '''+PSeq+'''                  '
      *
     C/EXEC SQL
     C+ PREPARE STATEMENTU
     C+   FROM :StmSQLU
     C/END-EXEC
      *
     C/EXEC SQL
     C+ DECLARE RSU CURSOR
     C+   FOR STATEMENTU
     C/END-EXEC
      *
     C/EXEC SQL
     C+  OPEN RSU
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SRFtcSQL1 - Subroutine to fetch records of StmSQL1 for getting*
      *             Level 1 field in the report                       *
      *                                                               *
      * Called by: SrPrcesLv1                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SRFtcSQL1     BEGSR
      *
     C/EXEC SQL
     C+  FETCH NEXT FROM TRANS INTO :dsTRANS
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SRFtcSQLU - Subroutine to fetch records of StmSQLU for getting*
      *             User ID for Request of the report                 *
      *                                                               *
      * Called by: SrGetUsrR                                          *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SRFtcSQLU     BEGSR
      *
     C/EXEC SQL
     C+  FETCH NEXT FROM RSU INTO :DSRSU
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrClsSQL1 - Subroutine to close recordset of StmSQL1          *
      *                                                               *
      * Called by: SrPrcesLv1                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrClsSQL1     BEGSR
     C
     C/EXEC SQL
     C+  CLOSE TRANS
     C/END-EXEC
     C
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrClsSQLU - Subroutine to close recordset of StmSQLU          *
      *                                                               *
      * Called by: SrGetUsrR                                          *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrClsSQLU     BEGSR
     C
     C/EXEC SQL
     C+  CLOSE RSU
     C/END-EXEC
     C
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrOpenPrtF - Subroutine to open the main PRTF of the report   *
      *                                                               *
      * Called by: SrPrcesRpt                                         *
      *                                                               *
      * Calls: SrRCFP1                                                *
      *                                                               *
      *****************************************************************
     C     SrOpenPrtF    BEGSR
      *
      ** Open and register P1 report via RCF
      *
     C                   IF        NOT %OPEN(AP001002P1)
      *
     C                   OPEN      AP001002P1
     C                   EXSR      SrRCFP1
     C                   WRITE     HEADP1
      *
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrClsPrtF - Subroutine to close the main PRTF or the report   *
      *                                                               *
      * Called by: SrPrcesRpt                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrClsPrtF     BEGSR
      *
      ** Close P1 and write trailer record format
      *
     C                   IF        %OPEN(AP001002P1)
      *
     C                   IF        OFLLN1 <= PRTLN1 + 3
     C                   WRITE     HEADP1
     C                   ENDIF
      *
     C                   WRITE     TRAILP1
     C                   CLOSE     AP001002P1
      *
     C                   ENDIF
     C
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrRCFP1 - Register the P1 Printer File via RCF                *
      *                                                               *
      * Called by: SrOpenPrtF                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrRCFP1       BEGSR
      *
     C                   IF        PSeq    = *BLANKS
     C                   EVAL      *IN50   = *ON
     C                   EVAL      PZSEnty = 'ALL'
     C                   ELSE
     C                   EVAL      *IN50   = *OFF
     C                   EVAL      PZSEnty = *BLANKS
     C                   ENDIF
      *
     C                   Z-ADD     SFNUM1        PZSNum
      *
     C                   CALL      'ZSFILE'
     C                   PARM      PSeq          PZSSeq
     C                   PARM                    PZSEnty
     C                   PARM      SFILE1        PZSFile
     C                   PARM                    PZSNum
     C                   PARM      *BLANK        PZSErr
      *
     C                   IF        PZSERR = 'Y'
     C                   EVAL      DBASE  = 2
     C                   EVAL      DBFILE = 'ZSFILE'
     C                   MOVE      PZSNUM        DBKEY
     C                   EVAL      Error = 'Y'
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrInitParm - Initialize calling program parameters            *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrInitParms   BEGSR
      *
     C                   SELECT
     C     WRCAPGM       WHENEQ    'GLINTC'
     C                   EXSR      SrGLINTCInit
     C                   ENDSL
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrGLINTCInit - Init GLINTC Parameters                         *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrGLINTCInit  BEGSR
      *
     C                   EVAL      WZIBEG   = 0
     C                   EVAL      WZIEND   = 0
     C                   EVAL      WZICALC  = 0
     C                   EVAL      WZIAMT   = 0
     C                   EVAL      WZIRATE  = 0
     C                   EVAL      WZIBEG2  = 0
     C                   EVAL      WZIEND2  = 0
     C                   EVAL      WZICALC2 = 0
     C                   EVAL      WZIAMT2  = 0
     C                   EVAL      WZIRATE2 = 0
     C                   EVAL      WZINTR   = 0
     C                   EVAL      ChkPos   = 0
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrGLINTCParm - Move GLINTC Parameters                         *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrGLINTCParm  BEGSR
      *
     C                   EVAL      ZFIELD = *BLANKS
     C                   SELECT
     C     RCAPGM        WHENEQ    '1'
     C                   EVAL      ZADIG = 5
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIBEG
     C     RCAPGM        WHENEQ    '2'
     C                   EVAL      ZADIG = 5
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIEND
     C     RCAPGM        WHENEQ    '3'
     C                   EVAL      ZADIG = 1
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZICALC
     C     RCAPGM        WHENEQ    '4'
     C                   EVAL      ZADIG = 15
     C                   EVAL      ZADEC = 0
     C                   EVAL      ChkPos = %SCAN('.':RDETAIL)
     C                   IF        ChkPos = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   ELSE
     C                   EVAL      ZFIELD = %SUBST(RDETAIL:1:ChkPos-1)
     C                   ENDIF
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIAMT
     C     RCAPGM        WHENEQ    '5'
     C                   EVAL      ZADIG = 4
     C                   EVAL      ZADEC = 7
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIRATE
     C     RCAPGM        WHENEQ    '11'
     C                   EVAL      ZADIG = 5
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIBEG2
     C     RCAPGM        WHENEQ    '12'
     C                   EVAL      ZADIG = 5
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIEND2
     C     RCAPGM        WHENEQ    '13'
     C                   EVAL      ZADIG = 1
     C                   EVAL      ZADEC = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZICALC2
     C     RCAPGM        WHENEQ    '14'
     C                   EVAL      ZADIG = 15
     C                   EVAL      ZADEC = 0
     C                   EVAL      ChkPos = %SCAN('.':RDETAIL)
     C                   IF        ChkPos = 0
     C                   MOVEL     RDETAIL       ZFIELD
     C                   ELSE
     C                   EVAL      ZFIELD = %SUBST(RDETAIL:1:ChkPos-1)
     C                   ENDIF
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIAMT2
     C     RCAPGM        WHENEQ    '15'
     C                   EVAL      ZADIG = 4
     C                   EVAL      ZADEC = 7
     C                   MOVEL     RDETAIL       ZFIELD
     C                   EXSR      ZALIGN
     C                   MOVE      ZFIELD        WZIRATE2
     C                   ENDSL
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrGLINTCCall - Call GLINTC Program                            *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrGLINTCCall  BEGSR
      *
     C                   CALL      'GLINTC'
     C                   PARM                    WZIBEG
     C                   PARM                    WZIEND
     C                   PARM                    WZICALC
     C                   PARM                    WZIAMT
     C                   PARM                    WZIRATE
     C                   PARM                    WZINTR
      *
     C                   IF        HeadInd <> 'Y'
     C                   Exsr      CheckOverflow
     C                   WRITE     HEADER1
     C                   EVAL      HeadInd = 'Y'
     C                   ENDIF
      *
     C**********         MOVE      WZINTR        DSWZINTR                                  AR1007705
     C**********         MOVE      DSWZINTR      PFLD15                                    AR1007705
     C**********         EVAL      PDECS = 9                                               AR1007705
     C                   Z-ADD(H)  WZINTR        WCalInt                                   AR1007705
     C                   MOVE      WCalInt       PFLD15                                    AR1007705
     C                   EVAL      PDECS = 2                                               AR1007705
     C                   CALL      'ZSEDIT'
     C                   PARM                    PFLD15
     C                   PARM                    PDECS
     C                   PARM      'J'           PCODE
     C                   PARM      *BLANKS       POUT21
      *
     C                   IF        APIMod = 'CIRS' OR APIMod = 'SIRS'
     C                   EVAL      RDETAIL=%Trim(RDETAIL) + '  ' +
     C                              %Trim(RundCons) + ' ' +
     C                              %Trim(POUT21)
     C                   ELSE
     C                   EVAL      RDETAIL=%Trim(RDETAIL) +
     C                              %Trim(RundCons) + ' ' +
     C                              %Trim(POUT21)
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrPrcesBITH    - Subroutine to get BITH Detail                *
      *                                                               *
      * Called by: SrPrcesHdr                                         *
      *                                                               *
      * Calls: SrExcSQL2, SrFtcSQL12 SrClsSQL12 SrPrcesLv2            *
      *                                                               *
      *****************************************************************
     C     SrPrcesBITH   BegSR
      *
     C                   IF        APIModule = 'BITH'
      *
      ** Excecute SQL query 2
      *
     C                   EXSR      SrExcSQL2
      *
      ** Fetch first recordset of SQL query 2
      *
     C                   EXSR      SrFtcSQL2
     C                   DOW       SQLCODE = *ZEROS
      *
      ** Process Detail of the Report
      *
     C                   EVAL      dsTRANS = dsTRANS2
     C                   EXSR      SrPrcesDtl
      *
      ** Fetch next recordset of SQL query 1
      *
     C                   EXSR      SrFtcSQL2
     C                   EVAL      RDETAIL = *Blanks
     C                   ENDDO
      *
     C                   EndIf
      *
      ** Close SQL query 2
      *
     C                   EXSR      SrClsSQL2
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrExcSQL2 - Subroutine to execute SQL script for getting      *
      *             Level 2 field in the report                       *
      *                                                               *
      * Called by: SrGetesLv2                                         *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrExcSQL2     BEGSR
      *
      ** Reset SQL Statement
      *
     C                   EVAL      StmSQL2 = *BLANKS
      *
      ** Statement: SELECT
      *
     C                   EVAL      StmSQL2 = 'SELECT' +
     C                             ' A.TRAPI,' +
     C                             ' A.TRDLNO,' +
     C                             ' A.TRPARM,' +
     C                             ' A.TRTMST'
      *
      ** Statement: FROM
      *
     C                   EVAL      StmSQL2 = %TRIM(StmSQL2) + ' FROM' +
     C                             ' QTEMP/A'
      *
      ** Statement: WHERE
      *
     C                   EVAL      WTransRefHdr = %SUBST(TRANSREF:1:3)
     C                   EVAL      StmSQL2 = %TRIM(StmSQL2) + ' WHERE' +
     C                             ' A.LOGID IN (SELECT MAX(A.LOGID)' +
     C                             ' FROM QTEMP/A' +
     C                             ' WHERE A.TRZONE = '''
     C                             + PZone + '''' +
     C                             ' AND A.TRAPI = ''BITP''' +
     C                             ' AND SUBSTR(A.TRDLNO,1,3) = '''
     C                             + WTransRefHdr + '''' +
     C                             ' GROUP BY A.TRDLNO)'
      *
      ** Statement: ORDER BY
      *
     C/EXEC SQL
     C+ PREPARE STATEMENT2
     C+   FROM :StmSQL2
     C/END-EXEC
      *
     C/EXEC SQL
     C+ DECLARE TRANS2 CURSOR
     C+   FOR STATEMENT2
     C/END-EXEC
      *
     C/EXEC SQL
     C+  OPEN TRANS2
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SRFtcSQL2 - Subroutine to fetch records of StmSQL2 for getting*
      *             Level 2 field in the report                       *
      *                                                               *
      * Called by: SrPrcesBITH                                        *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SRFtcSQL2     BEGSR
      *
     C/EXEC SQL
     C+  FETCH NEXT FROM TRANS2 INTO :dsTRANS2
     C/END-EXEC
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SrClsSQL2 - Subroutine to close recordset of StmSQL2          *
      *                                                               *
      * Called by: SrPrcesBITH                                        *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C     SrClsSQL2     BEGSR
     C
     C/EXEC SQL
     C+  CLOSE TRANS2
     C/END-EXEC
     C
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *INZSR - Program Initialisation routine                       *
      *                                                               *
      * Called by: Implicitly on program activation                   *
      *                                                               *
      * Calls: SrExcSQLF, SrGetUsrR                                   *
      *                                                               *
      *****************************************************************
     C     *INZSR        BEGSR
      *
      ** Program Entry Parameter
      *
     C     *ENTRY        PLIST
     C                   PARM                    PSeq
     C                   PARM                    PLevl
     C                   PARM                    PEnty
      *
      ** Initialize program name
      *
     C                   EVAL      DBPGM = 'AP001002'
      *
      ** Access Bank Details
      *
     C                   CALL      'AOBANKR0'
     C                   PARM      *BLANKS       PRetCode
     C                   PARM      '*FIRST '     POption
     C     SDBANK        PARM      SDBANK        DSFDY
      *
      ** Database Error
      *
     C                   IF        PRetCode <> *BLANKS
     C     *LOCK         IN        LDA
     C                   EVAL      DBASE  = 1
     C                   EVAL      DBFILE = 'SDBANKPD'
     C                   EVAL      DBKEY  = POption
     C                   OUT       LDA
     C                   EVAL      Error = 'Y'
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** Get Zone
      *
     C                   CALL      'GOGETZONE'
     C                   PARM      *BLANKS       PRetCode
     C                   PARM                    PErms
     C                   PARM      'N'           PFChk
     C                   PARM      *BLANKS       PZone
     C                   PARM                    PShtc
     C                   PARM                    PRdnb
     C                   PARM                    PDnwd
     C                   PARM                    PCcy
     C                   PARM                    PNjob
      *
      ** Excecute SQL query F - Files Declaration
      *
     C                   EXSR      SrExcSQLF
      *
      ** Get user ID for Request
      *
     C                   EXSR      SrGetUsrR
     C                   IF        SU_USID = *BLANKS
     C                   EVAL      SU_USID = JBUSR
     C                   ENDIF
      *
      ** Clear temporary DS for recordsets
      *
     C                   EVAL      dsTRANSz = *BLANKS
      *
      ** Access Dealing ICD Details                                                       MD058079
      *                                                                                   MD058079
     C                   CALL      'AODEALR0'                                             MD058079
     C                   PARM      '*DBERR '     @RTCD             7                      MD058079
     C                   PARM      '*FIRST '     @OPTN             7                      MD058079
     C     SDDEAL        PARM      SDDEAL        DSFDY                                    MD058079
      *                                                                                   MD058079
     C                   ENDSR
      *********************************************************************
      /EJECT
      *********************************************************************
      *                                                                   *
      * CheckOverflow - Check overflow line                               *
      *                                                                   *
      *********************************************************************
     C     CheckOverflow BEGSR
      *
     C                   IF        OFLLN1 <= PRTLN1 + 3
     C                   WRITE     HEADP1
     C                   ENDIF
      *
     C                   ENDSR
      *********************************************************************
      /EJECT
      *********************************************************************
      *                                                                   *
      * *PSSR  - Program exception error routine                          *
      *          Called automatically if a program error occurs,          *
      *          or directly by the program code using EXSR.              *
      *          This subroutine DUMPs the program just once.             *
      *                                                                   *
      * Called by: (**calling routines**)                                 *
      *                                                                   *
      * Calls: None                                                       *
      *                                                                   *
      *********************************************************************
     C     *PSSR         BEGSR
      *
     C                   IF        WRun = *BLANK
     C                   EVAL      WRun = 'Y'
     C                   DUMP
     C                   ENDIF
      *
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
      *
     C                   RETURN
      *
     C                   ENDSR
      ********************************************************************
     C/COPY ZSRSRC,ZALIGNZ2LE
      /EJECT
     C/COPY ZSRSRC,ZEDITZ2LE
      ** Amended TabMod/TabDes: change TabMod from SEBS to BUYS                            AR1001631
      ** Amended TabMod/TabDes: correction on TabDes description for OTCO                  AR1002981
**  CPY@
(c) Finastra International Limited 2012
** TabMod/TabDes
AMADACCOUNT MAINTENANCE
BITHCORRECTIVE BATCH ITEMS
CACFCAPS/COLLARS/FLOORS
CIRSCROSS CURRENCY IRS
CLIPLOANS AND PARTICIPATIONS PURCHASED AND SOLD
CUSXCUSTOMER EXCHANGES
DEAMDEAL AMENDMENTS
DPMVDEPOT MOVEMENTS
DPWIDEPOT WALK IN
DPWODEPOT WALK OUT
EXTREXCHANGE TRADED TRANSACTIONS
FAMDFACILITY AMENDMENTS
FCIPFACILITIES
FEEMLENDING FEES
FESTFEE SETTLEMENTS
FIDTFIDUCIARY DEALS
FOMIMARKET INSTRUMENT MAINTENANCE
FRA FORWARD RATE AGREEMENTS
FUNDINTERNAL FUNDED DEALS
FXDLFOREIGN EXCHANGE
INTCINTERNAL CONTRACTS
IPAYINCOMING PAYMENTS
LDNILOANS, DEPOSITS & NAs ISSUED
LERILENDING ROLLOVERS
LOAMLOAN AMENDMENTS
MAPYMANUAL REPAYMENTS
NASPNEGOTIABLE ASSETS PURCHASED
NASSNEGOTIABLE ASSETS SOLD
OPAYOUTGOING PAYMENTS
OTCCCURRENCY OVER THE COUNTER
OTCONON-CURRENCY OVER THE COUNTER                                                          AR1002981
RATMRETAIL ACCOUNT TRANSFER
REPOREPOS, PLEDGE DEPOSITS AND BOND LENDING INPUT
RODLDEALING ROLLOVERS
RPSCREPAYMENT SCHEDULES
BUYSBUY / SELL BACK                                                                        AR1001631
SIRSSINGLE CURRENCY IRS
TRADSECURITIES TRADES
** AccDesc
Accrued Interest:
Our Accrued Interest:
Their Accrued Interest:
