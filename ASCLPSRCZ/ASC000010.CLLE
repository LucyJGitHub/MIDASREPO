/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('AS Hedge DL A/C Key Generation Control')              */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Accounting Standards Module                      */
/*                                                                   */
/*       ASC000010 - AS Hedge DL A/C Key Generation Control          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2002           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. 221416             Date 17Sep03              */
/*       Prev Amend No. CAS004  *CREATE    Date 26Jun02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       221416 - Should backup ASHTRNPD                             */
/*       CAS004 - Hedge Accounting Phase A                           */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)
 
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&DMLIB) TYPE(*CHAR) LEN(7) VALUE('  DMLIB')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2002')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('ASC000010 - Hedge DL A/C Key +
                          Generation Control') TOMSGQ(MRUNQ)
 
             CHGJOB     SWS(XXXXXX00)
 
/* Create data area LDA */
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DMLIB 1 2)) VALUE(&SYSID)
 
/* Call program CB0160 to get value of restart indicator */
 
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
 
/* If it is not a restart */
 
             IF         COND(&STAT *NE 'Y') THEN(DO)
                  DLTF       FILE(XDEALSDG)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDC)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDD)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDB)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDKEYSDP)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDKEYSZZ)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XASHTRNPD)                                              /*221416*/
                  MONMSG     MSGID(CPF2105)                                               /*221416*/
 
/* Create a backup for DEALSDG, DEALSDC, DEALSDD, DKEYSDP and DKEYSZZ */
 
                  CPYF       FROMFILE(DEALSDG) TOFILE(&DPLIB/XDEALSDG) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(DEALSDC) TOFILE(&DPLIB/XDEALSDC) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(DEALSDD) TOFILE(&DPLIB/XDEALSDD) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(DEALSDB) TOFILE(&DPLIB/XDEALSDB) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(DKEYSDP) TOFILE(&DPLIB/XDKEYSDP) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(DKEYSZZ) TOFILE(&DPLIB/XDKEYSZZ) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(ASHTRNPD) TOFILE(&DPLIB/XASHTRNPD) +
                             CRTFILE(*YES)                                                /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
/* If it is a restart */
 
             IF         COND(&STAT *EQ 'Y') THEN(DO)
                  CPYF       FROMFILE(XDEALSDG) TOFILE(&DMLIB/DEALSDG) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XDEALSDC) TOFILE(&DMLIB/DEALSDC) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XDEALSDD) TOFILE(&DMLIB/DEALSDD) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XDEALSDB) TOFILE(&DMLIB/DEALSDB) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XDKEYSDP) TOFILE(&DPLIB/DKEYSDP) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XDKEYSZZ) TOFILE(&DPLIB/DKEYSZZ) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(XASHTRNPD) TOFILE(&DMLIB/ASHTRNPD) +
                             MBROPT(*REPLACE)                                             /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
             CHGVAR     VAR(&STAT) VALUE('Y')
 
/* Call CB0150 to update restart indicator */
 
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
 
/* Call Hedge DL A/C Key Generation Control Program */
 
             CALL       PGM(AS000010)
 
/* If no error occured in the program */
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
 
/* Call CB0150 to update restart indicator */
 
                  CHGVAR     VAR(&STAT) VALUE('N')
                  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
                  DLTF       FILE(XDEALSDG)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDC)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDD)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDEALSDB)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDKEYSDP)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XDKEYSZZ)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XASHTRNPD)                                              /*221416*/
                  MONMSG     MSGID(CPF2105)                                               /*221416*/
             ENDDO
 
/* Database error processing */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  CPYF       FROMFILE(&DPLIB/XDEALSDG) TOFILE(DEALSDG) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XDEALSDC) TOFILE(DEALSDC) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XDEALSDD) TOFILE(DEALSDD) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XDEALSDB) TOFILE(DEALSDB) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XDKEYSDP) TOFILE(DKEYSDP) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XDKEYSZZ) TOFILE(DKEYSZZ) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XASHTRNPD) TOFILE(ASHTRNPD) +
                             MBROPT(*REPLACE)                                             /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
             GOTO       CMDLBL(END)
 
ABNOR:
 
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                        ASC000010 ended abnormally - see job log') +
                        TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
END:
 
             ENDPGM
