/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('AS Hedge LE A/C Key Generation Control')              */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Accounting Standards Module                      */
/*                                                                   */
/*       ASC000011 - AS Hedge LE A/C Key Generation Control          */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. CLE134             Date 01Aug12              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      BUG8780            Date 25Oct05              */
/*                      221416             Date 17Sep03              */
/*                      CAS004  *CREATE    Date 26Jun02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CLE134 - Past Due Call Loan Processing (Recompile)          */
/*       BUG8780 - ASC000011 failed due to dberr in file SDCLNDPD    */
/*                 Applied fix 232052                                */
/*       221416 - Should backup ASHTRNPD                             */
/*       CAS004 - Hedge Accounting Phase A                           */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)
 
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)                                    /*BUG8780*/
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)                                    /*BUG8780*/
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)                                   /*BUG8780*/
             DCL        VAR(&BGCSLN) TYPE(*CHAR) LEN(1)                                  /*BUG8780*/
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('ASC000011 - Hedge LE A/C Key +
                          Generation Control') TOMSGQ(MRUNQ)
 
             CHGJOB     SWS(XXXXXX00)
 
/**/                                                                                     /*BUG8780*/
/* Start of BUG8780 */                                                                   /*BUG8780*/
/**/                                                                                     /*BUG8780*/
             CHGVAR     VAR(&RTCD) VALUE('       ')                                      /*BUG8780*/
             CHGVAR     VAR(&OPTN) VALUE('*FIRST ')                                      /*BUG8780*/
/*  Access PF/SDMMODPD to determine whether LE module is on */                           /*BUG8780*/
             CALL       PGM(AOMMODR0) PARM(&RTCD &OPTN &FMT)                             /*BUG8780*/
/*  Database error handling */                                                           /*BUG8780*/
             IF         COND(&RTCD *NE '       ') THEN(DO)                               /*BUG8780*/
                SNDPGMMSG  MSG('ERROR ON ACCESS TO ICD FILE SDMMODPD') +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ) +
                          MSGTYPE(*INFO)                                                 /*BUG8780*/
                GOTO       CMDLBL(ABNOR)                                                 /*BUG8780*/
             ENDDO                                                                       /*BUG8780*/
/* Customer Lending must be turned on to proceed                                         /*BUG8780*/
             CHGVAR     VAR(&BGCSLN) VALUE(%SST(&FMT 28 1))                              /*BUG8780*/
             IF         COND(&BGCSLN *EQ 'N') THEN(GOTO CMDLBL(END))                     /*BUG8780*/
/**/                                                                                     /*BUG8780*/
/* End of BUG8780 */                                                                     /*BUG8780*/
/**/                                                                                     /*BUG8780*/
/* Create data area LDA */
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)
 
/* Call program CB0160 to get value of restart indicator */
 
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
 
/* If it is not a restart */
 
             IF         COND(&STAT *NE 'Y') THEN(DO)
                  DLTF       FILE(XCLOANCL)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XLKEY1DP)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XLKEY1ZZ)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XASHTRNPD)                                              /*221416*/
                  MONMSG     MSGID(CPF2105)                                               /*221416*/
 
/* Create a backup for CLOANCL, LKEY1DP and LKEY1ZZ */
 
                  CPYF       FROMFILE(CLOANCL) TOFILE(&DPLIB/XCLOANCL) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(LKEY1DP) TOFILE(&DPLIB/XLKEY1DP) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(LKEY1ZZ) TOFILE(&DPLIB/XLKEY1ZZ) +
                             CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(ASHTRNPD) TOFILE(&DPLIB/XASHTRNPD) +
                             CRTFILE(*YES)                                                /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
/* If it is a restart */
 
             IF         COND(&STAT *EQ 'Y') THEN(DO)
                  CPYF       FROMFILE(&DPLIB/XCLOANCL) TOFILE(CLOANCL) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XLKEY1DP) TOFILE(LKEY1DP) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XLKEY1ZZ) TOFILE(LKEY1ZZ) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XASHTRNPD) TOFILE(ASHTRNPD) +
                             MBROPT(*REPLACE)                                             /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
             CHGVAR     VAR(&STAT) VALUE('Y')
 
/* Call CB0150 to update restart indicator */
 
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
 
/* Call Hedge LE A/C Key Generation Control Program */
 
             CALL       PGM(AS000011)
 
/* If no error occured in the program */
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
 
/* Call CB0150 to update restart indicator */
 
                  CHGVAR     VAR(&STAT) VALUE('N')
                  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
                  DLTF       FILE(XCLOANCL)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XLKEY1DP)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XLKEY1ZZ)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XASHTRNPD)                                              /*221416*/
                  MONMSG     MSGID(CPF2105)                                               /*221416*/
             ENDDO
 
/* Database error processing */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  CPYF       FROMFILE(&DPLIB/XCLOANCL) TOFILE(CLOANCL) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XLKEY1DP) TOFILE(LKEY1DP) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XLKEY1ZZ) TOFILE(LKEY1ZZ) +
                             MBROPT(*REPLACE)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(&DPLIB/XASHTRNPD) TOFILE(ASHTRNPD) +
                             MBROPT(*REPLACE)                                             /*221416*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                               /*221416*/
             ENDDO
 
             GOTO       CMDLBL(END)
 
ABNOR:
 
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                        ASC000011 ended abnormally - see job log') +
                        TOMSGQ(MOPERQ)
              MONMSG     MSGID(CPF0000 MCH0000)
 
END:
 
             ENDPGM
