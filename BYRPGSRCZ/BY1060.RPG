     H        1                                                           BY1060
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas BoE Composite Currencies Maintenance')           *
      *****************************************************************
      *                                                               *
      *  Midas - Bank of England                                      *
      *                                                               *
      *  BY1060 - Composite Currencies Maintenance                    *
      *                                                               *
      *  Function:  This program allows the user to display, amend,   *
      *  insert or delete Composite Currencies of a given currency    *
      *
      *  Called By: mmCnnnn - (program name)                          *
      *                                                               *
      *  (c) Finastra International Limited 1997                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Midas Plus 1.4 Base ------------------------------------------*
      *  Prev Amend No. BUG7505            Date 15Jun05               *
      *                 BUG7371            Date 01Jun05               *
      *                 LLN022             Date 24Jan05               *
      *                 122382             Date 03Oct97               *
      *                 122067             Date 28AUG97               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  BUG7505- "Each currency may only be entered once" should     *
      *            not be written in the msgf if the ccy is not       *
      *            duplicated.                                        *
      *  BUG7371- Currency codes defaults to composite currency when  *
      *           not entered                                         *
      *   LN022 - BOE Upgrade to MidasPlus.                           *
      *  122382 - Message Subfile Indicator for end of subfile        *
      *           is displayed - **RECOMPILED** since change made     *
      *           to DSPF                                             *
      *  122067 - Question mark processing does not work              *
      *                                                               *
      *****************************************************************
      *  Indicators Used:                                             *
      *                                                               *
      *  03 - F3,  exit program                                       *
      *  10 - F10, delete                                             *
      *  12 - F12, previous screen                                    *
      *  31 - For action code 'I' (Insert)                            *
      *  32 - For action code 'A' (Amend)                             *
      *  33 - For action code 'D' (Delete)                            *
      *  34 - For action code 'E' (Enquire)                           *
      *  40 - Error highlighter for 'Action Code' field               *
      *  41 - Error highlighter for 'Currency' field                  *
      *  42 to 81 - Error highlighters for all detail screen fields   *
      *  85 - Reorder fields to remove blanks inbetween               *
      *  87,88 - General indicators in #LEDIT subroutine              *
      *  89 - General purpose indicator                               *
      *                                                               *
      *****************************************************************
      * File description for files defined
     FBYCCCYPPUF  E           K        DISK         KINFSR *PSSR A
     F                                              KINFDS INFDS1
      *
      * File description for files defined
     FBY1060DFCF  E                    WORKSTN      KINFSR *PSSR
     F                                              KINFDS INFDS#
      *
      /EJECT
      *
      *  Array containing Copyright statement
     E                    CPY@    1   1 80
     E                    CCYN       20  3               Currency array
     E                    PCTN       20  5               Percentage array
     E                    PCT        20  5               Percentage array
     E/COPY ZSRSRC,ZALIGNZ1
     E*
      *
      /SPACE 3
      *
      *  Constant name for message file
     I              'GBBYUSRMSG'          C         ULMGFN
      *
      ** Data Structure using Currency format
     ISDCURR    E DSSDCURRPD
      *
      ** Data Structure using Midas User format
     IMUSER     E DSMUSERDD
     I*
     I** Run Date Data Area
     IRUNDAT      DS                             13
     I                                       13  13 MBIN
      *
      ** Local data area for database error details
     ILDA       E DSLDA                         256
      *
      ** Data Structure using Bank file format
     ISDBANK    E DSSDBANKPD
      *
      * File information data structure (for database files only)
     IINFDS1    E DSY2I1DSP
      *
      * Display file information data structure  (for display files only)
     IINFDS#    E DSY2I#DSP
      *
      **DS to individualise currencies
     ICRNCY       DS
     I                                        1  60 CCYA
     I                                        1   3 LCCY1
     I                                        4   6 LCCY2
     I                                        7   9 LCCY3
     I                                       10  12 LCCY4
     I                                       13  15 LCCY5
     I                                       16  18 LCCY6
     I                                       19  21 LCCY7
     I                                       22  24 LCCY8
     I                                       25  27 LCCY9
     I                                       28  30 LCCY10
     I                                       31  33 LCCY11
     I                                       34  36 LCCY12
     I                                       37  39 LCCY13
     I                                       40  42 LCCY14
     I                                       43  45 LCCY15
     I                                       46  48 LCCY16
     I                                       49  51 LCCY17
     I                                       52  54 LCCY18
     I                                       55  57 LCCY19
     I                                       58  60 LCCY20
     I*
     I** DS to individualise percentages
     IPRCNT       DS
     I                                        1 100 PCTA
     I                                        1   5 LPCT1
     I                                        6  10 LPCT2
     I                                       11  15 LPCT3
     I                                       16  20 LPCT4
     I                                       21  25 LPCT5
     I                                       26  30 LPCT6
     I                                       31  35 LPCT7
     I                                       36  40 LPCT8
     I                                       41  45 LPCT9
     I                                       46  50 LPCT10
     I                                       51  55 LPCT11
     I                                       56  60 LPCT12
     I                                       61  65 LPCT13
     I                                       66  70 LPCT14
     I                                       71  75 LPCT15
     I                                       76  80 LPCT16
     I                                       81  85 LPCT17
     I                                       86  90 LPCT18
     I                                       91  95 LPCT19
     I                                       96 100 LPCT20
      *
      *
     IPSDS       SDS
     I                                     *PROGRAM ULPGMN
     I                                      244 253 ULWSID
     I                                      254 263 ULUSER
      ** Program Status Data Structure
      *
      *
      /EJECT
      *****************************************************************
      * Main Processing                                               *
      *                                                               *
      * Calls: SR/#LMAIN - Detail Processing                          *
      *        SR/#LTERM - Termination Processing                     *
      *****************************************************************
      *
      *  Main Processing
     C                     EXSR #LMAIN
      *
      *  Termination Processing
     C                     EXSR #LTERM
      *
      /EJECT
      *****************************************************************
      * #LMAIN - Main Detail Processing                               *
      *                                                               *
      * Called by:  Main Processing                                   *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LMAIN    BEGSR                           ** SR/#LDETL**
      *
      *  Process initial screen until CF03 is pressed
     C           *IN03     DOWEQ*OFF
      *
      *   Display screen
     C                     WRITE#MSGCTL
     C                     EXFMTBY1060F1
      *
      *   Clear message subfile
     C                     EXSR #LCLMG
      *
      *   CF03 - Exit program
     C           *IN03     IFEQ *ON
     C                     EXSR #LTERM
     C                     ENDIF
      *
      *   Validate initial screen details
     C                     EXSR #LVALI
      *
      *   Initial screen valid
     C           ULVALI    IFEQ 'Y'
      *
      *    Display and validate detail screen
     C                     EXSR #LDETL
      *
      *    Detail screen valid
     C           ULVALD    IFEQ 'Y'
      *
      *    Update database
     C                     EXSR #LUPDT
      *
      *    Reset initial screen if update sucessful
     C           ULUPDI    IFEQ 'Y'
     C                     MOVE *BLANKS   L#ACTN
     C                     MOVE *BLANKS   L#CCCY
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LVALI - Validate Initial Screen                              *
      *                                                               *
      * Called by:  SR/#LMAIN - Main Detail Processing                *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LVALI    BEGSR                           ** SR/#LVALI**
      *
      *   Reset work fields and indicators
     C                     MOVE 'Y'       ULVALI
     C                     MOVEA'00000'   *IN,31
     C                     MOVEA'00'      *IN,40
      *
      ** Validate Action Code
     C           L#ACTN    IFNE 'I'
     C           L#ACTN    ANDNE'A'
     C           L#ACTN    ANDNE'D'
     C           L#ACTN    ANDNE'E'
     C                     MOVE 'BYM0051' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE *ON       *IN40
     C                     MOVE 'N'       ULVALI
     C                     ENDIF
      *
      ** Validate Currency Code
     C                     CALL 'AOCURRR0'                 Access Program
     C                     PARM '*BLANKS' @RTCD   7        Return Code
     C                     PARM '*KEY   ' @OPTN   7        Option
     C                     PARM L#CCCY    CKEY    3        Currency code
     C                     PARM           SDCURR           Format
      *
      ** Currency not found
     C           @RTCD     IFEQ '*NRF'
     C                     MOVE 'BYM0094' ULMSID
     C                     MOVE *ON       *IN41
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALI
     C                     ENDIF
      *                                                                   122067
      ** No currency selected                                             122067
     C           @RTCD     IFEQ '*NOSEL'                                  122067
     C                     MOVEL*BLANKS   L#CCCY                          122067
     C                     MOVEL'N'       ULVALI                          122067
     C                     ENDIF                                          122067
      *
      ** Error in AOCURRR0
     C           @RTCD     IFNE *BLANKS
     C           @RTCD     ANDNE'*NOSEL'                                  122067
     C           @RTCD     ANDNE'*NRF'
     C           *LOCK     IN   LDA
     C                     MOVEL'BY1060'  DBPGM            ************
     C                     MOVELCCYN,X    DBKEY     P      * DBERR 02 *
     C                     MOVEL'SDCURRL1'DBFILE           ************
     C                     Z-ADD2         DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Move selected currency to screen field                           122067
     C           A6CYCD    IFNE *BLANKS                                   122067
     C           @RTCD     ANDEQ*BLANKS
     C                     MOVELA6CYCD    L#CCCY                          122067
     C                     ENDIF                                          122067
      *
      *   Validate action code and currency code
     C           ULVALI    IFEQ 'Y'
     C           L#CCCY    CHAINBYCCCYPP            N95
      *
      *    If action is Insert record must not exist
     C           L#ACTN    IFEQ 'I'
     C           *IN95     ANDEQ*OFF
     C           L6RECI    ANDEQ'D'                                                           LLN022
     C                     MOVE 'BYM0075' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALI
     C                     ENDIF
      *
      *    If action is not Insert record must exist
     C           L#ACTN    IFNE 'I'
     C           *IN95     ANDEQ*ON
     C                     MOVE 'BYM0076' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALI
     C                     ENDIF
      *
      **   Record must not be deleted
     C           L#ACTN    IFNE 'I'
     C           *IN95     ANDEQ*OFF
     C           L6CHTP    ANDEQ'D'
     C                     MOVE 'BYM0086' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALI
     C                     ENDIF
      *
      *
      *   Initial screen is valid
     C           ULVALI    IFEQ 'Y'
      *
      ** Save Last Change Time and Date
     C                     MOVE L6LCD     ULLCD   50
     C                     MOVE L6UTIM    ULUTIM  60
      *
      *   Set screen conditioning indicator
     C                     SELEC
     C           L#ACTN    WHEQ 'I'                        Insert
     C                     MOVE *ON       *IN31
     C           L#ACTN    WHEQ 'A'                        Amend
     C                     MOVE *ON       *IN32
     C           L#ACTN    WHEQ 'D'                        Delete
     C                     MOVE *ON       *IN33
     C           L#ACTN    WHEQ 'E'                        Enquire
     C                     MOVE *ON       *IN34
     C                     ENDSL
      *
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LDETL - Display and Validate Detail Screen                   *
      *                                                               *
      * Called by:  SR/#LMAIN - Main Processing                       *
      *                                                               *
      * Calls: #LVALD, #LCLMG                                        *
      *****************************************************************
      *
     C           #LDETL    BEGSR                           ** SR/#LDETL**
      *
      *  Reset work indicators and indicators
     C                     MOVE 'N'       ULVALD
      *
      *  Reset screen fields prior to display
     C                     EXSR #LRSET
      *
      *  Process detail until valid  or previous screen requested
     C           ULVALD    DOWEQ'N'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
      *
      *   Display detail screen
     C                     WRITE#MSGCTL
     C                     EXFMTBY1060F2
      *
      *   Clear message subfile
     C                     EXSR #LCLMG
      *
      **  CF03 - Exit program
     C           *IN03     IFEQ *ON
     C                     EXSR #LTERM
     C                     ENDIF
      *
      **  CF12 - Previous screen requested
      **         Clear initial screen for redisplay
     C           *IN12     IFEQ *ON
     C                     MOVE *BLANKS   L#ACTN
     C                     MOVE *BLANKS   L#CCCY
     C                     ENDIF
      *
      ** CF10 - Delete details. Enter update subroutine without
      ** entering validation subroutine
     C           *IN10     IFEQ *ON
     C                     MOVE 'Y'       ULVALD
     C                     ENDIF
      *
      ** Validate detail screen if action is either 'I - Insert'
      ** or 'A - Amend'
     C           L#ACTN    IFEQ 'I'
     C           L#ACTN    OREQ 'A'
     C                     EXSR #LVALD
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LRSET - Set Up Detail Screen Prior to Display                *
      *                                                               *
      * Called by:  SR/#LDETL - Display Detail Screen                 *
      *                                                               *
      * Calls: #LSNMG                                                 *
      *****************************************************************
      *
     C           #LRSET    BEGSR                           ** SR/#LRSET**
      *
      *  Reset screen indicators
     C                     MOVEA*ALL'0'   *IN,40
     C                     MOVE *OFF      *IN10
     C                     MOVE *OFF      *IN12
      *
      **  Reset screen fields and arrays
     C                     MOVE *BLANKS   ULPTOT
     C                     MOVE *BLANKS   CCYA
     C                     MOVE *BLANKS   PCTA
      *
      **   Load data for amend, enquire and delete
     C           L#ACTN    IFNE 'I'
     C                     MOVE L6CCYA    CCYA             Currencies
     C                     MOVE L6PCTA    PCTA             Percentages
      *
      **  Move physical file fields into arrays
     C                     MOVEACCYA      CCYN
     C                     MOVEAPCTA      PCTN
      *
      **  Edit percentage fields
     C                     Z-ADD1         Y
     C           Y         DOWLE20
     C           PCTN,Y    IFNE *BLANKS
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE PCTN,Y    ZFIELD
     C                     EXSR #LEDIT
     C                     MOVE ZFIELD    PCTN,Y
     C                     ENDIF
     C                     ADD  1         Y
     C                     ENDDO
      *
      *
     C                     MOVEAPCTN      PCTA
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LVALD - Validate Detail Screen                              *
      *                                                               *
      * Called by:  SR/#LDETL - Display Detail Screen                 *
      *                                                               *
      * Calls: #LSNMG                                                 *
      *****************************************************************
      *
     C           #LVALD    BEGSR                           ** SR/#LVALD**
      *
      *   Reset work fields and indicators
     C                     MOVE 'Y'       ULVALD
     C                     MOVEA*ALL'0'   *IN,40
     C                     MOVE *BLANKS   PCT
      *
      **  Reset percentage total field
     C                     MOVE *BLANKS   ULPTOT
      *
      **  Move display file fields into arrays
     C                     MOVEACCYA      CCYN
     C                     MOVEAPCTA      PCTN
      *
      **  Perform validation on all 20 CCY and PCT fields thru' loop
     C                     DO   20        X       20
      *
      **#LCURR validate if at least one field has an entry.
     C           CCYN,X    IFNE *BLANKS
     C           PCTN,X    ORNE *BLANKS
      *
      ** The 20 currency fields defined in this program use error
      ** indicators 42, 44, 46 etc. The 20 percentage fields use
      ** 43, 45, 47 etc. These two indicator categories can be expressed
      ** as Y and Z, using the 3 lines of code below.
     C           X         MULT 2         Y       20
     C           Y         ADD  41        Z       20       PCT error indicators
     C           Y         ADD  40        Y                CCY error indicators
      *
      **  Validate currency code.
     C                     EXSR #LCURR
      *
      **  Check currency is not the same as composite currency
     C                     EXSR #LCOMP
      *
      **  Validate percentage
     C                     EXSR #LPCNT
      *
      **  Check currencies have not been entered twice
     C                     EXSR #LDUPC
      *
     C                     ENDIF
      *
     C                     ENDDO
     C                     MOVEACCYN      CCYA
      *
      **  Check total percentages equal 100
     C           ULPTOT    IFNE 100
     C                     MOVE 'BYM0099' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LCURR - Validate Currency Code                               *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: #LSNMG,                                                *
      *****************************************************************
      *
     C           #LCURR    BEGSR                           ** SR/#LCURR**
      *
     C           CCYN,X    IFEQ *BLANKS
     C                     MOVE 'BYM0100' ULMSID
     C                     MOVE '1'       *IN,Y
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ELSE
      *
     C           '?'       SCAN CCYN,X                   90
     C           *IN90     IFEQ *ON
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM CCYN,X    CKEY
     C                     PARM           SDCURR
      *
      ** If *NRF is passed back through the return code, that currency
      ** code is invalid.
     C           @RTCD     IFEQ '*NRF'
     C                     MOVE 'BYM0094' ULMSID
     C                     MOVE '1'       *IN,Y
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
      ** Other return code values (Except *BLANKS) indicate a database error
     C           @RTCD     IFNE *BLANKS
     C           @RTCD     ANDNE'*NOSEL'                                  122067
     C           @RTCD     ANDNE'*NRF'
     C           *LOCK     IN   LDA
     C                     MOVEL'BY1060'  DBPGM            ************
     C                     MOVELCCYN,X    DBKEY     P      * DBERR 02 *
     C                     MOVEL'SDCURRL1'DBFILE           ************
     C                     Z-ADD2         DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *                                                                                      BUG7371
     C           @RTCD     IFNE '*NOSEL'                                                     BUG7371
     C           @RTCD     ANDNE'*NRF'                                                       BUG7505
     C                     MOVELA6CYCD    CCYN,X                                             BUG7371
     C                     ELSE                                                              BUG7371
     C           @RTCD     IFEQ '*NOSEL'                                                     BUG7505
     C                     MOVEL*BLANKS   CCYN,X                                             BUG7371
     C                     ENDIF                                                             BUG7505
     C                     ENDIF                                                             BUG7371
      *
     C                     ENDIF
      *
      ** Move selected currency to screen field                           122067
     C********** @RTCD     IFNE '*NOSEL'                                                     BUG7371
     C**********           MOVELA6CYCD    CCYN,X                          122067             BUG7371
     C**********           ELSE                                           122067             BUG7371
     C**********           MOVEL*BLANKS   CCYN,X                          122067             BUG7371
     C**********           ENDIF                                          122067             BUG7371
      *                                                                   122067
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LCOMP - Check currency is not same as composite currency     *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: #LSNMG                                                 *
      *****************************************************************
      *
     C           #LCOMP    BEGSR                           ** SR/#LCOMP**
      *
     C           CCYN,X    IFEQ L#CCCY
     C                     MOVE 'BYM0096' ULMSID
     C                     MOVE '1'       *IN,Y
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LPCNT - Validate Percentage                                  *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: #LSNMG                                                 *
      *****************************************************************
      *
     C           #LPCNT    BEGSR                           ** SR/#LPCNT**
      *
     C           PCTN,X    IFEQ *BLANKS
     C                     MOVE 'BYM0097' ULMSID
     C                     MOVE '1'       *IN,Z
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ELSE
      *
     C                     MOVE *BLANKS   ZFIELD                           field
     C                     MOVELPCTN,X    ZFIELD
     C                     EXSR ZALIGN
     C                     MOVE ZFIELD    PCTN,X
     C                     MOVE *BLANKS   ULPCNT
     C                     MOVE ZFIELD    ULPCNT
     C                     EXSR #LCHEK
      *
      **  Move decimal point into data
     C                     EXSR #LEDIT
     C                     MOVE ZFIELD    PCTN,X
      *
      **  Keep a running total of percentages
     C                     ADD  ULPCNT    ULPTOT
     C                     ENDIF
      *
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LDUPC - Check for duplicate currencies                       *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: #LSNMG                                                 *
      *****************************************************************
      *
     C           #LDUPC    BEGSR                           ** SR/#LDUPC**
      *
     C                     MOVE *OFF      *IN89
     C           X         IFLT 20
     C                     MOVE CCYN,X    ULDUPC            Duplicate currency
     C           1         ADD  X         P       20       |Start array search
     C           ULDUPC    LOKUPCCYN,P                   89|from next position
     C                     ENDIF
      *
     C           *IN89     IFEQ *ON
     C           ULDUPC    ANDNE*BLANKS                                                      BUG7505
     C                     MOVE 'BYM0095' ULMSID
     C                     MOVE '1'       *IN,Y
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LUPDT - Update Database                                      *
      *                                                               *
      * Called by:  SR/#LMAIN - Main Processing                       *
      *                                                               *
      * Calls: #LSNMG,                                                *
      *****************************************************************
      *
     C           #LUPDT    BEGSR                           ** SR/#LUPDT**
      *
      *   Reset work fields
     C                     MOVE 'Y'       ULUPDI           Update flag
      *
      *   Read record from BYCCCYPP
     C           L#CCCY    CHAINBYCCCYPP             89
      *
      *  If action is insert record must not exist
     C           L#ACTN    IFEQ 'I'
     C           *IN89     ANDEQ*OFF
     C           L6RECI    ANDEQ'D'                                                           LLN022
     C                     MOVE 'BYM0077' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULUPDI           Update flag
     C                     ENDIF
      *
      *  If action is not insert record must exist
     C           L#ACTN    IFNE 'I'
     C           *IN89     ANDEQ*ON
     C                     MOVE 'BYM0079' ULMSID
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULUPDI           Update flag
     C                     ENDIF
      *
      ** If valid for update...
     C           ULUPDI    IFEQ 'Y'
      *
      ** Remove blanks from inbetween records prior to update
     C                     EXSR #LRMBL
      *
      ** Remove decimals from data..
     C                     DO   20        X
     C           PCTN,X    IFNE *BLANKS
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE PCTN,X    ZFIELD
     C                     EXSR ZALIGN
     C                     MOVE ZFIELD    PCTN,X
     C                     ENDIF
     C                     ENDDO
      *
      ** and move screen and pgm fields to file.
     C                     MOVE L#ACTN    L6CHTP
     C                     MOVE L#CCCY    L6CCCY
     C                     MOVEACCYN      L6CCYA
     C                     MOVEAPCTN      L6PCTA
      *
     C           *IN89     IFEQ *ON
     C                     MOVE 'D'       L6RECI
     C                     TIME           L6UTIM
     C                     MOVE BJRDNB    L6LCD
     C                     WRITEBYCCCYD0
     C                     ELSE
      *
      ** Check if file has been updated by another user
     C           L6LCD     IFEQ ULLCD
     C           L6UTIM    ANDEQULUTIM
      *
     C           L#ACTN    IFEQ 'D'
     C                     MOVE '*'       L6RECI
     C                     MOVE 'D'       L6CHTP
     C                     ELSE
     C**********           MOVE 'A'       L6CHTP                                              LLN022
     C                     MOVE L#ACTN    L6CHTP                                              LLN022
     C           L6RECI    IFEQ '*'                                                           LLN022
     C                     MOVE 'D'       L6RECI                                              LLN022
     C                     ENDIF                                                              LLN022
     C                     ENDIF
      *
     C                     TIME           L6UTIM
     C                     MOVE BJRDNB    L6LCD
     C                     UPDATBYCCCYD0
     C                     ELSE
     C                     MOVE 'BYM0078' ULMSID
     C                     EXSR #LSNMG
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LRMBL - Reorder records to remove blanks prior to update     *
      *                                                               *
      * Called by: #LUPDT                                             *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LRMBL    BEGSR
      *
     C                     DO   20        X       20
     C           CCYN,X    IFEQ *BLANKS
     C           PCTN,X    ANDEQ*BLANKS
     C                     MOVE *OFF      *IN85
     C           X         ADD  1         W       20
      *
     C           W         DOWLT21
     C           *IN85     ANDEQ*OFF
      *
     C           CCYN,W    IFNE *BLANKS
     C                     MOVE CCYN,W    CCYN,X
     C                     MOVE PCTN,W    PCTN,X
     C                     MOVE *BLANKS   CCYN,W
     C                     MOVE *BLANKS   PCTN,W
     C                     MOVE *ON       *IN85
     C                     ENDIF
      *
     C                     ADD  1         W
     C                     ENDDO
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LSNMG - Send Message to Program Message Queue                *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LSNMG    BEGSR
      *
     C                     CALL 'Y2SNMGC'
     C                     PARM 'BY1060'  ULPGM
     C                     PARM '*SAME'   ULPGRL
     C                     PARM           ULMSID
     C                     PARM           ULMSGF
     C                     PARM           ULMSDA
     C                     PARM           ULMSTP
      *
     C                     ENDSR
      *
      /EJECT
      *****************************************************************
      * #LCLMG - Clear Program Message Queue                          *
      *                                                               *
      * Called by:                                                    *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
     C           #LCLMG    BEGSR
      *
     C                     CALL 'Y2CLMSC'
     C                     PARM 'BY1060'  ULPGM
     C                     PARM '*SAME'   ULPGRL
      *
     C                     ENDSR
      *****************************************************************
      * ZALIGN - Validates numeric fields                             *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: None                                                   *
      *****************************************************************
      *
     C/COPY ZSRSRC,ZALIGNZ2
      *
      /EJECT
      *****************************************************************
      * #LEDIT - Aligns numeric fields                                *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls: None                                                   *
      *****************************************************************
     C*                                                                  *
     C           #LEDIT    BEGSR                           ***  #LEDIT ***
     C*                                                                  *
     C**  Set up work fields                                             *
     C                     MOVEA' '       ZA1                            *
     C                     MOVEA' '       ZA2                            *
     C*                                                                  *
     C                     Z-ADD16        Z1      20                     *
     C                     Z-ADD16        Z2      20                     *
     C*                                                                  *
     C           16        SUB  ZADEC     ZADEC2  20                     *
     C*
     C                     MOVEAZFIELD    ZA1                            *
     C*                                                                  *
     C**  Check if there are any decimal places                          *
     C           ZADEC     IFEQ 0                                        *
     C                     MOVE *ON       *IN88
     C                     GOTO ZT20                                     *
     C                     ENDIF
     C**                                                                 *
     C           ZT10      TAG                             ** ZT10 TAG ***
     C**                                                                 *
     C*                                                                  *
     C**  Set up decimals                                                *
     C                     MOVE ZA1,Z1    ZA2,Z2                         *
     C           Z1        SUB  1         Z1                             *
     C           Z2        SUB  1         Z2                             *
     C*                                                                  *
     C           Z2        IFEQ 0                                        *
     C                     GOTO ZT30                                     *
     C                     ENDIF
     C*                                                                  *
     C*       CHECK IF END OF DECIMALS                                   *
     C**                                                                 *
     C           Z2        IFGT ZADEC2                                   *
     C                     GOTO ZT10                                     *
     C                     ENDIF
     C*                                                                  *
     C**  Put in decimal place                                           *
     C                     MOVE '.'       ZA2,Z2                         *
     C           Z2        SUB  1         Z2                             *
     C*                                                                  *
     C           ZT20      TAG                             ** ZT20 TAG ***
     C*                                                                  *
     C**  Set up integers                                                *
     C                     MOVE ZA1,Z1    ZA2,Z2                         *
     C           Z1        SUB  1         Z1                             *
     C           Z2        SUB  1         Z2                             *
     C**                                                                 *
     C           Z2        IFGT 0
     C                     GOTO ZT20                                     *
     C                     ENDIF
     C*                                                                  *
     C**  Put in leading blanks                                          *
     C           ZT30      TAG                             ** ZT30 TAG ***
     C**                                                                 *
     C                     Z-ADD1         Z2                             *
     C**                                                                 *
     C           ZT40      TAG                             ** ZT40 TAG ***
     C*                                                                  *
     C           ZA2,Z2    COMP '0'                  8787                *
     C   87      ZA2,Z2    COMP ' '                  8787                *
     C*                                                                  *
     C   87                GOTO ZT50                                     *
     C*                                                                  *
     C                     MOVE ' '       ZA2,Z2                         *
     C           Z2        ADD  1         Z2                             *
     C*                                                                  *
     C           Z2        IFLT 16                                       *
     C                     GOTO ZT40                                     *
     C                     ENDIF
     C*                                                                  *
     C**  If no integers, put in leading zero                            *
     C           ZT50      TAG                             ** ZT50 TAG ***
     C*                                                                  *
     C                     Z-ADDZADEC2    Z2                             *
   1 C  N88      Z2        SUB  1         Z2                             *
     C           ZA2,Z2    COMP ' '                      87              *
     C   87                MOVE '0'       ZA2,Z2                         *
     C*                                                                  *
     C**  Set up output field                                            *
     C           ZT60      TAG                             ** ZT60 TAG ***
     C*                                                                  *
     C                     MOVEAZA2       ZFIELD 16                      *
     C**                                                                 *
     C           ZEND      ENDSR                           ** ZEND **    *
     C*                                                                  *
      /EJECT
      *****************************************************************
      * #LCHEK - Check that field holds a value within desired range  *
      *                                                               *
      * Called by: #LVALD                                             *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LCHEK    BEGSR
      *
     C           ULPCNT    IFEQ 0
     C           ULPCNT    ORGE 100
     C                     MOVE 'BYM0098' ULMSID
     C                     MOVE '1'       *IN,Z
     C                     EXSR #LSNMG
     C                     MOVE 'N'       ULVALD
     C                     ENDIF
      *
     C                     ENDSR
      *
      /EJECT
      *****************************************************************
      * #LDEFN - Field Definition Routine                             *
      *                                                               *
      * Called by:  None - Contains definitions only                  *
      *                                                               *
      * Calls: None                                                   *
      *****************************************************************
      *
     C           #LDEFN    BEGSR                           ** SR/#LDEFN**
      *
      ** Define external data areas
     C           *NAMVAR   DEFN           LDA
      *
      ** Define and initialise work fields
     C                     MOVE *BLANK    ULRTCD  1        Return code
     C                     MOVE *BLANK    ULERRI  1        Pgm error indicator
     C                     MOVE *BLANK    P@RTCD  7
     C                     MOVE *BLANK    P@OPTN  7
     C                     MOVE *BLANKS   ULPGM  10        Program
     C                     MOVE *BLANKS   ULPGRL  5
     C                     MOVE ULMGFN    ULMSGF 10        Message File
     C                     MOVE *BLANKS   ULMSID  7        Message Id
     C                     MOVE *BLANKS   ULMSDA132        Message Data
     C                     MOVE *BLANKS   ULMSTP  7        Message Type
     C                     MOVE 'N'       ULVALI  1        Initial screen valid
     C                     MOVE 'N'       ULVALD  1        Detail screen valid
     C                     MOVE 'N'       ULUPDI  1        Valid for update
     C                     MOVEACPY@      ULCPY@ 80        Copyright
     C                     MOVE *BLANKS   ULPCNT  52       Percentage(numeric)
     C                     MOVE *BLANKS   ULPTOT  52       Percentage total
     C                     MOVE *BLANKS   ULDUPC  3        Duplicate CCY check
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: (**calling routines**)                             *
      *                                                               *
      * Calls: None                                                   *
      *****************************************************************
      *
     C           *PSSR     BEGSR                           ** *PSSR SR **
      *
      *  Check if error has previously been reported
     C           ULERRI    IFEQ *BLANK
     C                     MOVE 'Y'       ULERRI
     C                     MOVE 'Y'       ULRTCD
     C                     DUMP
     C                     ENDIF
      *
      *  Set on external indicators
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
      *
      *  Terminate program
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *
      /EJECT
      *****************************************************************
      * *INZSR - Program Initialisation Routine                       *
      *                                                               *
      * Called by:  At program initialisation                         *
      *                                                               *
      * Calls: None                                                   *
      *****************************************************************
      *
     C           *INZSR    BEGSR                           ** *INZSR SR**
      *
     C           *ENTRY    PLIST
     C                     PARM           ULRTCD
      *
     C                     Z-ADD21        FLD     20
     C                     Z-ADD3         ZADIG
     C                     Z-ADD2         ZADEC
      *
      *  Get Bank Details
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANK    P@RTCD  7
     C                     PARM '*FIRST ' P@OPTN  7
     C                     PARM           SDBANK
      *
      ** Check Return Code
     C           P@RTCD    IFNE *BLANKS
     C           BJTYLC    OREQ 'D'                        ON-DELETED
     C           *LOCK     IN   LDA
     C                     MOVEL'BY1060'  DBPGM            ************
     C                     MOVEL'*NONE'   DBKEY            * DBERR 01 *
     C                     MOVEL'SDBANKPD'DBFILE           ************
     C                     Z-ADD1         DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Set Date Format Indicator *IN98  on if date format is MMDDYY
     C           BJDFIN    IFEQ 'M'
     C                     MOVE *ON       *IN98
     C                     ELSE
     C                     MOVE *OFF      *IN98
     C                     END
      *
      *  Initialise work fields
     C                     EXSR #LDEFN
      *
      *  Initial fields for display file
     C                     MOVEL'BY1060'  L#PGMQ 10
     C                     MOVEL'BY1060'  L#PGM
     C                     MOVELULWSID    L#WSID
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * #LTERM - Termination Processing                               *
      *                                                               *
      * Called by:  Main Processing                                   *
      *                                                               *
      * Calls:                                                        *
      *****************************************************************
      *
     C           #LTERM    BEGSR                           ** SR/#LTERM**
      *
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
**  CPY@
(c) Finastra International Limited 1997
