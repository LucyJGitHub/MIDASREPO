/*********************************************************************/
/*STD    CLPBASE                                                     */
/*EXI *  TEXT('Midas COB Check for batch/int. jobs in current sbs')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - Close of Business Module                            */
/*                                                                   */
/*       CBC0001 - Check Active Jobs in a Subsystem and do an action */
/*                                                                   */
/*       Function: This program checks all jobs per type (I/B) and   */
/*                 do a specific action for each one                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2005           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. CCB014  *Create    Date 25Apr05              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CCB014 - Pre-Scheduled Batch Close Of Business              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/* INPUT                                                             */
/*                                                                   */
/* &TYPE code for a specific type of jobs in current subsystem       */
/*         I : Interactive jobs                                      */
/*         B : Batch jobs                                            */
/* &ACTION code for a specific action.                               */
/*         M : Send break message                                    */
/*         E : Endjob *Immed                                         */
/*                                                                   */
/* API                                                               */
/*                                                                   */
/* Return parameters for QUSDLTUS (delete user space)                */
/* Return parameters for QUSCRTUS (create user space)                */
/* Return parameters for QUSTRVUS (read data in user space)          */
/* Return parameters for QUSLJOB  (list of jobs in systen)           */
/* Return parameters for QUSRJOBI (information on a job)             */
/*                                                                   */
/* VARIABLE                                                          */
/*                                                                   */
/* &SUBSYST name of subsystem in which current job is running        */
/* &JOBQUAL &NBR/&USR/&JOB 28C                                       */
/* &JOBNAME variable for name of job                                 */
/* &USRSPC  name of user space (CBJOBACT IN QTEMP)                   */
/* &SIZEUSR size of user space                                       */
/* &DATHEAD data structure of header inf. on list in user space      */
/*                                                                   */
/* &STRBIN  start of data of list in user space in binary format(4C) */
/* &OFFDEC  start of data (&STRBIN) in decimal format used calcu     */
/* &TOTBIN  length of an entry in the user space list                */
/* &SZEDEC  length of an entry in format decima                      */
/* &NBLDEC  number of entries in decimal format                      */
/* &DATA    used to retrieve datas in user space entries list        */
/*              (for description of job in system)                   */
/* &CPT     counter used for each entries of list                    */
/* &JOBD    contains retrieving inf. generated by api QUSRJOBI       */
/*          (for format JOBI0200. SUBSYSTEM NAME IS IN POS 63 (10C)) */
/* &INTJBNB internal job number returned by QUSLJOB to increase      */
/*           processing                                              */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&TYPE &ACTION)
 
/** Input Parameters */
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2005')
             DCL        VAR(&CCB014) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SAR) TYPE(*CHAR) LEN(6)
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)
             DCL        VAR(&TYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ACTION) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MSG) TYPE(*CHAR) LEN(256)
 
/** Job  Parameters */
             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&SUBSYST) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBQUAL) TYPE(*CHAR) LEN(28)
             DCL        VAR(&JOBNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBUSER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBNUMB) TYPE(*CHAR) LEN(6)
 
/** User Space Parameters */
             DCL        VAR(&USRSPC) TYPE(*CHAR) LEN(20) +
                          VALUE('CBJOBACT  QTEMP     ')
             DCL        VAR(&SIZEUSR) TYPE(*CHAR) LEN(4)
 
/** Retrieve Header Parameters */
             DCL        VAR(&DATHEAD) TYPE(*CHAR) LEN(16)
 
/** Loop Job Active in System Parameters */
             DCL        VAR(&STRBIN) TYPE(*CHAR) LEN(4)
             DCL        VAR(&TOTBIN) TYPE(*CHAR) LEN(4)
             DCL        VAR(&OFFDEC) TYPE(*DEC) LEN(6) VALUE(0)
             DCL        VAR(&NBLDEC) TYPE(*DEC) LEN(6) VALUE(0)
             DCL        VAR(&SZEDEC) TYPE(*DEC) LEN(6) VALUE(0)
             DCL        VAR(&DATA) TYPE(*CHAR) LEN(60)
             DCL        VAR(&CPT) TYPE(*DEC) LEN(5 0)
 
/** Job and Subsystem Description Parameters */
             DCL        VAR(&JOBD) TYPE(*CHAR) LEN(134)
             DCL        VAR(&INTJBNB) TYPE(*CHAR) LEN(16)
 
/** Global Monitor Message */
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGVAR     VAR(&RTCD) VALUE('       ')
             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')
             CHGVAR     VAR(&SAR)  VALUE('CCB014')
 
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SAR &SCSARD)
 
             IF         COND(&RTCD *EQ '      ') THEN(       +
                        CHGVAR     VAR(&CCB014) VALUE('Y'))
             ELSE       DO
                        CHGVAR VAR(&CCB014) VALUE('N')
             ENDDO
 
/** End Component if CCB014 is off */
             IF         COND(&CCB014 *EQ 'N') THEN(GOTO CMDLBL(ENDCL))
 
/** Retrieve Subsystem of Current Job and Change its Attributes */
             CALL       PGM(QUSRJOBI) PARM(&JOBD X'00000086' +
                          'JOBI0200' '*                         ' +
                          &INTJBNB)
             CHGVAR     VAR(&SUBSYST) VALUE(%SST(&JOBD 63 10))
 
/** Create User Space for List of Active job in Subsystem */
 
             DLTUSRSPC  USRSPC(CBJOBACT)
             MONMSG     MSGID(CPF0000)
             CHGVAR     VAR(%BIN(&SIZEUSR)) VALUE(32567)
             CALL       PGM(QUSCRTUS) PARM(&USRSPC 'CBJOBACT  ' +
                          &SIZEUSR ' ' '*USE    ' 'LIST OF ACTIVE +
                          JOB IN SUSBSYSTEM')
 
/** Main Loop: Fill USR SPC With Active Job */
 MAINLOOP:
 
/** Fill User Space with List of Active Job */
             CALL       PGM(QUSLJOB) PARM(&USRSPC 'JOBL0100' +
                          '*ALL      *ALL      *ALL  ' '*ACTIVE   ')
 
/** Read Header for Information on User Space */
             CHGVAR     VAR(&DATHEAD) VALUE(' ')
             CALL       PGM(QUSRTVUS) PARM(&USRSPC X'0000007D' +
                          X'00000010' &DATHEAD)
 
             CHGVAR     VAR(&OFFDEC)    VALUE(%BIN(&DATHEAD  1 4))
             CHGVAR     VAR(&NBLDEC)    VALUE(%BIN(&DATHEAD  9 4))
             CHGVAR     VAR(&SZEDEC)    VALUE(%BIN(&DATHEAD 13 4))
             CHGVAR     VAR(&TOTBIN)    VALUE(%SST(&DATHEAD 13 4))
 
             CHGVAR     VAR(&OFFDEC) VALUE(&OFFDEC + 1)
             CHGVAR     VAR(&CPT) VALUE(1)
 LOOP:       IF         COND(&CPT *GT &NBLDEC) THEN(GOTO +
                          CMDLBL(ENDLOOP))
             CHGVAR     VAR(%BIN(&STRBIN)) VALUE(&OFFDEC)
 
/** Read Job by Job */
             CALL       PGM(QUSRTVUS) PARM(&USRSPC &STRBIN &TOTBIN +
                          &DATA)
 
/** Check Subsystem of Job */
             CHGVAR     VAR(&JOBQUAL) VALUE(%SST(&DATA 21 6) *TCAT +
                          '/' *TCAT %SST(&DATA 11 10) *TCAT '/' +
                          *TCAT %SST(&DATA 1 10))
             CHGVAR     VAR(&INTJBNB) VALUE(%SST(&DATA 27 16))
             CALL       PGM(QUSRJOBI) PARM(&JOBD X'00000086' +
                          'JOBI0200' '*INT                      ' +
                          &INTJBNB)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(NOTFOUND))
             IF         COND(%SST(&JOBD 63 10) *EQ &SUBSYST) THEN(DO)
               CHGVAR     VAR(&JOBTYPE) VALUE(%SST(&JOBD 61 1))
 
/** Do a specific action for specified type of job */
               IF         COND((&JOBTYPE  *EQ &TYPE) ) THEN(DO)
                 CHGVAR     VAR(&JOBNAME) VALUE(%SST(&DATA 1 10))
                 CHGVAR     VAR(&JOBUSER) VALUE(%SST(&DATA 11 10))
                 CHGVAR     VAR(&JOBNUMB) VALUE(%SST(&DATA 21 6))
 
/** For action M, send a message */
                 IF         COND(&ACTION *EQ 'M') THEN(DO)
                   SNDBRKMSG  MSG('Midas Close of business will +
                                start soon. Please finish your  +
                                current job or contact EDP if any +
                                problem') TOMSGQ(&JOBNAME)
                 ENDDO
 
/** For action E, end job */
                 IF         COND(&ACTION *EQ 'E') THEN(DO)
                   CHGVAR     VAR(&MSG) VALUE('SCD_COB detected +
                                job ' *CAT &JOBQUAL *TCAT ' still +
                                active. This job will be signed off')
                   SNDMSG     MSG(&MSG) TOMSGQ(MOPERQ MRUNQ)
                   ENDJOB     JOB(&JOBNUMB/&JOBUSER/&JOBNAME) +
                                OPTION(*IMMED)
                   MONMSG     MSGID(CPF1321)
                 ENDDO
               ENDDO
             ENDDO
 
 NOTFOUND:   CHGVAR     VAR(&CPT) VALUE(&CPT + 1)
             CHGVAR     VAR(&OFFDEC) VALUE(&OFFDEC + &SZEDEC)
             GOTO       CMDLBL(LOOP)
 
 ENDLOOP:    GOTO       CMDLBL(END)
 
/** If Error */
 ABNOR:
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 MCH0000)
 
             CHGVAR     VAR(&MSG) VALUE('Retrieve job status +
                          CBC0001 in error.')
             SNDMSG     MSG(&MSG) TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
             GOTO       CMDLBL(ENDCL)
 
/** Completed */
 END:
             DLTUSRSPC  USRSPC(CBJOBACT)
             MONMSG     MSGID(CPF0000)
 
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
 
 ENDCL:      ENDPGM
