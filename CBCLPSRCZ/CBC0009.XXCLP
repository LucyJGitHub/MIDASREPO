/*********************************************************************/
/*S*D****CLPBASE******************************************************/                   /*CCB020*/
/*********************************************************************/
/*                                                                   */
/*       Midas - Close of Business Module                            */
/*                                                                   */
/*       CBC0009 - Feature CCB009 initialisation program             */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*       Last Amend No. CCB020 *REDUNDANT  Date 06Aug12              */
/*       Prev Amend No. CUP005             Date 27Aug10              */
/*                      CSC043             Date 18Jun10              */
/*                      BUG27134           Date 01Oct08              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.03 ---------------------------------------------------*/
/*                      CCB009  *CREATE    Date 01Jun00              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CCB020 - COB Restructure - Secondary COB Infrastructure     */
/*       CUP005 - Change processing of temporary files for IASP      */
/*       CSC043 - MidasPlus IASP Enablement                          */
/*       BUG27134- Rewrite of SCBEGINJRN.                            */
/*       CCB009 - Journal files throughout close of business.        */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTCDE &PMODE)
 
/*/COPY WNCPYSRC,CBC0009INT                                          */
 
             DCL        VAR(&PMODE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RTCDE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&JNSTAT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&JLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RECEIVER1) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RECEIVER2) TYPE(*CHAR) LEN(10)
/**********  DCL        VAR(&NUM) TYPE(*DEC) LEN(3 0)                                  */ /*CUP005*/
/**********  DCL        VAR(&NUMA) TYPE(*CHAR) LEN(3)                                  */ /*CUP005*/
             DCL        VAR(&NUM) TYPE(*DEC) LEN(8 0)                                     /*CUP005*/
             DCL        VAR(&NUMA) TYPE(*CHAR) LEN(8)                                     /*CUP005*/
             DCL        VAR(&MPHAS) TYPE(*CHAR) LEN(1)
/**********  DCL        VAR(&COUNTA) TYPE(*CHAR) LEN(3)                                */ /*CUP005*/
/**********  DCL        VAR(&COUNT) TYPE(*DEC) LEN(3)                                  */ /*CUP005*/
             DCL        VAR(&COUNT) TYPE(*DEC) LEN(8)                                     /*CUP005*/
             DCL        VAR(&COUNTA) TYPE(*CHAR) LEN(8)                                   /*CUP005*/
             DCL        VAR(&JRNRCV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2001')
             DCL        VAR(&IASP_YN) TYPE(*CHAR) LEN(1)                                  /*CSC043*/
             DCL        VAR(&IASP) TYPE(*CHAR) LEN(10)                                    /*CSC043*/
/**COPY*GPCPYSRCG,GPSVALDCL***/ /*                                          */ /*CSC043*/ /*CUP005*/
/*/COPY SDCPYSRC,SDSVALDCL  */                                                            /*CUP005*/
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGJOB     SWS(XXXXXX00)
             RTVDTAARA  DTAARA(JNSTAT) RTNVAR(&JNSTAT)
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(&JLIB) VALUE(&SYSID *CAT 'JLIB    ')
/*                                                                                        /*CSC043*/
/** Get the global IASP system values */                                                  /*CSC043*/
/*                                                                                        /*CSC043*/
             CALL       PGM(GPAOSVALR0) PARM(&RSVALRTNC +
                          'IASPinstallation' &SVAL1 +
                          'IASPgroup' &SVAL2 &SVALK3 +
                          &SVAL3 &SVALK4 &SVAL4 &SVALK5 &SVAL5 +
                          &SVALK6 &SVAL6 &SVALK7 &SVAL7 &SVALK8 +
                          &SVAL8 &SVALK9 &SVAL9 &SVALK10 &SVAL10)                         /*CSC043*/
/*                                                                                        /*CSC043*/
/** Check whether system is in IASP environment. */                                       /*CSC043*/
/*                                                                                        /*CSC043*/
              CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))                            /*CSC043*/
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
/*                                                                                        /*CSC043*/
/** Get name of IASP. */                                                                  /*CSC043*/
/*                                                                                        /*CSC043*/
              CHGVAR     VAR(&IASP) VALUE(%SST(&SVAL2 1 10))                              /*CSC043*/
                                                                                          /*CSC043*/
             ENDDO                                                                        /*CSC043*/
                                                                                          /*CSC043*/
 
/*/COPY WNCPYSRC,CBC00009PS                                          */
 
/* Mode 1 - First call */
 
             IF         COND(&PMODE *EQ '1') THEN(DO)
 
/* Create a new journal receiver with a storage size threshold. */
 
             RTVJRNE    JRN(ICJRN) RTNRCV(&RECEIVER1)
/**********  CHGVAR     VAR(&NUMA) VALUE(%SST(&RECEIVER1 6 3))                         */ /*CUP005*/
             CHGVAR     VAR(&NUMA) VALUE(%SST(&RECEIVER1 3 8))                            /*CUP005*/
             CHGVAR     VAR(&NUM) VALUE(&NUMA)
             CHGVAR     VAR(&NUM) VALUE(&NUM + 1)
             CHGVAR     VAR(&NUMA) VALUE(&NUM)
/**********  CHGVAR     VAR(&RECEIVER1) VALUE('ICRCV' *CAT &NUMA *CAT +                */ /*CUP005*/
/**********               '  ')                                                        */ /*CUP005*/
             CHGVAR     VAR(&RECEIVER1) VALUE('IR' *TCAT &NUMA)                           /*CUP005*/
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
             CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER1) ASP(*LIBASP) +
                          THRESHOLD(1900000) TEXT('receiver for +
                          journal icjrn')                                                 /*CSC043*/
             ENDDO                                                                        /*CSC043*/
             ELSE       CMD(DO)                                                           /*CSC043*/
             CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER1) ASP(%SST(&JNSTAT 151 +
                          2)) THRESHOLD(1900000) TEXT('receiver for +
                          journal icjrn')
             ENDDO                                                                        /*CSC043*/
 
/*  If dual receivers are being used, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
/*  create a second receiver. */
 
             CHGVAR     VAR(&NUM) VALUE(&NUM + 1)
             CHGVAR     VAR(&NUMA) VALUE(&NUM)
/**********  CHGVAR     VAR(&RECEIVER2) VALUE('ICRCV' *CAT &NUMA *CAT +                */ /*CUP005*/
/**********               '  ')                                                        */ /*CUP005*/
             CHGVAR     VAR(&RECEIVER2) VALUE('IR' *TCAT &NUMA)                           /*CUP005*/
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
             CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER2) ASP(*LIBASP) +
                          THRESHOLD(1900000) TEXT('receiver for +
                          journal icjrn')                                                 /*CSC043*/
             ENDDO                                                                        /*CSC043*/
             ELSE       CMD(DO)                                                           /*CSC043*/
             CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER2) ASP(%SST(&JNSTAT 151 +
                          2)) THRESHOLD(1900000) TEXT('receiver for +
                          journal icjrn')
             ENDDO                                                                        /*CSC043*/
 
             ENDDO
 
/*  Change journal to attach new receiver or receivers. */
 
/*  If dual receivers are in use, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
/*  Attach 2 new recievers. */
 
             CHGJRN     JRN(ICJRN) JRNRCV(&RECEIVER1 &RECEIVER2)
 
/*  If dual receivers are NOT in use, */
 
             ENDDO
 
             ELSE       CMD(DO)
 
/*  Attach new receiver. */
 
             CHGJRN     JRN(ICJRN) JRNRCV(&RECEIVER1)
 
             ENDDO
 
/*  Update JNSTAT with the name of the new receiver. */
 
/*  If dual receivers are in use, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
             CHGDTAARA  DTAARA(JNSTAT (1 10)) VALUE(&RECEIVER2)
 
             ENDDO
 
             ELSE       CMD(DO)
 
/*  If dual receivers are NOT in use, */
 
             CHGDTAARA  DTAARA(JNSTAT (1 10)) VALUE(&RECEIVER1)
 
             ENDDO
 
/*  Call SCBEGINJRN to start journaling for additional files. */
/**********  CALL       PGM(SCBEGINJRN) PARM(&SYSID)                                 */ /*BUG27134*/
             JRNZONE    PFX(&SYSID) ACTION(*START)                                      /*BUG27134*/
 
             ENDDO
 
/* Mode 2 - Second call */
 
             IF         COND(&PMODE *EQ '2') THEN(DO)
 
/* Create a new journal receiver with a storage size threshold. */
 
             RTVJRNE    JRN(ICJRN) RTNRCV(&RECEIVER1)
/**********  CHGVAR     VAR(&NUMA) VALUE(%SST(&RECEIVER1 6 3))                         */ /*CUP005*/
             CHGVAR     VAR(&NUMA) VALUE(%SST(&RECEIVER1 3 8))                            /*CUP005*/
             CHGVAR     VAR(&NUM) VALUE(&NUMA)
             CHGVAR     VAR(&NUM) VALUE(&NUM + 1)
             CHGVAR     VAR(&NUMA) VALUE(&NUM)
/**********  CHGVAR     VAR(&RECEIVER1) VALUE('ICRCV' *CAT &NUMA *CAT +                */ /*CUP005*/
/**********               '  ')                                                        */ /*CUP005*/
             CHGVAR     VAR(&RECEIVER1) VALUE('IR' *TCAT &NUMA)                           /*CUP005*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
                CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER1) ASP(*LIBASP) +
                             THRESHOLD(1900000) TEXT('receiver for +
                             journal icjrn')                                              /*CSC043*/
             ENDDO                                                                        /*CSC043*/
             ELSE       CMD(DO)                                                           /*CSC043*/
                CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER1) ASP(%SST(&JNSTAT 151 +
                             2)) THRESHOLD(1900000) TEXT('receiver for +
                             journal icjrn')
             ENDDO                                                                        /*CSC043*/
 
/*  If dual recievers are being used, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
/*  create a second receiver. */
 
             CHGVAR     VAR(&NUM) VALUE(&NUM + 1)
             CHGVAR     VAR(&NUMA) VALUE(&NUM)
             CHGVAR     VAR(&RECEIVER2) VALUE('ICRCV' *CAT &NUMA *CAT +
                          '  ')
             CRTJRNRCV  JRNRCV(&JLIB/&RECEIVER2) ASP(%SST(&JNSTAT 151 +
                          2)) THRESHOLD(1900000) TEXT('receiver for +
                          journal icjrn')
 
             ENDDO
 
/*  Change journal to attach new receiver or receivers. */
 
/*  If dual receivers are in use, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
/*  Attach 2 new recievers. */
 
             CHGJRN     JRN(ICJRN) JRNRCV(&RECEIVER1 &RECEIVER2)
 
/*  If dual receivers are NOT in use, */
 
             ENDDO
 
             ELSE       CMD(DO)
 
/*  Attach new receiver. */
 
             CHGJRN     JRN(ICJRN) JRNRCV(&RECEIVER1)
 
             ENDDO
 
/*  Update JNSTAT with the name of the new receiver. */
 
/*  If dual receivers are in use, */
 
             IF         COND(%SUBSTRING(&JNSTAT 70 1) *EQ 'Y') THEN(DO)
 
             CHGDTAARA  DTAARA(JNSTAT (1 10)) VALUE(&RECEIVER2)
 
             ENDDO
 
             ELSE       CMD(DO)
 
/*  If dual receivers are NOT in use, */
 
             CHGDTAARA  DTAARA(JNSTAT (1 10)) VALUE(&RECEIVER1)
 
             ENDDO
 
/*  Call SCBEGINJRN to start journaling for additional files. */
 
/**********  CALL       PGM(SCBEGINJRN) PARM(&SYSID)                                   */ /*CUP005*/
             JRNZONE    PFX(&SYSID) ACTION(*START)                                        /*CUP005*/
 
             ENDDO
 
/* Mode 3 - Deletion */
 
             IF         COND(&PMODE *EQ '3') THEN(DO)
 
             RTVDTAARA  DTAARA(MPHAS (1 1)) RTNVAR(&MPHAS)
 
             IF         COND(&MPHAS *NE 'A') THEN(DO)
 
/*  End journaling of all files. */
 
             ENDJRNPF   FILE(*ALL) JRN(ICJRN)
 
             ENDDO
 
             IF         COND(&MPHAS *NE 'D') THEN(DO)
 
/*  Delete unattatched journal receivers */
 
/**/
/* Obtain the current receiver number from JNSTAT */
/**/
/**********  RTVDTAARA  DTAARA(JNSTAT (6 3)) RTNVAR(&COUNTA)                           */ /*CUP005*/
             RTVDTAARA  DTAARA(JNSTAT (3 8)) RTNVAR(&COUNTA)                              /*CUP005*/
             CHGVAR     VAR(&COUNT) VALUE(&COUNTA)
 
/**/
/* Delete any receivers with higher sequence numbers   */
/* that may be present from previous days.             */
/**/
             CHGVAR     VAR(&COUNT) VALUE(&COUNT + 1)
             CHGJOB     INQMSGRPY(*DFT)
 DLTRCV:
             CHGVAR     VAR(&COUNTA) VALUE(&COUNT)
/**********  CHGVAR     VAR(&JRNRCV) VALUE('ICRCV' *CAT &COUNTA)                       */ /*CUP005*/
             CHGVAR     VAR(&JRNRCV) VALUE('IR' *TCAT &COUNTA)                            /*CUP005*/
/**/
/* Continue deleting receivers until all are deleted.                */
/**/
             DLTJRNRCV  JRNRCV(&JLIB/&JRNRCV)
             MONMSG     MSGID(CPF2105) EXEC(DO)
                GOTO       CMDLBL(ENDDLTRCV)
             ENDDO
             MONMSG     MSGID(CPF0000)
             CHGVAR     VAR(&COUNT) VALUE(&COUNT + 1)
             GOTO       CMDLBL(DLTRCV)
 ENDDLTRCV:
             CHGJOB     INQMSGRPY(*RQD)
 
             ENDDO
 
             ENDDO
 
/*/COPY WNCPYSRC,CBC0009MPE                                          */
 
             GOTO       CMDLBL(END)
 
 ABNOR:
/*/COPY WNCPYSRC,CBC0009ERR                                          */
 
             CHGVAR     VAR(&RTCDE) VALUE('*ERROR')
 
 /* Send the error message */
 
             SNDPGMMSG  MSG('Program CBC0009 ended abnormally') +
                          TOMSGQ(MOPERQ)
 
END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
 
/*/COPY WNCPYSRC,CBC0009END                                          */
 
             RETURN
             ENDPGM
