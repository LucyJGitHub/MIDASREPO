/*********************************************************************/
/*S*D****CLPBASE******************************************************/                  /*CCB016A*/
/*********************************************************************/
/*                                                                   */
/*        Midas - Close of Business Processing                       */
/*                                                                   */
/*       CBCE005 - CB Identify APOSTPD LF access paths to reset      */
/*                                                                   */
/*      (c) Misys International Banking Systems Ltd. 2008            */
/*                                                                   */
/*       Last Amend No. CCB016A *REDUNDANT Date 06Aug12              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/*       Prev Amend No. CCB016  *CREATE    Date 28May08              */
/*      Midas Plus 1.4 Base -----------------------------------------*/
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CCB016A - COB Restructure                                   */
/*                 CCB016 (Change Logical File Maintenance)          */
/*       CCB016 - Delay LF Access paths over APOSTPD during GLC42.   */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&JOBS)
             DCL        VAR(&MIBSCPY) TYPE(*CHAR) LEN(64) VALUE('(C) +
                          COPYRIGHT MISYS INTERNATIONAL BANKING +
                          SYSTEMS 2008')
 
             DCL        VAR(&JOBS) TYPE(*DEC) LEN(2 0)
             DCL        VAR(&PRE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DTAQLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGLENGTH) TYPE(*DEC) LEN(5 0) VALUE(20)
             DCL        VAR(&MSGDATA) TYPE(*CHAR) LEN(20)
             DCL        VAR(&MSG) TYPE(*CHAR) LEN(75)
             DCL        VAR(&KEYLENGTH) TYPE(*DEC) LEN(3 0) VALUE(15)
             DCL        VAR(&SIZEN) TYPE(*DEC) LEN(15 0) VALUE(0)
             DCL        VAR(&SIZEA) TYPE(*CHAR) LEN(15)
             DCLF       FILE(QAFDLGL)
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO CMDLBL(ABNOR))
 
/* Send message to MRUNQ                                                                          */
             SNDPGMMSG  MSG('CBCE005 - CB Identify APOSTPD Logical +
                          File access paths to reset') TOMSGQ(MRUNQ)
 
/* Retrieve system prefix and set program variables                                               */
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&PRE)
 
             CHGVAR     VAR(&DPLIB) VALUE(&PRE *TCAT 'DPLIB')
             CHGVAR     VAR(&DTAQLIB) VALUE(&PRE *TCAT 'XLIB')
 
/* Create file information dataqueue used by CBCE007                                              */
             DLTDTAQ    DTAQ(&DTAQLIB/CCB016FILE)
             MONMSG     MSGID(CPF0000)
             CRTDTAQ    DTAQ(&DTAQLIB/CCB016FILE) MAXLEN(20) +
                          SEQ(*KEYED) KEYLEN(15) AUT(*LIBCRTAUT)
 
/* Create termination feedback dataqueue used by CBCE006                                          */
             DLTDTAQ    DTAQ(&DTAQLIB/CCB016TERM)
             MONMSG     MSGID(CPF0000)
             CRTDTAQ    DTAQ(&DTAQLIB/CCB016TERM) MAXLEN(20) +
                          AUT(*LIBCRTAUT)
 
/* For each logical file for which access path maintenance was I(mmed), send a                    */
/* message to the file information dataqueue.                                                     */
 
             OVRDBF     FILE(QAFDLGL) TOFILE(&DPLIB/CBLATRPA)
READ:        RCVF
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(CBCE006))
 
             IF         COND(&LGMANT *EQ 'I') THEN(DO)
 
                 CHGVAR     VAR(%SST(&MSGDATA 1 10)) VALUE(&LGLIB)
                 CHGVAR     VAR(%SST(&MSGDATA 11 10)) VALUE(&LGFILE)
 
                 RTVOBJD    OBJ(&LGLIB/&LGFILE) OBJTYPE(*FILE) SIZE(&SIZEN)
                 CHGVAR     VAR(&SIZEN) VALUE(100000000000000 / &SIZEN)
                 CHGVAR     VAR(&SIZEA) VALUE(&SIZEN)
 
                 CALL       PGM(QSNDDTAQ) PARM('CCB016FILE' &DTAQLIB +
                              &MSGLENGTH &MSGDATA &KEYLENGTH &SIZEA)
 
             ENDDO
 
             GOTO       CMDLBL(READ)
 
 CBCE006:    CALL       PGM(CBCE006) PARM(&JOBS)
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             DLTOVR     FILE(*ALL)
             DLTDTAQ    DTAQ(&DTAQLIB/CCB016FILE)
             DLTDTAQ    DTAQ(&DTAQLIB/CCB016TERM)
 
             GOTO       CMDLBL(END)
 
/* Error processing - Change the job switches and send messages to MRUNQ and MOPERQ               */
 
 ABNOR:      CHGJOB     SWS(XXXXXX11)
             CHGVAR     &MSG VALUE('Program CBCE005 terminated abnormally')
             SNDMSG     TOMSGQ(MRUNQ MOPERQ) MSG(&MSG)
             DMPCLPGM
 
 END:        CHGVAR     VAR(&MIBSCPY) VALUE('(C) COPYRIGHT MISYS +
                          INTERNATIONAL BANKING SYSTEMS 2008')
 ENDPGM
