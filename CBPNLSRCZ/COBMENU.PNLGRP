.**********************************************************************
.*STD    PNLGRP                                                       *
.*EXI *  TEXT('Midas CB Help panel group for COBMENU')
.**********************************************************************
.*
.*  Midas - Close of Business Module
.*
.*  COBMENU - COBMENU helptext
.*
.*  (c) Finastra International Limited 2020
.*
.*  Last Amend No. MD055891 *CREATE   Date 01Sep20
.*
.*-------------------------------------------------------------------
.*
.*  MD055891 - Deliverable Data Split for COB
.*
.********************************************************************
:PNLGRP.
.*
:HELP name='GEN'.
COBMENU Maintenance - User Guide
:P.
This section describes the input functions available on the
Close of Business File Maintenance Menu (options 1 to 12). Each individual
help section can be displayed from its respective option by pressing F1 key.
:P.
Here are the links to the following sections (press enter while cursor is on yellow link
to display full help text):
:P.:LINK PERFORM='DSPHELP COB1'.
1. Amend COB Components File                                     ::ELINK.
To allow the insertion, amendment, enquiry into and deletion of Components from the Components file.
:P.
:LINK PERFORM='DSPHELP COB2'.
2. Amend COB Dependencies File                                      :ELINK.
To allow the insertion, amendment, enquiry into and deletion of Dependency Relations from
Dependency Relations file.
:P.
:LINK PERFORM='DSPHELP COB3'.
3. Amend COB Module Conditions File                                 :ELINK.
To allow the insertion, amendment, enquiry into and deletion of Module Conditions from the Module
Conditions file.
:P.
:LINK PERFORM='DSPHELP COB4'.
4. Amend COB Mutually Exclusive Components File                     :ELINK.
To allow the insertion, amendment, enquiry into and deletion of Mutually Exclusive Components
from the Mutually Exclusive Components file.
:P.
:LINK PERFORM='DSPHELP COB5'.
5. Produce Component Level Report (Dependencies)                    :ELINK.
This function will produce a report which details the before and after dependency relations for
each component by means of a level number. The level number is generated by this function and
may be used in analysis of the Component and Dependency files.
:P.
:LINK PERFORM='DSPHELP COB6'.
6. Produce Component Detail Report                                  :ELINK.
This function allows the user to request a report detailing information about a component, its
dependencies and, if any exist, Module Condition and Mutually Exclusive Component details. This
report can be requested for an individual component, all components in a module or all
components defined in Fusion Midas.
:P.
:LINK PERFORM='DSPHELP COB7'.
7. Produce Component Summary Report                                 :ELINK.
This function allows the user to request a report detailing brief information about all
components defined. The details are the component name, sequence number, execution parameters and
the text displayed when the component is running.
:P.
:LINK PERFORM='DSPHELP COB8'.
8. Restore original data to COB files                               :ELINK.
When this menu is called, backups of the twelve COB files (maintained by options 1 to 4 on this
menu) are taken to a save file. This option allows the user to restore the data from this
save file to the COB files.
:P.
:LINK PERFORM='DSPHELP COB9'.
9. Validate COB files                                               :ELINK.
To allow the user to run a checking job to validate the COB files. You will be prompted for the
name of the library which contains the COB files to be validated (usually xxDTALIB).  This
validation will occur automatically on exiting the menu, if an insertion, amendment or deletion
to any one of the COB files has taken place. In this case, there will be no prompt for the
library name; it will validate the files which have been updated (taken from your library list).
:P.
:LINK PERFORM='DSPHELP COB11'.
11. Work with job's spool files                                     :ELINK.
This option allows the user access to all spool files produced by the current job.
:P.
:LINK PERFORM='DSPHELP COB1'.
12. Amend Task Split Components                                     :ELINK.
To allow the enquiry into and amendment of task split components.  This screen is a subset of the
details provided by the Amend COB Components Function.
:EHELP.
:HELP name='COB1'.
:P.
:HP7. 1. Amend COB Components File :EHP7.
:P.
The Close of Business processing requires all component details
to be held on a components master file.
:P.
Through this program, details of components can be inserted,
amended and deleted, but a record cannot be deleted if a record
exists for the component on the Dependency Relations File, Mutually Exclusive
File or Module Conditions File.
:P.
A record must be added for every occurrence of a component running. If
a component is to run more than once then separate
records must be added with different component sequence numbers.
:P.
There is clear distinction between Core and Bespoke components.
:UL.
:LI.Core components
:P.
Core components are the components delivered by Finastra. Core components can be amended
but change is limited to certain fields only (see details here under). Core components
cannot be deleted.
:LI.Bespoke components
:P.
Bespoke components are inserted/defined by the user. Hence all of its fields are eligible for
change. Bespoke components can be deleted provided they meet the condition here above stated.
:EUL.
:P.
:HP2.1.1      Screen Ready-Reference :EHP2.
:P.
Field Name                Status    Entry    Valid              :
Name                      A    C    Type     Entries            :
----------                ------    -----    -------            :
Component Name            M    M     10                         :
Component Sequence Number M    M      5                         :
Scheduling Priority       M    M      1N         1-9            :
Execution Priority        M    M      2N       20-99            :
Timeslice                 M    M      6P    1-999999            :
FCOOB Error Acceptability M    M      1A      N or Y            :
Module                    M    M      2                         :
Complex Module Conds Flag M    M      1A      N or Y            :
Allow Component Bypass    M    M      1A      N or Y            :
Mut.Exclusive Comps.Flag  M    M      1A      N or Y            :
Run Conditions            M    M      2A       00-99            :
Task Split Job ind.        1A Display only,    N or Y           :

:P.
:HP2.1.2 Field details :EHP2.
:P.
:HP1.1.2.1 Component Name and Component Sequence Number :EHP1.
:P.
The Name is the title of a Close of Business Component, the Sequence Number is a
unique number used within the Close of Business processing. When
inserting, the combination of Name and Number used must be unique, not one already in
use. For on-request report components, these details must also be entered in the report
component section of the Report Control Facility Report Description.
:P.
:HP1.1.2.2 Scheduling Priority :EHP1.
:P.
This field determines which component will run if more than one is able to run, a component
with a lower Scheduling Priority will run before a component with a higher Scheduling Priority.
:P.
:HP1.1.2.3 Execution priority :EHP1.
:P.
This field designates the component's run priority.
:P.
:HP1.1.2.4 Timeslice :EHP1.
:P.
This field specifies the component's timeslice in milliseconds
:P.
:HP1.1.2.5 File Controls Out of Balance Error Acceptability :EHP1.
:P.
This is used when a file out of balance is found on the audit report. If a 'Y' is entered in
the field the Close of Business run will not halt but continue with a warning message. Only
'N' or 'Y' may be entered in this field.
:P.
:HP1.1.2.6  Module :EHP1.
:P.
This field contains the main Module ID of the component. Change to this field is allowed if
component is Bespoke only.
:P.
:HP1.1.2.7 Complex Module Conditions Flag :EHP1.
:P.
A 'Y' is entered here if the component requires a module to be present, or not present, in the
system for it to run. These details are contained in the Module Conditions File. Only
'N' or 'Y' may be entered in this field.
:P.
:HP1.1.2.8 Allow Component Bypass :EHP1.
:P.
A 'Y' is entered here if the component may be bypassed after failure during close of business.
If the component should not be bypassed then 'N' should be entered. The field can be changed
only if COB ICD field 'Allow Comp Bypass in COB' is set to 'Y'.
:P.
If in doubt, an 'N' should be entered.
:P.
:HP1.1.2.9 Mutually Exclusive Components Flag :EHP1.
:P.
This field is used to state whether this component is mutually exclusive with any other component,
and the two components will therefore be unable to run simultaneously. These details are
contained in the Mutually Exclusive Components File.
Only 'N' or 'Y' is to be entered in this field.
:P.
:HP1.1.2.10 Run Conditions :EHP1.
:P.
Although this field can be changed, extreme care must be taken as an inappropriate value set
may cause unpredictable results. Only a technician with knowledge of the Midas Close of Business
should change this field.
:P.
Enter one of the following conditions to state on which day the
component is to be run:                                            :
00   Run on request                                                :
01   Run every day                                                 :
02   Run on an accrual day                                         :
03   Run on an accrual day followed by a non working day           :
04   Not currently used                                            :
05   Run every day if Hong Kong interest on                        :
06   Run on an accrual day which is followed by a non working day  :
and Hong Kong interest on                                          :
07   Run if FREVAL=Y, and  FREVLP=Y                                :
08   Run if FREVAL=Y, and  FREVLP=N                                :
09   Run if SREVAL=Y                                               :
10   Run if End of Month                                           :
11   Run if an accrual day and End of Month                        :
12   Run at beginning of month                                     :
13   Run on Accrual day at End Of Month                            :
14   Run on AN D Day at End of Month                               :
15   Run if SE Bulk Input = Y                                      :
16   Run if SE Auto Changes = Y                                    :
17   Run if SE Fixed Interest Present                              :
18   Run if SE Commercial Papers Present                           :
19   Run if ANWD and SE Fixed Interest Present                     :
20   Run if ANWD and SE Commercial Paper Present                   :
21   On first day of month followed by a non-working day           :
22   End of year                                                   :
23   End of month where accrual day is flwd by a non-working day   :
24   Not End of month where accrual day is flwd by a non-wrkg day  :
25   On last Monday of month                                       :
26   On last Tuesday of month                                      :
27   On last Wednesday of month                                    :
28   On last Thursday of month                                     :
29   On last Friday of month                                       :
30   On last Saturday of month                                     :
31   On last Sunday of month                                       :
80 - User defined run condition                                    :
81 - If End of Calendar Year                                       :
82 - User defined run condition                                    :
83 - User defined run condition                                    :
84 - User defined run condition                                    :
85 - User defined run condition                                    :
86 - User defined run condition                                    :
87 - User defined run condition                                    :
88 - User defined run condition                                    :
89 - User defined run condition                                    :
90 - User defined run condition                                    :
91 - User defined run condition                                    :
92 - User defined run condition                                    :
93 - User defined run condition                                    :
94 - User defined run condition                                    :
95 - User defined run condition                                    :
96 - User defined run condition                                    :
97 - User defined run condition                                    :
98 - User defined run condition                                    :
99 - User defined run condition                                    :
32 - Every Monday                                                  :
33 - Every Tuesday                                                 :
34 - Every Wednesday                                               :
35 - Every Thursday                                                :
36 - Every Friday                                                  :
37 - Every Saturday                                                :
38 - Every Sunday                                                  :
40 - Day followed by non-working day                               :
39 - Non-working day                                               :
:P.
:HP1.1.2.11 Task Split Job Indicator :EHP1.
:P.
This field is for display purposes only.  Values shown will be N or Y.
This field will have been set when the system was installed.
:P.
:HP1.1.2.12 Number of Task Split Jobs :EHP1.
:P.
This field will only appear on the screen with option 12 (Amend Task Split Components). The
entry is mandatory and must be a valid numeric in the range 1-999. A
default value will have been delivered when the system was installed.  It should only be changed
by a technician with knowledge of the task split process when tuning the Close of Business.
:P.
:HP1.1.2.13 Execution Parameters :EHP1.
:P.
Enter in this field any parameters which this component requires in order to be called. Change is
to this field is allowed if component is Bespoke only.
:P.
There are only few core components where
parameter can be changed. This are the task split server components where one of the parameter
is the 'number of records to copy'. Change to this parameter may impact performance, hence only
a technician with knowledge of the Midas Close of Business should change this field.
:P.
:HP1.1.2.14 Component Text :EHP1.
:P.
The text for the component must be input, and will be displayed on the monitor whilst the component
is running. The text should  begin 'Midas XX' where XX is the module ID of the component.
:P.
Change to this field is allowed if component is Bespoke only.
:EHELP.
:HELP name='COB2'.
:P.
:HP7. 2. Amend COB Dependencies Files :EHP7.
:P.
The Close of Business processing requires all dependency relations for each component to be
held on the Dependency Relations File.
Through this program, details of a dependency can be inserted and deleted, but a
record cannot be inserted if a record does not exist for the component on the Components File.
:P.
Also, deletion of core dependency (delivered by Finastra) is not allowed.
:P.
:HP2.2.1 Screen ready-reference :EHP2.
:P.
Field Name                  Status    Entry   Valid             :
Name                        A    C    Type    Entries           :
----------                  ------    -----   ------            :
Component                                                       :
Depends-on Name             M    M     10                       :
Component                                                       :
Depends-on Sequence Number  M    M      5                       :
Component                                                       :
Depends-on unique Number    M    M      3                       :
Component                                                       :
Depended-on Name            C    O     10                       :
Component                                                       :
Depended-on Sequence Number C    O      5                       :
:P.
:HP2.2.2 Field details :EHP2.
:P.
:HP1.2.2.1 Component depends-on name, component depends-on sequence number
and component depends-on unique number. :EHP1.
:P.
The Name is the title of a Close of Business Dependency, the Sequence Number and Unique Number
are unique numbers used within Close of Business processing.
When inserting, the combination of Name, Sequence Number and Unique Number must be unique, not
one already in use.
:P.
:HP1.2.2.2 Component depended-on name and component depended-on sequence number :EHP1.
:P.
These two fields are used to state which component this component depends on.
:EHELP.
:HELP name='COB3'.
:P.
:HP7.3. Amend COB Module Conditions File :EHP7.
:P.
The Close of Business processing requires the module conditions, if any, relating to each component
to be defined in the system. A Module Condition defines whether another module must be on or
off in order that this component may run. These details are to be held on the Module Conditions
file.
:P.
Through this program, details of the module conditions for a component can be inserted,
amended and deleted, but a record cannot be inserted unless a record already exist for this
component on the Components File with the module conditions flag set to 'Y'.
:P.
Also, amendment and deletion of core module conditions (delivered by Finastra) is not allowed.
:P.
:HP2.3.1 Screen ready-reference :EHP2.
:P.
Field Name                   Status    Entry    Valid           :
Name                         A    C    Type     Entries         :
----------                   ------    -----    -------         :
Component Name               M    M    10                       :
Component Sequence Number    M    M     5                       :
Unique Number                M    M     2                       :
Module ID 01                 M    M     2                       :
Module must be/not b                                            :
present                      M    M     1A      Y or N          :
Module ID 02                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 03                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 04                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 05                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 06                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 07                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 08                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 09                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
Module ID 10                 O    O     2                       :
Module must be/not b                                            :
present                      O    O     1A      Y or N          :
:P.
:HP2.3.2 Field details :EHP2.
:P.
:HP1.3.2.1 Component name, component sequence number and unique number :EHP1.
:P.
The Name is the title of a Close of Business Component, the Sequence Number and Unique Number
are unique numbers used within Close of Business processing. When
inserting, the combination of Name, Sequence Number and Unique Number must not be in use
already.
:P.
:HP1.3.2.2 Module ID :EHP1.
:P.
This field designates which specified module is required to be present or not present in the
system for the component to run.
:P.
:HP1.3.2.3 Module must be/not be present :EHP1.
:P.
If 'Y' is entered in this field the module ID has to be present on the system. If
'N' is entered the module ID must not be present in the system.
:EHELP.
:HELP name='COB4'.
:P.
:HP7.4. Amend COB Mutually Exclusive Components File :EHP7.
:P.
The Close of Business processing requires details of all mutually exclusive components to be
held on the Mutually Exclusive Components File. Mutually Exclusive Components are those which
are not dependent on each other but must not run at the same time in different streams.
:P.
Through this program, details of mutually exclusive components can be inserted and
deleted. A record cannot be inserted unless records already exist for both components on the
Components File with the mutually exclusive components flag set to 'Y' for each component. When
inserting and deleting details for mutually exclusive components, records must be entered
in pairs. The first showing component A mutually exclusive to component B, and the second
showing component B mutually exclusive to component A. This is automatically done by the system.
:P.
Also, deletion of core mutually exclusive components (delivered by Finastra) is not allowed.
:P.
:HP1.4.1 Screen ready-reference :EHP1.
:P.
Field Name                Status    Entries                     :
Name                      A    C    Type                        :
----------                ------    -------                     :
Component Name            M    M        10                      :
Component Sequence Number M    M         5                      :
Mutually Exclusiv                                               :
Unique Number             M    M         2                      :
Mutually Exclusiv                                               :
Component Sequence Number M    M         5                      :
:P.
:HP1.4.2 Field details :EHP1.
:P.
:HP2.4.2.1 Component name, sequence number and mutually exclusive unique
number :EHP2.
:P.
The Name is the title of a Mutually Exclusive Component, the Sequence Number and Unique Number
are unique numbers used within Close of Business processing. When
inserting, the combination of Name, Sequence Number and Unique Number used must not be in
use already.
:P.
:HP2.4.2.2 Mutually exclusive component name and component sequence number :EHP2.
:P.
These two fields state which component is mutually exclusive to this component
:EHELP.
:HELP name='COB5'.
:P.
:HP7.5. Produce Component Level Report (Dependencies) :EHP7.
:P.
This function will produce a report which details the before and after dependency relations for
each component by means of a level number. The level number is generated by this function and
may be used in analysis of the Component and Dependency files
:P.
Enter the name of the library which contains the COB files and use option 11 to view the report.
:EHELP.
:HELP name='COB6'.
:P.
:HP7.6. Produce Component Detail Report :EHP7.
:P.
This function allows the user to request a report detailing information about a component, its
dependencies and, if any exist, Module Condition and Mutually Exclusive Component details. This
report can be requested for an individual component, all components in a module or all
components defined in Fusion Midas.
:P.
Insert details as requested and press enter.
:P.
If report is requested for a single component, report can be displayed by using option 11
(11. Work with job's spool files). If report is requested for a module or 'ALL', check submitted
job CBC0210.
:EHELP.
:HELP name='COB7'.
:P.
:HP7.7. Produce Component Summary Report :EHP7.
:P.
This function allows the user to request a report detailing brief information about all
components defined. The details are the component name, sequence number, execution parameters and
the text displayed when the component is running.
:P.
Report can be displayed by using option 11 (11. Work with job's spool files).
:EHELP.
:HELP name='COB8'.
:P.
:HP7.8. Restore original data to COB files :EHP7.
:P.
When this menu is called, backups of the twelve COB files (maintained by options 1 to 4 on this
menu) are taken to a save file. This option allows the user to restore the data from this
save file to the COB files.
:EHELP.
:HELP name='COB9'.
:P.
:HP7. 9. VALIDATION OF THE COB FILES :EHP7.
:P.
When validation is requested or upon exit from the menu after updating any of the four COB files,
a checking job will run to validate the new versions of the files. During processing, the
following message will be sent:
:P.
'Validation of COB Component and Dependency files taking place.'
:P.
If this process completes normally, you will be sent the message:
'Validation of COB files complete. The files are correct.'
:P.
If an error has been found during the checking process you will be sent one of the following
messages and returned to the menu:
:UL.
:LI.'A Dependency Loop conflict has occurred. See report CB9010P1.'
:LI.'A database error has ocurred. See report CHKCOBP1.'
:LI.'A database error has occurred during the the COB file validation processing - Job terminated.'
:EUL.
:P.
Two reports will have been produced. These are the COB Component and Dependency file error
report (CHKCOBP1) and the COB Loop Checker report (CB9010P1). One
or more of the following problems may have occurred, as identified by a message on CHKCOBP1. The
following sections give information on how to resolve these problems.
:P.
:HP2.9.1 Record Missing from Components File :EHP2.
:P.
'No record exists on the Components file for component XXXXXXXXXX XXXXX which is defined as
as being dependent on component YYYYYYYYYY YYYYY in the Dependency file. Checking
cannot continue until the component is added to the Components file.
Either the component is a valid one, in which case you must add it to the components file, or it
is not required, in which case the dependency relation must be deleted.
If the component is valid then use the file amendment utilities to
:P.
:UL.
:LI.delete the dependency relation define
:LI.add the component record to the components file
:LI.add the dependency relation to the file
:EUL.
If this is attempted manually, you may not correctly update the number of outstanding dependencies
for component XXXXXXXXXX XXXXX which is performed by the file amendment utilities. If
the component is not required then use the file amendment utilities to
:UL.
:LI.delete the dependency relation define
:EUL.
:P.
:HP2.9.2 No Records on Components File :EHP2.
:P.
'No records exist on the Components file. Checking cannot continue. The
components file in your DTALIB is empty. Refresh your COB files in order to be able to run
both this utility and a Close of Business in your Fusion Midas system.
:P.
:HP2.9.3 Component Without Dependencies :EHP2.
:P.
'Component XXXXXXXXXX XXXXX is not defined as being a Depended-on component in the Dependencies
file. Checking cannot continue.
Either the component is a valid one in which case you must define it as a Depended-on component
in the Dependencies file, or it is not valid in which case the component must be deleted from
the Components file.
:P.
If the component is valid then use the file amendment utilities to
 - add a new dependency relation. If there are no components which will depend on component XXX
XXXXXXX XXXXX then the dummy component COBEND 00001 must be made dependent on it. If
this is attempted manually you may not correctly update the number of outstanding dependencies
for dummy component COBEND  00001 which is performed by the file amendment utilities.
:P.
If the component is invalid then it must be deleted from the compone ts file using the file am
endment utilities
  - delete the component XXXXXXXXXX XXXXX. This may also involve the deletion of other components
and dependency relations from the files
:P.
:HP2.9.4 COBBEGIN Record Missing :EHP2.
:P.
'Dummy component COBBEGIN has not been defined in the Components file. Checking cannot continue.
The dummy component COBBEGIN 00001 must be defined in the components file. If this record is
missing your COB files may be corrupt. Refresh these files in order to be able to run both this
utility and a Close of Busines
:P.
:HP2.9.5 Discrepancy in Number of Dependencies :EHP2.
:P.
'The number of outstanding Dependencies defined on the Components file for Component XXXXXXXXX
X XXXXX was mmmmm/ZERO and this component was defined as a Depends-on component in the
following nnnnn dependencies
This discrepancy has been corrected
XXXXXXXXXX XXXXX ppp YYYYYYYYYY YYYYY
This message is output if there is a discrepancy between the number of outstanding dependencies
on the record for component XXXXXXXXXX XXXXX and the number of records on the dependencies
file (nnnnn) for this component.
:P.
:HP2.9.6 Record Missing from Mutually Exclusive Components File :EHP2.
:P.
'Mutually Exclusive Flag set to Y for component XXXXXXXXXX XXXXX but no record was found on the
Mutually Exclusive Components File.
Any component flagged as mutually exclusive must also be added to the Mutually Exclusive Compo
nents File
:UL.
:LI.If records are missing from the Mutually Exclusive Components File add them to the fil
:LI.If no records should be defined on the Mutually Exclusive Components File amend the Mutually
 Exclusive Components Flag for component XXXXXXXXXX XXXXX on the components file to 'N')
:EUL.
:P.
:HP2.9.7 Record Missing from Module Conditions File :EHP2.
:P.
'Module Condition Flag set to Y for component XXXXXXXXXX XXXXX but no records were found on the
Module Conditions File.'
:P.
If the Complex Module Condition Flag has been set to 'Y' on the components file for any component
then the appropriate records must also be added to the Module Conditions File.
- If records are missing from the Module Conditions File add them to the file
- If no records should be defined on the Module Conditions File amend the Module Conditions Flag
for component XXXXXXXXXX XXXXX on the components file to 'N'.
:P.
:HP2.9.8 Dependency Loop :EHP2.
:P.
'In validating the Dependencies file, a Dependency loop has been discovered. See report CB9010
for details.'
:P.
This message is printed if an error has been found in a chain of dependencies. This is determined
by program CB9010, and further details of the error will be printed on the report CB9010P1 as
described below.
:P.
:HP1.9.8.1 No Components Depend on COBBEGIN :EHP1.
:P.
The dummy component COBBEGIN 00001 has not been defined on the dependencies file as the depended
-on component for any components. Since COBBEGIN is the first component which will run in the
Close of Business and no components depend on it, nothing else will run.
:P.
:UL.
:LI.Either refresh your COB files in the DTALIB
:LI.Or enter the dependency relations for components which depend on COBBEGIN
:EUL.
:P. One of these must be done in order to be able to run both this utility and a Close of Business
 in your Fusion Midas system.
:P.
:HP1.9.8.2 Broken Chain :EHP1.
:P.
'BROKEN CHAIN - No components depend on XXXXXXXXXX XXXXX'
The only component which should have no dependencies is COBEND, the last (dummy) component in
the Close of Business. Either the component is valid, in which case
you must define it as a depended-on component in the dependencies file, or it is not
valid, in which case the component must be deleted from the components file.
:P.
If the component is valid, then use the file amendment utilities to
:UL.
:LI.add a new dependency relation to the file. If there are no components which will be dependent
on component XXXXXXXXXX XXXXX, then the dummy component COBEND 00001 must be made
dependent on it.
:P.
If this is attempted manually, you may not correctly update the number of outstanding dependencies
for dummy component COBEND 00001 which is performed by the file amendment utilities.
:P.
If the component is invalid, then it must be deleted from the components file using the file
amendment utilities.
:LI.delete the component XXXXXXXXXX XXXXX from the components file. This may also involve the
deletion of other components and dependency relations from the files.
:EUL.
:P.
:HP1.9.8.3 Loop in Chain :EHP1.
:P.
'LOOP exists in the following chain
n.XXXXXXXXXXXXXXX n+1.YYYYYYYYYYYYYYY n+2. ZZZZZZZZZZZZZZ
n+3. etc.'
:P.
This message indicates that whilst building a dependency chain from your COB dependencies file,
the COB loop checker program (CB9010) attempted to add a component which already existed in
the chain. Details of the loop are printed on the report, from
the beginning of the chain to the second occurrence of the component.
:P.
The correct dependencies should be determined and added/deleted from the dependencies file using
the file amendment utilities.
:P.
If this is attempted manually, you may not correctly update the number of outstanding dependencies
for other components which is performed by the file amendment utilities.
:P.
:HP1.9.8.4 Database Error in Components :EHP1.
:P.
'DATABASE ERROR: record not found for: XXXXXXXXXX XXXXX'
:P.
The component XXXXXXXXXX XXXXX has no components dependent on it. The only component which should
have no dependencies is COBEND, the last component in the Close of Business. Either the
component is valid, in which case you must define it as a depended-on component
in the dependencies file, or it is not valid, in which case the component must be deleted from the
components file.
:P.
If the component is valid, then use the file amendment utilities to
:UL.
:LI.add a new dependency relation to the file. If there are no components which will be dependent
on component XXXXXXXXXX XXXXX, then the dummy component COBEND 00001 must be made
dependent on it.
:P.
If this is attempted manually, you may not correctly update the number of outstanding dependencies
for dummy component COBEND 00001 which is performed by the file amendment utilities. If
the component is invalid, then it must be deleted from the components file using the file am
endment utilities.
:LI.delete the component XXXXXXXXXX XXXXX from the components file. This may also involve the
deletion of other components and dependency relations from the files.
:EUL.
:P.
:HP1.9.8.5 Redundant Dependency :EHP1.
:P.
'REDUNDANT DEPENDENCY for: XXXXXXXXXX XXXXX to COBEND'
:P.
The component XXXXXXXXXX XXXXX is defined as the depended-on component for more than one component
, one of which is the dummy component COBEND 00001. This is a redundant dependency if other
dependencies are defined for the component. Therefore, the
dependency for XXXXXXXXXX XXXXX to COBEND can be deleted using the file amendment utilities.
:P.
If this is attempted manually, you may not correctly update the number of outstanding dependencies
ies for dummy component COBEND which is performed by the file amendment utilities. If
the redundant dependency is not removed, it will NOT prevent the running of this utility or
a Close of Business in your Fusion Midas system.
:P.
:HP1.9.8.6 Database Error in Dependencies :EHP1.
:P.
'DATABASE ERROR: record not found for XXXXXXXXXX XXXXX  YYYYYYYYYY YYYYY nnn'
:P.
The dependency
relationship between components XXXXXXXXXX XXXXX and YYYYYYYYYY YYYYY has not been defined. If
it is a valid dependency relationship, add it to the dependencies file using the file amendment
utilities.
:P.
If the dependency relationship is not required, other dependency relationships concerning these
components will be affected, and can be amended using the file amendment utilities. If
this is attempted manually, you may not correctly update the number of outstanding dependencies
for components affected which is performed by the file amendment utilities.
:P.
:HP1.9.8.7 Component Not Processed :EHP1.
:P.
'COMPONENT NOT PROCESSED - not in chain: XXXXXXXXXX XXXXX    YYYY YYYYY YYYYY nnn'
:P.
The dependency relationship between components XXXXXXXXXX XXXXX and YYYYYYYYYY YYYYY has not been
used when building up the dependency chains from your COB dependencies file. If
the dependency is not required, delete the record from the dependencies file using the file
amendment utilities.
:P.
If the relationship is required, extra dependencies need to be added to include the dependency
relationship between XXXXXXXXXX XXXXX and YYYYYYYYYY YYYYY in the dependency chain. Add the
dependencies using the file using the file amendment utilities. If
this is attempted manually, you may not correctly update the number of outstanding dependencies
for components affected which is performed by the file amendment utilities.
:EHELP.

:HELP name='COB11'.
:P.
:HP7.11. Work with job's spool files :EHP7.
:P.
:EHELP.
:HELP name='COB12'.
:P.
:HP7.12. Amend Task Split Components :EHP7.
:P.
:EHELP.
:EPNLGRP.
