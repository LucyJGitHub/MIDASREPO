     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CB Dependency relations maintenance')            *
      *****************************************************************
      *                                                               *
      *  Midas - Close of Business Module                             *
      *                                                               *
      *  CB0410M - Dependency Relations maintenance.                  *
      *                                                               *
      *  Function:  This program allows the user to maintain the      *
      *             Dependency Relations file.                        *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CCB020C            Date 16May13               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CCB008             Date 12Oct98               *
      *                 105705             Date 12JUL96               *
      *                 090416             Date 12JUL95               *
      *                 S01459             Date 12JUL95               *
      *                 S01417             Date 24AUG93               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CCB020C - COB Restructure - Secondary COB Infrastructure     *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CCB008 - Synon Closedown Project (CB):                       *
      *           - File removed from CB model.                       *
      *  105705 - Processing errors occur if the lowest value of      *
      *           'Unique Number' is not '001'.                       *
      *  090416 - 1. Standardise the header/footer.                   *
      *           2. Remove 'components depends-on unique No' from    *
      *              the screen and generate it in the background.    *
      *           3. Create both sides of the mutually exclusive      *
      *              record.                                          *
      *           4. Addition of help.                                *
      *  S01459 - Addition of headerbox and PSSR processing.          *
      *  S01417 - Add 1A function input parameter to indicate         *
      *              successful update made to master file            *
      *                                                               *
      *****************************************************************
     FCB0410M#CF  E                    WORKSTN                        UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas CB Dependency relations maintenance
      *
     FCBDPRLL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas CB Dependency relations retrieval
      *
     FCBCMPNL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas CB Components retrieval
      *
     FCBCMPNL0UF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * UPD : Midas CB Components update
      *
     FCBDPRLL0UF  E           K        DISK                      A    UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * UPD : Midas CB Dependency relations update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSCBDPRLL0
      * UPD : Midas CB Dependency relations update
      * Current/previous master file format fields for change control
      *
     IQCBCM1    E DSCBCMPNL0
      * UPD : Midas CB Components update
     IYARDCS      DS                            262
     IYBRDCS      DS                            262
     IYCRDCS      DS                             34
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * B :  Successful Update Made
     I                                        1   1 P1SUPD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Question Mark Invalid'
      * Member Name
     I                                        1  10 ZA0001
      * Message data for 'Compnt/depended on exists'
      * Component Depends-on Name
     I                                        1  10 ZA0002
      * Compnt Depends-on Seq No
     I                                       11  15 ZA0003
      * Compnt Depended-on Name
     I                                       16  25 ZA0004
      * Compnt Depended-on Seq No
     I                                       26  30 ZA0005
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1SUPD    PARM P1SUPD    WP0001  1        Successful Upda
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise and load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END
     C                     END
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile header
      * Start of 090416
      * Footer for edit file - Dependency Relations  *
     C*****************************************************************
     C*  Set up the function key footer text
     C*
     C                     MOVEL'CBUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C*  If program mode is ADD:
     C*
     C           W0PMD     IFEQ 'ADD'
     C* Setup footer text:
     C* F3=Main Menu   F5=Refresh   F9=Go to 'Change' Mode
     C                     MOVEL'CBM0197' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
     C*
     C* Setup footer text:
     C* D=Delete   F3=Main Menu   F5=Refresh   F9=Go to 'Add' Mode
     C                     MOVEL'CBM0198' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     END
      * End of 090416
      *................................................................
      * If CHANGE mode, then position file:
     C           W0PMD     IFNE 'ADD'
     C           *LIKE     DEFN #2DSON    WZDSON
     C                     MOVEL#2DSON    WZDSON           Component Depen
     C           *LIKE     DEFN #2DSOS    WZDSOS
     C                     MOVEL#2DSOS    WZDSOS           Compnt Depends-
     C           KPOS      KLIST
     C                     KFLD           DIDSON           Component Depen
     C                     KFLD           DIDSOS           Compnt Depends-
     C                     KFLD           DIDRUN           Comp Depends-on
      * Setup key
     C                     MOVEL#2DSON    DIDSON           Component Depen
     C                     MOVEL#2DSOS    DIDSOS           Compnt Depends-
     C                     MOVEL#2DRUN    DIDRUN           Comp Depends-on
      * 82=EOF
     C           KPOS      SETLL@DIREGK              82    *
      * 82=EOF
     C  N82                READ @DIREGK                9182*
     C                     ELSE
     C                     SETOF                     82    *
     C                     END
      * Load subfile page
     C                     EXSR BBLDSF
      *................................................................
      * If no records found, display error message
     C   82      ##RR      IFEQ *ZERO                      IF
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page (write empty page if add mode)
      *================================================================
     C                     SETOF                     84    No SFLNXTCHG
      * Re-establish fields in read-ahead record
     C   27      W0PMD     IFNE 'ADD'
     C  N82                READP@DIREGK                  90*
     C  N82                READ @DIREGK                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVE *ALL'0'   WKIND0  5
     C                     MOVE *ALL'1'   WKIND1  5
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
     C                     Z-ADD*ZERO     ##RROK  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next subfile page
     C  N82      ##RROK    DOWLT##SFLN                     DO
     C                     ADD  1         ##RR
     C                     MOVEAWKIND0    *IN,33
     C                     SETOF                     87    *
      * Clear subfile fields
     C                     EXSR MAIZ#1
      * If CHANGE mode, load subfile fields
     C           W0PMD     IFNE 'ADD'
     C                     EXSR MBFL#1
      * Validate subfile record and calculate derived fields
     C                     EXSR DFV2RC
     C                     END
      * Output to subfile
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           W0PMD     IFNE 'ADD'
      * 82=EOF
     C                     READ @DIREGK                  82*
     C                     END
     C  N82                END
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN89     IFNE CAIN89
     C           *IN81     ORNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN89     CAIN89  1
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
     C           W0PMD     IFNE 'ADD'
      * Check Compnt Depends-on Seq No is numeric
     C                     MOVEL*IN90     XG90    1
     C                     TESTN          #2DSOS     90  90*
     C   90                MOVE #2DSOS    XGX1    1
     C   90                TESTB'0123'    XGX1           90*
      * All blank is OK
     C  N90      #2DSOS    COMP *BLANKS                  90*
      * '?' is OK
     C  N90                MOVEL#2DSOS    XGX1
     C  N90      XGX1      COMP '?'                      90*
     C           *IN90     IFEQ '0'
      * Send message '*Field must be numeric'
     C                     MOVEL'Y2U0010' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
     C                     END
     C                     MOVELXG90      *IN90
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
      * Change of position specified
     C           WZDSON    CASNE#2DSON    FBRQRL           Component Depen
     C           WZDSOS    CASNE#2DSOS    FBRQRL           Compnt Depends-
     C                     END
     C                     END
      * Quit if reload requested
     C           W0RSF     CABEQ'Y'       DAEXIT
      *
     C   81                DO
      * No data entered as yet
     C                     MOVEL'N'       WKIPIN  1
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Process subfile records
     C                     EXSR DBPRSF
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * If data entered
     C           WKIPIN    IFEQ 'Y'
      * Update DBF from subfile
     C                     EXSR EAPRSF
      * If error during update, exit:
     C           *IN99     CABEQ'1'       DAEXIT
     C                     END                             WKIPIN
     C                     END
      * Switch between *ADD/*CHANGE modes
     C   09                EXSR FACHMD
      * USER: Process command keys
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
     C                     EXSR DCPRSR
     C                     SETOF                     87    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,33
      * No errors
     C                     SETOF                     98
      * No SFLNXTCHG
     C                     SETOF                     84
     C           W0PMD     IFEQ 'ADD'
      * Check for null record
     C                     EXSR DDNLRC
     C           W0NLR     IFEQ 'Y'
     C                     GOTO DCEXIT
     C                     END
      * If not null record, continue
     C                     END
      * Data entered
     C                     MOVEL'Y'       WKIPIN
      * SFLNXTCHG
     C                     SETON                     84
      * If delete request, bypass validation
     C           #1SEL     IFEQ 'D'
     C                     GOTO DCEXIT
     C                     END
      * Validate subfile record
     C                     EXSR DEV1RC
      * If SFLRCD invalid, note the fact
     C   98N99             Z-ADD##RR      ##SFRC     99    *
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DDNLRC    BEGSR
      *================================================================
      * Check for null record
      *================================================================
     C                     MOVEL'N'       W0NLR   1
     C           #1DSON    CABNE*BLANK    DDEXIT           Component Depen
     C           #1DSOS    CABNE*BLANK    DDEXIT           Compnt Depends-
     C           #1DDON    CABNE*BLANK    DDEXIT           Compnt Depended
     C           #1DDOS    CABNE*BLANK    DDEXIT           Compnt Depended
     C                     MOVEL'Y'       W0NLR
      *================================================================
     CSR         DDEXIT    ENDSR
      /EJECT
     CSR         DEV1RC    BEGSR
      *================================================================
      * Validate subfile record
      *================================================================
      * Check Compnt Depends-on Seq No is numeric
     C                     MOVEL*IN90     XG90    1
     C                     TESTN          #1DSOS     90  90*
     C   90                MOVE #1DSOS    XGX1    1
     C   90                TESTB'0123'    XGX1           90*
      * All blank is OK
     C  N90      #1DSOS    COMP *BLANKS                  90*
      * '?' is OK
     C  N90                MOVEL#1DSOS    XGX1
     C  N90      XGX1      COMP '?'                      90*
     C           *IN90     IFEQ '0'
      * Send message '*Field must be numeric'
     C                     MOVEL'Y2U0010' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
     C                     END
     C                     MOVELXG90      *IN90
      * Check Compnt Depended-on Seq No is numeric
     C                     MOVEL*IN90     XG90    1
     C                     TESTN          #1DDOS     90  90*
     C   90                MOVE #1DDOS    XGX1    1
     C   90                TESTB'0123'    XGX1           90*
      * All blank is OK
     C  N90      #1DDOS    COMP *BLANKS                  90*
      * '?' is OK
     C  N90                MOVEL#1DDOS    XGX1
     C  N90      XGX1      COMP '?'                      90*
     C           *IN90     IFEQ '0'
      * Send message '*Field must be numeric'
     C                     MOVEL'Y2U0010' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
     C                     END
     C                     MOVELXG90      *IN90
      * USER: Validate subfile record fields
      * CASE: PGM.*Program mode is *ADD
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL#1DRUN    WUJ8ST           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUJ8ST    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'?INVAL'  W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL#1DSON    ZA0001           Component Depen
      * Send message 'Question Mark Invalid'
     C                     MOVEL'USR0380' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Start of 090416
      * Component depends on name & Seq no / depended on name & seq
      * CASE: PGM.*Program mode is *ADD
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL'N'       WUERCD           Err Code
      * Does record exist ? - Dependency Relations  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
      * Setup message data for message
     C                     MOVEL#1DSON    ZA0002           Component Depen
     C                     MOVEL#1DSOS    ZA0003           Compnt Depends-
     C                     MOVEL#1DDON    ZA0004           Compnt Depended
     C                     MOVEL#1DDOS    ZA0005           Compnt Depended
      * Send message 'Compnt/depended on exists'
     C                     MOVEL'CBM0150' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     983435*
     C                     SETON                     3637  *
      *
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     END                             *FI
     C                     END                             *FI
      * End of 090416
      * Validate subfile record relations
     C                     EXSR DFV2RC
      * Component Depends-on Name required
     C           #1DSON    IFEQ *BLANK                     IF
     C                     SETON                     9834  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Compnt Depends-on Seq No required
     C           #1DSOS    IFEQ *BLANK                     IF
     C                     SETON                     9835  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Compnt Depended-on Name required
     C           #1DDON    IFEQ *BLANK                     IF
     C                     SETON                     9836  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Compnt Depended-on Seq No required
     C           #1DDOS    IFEQ *BLANK                     IF
     C                     SETON                     9837  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *                                                                                      CCB020C
      ** Main Cob component cannot be dependent on a                                         CCB020C
      ** Secondary Cob component                                                             CCB020C
      *                                                                                      CCB020C
     C           #1DSON    IFNE *BLANK                                                       CCB020C
     C           #1DSOS    ANDNE*BLANK                                                       CCB020C
     C           #1DDON    ANDNE*BLANK                                                       CCB020C
     C           #1DDOS    ANDNE*BLANK                                                       CCB020C
     C                     MOVEL#1DSOS    W#DSOS  1                                          CCB020C
     C                     MOVEL#1DDOS    W#DDOS  1                                          CCB020C
     C           W#DDOS    IFEQ '2'                                                          CCB020C
     C           W#DSOS    ANDNE'2'                                                          CCB020C
     C                     MOVEL'CBM0317' ZAMSID                                             CCB020C
     C                     EXSR ZASNMS                                                       CCB020C
     C                     SETON                     983435                                  CCB020C
     C                     SETON                     3637                                    CCB020C
     C                     ENDIF                                                             CCB020C
     C                     ENDIF                                                             CCB020C
      *================================================================
     CSR         DEEXIT    ENDSR
      /EJECT
     CSR         DFV2RC    BEGSR
      *================================================================
      * Validate subfile record relations
      *================================================================
      * Check reference to Components
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983435*
     C                     END
      * Check reference to Components
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983637*
     C                     END
      *================================================================
     CSR         DFEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * Initialise subfile reload flag
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'Y'       W0RSF
     C                     ELSE
     C                     MOVEL'N'       W0RSF
     C                     END
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
     C                     MOVEL*BLANK    #1SEL
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,33
     C                     SETOF                     98
      *
     C           W0PMD     IFEQ 'ADD'
      * Process add request
     C           #1SEL     IFNE 'D'
     C                     EXSR DDNLRC
     C           W0NLR     IFNE 'Y'
     C                     EXSR ECADRQ
     C                     END
     C                     END
     C                     ELSE
     C           #1SEL     IFEQ 'D'
      * Process delete request
     C                     EXSR EDDLRQ
     C                     ELSE
      * Process change request
     C                     EXSR EECHRQ
     C                     END
     C                     END
      * If error occurred on update, note the fact
     C           *IN98     IFEQ '1'
     C           *IN99     IFEQ '0'
     C                     Z-ADD##RR      ##SFRC     99    *
     C                     END
     C                     ELSE
      * USER: Extra processing after DBF update
      * Start of 090416
      * CASE: PGM.*Program mode is *ADD
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL'N'       WUERCD           Err Code
      * Does record exist ? - Dependency Relations  *
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Not Found
     C           WUERCD    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     WUWRUN           Comp depends on
     C                     MOVEL'001'     WUDRUN           Comp Depends-on
      * Create record & gen No. - Dependency Relations  *
      *
     C           *IN98     IFNE '1'
     C                     SETOF                       9190
      *
      * Declare restrictor key work fields
     C           *LIKE     DEFN DIDSON    WQDSON           Component Name
     C           *LIKE     DEFN DIDSOS    WQDSOS           Component Seque
      *
      * Define keylist
     C           KDPRL     KLIST
     C                     KFLD           WQDSON           Component Name
     C                     KFLD           WQDSOS           Component Seque
      *                                                                   105705
      * Define keylist2                                                   105705
     C           KDPRL2    KLIST                                          105705
     C                     KFLD           WQDSON           Component Name 105705
     C                     KFLD           WQDSOS           Component Seque105705
     C                     KFLD           WQDRUN  3        Component Uniqu105705
      *
      * Move fields to key list
     C                     MOVEL#1DSON    WQDSON           Component Name
     C                     MOVEL#1DSOS    WQDSOS           Component Seque
      *
     C           KDPRL     SETLL@DIREGK                    *
     C           KDPRL     READE@DIREGK                  90*
      *
     C           *IN90     IFEQ '1'
      * Data record not found
      * Processing if Data record not found
     C                     Z-ADD001       WUSUNR  30
      * Move all fields to @DHREGJ
     C                     MOVEL#1DSON    DIDSON           Component Name
     C                     MOVEL#1DSOS    DIDSOS           Component Seque
     C                     MOVELWUSUNR    DIDRUN
     C                     MOVEL#1DDON    DIDDON
     C                     MOVEL#1DDOS    DIDDOS
      *
     C                     WRITE@DIREGJ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
      *
     C                     ELSE
      *
      *
      * Move 'Y' into parameter if DBF update complete
      *
     C                     MOVEL'Y'       P1SUPD           Successful Upda
      *
     C                     END
     C                     END
      *
      *
     C**********           MOVE WUDRUN    WUWRUN                          105705
     C                     Z-ADD0         WRKRUN  30                      105705
     C                     MOVE WRKRUN    WQDRUN                          105705
      *
     C           *IN90     DOWEQ'0'
      *
      * Process Data record
      *
     C********** WUDRUN    IFEQ DIDRUN                     *IF            105705
      *
     C**********           ADD  001       WUWRUN                          105705
     C**********           MOVE WUWRUN    WUDRUN                          105705
     C**********           MOVE DIDRUN    WUSUNR                          105705
     C**********           ADD  001       WUSUNR                          105705
     C                     ADD  001       WRKRUN                          105705
     C                     MOVE WRKRUN    WQDRUN                          105705
     C                     MOVE WRKRUN    WUSUNR                          105705
     C           KDPRL2    SETLL@DIREGK                                   105705
     C           KDPRL2    CHAIN@DIREGK              90                   105705
     C                     MOVEL'Y'       WUCRRC  1        Create record f
      *
     C**********           END                             *FI            105705
     C********** KDPRL     READE@DIREGK                  90*              105705
      *
     C                     END                             *FI
      *
     C           WUCRRC    IFEQ 'Y'
      * Move all fields to @DIREGJ
     C                     MOVEL#1DSON    DIDSON           Component Name
     C                     MOVEL#1DSOS    DIDSOS           Component Seque
     C                     MOVELWUSUNR    DIDRUN
     C                     MOVEL#1DDON    DIDDON
     C                     MOVEL#1DDOS    DIDDOS
      *
     C                     WRITE@DIREGJ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
      *
     C                     ELSE
      *
      * Move 'Y' into parameter if DBF update complete
      *
     C                     MOVEL'Y'       P1SUPD           Successful Upda
      *
     C                     END
     C                     END                             *FI
      *
     C                     END
      * Change for Dep-Relations - Components  *
     C                     EXSR SCCHRC
     C                     END                             *FI
     C                     END                             *FI
      * End of 090416
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Dependency Relatio - Dependency Relations  *
     C                     EXSR SDCRRC
     C           W0RTN     IFNE *BLANK
      * Write error detected
      * Screen errors
     C                     MOVEAWKIND1    *IN,33
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
     C                     ELSE
      * DBF write successful
      * disable entry
     C                     SETON                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete Dependency Relatio - Dependency Relations  *
     C                     EXSR SEDLRC
     C           W0RTN     IFNE *BLANK
      * Delete unsuccessful
      * Screen errors
     C                     MOVEAWKIND1    *IN,33
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * If record altered, reset subfile record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF delete successful
      * Blank out record and protect from entry
     C                     EXSR MAIZ#1
      * disable entry
     C                     SETON                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
      * Reload subfile
     C                     MOVEL'Y'       W0RSF   1
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Dependency Relatio - Dependency Relations  *
     C                     EXSR SGCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Screen errors
     C                     MOVEAWKIND1    *IN,33
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * Reset subfile record if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF update successful
      * Enable entry
     C                     SETOF                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFNE 'ADD'
     C                     MOVEL'ADD'     W0PMD
     C                     ELSE
     C                     MOVEL'CHG'     W0PMD
     C                     END
     C                     EXSR FBRQRL
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect keys if change mode or updated record
     C                     SETON                     88    *
     C   89N87             SETOF                     88    *
     C                     MOVEL*IN87     *IN78
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL*IN87     *IN77
     C           W0PMD     IFEQ 'CHG'                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
     C                     MOVEL'0'       *IN79
     C           W0PMD     IFEQ 'ADD'                      *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise subfile record
      *================================================================
      * Previous values
     C                     MOVEL*BLANK    #1DBRC
     C                     MOVEL*BLANK    #1DRUN           Comp Depends-on
     C                     MOVEL*BLANK    #1CDST           Component Depen
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #1DSON           Component Depen
     C                     MOVEL*BLANK    #1DSOS           Compnt Depends-
     C                     MOVEL*BLANK    #1DDON           Compnt Depended
     C                     MOVEL*BLANK    #1DDOS           Compnt Depended
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @DIREGK fields to subfile
      *================================================================
     C                     MOVELDIDRUN    #1DRUN           Comp Depends-on
     C                     MOVELDICDST    #1CDST           Component Depen
     C                     MOVELDIDSON    #1DSON           Component Depen
     C                     MOVELDIDSOS    #1DSOS           Compnt Depends-
     C                     MOVELDIDDON    #1DDON           Compnt Depended
     C                     MOVELDIDDOS    #1DDOS           Compnt Depended
      * Hold current record image for change detection
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #2DRUN           Comp Depends-on
     C                     MOVEL*BLANK    #2DSON           Component Depen
     C                     MOVEL*BLANK    #2DSOS           Compnt Depends-
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Does record exist ? - Dependency Relations  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DIDSON    WQSA01           Component Depen
     C           *LIKE     DEFN DIDSOS    WQSA02           Compnt Depends-
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Component Depen
     C                     KFLD           WQSA02           Compnt Depends-
      * Move fields to key list
     C                     MOVEL#1DSON    WQSA01           Component Depen
     C                     MOVEL#1DSOS    WQSA02           Compnt Depends-
     C           KRSSA     SETLL@DIREGK                    *
     C           KRSSA     READE@DIREGK                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0499' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Compnt Depended-on Name EQ DB1.Compnt Depended-o
      *   |- c2    : PAR.Compnt Depended-on Seq No EQ DB1.Compnt Depended
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1DDON    IFEQ DIDDON                     *IF
     C           #1DDOS    IFEQ DIDDOS                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END                             *FI
     C           KRSSA     READE@DIREGK                  90*
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Does record exist ? - Dependency Relations  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DIDSON    WQSB01           Component Depen
     C           *LIKE     DEFN DIDSOS    WQSB02           Compnt Depends-
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Component Depen
     C                     KFLD           WQSB02           Compnt Depends-
      * Move fields to key list
     C                     MOVEL#1DSON    WQSB01           Component Depen
     C                     MOVEL#1DSOS    WQSB02           Compnt Depends-
     C           KRSSB     SETLL@DIREGK                    *
     C           KRSSB     READE@DIREGK                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0499' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Compnt Depended-on Name EQ DB1.Compnt Depended-o
      *   |- c2    : PAR.Compnt Depended-on Seq No EQ DB1.Compnt Depended
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1DDON    IFEQ DIDDON                     *IF
     C           #1DDOS    IFEQ DIDDOS                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END                             *FI
     C           KRSSB     READE@DIREGK                  90*
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCHRC    BEGSR
      *================================================================
      * Change for Dep-Relations - Components  *
      *================================================================
      * Clear all neither parameters
     C                     MOVEL*BLANK    WN0001  1        Component Statu
     C                     Z-ADD*ZERO     WN0002  10       Scheduling Prio
     C                     Z-ADD*ZERO     WN0003  20       Execution Prior
     C                     Z-ADD*ZERO     WN0004 110       Timeslice
     C                     MOVEL*BLANK    WN0005  1        FCOOB Error Acc
     C                     MOVEL*BLANK    WN0006 60        Component Text
     C                     MOVEL*BLANK    WN0007100        Execution Param
     C                     MOVEL*BLANK    WN0008  1        Sel for Today's
     C                     MOVEL*BLANK    WN0009  2        Module
     C                     MOVEL*BLANK    WN0010  1        Complex Module
     C                     MOVEL*BLANK    WN0011  1        Restart Flag
     C                     Z-ADD*ZERO     WN0012  50       No.Outstndng De
     C                     MOVEL*BLANK    WN0013  1        Mut.Exclusive C
     C                     MOVEL*BLANK    WN0014  2        Run Conditions
     C                     Z-ADD*ZERO     WN0015  50       Start Date
     C                     Z-ADD*ZERO     WN0016  60       Start Time
     C                     Z-ADD*ZERO     WN0017  50       End Date
     C                     Z-ADD*ZERO     WN0018  60       End Time
     C                     MOVEL*BLANK    WN0019  1        Halt Before
     C                     MOVEL*BLANK    WN0020  1        Halt After
     C                     MOVEL*BLANK    WN0021  1        Component Faile
     C                     Z-ADD*ZERO     WN0022  60       End of Day Run
     C                     Z-ADD*ZERO     WN0023  60       End of Month Ru
     C                     Z-ADD*ZERO     WN0024  60       Begin of Month
     C                     Z-ADD*ZERO     WN0025  60       End of Year Run
     C                     Z-ADD*ZERO     WN0026  60       End of Day CPU
     C                     Z-ADD*ZERO     WN0027  60       End of Month CP
     C                     Z-ADD*ZERO     WN0028  60       Begin of Month
     C                     Z-ADD*ZERO     WN0029  60       End of Year CPU
     C                     MOVEL*BLANK    WN0030  1        Allow Bypass in
     C                     MOVEL*BLANK    WN0031  8        COB Stream Name
     C                     MOVEL*BLANK    WN0032  1        Task Split Job
     C                     Z-ADD*ZERO     WN0033  30       Number of Task
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @DHREGG
     C                     MOVEL#1DSON    DHCOTT           Component Name
     C                     MOVEL#1DSOS    DHCSEQ           Component Seque
      *
     C           KLCHSC    KLIST
     C                     KFLD           DHCOTT           Component Name
     C                     KFLD           DHCSEQ           Component Seque
     C           KLCHSC    CHAIN@DHREGG              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SCEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QCBCM1    YARDCS
      * USER: Processing after Data read
     C                     ADD  1         DHCODP           No.Outstndng De
      *
      * Set PGM.*Record Data Changed flag
     C           QCBCM1    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@DHREGG                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCBCMPNL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDCRRC    BEGSR
      *================================================================
      * Create Dependency Relatio - Dependency Relations  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @DIREGJ
     C                     MOVEL#1DSON    DIDSON           Component Depen
     C                     MOVEL#1DSOS    DIDSOS           Compnt Depends-
     C                     MOVEL#1DRUN    DIDRUN           Comp Depends-on
     C                     MOVEL#1DDON    DIDDON           Compnt Depended
     C                     MOVEL#1DDOS    DIDDOS           Compnt Depended
     C                     MOVEL*BLANK    DICDST           Component Depen
      *
      * USER: Processing before Data update
      * Start of 090416
     C                     GOTO SDEXIT                     *QUIT
      * End of 090416
     C           KLCRSD    KLIST
     C                     KFLD           DIDSON           Component Depen
     C                     KFLD           DIDSOS           Compnt Depends-
     C                     KFLD           DIDRUN           Comp Depends-on
      * Check for duplicate primary key
     C           KLCRSD    SETLL@DIREGJ                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR0500' W0RTN   7
      * Send message 'Dependency Relations   EX'
     C                     MOVEL'USR0500' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
     C                     WRITE@DIREGJ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
      * Start of 090416
      * Moved 'change components file for dependencies'
      * to after the user source in which the record is written
      * to the dependencies file. (in the main body of the program).
      * End of 090416
      * Start of S01417
      * Move 'Y' into parameter if DBF update complete
     C                     MOVEL'Y'       P1SUPD           Successful Upda
      * End of S01417
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SEDLRC    BEGSR
      *================================================================
      * Delete Dependency Relatio - Dependency Relations  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @DIREGJ
     C                     MOVEL#1DSON    DIDSON           Component Depen
     C                     MOVEL#1DSOS    DIDSOS           Compnt Depends-
     C                     MOVEL#1DRUN    DIDRUN           Comp Depends-on
      *
     C           KLDLSE    KLIST
     C                     KFLD           DIDSON           Component Depen
     C                     KFLD           DIDSOS           Compnt Depends-
     C                     KFLD           DIDRUN           Comp Depends-on
     C           KLDLSE    CHAIN@DIREGJ              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C           KLDLSE    SETLL@DIREGJ              9091  *
     C                     GOTO SEEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     DELET@DIREGJ                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF delete successful
      * USER: Processing after Data update
      * Change for Dep-Relations - Components  *
     C                     EXSR SFCHRC
      * Start of S01417
      * Move 'Y' into parameter if DBF update complete
     C                     MOVEL'Y'       P1SUPD           Successful Upda
      * End of S01417
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Change for Dep-Relations - Components  *
      *================================================================
      * Clear all neither parameters
     C                     MOVEL*BLANK    WN0034  1        Component Statu
     C                     Z-ADD*ZERO     WN0035  10       Scheduling Prio
     C                     Z-ADD*ZERO     WN0036  20       Execution Prior
     C                     Z-ADD*ZERO     WN0037 110       Timeslice
     C                     MOVEL*BLANK    WN0038  1        FCOOB Error Acc
     C                     MOVEL*BLANK    WN0039 60        Component Text
     C                     MOVEL*BLANK    WN0040100        Execution Param
     C                     MOVEL*BLANK    WN0041  1        Sel for Today's
     C                     MOVEL*BLANK    WN0042  2        Module
     C                     MOVEL*BLANK    WN0043  1        Complex Module
     C                     MOVEL*BLANK    WN0044  1        Restart Flag
     C                     Z-ADD*ZERO     WN0045  50       No.Outstndng De
     C                     MOVEL*BLANK    WN0046  1        Mut.Exclusive C
     C                     MOVEL*BLANK    WN0047  2        Run Conditions
     C                     Z-ADD*ZERO     WN0048  50       Start Date
     C                     Z-ADD*ZERO     WN0049  60       Start Time
     C                     Z-ADD*ZERO     WN0050  50       End Date
     C                     Z-ADD*ZERO     WN0051  60       End Time
     C                     MOVEL*BLANK    WN0052  1        Halt Before
     C                     MOVEL*BLANK    WN0053  1        Halt After
     C                     MOVEL*BLANK    WN0054  1        Component Faile
     C                     Z-ADD*ZERO     WN0055  60       End of Day Run
     C                     Z-ADD*ZERO     WN0056  60       End of Month Ru
     C                     Z-ADD*ZERO     WN0057  60       Begin of Month
     C                     Z-ADD*ZERO     WN0058  60       End of Year Run
     C                     Z-ADD*ZERO     WN0059  60       End of Day CPU
     C                     Z-ADD*ZERO     WN0060  60       End of Month CP
     C                     Z-ADD*ZERO     WN0061  60       Begin of Month
     C                     Z-ADD*ZERO     WN0062  60       End of Year CPU
     C                     MOVEL*BLANK    WN0063  1        Allow Bypass in
     C                     MOVEL*BLANK    WN0064  8        COB Stream Name
     C                     MOVEL*BLANK    WN0065  1        Task Split Job
     C                     Z-ADD*ZERO     WN0066  30       Number of Task
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @DHREGG
     C                     MOVELDIDSON    DHCOTT           Component Name
     C                     MOVELDIDSOS    DHCSEQ           Component Seque
      *
     C           KLCHSF    KLIST
     C                     KFLD           DHCOTT           Component Name
     C                     KFLD           DHCSEQ           Component Seque
     C           KLCHSF    CHAIN@DHREGG              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SFEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QCBCM1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  -1        DHCODP           No.Outstndng De
      *
      * Set PGM.*Record Data Changed flag
     C           QCBCM1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@DHREGG                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCBCMPNL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Dependency Relatio - Dependency Relations  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YCRDC   1
      *
      * Move key fields to @DIREGJ
     C                     MOVEL#1DSON    DIDSON           Component Depen
     C                     MOVEL#1DSOS    DIDSOS           Compnt Depends-
     C                     MOVEL#1DRUN    DIDRUN           Comp Depends-on
      *
     C           KLCHSG    KLIST
     C                     KFLD           DIDSON           Component Depen
     C                     KFLD           DIDSOS           Compnt Depends-
     C                     KFLD           DIDRUN           Comp Depends-on
     C           KLCHSG    CHAIN@DIREGJ              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKCBDPRLL0               91  *
     C                     GOTO SGEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YCRDCS
      * Move non-key fields to @DIREGJ
     C                     MOVEL#1DDON    DIDDON           Compnt Depended
     C                     MOVEL#1DDOS    DIDDOS           Compnt Depended
     C                     MOVEL#1CDST    DICDST           Component Depen
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@DIREGJ                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCBDPRLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * Start of S01417
      * Move 'Y' to parameter if DBF update complete
     C                     MOVEL'Y'       P1SUPD           Successful Upda
      * End of S01417
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Components
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1DSON    WK1X01  1
     C                     MOVEL#1DSOS    WK1X02  1
     C           WK1X01    IFEQ '?'                        Component Name
     C           WK1X02    OREQ '?'                        Component Seque
     C                     CALL 'CB0404S'              90  Select Componen
     C                     PARM *BLANK    W0RTN   7
     C           #1DSON    PARM #1DSON    WQ0001 10        Component Name
     C           #1DSOS    PARM #1DSOS    WQ0002  5        Component Seque
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CB0404S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     983435*
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1DSON    IFEQ *BLANK                     Component Name
     C           #1DSOS    ANDEQ*BLANK                     Component Seque
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVADH    KLIST
     C                     KFLD           DHCOTT           Component Name
     C                     KFLD           DHCSEQ           Component Seque
      * Setup key
     C                     MOVEL#1DSON    DHCOTT           Component Name
     C                     MOVEL#1DSOS    DHCSEQ           Component Seque
     C           KLVADH    CHAIN@DHREGH              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Components             NF'
     C                     MOVEL'USR0497' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0497' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Components
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1DDON    WK1X01  1
     C                     MOVEL#1DDOS    WK1X02  1
     C           WK1X01    IFEQ '?'                        Component Name
     C           WK1X02    OREQ '?'                        Component Seque
     C                     CALL 'CB0404S'              90  Select Componen
     C                     PARM *BLANK    W0RTN   7
     C           #1DDON    PARM #1DDON    WQ0003 10        Component Name
     C           #1DDOS    PARM #1DDOS    WQ0004  5        Component Seque
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CB0404S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     983637*
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1DDON    IFEQ *BLANK                     Component Name
     C           #1DDOS    ANDEQ*BLANK                     Component Seque
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBDH    KLIST
     C                     KFLD           DHCOTT           Component Name
     C                     KFLD           DHCSEQ           Component Seque
      * Setup key
     C                     MOVEL#1DDON    DHCOTT           Component Name
     C                     MOVEL#1DDOS    DHCSEQ           Component Seque
     C           KLVBDH    CHAIN@DHREGH              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Components             NF'
     C                     MOVEL'USR0497' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0497' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUJ8ST  1
      * Obtain default message file
     C           *NAMVAR   DEFN CBMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field Comp depends on numeric
     C                     Z-ADD*ZERO     WUWRUN  30
      * Define work field Comp Depends-on Unique No
     C                     MOVEL*BLANK    WUDRUN  3
      * Define work field midas rundate
     C                     MOVEL*BLANK    WUAANA  7
      * Define work field run day number
     C                     Z-ADD*ZERO     WUAKTX  50
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUAUST  1
      * Define work field date format flag
     C                     MOVEL*BLANK    WUE3ST  1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUF1ST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C                     OPEN CB0410M#
     C                     OPEN CBDPRLL1
     C                     OPEN CBCMPNL1
     C                     OPEN CBCMPNL0
     C                     OPEN CBDPRLL0
     C                     MOVEL'N'       W0PMT   1
      *
     C                     Z-ADD13        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Start of S01459
      * Remove the creation parameters and last amend box functions
      * CB0410M precompiler - Dependency Relations  *
      * End of S01459
      * Copyright Statement 1988 - Standard functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##AANA  7
     C                     MOVE MRDT      WUAANA
     C                     MOVE RDNB      WUAKTX
     C                     MOVE SUC       WUAUST
     C                     MOVE DFF       WUE3ST
     C                     MOVE MBIN      WUF1ST
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,CB0410MPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,CB0410MPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY CBCPYSRC,CBPSSRINS
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,CB0410MPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
