     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CB Display module conditions')
      *****************************************************************
      *                                                               *
      *  Midas - Close of Business Module                             *
      *                                                               *
      *  CB0420E - Complex Module Conditions Enquiry                  *
      *                                                               *
      *  Function:  This program allows the user to enquire on a      *
      *             specified module condition                        *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Prev Amend No. CCB008             Date 12Oct98               *
      *                 S01459             Date 12Oct98               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CCB008 - Synon Closedown Project (CB):                       *
      *           - File removed from CB model.                       *
      *  S01459 - Addition of headerbox and PSSR processing.          *
      *                                                               *
      *****************************************************************
     FCB0420E#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas CB Complex module conditions enquiry
      *
     FCBMDCNL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Module Conditions         Retrieval index
      *
     FCBCMPNL2IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Components               complex module conds
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IID0001      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             17
      * KEY: Module Conditions         Retrieval index
      * I : MAP Component Name
     I                                        1  10 P1COTT
      * I : MAP Component Sequence Number
     I                                       11  15 P1CSEQ
      * I : MAP Module Conds Unique No
     I                                       16  17 P1MCUN
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Module Con
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
      *
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1MCUN    IFEQ *BLANK                     Module Conds Un
     C           #1COTT    OREQ *BLANK                     Component Name
     C           #1CSEQ    OREQ *BLANK                     Component Seque
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Enable PUTOVR
     C                     SETON                     86
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           DJCOTT           Component Name
     C                     KFLD           DJCSEQ           Component Seque
     C                     KFLD           DJMCUN           Module Conds Un
      * Setup key
     C                     MOVEL#1COTT    DJCOTT           Component Name
     C                     MOVEL#1CSEQ    DJCSEQ           Component Seque
     C                     MOVEL#1MCUN    DJMCUN           Module Conds Un
     C           KRTV      CHAIN@DJREGN              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     993132*
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, then signal error
     C           *IN90     IFEQ '1'
     C                     SETON                     993132*
      * Send message 'Module Conditions      NF'
     C                     MOVEL'USR0501' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
     C                     END
      *
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Select existing record
     C                     EXSR VACKRL
      * Check relations
      * Check reference to Components
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     SETON                     9931  *
     C                     SETON                     993132*
     C                     END
      * Component Name required
     C           #1COTT    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Component Sequence Number required
     C           #1CSEQ    IFEQ *BLANK                     IF
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
      * Process detail screen input
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process key screen input
     C                     CAS            CFPRSC
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Enable PUTOVR
     C                     SETON                     86
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   05                MOVEL'Y'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C                     MOVEL'Y'       W0TRN
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1COTT    IFEQ *BLANK                     Component Name
     C           P1CSEQ    OREQ *BLANK                     Component Seque
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C           W0RPT     IFEQ 'N'
      * Disable key screen - not applicable
     C                     SETOF                     87    *
     C                     ELSE
      * Enable key screen
     C                     SETON                     87    *
     C                     END
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVEL*BLANK    #1MD01           Module 01
     C                     MOVEL*BLANK    #1MD02           Module 02
     C                     MOVEL*BLANK    #1MP01           Module be/not b
     C                     MOVEL*BLANK    #1MP02           Mod 02 be/not b
     C                     MOVEL*BLANK    #1MD03           Module 03
     C                     MOVEL*BLANK    #1MD04           Module 04
     C                     MOVEL*BLANK    #1MP03           Mod 03 be/not b
     C                     MOVEL*BLANK    #1MP04           Mod 04 be/not b
     C                     MOVEL*BLANK    #1MD05           Module 05
     C                     MOVEL*BLANK    #1MD06           Module 06
     C                     MOVEL*BLANK    #1MP05           Mod 05 be/not b
     C                     MOVEL*BLANK    #1MP06           Mod 06 be/not b
     C                     MOVEL*BLANK    #1MD07           Module 07
     C                     MOVEL*BLANK    #1MD08           Module 08
     C                     MOVEL*BLANK    #1MP07           Mod 07 be/not b
     C                     MOVEL*BLANK    #1MP08           Mod 08 be/not b
     C                     MOVEL*BLANK    #1MD09           Module 09
     C                     MOVEL*BLANK    #1MD10           Module 10
     C                     MOVEL*BLANK    #1MP09           Mod 09 be/not b
     C                     MOVEL*BLANK    #1MP10           Mod 10 be/not b
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @DJREGN fields to screen
      *================================================================
     C                     MOVELDJCOTT    #1COTT           Component Name
     C                     MOVELDJCSEQ    #1CSEQ           Component Seque
     C                     MOVELDJMCUN    #1MCUN           Module Conds Un
     C                     MOVELDJMD01    #1MD01           Module 01
     C                     MOVELDJMD02    #1MD02           Module 02
     C                     MOVELDJMP01    #1MP01           Module be/not b
     C                     MOVELDJMP02    #1MP02           Mod 02 be/not b
     C                     MOVELDJMD03    #1MD03           Module 03
     C                     MOVELDJMD04    #1MD04           Module 04
     C                     MOVELDJMP03    #1MP03           Mod 03 be/not b
     C                     MOVELDJMP04    #1MP04           Mod 04 be/not b
     C                     MOVELDJMD05    #1MD05           Module 05
     C                     MOVELDJMD06    #1MD06           Module 06
     C                     MOVELDJMP05    #1MP05           Mod 05 be/not b
     C                     MOVELDJMP06    #1MP06           Mod 06 be/not b
     C                     MOVELDJMD07    #1MD07           Module 07
     C                     MOVELDJMD08    #1MD08           Module 08
     C                     MOVELDJMP07    #1MP07           Mod 07 be/not b
     C                     MOVELDJMP08    #1MP08           Mod 08 be/not b
     C                     MOVELDJMD09    #1MD09           Module 09
     C                     MOVELDJMD10    #1MD10           Module 10
     C                     MOVELDJMP09    #1MP09           Mod 09 be/not b
     C                     MOVELDJMP10    #1MP10           Mod 10 be/not b
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP1MCUN    #1MCUN           Module Conds Un
     C                     MOVELP1COTT    #1COTT           Component Name
     C                     MOVELP1CSEQ    #1CSEQ           Component Seque
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1COTT    WK1X01  1
     C                     MOVEL#1CSEQ    WK1X02  1
     C                     MOVEL#1MCUN    WK1X03  1
     C           WK1X01    IFEQ '?'                        Component Name
     C           WK1X02    OREQ '?'                        Component Seque
     C           WK1X03    OREQ '?'                        Module Conds Un
     C                     CALL 'CB0420S'              90  Select Module C
     C                     PARM *BLANK    W0RTN   7
     C           #1COTT    PARM #1COTT    WQ0001 10        Component Name
     C           #1CSEQ    PARM #1CSEQ    WQ0002  5        Component Seque
     C           #1MCUN    PARM #1MCUN    WQ0003  2        Module Conds Un
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CB0420S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Components
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1COTT    WK1X01  1
     C                     MOVEL#1CSEQ    WK1X02  1
     C           WK1X01    IFEQ '?'                        Component Name
     C           WK1X02    OREQ '?'                        Component Seque
     C                     CALL 'CB0403S'              90  Select Particul
     C                     PARM *BLANK    W0RTN   7
     C           #1COTT    PARM #1COTT    WQ0004 10        Component Name
     C           #1CSEQ    PARM #1CSEQ    WQ0005  5        Component Seque
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CB0403S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     993132*
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1COTT    IFEQ *BLANK                     Component Name
     C           #1CSEQ    ANDEQ*BLANK                     Component Seque
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBDH    KLIST
     C                     KFLD           DHCOTT           Component Name
     C                     KFLD           DHCSEQ           Component Seque
      * Setup key
     C                     MOVEL#1COTT    DHCOTT           Component Name
     C                     MOVEL#1CSEQ    DHCSEQ           Component Seque
     C           KLVBDH    CHAIN@CMPNGX              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Components             NF'
     C                     MOVEL'USR0497' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0497' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN CBMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field midas rundate
     C                     MOVEL*BLANK    WUAANA  7
      * Define work field run day number
     C                     Z-ADD*ZERO     WUAKTX  50
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUAUST  1
      * Define work field date format flag
     C                     MOVEL*BLANK    WUE3ST  1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUF1ST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C                     OPEN CB0420E#
     C                     OPEN CBMDCNL1
     C                     OPEN CBCMPNL2
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * CB0420E Precompiler - Module Conditions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##AANA  7
     C                     MOVE MRDT      WUAANA
     C                     MOVE RDNB      WUAKTX
     C                     MOVE SUC       WUAUST
     C                     MOVE DFF       WUE3ST
     C                     MOVE MBIN      WUF1ST
      * Copyright Statement 1988 - Standard functions  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,CB0420EPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,CB0420EPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY CBCPYSRC,CBPSSRINS
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,CB0420EPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2001
