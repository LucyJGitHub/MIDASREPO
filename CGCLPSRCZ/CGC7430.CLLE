/******************************************************************/
/*STD    CLPBASEBND                                               */
/*EXI    TEXT('Midas CG NAHO Tax Advice Extract')                    */
/******************************************************************/
/*                                                                */
/*       Midas - User Defined Correspondence                      */
/*                                                                */
/*       CGC7430 - CG NAHO Tax Advice Extract (COB processing)    */
/*                                                                */
/*       (c) Finastra International Limited 2011                  */
/*                                                                */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. AR784693 *CREATE   Date 21Jun11              */
/*                                                                */
/******************************************************************/
/*                                                                */
/*       MD046248 - Finastra Rebranding                              */
/*       AR784693 - No tax advice was generated for primary       */
/*                  account defined as NAH                        */
/*                                                                */
/******************************************************************/
             PGM        PARM(&COMP_NAME &COMP_SEQ &EXTRACT &MEMBER +
                           &COMMIT_OPT)
/**/
             DCL        VAR(&ACTCPY) TYPE(*CHAR) LEN(64) VALUE('   +
                           (c) Finastra International Limited +
                           2011')
/**/
/** Declare variables */
/**/
             DCL        VAR(&COMP_NAME)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&COMP_SEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&COMP_SEQA)  TYPE(*CHAR) LEN(5)
             DCL        VAR(&EXTRACT)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MEMBER)     TYPE(*CHAR) LEN(10)
             DCL        VAR(&COMMIT_OPT) TYPE(*CHAR) LEN(3)
/**/
             DCL        VAR(&SRTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SOPTN) TYPE(*CHAR) LEN(7) +
                           VALUE('*VERIFY')
             DCL        VAR(&SSARD) TYPE(*CHAR) LEN(6) +
                           VALUE('CER048')
/**/
             DCL        VAR(&RTN_CODE)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&STATUS)     TYPE(*CHAR) LEN(1)
             DCL        VAR(&DATA)       TYPE(*CHAR) LEN(50)
             DCL        VAR(&MSG_DATA)   TYPE(*CHAR) LEN(256)
/**/
             DCL        VAR(&ACTION) TYPE(*CHAR) LEN(8)
/**/
/** Global Monitor Message */
/**/
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) +
                           EXEC(GOTO ABNORMAL)
 
/**/
/** Send Message to MRUNQ and standard processing parameters */
/**/
             SNDPGMMSG  MSG('CGC7430 - Non-Account Holder Tax +
                           Advice') TOMSGQ(MRUNQ)
             CHGJOB     SWS(XXXXX000)
 
             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
 
/**/
/** Create data LDA in QTEMP */
/**/
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
                        MONMSG     MSGID(CPF1023)
 
/**/
/** Override Message File */
/**/
             OVRMSGF    MSGF(CGUSRMSG) TOMSGF(GBCGUSRMSG)
 
/**/
/** Call Extract File Instance Management */
/**/
             CHGVAR     VAR(&ACTION) VALUE('*PREPARE')
             CALL       PGM(CGC3605) PARM(&ACTION)
 
/**/
/** Run Extract Component */
/**/
             CHGVAR     VAR(&COMP_SEQA) VALUE(&COMP_SEQ)
             CHGVAR     VAR(&MSG_DATA) VALUE(&COMP_NAME *CAT +
                           &COMP_SEQA *CAT &EXTRACT *CAT &MEMBER +
                           *CAT &COMMIT_OPT)
             SNDPGMMSG  MSGID(CGD1271) MSGF(CGUSRMSG) +
                           MSGDTA(&MSG_DATA) TOPGMQ(*PRV)
 
             CALL       PGM(CG7430) PARM(&RTN_CODE &COMMIT_OPT)
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
/**/
/** Check for Database errors trapped by program */
/**/
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
               RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&DATA)
               SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&DATA) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
               GOTO       CMDLBL(ABNORMAL)
             ENDDO
 
/**/
/** Call Custom-Defined Data Extract pgm */
/**/
             CALL       PGM(CGC3604)
/**/
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
               RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&DATA)
               SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&DATA) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
               GOTO       CMDLBL(ABNORMAL)
             ENDDO
 
/**/
/** If no error occured in the program */
/**/
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
 
/**/
/** Call CB0150 to update restart indicator */
/**/
               CHGVAR     VAR(&STATUS) VALUE('N')
               CALL       PGM(CB0150) PARM(&COMP_NAME &COMP_SEQ +
                             &STATUS)
               DLTF       FILE(XSDINPHPD)
               MONMSG     MSGID(CPF0000)
 
               RGZPFM     FILE(SDINPHPD)
               MONMSG     MSGID(CPF2995 CPF2981 CPF3135)
             ENDDO
/**/
             GOTO       CMDLBL(ENDCLPGM)
 
/**/
/** Report Database errors trapped by program */
/**/
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&DATA)
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&DATA) +
                           TOPGMQ(*EXT) TOMSGQ(MOPERQ)
 
/**/
/** Abnormal termination processing */
/**/
ABNORMAL:
             CHGVAR     VAR(&ACTION) VALUE('*CLEAR  ')
             CALL       PGM(CGC3605) PARM(&ACTION)
 
             ROLLBACK
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             DMPCLPGM
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
/**/
             SNDPGMMSG  MSG('Program CGC7430 ended abnormally') +
                           TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(' +
                           Program CGC7430 ended abnormally') +
                           MSGTYPE(*ESCAPE)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
/**/
/** Normal termination of processing */
/**/
 ENDCLPGM:   RCLRSC     LVL(*CALLER)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             CHGVAR     VAR(&ACTCPY) VALUE('(c) Copyright Finastra +
                           International Limited 2011')
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
/**/
             ENDPGM
