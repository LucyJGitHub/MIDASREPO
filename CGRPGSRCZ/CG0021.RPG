     H        1
      *****************************************************************
/*S*D****RPGBASE*******************************************************                       CSD053
/*STD *  RPGBNOCVT                                                    *                       CSD053
/*EXS *  RPGCVTOPT1                                                   *                       CSD053
/*EXI *  TEXT('Midas CG Display Correspondence Select file')
/*OVRF*: OVRDBF (File in program) (file on system)                  : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                      *
     F*                                                               *
     F*  CG0021 - Display Correspondent     Select file               *
     F*                                                               *
     F*  Function:  This program xxxxxxxxxxxxxxxxxxxxxxxxxxxx         *
     F*  (phase(s))                                                   *
     F*                                                               *
     F*  Called By: mmCnnnn - (program name)                          *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      *  Prev Amend No. CSD053             Date 01Jun06               *
      *                 CSC022             Date 24Feb04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 115722             Date 12Feb98               *
      *                 S01522             Date 21Nov94               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSD053 - Correspondence Manager Multilanguage Upgrade        *
      *         - (Recompile)                                         *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  115722 - Comment out references to CGUSRMSG/CGD1001          *
      *  S01522 - User Defined Correspondence                         *
     F*                                                               *
     F*****************************************************************
     F*DSPRCD: Cpysrc Templates Initialise Program F-Spec
     F/COPY WNCPYSRC,CG0021DFPG
     FCG0021DFCF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR SRFILE
      * DSP: Display Correspondent     Display file
      *
     FCGCORRL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR SRFILE
      * RTV : Correspondent Details     Retrieval index
      *
     FCGCORRL0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      * UPD : Correspondent Details     Update Index
      *
     E/EJECT
     E                    CPY@    1   1 80
     E*
     E*  Array containing Copyright statement
     E***************** FIRST COMPILE TIME ARRAY *********************
     E                    CMD@    1   1 80
      *
      *  Array of QCMDEXC commands
      *
     E                    EDT        80  1
      *
      *  Array of QCMDEXC command to edit
      *
      **                                                                                      CSC022
      ** Array to hold commitment jobs name                                                   CSC022
      **                                                                                      CSC022
     E                    WCMT       10 10                                                    CSC022
      **                                                                                      CSC022
     E*
     E/COPY CGCPYSRC,SRERRE
     E*
     E*  Copysource for error processing
     E*
     E*DSPRCD: Cpysrc Templates Initialise Program E-Spec
     E/COPY WNCPYSRC,CG0021DEPG
     I/COPY CGCPYSRC,SRERRI
     I*
     I*  End of Program Error Processing copysource
     I*
     I*
     I*DSPRCD: Cpysrc Templates Initialise Program I-Spec
     I/COPY WNCPYSRC,CG0021DIPG
      /EJECT
      * Data structures:
     IJBDTTM      DS
      * Job date/time
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IRUNDTA    E DSRUNDAT
     I*
     I* Get Rundate - Rundate  *
     I*
     IMMODDS    E DSSDMMODPD
     I*
     I* Modules Data Structure *
     I*
     IDSFDY     E DSDSFDY                                                 S01194
     I*                                                                   S01194
     I* Data Structures used by Access Programs                           S01194
     I*                                                                   S01194
     IDSSDY     E DSDSSDY                                                 S01194
     I*                                                                   S01194
     I* Data Structures used by Access Programs                           S01194
     I*                                                                   S01194
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I : MAP Action Code
     I                                        1   1 P1ACTC
     IP2PARM      DS                            100
      * KEY: Correspondent Details     Retrieval index
      * I : MAP Correspondent
     I                                        1  10 P2CORR
      * I : MAP Customer
     I                                       11  16 P2CUST
      * I : MAP Branch
     I                                       17  19 P2BRCH
      * I : MAP Counterparty Nostro
     I                                       20  27 P2CTRN
      * I : MAP Account identifier
     I**********                             28  45 P2ACID                                    CGL029
     I                                       28  45 P2QQID                                    CGL029
      * I : MAP Account code
     I**********                             46  49 P2ACOD                                    CGL029
     I                                       46  49 P2QQOD                                    CGL029
      * I : MAP Processing
     I                                       50  57 P2PTYP
      ** MAP Account Identifier                                                               CGL029
      *                                                                                       CGL029
     I                                       58  75 P2ACID                                    CGL029
      ** MAP Account Code                                                                     CGL029
      *                                                                                       CGL029
     I                                       76  85 P2ACOD                                    CGL029
     IO2PARM      DS                            100
      * KEY: Correspondent Details     Retrieval index
      * I : MAP Correspondent
     I                                        1  10 O2CORR
      * I : MAP Customer
     I                                       11  16 O2CUST
      * I : MAP Branch
     I                                       17  19 O2BRCH
      * I : MAP Counterparty Nostro
     I                                       20  27 O2CTRN
      * I : MAP Account identifier
     I**********                             28  45 O2ACID                                    CGL029
     I                                       28  45 O2QQID                                    CGL029
      * I : MAP Account code
     I**********                             46  49 O2ACOD                                    CGL029
     I                                       46  49 O2QQOD                                    CGL029
      * I : MAP Processing
     I                                       50  57 O2PTYP
      ** MAP Account Identifier                                                               CGL029
      *                                                                                       CGL029
     I                                       58  75 O2ACID                                    CGL029
      ** MAP Account Code                                                                     CGL029
      *                                                                                       CGL029
     I                                       76  85 O2ACOD                                    CGL029
     IO3PARM      DS                             20
      * KEY: Correspondent Association Retrieval index
      * I : RST From Correspondent
     I                                        1  10 O3FCOR
      * I : MAP To Correspondent
     I                                       11  20 O3TCOR
      *
     II#DTA       DS                            256
      *
      *  Input parameters data structure
      *
      *           Spool file name (if blank, name unchanged).
      *                 N.B. To change name I#SPLR must be Y
      *                 Unless first call of program
      *
     I                                        1  10 I#SPLN
      *
      *           Repeat open and close of spool file
      *                 If Y create new spool file
      *
     I                                       11  11 I#SPLR
      *
      *           Report Reference if Access checking is off
      *
     I                                       12  21 I#REFN
      *
      *           Report Override Flag / Page No.
      *
     I                                       22  22 I#ROVR
     I                                       23  250I#PAGE
      *
      *           Report Title/Underline (uses msg ID on CGUSRMSG)
      *
     I                                       26  32 I#TITL
     I                                       33  39 I#TUL
      *
      *  Define fields for group set printing
      *
     I                                       40  49 I#CORR
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Invalid Action code (FT1)'
      * *SFLSEL
     I                                        1   1 ZA0001
      *
     IDSMTR       DS
      *
      *  Define fields for message transalation
      *
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
      *
     IW0DATA      DS                            256
      *
      *  Define data structure used to pass parameters
      *
     I                                        1   3 B#BRCA
     I                                        4   4 O#ACTD
     I                                        5  14 O#CPGM
      *
      **                                                                                      CSC022
     ISCCMT       DS                            256                                           CSC022
     I                                        1   30WCMTNO                                    CSC022
     I                                        4 103 WCJOBS                                    CSC022
      ** Commitment Control dataarea                                                          CSC022
      **                                                                                      CSC022
     ISCSARD    E DSSCSARDPD                                                                  CSC022
      ** DS for Switchable Features details                                                   CSC022
      **                                                                                      CSC022
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1ACTC    PARM           WP0001  1        Action Code
     C                     PARM           P2PARM           KEY: Correspond
      *
      *  Set up primary reference
      *
     C                     MOVELP2PARM    W0PREF
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
     C   12                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * DSPFIL: Init. Subfile Ctl - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Initialise subfile control
     C/COPY WNCPYSRC,CG0021DISC
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           CDCORR           Correspondent
      * Setup key
     C                     MOVEL#2CORR    CDCORR           Correspondent
     C           KPOS      SETLL@CORRL1
     C                     READ @CORRL1                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2RECI    WZRECI
     C                     MOVEL#2RECI    WZRECI           Record Identifi
     C           *LIKE     DEFN #2CUST    WZCUST
     C                     MOVEL#2CUST    WZCUST           Customer Number
     C           *LIKE     DEFN #2CPNC    WZCPNC
     C                     MOVEL#2CPNC    WZCPNC           Counterparty No
     C           *LIKE     DEFN #2BICC    WZBICC
     C                     MOVEL#2BICC    WZBICC           BIC (Bank, Coun
     C           *LIKE     DEFN #2BICB    WZBICB
     C                     MOVEL#2BICB    WZBICB           BIC (Branch Cod
     C           *LIKE     DEFN #2CTYP    WZCTYP
     C                     MOVEL#2CTYP    WZCTYP           Correspondent t
     C           *LIKE     DEFN #2RTYP    WZRTYP
     C                     MOVEL#2RTYP    WZRTYP           Relationship ty
     C           *LIKE     DEFN #2FATT    WZFATT
     C                     MOVEL#2FATT    WZFATT           For Attention o
     C           *LIKE     DEFN #2ADD1    WZADD1
     C                     MOVEL#2ADD1    WZADD1           Address Line 1
     C           *LIKE     DEFN #2ADD2    WZADD2
     C                     MOVEL#2ADD2    WZADD2           Address Line 2
     C           *LIKE     DEFN #2ADD3    WZADD3
     C                     MOVEL#2ADD3    WZADD3           Address Line 3
     C           *LIKE     DEFN #2ADD4    WZADD4
     C                     MOVEL#2ADD4    WZADD4           Address Line 4
     C           *LIKE     DEFN #2ADD5    WZADD5
     C                     MOVEL#2ADD5    WZADD5           Address Line 5
     C           *LIKE     DEFN #2ADD6    WZADD6
     C                     MOVEL#2ADD6    WZADD6           Address Line 6
     C           *LIKE     DEFN #2ADD7    WZADD7
     C                     MOVEL#2ADD7    WZADD7           address line 7
     C           *LIKE     DEFN #2ADD8    WZADD8
     C                     MOVEL#2ADD8    WZADD8           address line 8
     C           *LIKE     DEFN #2ZIP     WZZIP
     C                     MOVEL#2ZIP     WZZIP            ZIP code
     C           *LIKE     DEFN #2DPRT    WZDPRT
     C                     MOVEL#2DPRT    WZDPRT           Default Print S
     C           *LIKE     DEFN #2DPDT    WZDPDT
     C                     MOVEL#2DPDT    WZDPDT           Default Print D
     C           *LIKE     DEFN #2CDTE    WZCDTE
     C                     MOVEL#2CDTE    WZCDTE           Creation date
     C           *LIKE     DEFN #2OBRC    WZOBRC
     C                     MOVEL#2OBRC    WZOBRC           Override Branch
     C           *LIKE     DEFN #2DRET    WZDRET
     C                     MOVEL#2DRET    WZDRET           Default Retenti
     C           *LIKE     DEFN #2PLAB    WZPLAB
     C                     MOVEL#2PLAB    WZPLAB           Print Address L
     C           *LIKE     DEFN #2ATDT    WZATDT
     C                     MOVEL#2ATDT    WZATDT           Activation Date
     C           *LIKE     DEFN #2DADT    WZDADT
     C                     MOVEL#2DADT    WZDADT           De-Activation D
     C           *LIKE     DEFN #2CSTR    WZCSTR
     C                     MOVEL#2CSTR    WZCSTR           Structure Type
     C           *LIKE     DEFN #2BRCA    WZBRCA
     C                     MOVEL#2BRCA    WZBRCA           Branch Code
     C           *LIKE     DEFN #2ERT     WZERT
     C                     MOVEL#2ERT     WZERT            Electronic rout
     C           *LIKE     DEFN #2DMSH    WZDMSH
     C                     MOVEL#2DMSH    WZDMSH           Default Mail Sh
     C           *LIKE     DEFN #2CCCY    WZCCCY
     C                     MOVEL#2CCCY    WZCCCY           Charge Currency
     C           *LIKE     DEFN #2CITM    WZCITM
     C                     MOVEL#2CITM    WZCITM           Charge per item
     C           *LIKE     DEFN #2BSNB    WZBSNB
     C                     MOVEL#2BSNB    WZBSNB           Charge Not Post
     C           *LIKE     DEFN #2CACC    WZCACC
     C                     MOVEL#2CACC    WZCACC           Charge Accumlat
     C           *LIKE     DEFN #2CFRQ    WZCFRQ
     C                     MOVEL#2CFRQ    WZCFRQ           Post charge fre
     C           *LIKE     DEFN #2NTDT    WZNTDT
     C                     MOVEL#2NTDT    WZNTDT           Next Post Date
     C           *LIKE     DEFN #2ACHG    WZACHG
     C                     MOVEL#2ACHG    WZACHG           Apply Charge
     C           *LIKE     DEFN #2CACT    WZCACT
     C                     MOVEL#2CACT    WZCACT           Charge Account
     C           *LIKE     DEFN #2DESC    WZDESC
     C                     MOVEL#2DESC    WZDESC           Description
     C           *LIKE     DEFN #2AJOB    WZAJOB
     C                     MOVEL#2AJOB    WZAJOB           Job name
     C           *LIKE     DEFN #2AUSR    WZAUSR
     C                     MOVEL#2AUSR    WZAUSR           User name
     C           *LIKE     DEFN #2ATIM    WZATIM
     C                     MOVEL#2ATIM    WZATIM           Action Time
     C           *LIKE     DEFN #2ARDT    WZARDT
     C                     MOVEL#2ARDT    WZARDT           Action Date
     C           *LIKE     DEFN #2AACT    WZAACT
     C                     MOVEL#2AACT    WZAACT           Action Type
     C           *LIKE     DEFN #2RDNB    WZRDNB
     C                     MOVEL#2RDNB    WZRDNB           Run day number
     C           *LIKE     DEFN #2CORR    WZCORR
     C                     MOVEL#2CORR    WZCORR           Correspondent
     C           *LIKE     DEFN #2CORN    WZCORN
     C                     MOVEL#2CORN    WZCORN           Correspondent N
     C           *LIKE     DEFN #2LGID    WZLGID
     C                     MOVEL#2LGID    WZLGID           Language identi
      * Translate search mask for text field
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2FATT    WQFATT           For Attention o
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 30        WQA5N   50
     C                     PARM #2FATT    WQFATT           For Attention o
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
     C           *LIKE     DEFN #2ADD1    WQADD1           Address Line 1
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 50        WQA5N   50
     C                     PARM #2ADD1    WQADD1           Address Line 1
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
     C           *LIKE     DEFN #2DESC    WQDESC           Description
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 30        WQA5N   50
     C                     PARM #2DESC    WQDESC           Description
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
     C           *LIKE     DEFN #2CORN    WQCORN           Correspondent N
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 30        WQA5N   50
     C                     PARM #2CORN    WQCORN           Correspondent N
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@CORRL1                  90*
     C  N82                READ @CORRL1                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,34
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2RECI    IFNE *BLANK                     Record Identifi
     C           CDRECI    CABNE#2RECI    BB020            Record Identifi
     C                     END
     C           #2CUST    IFNE *BLANK                     Customer Number
     C           CDCUST    CABNE#2CUST    BB020            Customer Number
     C                     END
     C           #2CPNC    IFNE *BLANK                     Counterparty No
     C           CDCPNC    CABNE#2CPNC    BB020            Counterparty No
     C                     END
     C           #2BICC    IFNE *BLANK                     BIC (Bank, Coun
     C           CDBICC    CABNE#2BICC    BB020            BIC (Bank, Coun
     C                     END
     C           #2BICB    IFNE *BLANK                     BIC (Branch Cod
     C           CDBICB    CABNE#2BICB    BB020            BIC (Branch Cod
     C                     END
     C           #2CTYP    IFNE *BLANK                     Correspondent t
     C           CDCTYP    CABNE#2CTYP    BB020            Correspondent t
     C                     END
     C           #2RTYP    IFNE *BLANK                     Relationship ty
     C           CDRTYP    CABNE#2RTYP    BB020            Relationship ty
     C                     END
     C           #2FATT    IFNE *BLANK                     For Attention o
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           CDFATT           For Attention o
      * Length
     C                     PARM 30        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQFATT
      * Length
     C                     PARM 30        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2ADD1    IFNE *BLANK                     Address Line 1
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           CDADD1           Address Line 1
      * Length
     C                     PARM 50        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQADD1
      * Length
     C                     PARM 50        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2ADD2    IFNE *BLANK                     Address Line 2
     C           CDADD2    CABNE#2ADD2    BB020            Address Line 2
     C                     END
     C           #2ADD3    IFNE *BLANK                     Address Line 3
     C           CDADD3    CABNE#2ADD3    BB020            Address Line 3
     C                     END
     C           #2ADD4    IFNE *BLANK                     Address Line 4
     C           CDADD4    CABNE#2ADD4    BB020            Address Line 4
     C                     END
     C           #2ADD5    IFNE *BLANK                     Address Line 5
     C           CDADD5    CABNE#2ADD5    BB020            Address Line 5
     C                     END
     C           #2ADD6    IFNE *BLANK                     Address Line 6
     C           CDADD6    CABNE#2ADD6    BB020            Address Line 6
     C                     END
     C           #2ADD7    IFNE *BLANK                     address line 7
     C           CDADD7    CABNE#2ADD7    BB020            address line 7
     C                     END
     C           #2ADD8    IFNE *BLANK                     address line 8
     C           CDADD8    CABNE#2ADD8    BB020            address line 8
     C                     END
     C           #2ZIP     IFNE *BLANK                     ZIP code
     C           CDZIP     CABNE#2ZIP     BB020            ZIP code
     C                     END
     C           #2DPRT    IFNE *BLANK                     Default Print S
     C           CDDPRT    CABNE#2DPRT    BB020            Default Print S
     C                     END
     C           #2DPDT    IFNE *ZERO                      Default Print D
     C           CDDPDT    CABNE#2DPDT    BB020            Default Print D
     C                     END
     C           #2CDTE    IFNE *ZERO                      Creation date
     C           CDCDTE    CABNE#2CDTE    BB020            Creation date
     C                     END
     C           #2OBRC    IFNE *BLANK                     Override Branch
     C           CDOBRC    CABNE#2OBRC    BB020            Override Branch
     C                     END
     C           #2DRET    IFNE *ZERO                      Default Retenti
     C           CDDRET    CABNE#2DRET    BB020            Default Retenti
     C                     END
     C           #2PLAB    IFNE *BLANK                     Print Address L
     C           CDPLAB    CABNE#2PLAB    BB020            Print Address L
     C                     END
     C           #2ATDT    IFNE *ZERO                      Activation Date
     C           CDATDT    CABNE#2ATDT    BB020            Activation Date
     C                     END
     C           #2DADT    IFNE *ZERO                      De-Activation D
     C           CDDADT    CABNE#2DADT    BB020            De-Activation D
     C                     END
     C           #2CSTR    IFNE *BLANK                     Structure Type
     C           CDCSTR    CABNE#2CSTR    BB020            Structure Type
     C                     END
     C           #2BRCA    IFNE *BLANK                     Branch Code
     C           CDBRCA    CABNE#2BRCA    BB020            Branch Code
     C                     END
     C           #2ERT     IFNE *BLANK                     Electronic rout
     C           CDERT     CABNE#2ERT     BB020            Electronic rout
     C                     END
     C           #2DMSH    IFNE *BLANK                     Default Mail Sh
     C           CDDMSH    CABNE#2DMSH    BB020            Default Mail Sh
     C                     END
     C           #2CCCY    IFNE *BLANK                     Charge Currency
     C           CDCCCY    CABNE#2CCCY    BB020            Charge Currency
     C                     END
     C           #2CITM    IFNE *ZERO                      Charge per item
     C           CDCITM    CABNE#2CITM    BB020            Charge per item
     C                     END
     C           #2BSNB    IFNE *ZERO                      Charge Not Post
     C           CDBSNB    CABNE#2BSNB    BB020            Charge Not Post
     C                     END
     C           #2CACC    IFNE *ZERO                      Charge Accumlat
     C           CDCACC    CABNE#2CACC    BB020            Charge Accumlat
     C                     END
     C           #2CFRQ    IFNE *BLANK                     Post charge fre
     C           CDCFRQ    CABNE#2CFRQ    BB020            Post charge fre
     C                     END
     C           #2NTDT    IFNE *ZERO                      Next Post Date
     C           CDNTDT    CABNE#2NTDT    BB020            Next Post Date
     C                     END
     C           #2ACHG    IFNE *BLANK                     Apply Charge
     C           CDACHG    CABNE#2ACHG    BB020            Apply Charge
     C                     END
     C           #2CACT    IFNE *BLANK                     Charge Account
     C           CDCACT    CABNE#2CACT    BB020            Charge Account
     C                     END
     C           #2DESC    IFNE *BLANK                     Description
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           CDDESC           Description
      * Length
     C                     PARM 30        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQDESC
      * Length
     C                     PARM 30        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2AJOB    IFNE *BLANK                     Job name
     C           CDAJOB    CABNE#2AJOB    BB020            Job name
     C                     END
     C           #2AUSR    IFNE *BLANK                     User name
     C           CDAUSR    CABNE#2AUSR    BB020            User name
     C                     END
     C           #2ATIM    IFNE *ZERO                      Action Time
     C           CDATIM    CABNE#2ATIM    BB020            Action Time
     C                     END
     C           #2ARDT    IFNE *BLANK                     Action Date
     C           CDARDT    CABNE#2ARDT    BB020            Action Date
     C                     END
     C           #2AACT    IFNE *BLANK                     Action Type
     C           CDAACT    CABNE#2AACT    BB020            Action Type
     C                     END
     C           #2RDNB    IFNE *ZERO                      Run day number
     C           CDRDNB    CABNE#2RDNB    BB020            Run day number
     C                     END
     C           #2CORN    IFNE *BLANK                     Correspondent N
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           CDCORN           Correspondent N
      * Length
     C                     PARM 30        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQCORN
      * Length
     C                     PARM 30        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2LGID    IFNE *BLANK                     Language identi
     C           CDLGID    CABNE#2LGID    BB020            Language identi
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
     C                     EXSR MC#1FN
     C                     SUB  1         ##RR
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * DSPFIL: Init. SF record - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Initialise subfile record
     C/COPY WNCPYSRC,CG0021DISR
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @CORRL1                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
      *
      * Reset Action taken
      *
     C                     MOVEL*BLANKS   #ENTER  1
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * CALC: Subfile control function fields
      * DSPFIL: Cal. Control flds - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Calculate Control fields
     C/COPY WNCPYSRC,CG0021DSCF
      * Change of position specified
     C           WZCORR    CASNE#2CORR    FBRQRL
     C           WZCORN    CASNE#2CORN    FBRQRL
     C           WZLGID    CASNE#2LGID    FBRQRL
     C                     END
      * USER: Process subfile control (Pre-confirm)
      * DSPFIL: Process SF Ctl - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process subfile control
     C/COPY WNCPYSRC,CG0021DPSC
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
      * USER: Final processing (Pre-confirm)
      * DSPFIL: Final Processing - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Final Processing
     C/COPY WNCPYSRC,CG0021DFPR
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *
      * If no Action taken and F12 and not select exit
      *
     C           #ENTER    IFEQ *BLANKS
     C           *IN78     ANDEQ'1'
     C           P1ACTC    ANDNE'S'
     C                     MOVEL*BLANKS   P0RTN            *Return code
     C                     EXSR ZXEXPG
     C                     ENDIF
      * USER: Process command keys
      * DSPFIL: Process Cmd keys - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process Command Keys
     C/COPY WNCPYSRC,CG0021DPCK
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      *
      * Action taken
      *
     C                     MOVEL'Y'       #ENTER
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
      *
      * If F12 then redisplay screen with action code
      * Or action did not complete
      *
     C           P0RTN     IFNE *BLANKS                    *Return code
     C                     MOVEL*BLANKS   P0RTN
     C                     GOTO DBEXIT
     C                     END
      *
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRACTD - Check Action code                                    *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR         SRACTD    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRACTD'  @STK,Q
      *
      * Check all valid actions
      *
      *
      * CASE: RCD.*SFLSEL is not valid
      *
     C           #1SEL     IFEQ ' '                        *IF
     C                     GOTO EXACTD
     C                     END                             *FI
      *
     C           #1SEL     IFNE 'E'                        *IF
     C           #1SEL     ANDNE'P'                        *IF
     C           #1SEL     ANDNE'1'                        *IF
     C           #1SEL     ORNE '1'                        *IF
     C           #1SEL     ANDNE'E'                        *IF
     C           #1SEL     ANDNE'P'                        *IF
     C           P1ACTC    ANDEQ'S'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'Invalid Action code'
     C                     MOVEL'CGD1002' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO EXACTD
     C                     END                             *FI
      *
      * Check multi-branch actions
      *
     C                     EXSR SRMBIN
      *
      *  Unwind subroutine stack name
      *
     C           EXACTD    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRMBIN - Check Multi-branch actions                           *
     C*                                                               *
     C*                                                               *
     C* Called by: SRACTD                                             *
     C*                                                               *
      *================================================================
     CSR         SRMBIN    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRMBIN'  @STK,Q
      *
      * Set up parameters
      *
     C                     CLEARW0DATA
     C                     MOVEL*BLANKS   B#BRCA
     C                     MOVEL#1SEL     O#ACTD
     C                     MOVEL##PGM     O#CPGM
      *
     C           #1SEL     IFEQ '1'                        *IF
     C                     MOVEL'X'       O#ACTD
     C                     END                             *FI
      *
      * Check all valid actions
      *
     C                     CALL 'CG1020'               9090
     C                     PARM *BLANKS   P0RTN   7
     C                     PARM '*ACTCODE'W0ACT   8
     C                     PARM           W0DATA
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'CGD1000' P0RTN
     C                     SETON                     9834  *
     C                     END                             *FI
      *
      * Invalid action
      *
     C           P0RTN     IFNE *BLANKS                    *IF
     C           #1SEL     IFNE 'I'
     C                     SETON                     9834  *
     C                     ELSE                            *FI
     C                     SETON                     99    *
     C                     END                             *FI
     C                     END                             *FI
      *
      *  Unwind subroutine stack name
      *
     C           EXMBIN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRRCHG - Record Changed                                       *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR         SRRCHG    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRRCHG'  @STK,Q
      *
      * Set up key from subfile record and chain to record
      *
     C           KYMFL0    KLIST
     C                     KFLD           #1CORR           Report Data Ele
      *
      * Only chain if record if live #1RECI is 'D'
      *
     C           #1RECI    IFEQ 'D'
     C           KYMFL0    CHAIN@CORRL0              90    *
      *
      * Record not found - database error
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'CGCORRL0'W0FILE
     C                     MOVEL#1CORR    W0KEY            Report Date E
     C                     Z-ADD1         W0ERNB
     C                     MOVEL'MEM5004' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
     C                     ELSE
     C                     MOVEL#1RECI    CDRECI
     C                     END
      *
      *  If action code is not blank then send messge record has been
      *  deleted if RECI not equal to 'D'
      *
     C           #1SEL     IFNE *BLANKS
     C           CDRECI    IFNE 'D'
      * Send message 'Invalid Action code - record deleted'
     C                     MOVEL'CGD1003' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
     C                     END
     C                     GOTO EXRCHG
     C                     END
      *
      *  Reload subfile record
      *
     C                     EXSR MBFL#1
     C                     EXSR MC#1FN
      *
      *  Unwind subroutine stack name
      *
     C           EXRCHG    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
     C*****************************************************************
     C*                                                               *
     C* SRPRNT - Print Details for Selected Mesage                    *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
     C*****************************************************************
     CSR         SRPRNT    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRPRNT'  @STK,Q
      *
      *  Print selected call FC0040X to submit job CGC1150
      *
      *  Clear data structure and set report printed
      *
     C                     CLEARI#DTA
      *
      *  Set up data to pass
      *
     C                     MOVEL'CG0090P1'I#SPLN
     C                     MOVEL'Y'       I#SPLR
     C                     MOVEL*BLANKS   I#REFN
     C                     MOVEL'CG0090P1'I#REFN
      *
     C                     MOVEL'CGD1172' I#TITL
     C                     MOVEL'CGD1173' I#TUL
     C                     MOVEL#1CORR    I#CORR
      *
      * Set to system report
      *
     C                     MOVEL'S'       O#LVL            Level
     C                     MOVEL*BLANKS   O#ENTY           Entity
      *
     C                     MOVEL*BLANKS   O#PARM
     C                     MOVELI#DTA     O#PARM
      *
      *  Call FC0040X to report movements
      *
     C                     CALL 'FC0040X'              90  Call FC0040X RC
     C           R#RTN     PARM *BLANKS   O#RTN   7
     C                     PARM 'CG0090'  O#PRG  10        Calling Program
     C                     PARM 'CGC0090' O#CPRG 10        CL Controlling
     C                     PARM '10001'   O#CSEQ  5        CL Sequence Num
     C                     PARM           O#PARM100        Calling Paramet
     C                     PARM AGMBIN    O#MBIN  1        Multi-Branching
     C                     PARM           O#LVL   1        Level
     C                     PARM           O#ENTY  3        Entity
      *
     C           *IN90     IFEQ '1'
     C           R#RTN     ORNE *BLANKS
     C                     MOVEL'CGD1000' P0RTN
     C                     MOVEL*BLANKS   R#RTN   7                       045014
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXPRNT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,34
     C                     MOVEL*BLANKS   P0RTN
     C                     SETOF                     98    *
     C                     EXSR MC#1FN
      * USER: Process subfile record (Pre-confirm)
      * DSPFIL: Process SF rec - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process Subfile Record
     C/COPY WNCPYSRC,CG0021DPSR
      *
      * Check action code is valid, if invalid exit.
      *
     C                     EXSR SRACTD
      *
      * Check record is active
      *
     C                     EXSR SRRCHG
      *
     C           *IN98     IFEQ '1'
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
     C                     END                             *FI
      *
      * Call option
      *
     C                     SELEC
      *
      * Amend, Delete and Enquire
      *
     C           #1SEL     WHEQ 'A'
     C           #1SEL     OREQ 'D'
     C           #1SEL     OREQ 'E'
      *
      * Set up parameters
      *
     C                     MOVEL#1CORR    O2CORR
      *
     C                     CALL 'CG0010'               9090
     C                     PARM           P0RTN   7
     C                     PARM #1SEL     WP0001  1        Action Code
     C                     PARM           O2PARM           KEY: RDE
      *
      * If in error set up return code
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'CGD1000' P0RTN
     C                     END
      *
      * Linked Correspondents
      *
     C           #1SEL     WHEQ 'L'
      *
      * Set up parameters
      *
     C           *LIKE     DEFN #1SEL     #USEL            Action Code
     C           P1ACTC    IFEQ 'A'
     C                     MOVEL'a'       #USEL            Action Code
     C                     ELSE
     C                     MOVEL'e'       #USEL            Action Code
     C                     END
     C                     MOVEL*BLANKS   O3PARM
     C                     MOVEL#1CORR    O3FCOR
      *
     C                     CALL 'CG0080'               9090
     C                     PARM           P0RTN   7
     C                     PARM #USEL     WP0001  1        Action Code
     C                     PARM           O3PARM
      *
      * If in error set up return code
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'CGD1000' P0RTN
     C                     END
      *
      * Print Group set structure
      *
     C           #1SEL     WHEQ 'P'
     C                     EXSR SRPRNT
      *
      * Select
      *
     C           #1SEL     WHEQ '1'
     C                     MOVEL#1CORR    P2CORR
     C                     MOVEL*BLANKS   P0RTN            *Return code
     C                     EXSR ZXEXPG
      *
     C                     ENDSL
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'CGD1000' P0RTN
     C                     END                             *FI
      *
      *  Depending on return code - exit or re-display screen
      *
     C                     SELEC                           *SL
      *
      *  F12 pressed - redisplay subfile
      *
     C           P0RTN     WHEQ 'USR0790'                  *IF
      *
     C**Send*message*'F12*taken*from*previous*screen'***************** ***115722
     C*                                                                   115722
     C*********************MOVEL'CGD1001' ZAMSID                          115722
     C*********************EXSR ZASNMS                                    115722
     C                     SETON                     9834  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
      *
      *  F3 pressed - exit program
      *
     C           P0RTN     WHEQ 'Y2U9999'                  *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
      *
      *  If error redisplay
      *
     C           P0RTN     WHNE *BLANKS                    *IF
      *
      * Re-display screen
      *
     C                     MOVEL'CGD1000' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
      *
      *  Function completed normally
      *
     C           P0RTN     WHEQ *BLANKS                    *IF
     C                     ENDSL                           *LS
      *
     C           DCENDT    TAG
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *
      *  If option did not end in error, F12 or F3 then update record
      *  with changes
      *
     C           P0RTN     IFEQ *BLANKS
     C           *IN98     ANDEQ'0'
     C                     EXSR SRRCHG
     C                     END
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @CORRL1 fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELCDRECI    #1RECI           Record Identifi
     C                     MOVELCDCPNC    #1CPNC           Counterparty No
     C                     MOVELCDBICC    #1BICC           BIC (Bank, Coun
     C                     MOVELCDBICB    #1BICB           BIC (Branch Cod
     C                     MOVELCDCTYP    #1CTYP           Correspondent t
     C                     MOVELCDRTYP    #1RTYP           Relationship ty
     C                     MOVELCDFATT    #1FATT           For Attention o
     C                     MOVELCDADD1    #1ADD1           Address Line 1
     C                     MOVELCDADD2    #1ADD2           Address Line 2
     C                     MOVELCDADD3    #1ADD3           Address Line 3
     C                     MOVELCDADD4    #1ADD4           Address Line 4
     C                     MOVELCDADD5    #1ADD5           Address Line 5
     C                     MOVELCDADD6    #1ADD6           Address Line 6
     C                     MOVELCDADD7    #1ADD7           address line 7
     C                     MOVELCDADD8    #1ADD8           address line 8
     C                     MOVELCDZIP     #1ZIP            ZIP code
     C                     MOVELCDDPRT    #1DPRT           Default Print S
     C                     Z-ADDCDDPDT    #1DPDT           Default Print D
     C                     Z-ADDCDCDTE    #1CDTE           Creation date
     C                     MOVELCDOBRC    #1OBRC           Override Branch
     C                     Z-ADDCDDRET    #1DRET           Default Retenti
     C                     MOVELCDPLAB    #1PLAB           Print Address L
     C                     Z-ADDCDATDT    #1ATDT           Activation Date
     C                     Z-ADDCDDADT    #1DADT           De-Activation D
     C                     MOVELCDCSTR    #1CSTR           Structure Type
     C                     MOVELCDLCCD    #1LCCD           Location Code
     C                     MOVELCDFAX     #1FAX            Fax Number
     C                     MOVELCDTEL     #1TEL            Telephone Numbe
     C                     MOVELCDCREF    #1CREF           Clearing Refere
     C                     Z-ADDCDDYNB    #1DYNB           Default print d
     C                     MOVELCDBRCA    #1BRCA           Branch Code
     C                     MOVELCDERT     #1ERT            Electronic rout
     C                     MOVELCDDMSH    #1DMSH           Default Mail Sh
     C                     MOVELCDCCCY    #1CCCY           Charge Currency
     C                     Z-ADDCDCITM    #1CITM           Charge per item
     C                     Z-ADDCDBSNB    #1BSNB           Charge Not Post
     C                     Z-ADDCDCACC    #1CACC           Charge Accumlat
     C                     MOVELCDCFRQ    #1CFRQ           Post charge fre
     C                     Z-ADDCDNTDT    #1NTDT           Next Post Date
     C                     MOVELCDACHG    #1ACHG           Apply Charge
     C                     MOVELCDCACT    #1CACT           Charge Account
     C                     Z-ADDCDPDAY    #1PDAY           Post Charges da
     C                     MOVELCDDESC    #1DESC           Description
     C                     MOVELCDAJOB    #1AJOB           Job name
     C                     MOVELCDAUSR    #1AUSR           User name
     C                     Z-ADDCDATIM    #1ATIM           Action Time
     C                     MOVELCDARDT    #1ARDT           Action Date
     C                     MOVELCDAACT    #1AACT           Action Type
     C                     Z-ADDCDRDNB    #1RDNB           Run day number
     C                     MOVELCDCORR    #1CORR           Correspondent
     C                     MOVELCDCORN    #1CORN           Correspondent N
     C                     MOVELCDCUST    #1CUST           Customer Number
     C                     MOVELCDLGID    #1LGID           Language identi
      *
      * If deleted stop subfile selection and place deleted in
      * access point
      *
     C           #1RECI    IFEQ '*'                        Record Identifi
     C                     MOVEL*BLANKS   #1CORN           Special Instruc
     C                     MOVELU#DELT    #1CORN
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     GOTO MBEXIT
     C                     END
      *
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MC#1FN    BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      * DSPFIL: SF rec func flds - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Subfile Record function fields
     C/COPY WNCPYSRC,CG0021DRFF
      *================================================================
     CSR         MCEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVELP1ACTC    #PACTC           Action Code
     C                     MOVEL*BLANK    #2RECI           Record Identifi
     C                     MOVEL*BLANK    #2CUST           Customer Number
     C                     MOVEL*BLANK    #2CPNC           Counterparty No
     C                     MOVEL*BLANK    #2BICC           BIC (Bank, Coun
     C                     MOVEL*BLANK    #2BICB           BIC (Branch Cod
     C                     MOVEL*BLANK    #2CTYP           Correspondent t
     C                     MOVEL*BLANK    #2RTYP           Relationship ty
     C                     MOVEL*BLANK    #2FATT           For Attention o
     C                     MOVEL*BLANK    #2ADD1           Address Line 1
     C                     MOVEL*BLANK    #2ADD2           Address Line 2
     C                     MOVEL*BLANK    #2ADD3           Address Line 3
     C                     MOVEL*BLANK    #2ADD4           Address Line 4
     C                     MOVEL*BLANK    #2ADD5           Address Line 5
     C                     MOVEL*BLANK    #2ADD6           Address Line 6
     C                     MOVEL*BLANK    #2ADD7           address line 7
     C                     MOVEL*BLANK    #2ADD8           address line 8
     C                     MOVEL*BLANK    #2ZIP            ZIP code
     C                     MOVEL*BLANK    #2DPRT           Default Print S
     C                     Z-ADD*ZERO     #2DPDT           Default Print D
     C                     Z-ADD*ZERO     #2CDTE           Creation date
     C                     MOVEL*BLANK    #2OBRC           Override Branch
     C                     Z-ADD*ZERO     #2DRET           Default Retenti
     C                     MOVEL*BLANK    #2PLAB           Print Address L
     C                     Z-ADD*ZERO     #2ATDT           Activation Date
     C                     Z-ADD*ZERO     #2DADT           De-Activation D
     C                     MOVEL*BLANK    #2CSTR           Structure Type
     C                     MOVEL*BLANK    #2BRCA           Branch Code
     C                     MOVEL*BLANK    #2ERT            Electronic rout
     C                     MOVEL*BLANK    #2DMSH           Default Mail Sh
     C                     MOVEL*BLANK    #2CCCY           Charge Currency
     C                     Z-ADD*ZERO     #2CITM           Charge per item
     C                     Z-ADD*ZERO     #2BSNB           Charge Not Post
     C                     Z-ADD*ZERO     #2CACC           Charge Accumlat
     C                     MOVEL*BLANK    #2CFRQ           Post charge fre
     C                     Z-ADD*ZERO     #2NTDT           Next Post Date
     C                     MOVEL*BLANK    #2ACHG           Apply Charge
     C                     MOVEL*BLANK    #2CACT           Charge Account
     C                     MOVEL*BLANK    #2DESC           Description
     C                     MOVEL*BLANK    #2AJOB           Job name
     C                     MOVEL*BLANK    #2AUSR           User name
     C                     Z-ADD*ZERO     #2ATIM           Action Time
     C                     MOVEL*BLANK    #2ARDT           Action Date
     C                     MOVEL*BLANK    #2AACT           Action Type
     C                     Z-ADD*ZERO     #2RDNB           Run day number
     C                     MOVELP2CORR    #2CORR           Correspondent
     C                     MOVEL*BLANK    #2CORN           Correspondent N
     C                     MOVEL*BLANK    #2LGID           Language identi
      *
      * Fill Command lines and narrative text from messages
      *
     C                     SELEC
      *
      * Enquiry screen
      *
     C           P1ACTC    WHEQ 'E'
      *
      * Option Name
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1127' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1165' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C           *IN78     IFEQ '0'
     C                     MOVEL'CGD1028' #UFKEY
     C                     ELSE
     C                     MOVEL'CGD1021' #UFKEY
     C                     END
      *
      * Update screen
      *
     C           P1ACTC    WHEQ 'A'
      *
      * Option Name
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1128' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1166' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C           *IN78     IFEQ '0'
     C                     MOVEL'CGD1031' #UFKEY
     C                     ELSE
     C                     MOVEL'CGD1052' #UFKEY
     C                     END
      *
      * Allow function key 9
      *
     C                     MOVEL'1'       *IN77
      *
      * Selection screen
      *
     C           P1ACTC    WHEQ 'S'
      *
      * Option Name
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1129' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1287' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C           *IN78     IFEQ '0'
     C                     MOVEL'CGD1028' #UFKEY
     C                     ELSE
     C                     MOVEL'CGD1021' #UFKEY
     C                     END
      *
     C                     ENDSL
      *
      * Function keys
      *
     C           *LIKE     DEFN #MSGID    #UFKEY
     C                     CALL 'CGC1000'              9090
     C                     PARM #UFKEY    #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD2
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      *
      * CASE: CTL.*CMD key is CF03
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     END                             *FI
      * CASE: CTL.*CMD key is CF12
     C           *IN12     IFEQ '1'                        *IF
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     END                             *FI
      *
      * USER: Exit program processing
      * DSPFIL: Exit Program Proc - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Exit Program Processing
     C/COPY WNCPYSRC,CG0021DEPP
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C                     MOVEL'CGUSRMSG'ZADFMF 10
     C                     Z-ADD10        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
     C                     Z-ADD0         Q       50
     C                     MOVEA'00'      *IN,77
      * USER: Initialize program
      * Retrieve Midas Date - R10 Standard Functions  *
     C*
     C*  Set up copyright parameter
     C*
     C                     MOVEACPY@      ACT@   80
     C*
     C* Get Rundate - Rundate  *
     C*
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    ##MRDT  7        Midas Run date
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*
     C* Get modules information
     C*
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD2         W0ERNB           * DB ERROR 02 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Open file CGCORRL1
      *
     C           FIL001    IFEQ *BLANKS
      *
      *  Override file CGCORRL1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'CGCORRL1'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD3         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN CGCORRL1
     C                     MOVEL'Y'       FIL001  1
     C                     END
      *
      * Open file CGCORRL0
      *
     C           FIL002    IFEQ *BLANKS
      *
      *  Override file MEINMVL0 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'CGCORRL0'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD4         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN CGCORRL0
     C                     MOVEL'Y'       FIL002  1
     C                     END
      *
      * Allow function key 12 if lower case action
      *
     C                     SELEC
     C           P1ACTC    WHEQ 's'
     C           P1ACTC    OREQ 'S'
     C                     MOVEL'1'       *IN78
     C                     MOVEL'S'       P1ACTC
     C           P1ACTC    WHEQ 'e'
     C                     MOVEL'1'       *IN78
     C                     MOVEL'E'       P1ACTC
     C           P1ACTC    WHEQ 'a'
     C                     MOVEL'1'       *IN78
     C                     MOVEL'A'       P1ACTC
     C                     ENDSL
      *
      * Get deleted text
      *
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1019' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C           *LIKE     DEFN #1CORN    U#DELT
     C                     MOVEL#MSTX1    U#DELT
      **                                                                                      CSC022
      ** Initialize CSC022 and Skip Commit/Rollback flags                                     CSC022
      **                                                                                      CSC022
     C                     MOVE 'N'       CSC022  1                                           CSC022
     C                     MOVE 'N'       WCMTSK  1                                           CSC022
      **                                                                                      CSC022
      ** Access SAR details file to determine if CSC022 switchable feature                    CSC022
      ** is switched on                                                                       CSC022
      **                                                                                      CSC022
     C                     CALL 'AOSARDR0'                                                    CSC022
     C                     PARM *BLANKS   P@RTCD                                              CSC022
     C                     PARM '*VERIFY 'P@OPTN                                              CSC022
     C                     PARM 'CSC022'  P@SARD  6                                           CSC022
     C           SCSARD    PARM SCSARD    DSFDY                                               CSC022
      **                                                                                      CSC022
     C           P@RTCD    IFEQ *BLANKS                                                       CSC022
     C                     MOVE 'Y'       CSC022                                              CSC022
      **                                                                                      CSC022
      ** Get Jobs currently running i batch mode using SCCMRJOB dataarea                      CSC022
      **                                                                                      CSC022
     C           *NAMVAR   DEFN SCCMTJOB  SCCMT                                               CSC022
     C                     IN   SCCMT                                                         CSC022
      **                                                                                      CSC022
     C           WCMTNO    IFGT 0                                                             CSC022
      ** Move committed jobs to arrary for checking                                           CSC022
     C                     MOVEAWCJOBS    WCMT                                                CSC022
      ** Verify if job running exists in array                                                CSC022
     C           ##JOB     LOKUPWCMT                     50                                   CSC022
     C           *IN50     IFEQ *ON                                                           CSC022
     C                     MOVE 'Y'       WCMTSK                                              CSC022
     C                     ENDIF                                                              CSC022
     C                     ENDIF                                                              CSC022
      **                                                                                      CSC022
     C                     ELSE                                                               CSC022
      ** Execute *PSSR if CSC022 is not found or Database error                               CSC022
     C           P@RTCD    IFNE '*NRF'                                                        CSC022
     C                     MOVEL'CSC022'  W0KEY                                               CSC022
     C                     MOVEL'SCSARDPD'W0FILE                                              CSC022
     C                     Z-ADD5         W0ERNB                                              CSC022
     C                     EXSR SRERR                                                         CSC022
     C                     ENDIF                                                              CSC022
      **                                                                                      CSC022
     C                     ENDIF                                                              CSC022
      **                                                                                      CSC022
      * DSPFIL: Initialise Prog. - R10 Copy source templates  *
     C*DSPRCD: Cpysrc Templates Initialise Program C-Spec
     C/COPY WNCPYSRC,CG0021DCPG
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
     C*
     C* PSSR Processing
     C*
     C/COPY CGCPYSRC,SRERRPSSR
     C*
     C* File and Program Error Processing
     C*
     C/COPY CGCPYSRC,SRERRC
     O*DSPRCD: Cpysrc Templates Initialise Program O-Spec
     O/COPY WNCPYSRC,CG0021DOPG
**  CPY@
(c) Misys International Banking Systems Ltd. 2001
** Command Array
OVRDBF     FILE(XXXXXXXXXX) SHARE(*NO) SECURE(*YES)
