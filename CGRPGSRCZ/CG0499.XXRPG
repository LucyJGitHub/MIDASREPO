     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Layout Tool:Referential Integrity Driver')
/*OVRF*: OVRDBF (File in program) (file on system)                  : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                  *
     F*                                                               *
     F*  CG0499 - Dynamic driver for deletions                        *
     F*                                                               *
     F*  Function:  This program xxxxxxxxxxxxxxxxxxxxxxxxxxxx         *
     F*  (phase(s))                                                   *
     F*                                                               *
     F*  Called By: mmCnnnn - (program name)                          *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD054955 *REDUNDANTDate 16Dec19               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 086242             Date 05Apr95               *
      *                 084416             DATE 08Mar95               *
     F*                 086147             DATE 07MAR95               *
     F*                 S01522             DATE 11DEC94               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD054955 - Deliverable Data Split for Correspondence Mgr     *
      *  MD046248 - Finastra Rebranding                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
     F*  086242 - Remove level 4 processing as it is done by level    *
     F*           5.                                                  *
     F*  084416 - Remove overrides from this program;                 *
     F*            apply overrides in programs CG0400..CG0450         *
     F*           (where files are not used in this program)          *
     F*  086147 - Level 5 processing absent (upgrade PGI@)            *
     F*  S01522 - User Defined Correspondence                         *
     F*                                                               *
     F*****************************************************************
     FCGPDECL0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
     FCGPASCL0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
     FCGPDEFL0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
     FCGGCONL0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
     E/EJECT
     E*
     E*  Array containing Copyright statement
     E*
     E                    CPY@    1   1 80
     E***********         PGI@    1   6  3  APGM@   10                    086147
     E                    PGI@    1   7  3  APGM@   10                    086147
     E***********         FIL@    1   6 10                                084416
     E                    FIL@    1   4 10                                084416
     E/COPY CGCPYSRC,SRERRE
     E*
     E*  Copysource for error processing
     E*
     I/COPY CGCPYSRC,SRERRI
     I*
     I*  End of Program Error Processing copysource
     I*
     I*
     IRUNDTA    E DSRUNDAT
     I*
     I* Get Rundate - Rundate  *
     I*
     IMMODDS    E DSSDMMODPD
     I*
     I* Modules Data Structure *
     I*
     IDSFDY     E DSDSFDY                                                 S01194
     I*                                                                   S01194
     I* Data Structures used by Access Programs                           S01194
     I*                                                                   S01194
      *
     I            DS
     I                                        1   40Z1
     I                                        5   80Z2
     I                                        9  120Z3
     I                                       13  160Z4
     I                                       17  200Z5
      *
     ICGLDA     E DSCGLDA                                                 S01194
      *
     ISTACK       DS
     I                                        1  10 P1LAYO
     I                                       11  20 P1PLAN
     I                                       21  30 P1FLDN
     I                                       31  380P1TCGP
     I                                       39  460P1CID
      *
     I                                        1  46 P1PARM
      *
     I                                       47  47 ACTION
      *
     ISTACK#      DS
     I                                        1  10 #1LAYO
     I                                       11  20 #1PLAN
     I                                       21  30 #1FLDN
     I                                       31  380#1TCGP
     I                                       39  460#1CID
      *
     I                                       47  47 #CTION
     IP2PARM      DS
     I I                                      1  10 P2NLAY
     I I            '*FIRST'                 11  20 P2FMBR
     I I            '*FIRST'                 21  30 P2TMBR
      *
     I            DS
     I                                        1   30#L
     I                                        1   3 ##L
      *
     I              'OVRDBF FILE('        C         CMDS11
     I              ') SHARE(*NO)'        C         CMDS12
      *
     I              'PDLSTACK  '          C         WKDQ1
      *
     I              '*LIBL'               C         LIBL
      *****************************************************************
      *                 M A I N L I N E
      *****************************************************************
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           W0ACT   8        Action Code
     C           P1PARM    PARM           P@PAR1
      *
     C           *LIKE     DEFN P1PARM    P@PAR1
      *
     C           STINZ     PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
      *
     C           STPUSH    PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM 47        FLDLEN  50
     C                     PARM           STACK
      *
     C           STPOP     PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM 47        FLDLEN  50
     C                     PARM           STACK
     C                     PARM 0         WAIT    50
      *
     C           PLSTK#    PLIST
     C                     PARM P0RTN     P@RTN
     C                     PARM W0ACT     P@ACT
     C                     PARM P1PARM    P@PAR1
     C                     PARM P2PARM    P@PAR2
      *
     C           *LIKE     DEFN P0RTN     P@RTN
     C           *LIKE     DEFN W0ACT     P@ACT
     C           *LIKE     DEFN P2PARM    P@PAR2
      *
     C           KEYL01    KLIST
     C                     KFLD           #1LAYO
      *
     C           KEYL02    KLIST
     C                     KFLD           #1LAYO
     C                     KFLD           #1PLAN
      *
     C           KEYL03    KLIST
     C                     KFLD           #1LAYO
     C                     KFLD           #1PLAN
     C                     KFLD           #1FLDN
      *
     C           KEYL04    KLIST
     C                     KFLD           #1LAYO
     C                     KFLD           #1TCGP
      *
      *  Reset return code
      *
     C                     MOVEL*BLANKS   P0RTN
      *
     C           *NAMVAR   DEFN *LDA      CGLDA
     C                     IN   CGLDA
     C                     MOVE #@LAYO    P2NLAY
      *  Clear stack
     C                     CALL 'QCLRDTAQ'STINZ
     C                     CLEARACTION
      *
      *  DOU Stack Pull End
      *
     C           FLDLEN    DOUEQ0
      *
     C           ACTION    IFEQ *BLANKS
     C                     EXSR SRPUSH
     C                     ELSE
     C                     EXSR SRDOIT
     C                     END
      *
     C                     CALL 'QRCVDTAQ'STPOP
      *
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *  Return to calling program
      *
     C                     RETRN
     C/EJECT
     C           *INZSR    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'*INZSR'  @STK,Q
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      ACT@   80
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*
     C* Get modules information
     C*
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Put DTAQ into QTEMP for use as stack
      *
     C                     CALL 'CGC3002'              9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM WKDQ1     P@DTAQ 10
     C                     PARM 47        P@DTAL  30
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CGC3002' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD2         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'CGD1741' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Open SHARE(*NO) to avoid conflicts
      *
     C***********          DO   6         Z1                              084416
     C                     DO   4         Z1                              084416
      *
     C                     MOVELCMDS11    CMDSTR    P
      *
     C           CMDSTR    CAT  FIL@,Z1:0 CMDSTR
      *
     C           CMDSTR    CAT  CMDS12:0  CMDSTR
     C                     CALL 'QCMDEXC'
     C                     PARM           CMDSTR256
     C                     PARM 256       CMDLEN 155
      *
     C                     END
      *
     C                     OPEN CGPDECL0
     C                     OPEN CGPASCL0
     C                     OPEN CGPDEFL0
     C                     OPEN CGGCONL0
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRPUSH   : Push next level                                   *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 100                                               *
      *                                                               *
      *****************************************************************
     CSR         SRPUSH    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRPUSH'  @STK,Q
      *
     C                     MOVE STACK     STACK#
     C                     CLEAR#CTION
      *
      *  Push Initiator for action
      *
     C                     MOVE STACK#    STACK
     C                     MOVE 'Y'       ACTION
     C                     CALL 'QSNDDTAQ'STPUSH
      *
      *  Determine Level
      *
     C                     EXSR SRLEVL
      *
      *  Process Level
      *
     C                     SELEC
     C           #L        WHEQ 1
      *
     C           KEYL01    CHAINCGPDECL0             01
     C           *IN01     DOWEQ*OFF
      *
     C                     MOVE STACK#    STACK
     C                     MOVE LPPLAN    P1PLAN
     C                     CALL 'QSNDDTAQ'STPUSH
      *
     C           KEYL01    READECGPDECL0                 01
     C                     END
      *
     C           #L        WHEQ 2
      *
     C           KEYL02    CHAINCGPDECL0             01
     C           *IN01     DOWEQ*OFF
      *
     C           LPTCGP    IFNE 0
     C                     MOVE STACK#    STACK
     C                     Z-ADDLPTCGP    P1TCGP
     C                     CALL 'QSNDDTAQ'STPUSH
     C                     END
      *
     C           KEYL02    READECGPDECL0                 01
     C                     END
      *
     C           KEYL02    CHAINCGPASCL0             02
     C           *IN02     DOWEQ*OFF
     C                     MOVE STACK#    STACK
     C                     MOVE BATPLN    P1PLAN
     C                     CALL 'QSNDDTAQ'STPUSH
     C           KEYL02    READECGPASCL0                 02
     C                     END
      *
     C           KEYL02    CHAINCGPDEFL0             03
     C           *IN03     DOWEQ*OFF
      *
     C                     MOVE STACK#    STACK
     C                     MOVE LRPLAN    P1PLAN
     C                     MOVE LRFLDN    P1FLDN
     C                     CALL 'QSNDDTAQ'STPUSH
      *
     C           LRTCGP    IFNE 0
     C                     MOVE STACK#    STACK
     C                     MOVE LRPLAN    P1PLAN
     C                     MOVE LRFLDN    P1FLDN
     C                     Z-ADDLRTCGP    P1TCGP
     C                     CALL 'QSNDDTAQ'STPUSH
     C                     END
      *
     C           KEYL02    READECGPDEFL0                 03
     C                     END
      *
     C           #L        WHEQ 4
      *
     C           KEYL04    CHAINCGGCONL0             04
     C           *IN04     DOWEQ*OFF
     C                     MOVE STACK#    STACK
     C                     Z-ADDGCTCGP    P1CID
     C                     CALL 'QSNDDTAQ'STPUSH
     C           KEYL04    READECGGCONL0                 04
     C                     END
      *
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRDOIT   : Call program to do the business                   *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 200                                               *
      *                                                               *
      *****************************************************************
     CSR         SRDOIT    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRDOIT'  @STK,Q
      *
     C                     MOVE STACK     STACK#
     C                     EXSR SRLEVL
      *
      *  Get program
      *
     C**********           DO   6         Z1                              086147
     C                     DO   7         Z1                              086147
      *
     C           ##L       IFEQ PGI@,Z1
     C           PGM@,Z1   ANDNE'*NONE'                                   086242
     C                     CALL PGM@,Z1   PLSTK#       9090
      *
     C           *IN90     IFEQ '1'
     C           P@RTN     OREQ '*ERROR*'
     C                     MOVELPGM@,Z1   W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     END
      *
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRLEVL   : Determine level                                   *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 300                                               *
      *                                                               *
      *****************************************************************
     CSR         SRLEVL    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRLEVL'  @STK,Q
      *
     C                     SELEC
     C           #1CID     WHNE 0
     C                     Z-ADD5         #L
     C           #1TCGP    WHNE 0
     C                     Z-ADD4         #L
     C           #1FLDN    WHNE *BLANKS
     C                     Z-ADD3         #L
     C           #1PLAN    WHNE *BLANKS
     C                     Z-ADD2         #L
     C           #1LAYO    WHNE *BLANKS
     C                     Z-ADD1         #L
     C                     OTHER
     C                     Z-ADD0         #L
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *
      * File and Program Error Processing
      *
     C/COPY CGCPYSRC,SRERRC
     C/EJECT
*********** **  FIL@                                                      084416
*********** CGPDECL0                                                      084416
*********** CGPASCL0                                                      084416
*********** CGPDEFL0                                                      084416
*********** CGGCONL0                                                      084416
*********** CGCGRPL0                                                      084416
*********** CGCONDL0                                                      084416
**  CPY@
(c) Finastra International Limited 2001
**  PGI@/PGM@
002CG0400
002CG0420
003CG0410
004*NONE                                                                  086242
005CG0430
005CG0440
005CG0450
**  FIL@
CGPDECL0
CGPASCL0
CGPDEFL0
CGGCONL0
