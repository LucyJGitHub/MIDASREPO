     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2002')
      *****************************************************************
/*STD *  RPGBASEMOD                                                   *
/*EXS *  RPGCVTOPT2                                                   *                       CSD053
/*EXI *  TEXT('Midas CG Process feedback log file')                   *
      *****************************************************************
      *                                                               *
      *  Midas - User Defined Correspondence                          *
      *                                                               *
      *  CG3707 - Process CM Feedback Log File                        *
      *                                                               *
      *  Function: This module read records from Feedback Data        *
      *            file generated by FormsMaster and updates the      *
      *            status of Item in CGUDCLPD or CGXDCLPD. It also    *
      *            updates Processed Flag field in CGOUTFPD to 'Y'    *
      *            indicate that processing is complete for all       *
      *            Correspondence in the .LOG file.                   *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2002            *
      *                                                               *
      *  Last Amend No. AR792338           Date 23Jun11               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD053             Date 07Jul06               *
      *                 231966             Date 07Feb05               *
      *                 229939             Date 04Sep04               *
      *                 226271             Date 24Mar03               *
      *                 218869             Date 18Jul03               *
      * Midas Release 4.01 -------------------------------------------*
      *                 204987             Date 17Apr02               *
      *                 CCG015  *CREATE    Date 25Feb02               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  AR792338 - CM_FEED DB Error ; string operation index error   *
      *             when processing very long PDF title names         *
      *  CSD053 - Correspondence Manager Multilanguage Upgrade.       *
      *  231966 - CM_FEED looping.                                    *
      *  229939 - Avoid array index error when correspondent name     *
      *           contains a blank.                                   *
      *  226271 - Increase buffer size.                               *
      *  218869 - Increase buffer size to avoid array index error.    *
      *  204987 - Create log for all FormsMaster feedback records     *         204987
      *           generated for a Correspondence.                     *         204987
      *  CCG015 - Correspondence Manager (Phase 1)                    *
      *                                                               *
      *****************************************************************
      /EJECT
      * +------------------+
      * ¦ File declaration ¦
      * +------------------+
 
      *  CM Feedback Control file
     FCGOUTFL0  UF   E           K DISK    COMMIT
 
      *  UDC Log File (Current)                                                 204987
     FCGUDCLL4  IF   E           K DISK                                         204987
                                                                                204987
      *  UDC Log File (Archive)                                                 204987
     FCGXDCLL3  IF   E           K DISK                                         204987
                                                                                204987
      /EJECT
      * +--------------------------------------+
      * ¦ Prototypes required for the IFS APIs ¦
      * +--------------------------------------+
      /COPY CGCPYSRC,IFSPROTO
 
      * +------------------------------------------------------+
      * ¦ READ API() definitions for Oflag and Mode parameters ¦
      * +------------------------------------------------------+
      /COPY CGCPYSRC,OPENDFN
 
      * +-------------------------------------------------+
      * ¦ Variable declaration for the IFS APIs used here ¦
      * +-------------------------------------------------+
     D FDescLog        S             10I 0
     D*Oflag****       S             10I 0 INZ                                                CSD053
     D*Mode*****       S             10I 0 INZ                                                CSD053
     D Oflag           S             10I 0 INZ                                                CSD053
     D Mode1           S             10I 0 INZ                                                CSD053
     D Ccsid           S              5  0                                                    CSD053
     D RC              S             10I 0
     D*Codepage*       S              3  0                                                    CSD053
 
      * +----------------------------------------------------+
      * ¦ Variable declaration for READ() operation on *STMF ¦
      * +----------------------------------------------------+
     D pBuffer         S               *   INZ(%ADDR(Buffer))
 
      * +-------------------------+
      * ¦ Other standalone fields ¦
      * +-------------------------+
     D LogFile         S             30
     D LogDir          S             75
     D PathName        S            105
     D RtnCode         S             10
     D ReturnCode      S             10
     D MsgLen          S              3  0
     D OldPos          S              3  0
     D NewPos          S              3  0
     D CRLFPos         S              3  0
     D DataArr         S             75    DIM(10)
     D x               S              2  0
     D PrevItemRefr    S             75                                         204987
     D PrevDestCorr    S             75                                         204987
     D ArchFlag        S              1                                         204987
     D wFound          S              1                                         204987
 
     D CtlArr          S              1    DIM(30)
     D wPos1           S              2  0
     D CtlFileName     S             30
                                                                                204987
      * +-------------------------------------+                                 204987
      * ¦ Variables for writing into Log file ¦                                 204987
      * +-------------------------------------+                                 204987
     D L#Rtcd          S              7    INZ(*BLANKS)                         204987
     D L#Actn          S              8    INZ(*BLANKS)                         204987
     D L#UDCL        E DS                  EXTNAME(CGUDCLPD)                    204987
     D L#Titl          S              7    INZ(*BLANKS)                         204987
     D L#Ulin          S              7    INZ(*BLANKS)                         204987
     D L#Cmt           S              3    INZ(*BLANKS)                         204987
 
      * Work Arrays for ExtractData subr.
 
     D*bIdx******      S              3  0                                                226271
     D bIdx            S              5  0                                                226271
     D DtBuffer        DS
     D***Buffer                     256                                                   218869
     D***Buffer                    1024                                                   218869
     D   Buffer                    2048                                                   226271
     D***BufArr                       1    DIM(256)                                       218869
     D***BufArr                       1    DIM(1024)                                      218869
     D   BufArr                       1    DIM(2048)                                      226271
     D                                     OVERLAY(Buffer)
 
     D*mIdx******      S              3  0                                                    226271
     D mIdx            S              5  0                                                    226271
     D DtMessage       DS
     D   wMessage                  1000
     D   MsgArr                       1    DIM(1000)
     D                                     OVERLAY(wMessage)
 
      * +-------------------------+
      * ¦ Define log file fields  ¦
      * +-------------------------+
     D CreateDate      S              8
     D CreateTime      S              6
     D CorrespID       S              8
     D DestCust        S             10
     D PDFName         S             35
     D PDFDir          S             75
     D PrintDate       S              8
     D PrintTime       S              6
     D Printer         S             15
     D NoOfPages       S              3
                                                                                204987
      * +-----------------+                                                     204987
      * ¦ Define Key List ¦                                                     204987
      * +-----------------+                                                     204987
     DKYItem           S                   LIKE(DLITEM)                         204987
     DKYDCor           S                   LIKE(DLDCOR)                         204987
 
      * +----------------------------------+
      * ¦ For *PSSR Error Handling routine ¦
      * +----------------------------------+
     D @Run            S              1
 
      * +-------------------------+
      * ¦ Parameters for AOCORMR0 ¦
      * +-------------------------+
     D Rtcd            S              7    INZ(*BLANK)
     D Optn            S              7    INZ(*BLANK)
 
      * +-----------------+
      * ¦ Named Constants ¦
      * +-----------------+
     D Comma           C                   ','
     D DoubleQuote     C                   '"'
     D BlankChar       C                   ' '
     D CRLF            C                   X'0D25'
     D LogString       C                   '.log'
     D CtlString       C                   '.ctl'
     D LineFeed        C                   X'25'
 
      * +----------------------------------------------------+
      * ¦ Function to format logfile into its full path name ¦
      * +----------------------------------------------------+
     DFullPath         PR           105
     D LogFile                       30    VALUE
     D LogDir                        75    VALUE
 
      * +-------------------------------------------------+
      * ¦ Function to trim out '"' from both ends of data ¦
      * +-------------------------------------------------+
     D***TrimData         PR            75                                                  AR792338
     D*** LogData                       75    VALUE                                         AR792338
     DTrimData         PR           100                                                     AR792338
     D LogData                      100    VALUE                                            AR792338
 
      * +-----------------------------------------------+
      * ¦ Data structure for Correspondence Manager ICD ¦
      * +-----------------------------------------------+
     D Sdcorm        E DS                  EXTNAME(SDCORMPD)
 
      * +-----------------------------------------------+
      * ¦ Data Structure (long) used by Access Programs ¦
      * +-----------------------------------------------+
     D Dssdy         E DS                  EXTNAME(DSSDY)
 
      * +----------------------------------------------------+
      * ¦ System Local Data Area to hold <OutputInformation> ¦
      * +----------------------------------------------------+
     D Cglda         E DS                  EXTNAME(CGLDA)
 
      * +------------------------------------------------------+
      * ¦ Local Data Area Structure for error handling routine ¦
      * +------------------------------------------------------+
     D LDA           E DS           256    EXTNAME(LDA)
      *  LDA definition :                   134 141 DBFILE
      *                                     142 170 DBKEY
      *                                     171 180 DBPGM
      *                                     181 1830DBASE
      *                                     184 193 DBMOD
      *                                     194 203 DBPROC
 
      * +-----------------------------------------------------------------+
      * ¦ The following /COPY line includes all the defined fields in the ¦
      * ¦ PSDS.  They have meaningful names, prefixed by 'PS'.            ¦
      * +-----------------------------------------------------------------+
     D/COPY ZACPYSRC,PSDS
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Main Routine                                                ¦
      * +-------------------------------------------------------------+
 
      * Initialise working feedback directory
 
     C                   EVAL      LogDir = %TRIM(CMLDFD)
 
      * Format the full pathname for log file in the iSeries.
 
     C                   EVAL      PathName = FullPath(%TRIM(LogFile):LogDir)
 
      * Open the log file
 
     C                   EXSR      OpenLogFile
 
      * Read the log file
 
     C                   EXSR      ReadLogFile
 
      * Delete the .DAT log file in iSeries IFS directory.
 
     C                   EXSR      DeleteLogFile
 
      * Commit to file all updates for the .CTL and .LOG being processed.
     C                   COMMIT
     C                   SETON                                        LR
      *---------------------------------------------------------------*
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/OpenLogFile - Open retrieved Feedback log file using   ¦
      * ¦                    API OPEN() command.                      ¦
      * +-------------------------------------------------------------+
     C     OpenLogFile   BEGSR
 
      *  Set OPEN status flag where :
      *  --------------------------
      *  a) the file is opened for reading only (O_RDONLY)
      *  b) exclusive for this process (O_SHARE_NONE)
      *  c) auto translate data to text (O_TEXTDATA)
 
     C                   EVAL      Oflag = O_RDONLY + O_SHARE_NONE +
     C**********                           O_TEXTDATA                                         CSD053
     C                                     O_TEXTDATA + O_CCSID                               CSD053
     C                   MOVE      CMFCCS        CCSID                                        CSD053
 
      * Set file mode parameter
      * -----------------------
      * a) S_IRUSR = read for USER
      * b) S_IRGRP = read for GROUP
      * c) S_IROTH = read for OTHERS
 
     C**********         EVAL      mode = S_IRUSR + S_IRGRP + S_IROTH                         CSD053
      * Set file mode parameter                                                               CSD053
     C                   EVAL      Mode1 = S_IRWXU + S_IRWXG +                                CSD053
     C                                     S_IROTH + S_IXOTH                                  CSD053
 
      * Open the log file
 
     C**********         EVAL      FDescLog = OPEN(%TRIMR(PathName) :                         CSD053
     C**********                            Oflag : Mode : Codepage)                          CSD053
     C                   EVAL      FDescLog = OPEN(%TRIMR(PathName) :                         CSD053
     C                                      Oflag : Mode1 : Ccsid)                            CSD053
 
      * If error opening the log file.
 
     C                   IF        FDescLog = -1
     C                   EVAL      DBFILE =  PathName
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  002
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/ReadLogFile - Read data from Feedback log file using   ¦
      * ¦                    API READ() command.                      ¦
      * +-------------------------------------------------------------+
     C     ReadLogFile   BEGSR
 
      * Initialise work variables to hold previous key values                   204987
                                                                                204987
     C                   EVAL      PrevItemRefr = *BLANKS                       204987
     C                   EVAL      PrevDestCorr = *BLANKS                       204987
                                                                                204987
      * Load data into buffer
 
     C                   EXSR      LoadBuffer
 
      * Read Feedback log record until EOF reached
 
     C                   DOW       RC <> 0
 
      **If*RC*greater*than*Zero,*a*data*has*been*read*so*process*it             204987
      **otherwise,*close*file*(and*leave*DOW*loop).****************             204987
      *************************************************************             204987
     C**********         IF        RC = 0                                       204987
     C**********         EXSR      ClosLogFile                                  204987
     C**********         LEAVE                                                  204987
     C**********         ELSE                                                   204987
 
      * Extract a whole message to be processed from Buffer
 
     C                   EXSR      ExtractData
 
     C**********         ENDIF                                                  204987
 
     C                   ENDDO
                                                                                204987
      * Update Processed field for the last item in the log.                    204987
                                                                                204987
     C                   IF        (PrevItemRefr <> *BLANKS)                    204987
     C                             AND (PrevDestCorr <> *BLANKS)                204987
     C                   EXSR      UpdProcFlag                                  204987
     C                   ENDIF                                                  204987
                                                                                204987
      * Close the log file                                                      204987
                                                                                204987
     C                   EXSR      ClosLogFile                                  204987
 
      * Update Processed Flag status for the .CTL record in CGOUTFPD.
 
     C                   EXSR      UpdateCTL
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/LoadBuffer  - Load buffer with data from streamfile.   ¦
      * +-------------------------------------------------------------+
     C     LoadBuffer    BEGSR
 
      * Reset API return code and buffer before each read
 
     C                   EVAL      RC =  0
 
     C                   EVAL      Buffer =  *BLANKS
 
     C                   EVAL      RC = READ(FDescLog : pBuffer : %LEN(Buffer))
 
      * Error encountered, issue error screen and dump the program
 
     C                   IF        RC = -1
     C                   EVAL      DBFILE =  'READ()'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  003
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/ClosLogFile - Close Feedback log file.                 ¦
      * +-------------------------------------------------------------+
     C     ClosLogFile   BEGSR
 
      * Close the Feedback log file
     C                   EVAL      RC = CLOSE(FDescLog)
 
      * If error closing the streamfile, process dbase error.
     C                   IF        RC = -1
     C                   EVAL      DBFILE =  'CLOSE()'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  004
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/ExtractData - Extract one whole set of Feedback Data   ¦
      * +-------------------------------------------------------------+
     C     ExtractData   BEGSR
 
      * Initialise work variables for Feedback array
 
     C                   EVAL      mIdx = 1
     C                   EVAL      MsgArr = *blanks
 
      * Process log file until Buffer read is empty
 
     C                   DOW       Buffer <> *BLANKS
 
      * Initialise work index for Buffer array
 
     C                   EVAL      bIdx = 1
 
      * Read each element while not end of Buffer array and
      * while element value read is not *blank.
 
     C**********         DOW       (bIdx <= %ELEM(BufArr)) AND                                218869
     C**********                   (BufArr(bIdx) <> *BLANK)                                   218869
     C                   DOW       (bIdx <= %ELEM(BufArr)) AND
     C                             (mIDx < 1000)
 
      * Load buffer element into message array.
 
     C                   EVAL      MsgArr(mIdx) = BufArr(bIdx)
     C                   EVAL      mIdx = mIdx + 1
 
      * If Linefeed is detected, feedback data in MsgArr is complete
      * so process data and perform file updates.
 
     C                   IF        BufArr(bIdx) = LineFeed
     C                   EXSR      ProcessData
 
      * Re-initialise work array and index.
 
     C                   EVAL      mIdx = 1
     C                   EVAL      MsgArr = *blanks
     C                   ENDIF
 
      * Increment buffer array index.
 
     C                   EVAL      bIdx = bIdx + 1
     C                   ENDDO
 
      * Re-load the buffer.
 
     C                   EXSR      LoadBuffer
 
     C                   ENDDO
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/ProcessData -  Process Feedback data                   ¦
      * +-------------------------------------------------------------+
     C     ProcessData   BEGSR
 
      * Split Buffer into its several components.
 
     C                   EXSR      SplitData
 
      * Update status of Item in PF/CGUDCRPD or PF/CGXDCRPD
 
     C                   CALL      'CG3708'
     C                   PARM                    DataArr
     C                   PARM      *BLANKS       ReturnCode
 
     C                   IF        %ERROR OR ReturnCode <> *BLANK
 
     C                   EVAL      DBFILE =  'CGUDCRPD'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  005
     C                   EVAL      DBMOD  =  PSProcMod
 
     C                   EXSR      *PSSR
 
     C                   ENDIF
                                                                                204987
      * If there is a change in Item Reference OR Destination                   204987
      * Correspondent, update previous Item's Processed Flag                    204987
      * (DLPROC) to 'Y' to indicate that all log records for                    204987
      * the Item has been written to CGUDCLPD (or CGXDCLPD).                    204987
      * NOTE: Also skip the first run where Previous values                     204987
      * ----  for Item Ref and Dest Corr are initially blank.                   204987
                                                                                204987
     C                   IF        (DataArr(3) <> PrevItemRefr)                 204987
     C                             AND (PrevItemRefr <> *BLANKS)                204987
     C                             OR (DataArr(4) <> PrevDestCorr)              204987
     C                             AND (PrevDestCorr <> *BLANKS)                204987
                                                                                204987
     C                   EXSR      UpdProcFlag                                  204987
                                                                                204987
     C                   ENDIF                                                  204987
                                                                                204987
      * Save Item Reference and Destination Correspondent of last               204987
      * item processed.                                                         204987
                                                                                204987
     C                   EVAL      PrevItemRefr = DataArr(3)                    204987
     C                   EVAL      PrevDestCorr = DataArr(4)                    204987
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/SplitData   - Split buffer data into its basic         ¦
      * ¦                    component fields as follows:             ¦
      * ¦                                                             ¦
      * ¦                    a) Creation Date                         ¦
      * ¦                    b) Creation Time                         ¦
      * ¦                    c) Correspondence Identifier             ¦
      * ¦                    d) Destination Correspondent             ¦
      * ¦                    e) PDF File Name                         ¦
      * ¦                    f) PDF Directory location                ¦
      * ¦                    g) Printing Date                         ¦
      * ¦                    h) Printing Time                         ¦
      * ¦                    i) Printer Name                          ¦
      * ¦                    j) No. Of. Pages Printed                 ¦
      * +-------------------------------------------------------------+
     C     SplitData     BEGSR
 
      * Reset work variables
 
     C                   EVAL      MsgLen = 0
     C                   EVAL      OldPos = 0
     C                   EVAL      NewPos = 0
     C                   EVAL      CRLFPos = 0
     C                   EVAL      x = 0
 
      * Determine actual length of message record
 
     C     BlankChar     CHECKR    wMessage      MsgLen
 
      * Determine position of CRLF within the message (this will
      * be useful when processing the last field after the last
      * comma delimiter found).
 
     C                   EVAL      CRLFPos = %SCAN(CRLF:wMessage)
 
      * Start scanning for comma delimiter
 
     C                   EVAL      NewPos = %SCAN(Comma:wMessage:OldPos+1)
 
      * If comma is found, load trimmed data into a work array
 
     C                   DOW       (NewPos > 0) AND (NewPos < CRLFPos)
 
     C                   EVAL      x = x + 1
 
     C                   EVAL      DataArr(x) = TrimData(%SUBST(wMessage : +
     C                                             OldPos+1 : NewPos-OldPos-1))
 
      * Save current position of comma
 
     C                   EVAL      OldPos = NewPos
 
      * Scan for next comma delimiter
 
     C                   EVAL      NewPos = %SCAN(Comma:wMessage:OldPos+1)
 
     C                   ENDDO
 
      * Process the last field in the work message (i.e. after the
      * last delimiter found; last position held by OLDPOS).
      * NEWPOS is zero at this point so use CRLFPOS instead.
 
     C                   IF        (OldPos > 0) and (NewPos = 0)
 
     C                   EVAL      x = x + 1
     C                   EVAL      DataArr(x) = TrimData(%SUBST(wMessage : +
     C                                             OldPos+1 : CRLFPos-OldPos-1))
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
                                                                                204987
      /EJECT                                                                    204987
      * +-------------------------------------------------------------+         204987
      * ¦ Subr/UpdProcFlag   - Update DLPROC (Processed Flag in       ¦         204987
      * ¦                      CGUDCLPD or CGXDCLPD) for an Item.     ¦         204987
      * +-------------------------------------------------------------+         204987
     C     UpdProcFlag   BEGSR                                                  204987
                                                                                204987
      * Check whether the Item is CURRENT or ARCHIVE.                           204987
                                                                                204987
     C                   EVAL      ArchFlag = *BLANK                            204987
     C                   EXSR      ScanLogFile                                  204987
                                                                                204987
      * If Item is found, update Processed Flag (DLPROC) depending              204987
      * on the setting of the archive flag.                                     204987
                                                                                204987
     C                   IF        wFound = 'Y'                                 204987
                                                                                204987
      * Blank out / zeroise all fields in L#UDCL except Item Refr               204987
      * and Destination Correspondent.                                          204987
                                                                                204987
     C                   CLEAR                   L#UDCL                         204987
                                                                                204987
     C                   MOVEL     PrevItemRefr  DLITEM                         204987
     C                   MOVEL     PrevDestCorr  DLDCOR                         204987
     C                   EVAL      DLPROC = 'Y'                                 204987
                                                                                204987
     C                   IF        ArchFlag = 'Y'                               204987
                                                                                204987
      * Write to Archive log file                                               204987
      * -------------------------                                               204987
                                                                                204987
     C                   CALL      'CG9050'                                     204987
     C                   PARM      *BLANKS       L#Rtcd                         204987
     C                   PARM      '*UPDATE '    L#Actn                         204987
     C                   PARM                    L#UDCL                         204987
     C                   PARM      *BLANKS       L#Titl                         204987
     C                   PARM      *BLANKS       L#Ulin                         204987
     C                   PARM      'YES'         L#Cmt                          204987
                                                                                204987
      * Write to Current log file                                               204987
      * -------------------------                                               204987
     C                   ELSE                                                   204987
                                                                                204987
     C                   CALL      'CG9030'                                     204987
                                                                                204987
     C                   PARM      *BLANKS       L#Rtcd                         204987
     C                   PARM      '*UPDATE '    L#Actn                         204987
     C                   PARM                    L#UDCL                         204987
     C                   PARM      *BLANKS       L#Titl                         204987
     C                   PARM      *BLANKS       L#Ulin                         204987
     C                   PARM      'YES'         L#Cmt                          204987
                                                                                204987
     C                   ENDIF                                                  204987
                                                                                204987
      * If error encountered, process database erro.                            204987
                                                                                204987
     C                   IF        L#Rtcd <> *BLANKS                            204987
                                                                                204987
      * Identify file involved based on Archive flag                            204987
                                                                                204987
     C                   IF        ArchFlag = 'Y'                               204987
     C                   EVAL      DBFILE = 'CGXDCLL3'                          204987
     C                   ELSE                                                   204987
     C                   EVAL      DBFILE = 'CGUDCLL4'                          204987
     C                   ENDIF                                                  204987
                                                                                204987
     C                   EVAL      DBPGM  =  PSProcPgm                          204987
     C                   EVAL      DBASE  =  008                                204987
     C                   EVAL      DBMOD  =  PSProcMod                          204987
     C                   EXSR      *PSSR                                        204987
     C                   ENDIF                                                  204987
                                                                                204987
     C                   ENDIF                                                  204987
                                                                                204987
     C                   ENDSR                                                  204987
      * +------------------------------------------------------------------+    204987
                                                                                204987
      /EJECT                                                                    204987
      * +-------------------------------------------------------------+         204987
      * ¦ Subr/ScanLogFile - Determine if Feedback data is for a      ¦         204987
      * ¦                    CURRENT or ARCHIVE correspondence.       ¦         204987
      * +-------------------------------------------------------------+         204987
     C     ScanLogFile   BEGSR                                                  204987
                                                                                204987
      * Initialise key field for UDC log files.                                 204987
                                                                                204987
     C                   MOVEL     PrevItemRefr  KYItem                         204987
     C                   EVAL      KYDCor = PrevDestCorr                        204987
                                                                                204987
      * +-------------------------+                                             204987
      * ¦ Search Current Log File ¦                                             204987
      * +-------------------------+                                             204987
                                                                                204987
     C     ItemKey1      SETLL     CGUDCLL4                                     204987
                                                                                204987
     C                   IF        %EQUAL                                       204987
      * Set Item Found indicator                                                204987
     C                   EVAL      wFound = 'Y'                                 204987
      * Set Archive flag to NO.                                                 204987
     C                   EVAL      ArchFlag = 'N'                               204987
                                                                                204987
     C                   ELSE                                                   204987
                                                                                204987
      * +-------------------------+                                             204987
      * ¦ Search Archive Log File ¦                                             204987
      * +-------------------------+                                             204987
                                                                                204987
     C     ItemKey1      SETLL     CGXDCLL3                                     204987
                                                                                204987
     C                   IF        %EQUAL                                       204987
      * Set Item Found indicator                                                204987
     C                   EVAL      wFound = 'Y'                                 204987
      * Set Archive flag to YES.                                                204987
     C                   EVAL      ArchFlag = 'Y'                               204987
     C                   ENDIF                                                  204987
                                                                                204987
     C                   ENDIF                                                  204987
                                                                                204987
     C                   ENDSR                                                  204987
      * +------------------------------------------------------------------+    204987
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/UpdateCTL     - Update the .CTL record in PF/CGOUTFPD  ¦
      * ¦                      with Process Flag (CTLSTS) = 'Y.       ¦
      * +-------------------------------------------------------------+
     C     UpdateCTL     BEGSR
 
      * Format the .CTL file name to be deleted.
 
     C                   EXSR      FormatCtlName
 
      * Scan PF/CGOUTFPD using the .CTL file name.
 
     C     CtlFileName   CHAIN     CGOUTFL0                           90
 
     C                   IF        (*IN90 = *OFF) AND (CTLSTS = *BLANK)
 
     C                   EVAL      CTLSTS = 'P'
     C**********         UPDATE(E) @OUTFL0                                                    231966
     C                   DELETE(E) @OUTFL0                                                    231966
 
      * If error in deletion, issue database error
 
     C                   IF        %ERROR
     C                   EVAL      RtnCode = '*ERROR    '
     C                   EVAL      DBFILE =  'CGOUTFL0'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  006
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-----------------------------------------------------------+
      * ¦ Subr/DeleteLogFile - Delete the .LOG file in iSeries IFS  ¦
      * ¦                      directory.                           ¦
      * +-----------------------------------------------------------+
     C     DeleteLogFile BEGSR
 
     C                   EVAL      RC = UNLINK(%TRIMR(PathName))
 
      * If error removing the link to .DAT log file, issue
      * database error.
 
     C                   IF        RC = -1
     C                   EVAL      DBFILE =  'UNLINK()'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  007
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDSR
      * +------------------------------------------------------------------+
 
      /EJECT
      * +-----------------------------------------------------------------+
      * ¦ FormatCtlName - Replace .LOG file extention with '.CTL'.        ¦
      * +-----------------------------------------------------------------+
     C     FormatCtlName BEGSR
 
      * Get the position of string '.LOG' in the record.
 
     C     LogString     SCAN      LogFile       Wpos1
 
      * If string is found, load record into a work array.
 
     C                   IF        WPos1 <> 0
 
     C                   MOVEA     *BLANKS       CtlArr
     C                   MOVEA     LogFile       CtlArr
 
      * Use the position of '.LOG' in the string and replace it
      * with '.CTL'.
 
     C                   MOVEA     CtlString     CtlArr(WPos1)
 
      * Load the formatted name into return parameter to be passed
      * to calling program.
 
     C                   MOVEA     CtlArr        CtlFileName
 
     C                   ENDIF
 
     C                   ENDSR
      *--------------------------------------------------------------------*
 
      /EJECT
      * +------------------------------------------------------------------+
      * ¦ Subr/*INZSR - Initialisation subroutine                          ¦
      * +------------------------------------------------------------------+
     C     *INZSR        BEGSR
 
      *  Define parameter passed from calling program
     C     *ENTRY        PLIST
     C                   PARM                    LogFile
     C                   PARM                    RtnCode
 
      *  Retrieve Correspondence Manager ICD
 
     C                   CALLB(E)  'AOCORMR0'
     C                   PARM      *BLANKS       Rtcd
     C                   PARM      '*FIRST '     Optn
     C     Sdcorm        PARM      *BLANKS       Dssdy
 
      * Error calling AOCORMR0
     C                   IF        %ERROR OR Rtcd <> *BLANK
 
     C                   EVAL      DBFILE =  'SDCORMPD'
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  001
     C                   EVAL      DBMOD  =  PSProcMod
 
     C                   EXSR      *PSSR
 
     C                   ENDIF
 
      * Load correct value for codepage
 
     C**********         MOVE      CMCPAG        CodePage                                     CSD053
                                                                                204987
      *  Define Key list for Item Log file search.                              204987
                                                                                204987
     C     ItemKey1      KLIST                                                  204987
     C                   KFLD                    KYItem                         204987
     C                   KFLD                    KYDCor                         204987
 
     C                   ENDSR
 
      /EJECT
      * +-------------------------------------------------------------+
      * ¦ Subr/*PSSR - Program Exception Error Handling Routine       ¦
      * ¦              Called automatically if a program error occurs,¦
      * ¦              or directly by the program code using EXSR.    ¦
      * ¦              This subroutine DUMPs the program just once.   ¦
      * +-------------------------------------------------------------+
     C     *PSSR         BEGSR
 
      *  Dump the program
     C                   DUMP
 
      *  Display Dbase Error screen
     C                   IF        @Run = *BLANK
     C                   EVAL      @Run = 'Y'
 
     C                   CALLB     'DBERRCTL'
 
     C                   ENDIF
 
      * Set job switches
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
 
     C                   EVAL      RtnCode = '*ERROR '
 
      * End program
     C                   RETURN
 
     C                   ENDSR
 
      /EJECT
      * +---------------------------------------------------------+
      * ¦ Func/FullPath - Format Log file name into its full path ¦
      * ¦                 in the iSeries.                         ¦
      * ¦ Called By: Main Routine                                 ¦
      * +---------------------------------------------------------+
     PFullPath         B
 
     DFullPath         PI           105
     D  LogFile                      30    VALUE
     D  LogDir                       75    VALUE
 
      * Work field to contain the full formatted name
     D PathName        S            105
 
      * Directory in UNIX format
     D Unix            C                   '/'
 
      * Directory in WINDOWS format
     D Windows         C                   '\'
 
      * Position of UNIX ('/') in log directory
     D Pos1            S              5U 0
 
      * Check if Directory is in UNIX or WINDOWS format
     C                   EVAL      Pos1 = %SCAN(Unix:LogDir)
 
      * If position is zero, directory format = WINDOWS ('\')
     C                   IF        Pos1 = 0
 
      * If it is only root directory, append the stream file name at
      * the end of the directory, else, insert a '\' before attaching
      * the log file name.
 
     C                   IF        %SUBST(LogDir:4:1) = *BLANKS
     C                   EVAL      PathName = %TRIM(LogDir) + %TRIM(LogFile)
     C                   ELSE
     C                   EVAL      PathName = %TRIM(LogDir)+ Windows +
     C                                        %TRIM(LogFile)
     C                   ENDIF
 
      * Format as a UNIX Directory path
     C                   ELSE
 
      * If it is only root directory, append the stream file name at
      * the end of the directory, else, insert a '/' before attaching
      * the log file name.
 
     C                   IF        %SUBST(LogDir:2:1) = *BLANKS
     C                   EVAL      PathName = %TRIM(LogDir) + %TRIM(LogFile)
     C                   ELSE
     C                   EVAL      PathName = %TRIM(LogDir)+ Unix +
     C                                        %TRIM(LogFile)
     C                   ENDIF
 
     C                   ENDIF
 
     C                   RETURN    PathName
     P                 E
 
      /EJECT
      * +---------------------------------------------------------+
      * ¦ Func/TrimData - Remove double-quotes '"' from both ends ¦
      * ¦                 of the data field.                      ¦
      * +---------------------------------------------------------+
     PTrimData         B
 
     D***TrimData         PI            75                                                  AR792338
     D***  LogData                      75    VALUE                                         AR792338
     DTrimData         PI           100                                                     AR792338
     D  LogData                     100    VALUE                                            AR792338
 
      * Actual length of data field to be trimmed (incl. quotes)
     D PLen            S              2  0
 
      * Field to contain trimmed data
     D*** TrimFld         S             75                                                  AR792338
     D TrimFld         S            100                                                     AR792338
 
      * Determine position of double quote at the end of LogData
 
     C                   EVAL      PLen = %SCAN(DoubleQuote:LogData:2)
 
      * If PLEN = 2 (i.e. LOGDATA = ""), this is a null value
      * (NOTE: PDF File Name and PDF Directory can be NULL if
      *  Item is printed or sent via Email without storing it
      *  in PDF format within the Print Server).
 
     C                   IF        PLen = 2
     C                   EVAL      TrimFld = *BLANKS
     C                   ELSE
 
      * PLEN should now hold the position of '"' at the end
      * of the field as well as char position 1. Use substring
      * function to trim the field
 
     C                   EVAL      TrimFld = %SUBST(LogData:2:PLen-2)
 
     C                   ENDIF
 
     C                   RETURN    TrimFld
     P                 E
