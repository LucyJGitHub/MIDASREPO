     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG CERT/CONF of balances extract')               *
      *****************************************************************
      *                                                               *
      *  Midas - Correspondence Manager                               *
      *                                                               *
      *  CG4560 - Certificate and Confirmation of Balances Extract    *
      *                                                               *
      *  Function:  This program extract all data to construct the    *
      *             relevant certificate & confirmation of balances.  *
      *                                                               *
      *  Called By: GLC4620 - Certificates of Balances Control Program*
      *             GLC4630 - Confirmation of Balances Control Program*
      *                                                               *
      *  (c) Finastra International Limited 2003                      *
      *                                                               *
      *  Last Amend No. CSD103             Date 10Aug20               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 CRE075             Date 06Dec10               *
      *                 CER059             Date 19Jul10               *
      *                 CER047             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 BUG9646            Date 20Dec05               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 BUG3021            Date 02Jun04               *
      *                 CLE025             Date 20Oct03               *
      *                 CGL029             Date 23Mar04               *
      *                 CGL024  *CREATE    Date 02Sep03               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CSD103 - LIBOR Deregulation - Common Layer/Standing Data     *
      *           (Recompile)                                         *
      *  MD046248 - Finastra Rebranding                               *
      *  CRE075 - Effective Date for Retail Accounts (Recompile)      *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER047 - German Features LF037-00 Reporting §24c KWG         *
      *           (Recompile)                                         *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  BUG9646- Changes in CGPACKE causes programs not to compile   *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  BUG3021 - Incorrect dates and amount formatting in           *
      *            certificate and confirmation of balances           *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  CGL029 - Increase of Midas Account Code from 4 Bytes to 10   *
      *           Bytes.                                              *
      *  CGL024 - Certificates and Confirmations of Balances          *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  Indicator usage                                              *
      *  ~~~~~~~~~~~~~~~                                              *
      *                                                               *
      *  51   -    End of File (CGCERBPD/CGCONBPD)                    *
      *  52   -    End of File (GLACNTL2)                             *
      *  53   -    End of File (APOSTL4)                              *
      *                                                               *
      *  99   -    General work indicator                             *
      *                                                               *
      *****************************************************************
     FCGCERBPDIF  E           K        DISK         KINFSR SRFILE     UC
      ** Certificate of Balance Driver File
      *
     FCGCONBPDIF  E           K        DISK         KINFSR SRFILE     UC
      ** Confirmation of Balance Driver File
      *
     FGLACNTL2IF  E           K        DISK         KINFSR SRFILE
      ** Account Details by CNUM, BRCA, ACOD, CCY, ACSQ
      *
     FAPOSTL4 IF  E           K        DISK         KINFSR SRFILE
      ** Account Postings by BRCA, CNUM, CCY, ACOD, ACSQ, PSTD, DRCR
      *****************************************************************
      *
     E/COPY CGCPYSRC,CGPACKE
      ** CG Data Pack Arrays (ie. ##R, ##D, ##S)
      *
     E/COPY CGCPYSRC,SRERRE
      ** CG Error Processing Array (ie. @STK & @REC)
      *
     E                    ##W        20  1
     E                    ##NUMA     29  1
      *
     E                    ##GRP   1  70 10   ##RDEA 22
      **  ##GRP = Group/RDE Number ##RDEA = RDE + Attributes
      *                                                                                      BUG3021
     E                    ##CY      100  3                                                   BUG3021
      **  Array of Currencies accessed by program                                            BUG3021
      *
     E/COPY ZSRSRC,ZPOWERZ1
      *
     E                    ##CPY   1   1 80
      **  Copyright array.
      *
     I/SPACE 5
      *
     I            DS
     I                                        1  10 ##GRPX
     I                                        1   6 ##GRPS
     I                                        7  100##RDEN
      **  Look-up string for RDE definition Array
      *
     I##SDS       DS
     I**********                              15120 ##S                                      BUG9646
     I                                        15632 ##S                                      BUG9646
      **  Packed data string.
      *
     I            DS
     I                                        1  20 ##W
     I                                        1  200##WNUM
      **  Number Field
      *
     I            DS
     I                                        1   8 ##ITMA
     I                                        1   80##ITEM
      ** Used to convert item reference from character to numeric
      *
     IDSACID      DS
      ** Midas Full Account ID
     I                                        1   6 ##CNUM
     I                                        7   9 ##CCY
      *                                                                                       CGL029
      ** Change Account Code definition to 10 digits                                          CGL029
      *                                                                                       CGL029
     I**********                             10  13 ##ACOD                                    CGL029
     I**********                             14  15 ##ACSQ                                    CGL029
     I**********                             16  18 ##BRCA                                    CGL029
     I                                       10  19 ##ACOD                                    CGL029
     I                                       20  21 ##ACSQ                                    CGL029
     I                                       22  24 ##BRCA                                    CGL029
     I##UDCR    E DSCGUDCRPD
      ** External DS for incomplete reference
      *
     ISDBANK    E DSSDBANKPD
      **  External DS for bank details
      *
     ISDBRCH    E DSSDBRCHPD
     I              QQDFAC                          XXDFAC
      **  External DS for branch details
      *
     ISDACCT    E DSACCNTAB
      **  External DS for account details
      *
     I***SDCURR****E DSSDCURRPD                                                              BUG3021
     ISDCURR    E DSSDCURRPD                101                                              BUG3021
      **  External DS for currency details
      *
     ISDCUST    E DSSDCUSTPD
      **  External DS for Customer details
      *
     ISDGELR    E DSSDGELRPD
      **  External DS for General Ledger Details
      *
     ISCSARD    E DSSCSARDPD
     I              LCD                             LCX
      ** MIDAS Switchable Features Accessed Via Access Program
      *
     IDSFDY     E DSDSFDY
      **  First DS for access programs, short data structure
      *
     IDSSDY     E DSDSSDY
      **  Second DS for access programs, long data structure
      *
      *
     IW0FMT     E DSCGUDTAPD
      **  Record format of PF/CGUDTAPD for use as a parameter
      *
     I##SRDT      DS                         20
      **  DS to store subroutine specific data.
      **  - Previous Bind
      **  - This Bind
      **  - Saved Path
     I                                    P   1   50##PBIN
     I                                    P   6  100##TBIN
     I                                       11  80 ##SPAT
      *
     I/COPY CGCPYSRC,CGPACKI
      ** Standard I-specs
      *
     I              'GL_BALSTMT'          C         C#STMT
     I              'CERT      '          C         C#CERB
     I              'CONF      '          C         C#CONF
      **  Define constant fields
      *
     ICPYR        DS
     I                                        1  80 ##CPY
      **  Data Structure for Compilation - Copyright Insertion
      *
     I/COPY CGCPYSRC,SRERRI
      ** Standard I-specs
      *
     C/SPACE 5
      *****************************************************************
      *                                                               *
      *   Index to subroutines                                        *
      *   --------------------                                        *
      *                                                               *
      *   G#BALS - Main processing - top level group set              *
      *   G#CHDR - Header (simple)                                    *
      *   BRANCH - Branch Details (Simple)                            *
      *   ACCNT  - Account Details (Simple)                           *
      *   CUST   - Customer Details (Simple)                          *
      *   CCYGS  - Currency Details (Simple)                          *
      *   G#CACC - Posting group set 1 (complex)                      *
      *   G#SRC1 - Debit Rate change group set 1 (complex)            *
      *   G#SCC1 - Credit Rate change group set 1 (complex)           *
      *   G#CFTR - Footer (simple)                                    *
      *   SRNSTD - Calculate Next Statement Date                      *
      *   G#SOPB - Opening balance (simple)                           *
      *   G#SPS2 - Posting group set 2 (complex)                      *
      *   SRFLDT - Find First and Last Posting Date                   *
      *   SRCCLR - Calculate Clearing Amounts                         *
      *   G#SCLR - Cleared Balances Open/Closing (simple)             *
      *   G#SCLB - Closing balance (simple)                           *
      *   G#SBRK - Item/Value Breakdown (simple)                      *
      *   G#SRC2 - Debit Rate change group set 2 (simple)             *
      *   G#SCC2 - Credit Rate change group set 2 (simple)            *
      *   G#SPS3 - Posting group set 3 (simple)                       *
      *   SRGENR - Generate reference record                          *
      *   SRRRDE - Retrieve RDE information for RDE in group set      *
      *   SRADTA - Accumulate RDEs & associated data for Output       *
      *   SRRFMN - Reformat RDE data                                  *
      *   SRODTA - Output Accumulated Data to PF/CGUDTAPD             *
      *   SRDCDT - Determine Currency Details                         *
      *   SRINIT - Initial processing - On First Call                 *
      *   SRINZ  - Initialise Fields on Each Invocation               *
      *   *PSSR  - Exception/Error Handling                           *
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Process     :  MAINLINE                                       *
      * Function    :  Mainline processing                            *
      *                                                               *
      * Called by   :  None                                           *
      * Calls       :  SRINIT - Initial Processing - On First Call    *
      *                SRINZ  - Initialise Fields on Each Invocation  *
      *                G#BALS - Main Processing - Top Level Group Set *
      *****************************************************************
      *
      **  Parameter list for current program invocation.
     C           *ENTRY    PLIST
     C                     PARM           W0RTN   7
     C                     PARM           W0CMT   3
     C                     PARM           WCALP   4
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      *
      *................................................................
      *
      **  Initial processing - Once Only
     C           ##INIT    IFEQ *BLANK
     C                     EXSR SRINIT
     C                     MOVE 'Y'       ##INIT  1
     C                     ENDIF
      *
      **  Initialisation processing
     C                     EXSR SRINZ
      *
      ** Read the first record in driver file
     C           WCALP     IFEQ 'CERB'
     C                     READ CGCERBPD                 51
     C                     ELSE
     C                     READ CGCONBPD                 51
     C                     ENDIF
      *
      ** Read all records in driver file
     C           *IN51     DOWEQ*OFF
      *
      ** Process top level group set
     C                     EXSR G#BALS
      *
      ** Read the next record in driver file
     C           WCALP     IFEQ 'CERB'
     C                     READ CGCERBPD                 51
     C                     ELSE
     C                     READ CGCONBPD                 51
     C                     ENDIF
      *
     C                     ENDDO
      *
      *................................................................
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      **  Terminate program
     C                     MOVE *ON       *INLR
     C                     RETRN
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#BALS                                         *
      * Function    :  Main processing - top level group set          *
      *                                                               *
      * Called by   :  Mainline                                       *
      * Calls       :  SRGENR - Generate reference record             *
      *                PSHGRS - Write record to CGUXMGPD              *
      *                G#CHDR - Header (simple)                       *
      *                CUST   - Customer Details (simple)             *
      *                G#CACC - Posting group set 1 (complex)         *
      *                G#CFTR - Footer (simple)                       *
      *                SRERR  - Database Error                        *
      *****************************************************************
     C           G#BALS    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q       50
     C                     MOVEL'g_BALS'  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           1         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\g_BALS' ##PNAM  7
     C           S#PATH    CAT  ##PNAM:0  S#PATH
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds
      **  NOTE: S#PBIN & S#TBIN is initially set to 1 in SR/SRINZ)
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      *................................................................
      *
     C                     MOVE 'Y'       ##PROC  1
      *
      **  If the Statement is due, continue processing
     C           ##PROC    IFEQ 'Y'
      *
      **  Generate reference number by writing to PF/CGUDCRPD
      **  If the statement is to be produced, then produce it
      **
      **  NOTE: ##PROC will be set to 'N' in SRGENR if CG9010 ended in error
      *
     C                     EXSR SRGENR
      *
     C           ##PROC    IFEQ 'Y'
      *
      **  Write record to XML Elements for Explored Group Sets (CGUXMGPD)
     C                     EXSR PSHGRS
      *
      **  Header Group Set (simple)
     C                     EXSR G#CHDR
     C           1         OCUR ##SRDT
     C                     MOVEL##SPAT    S#PATH
     C                     Z-ADD##PBIN    S#PBIN
     C                     Z-ADD##TBIN    S#TBIN
      *
      **  Customer Details (simple)
     C                     EXSR CUST
     C           1         OCUR ##SRDT
     C                     MOVEL##SPAT    S#PATH
     C                     Z-ADD##PBIN    S#PBIN
     C                     Z-ADD##TBIN    S#TBIN
      *
      *...................................................
      *
      **  Customer Account Balances (complex)
      *...................................................
      *
      **  Increment Bind Levels for Complex Set only
     C                     Z-ADD##TBIN    S#PBIN
     C                     ADD  1         ##BNDC
     C                     Z-ADD##BNDC    S#TBIN
     C                     EXSR G#CACC
     C           1         OCUR ##SRDT
     C                     MOVEL##SPAT    S#PATH
     C                     Z-ADD##PBIN    S#PBIN
     C                     Z-ADD##TBIN    S#TBIN
      *
      **  Footer (simple)
     C                     EXSR G#CFTR
     C           1         OCUR ##SRDT
     C                     MOVEL##SPAT    S#PATH
     C                     Z-ADD##PBIN    S#PBIN
     C                     Z-ADD##TBIN    S#TBIN
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      *................................................................
      *
     C           EXSTMT    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#CHDR                                         *
      * Function    :  Header (simple)                                *
      *                 - Extract RDEs for statement header           *
      *                                                               *
      * Called by   :  G#BALS - Top level group set                   *
      * Calls       :  SRRRDE - Retrieve RDE Information              *
      *                PSHGRS - Write record to CGUXMGPD              *
      *                SRADTA - Format Extract Data                   *
      *                SRODTA - Output Extract Data                   *
      *                AOACCTR0 - Obtain Account Details              *
      *****************************************************************
     C           G#CHDR    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'g_CHDR'  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           2         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\g_CHDR' ##PNAM
     C           S#PATH    CAT  ##PNAM:0  S#PATH
      *
      **  Write record to XML Elements for Explored Group Sets (CGUXMGPD)
     C                     EXSR PSHGRS
      *
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds from passed in values.
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      *................................................................
      *
      **  Retrieve RDE information for RDEs in group set
      **  and store them in ##R array
     C                     MOVEL'g_CHDR'  ##GRPS
     C                     Z-ADD1         ##RDEN
     C                     EXSR SRRRDE
      *
      **  Set up Balane Date
     C                     MOVELCGBALD    ##D,1
      *
      **  Set up Customer Reference & Date of Reference
      **  (only for Certificate of Balance)
     C           WCALP     IFEQ 'CERB'
     C                     MOVELCGCREF    ##D,2
     C                     MOVELCGDTRF    ##D,3
     C                     ENDIF
      *
      **  Set up First/Subsequent/Last Indicator
     C                     MOVE 'FR'      ##FSLI
      *
      **  Accumulate RDE's and associated data and output to
      **  PF/CGUDTAPD.
     C                     EXSR SRADTA
     C                     EXSR SRODTA
      *
      *................................................................
      *
     C           EXSHDR    TAG
      *
      **  Unwind subroutine stack name
     C                     EXSR POPGRS
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  CUST                                           *
      * Function    :  Customer Details (Simple)                      *
      *                - Obtain Customer Details                      *
      *                                                               *
      * Called by   :  G#BALS - Top level group set                   *
      * Calls       :  SRRRDE - Retrieve RDE Information              *
      *                PSHGRS - Write record to CGUXMGPD              *
      *                SRADTA - Format Extract Data                   *
      *                SRODTA - Output Extract Data                   *
      *                SRERR  - Database Error                        *
      *                AOCUSTR0 - Obtain Customer Details             *
      *****************************************************************
     C           CUST      BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'CUST  '  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           3         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\CUST  ' ##PNAM
     C           S#PATH    CAT  ##PNAM:0  S#PATH
      *
      **  Write record to XML Elements for Explored Group Sets (CGUXMGPD)
     C                     EXSR PSHGRS
      *
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds from passed in values.
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      *................................................................
      *
      **  Retrieve RDE information for RDE's in Group Set
     C                     MOVEL'CUST  '  ##GRPS
     C                     Z-ADD1         ##RDEN
     C                     EXSR SRRRDE
      *
      **  Access Customer Details if the Customer has changed.
      **  (LF/SDCUSTL1)
     C                     MOVE *BLANKS   ##KEY1
     C                     MOVE CGCUST    ##KEY1
     C                     CALL 'AOCUSTR0'
     C                     PARM *BLANKS   ##RTCD
     C                     PARM '*KEY   ' ##OPTN
     C                     PARM           ##KEY1 10
     C                     PARM *BLANKS   ##KYST  7
     C           SDCUST    PARM SDCUST    DSSDY
      *
      **  If not found, Database Error.
     C           ##RTCD    IFNE *BLANK
     C                     MOVEL'SDCUSTPD'W0FILE
     C                     MOVELCGCUST    W0KEY            ***************
     C                     Z-ADD4         W0ERNB           * DB ERROR 04 *
     C                     MOVEL'MEM5004' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      **  Set up Customer Number (CUSTOMER rde)
     C                     MOVELBBCUST    ##D,1
      *
      **  Set up Customer Name (CUST_NAME rde)
     C                     MOVELBBCRNM    ##D,2
      *
      **  Set up Customer Address Line 1 (CUST_ADR1 rde)
     C                     MOVELBBCNA1    ##D,3
      *
      **  Set up Customer Address Line 2 (CUST_ADR2 rde)
     C                     MOVELBBCNA2    ##D,4
      *
      **  Set up Customer Address Line 3 (CUST_ADR3 rde)
     C                     MOVELBBCNA3    ##D,5
      *
      **  Set up Customer Address Line 4 (CUST_ADR4 rde)
     C                     MOVELBBCNA4    ##D,6
      *
      ** Customer Town                   (CUST_TOWN rde)
     C                     MOVELBBCRTN    ##D,7
      *
      **  Set up First/Subsequent/Last Indicator
     C                     MOVE 'FR'      ##FSLI
      *
      **  Accumulate RDE's and associated data and output to
      **  PF/CGUDTAPD.
     C                     EXSR SRADTA
     C                     EXSR SRODTA
      *
      *................................................................
      *
     C           EXCUST    TAG
      *
      **  Unwind subroutine stack name
     C                     EXSR POPGRS
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#CACC                                         *
      * Function    :  Customer Account Balances (complex)            *
      *                                                               *
      * Called by   :  G#BALS - Top level group set                   *
      * Calls       :  G#CBAL - Account Balance (simple)              *
      *****************************************************************
     C           G#CACC    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'g_CACC'  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           4         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\g_CACC' ##PNAM
     C           S#PATH    CAT  ##PNAM:0  S#PATH
      *
      **  Write record to XML Elements for Explored Group Sets (CGUXMGPD)
     C                     EXSR PSHGRS
      *
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds from passed in values.
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      **  Initialise the FIRST/LAST/SUBSEQUENT flag
     C                     MOVE 'FR'      ##FSLI
      *
      **  Retrieve customer accounts balance
     C                     MOVE CGCUST    KCNUM
     C                     MOVE *BLANK    KBRCA
     C                     MOVE *ZERO     KACOD
     C                     MOVE *BLANK    KCYCD
     C                     MOVE *ZERO     KACSQ
     C           KACNT     SETLLGLACNTL2
     C                     READ GLACNTL2                 52
     C           *IN52     DOWEQ*OFF
     C           CNUM      ANDEQCGCUST
      *
     C           ##RFMT    IFEQ 'Y'
      *
      **  Output to CGUDTAPD
     C                     EXSR SRODTA
      *
      **  Set FIRST/LAST/SUBSEQUENT flag to SUBSEQUENT run
     C                     MOVE 'SU'      ##FSLI
      *
     C                     ENDIF
      *
      **  Increment BIND LEVELS
     C                     Z-ADD##TBIN    S#PBIN
     C                     ADD  1         ##BNDC
     C                     Z-ADD##BNDC    S#TBIN
      *
      **  Call subroutine for Account Balance (simple)
     C                     EXSR G#CBAL
      *
     C           4         OCUR ##SRDT
     C                     MOVEL##SPAT    S#PATH
     C                     Z-ADD##PBIN    S#PBIN
     C                     Z-ADD##TBIN    S#TBIN
      *
     C                     READ GLACNTL2                 52
     C                     ENDDO
      *
      ** If data has been formatted but not yet written
     C           ##RFMT    IFEQ 'Y'
     C                     MOVE 'LA'      ##FSLI
     C                     EXSR SRODTA
     C                     ENDIF
      *
      *................................................................
      *
     C           EXCACC    TAG
      *
      **  Unwind subroutine stack name
     C                     EXSR POPGRS
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#CBAL                                         *
      * Function    :  Account balance (simple)                       *
      *                                                               *
      * Called by   :  G#CACC - Posting group set 1                   *
      * Calls       :  SRRRDE - Retrieve RDE Information              *
      *                PSHGRS - Write record to CGUXMGPD              *
      *                SRADTA - Format Extract Data                   *
      *                SRODTA - Output Extract Data                   *
      *                SRERR  - Database Error                        *
      *****************************************************************
      *
     C           G#CBAL    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'g_CBAL'  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           5         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\g_CBAL' ##PNAM
     C           S#PATH    CAT  ##PNAM:0  S#PATH
      *
      **  Write record to XML Elements for Explored Group Sets (CGUXMGPD)
     C                     EXSR PSHGRS
      *
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds from passed in values.
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      *................................................................
      *
      **  Retrieve RDE information for RDE's in Group Set
     C                     MOVEL'g_CBAL'  ##GRPS
     C                     Z-ADD1         ##RDEN
     C                     EXSR SRRRDE
      *
      **  Account Name
     C                     MOVELANAM      ##D,1
      *
      **  Midas Account ID
     C                     MOVE CNUM      ##CNUM
     C                     MOVE CCY       ##CCY
     C                     MOVE ACOD      ##ACOD
     C                     MOVE ACSQ      ##ACSQ
     C                     MOVE BRCA      ##BRCA
     C                     MOVELDSACID    ##D,2
      *
      **  Calculate Postings for this account
     C                     Z-ADDCLBL      ##CLBL
     C                     Z-ADD*ZERO     ##TPST
     C                     EXSR G#POST
      *
      **  Account Balance
     C           ##CLBL    SUB  ##TPST    ##CLBL
     C                     MOVEL##CLBL    ##D,3
     C                     MOVELCCY       ##CCY                                              BUG3021
     C                     EXSR SRDCDT                                                       BUG3021
     C                     MOVE A6NBDP    ##D,3                                              BUG3021
      *
     C           WCALP     IFEQ 'CERB'
     C                     ELSE
      *
      **  Account Balance in Base Ccy
     C           CCY       IFEQ BJCYCD
     C                     MOVEL##CLBL    ##D,4
     C                     MOVE ##NBDP    ##D,4                                              BUG3021
      *
      **  Convert Account Balance to Base Ccy
     C                     ELSE
      *
      **  Retrieve A/c Ccy details
     C                     CALL 'AOCURRR0'
     C                     PARM           @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM CCY       @AJCD   3
     C           SDCURR    PARM SDCURR    DSSDY
      *
      **  Database error
     C           ##RTCD    IFNE *BLANK
     C                     MOVEL'AOCURRR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY
     C                     Z-ADD09        W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
     C                     Z-ADDA6SPRT    ZEXCH
     C                     MOVELA6MDIN    ZMD
     C                     MOVELCCY       ZCCYI
     C                     MOVELBJCYCD    ZCCYO
     C                     Z-ADDA6NBDP    ZCDPI
     C                     Z-ADD##NBDP    ZCDPO
     C                     Z-ADD##CLBL    ZAMTCI
     C                     EXSR ZCONV
     C                     MOVELZAMTCO    ##D,4
     C                     MOVE ##NBDP    ##D,4                                              BUG3021
     C                     ENDIF
      *
     C                     ENDIF
      *
      **  Accumulate RDE's and associated data and output to
      **  PF/CGUDTAPD.
     C                     EXSR SRADTA
      *
      *................................................................
      *
     C           EXSOPB    TAG
      *
      **  Unwind subroutine stack name
     C                     EXSR POPGRS
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#POST                                         *
      * Function    :  Calculate Posting                              *
      *                                                               *
      * Called by   :  G#CBAL - Account Balance (simple)              *
      * Calls       :  -                                              *
      *****************************************************************
     C           G#POST    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'G#POST'  @STK,Q
      *
     C                     MOVE CNUM      K#CNUM
     C                     MOVE CCY       K#CCY
     C                     MOVE ACOD      K#ACOD
     C                     MOVE ACSQ      K#ACSQ
     C                     MOVE BRCA      K#BRCA
     C           CGBALD    ADD  1         K#PSTD
     C                     Z-ADD0         K#DRCR
      *
     C           ##ACDK    SETLLAPOSTL4
     C                     READ APOSTL4                  53
     C           *IN53     DOWEQ*OFF
     C           CNUM      ANDEQK#CNUM
     C           CCY       ANDEQK#CCY
     C           ACOD      ANDEQK#ACOD
     C           ACSQ      ANDEQK#ACSQ
     C           BRCA      ANDEQK#BRCA
      *
     C           DRCR      IFEQ 1
     C           ##TPST    SUB  PSTA      ##TPST
     C                     ELSE
     C           ##TPST    ADD  PSTA      ##TPST
     C                     ENDIF
      *
     C                     READ APOSTL4                  53
     C                     ENDDO
      *
     C           EXPOST    TAG
      *
      *................................................................
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  G#CFTR                                         *
      * Function    :  Footer (simple)                                *
      *                                                               *
      * Called by   :  G#BALS - Top level group set                   *
      * Calls       :  -                                              *
      *****************************************************************
     C           G#CFTR    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'g_CFTR'  @STK,Q
      *
      **  Retrieve subroutine specific data.
     C           6         OCUR ##SRDT
      *
      **  Set up Path.
     C                     MOVEL'\g_CFTR' ##PNAM
     C           S#PATH    CAT  ##PNAM:0  S#PATH
     C                     EXSR PSHGRS
     C                     MOVELS#PATH    ##SPAT
      *
      **  Set up Binds from passed in values.
     C                     Z-ADDS#PBIN    ##PBIN
     C                     Z-ADDS#TBIN    ##TBIN
      *
      *................................................................
      *
      **  Retrieve RDE information for RDE's in Group Set
     C                     MOVEL'g_CFTR'  ##GRPS
     C                     Z-ADD1         ##RDEN
     C                     EXSR SRRRDE
     C           WCALP     IFEQ 'CERB'
     C                     MOVELCGCAU1    ##D,1
     C                     MOVELCGCAU2    ##D,2
     C                     MOVELCGCAU3    ##D,3
     C                     MOVELCGCAU4    ##D,4
     C                     ELSE
     C                     MOVELCGBAU1    ##D,1
     C                     MOVELCGBAU2    ##D,2
     C                     MOVELCGBAU3    ##D,3
     C                     MOVELCGBAU4    ##D,4
     C                     MOVELCGAFAX    ##D,5
     C           CGSTUS    IFEQ 'Y'
     C                     MOVEL'Y'       ##D,6
     C                     ELSE
     C                     MOVEL'N'       ##D,6
     C                     ENDIF
     C                     ENDIF
      *
      **  Set up First/Subsequent/Last Indicator
     C                     MOVE 'FR'      ##FSLI
      *
      **  Accumulate RDE's and associated data and output to
      **  PF/CGUDTAPD.
     C                     EXSR SRADTA
     C                     EXSR SRODTA
      *
      *................................................................
      *
     C           EXCFTR    TAG
      *
      **  Unwind subroutine stack name
     C                     EXSR POPGRS
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
      /SPACE 5
      *****************************************************************
      * Subroutine  :  SRGENR                                         *
      * Function    :  Generate reference number                      *
      *                by writing to PF/CGUDCRPD                      *
      *                                                               *
      * Called by   :  SRMAIN - Main Processing                       *
      * Calls       :  CG9010 - Create reference record               *
      *****************************************************************
     C           SRGENR    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRGENR'  @STK,Q
      *
      *................................................................
      *
      **  Generate reference number and check if further processing
      **  required. Set up all available information in the record
      **  format before calling.
      *
     C                     MOVEL'GL'      DRMODI
     C                     MOVE *BLANK    DRMTRN
     C                     MOVE *BLANK    DRBRCA
     C                     MOVE *BLANK    DRORBR
     C                     MOVE *BLANK    DRMACT
     C                     MOVE *BLANK    DRMACT
      *
      ** Set up Print Type/SubType
     C                     MOVELC#STMT    DRPTYP
     C           WCALP     IFEQ 'CERB'
     C                     MOVELC#CERB    DRPSTP
     C                     ELSE
     C                     MOVELC#CONF    DRPSTP
     C                     ENDIF
      *
      ** Set up Auto-Transmission Ind.
     C                     MOVEL'N'       DRATRM
      *
      ** Set up Customer
     C                     MOVE CGCUST    ##CUST
      *
      **  Create Item Reference record
     C                     CALL 'CG9010'
     C                     PARM *BLANK    ##RTCD  7
     C                     PARM '*GEN'    ##MODE 10
     C                     PARM W0CMT     ##CMT   3
     C                     PARM           ##CUST  6
     C                     PARM           ##UDCR
     C                     PARM           ##ITMA  8
      *
      **  Blank return code implies generate correspondence.
      **  CGD1270 => no error, but suppress output for this transaction.
      *
     C           ##RTCD    IFNE *BLANK
      *
     C           ##RTCD    IFEQ 'CGD1270'
     C                     MOVE 'N'       ##PROC
     C                     ELSE
      *
     C                     MOVEL'CG9010  'W0FILE
     C                     MOVEL##RTCD    W0KEY            ***************
     C                     Z-ADD6         W0ERNB           * DB ERROR 06 *
     C                     MOVEL'CGD1286' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
     C                     ELSE
      *
      ** If CCG015 is on, wrap the extraction
      *
      ** Pass reference as printtype:subtype
      *
     C           DRPTYP    CAT  ':':0     COLON  11 P
     C           COLON     CAT  DRPSTP:0  ##REFR    P
     C                     EXSR WRAPRF
     C                     ENDIF
      *
      *................................................................
      *
     C           EXGENR    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  SRRRDE                                         *
      * Function    :  Retrieve RDE information for RDEs in group set *
      *                                                               *
      * Called by   :  simple group set subroutines                   *
      * Calls       :  -                                              *
      *****************************************************************
     C           SRRRDE    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRRRDE'  @STK,Q
      *
      *................................................................
      *
      **  Reset arrays
     C                     MOVEL*BLANK    ##R
     C                     MOVEL*BLANK    ##D
     C                     MOVEL*BLANK    ##S
      *
      **  Get information about next 20 RDEs in group set from compile
      **  time arrays
     C                     Z-ADD0         #1
     C           *IN99     DOUEQ'0'
     C           #1        OREQ 20
      *
     C                     Z-ADD1         #2
     C           ##GRPX    LOKUP##GRP,#2                 99
      *
      **  If found, store the RDE attribute in ##R array
     C           *IN99     IFEQ '1'
     C                     ADD  1         #1
     C                     MOVEL##RDEA,#2 ##R,#1
     C                     ADD  1         ##RDEN
     C                     ENDIF
      *
     C                     ENDDO
      *
      *................................................................
      *
     C           EXRRDE    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  SRADTA                                         *
      * Function    :  Accumulate RDEs and associated data for output *
      *                                                               *
      * Called by   :  simple group set subroutines                   *
      * Calls       :  CG3999 - Format and Pack Data                  *
      *                SRERR  - Database Error                        *
      *****************************************************************
     C           SRADTA    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRADTA'  @STK,Q
      *
      *................................................................
      *
      **  Reformat RDE data
      *
     C                     EXSR SRRFMN
      *
      **  Pack RDEs and associated data into data string
     C                     CLEAR##SDS
      *
     C           CCG015    IFEQ 'Y'
     C                     MOVE '*NEWARR 'W0ACT
     C                     MOVELS#PATH    W0SPAT
     C                     ELSE
     C                     MOVE '*PACK   'W0ACT
     C                     MOVEL*BLANKS   W0SPAT
     C                     ENDIF
      *
     C                     CALL 'CG3999'
     C                     PARM *BLANK    ##RTCD
     C                     PARM           W0ACT
     C                     PARM           ##R
     C                     PARM           ##D
     C                     PARM           ##S
     C                     PARM           W0SPAT 70
     C                     PARM           ##RN
     C                     PARM           ##DN
     C                     PARM           ##FM
      *
      **  Database error
     C           ##RTCD    IFNE *BLANK
      *
     C                     MOVEL'CG3999  'W0FILE           ***************
     C                     MOVEL##RTCD    W0KEY            * DB ERROR 07 *
     C                     Z-ADD7         W0ERNB           ***************
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      ** Write a XML record for RDE
      *
     C                     EXSR WRTRDE
      *
      **  Initialise Write Format Parameter.
     C                     CLEARW0FMT
      *
      **  Set up Control Information.
     C                     Z-ADD##ITEM    DEITEM
     C                     ADD  1         ##OSEQ
     C                     Z-ADD##OSEQ    DEOSEQ
     C                     Z-ADD##PBIN    DEPBIN
     C                     Z-ADD##TBIN    DETBIN
     C                     MOVE ##FSLI    DEFSLI
     C                     MOVE *BLANKS   W0PATH
     C                     MOVELS#PATH    W0PATH
      *
      **  Append Data from pack routine.
     C           W0FMT     CAT  ##SDS:0   W0FMT
      *
      **  Set Flag to show record formatted
     C                     MOVE 'Y'       ##RFMT  1
      *
      *................................................................
      *
     C           EXADTA    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
      /SPACE 5
      *****************************************************************
      * Subroutine  :  SRRFMN                                         *
      * Function    :  Reformat RDE data                              *
      *                                                               *
      * Called by   :  SRADTA                                         *
      * Calls       :                                                 *
      *****************************************************************
     C           SRRFMN    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRRFMN'  @STK,Q
      *
      *................................................................
      *
      ** Loop through RDE's and data
      *
     C                     Z-ADD0         #1
     C           #1        DOUEQ20
      *
     C                     ADD  1         #1
     C                     MOVEL##R,#1    R#DEFN
     C                     MOVEL##D,#1    R#DATA
      *
      ** If data present and RDE is edited
      *
     C           R#DATA    IFNE *BLANK
     C           ##RDEC    ANDNE*BLANK
      *
      * Reformat Amount
     C                     Z-ADD1         #2
     C           *BLANK    LOKUP##NUMA,#2                99*
     C                     Z-ADD20        #3
     C                     Z-ADD0         ##WNUM
      *
     C           #2        DOWGT1
     C           #2        ANDLE20
     C           #3        ANDGT1
     C                     SUB  1         #2
     C                     MOVEL##NUMA,#2 ##W,#3
     C                     SUB  1         #3
     C                     ENDDO
      *
      ** Sign the amount
     C           ##SIGN    IFEQ '-'
     C                     Z-SUB##WNUM    ##NUMB
     C                     ELSE
     C                     Z-ADD##WNUM    ##NUMB
     C                     ENDIF
      *
      * Default Edit Type
     C           ##EDTT    IFEQ *BLANK
     C                     MOVEL##RDET    ##EDTT
     C                     ENDIF
      *
      * Default Decimal Places
     C           ##DCPA    IFEQ *BLANK
     C                     MOVEL##RDED    ##DCPA
     C                     END
      * New RDE data
     C                     MOVELR#DATA    ##D,#1
     C                     ENDIF
      *
     C                     ENDDO
      *
      *................................................................
      *
     C           EXRFMN    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
      /SPACE 5
      *****************************************************************
      * Subroutine  :  SRODTA                                         *
      * Function    :  Output Accumulated data to PF/CGUDTAPD         *
      *                                                               *
      * Called by   :  simple group set subroutines                   *
      * Calls       :  CG9020 - Output Data to CGUDTAPD               *
      *                SRERR  - Database Error                        *
      *****************************************************************
     C           SRODTA    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRODTA'  @STK,Q
      *
      *................................................................
      *
      **  Output PF/CGUDTAPD Record.
      **  ONLY IF CCG015 IS OFF
     C           CCG015    IFEQ 'N'
     C                     CALL 'CG9020'
     C                     PARM *BLANK    ##RTCD
     C                     PARM '*WRITE  'W0ACT
     C                     PARM           W0PATH256
     C                     PARM           W0FMT
     C                     PARM *BLANK    W0TITL  7
     C                     PARM *BLANK    W0ULIN  7
     C                     PARM           W0CMT
      *
      **  Database error
     C           ##RTCD    IFNE *BLANK
      *
     C                     MOVEL'CG9020  'W0FILE           ***************
     C                     MOVEL##RTCD    W0KEY            * DB ERROR 08 *
     C                     Z-ADD8         W0ERNB           ***************
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
     C                     ENDIF
      *
      **  Reset Flag to show formatted data output.
     C                     MOVE *BLANKS   ##RFMT
      *
      *................................................................
      *
     C           EXODTA    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5                                                                               BUG3021
      *****************************************************************                      BUG3021
      * Subroutine  :  SRDCDT                                         *                      BUG3021
      * Function    :  Determine Currency Details                     *                      BUG3021
      *                                                               *                      BUG3021
      * Called by   :                                                 *                      BUG3021
      * Calls       :                                                 *                      BUG3021
      *****************************************************************                      BUG3021
     C           SRDCDT    BEGSR                                                             BUG3021
      *                                                                                      BUG3021
      **  Set up subroutine stack name                                                       BUG3021
     C                     ADD  1         Q                                                  BUG3021
     C                     MOVEL'SRDCDT'  @STK,Q                                             BUG3021
      *                                                                                      BUG3021
      *................................................................                      BUG3021
      *                                                                                      BUG3021
      **  Access array of Currency Details already loaded                                    BUG3021
     C                     Z-ADD1         C       30                                         BUG3021
     C           ##CCY     LOKUP##CY,C                   99                                  BUG3021
      *                                                                                      BUG3021
      **  If no match is found determine the next free space in the                          BUG3021
      **  loaded currency array.                                                             BUG3021
     C           *IN99     IFEQ *OFF                                                         BUG3021
     C                     Z-ADD1         C                                                  BUG3021
     C           *BLANK    LOKUP##CY,C                   99                                  BUG3021
      *                                                                                      BUG3021
      **  If no space is left, set the Currency Data data structure to                       BUG3021
      **  the 101st occurrence so that when the new details are                              BUG3021
      **  retrieved no existing details are overwritten.                                     BUG3021
     C           *IN99     IFEQ *OFF                                                         BUG3021
     C           101       OCUR SDCURR                                                       BUG3021
      *                                                                                      BUG3021
      **  If a space is found, set up the new currency into the array                        BUG3021
      **  and position the Currency Data data structure on the                               BUG3021
      **  occurrence matching the array index.                                               BUG3021
     C                     ELSE                                                              BUG3021
     C                     MOVE ##CCY     ##CY,C                                             BUG3021
     C           C         OCUR SDCURR                                                       BUG3021
     C                     ENDIF                                                             BUG3021
      *                                                                                      BUG3021
      **  Retrieve the currency details.                                                     BUG3021
     C                     CALL 'AOCURRR0'                                                   BUG3021
     C                     PARM *BLANKS   ##RTCD           B:Return Cd                       BUG3021
     C                     PARM '*KEY'    ##OPTN           I:Option                          BUG3021
     C                     PARM ##CCY     ##CCYP  3        I:Currency Code                   BUG3021
     C           SDCURR    PARM *BLANK    DSSDY            O:Format                          BUG3021
      *                                                                                      BUG3021
      **  Database Error                                                                     BUG3021
     C           ##RTCD    IFNE *BLANK                                                       BUG3021
     C                     MOVEL'SDCURRPD'W0FILE                                             BUG3021
     C                     MOVEL##CCY     W0KEY            ***************                   BUG3021
     C                     Z-ADD09        W0ERNB           * DB ERROR 17 *                   BUG3021
     C                     MOVEL'MEM5004' W0MSGD           ***************                   BUG3021
     C                     MOVEL'MIDAS  ' W0MSGF                                             BUG3021
     C                     EXSR SRERR                                                        BUG3021
     C                     ENDIF                                                             BUG3021
      *                                                                                      BUG3021
      **  If the currency has been retrieved earlier, position the                           BUG3021
      **  Currency Data data structure on the relevant occurrence.                           BUG3021
     C                     ELSE                                                              BUG3021
     C           C         OCUR SDCURR                                                       BUG3021
     C                     ENDIF                                                             BUG3021
      *                                                                                      BUG3021
     C           EXDCDT    TAG                                                               BUG3021
      *                                                                                      BUG3021
      **  Unwind subroutine stack name                                                       BUG3021
     C                     MOVEA*BLANKS   @STK,Q                                             BUG3021
     C                     SUB  1         Q                                                  BUG3021
      *                                                                                      BUG3021
     C                     ENDSR                                                             BUG3021
      *****************************************************************                      BUG3021
      /SPACE 5
      *****************************************************************
      * Subroutine  :  SRINIT                                         *
      * Function    :  Initial processing - First Call Only           *
      *                                                               *
      * Called by   :  Mainline                                       *
      * Calls       :  AOBANKR0 - Obtain Bank details                 *
      *                AOGELRR0 - Obtain General Ledger Details       *
      *****************************************************************
     C           SRINIT    BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *................................................................
      *
      **  Open input file
     C           WOPEN     IFNE 'Y'
     C           WCALP     IFEQ 'CERB'
     C                     OPEN CGCERBPD
     C                     ELSE
     C                     OPEN CGCONBPD
     C                     ENDIF
     C                     MOVE 'Y'       WOPEN   1
     C                     ENDIF
      *
      **  Define Fields
      *
     C           *LIKE     DEFN PSTA      ##CLBL
     C           *LIKE     DEFN PSTA      ##TPST
     C           *LIKE     DEFN DEFSLI    ##FSLI
     C                     MOVE *BLANKS   S#PATH256
     C           *LIKE     DEFN DEPBIN    ##BNDC
     C           *LIKE     DEFN DEPBIN    S#PBIN
     C           *LIKE     DEFN DETBIN    S#TBIN
     C           *LIKE     DEFN DEOSEQ    ##OSEQ                          082060
      *
      **  Key list for full Account plus Posting Date
     C           ##ACDK    KLIST
     C                     KFLD           K#BRCA  3
     C**********           KFLD           K#CNUM  60                                          CSD027
     C                     KFLD           K#CNUM  6                                           CSD027
     C                     KFLD           K#CCY   3
     C**********           KFLD           K#ACOD  40                                          CGL029
     C                     KFLD           K#ACOD 100                                          CGL029
     C                     KFLD           K#ACSQ  20
     C                     KFLD           K#PSTD  50
     C                     KFLD           K#DRCR  10
      *
      ** Define key fields to access GLACNTL2
     C           KACNT     KLIST
     C**********           KFLD           KCNUM   60                                          CSD027
     C                     KFLD           KCNUM   6                                           CSD027
     C                     KFLD           KBRCA   3
     C**********           KFLD           KACOD   40                                          CGL029
     C                     KFLD           KACOD  100                                          CGL029
     C                     KFLD           KCYCD   3
     C                     KFLD           KACSQ   20
      *
      **  Key list for full Account
     C           ##ACKY    KLIST
     C                     KFLD           ##BRCA
     C                     KFLD           ##CNUM
     C                     KFLD           ##CCY
     C                     KFLD           ##ACOD
     C                     KFLD           ##ACSQ
      *
      **  Call access program for Bank details
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANKS   ##RTCD  7
     C                     PARM '*FIRST  '##OPTN  7
     C           SDBANK    PARM SDBANK    DSFDY
      *
      **  Database error
     C           ##RTCD    IFNE *BLANK
     C                     MOVEL'AOBANKR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY
     C                     Z-ADD01        W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      ** Access SAR details file to determine if CCG015 is installed.
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*VERIFY' POPTN   7
     C                     PARM 'CCG015'  PSARD   6
     C           SCSARD    PARM SCSARD    DSSDY
      *
      ** Database Error
      *
     C           PRTCD     IFNE *BLANK
     C           PRTCD     ANDNE'*NRF   '
     C                     MOVEL'SCSARDPD'W0FILE
     C                     MOVEL'*CALL'   W0KEY
     C                     Z-ADD02        W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
     C           PRTCD     IFEQ *BLANK
     C                     MOVEL'Y'       CCG015  1
     C                     ELSE
     C                     MOVEL'N'       CCG015
     C                     ENDIF
      *
      **  Retrieve A/c Ccy details
     C                     CALL 'AOCURRR0'
     C                     PARM           @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM BJCYCD    @AJCD
     C           SDCURR    PARM SDCURR    DSSDY
      *
      **  Database error
     C           ##RTCD    IFNE *BLANK
     C                     MOVEL'AOCURRR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY
     C                     Z-ADD09        W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
     C                     Z-ADDA6NBDP    ##NBDP  10
      *
      **  Copyright statement
     C                     MOVEA##CPY     ##MIS  80
      *
      *................................................................
      *
     C           EXINIT    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/SPACE 5
      *****************************************************************
      * Subroutine  :  SRINZ                                          *
      * Function    :  Initialise Fields on Program Invocation        *
      *                                                               *
      * Called by   :  Mainline                                       *
      * Calls       :  None                                           *
      *****************************************************************
     C           SRINZ     BEGSR
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRINZ '  @STK,Q
      *
      *................................................................
      *
      **  Initialise work fields
     C                     Z-ADD*ZEROS    #1      60
     C                     Z-ADD*ZEROS    #2      60
     C                     Z-ADD*ZEROS    #3      60
     C                     MOVE *BLANKS   S#PATH
      *
     C                     Z-ADD*ZEROS    ##OSEQ
      *
      **  Initialise Binds.
     C                     Z-ADD1         S#PBIN
     C                     Z-ADD1         S#TBIN
     C                     Z-ADD1         ##BNDC
      *
      **  Initialise XML increment
     C                     EXSR INIXML
      *
     C           EXINZ     TAG
      *
      *................................................................
      *
      **  Unwind subroutine stack name
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
      *****************************************************************
     C/COPY ZSRSRC,ZCONVZ1
     C/COPY WNCPYSRC,CG4560C022
     C/SPACE 5
     C/COPY CGCPYSRC,SRERRPSSR
     C/SPACE 5
     C/COPY CGCPYSRC,SRERRC
     O/SPACE 5
     O/COPY WNCPYSRC,CG4560O001
     O/SPACE 5
     O/COPY CGCPYSRC,CGNWEX
      *****************************************************************
** ##GRP/##RDEA
g_CHDR0001 BAL_DATE   Date
g_CHDR0002 CUST_REF
g_CHDR0003 REF_DATE   Date
BRANCH0001 BRANCH
BRANCH0002 BRANCH NAM
ACCNT 0001 ACCOUNT
ACCNT 0002 RETL_ACNO
ACCNT 0003 ACC_NAME
ACCNT 0004 ACC_TYPE
ACCNT 0005 BAL_EURO
ACCNT 0006 IBAN
CUST  0001 CUSTOMER
CUST  0002 CUST_NAME
CUST  0003 CUST_ADR1
CUST  0004 CUST_ADR2
CUST  0005 CUST_ADR3
CUST  0006 CUST_ADR4
CUST  0007 CUST_TOWN
g_CBAL0001 ACC_NAME
g_CBAL0002 ACCOUNT
g_CBAL0003 STMT_ACBL  AmountL
g_CBAL0004 STMT_BBAL  AmountL
g_CFTR0001 CUST_AUDT1
g_CFTR0002 CUST_AUDT2
g_CFTR0003 CUST_AUDT3
g_CFTR0004 CUST_AUDT4
CCY   0003 PREC_METIN                                                     086780
g_SOPB0001 STMT_BFBAL AmountL
g_SOPB0002 STMT_BFCBL AmountL
g_SOPB0003 EURO_BFBAL AmountL                                             CEU013
g_SOPB0004 EURO_BFCBL AmountL                                             CEU013
g_SPS30001 POST_DATE  Date
g_SPS30002 VALUE DATE Date
g_SPS30003 CHQ_NUMBER
g_SPS30004 POST_NARR
g_SPS30005 POST_AMT   AmountL
g_SPS30006 POST_GETP
g_SPS30007 POST_MODUL
g_SPS30008 POST_TNUM
g_SPS30009 POST_BCHN
g_SPS30010 POST_BITEM
g_SPS30011 STMT_ACBL  AmountL
g_SPS30012 ORIG_CCY                                                       CEU013
g_SPS30013 ORIG_AMNT  AmountL                                             CEU013
g_SPS30014 POST_EQCY  AmountL                                             CEU014
g_SPS30015 EQUIV_CCY                                                      CEU014
g_SPS30016 EQUIV_CCYD                                                     CEU014
g_SCLR0001 HDR_CRCLR  AmountL
g_SCLR0002 HDR_DRCLR  AmountL
g_SCLR0003 START_CLR  AmountL
g_SCLR0004 END_CLR    AmountL
g_SCLR0005 TOT_CRCLR  AmountL
g_SCLR0006 TOT_DRCLR  AmountL
g_SCLB0001 STMT_CFBAL AmountL
g_SCLB0002 STMT_CFCBL AmountL
g_SCLB0003 EURO_CFBAL AmountL                                             CEU013
g_SCLB0004 EURO_CFCBL AmountL                                             CEU013
g_SBRK0001 TOT_CRENT  AmountL
g_SBRK0002 TOT_CRVAL  AmountL
g_SBRK0003 TOT_DRENT  AmountL
g_SBRK0004 TOT_DRVAL  AmountL
g_SRC20001 POST_DATE  Date
g_SRC20002 VALUE DATE Date
g_SRC20003 POST_RATE  Rate  L7
g_SRC20004 DR/CR
g_SCC20001 POST_DATE  Date
g_SCC20002 VALUE DATE Date
g_SCC20003 POST_RATE  Rate  L7
g_SCC20004 DR/CR
     X/COPY ZSRSRC,ZPOWERZ2
** ##CPY  **      OBJECT COPYRIGHT
(c) Finastra International Limited 2003
