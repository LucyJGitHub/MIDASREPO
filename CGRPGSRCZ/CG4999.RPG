     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Source generator for extract programs')
/*OVRF*: OVRDBF (#SRCMBRI       ) (CGCPYSRC      )                  : *
/****F*:*CRTSRCPF QTEMP/#SRCMBRO************************************:**   CPK008
/*OVRF*: CRTSRCPF FILE(QTEMP/#SRCMBRO) RCDLEN(112)                  : *   CPK008
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                          *
     F*                                                               *
     F*  CG4999 - Source Generator for extract programs               *
     F*                                                               *
     F*  Function:  This program xxxxxxxxxxxxxxxxxxxxxxxxxxxx         *
     F*  (phase(s))                                                   *
     F*                                                               *
     F*  Called By: mmCnnnn - (program name)                          *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CPK008             Date 09Jun97               *
      *                 S01522             Date 22Nov94               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
     F*  CPK008 - DBA R2 packaging:                                   *
     F*           - Increase length of #SRCMBRI file to 112 and amend *
     F*             associated fields to match new file length.       *
     F*  S01522 - User Defined Correspondence                         *
     F*                                                               *
     F*****************************************************************
     FCGGSETL1IF  E           K        DISK
     F                                              KINFSR SRFILE
     FCGGSASL1IF  E           K        DISK
     F                                              KINFSR SRFILE
     FCGRASCL1IF  E           K        DISK
     F                                              KINFSR SRFILE
     FCGRDTAL1IF  E           K        DISK
     F                                              KINFSR SRFILE
     F#SRCMBRIIF  E                    DISK                           UC
     F                                              KINFSR SRFILE
     F            CGCPYSRC                          KRENAMEINPFMT
     F#SRCMBROO   E                    DISK                           UC
     F                                              KINFSR SRFILE
     F            #SRCMBRO                          KRENAMEOUTFMT
     E/EJECT
     E*
     E*  Array containing Copyright statement
     E*
     E                    CPY@    1   1 80
     E                    MBR@    1  18 11
     E**********          #D         80  1               CPK008
     E                    #D        100  1               CPK008
     E/COPY CGCPYSRC,SRERRE
     E*
     E*  Copysource for error processing
     E*
     I/COPY CGCPYSRC,SRERRI
     I*
     I*  End of Program Error Processing copysource
     I*
     IRUNDTA    E DSRUNDAT
     I*
     I* Get Rundate - Rundate  *
     I*
     IMMODDS    E DSSDMMODPD
     I*
     I* Modules Data Structure *
     I*
     IDSFDY     E DSDSFDY                                                 S01194
     I*                                                                   S01194
     I* Data Structures used by Access Programs                           S01194
     I*                                                                   S01194
      *
     I            DS
     I                                        1   40Z1
     I                                        5   80Z2
     I                                        9  120Z3
     I                                       13  160Z4
     I                                       17  200Z5
      *
     I            DS
     I                                        1   40L1
     I                                        5   80L2
     I                                        9  120L3
     I                                       13  160L4
     I                                       17  200L5
      *
     I              'ABCDEFGHIJKLMNOPQRST-C         U@
     I              'UVWXYZ@'
      *
     I              'abcdefghijklmnopqrst-C         L@
     I              'uvwxyz_'
      *
     I              'GEXSTACK  '          C         WKDQ1
     I              'GEXSTORE  '          C         WKDQ2
     I              'GEXFSPEC  '          C         WKDQ3
     I              'GEXEXSEQ  '          C         WKDQ4
     I              '*LIBL'               C         LIBL
     I              'CGD1811'             C         ERRMSG
      *
     I              'SYSTEM'              C         SYSGRS
      *
     I            DS
     I I            6                     P   1   20WKDL1
     I I            1                     P   3   40WKDL2
     I I            6                     P   5   60WKDK2
     I I            10                    P   7   80WKDL3
     I I            10                    P   9  100WKDK3
     I I            6                     P  11  120WKDL4
     I I            5                     P  13  140WKDK4
      *
     IST1DS       DS
     I                                        1   6 ST1DS1
      *
     IST2DS       DS
     I                                        1   6 ST2DS1
      *
     IST3DS       DS
     I                                        1  10 ST3DS1
      *
     IST4DS       DS
     I                                        1   1 ST4DS1
     I                                        2   2 ST4DS2
     I                                        3   5 ST4DS3
      *
     I#LINE       DS
     I I            1                         1   62#RCSEQ
     I                                        7  120#RCDAT
     I**********                             13  92 #RCDTA                CPK008
     I**********                             13  92 #D                    CPK008
     I                                       13 112 #RCDTA                CPK008
     I                                       13 112 #D                    CPK008
     I I            'C'                      18  18 #CSPEC
      *
     ILINE        DS
     I                                        1   62SRCSEQ
     I                                        7  120SRCDAT
     I**********                             13  92 SRCDTA                CPK008
     I                                       13 112 SRCDTA                CPK008
      *
     IMBRDS       DS
     I                                        1  10 #MBR
     I                                       11  11 #SEQ
      *
     I              'OVRDBF FILE(#SRCMBRI-C         CMDS11
     I              ') TOFILE(CGCPYSRC)  -
     I              'MBR('
     I              ')'                   C         CMDS12
      *
     I I            'CGUSRMSG'                1  10 ZADFMF
      *
     I              'CLEAR'               C         SRCL00
     I              'EXSR'                C         SRCL01
     I              '0         R1      30'C         SRCL02
     I              'ADD  1         R1'   C         SRCL03
     I              'Z-ADD'               C         SRCL04
     I              'MOVEL'               C         SRCL05
     I              'MOVE'                C         SRCL06
     I              'SUBST'               C         SRCL07
     I              'CAT'                 C         SRCL08
     I              'R#DATA'              C         SRCL09
     I              '##DATA'              C         SRCL10
     I              '##DCPA'              C         SRCL11
     I              '##R,R1'              C         SRCL12
     I              '##D,R1'              C         SRCL13
     I              'R#DEFN'              C         SRCL14
     I              '#@RDE'               C         SRCL15
     I              '##RDE'               C         SRCL16
     I              '##RDEC'              C         SRCL17
     I              '##RDET'              C         SRCL18
     I              '##RDED'              C         SRCL19
     I              ''''                  C         SRCL97
     I              'EXSR SRADTA'         C         SRCL98
     I              'EXSR SRODTA'         C         SRCL99
     I              'F        IF  E      -C         SRCLFS
     I              '     K        DISK  -
     I              '       KINFSR SRFILE'
      *
      *****************************************************************
      *                 M A I N L I N E
      *****************************************************************
      *
      *  Set up subroutine stack name
      *X
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           ST1DS1    PARM           P0GRP   6
      *
     C           STINZ1    PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
      *
     C           STINZ2    PLIST
     C                     PARM WKDQ2     QNAME  10
     C                     PARM LIBL      LIB    10
      *
     C           STINZ3    PLIST
     C                     PARM WKDQ3     QNAME  10
     C                     PARM LIBL      LIB    10
      *
     C           STINZ4    PLIST
     C                     PARM WKDQ4     QNAME  10
     C                     PARM LIBL      LIB    10
      *
     C           STPUSH    PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM WKDL1     FLDLEN  50
     C                     PARM ST1DS     STACK
      *
     C           STPOP     PLIST
     C                     PARM WKDQ1     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM           FLDLEN  50
     C           ST1DS     PARM           STACK
     C                     PARM 0         WAIT    50
      *
     C           *LIKE     DEFN ST1DS     STACK
      *
     C           STSTOR    PLIST
     C                     PARM WKDQ2     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM WKDL2     FLDLEN  50
     C                     PARM           DUMMY1  1
     C                     PARM WKDK2     KEYLEN  30
     C                     PARM ST2DS     KEYVAL
      *
     C           STPULL    PLIST
     C                     PARM WKDQ2     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM           FLDLEN  50
     C                     PARM           DUMMY1  1
     C                     PARM 0         WAIT    50
     C                     PARM 'EQ'      KEYORD  2
     C                     PARM WKDK2     KEYLEN  30
     C                     PARM ST2DS     KEYVAL
     C                     PARM 0         SNDLEN  30
     C                     PARM           SNDR   44
      *
     C           *LIKE     DEFN ST2DS     KEYVAL
      *
     C           STSTO3    PLIST
     C                     PARM WKDQ3     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM WKDL3     FLDLEN  50
     C                     PARM ST3DS     DTAVA3
     C                     PARM WKDK3     KEYLEN  30
     C                     PARM ST3DS     KEYVA3
      *
     C           STPUL3    PLIST
     C                     PARM WKDQ3     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM           FLDLEN  50
     C                     PARM           DTAVA3
     C                     PARM 0         WAIT    50
     C                     PARM 'EQ'      KEYORD  2
     C                     PARM WKDK3     KEYLEN  30
     C                     PARM ST3DS     KEYVA3
     C                     PARM 0         SNDLEN  30
     C                     PARM           SNDR   44
      *
     C           STRCV3    PLIST
     C                     PARM WKDQ3     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM           FLDLEN  50
     C           ST3DS     PARM           DTAVA3
     C                     PARM 0         WAIT    50
     C                     PARM 'GE'      KEYORD  2
     C                     PARM WKDK3     KEYLEN  30
     C                     PARM *BLANKS   KEYVA3
     C                     PARM 0         SNDLEN  30
     C                     PARM           SNDR   44
      *
     C           *LIKE     DEFN ST3DS     DTAVA3
     C           *LIKE     DEFN ST3DS     KEYVA3
      *
     C           STSTO4    PLIST
     C                     PARM WKDQ4     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM WKDL4     FLDLEN  50
     C                     PARM GALGST    DTAVA4
     C                     PARM WKDK4     KEYLEN  30
     C                     PARM ST4DS     KEYVA4
      *
     C           STPUL4    PLIST
     C                     PARM WKDQ4     QNAME  10
     C                     PARM LIBL      LIB    10
     C                     PARM           FLDLEN  50
     C           GALGST    PARM           DTAVA4
     C                     PARM 0         WAIT    50
     C                     PARM 'GE'      KEYORD  2
     C                     PARM WKDK4     KEYLEN  30
     C                     PARM *BLANKS   KEYVA4
     C                     PARM 0         SNDLEN  30
     C                     PARM           SNDR   44
      *
     C           *LIKE     DEFN GALGST    DTAVA4
     C           *LIKE     DEFN ST4DS     KEYVA4
      *
     C           KEYL01    KLIST
     C                     KFLD           GSGRPS
      *
     C           KEYL02    KLIST
     C                     KFLD           GAFGST
      *
     C           KEYL03    KLIST
     C                     KFLD           RAGRPS
      *
     C           KEYL04    KLIST
     C                     KFLD           RDRDE
      *
      *  Reset return code
      *
     C                     MOVEL*BLANKS   P0RTN
      *  Initialise line date
     C                     RESET#LINE
     C                     Z-ADD##EDT     #RCDAT
      *  Clear stack
     C                     CALL 'QCLRDTAQ'STINZ1
      *  Clear stack
     C                     CALL 'QCLRDTAQ'STINZ2
      *  Clear stack
     C                     CALL 'QCLRDTAQ'STINZ3
      *  Clear stack
     C                     CALL 'QCLRDTAQ'STINZ4
      *
     C                     OPEN #SRCMBRO
      *
      *  Generate Header source lines
      *
     C                     MOVE 'H'       @SEQ
     C                     EXSR SR#MBR
      *  Increment for F specs
     C           *LIKE     DEFN #RCSEQ    @RCSEQ
     C                     Z-ADD#RCSEQ    @RCSEQ
     C                     ADD  256       #RCSEQ
      *
      *  Generate E & I spec source lines
      *
     C                     MOVE 'C'       @SEQ
     C           L@:U@     XLATEST1DS1    U#GRPS
     C                     EXSR SR#MBR
      *
      *  DOU Stack Pull End
      *
     C           FLDLEN    DOUEQ0
      *
      *  First check if subroutine already generated
      *
     C                     MOVE ST1DS1    ST2DS1
     C                     CALL 'QRCVDTAQ'STPULL
      *
     C           FLDLEN    IFEQ 0
      *
     C                     MOVE ST1DS1    GSGRPS
     C           KEYL01    CHAIN@GSETL1              01
      *
     C           *LIKE     DEFN GSGRPS    U#GRPS
     C           L@:U@     XLATEGSGRPS    U#GRPS
      *
     C                     MOVE 'B'       @SEQ
     C                     EXSR SR#MBR
      *
     C           GSCSET    IFNE 'T'
     C           GSMREC    ANDEQ'Y'
     C                     MOVE 'R'       @SEQ
     C                     EXSR SR#MBR
     C                     END
      *
     C                     MOVE GSGRPS    GAFGST
     C           KEYL02    CHAIN@GSASL1              02
      *
     C           *IN02     IFEQ *ON
     C                     EXSR SR#RDE
     C                     END
      *
     C           *IN02     DOWEQ*OFF
      *
     C           GALGST    IFNE SYSGRS
      *
     C                     MOVE GALGST    ST1DS1
     C                     CALL 'QSNDDTAQ'STPUSH
      *
     C                     MOVE GALGST    GSGRPS
     C           KEYL01    CHAIN@GSETL1              01
      *
     C                     MOVE GSMREC    ST4DS1
     C                     MOVE GSCSET    ST4DS2
     C                     MOVE GASEQA    ST4DS3
     C                     CALL 'QSNDDTAQ'STSTO4
      *
     C                     END
      *
     C           KEYL02    READE@GSASL1                  02
     C                     END
      *
     C                     CALL 'QRCVDTAQ'STPUL4
      *
     C           FLDLEN    DOWNE0
      *
     C                     EXSR SREXSR
      *
     C                     CALL 'QRCVDTAQ'STPUL4
     C                     END
      *
     C                     MOVE 'E'       @SEQ
     C                     EXSR SR#MBR
      *
     C                     END
      *
     C                     CALL 'QSNDDTAQ'STSTOR
     C                     CALL 'QRCVDTAQ'STPOP
      *
     C                     END
      *
      *  Generate Trailer source lines
      *
     C                     MOVE 'F'       @SEQ
     C                     EXSR SR#MBR
      *
      *  Generate F Specs at end with correct sequence
      *
     C                     Z-ADD@RCSEQ    #RCSEQ
      *
     C                     EXSR SRFLIN
      *
     C                     CLOSE#SRCMBRO
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *  Return to calling program
      *
     C                     RETRN
     C/EJECT
     C           *INZSR    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'*INZSR'  @STK,Q
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      ACT@   80
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*
     C* Get modules information
     C*
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Put DTAQ into QTEMP for use as stack
      *
     C                     CALL 'CGC3002'              9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM WKDQ1     P@DTAQ 10
     C                     PARM WKDL1     P@DTAL  30
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CGC3002' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD2         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'CGD1741' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Put DTAQ into QTEMP for use as store
      *
     C                     CALL 'CGC3005'              9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM WKDQ2     P@DTAQ 10
     C                     PARM WKDL2     P@DTAL  30
     C                     PARM WKDK2     P@KEYL  30
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CGC3005' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD3         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'CGD1741' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Put DTAQ into QTEMP for use as store
      *
     C                     CALL 'CGC3005'              9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM WKDQ3     P@DTAQ 10
     C                     PARM WKDL3     P@DTAL  30
     C                     PARM WKDK3     P@KEYL  30
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CGC3005' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD4         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'CGD1741' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     CALL 'CGC3005'              9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM WKDQ4     P@DTAQ 10
     C                     PARM WKDL4     P@DTAL  30
     C                     PARM WKDK4     P@KEYL  30
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CGC3005' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD5         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'CGD1741' W0MSGD           ***************
     C                     MOVEL'CGUSRMSG'W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     CLEARGSGRPS
     C                     MOVE '#'       GSGRPS
     C           '#'       SCAN GSGRPS    P1      30
      *
     C                     CLEARGSDESC
     C                     MOVE '#'       GSDESC
     C           '#'       SCAN GSDESC    P2      30
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SR#MBR   : Generate Header Source Lines                      *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 010                                               *
      *                                                               *
      *****************************************************************
     CSR         SR#MBR    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SR#MBR'  @STK,Q
      *
     C                     DO   18        L1
      *
     C                     MOVE MBR@,L1   MBRDS
      *
     C           #SEQ      IFEQ @SEQ
     C                     EXSR SRLMBR
     C                     END
      *
     C                     END
      *
     C           *LIKE     DEFN #SEQ      @SEQ
     C                     CLEAR@SEQ
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRLMBR   : Generate Source lines from member                 *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 020                                               *
      *                                                               *
      *****************************************************************
     CSR         SRLMBR    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRLMBR'  @STK,Q
      *
     C                     MOVELCMDS11    CMDSTR    P
     C           CMDSTR    CAT  #MBR:0    CMDSTR    P
     C           CMDSTR    CAT  CMDS12:0  CMDSTR    P
      *
     C                     CALL 'QCMDEXC'
     C                     PARM           CMDSTR256
     C                     PARM 256       CMDLEN 155
      *
     C                     OPEN #SRCMBRI
     C                     READ #SRCMBRI                 05
      *
     C           *IN05     DOWEQ*OFF
      *
     C                     MOVE SRCDTA    #RCDTA
      *
     C                     SELEC
     C           @SEQ      WHNE 'F'
      *  Scan for U#GRPS,L#GRPS & #SDESC for substitution
     C           'U#GRPS'  SCAN #RCDTA    Z1             30
      *
     C           *IN30     IFEQ *ON
      *
     C                     MOVEAU#GRPS    #D,Z1
      *
     C                     END
      *
     C           'L#GRPS'  SCAN #RCDTA    Z1             30
      *
     C           *IN30     IFEQ *ON
      *
     C                     MOVEAGSGRPS    #D,Z1
      *
     C                     END
      *
     C           '#SDESC'  SCAN #RCDTA    Z1             30
      *
     C           *IN30     IFEQ *ON
      *
     C                     MOVEAGSDESC    #D,Z1
      *
     C                     END
      *
     C                     ENDSL
      *
     C                     EXSR SRLINE
      *
     C                     READ #SRCMBRI                 05
     C                     END
      *
     C                     CLOSE#SRCMBRI
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRLINE   : Generate Source Line                              *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 030                                               *
      *                                                               *
      *****************************************************************
     CSR         SRLINE    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRLINE'  @STK,Q
      *
     C                     ADD  1         #RCSEQ
     C                     MOVE #LINE     LINE
     C                     WRITEOUTFMT
     C                     RESET#RCDTA
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SR#RDE   : Generate Source for non repeating GSs             *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 040                                               *
      *                                                               *
      *****************************************************************
     CSR         SR#RDE    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SR#RDE'  @STK,Q
      *
     C                     MOVE ST1DS1    RAGRPS
     C                     Z-ADD1         #C      30
      *
     C           KEYL03    CHAIN@RASCL1              03
      *
     C           *IN03     DOWEQ*OFF
      *
     C           #C        IFEQ 21
      *
     C                     MOVEA'*'       #D,7
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL98    #D,28
     C                     EXSR SRLINE
      *
     C                     Z-ADD1         #C      30
     C                     END
      *
     C           #C        IFEQ 1
     C                     MOVEASRCL04    #D,28
     C                     MOVEASRCL02    #D,33
     C                     EXSR SRLINE
     C                     END
      *
     C                     MOVE RARDE     RDRDE
     C           KEYL04    CHAIN@RDTAL1              04
      *
     C                     EXSR SRFGEN
      *
     C                     MOVEA'*'       #D,7
     C                     MOVEARDDESC    #D,9
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL03    #D,28
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL00    #D,28
     C                     MOVEASRCL09    #D,33
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL00    #D,28
     C                     MOVEASRCL14    #D,33
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL00    #D,28
     C                     MOVEASRCL15    #D,33
     C                     EXSR SRLINE
      *
     C           2         SUBSTRDRDE:9   WRK2A   2
     C           8         SUBSTRDRDE:1   WRK8A   8
      *
     C           WRK2A     IFNE *BLANKS
      *
     C                     MOVEASRCL06    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEAWRK2A     #D,34
     C                     MOVEASRCL97    #D,36
     C                     MOVEASRCL15    #D,43
     C                     EXSR SRLINE
      *
     C                     END
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEAWRK8A     #D,34
     C                     MOVEASRCL97    #D,42
     C                     MOVEASRCL15    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL16    #D,18
     C                     MOVEASRCL08    #D,28
     C                     MOVEASRCL15    #D,33
     C           #RCDTA    CAT  ':1':0    #RCDTA
     C                     MOVEASRCL16    #D,43
     C                     EXSR SRLINE
      *
     C           RDELYP    IFEQ '*DEC'
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEARDDINT    #D,33
     C                     MOVEASRCL10    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C           6         SUBSTRDFOPT    WRK6A   6
     C                     MOVEASRCL97    #D,33
     C                     MOVEAWRK6A     #D,34
     C                     MOVEASRCL97    #D,40
     C                     MOVEASRCL17    #D,43
     C                     EXSR SRLINE
      *
     C                     SELEC
     C           WRK6A     WHEQ 'Amount'
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEA'L'       #D,34
     C                     MOVEASRCL97    #D,35
     C                     MOVEASRCL18    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEA'##CCY'   #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL01    #D,28
     C                     MOVEA'SRDCDT'  #D,33
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEA'A6NBDP'  #D,33
     C                     MOVEASRCL11    #D,43
     C                     EXSR SRLINE
      *
     C           WRK6A     WHEQ 'Rate  '
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEA'L'       #D,34
     C                     MOVEASRCL97    #D,35
     C                     MOVEASRCL18    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEA'7'       #D,34
     C                     MOVEASRCL97    #D,35
     C                     MOVEASRCL11    #D,43
     C                     EXSR SRLINE
      *
     C           WRK6A     WHEQ 'Xrate '
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEA'L'       #D,34
     C                     MOVEASRCL97    #D,35
     C                     MOVEASRCL18    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL97    #D,33
     C                     MOVEA'8'       #D,34
     C                     MOVEASRCL97    #D,35
     C                     MOVEASRCL11    #D,43
     C                     EXSR SRLINE
      *
     C                     ENDSL
      *
     C                     ELSE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEARDDINT    #D,33
     C                     MOVEASRCL09    #D,43
     C                     EXSR SRLINE
      *
     C                     END
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL09    #D,33
     C                     MOVEASRCL13    #D,43
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL05    #D,28
     C                     MOVEASRCL14    #D,33
     C                     MOVEASRCL12    #D,43
     C                     EXSR SRLINE
      *
     C                     ADD  1         #C
      *
     C           KEYL03    READE@RASCL1                  03
     C                     END
      *
     C                     MOVEA'*'       #D,7
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL98    #D,28
     C                     EXSR SRLINE
      *
     C                     MOVEASRCL99    #D,28
     C                     EXSR SRLINE
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SREXSR   : Generate Source line for EXSR GSname              *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 050                                               *
      *                                                               *
      *****************************************************************
     CSR         SREXSR    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SREXSR'  @STK,Q
      *
     C           L@:U@     XLATEGALGST    U#GRPS
      *
     C                     MOVEASRCL01    #D,28
      *
     C                     Z-ADD33        Z1
      *
     C                     DO   P1        Z2
     C           1         SUBSTU#GRPS:Z2 #D,Z1
     C                     ADD  1         Z1
     C                     END
      *
     C                     EXSR SRLINE
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRFGEN   : Generate F spec entries in DTAQ                   *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 060                                               *
      *                                                               *
      *****************************************************************
     CSR         SRFGEN    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRFGEN'  @STK,Q
      *
     C           RDDSRC    IFNE *BLANKS
      *
     C                     MOVE RDDSRC    ST3DS1
      *
     C                     CALL 'QRCVDTAQ'STPUL3
     C                     CALL 'QSNDDTAQ'STSTO3
      *
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRFLIN   : Generate F spec line from RDE data                *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *  OFFSET   : 070                                               *
      *                                                               *
      *****************************************************************
     CSR         SRFLIN    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRFLIN'  @STK,Q
      *
     C                     CALL 'QRCVDTAQ'STRCV3
      *
     C           FLDLEN    DOWNE0
      *
     C                     MOVEASRCLFS    #D,6
     C           8         SUBSTST3DS1    WRK8A
     C                     MOVEAWRK8A     #D,7
      *
     C                     EXSR SRLINE
      *
     C                     CALL 'QRCVDTAQ'STRCV3
      *
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
     C/SPACE 5
     C/COPY CGCPYSRC,SRERRPSSR
     C/SPACE 5
     C/COPY CGCPYSRC,SRERRC
**  CPY@
(c) Finastra International Limited 2001
**  MBR@
CG4HDR    H
CG4ESS    C
CG4ISS    C
CG4MAIN   C
CG4BEGS   B
CG4BEGR   R
CG4ENDS   E
CG4INZ    F
CG4INIT   F
CG4ADTA   F
CG4ODTA   F
CG4BIND   F
CG4PATH   F
CG4RFMN   F
CG4DCDT   F
CG4GENR   F
CG4COPY   F
CG4#ARR   F
