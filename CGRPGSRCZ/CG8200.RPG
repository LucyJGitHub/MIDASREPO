     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Work with a plane.')
/*OVRF*: OVRDBF (File in program) (file on system)                  : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                          *
     F*                                                               *
     F*  CG8200  - - - - Display a plane for update -- elements.      *
     F*                                                               *
     F*  Function:   - - This program displays a screen which lists   *
     F*                   elements for a plane. This screen is a      *
     F*                   window over CG8900DF which displays the     *
     F*                   plane. Program CG8900 is called by this     *
     F*                   program to generate the plane display.      *
     F*                                                               *
     F*  Called By: mmCnnnn - (program name)                          *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSC022             Date 24Feb04               *
      *  Prev Amend No. 222373             Date 31Oct03               *
      * Midas Release 4.01 -------------------------------------------*
      *                 190022             Date 15Jan99               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 126764             Date 26Feb98               *
      *                 136781             DATE 02Oct98               *
     F*                 100811             DATE 29AUG96               *
     F*                 096538             DATE 29NOV95               *
     F*                 095463             DATE 24OCT95               *
     F*                 091826             DATE 24AUG95               *
     F*                 088814             DATE 08JUM95               *
     F*                 088435             DATE 31MAY95               *
     F*                 085288             DATE 24MAR95               *
     F*                 084604             DATE 13MAR95               *
     F*                 084478             DATE 09MAR95               *
     F*                 084255             DATE 06MAR95               *
     F*                 084287             DATE 06MAR95               *
     F*                 084246             DATE 03MAR95               *
     F*                 083845             DATE 27FEB95               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  222373 - Correct parameters on program calls                 *
      *  190022 - Recompiled due to increased size of OVRPRTF string  *
      *           in PF/CGPRTPPD and PF/CGPGENPD files.               *
     F*  126764 - Make sure Literal's length is inside the limits     *
     F*           of the plane. Idem if Literal is amended, otherwise *
     F*           it dumps in CG3001.                                 *
     F*  136781 - No correct processing for SRMARK as the subfile     *
     F*           loaded is for plane not for field position in report*
     F*           If you have only 1 top plane and 1 secondary plane  *
     F*           RRN5 will be 4, if you try to access the subfile    *
     F*           #SFLRCD5 with an higher RRN (due to the position    *
     F*           LRSROW higher than 5, the UPDAT will fail.          *
     F*           The procedure do not fail generally because         *
     F*           they are enough plane to fill the screen            *
     F*  100811 - Identification of RDE path                          *
     F*  096538 - Physically delete fields                            *
     F*  095463 - Work with 132 wide screen                           *
     F*  091826 - Miscellaneous errors in print generator.            *
     F*  088814 - Change format for conditions and format options     *
     F*           existing.                                           *
     F*  088435 - If field length amended, the old length from the    *
     F*           RDE definition was erroneously being used in        *
     F*           boundary comparisons.                               *
     F*  085288 - Clear selection box before processing;              *
     F*            allow warnings for changed positions               *
     F*  084604 - Replace numeric fields by character fields          *
     F*  084478 - Provide centralised commitment control              *
     F*  084255 - Allow sequence by field name or row and column;     *
     F*            allow direct entry of field positions              *
     F*  084287 - Allow up to 2000 fields in the list                 *
     F*  084246 - Clear conditions values from copied fields          *
     F*  083845 - Add additional text to subfile indicating format    *
     F*            and condition status                               *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*  03 -- F3 (Exit).                                             *
     F*  05 -- F5 (Confirm updates).                                  *
     F*  06 -- F6 (Display list of elements or Add an element).       *
     F*  10 -- F10 (Confirm delete).                                  *
     F*  12 -- F12 (Previous / cancel).                               *
     F*  14 -- F14 (Add a literal).                                   *
     F*  15 -- (Used by CG8900DF).                                    *
     F*  16 -- (Used by CG8900DF).                                    *
     F*  19 -- (Used by CG8900DF).                                    *
     F*  20 -- (Used by CG8900DF).                                    *
     F*  22 -- F22 (Resequence the field list).                       *   084255
     F*  24 -- F24 (Display the alternative list of function keys).   *   084255
     F*  25 -- Display SFLEND in message subfile.                     *
     F*  29 -- Valid command key.                                     *
     F*  31 -- Invalid selection value.                               *
     F*  32 -- Invalid field or literal name.                         *
     F*  33 -- Protect a literal value's field name.                  *
     F*  34 -- Invalid "previous" value.                              *
     F*  35 -- Protect the "previous" value (on a literal line).      *
     F*  36 -- Invalid field position.                                *   084255
     F*  41 -- Allow F10 and F12 only.                                *
     F*  42 -- Higher field start.                                    *
     F*  43 -- Equal field start.                                     *
     F*  60 -- Field tests as numeric.                                *
     F*  61 -- Flag a subfile record as changed (for READC).          *
     F*  80 -- Clear subfile.                                         *
     F*  81 -- Display subfile control record.                        *
     F*  82 -- Display subfile record.                                *
     F*  90 -- Error detected.                                        *
     F*  91 -- EOF detected in file.                                  *
     F*  92 -- EOF detected in file.                                  *
     F*  93 -- EOF detected in file.                                  *
     F*  94 -- EOF detected in file.                                  *
     F*  95 -- EOF detected in file.                                  *
     F*  96 -- EOF detected in file.                                  *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Subroutine usage                                             *
     F*  ~~~~~~~~~~~~~~~~                                             *
     F*  SRDISP -- Display the plane; handle command keys.            *
     F*  SRSIZE -- Check that all fields fit within the plane.        *
     F*  SRMARK -- Highlight fields which fall outside the plane.     *
     F*  SRLIST -- Handle F6 (display a list of elements).            *
     F*  SRBLD1 -- Prepare the elements list -- by row and column.    *   084255
     F*  SRBLD2 -- Prepare the elements list -- by field name.        *   084255
     F*  SRBLD  -- Handle a record read in SRBLD1 or SRBLD2.          *   084255
     F*  SRIZSF -- Initialise subfile.                                *
     F*  SRLDSF -- Load the elements list subfile.                    *
     F*  SREXFM -- Display screen.                                    *
     F*  SRSHOW -- Display the plane for positioning.                 *
     F*  SRVPOS -- Validate the cursor's position.                    *
     F*  SRGRDE -- Retrieve data for an RDE.                          *
     F*  SRADD  -- Handle F6 (add an element).                        *
     F*  SRAFLD -- Add a field directly to the display workfile.      *
     F*  SRCHEK -- Look for entries in the list of elements.          *
     F*  SRACT  -- Execute the appropriate actions.                   *
     F*  SRCOPY -- Handle selection "C" (Copy an element).            *
     F*  SRMOVE -- Handle selection "M" (Move an element).            *
     F*  SRVNAM -- Validate a new name for Add or Copy.               *
     F*  SRGNAM -- Get a new name if rejected by SRVNAM.              *
     F*  SRDEL  -- Handle selection "D" (Delete an element).          *
     F*  SRCONF -- Handle F5 (confirm changes).                       *
     F*  SRCAN  -- Handle F12 (cancel changes).                       *
     F*  SRCOND -- Handle F8 (work with conditions).                  *
     F*  SRCPOS -- Handle a changed field position.                   *
     F*  SRLIT  -- Handle F14 (add a literal).                        *
     F*  SRALIT -- Add the entered literal.                           *
     F*  SRAMND -- Amend an existing literal.                         *
     F*  SRULIT -- Update the existing literal.                       *
     F*  SRFORM -- Handle selection "F" (Format an element).          *
     F*  SRREV  -- Review the layout.                                 *
     F*  SRUPDP -- Update the last / current value.                   *
     F*  SRRSEQ -- Resequence the fields list.                        *   084255
     F*  SRFTXT -- Swap the comand keys text.                         *   084255
     F*  SRTEXT -- Retrieve text variables.                           *
     F*  SRSNMS -- Send a message to the program's queue.             *
     F*  SREXPG -- Program exit processing.                           *
     F*  SRWARN -- Show a reminder of unconfirmed changes.            *
     F*  SRINIT -- Provide initialisation and definitions.            *
     F*                                                               *
     F*  Copied-in routines:                                          *
     F*                                                               *
     F*  *PSSR  -- Program error routine.                             *
     F*  SRFILE -- File error routine.                                *
     F*  SRERR  -- Error reporting routine.                           *
     F*                                                               *
     F*****************************************************************
     F/SPACE
     F*-------------------------------------------------------------------
     F* Copied-in file definitions:
     F*
     F/COPY WNCPYSRC,CG8200FPG
     F*===================================================================
     FCG8200DFCF  E                    WORKSTN
     F                                        RRN1  KSFILE #SFLRCD
     F                                              KINFDS INF1DS
     F                                              KINFSR SRFILE
     F* Window display file
     F*-------------------------------------------------------------------
     F***CG8900DFCF**E**********    WORKSTN                               136781
     F************#SFLRCD                           KRENAME#SFLRCD9       136781
     F************#SFLCTL                           KRENAME#SFLCTL9       136781
     F************#CMDTXT                           KRENAME#CMDTXT9       136781
     F************#MSGRCD                           KRENAME#MSGRCD9       136781
     F************#MSGCTL                           KRENAME#MSGCTL9       136781
     F************                            RRN9  KSFILE #SFLRCD9       136781
     F************                                  KINFSR SRFILE         136781
      ************                                                  095463136781
      **Extra*definition*for*larger*screen                          095463136781
      ************                                                  095463136781
     F**CG8905DFCF**E********          WORKSTN                      095463136781
     F************#SFLRCD                           KRENAME#SFLRCD5 095463136781
     F************#SFLCTL                           KRENAME#SFLCTL5 095463136781
     F************#CMDTXT                           KRENAME#CMDTXT5 095463136781
     F************#MSGRCD                           KRENAME#MSGRCD5 095463136781
     F************#MSGCTL                           KRENAME#MSGCTL5 095463136781
     F************                            RRN5  KSFILE #SFLRCD5 095463136781
     F************                                  KINFSR SRFILE   095463136781
     F* Plane display file
     F*-------------------------------------------------------------------
     FCGPDEFL6IF  E           K        DISK
     F                                              KINFDS INFDS6         084255
     F                                              KINFSR SRFILE
     F* Elements list file -- input in position sequence                  084255
     F*-------------------------------------------------------------------084255
     FCGPDEFL1IF  E           K        DISK                               084255
     F                                              KINFDS INFDS1         084255
     F                                              KINFSR SRFILE         084255
     F* Elements list file -- input in field name sequence                084255
     F*-------------------------------------------------------------------084255
     FCGPDEFL0UF  E           K        DISK
     F                                              KINFSR SRFILE
     F                                              KCOMIT
     F* Elements list file -- validation and sorting
     F*-------------------------------------------------------------------
     FCGPDEFPDO   E                    DISK                      A
     F                                              KINFDS INFDS2
     F                                              KINFSR SRFILE
     F                                              KCOMIT
     F* Elements list file -- output
     F*-------------------------------------------------------------------
     FCGPDECL0IF  E           K        DISK
     F                                              KINFSR SRFILE
     F                                              KCOMIT
     F* Plane declaration (details at plane level)
     F*-------------------------------------------------------------------
     FCGRDTAL0IF  E           K        DISK
     F                                              KINFSR SRFILE
     F* Elements details
     F*-------------------------------------------------------------------
     FCGWPDISPUF  E                    DISK                           UC
     F                                              KINFSR SRFILE
     F* Elements display workfile
     F*-------------------------------------------------------------------
     E/EJECT
     E*-------------------------------------------------------------------
     E* Error processing array:
     E*
     E/COPY CGCPYSRC,SRERRE
     E*
     E                    CPY@    1   1 80               Copyright
     E                    FLD      2000 10               Field name.
     E                    SRW      2000  3 0             Start row number.
     E                    SCL      2000  3 0             Start column.
     E********************CND      2000  1               Conditions f83845088814
     E                    CND      2000  4               Conditions flag. 088814
     E********************FRM      2000  1               Formatting f83845088814
     E                    FRM      2000  3               Formatting flag. 088814
     E                    ELM      2000 10               Element.
     E                    NPT      2000  6               Non repeat. path 100811
     E                    PRV      2000  1               Previous values.
     E                    DSC      2000 30               Description.
     E                    LEN      2000  3 0             Field length.
     E                    ECL      2000  3 0             Ending column.
     E                    FRN      2000  9 0             Database RRN.
     E                    SPS      2000  6  ASEP    12   Starts and ends.
     E                    IND        24  1               Indicators in.
     E********************LIN        75  1               Line characters. 095463
     E                    LIN       127  1               Line characters. 095463
     E                    SRT      2000 16               Resequencing.
     E                    DSP       256  1               Displayed data.
     E                    XDT        25  1               Example data.
     E                    LIT      2000  1               Literal string.
     E*
     E* Copied-in array definitions:
     E*
     E/COPY WNCPYSRC,CG8200EPG
     E*
     E*-------------------------------------------------------------------
     I/SPACE
     I*-------------------------------------------------------------------
     I/COPY WNCPYSRC,CG8200IPG
     I*
     I* Copied-in data structures
     I*
     I*...................................................................
     I/COPY CGCPYSRC,SRERRI
     I*
     I* Error processing data structures
     I*
     I*...................................................................
     IBIGLDA    E DSCGLDA
     I*
     I* Local data area
     I*
     I              #@CROW                          ROW
     I              #@CCOL                          COL
     I              #@CMDK                          IND
     I*...................................................................
     ICGDTA     E DSCGDTA
     I*
     I* Conditions numbers data area
     I*
     I*...................................................................
     IRUNDAT    E DSRUNDAT
     I*
     I* RUNDAT data area
     I*
     I*...................................................................
     IINF1DS    E DSY2I#DSP
     I*
     I* Display file information data structure for CG8200DF
     I*
     I*...................................................................
     IINFDS1      DS                            524                       084255
     I*                                                                   084255
     I* Data file information data structure for CGPDEFL1                 084255
     I*                                                                   084255
     I                                    B 397 4000FILRR1                084255
     I*...................................................................084255
     IINFDS6      DS                            524                       084255
     I*                                                                   084255
     I* Data file information data structure for CGPDEFL6                 084255
     I*                                                                   084255
     I                                    B 397 4000FILRR6                084255
     I*...................................................................084255
     IINFDS2      DS
     I*
     I* Data file information data structure for CGPDEFPD
     I*
     I                                       11  15 @STS
     I*...................................................................
     IP#PGEN    E DSCGPGENPD
     I*
     I* Parameters based on PF/CGPGENPD
     I*
     I*...................................................................
     IDATADS      DS
     I*
     I* Displayed line characters
     I                                        1 256 DTA
     I*...................................................................
     I* Displayed line data in CGDISPWP:
     I*
     IDSPLIN      DS
     I                                        1 256 DSP
     I*...................................................................
     I* Starting and ending positions:
     I*
     ISEPSDS      DS
     I                                        1   6 STARTS
     I                                        1   30@@SROW
     I                                        4   60@@SCOL
     I                                        7   90@@EROW
     I                                       10  120@@ECOL
     I*...................................................................
     I* Job date and time:
     I*
     IJBDTTM      DS
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     I*...................................................................
     I* Data passed to CG0499:
     I*
     IP1PARM      DS
     I                                        1  10 P1LAYO
     I                                       11  20 P1PLAN
     I                                       21  30 P1FLDN
     I                                       31  380P1TCGP
     I                                       39  460P1CID
     I*...................................................................
     I* Data returned from CG8800:
     I*
     IP2DATA      DS                            100
     I                                        1   6 P2UPPR
     I                                        7  12 P2LOWR
     I                                       13  22 P2RDE
     I                                       23  28 P2RPTH
     I                                       29  34 P2NPTH
     I                                       35  40 P2ETYP
     I                                       41  50 P2FOPT
     I                                       51  75 P2ETXT
     I                                       51  75 XDT
     I                                       76  800P2LEN
     I*...................................................................
     I* Plane display data:
     I*
      *                                                                   095463
     I*#1LINE******DS                                                     095463
     I*************                           1  75 LIN                   095463
     I#2LINE      DS                                                      095463
     I                                        1 127 LIN                   095463
     I*...................................................................
     I* Text of an entered literal:
     I*
     I#2TEXT      DS
     I                                        1  64 #2TXT1
     I                                       65 128 #2TXT2
     I                                      129 192 #2TXT3
     I                                      193 256 #2TXT4
     I*...................................................................
     I* Data structure used to sort the plane definition:
     I*
     IPDEFDS      DS
     I                                        1   30#XSROW
     I                                        4   60#XSCOL
     I                                        7  16 #XFLDN
     I*...................................................................
     I* Data structure combining all three format options. A blank        083845
     I*  structure means no format options for the corresponding element: 083845
     I*                                                                   083845
     IS#FMT       DS                                                      083845
     I                                        1  10 LRCFMO                083845
     I                                       11  25 LRCFOP                083845
     I                                       26  35 LRCOPT                083845
     I                                       36  50 LRCFTP                083845
     I                                       51  60 LRNFMT                083845
     I                                       61  75 LRNFOP                083845
     I*...................................................................
     I* Message translation fields:
     I*
     IDSMTR       DS
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
     I*...................................................................
     I* Named constants:
     I*
     I              '1'                   C         #ON
     I              '0'                   C         #OFF
     I*
     I              'Literal:'            C         ##LIT
     I*
     I              'OVRDBF CGWPDISP -    C         #OVERD
     I              'QTEMP/CGWPDISP'
     I********************************************************************
     C/EJECT
     C********************************************************************
     C           *ENTRY    PLIST
     C                     PARM           P0RTN
     C*
     C* Add subroutine name to stack:
     C*
     C                     Z-ADD1         Q
     C                     MOVEL'@Main@'  @STK,Q
     C*
     C* If not returning from CG8400:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C*
     C* Initialise:
     C                     EXSR SRINIT
     C                     ENDIF
     C*
     C* Process according to the action code:
     C*
     C* For a code of "*SIZE", check that no fields go outside the plane;
     C*  otherwise, display the plane details for amendment:
     C*
     C           #@ACTN    CASEQ'*SIZE   'SRSIZE
     C                     CAS            SRDISP
     C                     ENDCS
     C*
     C* Exit program:
     C                     EXSR SREXPG
     C*
     C* Unwind subroutine stack:
     C*
     C           Q         IFGT *ZERO
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C                     ENDIF
     C*
     C                     RETRN
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDISP handles the display requirement.            **
     C********************************************************************
     C           SRDISP    BEGSR                           * S R D I S P *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDISP'  @STK,Q
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C*
     C* If not returning from CG8400:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C*
     C* If a second or subsequent call,
     C*  send a message to remind the user to review the layout:
     C*
     C           #FIRST    IFEQ 'N'
     C           #@MSID    ANDEQ*BLANKS
     C           #@REVU    IFEQ 'Y'
     C                     MOVE 'CGD1614' #@MSID
     C                     ELSE
     C                     MOVE 'CGD1615' #@MSID
     C                     ENDIF
     C                     ENDIF
     C*
     C* Display the screen:
     C                     OUT  BIGLDA
     C*
     C           @#SCCL    IFNE 80                                        095463
     C           ##8905    ANDEQ'O'                                       095463
     C                     CALL 'CG8905'               90                 095463
     C                     PARM           P1RTN   7                       095463
     C                     PARM           W0RFR   1                       095463
     C                     ELSE                                           095463
     C                     CALL 'CG8900'               90
     C                     PARM           P1RTN   7
     C                     PARM           W0RFR   1
     C                     ENDIF                                          095463
     C*
     C                     IN   BIGLDA
     C                     MOVE *BLANKS   #@MSID
     C                     MOVE *BLANKS   #@MDTA
     C                     MOVE 'N'       #FIRST  1
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Trap error:
     C           P1RTN     IFNE *BLANKS
     C           P1RTN     ANDNE'Y2U9999'
     C           P1RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C           @#SCCL    IFNE 80                                        095463
     C           ##8905    ANDEQ'O'                                       095463
     C                     MOVEL'CG8905'  W0FILE                          095463
     C                     ELSE                                           095463
     C                     MOVEL'CG8900  'W0FILE
     C                     ENDIF                                          095463
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 1.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* If not F3 (exit) or F12 (cancel changes),
     C*  test for F5  (confirm changes);
     C*        or F6  (display a list of elements):
     C*
     C* Move F3 and F12:
     C                     MOVE IND,03    *IN03
     C                     MOVE IND,12    *IN12
     C                     ENDIF
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C*
     C* If moved left or right and size-checking,
     C*  reset the highlighting values:
     C*
     C           COL       IFNE #SVCOL
     C           #@ACTN    ANDEQ'*SIZE   '
     C                     EXSR SRSIZE
     C                     Z-ADDCOL       #SVCOL
     C                     ENDIF
     C*
     C           IND,05    CASEQ#ON       SRCONF
     C           IND,06    CASEQ#ON       SRLIST
     C                     ENDCS
     C*
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXDISP    TAG                             <<<=== EXDISP
     C*
     C* Unwind subroutine stack:
     C*
     C           Q         IFGT *ZERO
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C                     ENDIF
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSIZE handles the limits-checking requirement.    **
     C********************************************************************
     C           SRSIZE    BEGSR                           * S R S I Z E *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSIZE'  @STK,Q
     C*
     C                     MOVEL'CG8100'  #@NEXT    P
     C                     MOVEL'CG8200'  #@LAST    P
     C*
     C* Assume "valid":
     C                     MOVE 'Y'       #VALID  1
     C*
     C* Get the plane's start and end positions
     C*  from the plane declaration file:
     C*
     C           KKDEFS    CHAINCGPDECL0             93
     C           *IN93     IFEQ *OFF
     C           LPSROW    IFNE *ZERO
     C           LPSCOL    ANDNE*ZERO
     C                     Z-ADDLPSROW    #@ASRO           Fixed
     C                     Z-ADDLPSCOL    #@ASCO
     C                     Z-ADDLPEROW    #@AERO
     C                     Z-ADDLPECOL    #@AECO
     C                     ELSE
     C                     Z-ADD1         #@ASRO           Relative
     C                     Z-ADD1         #@ASCO
     C           LPEROW    ADD  1         #@AERO
     C           LPECOL    ADD  1         #@AECO
     C                     ENDIF
     C                     ENDIF
     C*
     C* Get the plane's height and width:
     C*
     C           #@AERO    ADD  1         #VERT   30
     C           #@AECO    ADD  1         #HORIZ  30
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* For each record for the current plane in the definitions file,
     C*  check the starting and ending positions of each field against
     C*  the starting and ending positions of the plane, to check that
     C*  the field fits within it:
     C*
     C           KKDEFS    SETLLCGPDEFL6
     C           *IN91     DOUEQ*ON
     C           KKDEFS    READECGPDEFL6                 91
     C           *IN91     IFEQ *OFF
     C*
     C* If a report data element (not a literal),
     C*  get the element definition to retrieve the maximum length:
     C*
     C           LRLITD    IFNE 'L'
     C           LRLITD    ANDNE'Y'
     C           LRRDE     CHAINCGRDTAL0             92
     C           *IN92     IFEQ *ON
     C                     MOVEL'CGRDTAL0'W0FILE
     C                     MOVEL##RDE     W0KEY            ***************
     C                     Z-ADD2         W0ERNB           ** Database  **
     C                     MOVEL'MEM5002' W0MSGD           ** error 2.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Get the ending column of the field:
     C*
     C           LROLEN    IFGT *ZEROS                                    088435
     C           LRSCOL    ADD  LROLEN    ##ECOL                          088435
     C                     ELSE                                           088435
     C           LRSCOL    ADD  RDMAXL    ##ECOL  30
     C                     ENDIF                                          088435
     C                     SUB  1         ##ECOL
     C*
     C* If a literal, use the value in the record:
     C*
     C                     ELSE
     C                     Z-ADDLRECOL    ##ECOL
     C                     ENDIF
     C*
     C* Assume "no error":
     C                     MOVE 'N'       #ERROR  1
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Check that the field is within the plane's limits
     C*  (field position values are relative to the plane's origin):
     C*
     C           LRSROW    IFLT *ZERO
     C           LRSROW    ORGT #VERT
     C           LREROW    ORLT *ZERO
     C           LREROW    ORGT #VERT
     C           LRSCOL    ORLT *ZERO
     C           LRSCOL    ORGT #HORIZ
     C           ##ECOL    ORLT *ZERO
     C           ##ECOL    ORGT #HORIZ
     C                     MOVE '3'       #VALID
     C                     MOVE 'Y'       #ERROR
     C                     ENDIF
     C*********************                                               136781
     C**Mark*or*unmark*the*field,*as*required:                            136781
     C*********************                                               136781
     C***********LRSROW****IFGT *ZERO                                     136781
     C***********LRSCOL    ANDLERRN9                                      136781
     C***********@#SCCL    ANDEQ80                                  095463136781
     C***********LRSROW    ORGT *ZERO                               095463136781
     C***********LRSCOL    ANDLERRN5                                095463136781
     C***********@#SCCL    ANDNE80                                  095463136781
     C***********          EXSR SRMARK                                    136781
     C***********          ENDIF                                          136781
     C*
     C                     ENDIF
     C                     ENDDO
     C*
     C* If any error, execute the update function of this program
     C*  so that the user can make suitable corrections:
     C*
     C           #VALID    IFNE 'Y'
     C                     MOVE 'CGD1468' #@MSID
     C*
     C* Execute the print generator:
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN   7
     C                     PARM '*DISPLAY'P3ACT   8
     C                     PARM           P#PGEN                                              222373
     C*
     C                     EXSR SRDISP
     C                     ENDIF
     C*
     C           EXSIZE    TAG                             <<<=== EXSIZE
     C*
     C* Unwind subroutine stack:
     C*
     C           Q         IFGT *ZERO
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C                     ENDIF
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************136781
     C****Subroutine*SRMARK*highlights fields outside the plane.        **136781
     C********************************************************************136781
     C***********SRMARK    BEGSR                           * S R M A R K *136781
     C***********                                                         136781
     C**Add*subroutine*name*to*stack:                                     136781
     C**********                                                          136781
     C**********           ADD  1         Q                               136781
     C**********           MOVEL'SRMARK'  @STK,Q                          136781
     C**********                                                          136781
     C**Read*the*data*display*subfile:                                    136781
     C**********                                                          136781
     C********** @#SCCL    IFNE 80                                  095463136781
     C********** ##8905    ANDEQ'O'                                 095463136781
     C********** LRSROW    CHAIN#SFLRCD5             93             095463136781
     C**********           ELSE                                     095463136781
     C********** LRSROW    CHAIN#SFLRCD9             93                   136781
     C**********           MOVEL#1LINE    #2LINE    P               095463136781
     C**********           ENDIF                                    095463136781
     C********** *IN93     IFEQ *ON                                       136781
     C**********           MOVEL'CG8200DF'W0FILE                          136781
     C**********           MOVELLRSROW    W0KEY            ***************136781
     C**********           Z-ADD3         W0ERNB           ** Database  **136781
     C**********           MOVEL'MEM5002' W0MSGD           ** error 3.  **136781
     C**********           MOVEL'MIDAS  ' W0MSGF           ***************136781
     C**********           EXSR SRERR                                     136781
     C**********           ENDIF                                          136781
     C**********                                                          136781
     C**M1*is*the*position*before*the*field*to*be*highlighted;            136781
     C**M2*is*the*position*after.                                         136781
     C**********                                                          136781
     C********** LRSCOL    SUB  COL       M1      30                      136781
     C********** ##ECOL    SUB  COL       M2      30                      136781
     C**********           ADD  2         M2                              136781
     C*...................................................................136781
     C*EJECT*************                                                 136781
     C*...................................................................136781
     C**Highlight*if*in*error;*clear*highlight*if valid:                  136781
     C**********                                                          136781
     C********** M1        IFGT *ZERO                                     136781
     C********** M1        ANDLE75                                        136781
     C********** @#SCCL    ANDEQ80                                  095463136781
     C********** M1        ORGT *ZERO                               095463136781
     C********** M1        ANDLE75                                  095463136781
     C********** @#SCCL    ANDNE80                                  095463136781
     C********** ##8905    ANDNE'O'                                 095463136781
     C********** M1        ORGT *ZERO                               095463136781
     C********** M1        ANDLE127                                 095463136781
     C********** @#SCCL    ANDNE80                                  095463136781
     C********** ##8905    ANDEQ'O'                                 095463136781
     C********** LIN,M1    IFEQ *BLANK                                    136781
     C********** LIN,M1    OREQ #HIGH                                     136781
     C********** LIN,M1    OREQ #LOW                                      136781
     C********** #ERROR    IFEQ 'Y'                                       136781
     C**********           MOVE #HIGH     LIN,M1                          136781
     C**********           ELSE                                           136781
     C**********           MOVE #LOW      LIN,M1                          136781
     C**********           ENDIF                                          136781
     C**********           ENDIF                                          136781
     C**********           ENDIF                                          136781
     C***********                                                         136781
     C**End*of*highlight:                                                 136781
     C**********                                                          136781
     C********** M2        IFGT *ZERO                                     136781
     C********** M2        ANDLE75                                        136781
     C********** @#SCCL    ANDEQ80                                  095463136781
     C********** M2        ORGT *ZERO                               095463136781
     C********** M2        ANDLE75                                  095463136781
     C********** @#SCCL    ANDNE80                                  095463136781
     C********** ##8905    ANDNE'O'                                 095463136781
     C********** M2        ORGT *ZERO                               095463136781
     C********** M2        ANDLE127                                 095463136781
     C********** @#SCCL    ANDNE80                                  095463136781
     C********** ##8905    ANDEQ'O'                                 095463136781
     C********** LIN,M2    IFEQ *BLANK                                    136781
     C********** LIN,M2    OREQ #HIGH                                     136781
     C********** LIN,M2    OREQ #LOW                                      136781
     C**********           MOVE #LOW      LIN,M2                          136781
     C**********           ENDIF                                          136781
     C**********           ENDIF                                          136781
     C********** @#SCCL    IFNE 80                                  095463136781
     C********** ##8905    ANDEQ'O'                                 095463136781
     C**********           UPDAT#SFLRCD5                            095463136781
     C**********           ELSE                                     095463136781
     C**********           MOVEL#2LINE    #1LINE                    095463136781
     C**********           UPDAT#SFLRCD9                                  136781
     C**********           ENDIF                                    095463136781
     C**********                                                          136781
     C********** EXMARK    TAG                             <<<=== EXMARK  136781
     C**********                                                          136781
     C**Unwind*subroutine*stack:                                          136781
     C**********                                                          136781
     C**********           MOVE *BLANKS   @STK,Q                          136781
     C**********           SUB  1         Q                               136781
     C**********                                                          136781
     C**********           ENDSR                                          136781
     C********************************************************************136781
     C*EJECT**********                                                    136781
     C********************************************************************
     C**  Subroutine SRLIST handles F6 (display a list of elements).    **
     C********************************************************************
     C           SRLIST    BEGSR                           * S R L I S T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLIST'  @STK,Q
     C*
     C* If not returning from CG8400:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C*
     C* Read from the database file to load a set of arrays.
     C* These arrays are then used to load the subfile:
     C*
     C***********          EXSR SRBLD                                     084255
     C           W0FSEQ    IFEQ '1'                                       084255
     C                     EXSR SRBLD1                                    084255
     C                     ELSE                                           084255
     C                     EXSR SRBLD2                                    084255
     C                     ENDIF                                          084255
     C                     ENDIF
     C*
     C* Display the list:
     C                     EXSR SREXFM
     C*
     C* Reset F12:
     C                     SETOF                     12
     C*
     C                     MOVE *BLANKS   ZAMSGF
     C*
     C           EXLIST    TAG                             <<<=== EXLIST
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************084255
     C***********  Subroutine SRBLD provides the list of elements.      **084255
     C********************************************************************084255
     C********** SRBLD     BEGSR                           * S R B L D   *084255
     C***********                                                         084255
     C*********** Add subroutine name to stack:                           084255
     C***********                                                         084255
     C***********          ADD  1         Q                               084255
     C***********          MOVEL'SRBLD '  @STK,Q                          084255
     C***********                                                         084255
     C***********          MOVE 'F'       ##TYPE  1        F = Fields     084255
     C***********          Z-ADD*ZERO     #R      50                      084255
     C***********          MOVE *ALL'9'   SEP                             084255
     C***********          MOVE *ALL'9'   SPS                             084255
     C***********          Z-ADD*ZERO     #HISEQ  30                      084255
     C********** KKDEFS    SETLLCGPDEFL6                                  084255
     C***********                                                         084255
     C********** *IN91     DOUEQ*ON                                       084255
     C********** #R        ORGE 2000                                      084255
     C********** KKDEFS    READECGPDEFL6                 91               084255
     C********** *IN91     IFEQ *OFF                                      084255
     C***********                                                         084255
     C*********** Increment counter:                                      084255
     C***********          ADD  1         #R                              084255
     C*********** Move data:                                              084255
     C***********          MOVELLRFLDN    FLD,#R                          084255
     C***********          Z-ADDLRSROW    SRW,#R                          084255
     C***********          Z-ADDLRSCOL    SCL,#R                          084255
     C***********          MOVELLRRDE     ELM,#R                          084255
     C***********          MOVELLRLCVL    PRV,#R                          084255
     C***********          MOVELLRDESC    DSC,#R                          084255
     C***********          MOVELLRLITD    LIT,#R                          084255
     C*...................................................................084255
     C/EJECT
     C*...................................................................084255
     C*********** Set condition and format indicators:              084255083845
     C***********                                                   084255083845
     C********** LRTCGP    IFEQ *ZERO                               084255083845
     C***********          MOVEL'N'       CND,#R                    084255083845
     C***********          ELSE                                     084255083845
     C***********          MOVEL'Y'       CND,#R                    084255083845
     C***********          ENDIF                                    084255083845
     C***********                                                   084255083845
     C********** S#FMT     IFEQ *BLANK                              084255083845
     C***********          MOVEL'N'       FRM,#R                    084255083845
     C***********          ELSE                                     084255083845
     C***********          MOVEL'Y'       FRM,#R                    084255083845
     C***********          ENDIF                                    084255083845
     C***********                                                   084255083845
     C*********** Get the length:                                   084255083845
     C***********                                                   084255083845
     C********** LRLITD    IFEQ 'L'                                       084255
     C********** LRLITD    OREQ 'Y'                                       084255
     C***********          Z-ADDLROLEN    ##MAXL                          084255
     C***********          ELSE                                           084255
     C***********          MOVE LRRDE     ##RDE                           084255
     C***********          EXSR SRGRDE                                    084255
     C***********          ENDIF                                          084255
     C***********          Z-ADD##MAXL    LEN,#R                          084255
     C***********                                                         084255
     C*********** Calculate the ending column:                            084255
     C***********                                                         084255
     C********** LRSCOL    ADD  ##MAXL    #1ECOL                          084255
     C***********          SUB  1         #1ECOL                          084255
     C***********          Z-ADD#1ECOL    ECL,#R                          084255
     C***********          Z-ADDFILRRN    FRN,#R                          084255
     C*...................................................................084255
     C/EJECT
     C*...................................................................084255
     C*********** Save starting and ending positions for later validation:084255
     C***********                                                         084255
     C***********          Z-ADDLRSROW    @@SROW                          084255
     C***********          Z-ADDLRSCOL    @@SCOL                          084255
     C***********          Z-ADDLRSROW    @@EROW                          084255
     C***********          Z-ADD#1ECOL    @@ECOL                          084255
     C***********          MOVE STARTS    SPS,#R                          084255
     C***********          MOVE SEPSDS    SEP,#R                          084255
     C***********                                                         084255
     C*********** Save the highest sequence number:                       084255
     C***********                                                         084255
     C***********          TESTN          LRSEQA     6060                 084255
     C********** *IN60     IFEQ *OFF                                      084255
     C***********          MOVE LRSEQA    ##SEQN  30                      084255
     C********** ##SEQN    IFGT #HISEQ                                    084255
     C***********          Z-ADD##SEQN    #HISEQ                          084255
     C***********          ENDIF                                          084255
     C***********          ENDIF                                          084255
     C***********          ENDIF                                          084255
     C***********          ENDDO                                          084255
     C***********                                                         084255
     C*********** If no records found, display an error message:          084255
     C***********  display an error message -- "No data to display":      084255
     C***********                                                         084255
     C********** #R        IFEQ *ZERO                                     084255
     C***********          MOVE 'Y2U0008' ZAMSID                          084255
     C***********          MOVEL'Y2USRMSG'ZAMSGF                          084255
     C***********          EXSR SRSNMS                                    084255
     C***********          ENDIF                                          084255
     C***********                                                         084255
     C*********** Sort the "starting and ending positions" array:         084255
     C***********                                                         084255
     C***********          SORTASPS                                       084255
     C***********                                                         084255
     C*********** Load the subfile:                                       084255
     C***********          EXSR SRIZSF                                    084255
     C***********                                                         084255
     C********** EXBLD     TAG                             <<<=== EXBLD   084255
     C***********                                                         084255
     C*********** Unwind subroutine stack:                                084255
     C***********                                                         084255
     C***********          MOVE *BLANKS   @STK,Q                          084255
     C***********          SUB  1         Q                               084255
     C***********                                                         084255
     C***********          ENDSR                                          084255
     C********************************************************************084255
     C/EJECT
     C********************************************************************084255
     C**  Subroutine SRBLD1 builds the list of fields by position.      **084255
     C********************************************************************084255
     C           SRBLD1    BEGSR                           * S R B L D 1 *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRBLD1'  @STK,Q                          084255
     C*                                                                   084255
     C                     MOVE 'F'       ##TYPE  1        F = Fields     084255
     C                     Z-ADD*ZERO     #R      50                      084255
     C                     MOVE *ALL'9'   SEP                             084255
     C                     MOVE *ALL'9'   SPS                             084255
     C                     Z-ADD*ZERO     #HISEQ  30                      084255
     C           KKDEFS    SETLLCGPDEFL6                                  084255
     C*                                                                   084255
     C           *IN91     DOUEQ*ON                                       084255
     C           #R        ORGE 2000                                      084255
     C           KKDEFS    READECGPDEFL6                 91               084255
     C           *IN91     IFEQ *OFF                                      084255
     C                     Z-ADDFILRR6    FILRRN  90                      084255
     C                     EXSR SRBLD                                     084255
     C                     ENDIF                                          084255
     C                     ENDDO                                          084255
     C*                                                                   084255
     C* If no records found,                                              084255
     C*  display an error message -- "No data to display":                084255
     C*                                                                   084255
     C           #R        IFEQ *ZERO                                     084255
     C                     MOVE 'Y2U0008' ZAMSID                          084255
     C                     MOVEL'Y2USRMSG'ZAMSGF                          084255
     C                     EXSR SRSNMS                                    084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C* Sort the "starting and ending positions" array:                   084255
     C*                                                                   084255
     C                     SORTASPS                                       084255
     C*                                                                   084255
     C* Load the subfile:                                                 084255
     C                     EXSR SRIZSF                                    084255
     C*                                                                   084255
     C           EXBLD1    TAG                             <<<=== EXBLD1  084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT                                                              084255
     C********************************************************************084255
     C**  Subroutine SRBLD2 builds the list of fields by field name.    **084255
     C********************************************************************084255
     C           SRBLD2    BEGSR                           * S R B L D 2 *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRBLD2'  @STK,Q                          084255
     C*                                                                   084255
     C                     MOVE 'F'       ##TYPE           F = Fields     084255
     C                     Z-ADD*ZERO     #R                              084255
     C                     MOVE *ALL'9'   SEP                             084255
     C                     MOVE *ALL'9'   SPS                             084255
     C                     Z-ADD*ZERO     #HISEQ                          084255
     C           KKDEFS    SETLLCGPDEFL1                                  084255
     C*                                                                   084255
     C           *IN91     DOUEQ*ON                                       084255
     C           #R        ORGE 2000                                      084255
     C           KKDEFS    READECGPDEFL1                 91               084255
     C           *IN91     IFEQ *OFF                                      084255
     C                     Z-ADDFILRR1    FILRRN                          084255
     C                     EXSR SRBLD                                     084255
     C                     ENDIF                                          084255
     C                     ENDDO                                          084255
     C*                                                                   084255
     C* If no records found,                                              084255
     C*  display an error message -- "No data to display":                084255
     C*                                                                   084255
     C           #R        IFEQ *ZERO                                     084255
     C                     MOVE 'Y2U0008' ZAMSID                          084255
     C                     MOVEL'Y2USRMSG'ZAMSGF                          084255
     C                     EXSR SRSNMS                                    084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C* Sort the "starting and ending positions" array:                   084255
     C*                                                                   084255
     C                     SORTASPS                                       084255
     C*                                                                   084255
     C* Load the subfile:                                                 084255
     C                     EXSR SRIZSF                                    084255
     C*                                                                   084255
     C           EXBLD2    TAG                             <<<=== EXBLD2  084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT                                                              084255
     C********************************************************************084255
     C**  Subroutine SRBLD provides the list of elements.               **084255
     C********************************************************************084255
     C           SRBLD     BEGSR                           * S R B L D   *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRBLD '  @STK,Q                          084255
     C*                                                                   084255
     C* Increment counter:                                                084255
     C                     ADD  1         #R                              084255
     C* Move data:                                                        084255
     C                     MOVELLRFLDN    FLD,#R                          084255
     C                     Z-ADDLRSROW    SRW,#R                          084255
     C                     Z-ADDLRSCOL    SCL,#R                          084255
     C                     MOVELLRRDE     ELM,#R                          084255
     C                     MOVELLRNPTH    NPT,#R                          100811
     C                     MOVELLRLCVL    PRV,#R                          084255
     C                     MOVELLRDESC    DSC,#R                          084255
     C                     MOVELLRLITD    LIT,#R                          084255
     C*                                                             084255083845
     C* Set condition and format indicators                         084255083845
     C*                                                             084255083845
     C           LRTCGP    IFEQ *ZERO                               084255083845
     C***********          MOVEL'N'       CND,#R              084255083845088814
     C                     MOVEL*BLANKS   CND,#R                          088814
     C                     ELSE                                           084255
     C***********          MOVEL'Y'       CND,#R                          084255
     C                     MOVEL#1CON1    CND,#R                          088814
     C                     ENDIF                                    084255083845
     C*                                                             084255083845
     C           S#FMT     IFEQ *BLANK                              084255083845
     C***********          MOVEL'N'       FRM,#R              084255083845088814
     C                     MOVEL*BLANKS   FRM,#R                          088814
     C                     ELSE                                     084255083845
     C***********          MOVEL'Y'       FRM,#R              084255083845088814
     C                     MOVEL#1FOR1    FRM,#R                          088814
     C                     ENDIF                                    084255083845
     C*...................................................................084255
     C/EJECT                                                              084255
     C*...................................................................084255
     C* Get the length:                                             084255083845
     C*                                                             084255083845
     C           LRLITD    IFEQ 'L'                                       084255
     C           LRLITD    OREQ 'Y'                                       084255
     C                     Z-ADDLROLEN    ##MAXL                          084255
     C                     ELSE                                           084255
     C                     MOVE LRRDE     ##RDE                           084255
     C                     EXSR SRGRDE                                    084255
     C                     ENDIF                                          084255
     C                     Z-ADD##MAXL    LEN,#R                          084255
     C*                                                                   084255
     C* Calculate the ending column:                                      084255
     C*                                                                   084255
     C           LRSCOL    ADD  ##MAXL    #1ECOL                          084255
     C                     SUB  1         #1ECOL                          084255
     C                     Z-ADD#1ECOL    ECL,#R                          084255
     C                     Z-ADDFILRRN    FRN,#R                          084255
     C*                                                                   084255
     C* Save starting and ending positions for later validation:          084255
     C*                                                                   084255
     C                     Z-ADDLRSROW    @@SROW                          084255
     C                     Z-ADDLRSCOL    @@SCOL                          084255
     C                     Z-ADDLRSROW    @@EROW                          084255
     C                     Z-ADD#1ECOL    @@ECOL                          084255
     C                     MOVE STARTS    SPS,#R                          084255
     C                     MOVE SEPSDS    SEP,#R                          084255
     C*                                                                   084255
     C* Save the highest sequence number:                                 084255
     C*                                                                   084255
     C                     TESTN          LRSEQA     6060                 084255
     C           *IN60     IFEQ *OFF                                      084255
     C                     MOVE LRSEQA    ##SEQN  30                      084255
     C           ##SEQN    IFGT #HISEQ                                    084255
     C                     Z-ADD##SEQN    #HISEQ                          084255
     C                     ENDIF                                          084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C           EXBLD     TAG                             <<<=== EXBLD   084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT
     C********************************************************************
     C**  Subroutine SRIZSF initialises the subfile.                    **
     C********************************************************************
     C           SRIZSF    BEGSR                           * S R I Z S F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRIZSF'  @STK,Q
     C*
     C* Clear the subfile:
     C                     SETOF                     81
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
     C                     SETON                     81
     C*
     C* Reset top RRN:
     C                     Z-ADD*ZERO     #RRMX1  50
     C                     Z-ADD*ZERO     RRN1    50
     C*
     C* /Copy point for subfile control initialisation:
     C*
     C/COPY WNCPYSRC,CG8200DISC
     C*
     C* Initialise array start position:
     C*
     C                     Z-ADD*ZERO     #C      50
     C*
     C* Load subfile:
     C                     EXSR SRLDSF
     C*
     C           EXIZSF    TAG                             <<<=== EXIZSF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRLDSF loads the subfile.                          **
     C********************************************************************
     C           SRLDSF    BEGSR                           * S R L D S F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLDSF'  @STK,Q
     C*
     C* Start at previous highest record in subfile:
     C*
     C                     Z-ADD#RRMX1    RRN1
     C*
     C* Reset the count of records read:
     C*
     C                     Z-ADD*ZERO     #READ   50
     C*
     C********* Load subfile lines until three pages full or end of array:084287
     C* Load subfile lines until end of array:                            084287
     C*
     C           #R        IFGT *ZERO
     C********** #READ     DOUEQ60                                        084287
     C********** #C        OREQ #R                                        084287
     C           #C        DOUEQ#R                                        084287
     C*
     C* Increment counters:
     C                     ADD  1         #READ
     C                     ADD  1         #C
     C* Move data:
     C***********          SETOF                     3134                 084255
     C                     SETOF                     313436               084255
     C                     MOVE *BLANK    #1SEL
     C                     MOVELFLD,#C    #1FLD
     C                     Z-ADDSRW,#C    #1SROW
     C                     Z-ADDSCL,#C    #1SCOL
     C                     MOVELFRM,#C    #1FORM
     C                     MOVELCND,#C    #1COND
     C                     MOVELELM,#C    #1ELEM
     C                     MOVELNPT,#C    #1NPTH  6                       100811
     C                     MOVELPRV,#C    #1PREV
     C                     MOVELDSC,#C    #1DESC
     C                     Z-ADDLEN,#C    #1LEN
     C                     Z-ADDECL,#C    #1ECOL
     C                     Z-ADDFRN,#C    #1RRN
     C                     MOVE LIT,#C    #1LITD
     C                     Z-ADD#C        #1NUM
     C                     MOVE #1PREV    #1LCVL
     C                     Z-ADDSRW,#C    #1SSRW
     C                     Z-ADDSCL,#C    #1SSCL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Edit numeric values:
     C*
     C* Start row:
     C                     Z-ADD#1SROW    ZFLD15                          084604
     C*                                                                   084604
     C                     CALL 'ZSEDIT'                                  084604
     C                     PARM           ZFLD15 150                      084604
     C                     PARM *ZERO     ZDECS   10                      084604
     C                     PARM *BLANKS   ZECODE  1                       084604
     C                     PARM *BLANKS   ZOUT21 21                       084604
     C*                                                                   084604
     C                     MOVELZOUT21    ##20   20                       084604
     C                     MOVE ##20      #1SRWA                          084604
     C*                                                                   084604
     C* Start column:
     C                     Z-ADD#1SCOL    ZFLD15                          084604
     C*                                                                   084604
     C                     CALL 'ZSEDIT'                                  084604
     C                     PARM           ZFLD15                          084604
     C                     PARM *ZERO     ZDECS                           084604
     C                     PARM *BLANKS   ZECODE                          084604
     C                     PARM *BLANKS   ZOUT21                          084604
     C*                                                                   084604
     C                     MOVELZOUT21    ##20                            084604
     C                     MOVE ##20      #1SCLA                          084604
     C*                                                                   084604
     C* Length:
     C                     Z-ADD#1LEN     ZFLD15                          084604
     C*                                                                   084604
     C                     CALL 'ZSEDIT'                                  084604
     C                     PARM           ZFLD15                          084604
     C                     PARM *ZERO     ZDECS                           084604
     C                     PARM *BLANKS   ZECODE                          084604
     C                     PARM *BLANKS   ZOUT21                          084604
     C*                                                                   084604
     C                     MOVELZOUT21    ##20                            084604
     C                     MOVE ##20      #1LENA                          084604
     C*                                                                   084604
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Protect the previous value if a literal:
     C*
     C                     SETOF                     35
     C           #1LITD    IFEQ 'L'
     C           #1LITD    OREQ 'Y'
     C                     SETON                     35
     C                     ENDIF
     C*
     C* /Copy point for subfile record initialisation:
     C*
     C/COPY WNCPYSRC,CG8200DISR
     C*
      * Setup path infor.                                                 100811
     C                     EXSR SRPTH1                                    100811
     C* Write the record:
     C                     ADD  1         RRN1
     C                     WRITE#SFLRCD
     C*
     C                     ENDDO
     C                     ENDIF
     C*
     C* Set indicator 82 (display subfile):
     C*
     C                     SETOF                     82
     C           RRN1      IFNE *ZERO
     C                     SETON                     82
     C                     ENDIF
     C*
     C* Save highest RRN:
     C                     Z-ADDRRN1      #RRMX1
     C*
     C           EXLDSF    TAG                             <<<=== EXLDSF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SREXFM displays the list of elements.              **
     C********************************************************************
     C           SREXFM    BEGSR                           * S R E X F M *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SREXFM'  @STK,Q
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* Do until F3 (exit), F12 (previous) or Exit:
     C*
     C                     MOVE 'N'       ##EXIT  1
     C                     MOVE *BLANK    #WARN   1
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           ##EXIT    OREQ 'Y'
     C*
     C* If not done, set subfile position to show the first record;
     C*  if too high, set subfile position to show the last record:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADD1         ##SFRC
     C                     ELSE
     C           ##SFRC    IFGT #RRMX1
     C                     Z-ADD#RRMX1    ##SFRC
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If returning from CG8400, with subfile records and no error,
     C*  seek the next marked line:
     C*
     C           #@FLDN    IFNE *BLANKS
     C           RRN1      ANDGT*ZERO
     C           #ERROR    ANDNE'Y'
     C           *IN92     DOUEQ*ON
     C           *IN03     OREQ *ON
     C           *IN12     OREQ *ON
     C                     READC#SFLRCD                  92
     C           *IN92     IFEQ *OFF
     C           #1SEL     ANDNE*BLANK
     C           *IN92     OREQ *OFF
     C           #1PREV    ANDNE#1LCVL
     C                     MOVE #1SEL     #1SELX  1                       085288
     C                     MOVE *BLANK    #1SEL                           085288
     C                     UPDAT#SFLRCD                                   085288
     C                     EXSR SRACT
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
     C*
     C* If no selection, reset the subfile pointer:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADD##SVRC    ##SFRC
     C                     ENDIF
     C*
     C* If still zero (due to some error), set the pointer to 1:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADD1         ##SFRC
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If not returning from CG8400, display the subfile:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#WINDOW1
     C                     WRITE#MSGCTL1
     C                     WRITE#CMDTXT
     C                     EXFMT#SFLCTL
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C*
     C* Test for: F6    (Add an element),
     C*           F14   (Add a literal),
     C*           F18   (Review the layout),
     C*           F22   (Resequence the list),                            084255
     C*           F24   (Change the function-key text), or                084255
     C*           Enter (Check for selections):
     C*
     C           *IN06     CASEQ*ON       SRADD
     C           *IN14     CASEQ*ON       SRLIT
     C           *IN18     CASEQ*ON       SRREV
     C           *IN22     CASEQ*ON       SRRSEQ                          084255
     C           *IN24     CASEQ*ON       SRFTXT                          084255
     C           RRN1      CASGT*ZERO     SRCHEK
     C                     ENDCS
     C*
     C                     ENDIF
     C*
     C* If returning from CG8400 with no more selections,
     C*  clear the field name and exit this loop:
     C*
     C                     ELSE
     C                     MOVE *BLANKS   #@FLDN
     C                     MOVE 'Y'       ##EXIT
     C                     ENDIF
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If an update, refresh the report plane display:
     C*
     C           ##EXIT    IFEQ 'Y'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C           ##ADD     ANDNE'Y'
     C*
     C                     CALL 'CGC3003'
     C                     PARM           P4RTN   7
     C                     PARM 'CGWPDISP'P4FILE 10
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN
     C                     PARM '*DISPLAY'P3ACT
     C                     PARM           P#PGEN                                              222373
     C*
     C* Refresh the display:
     C                     MOVE 'Y'       W0RFR
     C                     ENDIF
     C*
     C* Reset F12:
     C                     SETOF                     12
     C*
     C* Reset the Add flag:
     C                     MOVE 'N'       ##ADD
     C*
     C           EXEXFM    TAG                             <<<=== EXEXFM
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSHOW displays the plane for positioning.         **
     C********************************************************************
     C           SRSHOW    BEGSR                           * S R S H O W *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSHOW'  @STK,Q
     C*
     C* Display the screen:
     C                     OUT  BIGLDA
     C*
     C           @#SCCL    IFNE 80                                        095463
     C           ##8905    ANDEQ'O'                                       095463
     C                     CALL 'CG8905'               90                 095463
     C                     PARM           P1RTN   7                       095463
     C                     PARM           W0RFR   1                       095463
     C                     ELSE                                           095463
     C                     CALL 'CG8900'               90
     C                     PARM           P1RTN
     C                     PARM           W0RFR
     C                     ENDIF                                          095463
     C* Trap error:
     C           P1RTN     IFNE *BLANKS
     C           P1RTN     ANDNE'Y2U9999'
     C           P1RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C           @#SCCL    IFNE 80                                        095463
     C           ##8905    ANDEQ'O'                                       095463
     C                     MOVEL'CG8905'  W0FILE                          095463
     C                     ELSE                                           095463
     C                     MOVEL'CG8900  'W0FILE
     C                     ENDIF                                          095463
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD4         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 4.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C                     IN   BIGLDA
     C*
     C* Move F3 and F12:
     C                     MOVE IND,03    *IN03
     C                     MOVE IND,12    *IN12
     C*
     C           *IN03     IFEQ *ON
     C                     EXSR SREXPG
     C                     RETRN
     C                     ENDIF
     C*
     C           EXSHOW    TAG                             <<<=== EXSHOW
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRVPOS validates the cursor's position.            **
     C********************************************************************
     C           SRVPOS    BEGSR                           * S R V P O S *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRVPOS'  @STK,Q
     C*
     C* Assume valid:
     C                     MOVE 'Y'       #VALID
     C*
     C* If the current row is zero, the position is invalid:
     C*
     C********** #@TROW    IFEQ *ZERO                                     084255
     C           ##@ROW    IFEQ *ZERO                                     084255
     C                     MOVE '1'       #VALID             row zero
     C                     ELSE
     C*
     C* A bias is applied to these positions,
     C*  since they are relative to the plane:
     C*                 ~~~~~~~~
     C********** #@TROW    SUB  #@ASRO    W#TROW  30                      084255
     C********** #@TCOL    SUB  #@ASCO    W#TCOL  30                      084255
     C           ##@ROW    SUB  #@ASRO    W#TROW  30                      084255
     C           ##@COL    SUB  #@ASCO    W#TCOL  30                      084255
     C*
     C* Seek the current row and column in the starting positions
     C*  array. If it isn't found (and it shouldn't be), check the
     C*  previous element in the starting and ending positions
     C*  array to check that there is no overlap:
     C*
     C                     Z-ADD1         @S      50
     C                     MOVELW#TROW    ##CRCL  6
     C                     MOVE W#TCOL    ##CRCL
     C           ##CRCL    LOKUPSPS,@S               42  43
     C           *IN43     IFEQ *ON                         'tis found!
     C                     MOVE '2'       #VALID              overlap --
     C                     MOVEL##CRCL    #ERDTA 18            same start
     C                     MOVE SEP,@S    SEPSDS
     C                     MOVE SEPSDS    #ERDTA
     C                     ELSE
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     MOVE SEP,@S    SEPSDS
     C           W#TROW    IFGE @@SROW
     C           W#TCOL    ANDGE@@SCOL
     C           W#TROW    ANDLE@@EROW
     C           W#TCOL    ANDLE@@ECOL
     C                     MOVE '2'       #VALID              overlap --
     C                     MOVEL##CRCL    #ERDTA               previous
     C                     MOVE SEPSDS    #ERDTA                field
     C                     ENDIF
     C*
     C* If valid so far, check the ending position of the field
     C*  against the current (higher) element in the array,
     C*  again to check that there is no overlap:
     C*
     C           #VALID    IFEQ 'Y'
     C           @S        ANDLT2000
     C           @S        ADD  1         @T      50
     C                     MOVE SEP,@T    SEPSDS
     C           @@SCOL    ADD  #1LEN     ##ECOL
     C                     SUB  1         ##ECOL
     C           @@SCOL    IFLE W#TCOL
     C           ##ECOL    ANDGEW#TCOL
     C           @@SROW    ANDLEW#TROW
     C           @@EROW    ANDGEW#TROW
     C                     MOVE '2'       #VALID              overlap --
     C                     MOVEL##CRCL    #ERDTA               next field
     C                     MOVE SEPSDS    #ERDTA
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If valid so far, check the starting and ending positions
     C*  of the field against the starting and ending positions
     C*  of the plane, to check that the field fits within it:
     C*
     C           #VALID    IFEQ 'Y'
     C********** #@TCOL    ADD  #1LEN                                     084255
     C***********          SUB  1         ##ECOL                          084255
     C********** #@TROW    IFLT #@ASRO                                    084255
     C********** #@TCOL    ORLT #@ASCO                                    084255
     C********** #@TROW    ORGT #@AERO                                    084255
     C           ##@COL    ADD  #1LEN     ##ECOL                          084255
     C                     SUB  1         ##ECOL                          084255
     C           ##@ROW    IFLT #@ASRO                                    084255
     C           ##@COL    ORLT #@ASCO                                    084255
     C           ##@ROW    ORGT #@AERO                                    084255
     C           ##ECOL    ORGT #@AECO                                    084255
     C                     MOVE '3'       #VALID               outside
     C                     ENDIF                                plane
     C                     ENDIF
     C*
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Error 2 (overlap) sends a warning message. Any other error clears
     C*  the warning flag. A second warning allows processing to continue:
     C*
     C                     SELEC
     C           #VALID    WHEQ '1'
     C                     MOVE 'CGD1302' #@MSID
     C                     MOVE *BLANK    #WARN
     C*
     C           #VALID    WHEQ '2'
     C                     MOVE 'CGD1324' #@MSID
     C                     MOVEL#ERDTA    #@MDTA
     C           #WARN     IFEQ '1'
     C                     MOVE '2'       #WARN
     C                     ELSE
     C                     MOVE '1'       #WARN
     C                     ENDIF
     C*
     C           #VALID    WHEQ '3'
     C                     MOVE 'CGD1325' #@MSID
     C                     MOVE *BLANK    #WARN
     C                     ENDSL
     C*
     C           EXVPOS    TAG                             <<<=== EXVPOS
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGRDE retrieves data for an RDE.                  **
     C********************************************************************
     C           SRGRDE    BEGSR                           * S R G R D E *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGRDE'  @STK,Q
     C*
     C           ##RDE     CHAINCGRDTAL0             90
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGRDTAL0'W0FILE
     C                     MOVEL##RDE     W0KEY            ***************
     C                     Z-ADD5         W0ERNB           ** Database  **
     C                     MOVEL'MEM5002' W0MSGD           ** error 5.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
      *                                                                   088435
     C                     SUB  1         Q                               088435
     C           @STK,Q    IFEQ 'SRADD '                                  088435
     C                     Z-ADDRDMAXL    ##MAXL
     C                     ELSE                                           088435
     C                     Z-ADDLROLEN    ##MAXL                          088435
     C                     ENDIF                                          088435
     C                     ADD  1         Q                               088435
     C*
     C           EXGRDE    TAG                             <<<=== EXGRDE
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRADD handles F6 (Add an element).                 **
     C********************************************************************
     C           SRADD     BEGSR                           * S R A D D   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRADD '  @STK,Q
     C*
     C* List available elements:
     C*
     C                     MOVEL#@RPTH    P2PTH1           Repeating path
     C                     MOVEL#@LRPT    P2PTH2           Last repeating
     C*
     C                     MOVE *BLANKS   P2RDE
     C                     MOVE 'N'       ##ADD   1
     C*
     C                     CALL 'CG8800'               90
     C                     PARM           P2RTN   7
     C                     PARM           P2PTH1  6
     C                     PARM           P2PTH2  6
     C                     PARM           P2DATA
     C*
     C* Trap error:
     C           P2RTN     IFNE *BLANKS
     C           P2RTN     ANDNE'Y2U9999'
     C           P2RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C                     MOVEL'CG8800  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD6         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 6.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If F3 was pressed in CG8800, exit this program:
     C*
     C           P2RTN     IFEQ 'Y2U9999'
     C                     SETON                     03
     C                     EXSR SREXPG
     C                     RETRN
     C                     ENDIF
     C*
     C* If the length returned is zero,
     C*  use the length of the example data:
     C*
     C           P2LEN     IFEQ *ZERO
     C           ' '       CHEKRP2ETXT    P2LEN
     C                     ENDIF
     C*
     C* Get the data element details, if neither F3 nor F12:
     C*
     C           P2RTN     IFEQ *BLANKS
     C                     MOVE P2RDE     ##RDE
     C                     EXSR SRGRDE
     C*
     C* Validate the new name:
     C*
     C                     EXSR SRVNAM
     C           #VALID    IFEQ 'N'
     C                     EXSR SRGNAM
     C                     ENDIF
     C*
     C           #VALID    IFEQ 'Y'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C                     MOVE 'CGD1303' #@MSID
     C                     MOVEL#1NFLD    #@MDTA
     C*
     C* Show plane for positioning until F12 or a valid position:
     C*
     C           *IN12     DOUEQ*ON
     C           #VALID    OREQ 'Y'
     C           #WARN     OREQ '2'
     C                     EXSR SRSHOW
     C*
     C* If not F12, validate the position:
     C*
     C           *IN12     IFEQ *OFF
     C                     Z-ADD##MAXL    #1LEN
     C                     Z-ADD#@TROW    ##@ROW  30                      084255
     C                     Z-ADD#@TCOL    ##@COL  30                      084255
     C                     EXSR SRVPOS
     C                     ENDIF
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Clear message values:
     C*
     C                     MOVE *BLANKS   #@MSID
     C                     MOVE *BLANKS   #@MDTA
     C*
     C* If a valid position, write a record:
     C*
     C           *IN12     IFEQ *OFF
     C           #VALID    ANDEQ'Y'
     C           *IN12     OREQ *OFF
     C           #WARN     ANDEQ'2'
     C                     MOVEL#@LAYO    LRLAYO
     C                     MOVEL#@PLAN    LRPLAN
     C                     MOVE 'D'       LRRECI
     C                     MOVEL#1NFLD    LRFLDN
     C                     MOVELP2RDE     LRRDE
     C                     MOVE *BLANK    LRLCVL
     C                     MOVE 'D'       LRLITD
     C                     MOVE *BLANKS   LRD256
     C                     MOVELP2RPTH    LRRPTH
     C                     MOVELP2NPTH    LRNPTH
     C                     Z-ADD##MAXL    LROLEN
     C           #@TCOL    ADD  LROLEN    #1ECOL
     C                     SUB  1         #1ECOL
     C*
     C* A bias is applied to these positions,
     C*  since they are relative to the plane:
     C*                 ~~~~~~~~
     C           #@TROW    SUB  #@ASRO    LRSROW
     C           #@TCOL    SUB  #@ASCO    LRSCOL
     C           #@TROW    SUB  #@ASRO    LREROW
     C           #1ECOL    SUB  #@ASCO    LRECOL
     C                     MOVE RDDESC    LRDESC
     C*
     C                     MOVE *BLANKS   LRCFMO
     C                     MOVE *BLANKS   LRCFOP
     C                     MOVE *BLANKS   LRCOPT
     C                     MOVE *BLANKS   LRCFTP
     C                     MOVE *BLANKS   LRNFMT
     C                     MOVE *BLANKS   LRNFOP
     C                     MOVE *BLANKS   LRALGN
     C                     Z-ADD*ZERO     LRFCON
     C                     Z-ADD*ZERO     LRTCGP
     C                     WRITE@PDEFPD                90
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFPD'W0FILE
     C                     MOVEL'*WRITE'  W0KEY            ***************
     C                     Z-ADD7         W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 7.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C                     MOVE 'Y'       ##EXIT
     C                     MOVE 'Y'       ##ADD
     C                     MOVE 'Y'       ##CHG
     C*
     C* Add the field directly to the display database:
     C*
     C                     EXSR SRAFLD
     C                     ENDIF
     C*
     C                     ENDIF
     C                     ENDIF
     C*
     C           EXADD     TAG                             <<<=== EXADD
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRAFLD adds a field directly to CGDISPWP.          **
     C********************************************************************
     C           SRAFLD    BEGSR                           * S R A F L D *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRAFLD'  @STK,Q
     C*
     C                     OPEN CGWPDISP
     C*
     C           #@TROW    CHAINCGWPDISP             95
     C           *IN95     IFEQ *OFF
     C           #@TCOL    SUB  1         TC      30
     C*
     C* The example text is moved to the display line.
     C* Note that this text is a maximum of 25 characters,
     C*  and the display line is limited to 256 characters:
     C*
     C                     DO   P2LEN     TL      30
     C           TL        IFLE 25
     C           TC        ANDLT256
     C                     ADD  1         TC
     C                     MOVE XDT,TL    DSP,TC
     C                     ENDIF
     C                     ENDDO
     C                     UPDAT@DSPFMT
     C                     ENDIF
     C*
     C                     CLOSECGWPDISP
     C                     MOVE 'Y'       W0RFR
     C                     MOVE 'Y'       ##CHG
     C*
     C           EXAFLD    TAG                             <<<=== EXAFLD
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCHEK looks for entries in the list of elements.  **
     C**  It also handles changes in start row or column.               **084255
     C********************************************************************
     C           SRCHEK    BEGSR                           * S R C H E K *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCHEK'  @STK,Q
     C*
     C* Check selections:
     C                     MOVE 'N'       #ERROR
     C                     MOVE 'N'       #ERR1   1
     C                     MOVE 'N'       #ERR2   1
     C                     MOVE 'N'       #ERR3   1
     C                     MOVE 'N'       #ERR4   1
     C                     MOVE 'N'       #ERR5   1                       084255
     C                     MOVE 'N'       #ERR6   1                       084604
     C                     Z-ADD*ZERO     RRN1
     C*
     C* Save and clear the subfile pointer:
     C*
     C                     Z-ADD##SFRC    ##SVRC  50
     C                     Z-ADD*ZERO     ##SFRC
     C*
     C           *IN92     DOUEQ*ON
     C                     READC#SFLRCD                  92
     C           *IN92     IFEQ *OFF
     C***********          SETOF                     3134                 084255
     C                     SETOF                     313436               084255
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Validate and convert the start row value:                         084604
     C*                                                                   084604
     C           #1SRWA    IFEQ *BLANKS                                   084604
     C                     Z-ADD*ZERO     #1SROW                          084604
     C                     ELSE                                           084604
     C                     MOVE #1SRWA    ZFIELD    P                     084604
     C*                                                                   084604
     C                     CALL 'ZALIGN'                                  084604
     C                     PARM *BLANKS   ZRTN    7                       084604
     C                     PARM           ZFIELD 16                       084604
     C                     PARM *ZERO     ZADEC   10                      084604
     C                     PARM 3         ZADIG   20                      084604
     C                     PARM           ZAFLD  16                       084604
     C*                                                                   084604
     C* Check the result code:                                            084604
     C*                                                                   084604
     C           ZRTN      IFNE *BLANKS                                   084604
     C                     MOVE 'Y'       #ERR6                           084604
     C                     SETON                     36                   084604
     C                     ELSE                                           084604
     C                     MOVE ZAFLD     #1SROW                          084604
     C                     ENDIF                                          084604
     C                     ENDIF                                          084604
     C*                                                                   084604
     C* Convert the start column value:                                   084604
     C*                                                                   084604
     C           #1SCLA    IFEQ *BLANKS                                   084604
     C                     Z-ADD*ZERO     #1SCOL                          084604
     C                     ELSE                                           084604
     C                     MOVE #1SCLA    ZFIELD    P                     084604
     C*                                                                   084604
     C                     CALL 'ZALIGN'                                  084604
     C                     PARM *BLANKS   ZRTN                            084604
     C                     PARM           ZFIELD                          084604
     C                     PARM *ZERO     ZADEC                           084604
     C                     PARM 3         ZADIG                           084604
     C                     PARM           ZAFLD                           084604
     C*                                                                   084604
     C* Check the result code:                                            084604
     C*                                                                   084604
     C           ZRTN      IFNE *BLANKS                                   084604
     C                     MOVE 'Y'       #ERR6                           084604
     C                     SETON                     36                   084604
     C                     ELSE                                           084604
     C                     MOVE ZAFLD     #1SCOL                          084604
     C                     ENDIF                                          084604
     C                     ENDIF                                          084604
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* The selection value must be A (amend);
     C*                             C (copy);
     C*                             D (delete);
     C*                             F (format);
     C*                             M (move);
     C*                             X (condition);
     C*                          or blank:
     C*
     C           #1SEL     IFNE *BLANK
     C           #1SEL     ANDNE'A'
     C           #1SEL     ANDNE'C'
     C           #1SEL     ANDNE'D'
     C           #1SEL     ANDNE'F'
     C           #1SEL     ANDNE'M'
     C           #1SEL     ANDNE'X'
     C           #1SEL     ANDNE'I'                                       100811
     C                     MOVE 'Y'       #ERR1
     C                     SETON                     31
     C                     ENDIF
     C*
     C* Only a literal (type L or Y) may be amended:
     C*
     C           #1SEL     IFEQ 'A'
     C           #1LITD    ANDNE'L'
     C           #1LITD    ANDNE'Y'
     C                     MOVE 'Y'       #ERR2
     C                     SETON                     31
     C                     ENDIF
     C*
     C* A literal (type L or Y) may not be formatted:
     C*
     C* * *      #1SEL     IFEQ 'F'
     C* * *      #1LITD    IFEQ 'L'
     C* * *      #1LITD    OREQ 'Y'
     C* * *                MOVE 'Y'       #ERR3
     C* * *                SETON                     31
     C* * *                ENDIF
     C* * *                ENDIF
     C*
     C* The previous value flag must be P or blank:
     C*
     C           #1PREV    IFNE *BLANK
     C           #1PREV    ANDNE'P'
     C                     MOVE 'Y'       #ERR4
     C                     SETON                     34
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Validate a changed position:                                      084255
     C*                                                                   084255
     C           #1SROW    IFNE #1SSRW                                    084255
     C           #1SCOL    ORNE #1SSCL                                    084255
     C           #1SROW    ADD  #@ASRO    ##@ROW                          084255
     C           #1SCOL    ADD  #@ASCO    ##@COL                          084255
     C                     EXSR SRVPOS                                    084255
     C           #VALID    IFNE 'Y'                                       084255
     C           #WARN     ANDNE'2'                                 085288084255
     C                     SETON                     36                   084255
     C                     MOVE 'Y'       #ERR5                           084255
     C                     ENDIF                                          084255
     C                     ENDIF                                          084255
     C*                                                                     4255
     C* Flag the subfile record as changed if a selection made,
     C*  if a changed "previous" flag is encountered, or                  084255
     C*  if a position has been changed:                                  084255
     C*
     C                     SETOF                     61
     C           #1SEL     IFNE *BLANK
     C           #1PREV    ORNE #1LCVL
     C           #1SROW    ORNE #1SSRW                                    084255
     C           #1SCOL    ORNE #1SSCL                                    084255
     C                     SETON                     61
     C                     ENDIF
     C*
     C* Protect the previous value if a literal:
     C*
     C                     SETOF                     35
     C           #1LITD    IFEQ 'L'
     C           #1LITD    OREQ 'Y'
     C                     SETON                     35
     C                     ENDIF
     C*
     C                     UPDAT#SFLRCD
     C                     ENDIF
     C                     ENDDO
     C*
     C* Invalid selection value:
     C*
     C           #ERR1     IFEQ 'Y'
     C                     MOVE 'CGD1314' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     MOVE 'Y'       #ERROR
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Attempt to amend a data value:
     C*
     C           #ERR2     IFEQ 'Y'
     C                     MOVE 'CGD1688' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     MOVE 'Y'       #ERROR
     C                     ENDIF
     C*
     C* Attempt to format a literal value:
     C*
     C           #ERR3     IFEQ 'Y'
     C                     MOVE 'CGD1689' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     MOVE 'Y'       #ERROR
     C                     ENDIF
     C*
     C* Invalid previous value flag:
     C*
     C           #ERR4     IFEQ 'Y'
     C                     MOVE 'CGD1677' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     MOVE 'Y'       #ERROR
     C                     ENDIF
     C*
     C* Invalid position:                                                 084255
     C*                                                                   084255
     C           #ERR5     IFEQ 'Y'                                       084255
     C                     MOVE #@MSID    ZAMSID                          084255
     C                     MOVEL'CGUSRMSG'ZAMSGF                          084255
     C                     EXSR SRSNMS                                    084255
     C                     MOVE 'Y'       #ERROR                          084255
     C                     MOVE *BLANKS   #@MSID                          084255
     C                     ENDIF                                          084255
     C*
     C* Invalid row or column number:                                     084604
     C*                                                                   084604
     C           #ERR6     IFEQ 'Y'                                       084604
     C                     MOVE 'CGD1837' ZAMSID                          084604
     C                     MOVEL'CGUSRMSG'ZAMSGF                          084604
     C                     EXSR SRSNMS                                    084604
     C                     MOVE 'Y'       #ERROR                          084604
     C                     MOVE *BLANKS   #@MSID                          084604
     C                     ENDIF                                          084604
     C*...................................................................
     C/EJECT
     C*...................................................................
     C*********** Check for valid selections or changed "previous" flags: 084255
     C* Check for valid selections,                                       084255
     C*  changed "previous" flags, or                                     084255
     C*  changed start position:                                          084255
     C*
     C                     Z-ADD1         RRN1
     C*
     C           #ERROR    IFEQ 'N'
     C           *IN92     DOUEQ*ON
     C           *IN03     OREQ *ON
     C           *IN12     OREQ *ON
     C                     READC#SFLRCD                  92
     C           *IN92     IFEQ *OFF
     C           #1SEL     ANDNE*BLANK
     C           *IN92     OREQ *OFF
     C           #1PREV    ANDNE#1LCVL
     C           *IN92     OREQ *OFF                                      084255
     C           #1SROW    ANDNE#1SSRW                                    084255
     C           *IN92     OREQ *OFF                                      084255
     C           #1SCOL    ANDNE#1SSCL                                    084255
     C                     MOVE #1SEL     #1SELX                          085288
     C                     MOVE *BLANK    #1SEL                           085288
     C                     UPDAT#SFLRCD                                   085288
     C                     EXSR SRACT
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
     C*
     C* If no selection, reset the subfile pointer:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADD##SVRC    ##SFRC
     C                     ENDIF
     C*
     C* If still zero (due to some error), set the pointer to 1:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADD1         ##SFRC
     C                     ENDIF
     C*
     C           EXCHEK    TAG                             <<<=== EXCHEK
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRACT checks changed field subfile records.        **
     C********************************************************************
     C           SRACT     BEGSR                           * S R A C T   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRACT '  @STK,Q
     C*
     C                     MOVE 'Y'       ##EXIT
     C*
     C* Clear the field name:
     C*
     C                     MOVE *BLANKS   #@FLDN
     C*
     C* Get the data element details:
     C*
     C                     MOVEL#1ELEM    ##RDE
     C           ##RDE     IFNE *BLANK
     C                     EXSR SRGRDE
     C                     ENDIF
     C*
     C* If the first selection or change, reset the subfile pointer:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADDRRN1      ##SFRC
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Select the action:
     C*
     C********** #1SEL     CASEQ'A'       SRAMND                          085288
     C********** #1SEL     CASEQ'C'       SRCOPY                          085288
     C********** #1SEL     CASEQ'M'       SRMOVE                          085288
     C********** #1SEL     CASEQ'D'       SRDEL                           085288
     C********** #1SEL     CASEQ'F'       SRFORM                          085288
     C********** #1SEL     CASEQ'X'       SRCOND                          085288
     C*                                                                   085288
     C           #1SELX    CASEQ'A'       SRAMND                          085288
     C           #1SELX    CASEQ'C'       SRCOPY                          085288
     C           #1SELX    CASEQ'M'       SRMOVE                          085288
     C           #1SELX    CASEQ'D'       SRDEL                           085288
     C           #1SELX    CASEQ'F'       SRFORM                          085288
     C           #1SELX    CASEQ'X'       SRCOND                          085288
     C           #1SELX    CASEQ'I'       SRIDEN                          100811
     C           #1PREV    CASNE#1LCVL    SRUPDP
     C           #1SROW    CASNE#1SSRW    SRCPOS                          084255
     C           #1SCOL    CASNE#1SSCL    SRCPOS                          084255
     C                     ENDCS
     C*
     C           EXACT     TAG                             <<<=== EXACT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCOPY handles selection "C" (Copy an element).    **
     C********************************************************************
     C           SRCOPY    BEGSR                           * S R C O P Y *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCOPY'  @STK,Q
     C*
     C* Validate the new name:
     C*
     C                     EXSR SRVNAM
     C           #VALID    IFEQ 'N'
     C                     EXSR SRGNAM
     C                     ENDIF
     C*
     C           #VALID    IFEQ 'Y'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C                     MOVE 'CGD1303' #@MSID
     C                     MOVEL#1NFLD    #@MDTA
     C*
     C* Show plane for positioning until F12 or a valid position:
     C*
     C           *IN12     DOUEQ*ON
     C           #VALID    OREQ 'Y'
     C           #WARN     OREQ '2'
     C                     EXSR SRSHOW
     C*
     C* If not F12, validate the position:
     C*
     C           *IN12     IFEQ *OFF
     C                     Z-ADD#@TROW    ##@ROW                          084255
     C                     Z-ADD#@TCOL    ##@COL                          084255
     C                     EXSR SRVPOS
     C                     ENDIF
     C                     ENDDO
     C*
     C                     MOVE *BLANKS   #@MSID
     C                     MOVE *BLANKS   #@MDTA
     C*...................................................................
     C/EJECT
     C*...................................................................
     C*********** If valid, update the subfile and do the copy:           085288
     C* If valid, do the copy:                                            085288
     C*
     C           *IN12     IFEQ *OFF
     C           #VALID    ANDEQ'Y'
     C           *IN12     OREQ *OFF
     C           #WARN     ANDEQ'2'
     C********** RRN1      CHAIN#SFLRCD              92                   085288
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C*
     C                     Z-ADD#1NUM     #C
     C                     ADD  1         #R
     C                     Z-ADD#@TROW    SRW,#R
     C                     Z-ADD#@TCOL    SCL,#R
     C                     Z-ADDLEN,#C    LEN,#R
     C*
     C* Calculate the ending column:
     C*
     C           #@TCOL    ADD  LEN,#R    #1ECOL
     C                     SUB  1         #1ECOL
     C                     Z-ADD#1ECOL    ECL,#R
     C*
     C* Write a record to the file based on the existing record:
     C*
     C           KKPDEF    CHAINCGPDEFL0            N93
     C           *IN93     IFEQ *OFF
     C                     MOVEL#1NFLD    LRFLDN
     C                     ADD  1         #HISEQ
     C                     MOVE #HISEQ    LRSEQA
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* A bias is applied to these positions,
     C*  since they are relative to the plane:
     C*                 ~~~~~~~~
     C           #@TROW    SUB  #@ASRO    LRSROW
     C           #@TCOL    SUB  #@ASCO    LRSCOL
     C           #@TROW    SUB  #@ASRO    LREROW
     C           #1ECOL    SUB  #@ASCO    LRECOL
     C*                                                                   084246
     C* Clear conditions:                                                 084246
     C                     Z-ADD*ZERO     LRFCON                          084246
     C                     Z-ADD*ZERO     LRTCGP                          084246
     C                     WRITE@PDEFPD                90
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFPD'W0FILE
     C                     MOVEL'*WRITE  'W0KEY            ***************
     C                     Z-ADD8         W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 8.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C                     MOVE 'Y'       ##CHG
     C                     ENDIF
     C*********** else F12:                                               085288
     C***********          ELSE                                           085288
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C                     ENDIF
     C                     ENDIF
     C*
     C           EXCOPY    TAG                             <<<=== EXCOPY
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRMOVE handles selection "M" (Move an element).    **
     C********************************************************************
     C           SRMOVE    BEGSR                           * S R M O V E *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRMOVE'  @STK,Q
     C*
     C* Show plane for positioning until F12 or a valid position:
     C*
     C                     MOVE 'CGD1303' #@MSID
     C                     MOVEL#1FLD     #@MDTA
     C*
     C           *IN12     DOUEQ*ON
     C           #VALID    OREQ 'Y'
     C           #WARN     OREQ '2'
     C                     EXSR SRSHOW
     C*
     C* If not F12, validate the position:
     C*
     C           *IN12     IFEQ *OFF
     C                     Z-ADD#@TROW    ##@ROW                          084255
     C                     Z-ADD#@TCOL    ##@COL                          084255
     C                     EXSR SRVPOS
     C                     ENDIF
     C                     ENDDO
     C*
     C                     MOVE *BLANKS   #@MSID
     C                     MOVE *BLANKS   #@MDTA
     C*
     C*********** If valid, update the subfile and do the move;           085288
     C* If valid, do the move;                                            085288
     C*  if invalid, tag "no exit":
     C*
     C           *IN12     IFEQ *OFF
     C           #VALID    ANDEQ'Y'
     C           *IN12     OREQ *OFF
     C           #WARN     ANDEQ'2'
     C********** RRN1      CHAIN#SFLRCD              92                   085288
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C*
     C                     Z-ADD#1NUM     #C
     C                     Z-ADD#@TROW    SRW,#C
     C                     Z-ADD#@TCOL    SCL,#C
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Calculate the ending column:
     C*
     C           #@TCOL    ADD  LEN,#C    #1ECOL
     C                     SUB  1         #1ECOL
     C                     Z-ADD#1ECOL    ECL,#C
     C*
     C* Update file values:
     C*
     C           KKPDEF    CHAINCGPDEFL0             93
     C           *IN93     IFEQ *OFF
     C*
     C* A bias of -1 is applied to the positions,
     C*  since they are relative to the plane:
     C*                 ~~~~~~~~
     C           #@TROW    SUB  #@ASRO    LRSROW
     C           #@TCOL    SUB  #@ASCO    LRSCOL
     C           #@TROW    SUB  #@ASRO    LREROW
     C           #1ECOL    SUB  #@ASCO    LRECOL
     C                     UPDAT@PDEFL0                90
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFL0'W0FILE
     C                     MOVEL'*UPDATE 'W0KEY            ***************
     C                     Z-ADD9         W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 9.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C                     MOVE 'Y'       ##CHG
     C                     ENDIF
     C*********** else F12:ELSE                                           085288
     C***********          ELSE                                           085288
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C                     ENDIF
     C*
     C           EXMOVE    TAG                             <<<=== EXMOVE
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRVNAM validates the new name for Add or Copy.     **
     C********************************************************************
     C           SRVNAM    BEGSR                           * S R V N A M *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRVNAM'  @STK,Q
     C*
     C                     MOVE 'Y'       #VALID
     C           #1NFLD    IFEQ *BLANKS
     C                     MOVE 'N'       #VALID
     C                     MOVE 'CGD1557' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     ELSE
     C           KKDEFL    SETLLCGPDEFL0                 92
     C           *IN92     IFEQ *ON
     C                     MOVE 'N'       #VALID
     C                     MOVE 'CGD1365' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     ENDIF
     C                     ENDIF
     C*
     C           EXVNAM    TAG                             <<<=== EXVNAM
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGNAM gets a name to replace that rejected        **
     C**   by subroutine SRVNAM.                                        ++
     C********************************************************************
     C           SRGNAM    BEGSR                           * S R G N A M *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGNAM'  @STK,Q
     C*
     C* Do until F3 (exit), F12 (previous) or a valid name:
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           #VALID    OREQ 'Y'
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     SELEC
     C           ##TYPE    WHEQ 'F'
     C                     WRITE#WINDOW1
     C                     WRITE#MSGCTL1
     C                     WRITE#CMDTXT
     C                     EXFMT#SFLCTL
     C           ##TYPE    WHEQ 'L'
     C                     WRITE#WINDOW2
     C                     WRITE#MSGCTL2
     C                     EXFMT#LITERAL
     C                     ENDSL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* If neither F3 nor F12, validate the name:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C                     EXSR SRVNAM
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXGNAM    TAG                             <<<=== EXGNAM
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDEL handles selection "D" (Delete an element).   **
     C********************************************************************
     C           SRDEL     BEGSR                           * S R D E L   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDEL '  @STK,Q
     C*
     C* Clear messages from the program's message queue:
     C*
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* Send "Press F10 to confirm deletion":
     C*
     C                     MOVE 'CGD1315' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     MOVEL#1FLD     ZAMSDA
     C                     EXSR SRSNMS
     C*
     C*********** Clear the subfile record and tag exit:                  085288
     C* Tag exit:                                                         085288
     C*
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C                     MOVE 'Y'       ##EXIT
     C*
     C* Allow F10 and F12 only:
     C*
     C                     SETON                     41
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Do until F10 (Confirm delete) or F12 (Cancel delete):
     C*
     C           *IN10     DOUEQ*ON
     C           *IN12     OREQ *ON
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#WINDOW1
     C                     WRITE#MSGCTL1
     C                     WRITE#CMDTXT
     C                     EXFMT#SFLCTL
     C*
     C* F10 (Confirm):
     C*
     C           *IN10     IFEQ *ON
     C*
     C* Ensure referential integrity -- delete dependent conditions:
     C*
     C                     MOVE *BLANKS   P@RTCD
     C***********          MOVE '*LDELETE'P@ACTN                          096538
     C                     MOVE '*PDELETE'P@ACTN                          096538
     C                     MOVE #@LAYO    P1LAYO
     C                     MOVE #@PLAN    P1PLAN
     C                     MOVE #1FLD     P1FLDN
     C                     Z-ADD*ZERO     P1TCGP
     C                     Z-ADD*ZERO     P1CID
     C*
     C                     CALL 'CG0499'               9090
     C                     PARM           P@RTCD  7
     C                     PARM           P@ACTN  8
     C                     PARM           P1PARM
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Trap error:
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'CG0499'  W0FILE
     C                     MOVEL'*CALL   'W0KEY            ***************
     C                     Z-ADD10        W0ERNB           ** Database  **
     C                     MOVE 'MEM5003' W0MSGD           ** error 10. **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C           KKPDEF    CHAINCGPDEFL0             93
     C           *IN93     IFEQ *OFF
     C                     DELET@PDEFL0
     C                     MOVE 'Y'       ##CHG
     C                     ENDIF
     C*
     C                     ENDIF
     C                     ENDDO
     C* Reset F12:
     C                     SETOF                     12
     C* Reset toggle:
     C                     SETOF                     41
     C*
     C           EXDEL     TAG                             <<<=== EXDEL
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCONF handles F5 or reply "Y" (confirm changes).  **
     C********************************************************************
     C           SRCONF    BEGSR                           * S R C O N F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCONF'  @STK,Q
     C*
     C*********** Commit changes:                                         088478
     C***********          COMIT                                          088478
     C*                                                                   088478
     C* Execute CG8250 to commit the changes:                             088478
     C*                                                                   088478
     C                     CALL 'CG8250'                                  088478
     C                     PARM           P5RTN   7                       088478
     C                     PARM 'C'       P5RPLY  1                       088478
     C                     PARM *BLANKS   P5MSG   7                       088478
     C*
     C* Resequence this plane by start row and column:
     C*
     C                     MOVE *ALL'9'   SRT
     C                     Z-ADD*ZERO     #T      50
     C           KKDEFS    SETLLCGPDEFL0
     C*
     C           *IN91     DOUEQ*ON
     C           KKDEFS    READECGPDEFL0            N    91
     C           *IN91     IFEQ *OFF
     C                     ADD  1         #T
     C                     Z-ADDLRSROW    #XSROW
     C                     Z-ADDLRSCOL    #XSCOL
     C                     MOVELLRFLDN    #XFLDN
     C                     MOVE PDEFDS    SRT,#T
     C                     ENDIF
     C                     ENDDO
     C* Sort the array:
     C                     SORTASRT
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Reset the sequence counter:
     C*
     C                     Z-ADD*ZERO     #XSEQ   30
     C*
     C* Read and update:
     C                     DO   #T        #V      30
     C                     MOVE SRT,#V    PDEFDS
     C           KKCONF    CHAINCGPDEFL0             91
     C           *IN91     IFEQ *OFF
     C                     ADD  1         #XSEQ
     C                     MOVE #XSEQ     LRSEQA
     C                     UPDAT@PDEFL0
     C                     ENDIF
     C                     ENDDO
     C*
     C*********** Commit changes:                                         088478
     C***********          COMIT                                          088478
     C*                                                                   088478
     C* Execute CG8250 to commit the changes:                             088478
     C*                                                                   088478
     C                     CALL 'CG8250'                                  088478
     C                     PARM           P5RTN                           088478
     C                     PARM 'C'       P5RPLY                          088478
     C                     PARM *BLANKS   P5MSG                           088478
     C*
     C* Clear the changes flag:
     C*
     C                     MOVE *BLANK    ##CHG
     C*
     C* Refresh the display:
     C                     CALL 'CGC3003'
     C                     PARM           P4RTN
     C                     PARM 'CGWPDISP'P4FILE
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN
     C                     PARM '*DISPLAY'P3ACT
     C                     PARM           P#PGEN                                              222373
     C*
     C           EXCONF    TAG                             <<<=== EXCONF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCAN handles reply "N" (cancel changes).          **084478
     C********************************************************************
     C           SRCAN     BEGSR                           * S R C A N   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCAN '  @STK,Q
     C***********                                                         084478
     C*********** Rollback changes:                                       084478
     C***********          ROLBK                                          084478
     C*                                                                   088478
     C* Execute CG8250 to rollback the changes:                           088478
     C*                                                                   088478
     C                     CALL 'CG8250'                                  088478
     C                     PARM           P5RTN                           088478
     C                     PARM 'R'       P5RPLY                          088478
     C                     PARM *BLANKS   P5MSG                           088478
     C*                                                                   084478
     C* Clear the changes flag:
     C*
     C                     MOVE *BLANK    ##CHG
     C*
     C           EXCAN     TAG                             <<<=== EXCAN
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCOND handles selection "X" (Conditions).         **
     C********************************************************************
     C           SRCOND    BEGSR                           * S R C O N D *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCOND'  @STK,Q
     C*
     C*********** Clear the subfile record:                               085288
     C*
     C***********          MOVE *BLANK    #1SEL                           085288
     C***********          UPDAT#SFLRCD                                   085288
     C*
     C* Set the type:
     C                     MOVE 'C'       ##TYPE           C = Conditions
     C*
     C* Tag changed:
     C                     MOVE 'Y'       ##CHG
     C*
     C* Write the field name and the association ID to the LDA:
     C*
     C                     MOVE #1FLD     #@FLDN
     C*
     C* Move the "Next" and "Previous" program names:
     C*
     C                     MOVEL'CG8400'  #@NEXT    P
     C                     MOVEL'CG8200'  #@LAST    P
     C*
     C                     OUT  BIGLDA
     C*
     C* Exit to transfer control to CG8400:
     C*
     C                     RETRN
     C*
     C           EXCOND    TAG                             <<<=== EXCOND
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************100811
     C**  Subroutine SRIDEN handles selection "I" (Identification).     **100811
     C********************************************************************100811
     C           SRIDEN    BEGSR                           * S R I D E N *100811
     C*                                                                   100811
     C* Add subroutine name to stack:                                     100811
     C*                                                                   100811
     C                     ADD  1         Q                               100811
     C                     MOVEL'SRIDEN'  @STK,Q                          100811
     C*                                                                   100811
     C* Retrieve Path information                                         100811
     C*                                                                   100811
     C           KKPDEF    CHAINCGPDEFL0             93                   100811
     C           *IN93     IFEQ '1'                                       100811
     C           #1ELEM    OREQ *BLANKS                                   100811
     C                     MOVEL*BLANKS   INPTH   6                       100811
     C                     MOVEL*BLANKS   IRDE   10                       100811
     C                     ELSE                                           100811
     C                     MOVELLRNPTH    INPTH                           100811
     C                     MOVELLRRDE     IRDE                            100811
     C                     END                                            100811
     C*                                                                   100811
     C* Call Identification program                                       100811
     C                     CALL 'CG8200A'                                 100811
     C                     PARM           INPTH                           100811
     C                     PARM           IRDE                            100811
     C*                                                                   100811
     C* Do not exit after window                                          100811
     C*                                                                   100811
     C                     MOVE 'N'       ##EXIT                          100811
     C*                                                                   100811
     C* Unwind subroutine stack:                                          100811
     C*                                                                   100811
     C                     MOVE *BLANKS   @STK,Q                          100811
     C                     SUB  1         Q                               100811
     C*                                                                   100811
     C                     ENDSR                                          100811
     C********************************************************************100811
     C/EJECT                                                              100811
     C********************************************************************084255
     C**  Subroutine SRCPOS handles a changed row or column position.   **084255
     C********************************************************************084255
     C           SRCPOS    BEGSR                           * S R C P O S *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRCPOS'  @STK,Q                          084255
     C*                                                                   084255
     C* Update the subfile and do the move:                               084255
     C*                                                                   084255
     C           RRN1      CHAIN#SFLRCD              92                   084255
     C                     Z-ADD#1SROW    #1SSRW                          084255
     C                     Z-ADD#1SCOL    #1SSCL                          084255
     C                     UPDAT#SFLRCD                                   084255
     C*                                                                   084255
     C* Calculate positions relative to the plane:                        084255
     C*                                                                   084255
     C           #1SROW    ADD  #@ASRO    #@TROW                          084255
     C           #1SCOL    ADD  #@ASCO    #@TCOL                          084255
     C*                                                                   084255
     C                     Z-ADD#1NUM     #C                              084255
     C                     Z-ADD#@TROW    SRW,#C                          084255
     C                     Z-ADD#@TCOL    SCL,#C                          084255
     C*                                                                   084255
     C* Calculate the ending column:                                      084255
     C*                                                                   084255
     C           #@TCOL    ADD  LEN,#C    #1ECOL                          084255
     C                     SUB  1         #1ECOL                          084255
     C                     Z-ADD#1ECOL    ECL,#C                          084255
     C*...................................................................084255
     C/EJECT
     C*...................................................................084255
     C* Update file values:                                               084255
     C*                                                                   084255
     C           KKPDEF    CHAINCGPDEFL0             93                   084255
     C           *IN93     IFEQ *OFF                                      084255
     C*                                                                   084255
     C* A bias of -1 is applied to the positions,                         084255
     C*  since they are relative to the plane:                            084255
     C*                 ~~~~~~~~                                          084255
     C           #@TROW    SUB  #@ASRO    LRSROW                          084255
     C           #@TCOL    SUB  #@ASCO    LRSCOL                          084255
     C           #@TROW    SUB  #@ASRO    LREROW                          084255
     C           #1ECOL    SUB  #@ASCO    LRECOL                          084255
     C                     UPDAT@PDEFL0                90                 084255
     C* Trap error:                                                       084255
     C           *IN90     IFEQ *ON                                       084255
     C                     MOVEL'CGPDEFL0'W0FILE                          084255
     C                     MOVEL'*UPDATE 'W0KEY            ***************084255
     C                     Z-ADD15        W0ERNB           ** Database  **084255
     C                     MOVE 'MEM5002' W0MSGD           ** error 15. **084255
     C                     MOVEL'MIDAS  ' W0MSGF           ***************084255
     C                     EXSR SRERR                                     084255
     C                     ENDIF                                          084255
     C                     MOVE 'Y'       ##CHG                           084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C           EXCPOS    TAG                             <<<=== EXCPOS  084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT
     C********************************************************************
     C**  Subroutine SRLIT handles F14 (Add a literal).                 **
     C********************************************************************
     C           SRLIT     BEGSR                           * S R L I T   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLIT '  @STK,Q
     C*
     C* Clear the text; move the label for the field name;
     C*  tag "no exit"; tag "literal"; unprotect:
     C*
     C                     MOVE *BLANKS   #2TEXT
     C                     MOVE #RQLIT    #2FLBL
     C                     MOVE 'N'       ##EXIT
     C                     MOVE 'L'       ##TYPE
     C                     SETOF                     33
     C*
     C* Do until F3 (exit), F12 (previous) or Exit:
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           ##EXIT    OREQ 'Y'
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#WINDOW2
     C                     WRITE#MSGCTL2
     C                     EXFMT#LITERAL
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Get position, validate position, add the literal:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C           #2TEXT    ANDNE*BLANKS
     C*
     C* Find the length of the literal:
     C*
     C           ' '       CHEKR#2TEXT    ##MAXL
     C*
     C           ##MAXL    IFGE #@AECO                                    126764
     C                     MOVE 'N'       #VALID                          126764
     C                     MOVE 'CGD1530' ZAMSID                          126764
     C                     MOVEL'CGUSRMSG'ZAMSGF                          126764
     C                     EXSR SRSNMS                                    126764
     C                     ELSE                                           126764
     C* Add the literal:
     C                     EXSR SRALIT
     C                     ENDIF                                          126764
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXLIT     TAG                             <<<=== EXLIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRALIT adds the entered literal.                   **
     C********************************************************************
     C           SRALIT    BEGSR                           * S R A L I T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRALIT'  @STK,Q
     C*
     C* Validate the new name:
     C*
     C                     EXSR SRVNAM
     C           #VALID    IFEQ 'N'
     C                     EXSR SRGNAM
     C                     ENDIF
     C*
     C           #VALID    IFEQ 'Y'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C                     MOVE 'CGD1303' #@MSID
     C                     MOVEL#1NFLD    #@MDTA
     C*
     C* Show plane for positioning until F12 or a valid position:
     C*
     C           *IN12     DOUEQ*ON
     C           #VALID    OREQ 'Y'
     C           #WARN     OREQ '2'
     C                     EXSR SRSHOW
     C*
     C* If not F12, validate the position:
     C*
     C           *IN12     IFEQ *OFF
     C                     Z-ADD##MAXL    #1LEN
     C                     Z-ADD#@TROW    ##@ROW                          084255
     C                     Z-ADD#@TCOL    ##@COL                          084255
     C                     EXSR SRVPOS
     C                     ENDIF
     C                     ENDDO
     C*
     C                     MOVE *BLANKS   #@MSID
     C                     MOVE *BLANKS   #@MDTA
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If a valid position, write a record:
     C*
     C           *IN12     IFEQ *OFF
     C           #VALID    ANDEQ'Y'
     C           *IN12     OREQ *OFF
     C           #WARN     ANDEQ'2'
     C                     MOVEL#@LAYO    LRLAYO
     C                     MOVEL#@PLAN    LRPLAN
     C                     MOVEL#1NFLD    LRFLDN
     C                     MOVE 'D'       LRRECI
     C                     ADD  1         #HISEQ
     C                     MOVE #HISEQ    LRSEQA
     C                     MOVE *BLANKS   LRRDE
     C                     MOVE *BLANK    LRLCVL
     C                     MOVE 'L'       LRLITD
     C                     MOVEL#2TEXT    LRD256
     C                     MOVEL#@RPTH    LRRPTH
     C                     MOVEL#@LRPT    LRNPTH
     C                     Z-ADD##MAXL    LROLEN
     C           #@TCOL    ADD  LROLEN    #1ECOL
     C                     SUB  1         #1ECOL
     C*
     C* A bias is applied to these positions,
     C*  since they are relative to the plane:
     C*                 ~~~~~~~~
     C           #@TROW    SUB  #@ASRO    LRSROW
     C           #@TCOL    SUB  #@ASCO    LRSCOL
     C           #@TROW    SUB  #@ASRO    LREROW
     C           #1ECOL    SUB  #@ASCO    LRECOL
     C*
     C           ##LIT     CAT  LRD256:1  LRDESC    P
     C*
     C                     MOVE *BLANKS   LRCFMO
     C                     MOVE *BLANKS   LRCFOP
     C                     MOVE *BLANKS   LRCOPT
     C                     MOVE *BLANKS   LRCFTP
     C                     MOVE *BLANKS   LRNFMT
     C                     MOVE *BLANKS   LRNFOP
     C*
     C           P2ETYP    IFEQ '*DEC  '
     C                     MOVE P2FOPT    LRNFMT
     C                     ELSE
     C           P2ETYP    IFEQ '*CODE '
     C                     MOVE P2FOPT    LRCOPT
     C                     ELSE
     C                     MOVE P2FOPT    LRCFMO
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     MOVE *BLANKS   LRALGN
     C                     Z-ADD*ZERO     LRFCON
     C                     Z-ADD*ZERO     LRTCGP
     C                     WRITE@PDEFPD                90
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFPD'W0FILE
     C                     MOVEL'*WRITE'  W0KEY            ***************
     C                     Z-ADD11        W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 11. **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C                     MOVE 'Y'       ##EXIT
     C                     MOVE 'Y'       ##CHG
     C                     ENDIF
     C                     ENDIF
     C*
     C           EXALIT    TAG                             <<<=== EXALIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRAMND displays a literal for amendment.           **
     C********************************************************************
     C           SRAMND    BEGSR                           * S R A M N D *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRAMND'  @STK,Q
     C*
     C           KKPDEF    CHAINCGPDEFL0            N93
     C           *IN93     IFEQ *OFF
     C           LRLITD    ANDEQ'L'
     C           *IN93     OREQ *OFF
     C           LRLITD    ANDEQ'Y'
     C*
     C* Move the text; move the label for the field name;
     C*  tag "no exit"; protect the field name:
     C*
     C                     MOVE LRD256    #2TEXT
     C                     MOVE #EXLIT    #2FLBL
     C                     MOVE 'N'       ##EXIT
     C                     MOVE LRFLDN    #1NFLD
     C                     SETON                     33
     C*
     C* Do until F3 (exit), F12 (previous) or Exit:
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           ##EXIT    OREQ 'Y'
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#WINDOW2
     C                     WRITE#MSGCTL2
     C                     EXFMT#LITERAL
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Get position, validate position, add the literal:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C           #2TEXT    ANDNE*BLANKS
     C*
     C* Find the length of the literal:
     C*
     C           ' '       CHEKR#2TEXT    ##MAXL
     C*
     C           ##MAXL    IFGE #@AECO                                    126764
     C                     MOVE 'N'       #VALID                          126764
     C                     MOVE 'CGD1530' ZAMSID                          126764
     C                     MOVEL'CGUSRMSG'ZAMSGF                          126764
     C                     EXSR SRSNMS                                    126764
     C                     ELSE                                           126764
     C* Update the record:
     C                     EXSR SRULIT
     C                     ENDIF                                          126764
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
     C*
     C           EXAMND    TAG                             <<<=== EXAMND
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRULIT updates the existing literal.               **
     C********************************************************************
     C           SRULIT    BEGSR                           * S R U L I T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRULIT'  @STK,Q
     C*
     C           KKPDEF    CHAINCGPDEFL0             93
     C           *IN93     IFEQ *OFF
     C                     MOVEL#2TEXT    LRD256
     C                     Z-ADD##MAXL    LROLEN
     C           #@TCOL    ADD  LROLEN    #1ECOL
     C                     SUB  1         #1ECOL
     C*
     C* A bias is applied to this position,
     C*  since it is relative to the plane:
     C*              ~~~~~~~~
     C           #1ECOL    SUB  #@ASCO    LRECOL
     C*
     C           ##LIT     CAT  LRD256:1  LRDESC    P
     C                     UPDAT@PDEFL0                90
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFPD'W0FILE
     C                     MOVEL'*WRITE'  W0KEY            ***************
     C                     Z-ADD12        W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 12. **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C                     ENDIF
     C*
     C                     MOVE 'Y'       ##EXIT
     C                     MOVE 'Y'       ##CHG
     C*
     C           EXULIT    TAG                             <<<=== EXULIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRFORM handles selection "F" -- format options.    **
     C********************************************************************
     C           SRFORM    BEGSR                           * S R F O R M *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRFORM'  @STK,Q
     C*
     C* Use CG8600 to select the formatting option desired:
     C*
     C                     MOVE #1FLD     P7FLDN
     C*
     C                     CALL 'CG8600'
     C                     PARM           P7RTN   7
     C                     PARM           P7FLDN 10
     C* Trap error:
     C           P7RTN     IFNE *BLANKS
     C           P7RTN     ANDNE'Y2U9999'
     C           P7RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C                     MOVEL'CG8600  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD13        W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 13. **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* If not F3 or F12, assume updated:
     C*
     C           P7RTN     IFEQ *BLANKS
     C                     MOVE 'Y'       ##CHG
     C                     ENDIF
     C*
     C* If F12, return to subfile display:
     C*
     C           P7RTN     IFEQ 'USR0790'
     C                     MOVE 'N'       ##EXIT
     C                     ENDIF
     C*
     C           EXFORM    TAG                             <<<=== EXFORM
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRREV reviews the layout details.                  **
     C********************************************************************
     C           SRREV     BEGSR                           * S R R E V   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRREV '  @STK,Q
     C*
     C                     MOVE *BLANKS   #@FLDN
     C                     MOVE *BLANKS   #@MSID
     C                     MOVEL'CG8300'  #@NEXT    P
     C                     MOVEL'CG8200'  #@LAST    P
     C*
     C* Exit this program:
     C                     EXSR SREXPG
     C                     RETRN
     C*
     C           EXREV     TAG                             <<<=== EXREV
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRUPDP updates the last / current value flag.      **
     C********************************************************************
     C           SRUPDP    BEGSR                           * S R U P D P *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRUPDP'  @STK,Q
     C*
     C           KKPDEF    CHAINCGPDEFL0             93
     C           *IN93     IFEQ *OFF
     C                     MOVE #1PREV    LRLCVL
     C                     UPDAT@PDEFL0                90
     C* Trap error:
     C           *IN90     IFEQ *ON
     C                     MOVEL'CGPDEFPD'W0FILE
     C                     MOVEL'*WRITE'  W0KEY            ***************
     C                     Z-ADD14        W0ERNB           ** Database  **
     C                     MOVE 'MEM5002' W0MSGD           ** error 14. **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C                     ENDIF
     C*
     C* Update the array value:
     C*
     C                     Z-ADD#1NUM     #C
     C                     MOVE #1PREV    PRV,#C
     C*
     C                     MOVE 'Y'       ##EXIT
     C                     MOVE 'Y'       ##CHG
     C*
     C           EXUPDP    TAG                             <<<=== EXUPDP
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT                                                              084255
     C********************************************************************084255
     C**  Subroutine SRRSEQ resequences the list of fields.             **084255
     C********************************************************************084255
     C           SRRSEQ    BEGSR                           * S R R S E Q *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRRSEQ'  @STK,Q                          084255
     C*                                                                   084255
     C           W0FSEQ    IFEQ '1'                                       084255
     C                     MOVE '2'       W0FSEQ                          084255
     C                     EXSR SRBLD2                                    084255
     C                     ELSE                                           084255
     C                     MOVE '1'       W0FSEQ                          084255
     C                     EXSR SRBLD1                                    084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C           EXRSEQ    TAG                             <<<=== EXRSEQ  084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT                                                              084255
     C********************************************************************084255
     C**  Subroutine SRFTXT displays the alternative function-key text. **084255
     C********************************************************************084255
     C           SRFTXT    BEGSR                           * S R F T X T *084255
     C*                                                                   084255
     C* Add subroutine name to stack:                                     084255
     C*                                                                   084255
     C                     ADD  1         Q                               084255
     C                     MOVEL'SRFTXT'  @STK,Q                          084255
     C*                                                                   084255
     C           W0FSET    IFEQ '1'                                       084255
     C                     MOVE '2'       W0FSET                          084255
     C                     MOVE ##CM2B    ##CMD2                          084255
     C                     ELSE                                           084255
     C                     MOVE '1'       W0FSET                          084255
     C                     MOVE ##CM2A    ##CMD2                          084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C           EXFTXT    TAG                             <<<=== EXFTXT  084255
     C*                                                                   084255
     C* Unwind subroutine stack:                                          084255
     C*                                                                   084255
     C                     MOVE *BLANKS   @STK,Q                          084255
     C                     SUB  1         Q                               084255
     C*                                                                   084255
     C                     ENDSR                                          084255
     C********************************************************************084255
     C/EJECT
     C********************************************************************
     C**  Subroutine SRTEXT retrieves displayed text strings.           **
     C********************************************************************
     C           SRTEXT    BEGSR                           * S R T E X T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRTEXT'  @STK,Q
     C* Header texts:
     C*
     C* Request for variable field name:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1272' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #RQTXT
     C*
     C* Column heading on current fields list:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1299' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #INTXT
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Heading for literal text entry screen:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1401' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #LHEAD
     C*
     C* Request for new literal field name:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1440' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #RQLIT
     C*
     C* Label for existing literal field name:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1627' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #EXLIT
     C*
     C* Reminder of changes text:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1616' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #4WARN 70                       084478
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Instructions on current fields list screen:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1300' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD1
     C*
     C* Function keys text on current fields list screen:
     C*
     C                     CALL 'CGC1000'              9090
     C***********          PARM 'CGD1301' #MSGID
     C                     PARM 'CGD1827' #MSGID                          084255
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C***********          MOVEL#MSTX1    ##CMD2                          084255
     C                     MOVEL#MSTX1    ##CM2A 70                       084255
     C*                                                                   084255
     C                     CALL 'CGC1000'              9090               084255
     C                     PARM 'CGD1828' #MSGID                          084255
     C                     PARM 'CGUSRMSG'#MSGF                           084255
     C                     PARM           #MSDTA                          084255
     C                     PARM *BLANKS   #MSTX1                          084255
     C                     PARM *BLANKS   #MSTX2                          084255
     C*                                                                   084255
     C                     MOVEL#MSTX1    ##CM2B 70                       084255
     C*                                                                   084255
     C           W0FSET    IFEQ '1'                                       084255
     C                     MOVE ##CM2A    ##CMD2                          084255
     C                     ELSE                                           084255
     C                     MOVE ##CM2B    ##CMD2                          084255
     C                     ENDIF                                          084255
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Instructions on literal text entry screen:
     C*
     C                     MOVE *BLANKS   ##CMD3
     C*
     C* Function keys text on literal text entry screen:
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1266' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD4
     C*
     C* Get text for additional subfile information                       083845
     C*
     C                     CALL 'CGC1000'              9090               083845
     C***********          PARM 'CGD2512' #MSGID                    083845088814
     C                     PARM 'CGD2520' #MSGID                          088814
     C                     PARM 'CGUSRMSG'#MSGF                           083845
     C                     PARM           #MSDTA                          083845
     C                     PARM *BLANKS   #MSTX1                          083845
     C                     PARM *BLANKS   #MSTX2                          083845
     C*                                                                   083845
     C***********          MOVEL#MSTX1    #1CNAR                    083845088814
     C           *LIKE     DEFN #1COND    #1CON1                          088814
     C                     MOVEL#MSTX1    #1CON1                          088814
     C*                                                                   083845
     C                     CALL 'CGC1000'              9090               083845
     C***********          PARM 'CGD2513' #MSGID                    083845088814
     C                     PARM 'CGD2521' #MSGID                          088814
     C                     PARM 'CGUSRMSG'#MSGF                           083845
     C                     PARM           #MSDTA                          083845
     C                     PARM *BLANKS   #MSTX1                          083845
     C                     PARM *BLANKS   #MSTX2                          083845
     C*                                                                   083845
     C***********          MOVEL#MSTX1    #1FNAR                    083845088814
     C           *LIKE     DEFN #1FORM    #1FOR1
     C                     MOVEL#MSTX1    #1FOR1                          088814
     C*
     C           EXITXT    TAG                             <<<=== EXITXT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSNMS sends a message to the program's queue.     **
     C********************************************************************
     C           SRSNMS    BEGSR                           * S R S N M S *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSNMS'  @STK,Q
     C*
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVE ##PGM     ZAPGMQ
     C                     ENDIF
     C*
     C* If no message file specified, use default:
     C*
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVE ZADFMF    ZAMSGF
     C                     ENDIF
     C*
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
     C*
     C* Clear all fields after use:
     C*
     C                     MOVE *BLANKS   ZAPGMQ
     C                     MOVE *BLANKS   ZAPGRL
     C                     MOVE *BLANKS   ZAMSID
     C                     MOVE *BLANKS   ZAMSGF
     C                     MOVE *BLANKS   ZAMSDA
     C                     MOVE *BLANKS   ZAMSTP
     C*
     C           EXSNMS    TAG                             <<<=== EXSNMS
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SREXPG exits the program.                          **
     C********************************************************************
     C           SREXPG    BEGSR                           * S R E X P G *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SREXPG'  @STK,Q
     C*
     C           #@ACTN    IFEQ '*SIZE   '
     C                     CLEAR#@PLAN
     C                     ENDIF
     C*
     C* F3:
     C           *IN03     IFEQ *ON
     C********** ##CHG     IFEQ 'Y'                                       084478
     C                     EXSR SRWARN
     C**********           ENDIF                                          084478
     C                     MOVE 'Y2U9999' P0RTN
     C                     MOVEL'CG8100'  #@NEXT    P
     C                     MOVEL'CG8100'  #@LAST    P
     C                     CLEAR#@PLAN
     C                     ENDIF
     C* F12:
     C           *IN12     IFEQ *ON
     C********** ##CHG     IFEQ 'Y'                                       084478
     C                     EXSR SRWARN
     C**********           ENDIF                                          084478
     C                     MOVE 'USR0790' P0RTN
     C                     MOVE #@LAST    #@NEXT    P
     C                     MOVEL'CG8100'  #@LAST    P
     C                     ENDIF
     C* F18:
     C           *IN18     IFEQ *ON
     C********** ##CHG     ANDEQ'Y'                                       084478
     C                     EXSR SRWARN
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* /Copy point for exit processing:
     C*
     C/COPY WNCPYSRC,CG8200DEPP
     C*
     C* Copy any undisplayed messages to the caller:
     C*
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
     C*
     C                     OUT  BIGLDA
     C*
     C           EXEXPG    TAG                             <<<=== EXEXPG
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRWARN warns of unconfirmed changes.               **
     C********************************************************************
     C           SRWARN    BEGSR                           * S R W A R N *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRWARN'  @STK,Q
     C*
     C*********** Do until F5 (confirm) or F12 (cancel):                  084478
     C***********                                                         084478
     C********** *IN05     DOUEQ*ON                                       084478
     C********** *IN12     OREQ *ON                                       084478
     C***********                                                         084478
     C*********** Update the screen time and the job time:                084478
     C***********                                                         084478
     C***********          TIME           ##TME                           084478
     C***********          Z-ADD##TME     ##JTM                           084478
     C***********                                                         084478
     C***********          EXFMT#WINDOW4                                  084478
     C***********                                                         084478
     C*********** Clear messages:                                         084478
     C***********          CALL 'Y2CLMSC'                                 084478
     C***********          PARM ##PGM     ZAPGMQ                          084478
     C***********          PARM '*SAME'   ZAPGRL                          084478
     C***********                                                         084478
     C*********** If F5, commit the changes;                              084478
     C*********** If F12, roll the changes back:                          084478
     C***********                                                         084478
     C********** *IN05     CASEQ*ON       SRCONF                          084478
     C********** *IN12     CASEQ*ON       SRCAN                           084478
     C***********          ENDCS                                          084478
     C***********                                                         084478
     C***********          ENDDO                                          084478
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Offer the choice of confirmation or cancellation.                 084478
     C* If confirmed, a value of "Y" is returned;                         084478
     C*  if cancelled, a value of "N" is returned.                        084478
     C*                                                                   084478
     C* The value "Q" passed to CG8250 displays the question,             084478
     C*  but the commit or rollback does not occur. This allows           084478
     C*  this program (CG8200) to handle updates before commitment        084478
     C*  or rollback (in subroutines SRCONF and SRCAN).                   084478
     C*                                                                   084478
     C                     CALL 'CG8250'                                  088478
     C                     PARM           P5RTN                           088478
     C                     PARM 'Q'       P5RPLY                          088478
     C                     PARM *BLANKS   P5MSG                           088478
     C*
     C* If confirmed ("Y"),                                               084478
     C*  resequence the fields and repeat the commitment:                 084478
     C*                                                                   084478
     C           P5RPLY    IFEQ 'Y'
     C                     EXSR SRCONF
     C*                                                                   084478
     C* otherwise cancelled ("N"): rollback outstanding changes:          084478
     C*                                                                   084478
     C                     ELSE
     C                     EXSR SRCAN
     C                     ENDIF
     C*
     C           EXWARN    TAG                             <<<=== EXWARN
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINIT provides initialisation.                    **
     C********************************************************************
     C           SRINIT    BEGSR                           * S R I N I T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
     C*
     C* Define and clear error return code:
     C*
     C                     MOVE *BLANKS   P0RTN   7
     C                     SELEC                                          095463
     C           @#SCCL    WHNE 80                                        095463
     C           ##8905    ANDEQ*BLANKS                                   095463
     C**********           OPEN CG8905DF                            095463136781
     C                     MOVEL'O'       ##8905  1                       095463
     C           ##8905    WHEQ *BLANKS                                   095463
     C                     MOVEL'N'       ##8905                          095463
     C                     ENDSL                                          095463
     C*
     C* Get the local data area (*LDA):
     C*
     C           *NAMVAR   DEFN *LDA      BIGLDA
     C                     IN   BIGLDA
     C*
     C* Prepare the data workfile:
     C*
     C                     CALL 'CGC3003'
     C                     PARM           P4RTN
     C                     PARM 'CGWPDISP'P4FILE
     C*
     C* Use the data workfile:
     C*
     C                     CALL 'QCMDEXC'
     C                     PARM #OVERD    CMDTXT 30
     C                     PARM 30        CMDLEN 155
     C*
     C* Build the print layout (if not in size mode):
     C*
     C           #@ACTN    IFNE '*SIZE   '
     C                     OUT  BIGLDA
     C*
     C                     MOVE *BLANKS   #@MSID                          091826
     C                     MOVE *BLANKS   #@MDTA                          091826
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN
     C                     PARM '*DISPLAY'P3ACT
     C                     PARM           P#PGEN                                              222373
     C*
     C                     IN   BIGLDA
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Clear the message identifier and its data value:
     C*
     C***********          MOVE *BLANKS   #@MSID                          091826
     C***********          MOVE *BLANKS   #@MDTA                          091826
     C*
     C* Define the condition numbers data area:
     C*
     C           *NAMVAR   DEFN           CGDTA
     C*
     C* Define current row and column values for the
     C*  top left corner of the window, as required:
     C*
     C           ROW       IFEQ *ZERO
     C                     Z-ADD1         ROW
     C                     ENDIF
     C*
     C           COL       IFEQ *ZERO
     C                     Z-ADD1         COL
     C                     ENDIF
     C*
     C* Save the column value:
     C*
     C                     Z-ADDCOL       #SVCOL  30
     C*
     C* Initialise indicators for re-entry:
     C*
     C                     MOVE '0'       *IN
     C*
     C* Set job date and time and the screen time:
     C*
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
     C                     Z-ADD##JTM     ##TME   60
     C*
     C* Define the default message file:
     C*
     C                     MOVEL'CGUSRMSG'ZADFMF 10
     C*
     C* Set the subfile pointer:
     C*
     C                     Z-ADD1         ##SFRC
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Move the copyright parameter:
     C*
     C                     MOVEACPY@      ACT@   80
     C*
     C* Get the run-date:
     C*
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C*
     C                     MOVELAGMRDT    ##MRDT  7        Midas Run date
     C                     MOVELAGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*
     C* Data display width and maximum right values (256 - 75 + 1 = 182):
     C*
     C                     Z-ADD75        #WIDTH  30
     C                     Z-ADD182       #MAXR   30
     C*
     C                     MOVE *BLANK    ##CHG   1
     C                     Z-ADD*ZERO     RRN9    40
     C                     Z-ADD*ZERO     RRN5    40                      095463
     C* Highlight:
     C                     BITOF'01234567'#HIGH   1        X'22'
     C                     BITON'26'      #HIGH
     C* Normal:
     C                     BITOF'01234567'#LOW    1        X'20'
     C                     BITON'2'       #LOW
     C* Labels:
     C                     MOVE *BLANKS   #RQLIT 40
     C                     MOVE *BLANKS   #EXLIT 40
     C*                                                                   084255
     C* Determine the initial function-key text for the fields list:      084255
     C*                                                                   084255
     C           W0FSET    IFEQ *BLANK                                    084255
     C                     MOVE '1'       W0FSET  1                       084255
     C                     ENDIF                                          084255
     C*                                                                   084255
     C* Determine the initial sequence for the fields list:               084255
     C*                                                                   084255
     C           W0FSEQ    IFEQ *BLANK                                    084255
     C                     MOVE '1'       W0FSEQ  1         by row/column 084255
     C                     ENDIF                                          084255
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Key lists:
     C*
     C* CGPDEFPD:
     C           KKDEFL    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C                     KFLD           #1NFLD
     C* ==="===
     C           KKDEFS    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C* ==="===
     C           KKCONF    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C                     KFLD           #XFLDN
     C* ==="===
     C           KKPDEF    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C                     KFLD           #1FLD
     C*
     C           *LIKE     DEFN RDRDE     ##RDE
     C           *LIKE     DEFN RDMAXL    ##MAXL
     C           *LIKE     DEFN LRTCGP    @@TCGP
     C*
     C* /Copy point for calculations:
     C*
     C/COPY WNCPYSRC,CG8200DCPG
     C*
     C* Get the text for the headings and command keys:
     C*
     C                     EXSR SRTEXT
     C*
     C           EXINIT    TAG                             <<<=== EXINIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C** Subroutine *PSSR handles program errors.                       **
     C********************************************************************
     C*
     C/COPY CGCPYSRC,SRERRPSSR
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* File and Program Error Processing
     C*
     C/COPY CGCPYSRC,SRERRC
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* /Copy point for calculation specifications:
     C*
     C/COPY WNCPYSRC,CG8200CPG
     C*
     C********************************************************************
     C********************************************************************100811
     C**  Subroutine SRPTH1 moves data to the PATH FIELD                **100811
     C********************************************************************100811
     C           SRPTH1    BEGSR                           * S R P T H 1 *100811
      *                                                                   100811
      * Add subroutine name to stack:                                     100811
      *                                                                   100811
     C                     ADD  1         Q                               100811
     C                     MOVEL'SRPTH1'  @STK,Q                          100811
      *                                                                   100811
      * Setup path information                                            100811
      *                                                                   100811
     C                     MOVEL#1NPTH    NPTH                            100811
     C                     MOVEL#1ELEM    RDE                             100811
     C                     MOVEL*BLANKS   #1LIN1                          100811
     C                     MOVEL*BLANKS   #1LIN2                          100811
     C                     MOVEL*BLANKS   LIN1                            100811
     C                     MOVEL*BLANKS   LIN2                            100811
     C*                                                                   100811
     C           RDE       IFNE *BLANKS                                   100811
     C                     CALL 'CG8400A'              90                 100811
     C                     PARM           NPTH    6                       100811
     C                     PARM           RDE    10                       100811
     C                     PARM           LIN1   30                       100811
     C                     PARM           LIN2   30                       100811
     C                     MOVELLIN1      #1LIN1                          100811
     C                     MOVELLIN2      #1LIN2                          100811
     C                     END                                            100811
     C*                                                                   100811
     C* Unwind subroutine stack:                                          100811
     C*                                                                   100811
     C                     MOVE *BLANKS   @STK,Q                          100811
     C                     SUB  1         Q                               100811
     C*                                                                   100811
     C                     ENDSR                                          100811
     C********************************************************************100811
     C/EJECT                                                              100811
     O/EJECT
     O********************************************************************
     C* /Copy point for output:
     C*
     O/COPY WNCPYSRC,CG8200DOPG
     C*
     O********************************************************************
** CPY@
(c) Misys International Banking Systems Ltd. 2001
