     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Work with conditions application.')
/*OVRF*: OVRDBF (File in program) (file on system)                  : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                          *
     F*                                                               *
     F*  CG8300  - - - - Display a list of conditions for update.     *
     F*                                                               *
     F*  Function:   - - This program displays a list of conditions.  *
     F*                                                               *
     F*                  The user may mark any of these conditions    *
     F*                   as active (in force) or inactive (not in    *
     F*                   force). Active conditions are applied to    *
     F*                   the plane or layout display with the        *
     F*                   implicit assumption that they evaluate      *
     F*                   to True.                                    *
     F*                                                               *
     F*                  The list of conditions is maintained by      *
     F*                   program CG8400 and loaded by program        *
     F*                   CG3000.                                     *
     F*                                                               *
     F*                  Function key F6 executes program CG8400.     *
     F*                                                               *
     F*  Called by:  - - CG8100 (layout display);                     *
     F*                  CG8200 (plane display).                      *
     F*                                                               *
     F*  Calls:  - - - - CG8400 (condition maintenance).              *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSC022             Date 24Feb04               *
      *  Prev Amend No. 222373             Date 31Oct03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
     F*                 095463             Date 24Oct95               *
     F*                 090219             Date 10Jul95               *
     F*                 090220             Date 06Jul95               *
     F*                 089274             Date 20Jun95               *
     F*                 084688             Date 14Mar95               *
     F*                 084478             Date 09Mar95               *
     F*                 084472             Date 09Mar95               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  222373 - Correct parameters on program calls                 *
     F*  095463 - Work with 132 wide screen                           *
     F*  090219 - Remove F6 processing.                               *
     F*  090220 - Get RDE type from RDTA file                         *
     F*  089274 - Incorrect program exit for review mode.             *
     F*  084688 - Provide a fast exit from final review mode.         *
     F*  084478 - Provide centralised commits and rollbacks.          *
     F*  084472 - Handle packed numeric data values.                  *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*  03 -- F3 (Exit).                                             *
     F***06*--*F6*(Maintain*conditions).                              *   090219
     F*  12 -- F12 (Previous / cancel).                               *
     F*  14 -- F14 (Add a literal).                                   *
     F*  25 -- Display SFLEND in message subfile.                     *
     F*  29 -- Valid command key.                                     *
     F*  31 -- Condition is active.                                   *
     F*  40 -- Program is being run in review mode.                   *
     F*  80 -- Clear subfile.                                         *
     F*  81 -- Display subfile control record.                        *
     F*  82 -- Display subfile record.                                *
     F*  83 -- EOF reached (hide plus sign; prevent roll up).         *
     F*  90 -- Error detected.                                        *
     F*  91 -- EOF detected in CGWPBCND or CGWPCOND.                  *
     F*  92 -- EOF detected in subfile.                               *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Subroutine usage                                             *
     F*  ~~~~~~~~~~~~~~~~                                             *
     F*  SRSHOW -- Display the print layout.                          *
     F*  SRDISP -- Display the list of conditions.                    *
     F*  SRIZSF -- Initialise subfile.                                *
     F*  SRLDSF -- Load subfile.                                      *
     F*  SRMDTA -- Move data to the subfile.                          *
     F*  SRMNT  -- Maintain the list of conditions.                   *
     F*  SRCHEK -- Look for entries in the list of conditions.        *
     F*  SRTEXT -- Retrieve command keys text.                        *
     F*  SRSNMS -- Send a message to the program's queue.             *
     F*  SREXPG -- Program exit processing.                           *
     F*  SRINIT -- Provide initialisation and definitions.            *
     F*                                                               *
     F*  Copied in routines:                                          *
     F*                                                               *
     F*  *PSSR  -- Program error routine.                             *
     F*  SRFILE -- File error routine.                                *
     F*  SRERR  -- Error reporting routine.                           *
     F*                                                               *
     F*****************************************************************
     F/SPACE
     F*-------------------------------------------------------------------
     F* Copied-in file definitions:
     F*
     F/COPY WNCPYSRC,CG8300FPG
     F*===================================================================
     FCGWPBCNDIF  E           K        DISK         KINFSR SRFILE     UC
     F* Basic conditions
     F*-------------------------------------------------------------------
     FCGWPCONDUF  E                    DISK         KINFSR SRFILE     UC
     F* Conditions control
     F*-------------------------------------------------------------------
     FCGRDTAL0IF  E           K        DISK         KINFSR SRFILE
     F* RDE values
     F*-------------------------------------------------------------------
     FCG8300DFCF  E                    WORKSTN      KINFSR SRFILE
     F                                        RRN   KSFILE #SFLRCD
     F                                              KINFDS INFODS
     F* Conditions display file
     F*-------------------------------------------------------------------
     E/EJECT
     E*-------------------------------------------------------------------
     E* Error processing array:
     E*
     E/COPY CGCPYSRC,SRERRE
     E*
     E                    CPY@    1   1 80               Copyright
     E                    CND       256  1               Condition flags.
     E                    IND        24  1               Indicators in.
     E                    DGT        15  1               Numeric digits.  084472
     E*
     E* Copied-in array definitions:
     E*
     E/COPY WNCPYSRC,CG8300EPG
     E*
     E*-------------------------------------------------------------------
     I/SPACE
     I*-------------------------------------------------------------------
     I/COPY WNCPYSRC,CG8300IPG
     I*
     I* Copied-in data structures
     I*
     I*...................................................................
     I/COPY CGCPYSRC,SRERRI
     I*
     I* Error processing data structures
     I*
     I*...................................................................
     IBIGLDA    E DSCGLDA
     I*
     I* Local data area
     I*
     I              #@CMDK                          IND
     I*...................................................................
     IRUNDAT    E DSRUNDAT
     I*
     I* RUNDAT data area
     I*
     I*...................................................................
     IINFODS    E DSY2I#DSP
     I*
     I* Display file information data structure for CG8300DF
     I*
     I*...................................................................084472
     I/COPY CGCPYSRC,SRPGN                                                084472
     I*                                                                   084472
     I* General numeric data structure                                    084472
     I*                                                                   084472
     I*...................................................................
     ICL          DS
     I                                        1 256 CND
     I* Conditions flags array
     I*
     I*...................................................................
     IP#PGEN    E DSCGPGENPD                                                                  222373
     I*                                                                                       222373
     I* Parameters based on PF/CGPGENPD                                                       222373
     I*                                                                                       222373
     I*...................................................................                    222373
     I* Job date and time:
     I*
     IJBDTTM      DS
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     I*...................................................................084472
     I* Data returned from CG8800:                                        084472
     I*                                                                   084472
     IP2DATA      DS                            100                       084472
     I                                        1   6 P2UPPR                084472
     I                                        7  12 P2LOWR                084472
     I                                       13  22 P2RDE                 084472
     I                                       23  28 P2RPTH                084472
     I                                       29  34 P2NPTH                084472
     I                                       35  40 P2ETYP                084472
     I                                       41  50 P2FOPT                084472
     I                                       51  75 P2ETXT                084472
     I                                       76  800P2LEN                 084472
     I*...................................................................084472
     I* Numeric editing data structure:                                   084472
     I*                                                                   084472
     I##DT15      DS                                                      084472
     I                                        1  15 DGT                   084472
     I                                        1   1 ##DT01                084472
     I*...................................................................
     I* Message translation fields:
     I*
     IDSMTR       DS
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
     I*...................................................................
     I* Named constant:
     I*
     I              '(Literal)           -C         ##LIT
     I              '          '
     I*
     I              'OVRDBF CGWPBCND -    C         #OVERB
     I              'QTEMP/CGWPBCND'
     I*
     I              'OVRDBF CGWPCOND -    C         #OVERC
     I              'QTEMP/CGWPCOND'
     I********************************************************************
     C/EJECT
     C********************************************************************
     C           *ENTRY    PLIST
     C                     PARM           P0RTN
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'@Main@'  @STK,Q
     C*
     C* Initialise:
     C                     EXSR SRINIT
     C*
     C* Display the print layout if called from CG8100 (no plane):
     C*
     C           #@PLAN    IFEQ *BLANKS
     C           #@PLAN    OREQ '*ALL '
     C                     EXSR SRSHOW
     C                     ELSE
     C*
     C* Display the conditions list if called from CG8200 (plane given):
     C*
     C                     EXSR SRIZSF
     C                     EXSR SRDISP
     C***                  MOVE #@LAST    #@NEXT
     C***                  MOVEL'CG8300  '#@LAST
     C                     ENDIF
     C*
     C           EXMAIN    TAG                             <<<=== EXMAIN
     C*
     C* Exit program:
     C                     EXSR SREXPG
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     RETRN
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSHOW displays the print layout.                  **
     C********************************************************************
     C           SRSHOW    BEGSR                           * S R S H O W *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSHOW'  @STK,Q
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C*
     C* Refresh screen:
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN
     C                     PARM '*DISPLAY'P3ACT
     C                     PARM           P#PGEN                                              222373
     C*
     C                     OUT  BIGLDA
     C*
     C* Display screen:
     C           @#SCCL    IFNE 80                                        095463
     C                     CALL 'CG8905'               90                 095463
     C                     PARM           P1RTN   7                       095463
     C                     PARM           W0RFR   1                       095463
     C                     ELSE                                           095463
     C                     CALL 'CG8900'               90
     C                     PARM           P1RTN   7
     C                     PARM           W0RFR   1
     C                     ENDIF                                          095463
     C*
     C                     IN   BIGLDA
     C                     MOVE *BLANKS   #@MSID
     C* Trap error:
     C           P1RTN     IFNE *BLANKS
     C           P1RTN     ANDNE'Y2U9999'
     C           P1RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C           @#SCCL    IFNE 80                                        095463
     C                     MOVEL'CG8905'  W0FILE                          095463
     C                     ELSE                                           095463
     C                     MOVEL'CG8900  'W0FILE
     C                     ENDIF                                          095463
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 1.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If not F3 (exit),
     C*  test for F6  (display a list of elements):
     C*
     C* Move F3, F6 and F12:
     C                     MOVE IND,03    *IN03
     C***********          MOVE IND,06    *IN06                           090219
     C                     MOVE IND,12    *IN12
     C*
     C************IN06     IFEQ *ON                                       090219
     C***********                                                         090219
     C**Load*the*subfile:                                                 090219
     C***********          EXSR SRIZSF                                    090219
     C***********                                                         090219
     C**Display*the list:                                                 090219
     C***********          EXSR SRDISP                                    090219
     C***********          ENDIF                                          090219
     C*
     C                     ENDDO
     C*
     C           EXSHOW    TAG                             <<<=== EXSHOW
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDISP displays the list of conditions.            **
     C********************************************************************
     C           SRDISP    BEGSR                           * S R D I S P *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDISP'  @STK,Q
     C*
     C* * *      *IN03     DOUEQ*ON
     C* * *      *IN12     OREQ *ON
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT
     C                     EXFMT#SFLCTL
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* If not F3 (exit) or F12 (cancel),
     C*  test for updated lines:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C           RRN       IFGT *ZERO
     C           1         CHAINCGWPCOND             91
     C                     EXSR SRCHEK
     C                     UPDAT@CNDFMT
     C                     ENDIF
     C                     ENDIF
     C* * *                ENDDO
     C*
     C           EXDISP    TAG                             <<<=== EXDISP
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRIZSF initialises the subfile.                    **
     C********************************************************************
     C           SRIZSF    BEGSR                           * S R I Z S F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRIZSF'  @STK,Q
     C*
     C* Clear the subfile:
     C                     SETOF                     81
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
     C                     SETON                     81
     C*
     C* Reset top RRN:
     C                     Z-ADD*ZERO     ##RRMX  50
     C                     Z-ADD*ZERO     RRN     50
     C*
     C* /Copy point for subfile control initialisation:
     C*
     C/COPY WNCPYSRC,CG8300DISC
     C*
     C* Point the file:
     C                     Z-ADD1         ##SEQ   40
     C           ##SEQ     SETLLCGWPBCND
     C*
     C* Load the subfile:
     C                     EXSR SRLDSF
     C*
     C           EXIZSF    TAG                             <<<=== EXIZSF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRLDSF loads the subfile.                          **
     C********************************************************************
     C           SRLDSF    BEGSR                           * S R L D S F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLDSF'  @STK,Q
     C*
     C* Start at previous highest record in subfile:
     C*
     C                     Z-ADD##RRMX    RRN
     C*
     C* Reset the subfile record number:
     C*
     C                     Z-ADD*ZERO     ##SFRC
     C*
     C* Load subfile lines until EOF:
     C*
     C           *IN91     DOUEQ*ON
     C                     READ CGWPBCND                 91
     C           *IN91     IFEQ *OFF
     C* Move data:
     C                     EXSR SRMDTA
     C*
     C* /Copy point for subfile record initialisation:
     C*
     C/COPY WNCPYSRC,CG8300DISR
     C*
     C* Write the record:
     C                     ADD  1         RRN
     C*
     C* If not done, set subfile position to show the current record:
     C*
     C           ##SFRC    IFEQ *ZERO
     C                     Z-ADDRRN       ##SFRC
     C                     ENDIF
     C                     WRITE#SFLRCD
     C*
     C                     ENDIF
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Set indicators 82 (display subfile) and 83 (EOF):
     C*
     C                     SETOF                     82
     C           RRN       IFNE *ZERO
     C                     SETON                     82
     C                     ENDIF
     C*
     C                     SETON                     83
     C*
     C* Save highest RRN:
     C                     Z-ADDRRN       ##RRMX
     C*
     C           EXLDSF    TAG                             <<<=== EXLDSF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRMDTA moves data to the subfile.                  **
     C********************************************************************
     C           SRMDTA    BEGSR                           * S R M D T A *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRMDTA'  @STK,Q
     C*
     C* Clear element types:                                              084472
     C                     MOVE *BLANKS   ##LELT  6                       084472
     C                     MOVE *BLANKS   ##RELT  6                       084472
     C*
     C                     MOVE *BLANK    #1SEL
     C                     Z-ADDB#CSEQ    #1CSEQ
     C                     MOVE B#LRPT    #1LRPT
     C                     MOVE B#LVAL    #1LVAL
     C*
     C* The left-hand element type must be established:                   084472
     C*                                                                   084472
     C           B#LRDE    IFNE *BLANKS                                   084472
     C                     MOVE B#LRDE    P2RDE                           084472
     C                     MOVE *BLANKS   P2RPTH                          084472
     C                     MOVE B#LRPT    P2NPTH                          084472
     C*                                                                   084472
     C                     CALL 'CG8800'               90                 084472
     C                     PARM           P2RTN   7                       084472
     C                     PARM #@RPTH    P2PTH1  6                       084472
     C                     PARM #@LRPT    P2PTH2  6                       084472
     C                     PARM           P2DATA                          084472
     C* Trap error:                                                       084472
     C           P2RTN     IFNE *BLANKS                                   084472
     C           *IN90     OREQ *ON                                       084472
     C                     MOVEL'CG8800  'W0FILE                          084472
     C                     MOVEL'*CALL'   W0KEY            ***************084472
     C                     Z-ADD3         W0ERNB           ** Database  **084472
     C                     MOVEL'MEM5003' W0MSGD           ** error 3.  **084472
     C                     MOVEL'MIDAS  ' W0MSGF           ***************084472
     C                     EXSR SRERR                                     084472
     C                     ENDIF                                          084472
     C*                                                                   084472
     C* Save the left-hand element type:                                  084472
     C*                                                                   084472
     C                     MOVELP2ETYP    ##LELT                          084472
     C           B#LRDE    CHAINCGRDTAL0             92                   090220
     C           *IN92     IFEQ *OFF                                      090220
     C                     MOVELRDELYP    ##LELT                          090220
     C                     ENDIF                                          090220
     C                     ENDIF                                          084472
     C*...................................................................084472
     C/EJECT
     C*...................................................................084472
     C* The right-hand element type must be established:                  084472
     C*                                                                   084472
     C           B#RRDE    IFNE *BLANKS                                   084472
     C                     MOVE B#RRDE    P2RDE                           084472
     C                     MOVE *BLANKS   P2RPTH                          084472
     C                     MOVE B#RRPT    P2NPTH                          084472
     C*                                                                   084472
     C                     CALL 'CG8800'               90                 084472
     C                     PARM           P2RTN                           084472
     C                     PARM #@RPTH    P2PTH1                          084472
     C                     PARM #@LRPT    P2PTH2                          084472
     C                     PARM           P2DATA                          084472
     C* Trap error:                                                       084472
     C           P2RTN     IFNE *BLANKS                                   084472
     C           *IN90     OREQ *ON                                       084472
     C                     MOVEL'CG8800  'W0FILE                          084472
     C                     MOVEL'*CALL'   W0KEY            ***************084472
     C                     Z-ADD4         W0ERNB           ** Database  **084472
     C                     MOVEL'MEM5003' W0MSGD           ** error 4.  **084472
     C                     MOVEL'MIDAS  ' W0MSGF           ***************084472
     C                     EXSR SRERR                                     084472
     C                     ENDIF                                          084472
     C*                                                                   084472
     C* Save the right-hand element type:                                 084472
     C*                                                                   084472
     C                     MOVELP2ETYP    ##RELT                          084472
     C           B#RRDE    CHAINCGRDTAL0             92                   090220
     C           *IN92     IFEQ *OFF                                      090220
     C                     MOVELRDELYP    ##RELT                          090220
     C                     ENDIF                                          090220
     C                     ENDIF                                          084472
     C*...................................................................084472
     C/EJECT
     C*...................................................................084472
     C* Move the left-hand RDE or data:                                   084472
     C*
     C           B#LRDE    IFNE *BLANKS
     C                     MOVELB#LRDE    #1LEOD
     C                     ELSE
     C***********          MOVELB#LDTA    #1LEOD                          084472
     C           ##RELT    IFNE '*DEC  '                                  084472
     C                     MOVELB#LDTA    #1LEOD    P                     084472
     C                     ELSE                                           084472
     C                     CLEARNUMDS                                     084472
     C*                                                                   084472
     C           B#LDTA    IFNE *BLANKS                                   084472
     C                     MOVELB#LDTA    NUMDS                           084472
     C                     ENDIF                                          084472
     C*                                                                   084472
     C* Move the numeric value (integer part); suppress leading zeros:    084472
     C*                                                                   084472
     C                     Z-ADDNUMVAL    ##DATA 249                      084472
     C                     MOVEL##DATA    ##DT15                          084472
     C           ##DT01    IFEQ '0'                                       084472
     C                     Z-ADD*ZERO     #D      30                      084472
     C                     MOVE 'N'       ##SIG   1                       084472
     C*                                                                   084472
     C           #D        DOUEQ14                                        084472
     C           ##SIG     OREQ 'Y'                                       084472
     C                     ADD  1         #D                              084472
     C           DGT,#D    IFEQ '0'                                       084472
     C                     MOVE *BLANK    DGT,#D                          084472
     C                     ELSE                                           084472
     C                     MOVE 'Y'       ##SIG                           084472
     C                     ENDIF                                          084472
     C                     ENDDO                                          084472
     C*                                                                   084472
     C                     ENDIF                                          084472
     C                     MOVE ##DT15    #1LEOD                          084472
     C                     ENDIF                                          084472
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     MOVE B#OPER    #1OPER
     C                     MOVE B#RRPT    #1RRPT
     C                     MOVE B#RVAL    #1RVAL
     C*
     C* Move the right-hand RDE or data:                                  084472
     C*                                                                   084472
     C           B#RRDE    IFNE *BLANKS
     C                     MOVELB#RRDE    #1REOD
     C                     ELSE
     C***********          MOVELB#RDTA    #1REOD                          084472
     C           ##LELT    IFNE '*DEC  '                                  084472
     C                     MOVELB#RDTA    #1REOD    P                     084472
     C                     ELSE                                           084472
     C                     CLEARNUMDS                                     084472
     C*                                                                   084472
     C           B#RDTA    IFNE *BLANKS                                   084472
     C                     MOVELB#RDTA    NUMDS                           084472
     C                     ENDIF                                          084472
     C*                                                                   084472
     C* Move the numeric value (integer part); suppress leading zeros:    084472
     C*                                                                   084472
     C                     Z-ADDNUMVAL    ##DATA                          084472
     C                     MOVEL##DATA    ##DT15                          084472
     C           ##DT01    IFEQ '0'                                       084472
     C                     Z-ADD*ZERO     #D                              084472
     C                     MOVE 'N'       ##SIG                           084472
     C*                                                                   084472
     C           #D        DOUEQ14                                        084472
     C           ##SIG     OREQ 'Y'                                       084472
     C                     ADD  1         #D                              084472
     C           DGT,#D    IFEQ '0'                                       084472
     C                     MOVE *BLANK    DGT,#D                          084472
     C                     ELSE                                           084472
     C                     MOVE 'Y'       ##SIG                           084472
     C                     ENDIF                                          084472
     C                     ENDDO                                          084472
     C*                                                                   084472
     C                     ENDIF                                          084472
     C                     MOVE ##DT15    #1REOD                          084472
     C                     ENDIF                                          084472
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Highlight if "Active":
     C*
     C                     Z-ADDB#CSEQ    #C      30
     C                     SETOF                     31
     C                     MOVE *BLANK    #1ACT
     C*
     C           CND,#C    IFEQ '1'
     C                     SETON                     31
     C                     MOVE 'X'       #1ACT
     C                     ENDIF
     C*
     C* Find element descriptions:
     C*
     C                     MOVE *BLANKS   #1LDSC
     C                     MOVE *BLANKS   #1RDSC
     C* Left:
     C           B#LRDE    IFNE *BLANKS
     C           B#LRDE    CHAINCGRDTAL0             92
     C           *IN92     IFEQ *OFF
     C                     MOVELRDDESC    #1LDSC
     C                     ENDIF
     C                     ELSE
     C                     MOVEL##LIT     #1LDSC
     C                     ENDIF
     C* Right:
     C           B#RRDE    IFNE *BLANKS
     C           B#RRDE    CHAINCGRDTAL0             92
     C           *IN92     IFEQ *OFF
     C                     MOVELRDDESC    #1RDSC
     C                     ENDIF
     C                     ELSE
     C                     MOVEL##LIT     #1RDSC
     C                     ENDIF
     C*
     C           EXMDTA    TAG                             <<<=== EXMDTA
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRMNT maintains the list of conditions.            **
     C********************************************************************
     C           SRMNT     BEGSR                           * S R M N T   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRMNT '  @STK,Q
     C*
     C* Execute CG8400:
     C                     CALL 'CG8400'
     C                     PARM           P1RTN   7
     C*
     C           EXMNT     TAG                             <<<=== EXMNT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCHEK looks for entries in the list of elements.  **
     C********************************************************************
     C           SRCHEK    BEGSR                           * S R C H E K *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCHEK'  @STK,Q
     C*
     C* Check selections:
     C                     Z-ADD*ZERO     RRN
     C*
     C           RRN       DOUEQ##RRMX
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN
     C           RRN       CHAIN#SFLRCD              92
     C           *IN92     IFEQ *OFF
     C           #1SEL     IFNE *BLANK
     C*
     C* Toggle the highlighting and the "Active" flags:
     C*
     C                     Z-ADD#1CSEQ    #C
     C           #1ACT     IFEQ 'X'
     C                     MOVE *BLANK    #1ACT
     C                     MOVE '0'       CND,#C
     C                     SETOF                     31
     C                     ELSE
     C                     MOVE 'X'       #1ACT
     C                     MOVE '1'       CND,#C
     C                     SETON                     31
     C                     ENDIF
     C*
     C                     MOVE *BLANK    #1SEL
     C                     ENDIF
     C                     UPDAT#SFLRCD
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXCHEK    TAG                             <<<=== EXCHEK
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRTEXT retrieves displayed text strings.           **
     C********************************************************************
     C           SRTEXT    BEGSR                           * S R T E X T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRTEXT'  @STK,Q
     C* Header texts:
     C*
     C* Select the heading according to the mode:
     C*
     C           *IN40     IFEQ *OFF                       Ordinary mode
     C                     MOVE 'CGD1492' #MSGID
     C                     ELSE                             review mode
     C                     MOVE 'CGD1608' #MSGID
     C                     ENDIF
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM           #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD1
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1493' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD2
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Instructions:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1494' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD1
     C* Function keys:
     C*
     C* Select the text according to the mode:
     C*
     C           *IN40     IFEQ *OFF                       Ordinary mode
     C                     MOVE 'CGD1495' #MSGID
     C                     ELSE                             review mode
     C                     MOVE 'CGD1609' #MSGID
     C                     ENDIF
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM           #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD2
     C*
     C           EXTEXT    TAG                             <<<=== EXTEXT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSNMS sends a message to the program's queue.     **
     C********************************************************************
     C           SRSNMS    BEGSR                           * S R S N M S *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSNMS'  @STK,Q
     C*
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVE ##PGM     ZAPGMQ
     C                     ENDIF
     C*
     C* If no message file specified, use default:
     C*
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVE ZADFMF    ZAMSGF
     C                     ENDIF
     C*
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
     C*
     C* Clear all fields after use:
     C*
     C                     MOVE *BLANKS   ZAPGMQ
     C                     MOVE *BLANKS   ZAPGRL
     C                     MOVE *BLANKS   ZAMSID
     C                     MOVE *BLANKS   ZAMSGF
     C                     MOVE *BLANKS   ZAMSDA
     C                     MOVE *BLANKS   ZAMSTP
     C*
     C           EXSNMS    TAG                             <<<=== EXSNMS
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SREXPG exits the program.                          **
     C********************************************************************
     C           SREXPG    BEGSR                           * S R E X P G *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SREXPG'  @STK,Q
     C* F3:
     C           *IN03     IFEQ *ON
     C                     MOVE 'Y2U9999' P0RTN
     C                     MOVE *BLANKS   #@NEXT
     C                     MOVEL'CG8100  '#@NEXT
     C                     MOVEL'CG8100  '#@LAST
     C***********#@REVU    IFEQ 'Y'                                 084688089274
     C***********#@PLAN    ANDEQ'*ALL '                             084688089274
     C***********          MOVEL'*EXIT*  '#@NEXT    P               084688089274
     C***********          MOVE *BLANKS   #@LAST                    084688089274
     C***********          MOVE *BLANKS   P0RTN                           089274
     C***********          ENDIF                                    084688089274
     C***********          ROLBK                                    084478089274
     C                     ENDIF
     C* F12:
     C           *IN12     IFEQ *ON
     C                     MOVE 'USR0790' P0RTN
     C                     MOVE #@LAST    #@NEXT
     C                     MOVEL'CG8100  '#@LAST
     C                     ENDIF
     C*
     C* Update the LDA:
     C* * *                MOVE ##PLAN    #@PLAN
     C                     OUT  BIGLDA
     C*
     C* /Copy point for exit processing:
     C*
     C/COPY WNCPYSRC,CG8300DEPP
     C*
     C* Copy any undisplayed messages to the caller:
     C*
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
     C*
     C           EXEXPG    TAG                             <<<=== EXEXPG
     C*
     C* Close the files:
     C                     CLOSECGWPBCND
     C                     CLOSECGWPCOND
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If updated, execute the print generator for all values:
     C*
     C           #@REVU    IFEQ 'Y'
     C           #@PLAN    ANDEQ'*ALL '
     C                     IN   BIGLDA
     C                     MOVE *BLANKS   #@PLAN
     C                     OUT  BIGLDA
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN
     C                     PARM '*DIAGNOS'P3ACT
     C                     PARM           P#PGEN                                              222373
     C*
     C* Clear the "updated" flag:
     C*
     C                     IN   BIGLDA
     C***                  MOVE ##PLAN    #@PLAN
     C                     MOVE *BLANK    #@REVU
     C                     OUT  BIGLDA
     C*
     C* If temporarily in Conditions mode, reset to Updated:
     C*
     C                     ELSE
     C           #@REVU    IFEQ 'C'
     C                     MOVE 'Y'       #@REVU
     C                     ENDIF
     C                     ENDIF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINIT provides initialisation.                    **
     C********************************************************************
     C           SRINIT    BEGSR                           * S R I N I T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
     C*
     C* Define and clear error return code:
     C*
     C                     MOVE *BLANKS   P0RTN   7
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* Set job date and time and the screen time:
     C*
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
     C                     Z-ADD##JTM     ##TME   60
     C*
     C* Define the default message file:
     C*
     C                     MOVEL'CGUSRMSG'ZADFMF 10
     C*
     C* Move the copyright parameter:
     C*
     C                     MOVEACPY@      ACT@   80
     C*
     C* Get the run-date:
     C*
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C*
     C                     MOVELAGMRDT    ##MRDT  7        Midas Run date
     C                     MOVELAGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* /Copy point for calculations:
     C*
     C/COPY WNCPYSRC,CG8300DCPG
     C*
     C* Define the local data area (*LDA):
     C*
     C           *NAMVAR   DEFN *LDA      BIGLDA
     C                     IN   BIGLDA
     C*
     C                     SETOF                     40     review mode
     C***                  MOVE #@PLAN    ##PLAN 10         PLANE  e plane
     C* * *                MOVEL'*ALL    '#@PLAN    P
     C*
     C                     MOVE 'CGD1672' #@MSID            review mode
     C           #@REVU    IFNE *BLANK
     C           #@REVU    ANDNE'N'
     C                     SETON                     40     with changes
     C                     MOVE 'CGD1673' #@MSID
     C                     ENDIF
     C*
     C                     OUT  BIGLDA
     C*
     C* Clear the workfiles:
     C*
     C*DJU                 CALL 'CGC3003'
     C*DJU                 PARM           P4RTN   7
     C*DJU                 PARM 'CGWPBCND'P4FILE 10
     C*
     C*DJU                 CALL 'CGC3003'
     C*DJU                 PARM           P4RTN
     C*DJU                 PARM 'CGWPCOND'P4FILE
     C*
     C* Use these workfiles:
     C*
     C                     CALL 'QCMDEXC'
     C                     PARM #OVERB    CMDTXT 80
     C                     PARM 30        CMDLEN 155
     C*
     C                     CALL 'QCMDEXC'
     C                     PARM #OVERC    CMDTXT
     C                     PARM 30        CMDLEN
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     IN   BIGLDA
     C* Open the files:
     C                     OPEN CGWPBCND
     C                     OPEN CGWPCOND
DJU  C*
DJU  C* Test the conditions flags:
DJU  C*
DJU  C           1         CHAINCGWPCOND            N91
DJU  C           *IN91     IFEQ *ON
     C*                                                                ...
     C* Execute the print generator to update the workfiles:
     C*
     C                     CALL 'CG3000'               90
     C                     PARM           P3RTN   7
     C                     PARM '*DIAGNOS'P3ACT   8
     C                     PARM           P#PGEN                                              222373
DJU  C                     ENDIF
     C*
     C* Get the conditions flags:
     C*
     C           1         CHAINCGWPCOND            N91
     C           *IN91     IFEQ *ON
     C                     MOVEL'CGWPCOND'W0FILE
     C                     MOVEL'*FIRST  'W0KEY            ***************
     C                     Z-ADD2         W0ERNB           ** Database  **
     C                     MOVEL'MEM5004' W0MSGD           ** error 2.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Get the text for the headings and command keys:
     C*
     C                     EXSR SRTEXT
     C*
     C           EXINIT    TAG                             <<<=== EXINIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C** Subroutine *PSSR handles program errors.                       **
     C********************************************************************
     C*
     C/COPY CGCPYSRC,SRERRPSSR
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* File and Program Error Processing
     C*
     C/COPY CGCPYSRC,SRERRC
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* /Copy point for calculation specifications:
     C*
     C/COPY WNCPYSRC,CG8300CPG
     C*
     C********************************************************************
     O/EJECT
     O********************************************************************
     C* /Copy point for output:
     C*
     O/COPY WNCPYSRC,CG8300DOPG
     C*
     O********************************************************************
** CPY@
(c) Misys International Banking Systems Ltd. 2001
