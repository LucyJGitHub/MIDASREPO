     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Work with conditions definition.')
/*OVRF*: OVRDBF (File in program) (file on system)                  : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                          *
     F*                                                               *
     F*  CG8400  - - - - Display a list of conditions for update.     *
     F*                                                               *
     F*  Function:   - - This program displays a list of conditions.  *
     F*                                                               *
     F*                  The user may mark any of these conditions    *
     F*                   as True or False, and may add, change or    *
     F*                   delete conditions.                          *
     F*                                                               *
     F*                  The conditions switching function is         *
     F*                   provided by program CG8300, and loaded      *
     F*                   by program CG3001.                          *
     F*                                                               *
     F* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     *
     F* CAUTION! Hard-coded positions in the CGDTA definition!  *     *
     F* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     *
     F*                                                               *
     F*  Called by:  - - CGxxxx.                                      *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      *  Prev Amend No. 180285             Date 22Mar01               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 128686             Date 01Jun98               *
      *                 130717             Date 22MAY98               *
     F*                 100811             DATE 29AUG96               *
     F*                 098195             DATE 08JUL96               *
     F*                 096569             DATE 29NOV95               *
     F*                 091826             DATE 04JUL95               *
     F*                 089775             DATE 28JUN95               *
     F*                 087716             DATE 17MAY95               *
     F*                 086941             DATE 02MAY95               *
     F*                 084478             DATE 09MAR95               *
     F*                 084190             DATE 03MAR95               *
     F*                 084049             DATE 01MAR95               *
     F*                 083839             DATE 24FEB95               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  180285 - Allow selection of the correct RDEs belonging to    *
      *           several group sets.  Remove fix 128686.             *
     F*  128686 - CG8000 should be called with correct parameters.    *
     F*           P2DATA must only contains RDE's name (P2RDE) same   *
     F*           as for inserting a new condition. Avoids displaying *
     F*           message 'The left or right element is not valid'    *
     F*  130717 - Condition entry not possible on amounts.            *
     F*           Incorrect inclusion of fix 098195.                  *
     F*  100811 - RDE Path identification                             *
     F*  098195 - Path corrupted if condition amended on RDE used in  *
     F*           several group sets.                                 *
     F*  096569 - Code missed in 086941, sub-file path fields         *
     F*           should be loaded if RDE present                     *
     F*  091826 - Correct deletion of a Condition Group               *
     F*  089775 - After enquiring on a condition,F6 (to add a new)    *
     F*           leaves the input screen input protected.            *
     F*  087716 - A left hand side numeric RDE condition accepts a    *
     F*           a non-numeric literal - then does not update it to  *
     F*           file.                                               *
     F*  086941 - CG8400 corrupts path ids on call to cg8800.         *
     F*  084478 - Provide centralised commits and rollbacks.          *
     F*  084190 - Provide an enquiry mode                             *
     F*  084049 - Use L1 versions of files for display reading;       *
     F*            use CG0499 suite for deletions;                    *
     F*            minor upgrades                                     *
     F*  083839 - Recompile -- Altered file definition                *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*  03 -- F3 (Exit).                                             *
     F*  04 -- (CA04) Hide or show descriptions.                      *
     F*  06 -- F6 (Add a complex condition).                          *
     F*  08 -- F8 (Add a simple condition).                           *
     F*  12 -- F12 (Previous / cancel).                               *
     F*  25 -- Display SFLEND in message subfile.                     *
     F*  28 -- Roll up pressed in the conditions subfile.             *
     F*  29 -- Valid command key.                                     *
     F*  31 -- Invalid action (first subfile).                        *
     F*  32 -- Invalid true / false flag.                             *
     F*  33 -- Show a condition group in reverse image.               *
     F*  35 -- Invalid group condition description.                   *
     F*  40 -- Protect overlaid formats (enquiry mode).               *   084190
     F*  41 -- Invalid condition grouping.                            *
     F*  42 -- Invalid left element.                                  *
     F*  43 -- Invalid left extender.                                 *
     F*  44 -- Invalid operator.                                      *
     F*  45 -- Invalid left element.                                  *
     F*  46 -- Invalid left extender.                                 *
     F*  47 -- Invalid left data.                                     *
     F*  48 -- Invalid right data.                                    *
     F*  49 -- Invalid condition description.                         *
     F*  50 -- Field name is not blank.                               *
     F*  80 -- Clear first subfile.                                   *
     F*  81 -- Display first subfile control record.                  *
     F*  82 -- Display first subfile record.                          *
     F*  85 -- Clear second subfile.                                  *
     F*  86 -- Display second subfile control record.                 *
     F*  87 -- Display second subfile record.                         *
     F*  90 -- Error detected.                                        *
     F*  91 -- EOF detected in CGCGRPLn or CGCONDL0.                  *
     F*  92 -- EOF detected in subfile.                               *
     F*  93 -- Operator found in table.                               *
     F*  94 -- EOF detected in CGGCONLn.                              *
     F*  95 -- EOF detected in CGPDEFLn or CGPDECLn.                  *
     F*  96 -- Identifier found in CGGCONLn.                          *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Subroutine usage                                             *
     F*  ~~~~~~~~~~~~~~~~                                             *
     F*  SRDSP1 -- Display the list of condition groups.              *
     F*  SRINZ1 -- Initialise the first subfile.                      *
     F*  SRGDEC -- Retrieve data from the plane declarations file.    *
     F*  SRGDEF -- Retrieve data from the plane definitions file.     *
     F*  SRLOD1 -- Load the first subfile.                            *
     F*  SRGRP  -- Read data from the condition groups file.          *
     F*  SRMOV1 -- Move data to the first subfile.                    *
     F*  SRCHK1 -- Look for entries in the list of condition groups.  *
     F*  SRDEL1 -- Delete a condition group.                          *
     F*  SRXDEL -- Execute the deletions requested in SRDEL1.         *
     F*  SRFLAG -- Update the apply condition flag.                   *
     F*  SRADD1 -- Add a condition group.                             *
     F*  SRCHG1 -- Change a condition group.                          *
     F*  SRINZ2 -- Initialise the second subfile.                     *
     F*  SRLOD2 -- Load the second subfile.                           *
     F*  SRMOV2 -- Move data to the second subfile.                   *
     F*  SRPAGE -- Add a page of blank lines.                         *
     F*  SRDSP2 -- Display the list of conditions.                    *
     F*  SRCHK2 -- Look for changes in conditions.                    *
     F*  SRADD2 -- Add a condition.                                   *
     F*  SRGGRP -- Retrieve a condition association identifier.       *
     F*  SRGCID -- Retrieve a condition identifier.                   *
     F*  SRGSEQ -- Retrieve a condition sequence number.              *
     F*  SRVAL2 -- Validate a condition line.                         *
     F*  SRVNUM -- Validate a COPY number or a PAGE number.           *
     F*  SRPRMT -- Handle a prompt request for an RDE.                *
     F*  SRVRDE -- Validate a report data element.                    *
     F*  SRUPD  -- Update files with new or added conditions.         *
     F*  SRDEL2 -- Delete a set of conditions.                        *
     F*  SRTEXT -- Retrieve text for headings and command keys.       *
     F*  SRSNMS -- Send a message to the program's queue.             *
     F*  SREXPG -- Program exit processing.                           *
     F*  SRINIT -- Provide initialisation and definitions.            *
     F*                                                               *
     F*  Copied-in routines:                                          *
     F*                                                               *
     F*  *PSSR  -- Program error routine.                             *
     F*  SRFILE -- File error routine.                                *
     F*  SRERR  -- Error reporting routine.                           *
     F*                                                               *
     F*****************************************************************
     F/SPACE
     F*-------------------------------------------------------------------
     F* Copied-in file definitions:
     F*
     F/COPY WNCPYSRC,CG8400FPG
     F*===================================================================
     FCGCONDL0UF  E           K        DISK         KINFSR SRFILEA        084049
     F                                              KCOMIT                084049
     F* Conditions (update)                                               084049
     F*-------------------------------------------------------------------084049
     FCGCGRPL0UF  E           K        DISK         KINFSR SRFILEA
     F                                              KCOMIT
     F* Condition groups (update)                                         084049
     F*-------------------------------------------------------------------084049
     FCGCGRPL1IF  E           K        DISK         KINFSR SRFILE         084049
     F* Condition groups (display)                                        084049
     F*-------------------------------------------------------------------
     FCGGCONL0UF  E           K        DISK         KINFSR SRFILEA
     F                                              KCOMIT
     F* Condition associations (update)                                   084049
     F*-------------------------------------------------------------------084049
     FCGGCONL1IF  E           K        DISK         KINFSR SRFILE         084049
     F* Condition associations (display)                                  084049
     F*-------------------------------------------------------------------
     FCGPDECL0UF  E           K        DISK         KINFSR SRFILE     UC
     F                                              KCOMIT
     F* Plane declarations (update)                                       084049
     F*-------------------------------------------------------------------084049
     FCGPDECL1IF  E           K        DISK         KINFSR SRFILE     UC  084049
     F* Plane declarations (display)                                      084049
     F*-------------------------------------------------------------------
     FCGPDEFL0UF  E           K        DISK         KINFSR SRFILE     UC
     F                                              KCOMIT
     F* Plane definitions (update)                                        084049
     F*-------------------------------------------------------------------084049
     FCGPDEFL1IF  E           K        DISK         KINFSR SRFILE     UC  084049
     F* Plane definitions (display)                                       084049
     F*-------------------------------------------------------------------
     FCG8400DFCF  E                    WORKSTN      KINFSR SRFILE
     F                                        RRN1  KSFILE #SFLRCD1
     F                                        RRN2  KSFILE #SFLRCD2
     F                                              KINFDS INFODS
     F* Conditions display file
     F*-------------------------------------------------------------------
     E/EJECT
     E*-------------------------------------------------------------------
     E* Error processing array:
     E*
     E/COPY CGCPYSRC,SRERRE
     E*
     E                    CPY@    1   1 80               Copyright
     E*COPY CGCPYSRC,SROPRE
     E                    OPR@    1   6 10  A            Valid operators.
     E                    ED8         8  1               Edit an ID.
     E                    CPY         5  1               COPY/PAGE digits.
     E                    ERR        25  1               Error flags.
     E                    MSG     1  25  7               Error message IDs
     E*
     E* Copied-in array definitions:
     E*
     E/COPY WNCPYSRC,CG8400EPG
     E*
     E*-------------------------------------------------------------------
     I/SPACE
     I*-------------------------------------------------------------------
     I/COPY WNCPYSRC,CG8400IPG
     I*
     I* Copied-in data structures
     I*
     I*...................................................................
     I/COPY CGCPYSRC,SRERRI
     I*
     I* Error processing data structures
     I*
     I*...................................................................
     I/COPY CGCPYSRC,SRPGN
     I*
     I* General numeric data structure
     I*
     I*...................................................................
     IBIGLDA    E DSCGLDA
     I*
     I* Local data area
     I*
     I*...................................................................
     ICGDTA     E DSCGDTA
     I*
     I* Conditions numbers data area
     I*
     I* * * * * * * * * * * * * * * * * *
     I* CAUTION! Hard-coded positions!  *
     I* * * * * * * * * * * * * * * * * *
     I                                       36  40 #TEST1
     I                                       41  45 #TEST2
     I                                       46  50 #TEST3
     I* * * * * * * * * * * * * * * * * *
     I* CAUTION! Hard-coded positions!  *
     I* * * * * * * * * * * * * * * * * *
     I*
     I*...................................................................
     IRUNDAT    E DSRUNDAT
     I*
     I* RUNDAT data area
     I*
     I*...................................................................
     IINFODS    E DSY2I#DSP
     I*
     I* Display file information data structure for CG8400DF
     I*
     I*...................................................................
     IED8DS       DS
     I                                        1   8 ED8
     I                                        1   1 ED81
     I                                        8   8 ED88
     I* Edit a condition identifier
     I*
     I*...................................................................
     I* Map the sequence number to a numeric value:
     I*
     ICNSEQA      DS
     I                                        1   30CNSEQN
     I*...................................................................
     I* Array for validating the first five characters
     I*  of a COPY value or a PAGE value:
     I*
     ICOPYDS      DS
     I                                        1   5 CPY
     I*...................................................................
     I* Data returned from CG8800:
     I*
     IP2DATA      DS                            100
     I**********                              1 100 P2ALL                              128686 180285
     I                                        1   6 P2UPPR
     I                                        7  12 P2LOWR
     I                                       13  22 P2RDE
     I                                       23  28 P2RPTH
     I                                       29  34 P2NPTH
     I                                       35  40 P2ETYP
     I                                       41  50 P2FOPT
     I                                       51  75 P2ETXT
     I                                       76  800P2LEN
     I*...................................................................
     I* CG0499 parameters:
     I*
     IDS0499      DS
     I                                        1  10 P4LAYO
     I                                       11  20 P4PLAN
     I                                       21  30 P4FLDN
     I                                       31  380P4TCGP
     I                                       39  460P4CID
     I*
     I                                        1  46 P4PARM
     I*...................................................................
     I* Job date and time:
     I*
     IJBDTTM      DS
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     I*...................................................................
     I* Message translation fields:
     I*
     IDSMTR       DS
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
     I*...................................................................
     IKEYSDS      DS
     I                                        1  20 @@PDEC
     I                                        1  30 @@PDEF
     I*
     I                                        1  10 @@LAYO
     I                                       11  20 @@PLAN
     I                                       21  30 @@FLDN
     I*...................................................................
     I* Named constant:
     I*
     I              '(Literal)           -C         ##LIT
     I              '          '
     I              '?         '          C         #QUERY
     I********************************************************************
     C/EJECT
     C********************************************************************
     C           *ENTRY    PLIST
     C                     PARM           P0RTN
     C*
     C* Add subroutine name to stack:
     C*
     C                     Z-ADD1         Q
     C                     MOVEL'@Main@'  @STK,Q
     C*
     C* Initialise:
     C                     EXSR SRINIT
     C*
     C* Display the list:
     C                     EXSR SRDSP1
     C*
     C           EXMAIN    TAG                             <<<=== EXMAIN
     C*
     C* Exit program:
     C                     EXSR SREXPG
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     RETRN
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDSP1 displays the list of condition groups.      **
     C********************************************************************
     C           SRDSP1    BEGSR                           * S R D S P 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDSP1'  @STK,Q
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           #EXIT     OREQ 'Y'
     C                     MOVE 'Y'       #EXIT   1
     C*                                                                   084049
     C* If changes have been made,                                        084049
     C*  remind the user that pressing Enter allows exit:                 084049
     C*                                                                   084049
     C           ##CHG     IFEQ 'Y'                                       084049
     C                     MOVE 'CGD1829' ZAMSID                          084049
     C                     MOVEL'CGUSRMSG'ZAMSGF                          084049
     C                     EXSR SRSNMS                                    084049
     C                     ENDIF                                          084049
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL1
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If not F3 (exit) or F12 (cancel),
     C*  test for F6 (Add) or for updated lines:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C*
     C           *IN06     CASEQ*ON       SRADD1
     C           RRN1      CASGT*ZERO     SRCHK1
     C                     ENDCS
     C*
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXDSP1    TAG                             <<<=== EXDSP1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINZ1 initialises the first subfile.              **
     C********************************************************************
     C           SRINZ1    BEGSR                           * S R I N Z 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRINZ1'  @STK,Q
     C*
     C* Clear the subfile:
     C                     SETOF                     8182
     C                     SETON                     80
     C                     WRITE#SFLCTL1
     C                     SETOF                     80
     C                     SETON                     81
     C*
     C* Reset top RRN:
     C                     Z-ADD*ZERO     #RRMX1  50
     C                     Z-ADD*ZERO     RRN1    50
     C*
     C* /Copy point for subfile control initialisation:
     C*
     C/COPY WNCPYSRC,CG8400DISC
     C*
     C* Get the condition association group value:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C                     EXSR SRGDEC
     C                     ELSE
     C                     EXSR SRGDEF
     C                     ENDIF
     C*
     C* If an identifier, point the file and load the subfile:
     C*
     C           #@TCGP    IFNE *ZERO
     C********** KKGCON    SETLLCGGCONL0                                  084049
     C           KKGCON    SETLLCGGCONL1                                  084049
     C                     EXSR SRLOD1
     C                     ENDIF
     C*
     C           EXINZ1    TAG                             <<<=== EXINZ1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGDEC retrieves data from file CGPDECL1.          **084049
     C********************************************************************
     C           SRGDEC    BEGSR                           * S R G D E C *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGDEC'  @STK,Q
     C*
     C* Read the plane declaration record:
     C*
     C********** KKPDEC    CHAINCGPDECL0            N93                   084049
     C           KKPDEC    CHAINCGPDECL1             93                   084049
     C           *IN93     IFEQ *ON
     C***********          MOVEL'CGPDECL0'W0FILE                          084049
     C                     MOVEL'CGPDECL1'W0FILE                          084049
     C                     MOVEL@@PDEC    W0KEY            ***************
     C                     Z-ADD1         W0ERNB           ** Database  **
     C                     MOVE 'MEM5004' W0MSGD           ** error 1.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Save the ID:
     C                     Z-ADDLPTCGP    #@TCGP
     C*
     C           EXGDEC    TAG                             <<<=== EXGDEC
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGDEF retrieves data from file CGPDEFL1.          **084049
     C********************************************************************
     C           SRGDEF    BEGSR                           * S R G D E F *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGDEF'  @STK,Q
     C*
     C* Read the plane definition record:
     C*
     C********** KKPDEF    CHAINCGPDEFL0            N93                   084049
     C           KKPDEF    CHAINCGPDEFL1             93                   084049
     C           *IN93     IFEQ *ON
     C***********          MOVEL'CGPDEFL0'W0FILE                          084049
     C                     MOVEL'CGPDEFL1'W0FILE                          084049
     C                     MOVEL@@PDEF    W0KEY            ***************
     C                     Z-ADD2         W0ERNB           ** Database  **
     C                     MOVE 'MEM5004' W0MSGD           ** error 2.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Save the ID:
     C                     Z-ADDLRTCGP    #@TCGP
     C*
     C           EXGDEF    TAG                             <<<=== EXGDEF
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRLOD1 loads the subfile.                          **
     C********************************************************************
     C           SRLOD1    BEGSR                           * S R L O D 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLOD1'  @STK,Q
     C*
     C* Start at previous highest record in subfile:
     C*
     C                     Z-ADD#RRMX1    RRN1
     C*
     C* Reset the subfile record number:
     C*
     C                     Z-ADD*ZERO     #SFRC1
     C*
     C* Read the associations file for the layout and condition ID:
     C*
     C           *IN94     DOUEQ*ON
     C********** KKGCON    READECGGCONL0            N    94               084049
     C           KKGCON    READECGGCONL1                 94               084049
     C           *IN94     IFEQ *OFF
     C           GCPLAN    ANDEQ#@PLAN
     C                     EXSR SRGRP
     C                     ENDIF
     C                     ENDDO
     C*
     C* Set indicator 82 (display subfile):
     C*
     C                     SETOF                     82
     C           RRN1      IFNE *ZERO
     C                     SETON                     82
     C                     ENDIF
     C*
     C* Save highest RRN:
     C                     Z-ADDRRN1      #RRMX1
     C*
     C           EXLOD1    TAG                             <<<=== EXLOD1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGRP reads data for a selected group.             **
     C********************************************************************
     C           SRGRP     BEGSR                           * S R G R P   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGRP '  @STK,Q
     C*
     C* Point the file:
     C*
     C********** KKCGRP    SETLLCGCGRPL0                                  084049
     C           KKCGRP    SETLLCGCGRPL1                                  084049
     C*
     C* Read data for the layout and condition identifier:
     C*
     C           *IN91     DOUEQ*ON
     C********** KKCGRP    READECGCGRPL0            N    91               084049
     C           KKCGRP    READECGCGRPL1                 91               084049
     C           *IN91     IFEQ *OFF
     C*
     C* Move data:
     C                     EXSR SRMOV1
     C*
     C* /Copy point for subfile record initialisation:
     C*
     C/COPY WNCPYSRC,CG8400DISR
     C*
     C* Write the record:
     C*
     C                     ADD  1         RRN1
     C*
     C* If not done, set subfile position to show the current record:
     C*
     C           #SFRC1    IFEQ *ZERO
     C                     Z-ADDRRN1      #SFRC1
     C                     ENDIF
     C                     WRITE#SFLRCD1
     C*
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXGRP     TAG                             <<<=== EXGRP
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRMOV1 moves data to the conditions groups list.   **
     C********************************************************************
     C           SRMOV1    BEGSR                           * S R M O V 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRMOV1'  @STK,Q
     C*
     C                     MOVE *BLANK    #1ACT
     C                     Z-ADDCGCID     #1CID
     C                     MOVE CGDESC    #1DESC
     C                     MOVE CGACND    #1ACND
     C*
     C* Save this value for later comparison:
     C*
     C                     MOVE CGACND    #1FLAG
     C*
     C                     SETOF                     313233
     C*
     C           EXMOV1    TAG                             <<<=== EXMOV1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCHK1 looks for entries in the list of elements.  **
     C********************************************************************
     C           SRCHK1    BEGSR                           * S R C H K 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCHK1'  @STK,Q
     C*
     C* Check selections:
     C                     Z-ADD*ZERO     RRN1
     C                     MOVE 'N'       #ERROR  1
     C                     MOVE 'N'       #ERR1   1
     C                     MOVE 'N'       #ERR2   1
     C                     MOVE 'N'       #CHG    1
     C                     MOVE 'N'       #DEL    1
     C                     MOVE 'N'       #ENQ    1                       084190
     C                     MOVE 'N'       #FLAG   1
     C*
     C           RRN1      DOUEQ#RRMX1
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN1
     C           RRN1      CHAIN#SFLRCD1             92
     C           *IN92     IFEQ *OFF
     C                     SETOF                     3132
     C*
     C           #1ACT     IFNE *BLANK
     C*
     C                     SELEC
     C           #1ACT     WHEQ 'A'                          Amend
     C                     MOVE 'Y'       #CHG
     C           #1ACT     WHEQ 'C'                          Change
     C                     MOVE 'Y'       #CHG
     C           #1ACT     WHEQ 'D'                          Delete
     C                     MOVE 'Y'       #DEL
     C           #1ACT     WHEQ 'E'                          Enquire      084190
     C                     MOVE 'Y'       #ENQ                            084190
     C                     OTHER
     C                     SETON                     31
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #ERR1
     C                     ENDSL
     C*
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C           #1ACND    IFNE 'T'
     C           #1ACND    ANDNE'F'
     C                     SETON                     32
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #ERR2
     C                     ELSE
     C           #1ACND    IFNE #1FLAG
     C********** #1ACT     ANDEQ*BLANK
     C                     MOVE 'Y'       #FLAG
     C                     ENDIF
     C                     ENDIF
     C*
     C                     UPDAT#SFLRCD1
     C                     ENDIF
     C                     ENDDO
     C*
     C* Error messages:
     C*
     C           #ERR1     IFEQ 'Y'
     C                     MOVE 'CGD1508' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     ENDIF
     C*
     C           #ERR2     IFEQ 'Y'
     C                     MOVE 'CGD1509' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C                     EXSR SRSNMS
     C                     ENDIF
     C*
     C* Force re-display if any errors:
     C*
     C           #ERROR    IFEQ 'Y'
     C                     MOVE 'N'       #EXIT
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Act on selections:
     C*
     C           #ERROR    IFNE 'Y'
     C*
     C* Deletions:
     C           #DEL      IFEQ 'Y'
     C                     MOVE 'Y'       #DELOK  1
     C                     Z-ADD*ZERO     RRN1
     C*
     C           RRN1      DOUEQ#RRMX1
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN1
     C           RRN1      CHAIN#SFLRCD1             92
     C           *IN92     IFEQ *OFF
     C           #1ACT     ANDEQ'D'
     C                     SETON                     33
     C                     UPDAT#SFLRCD1
     C                     EXSR SRDEL1
     C                     ENDIF
     C                     ENDDO
     C*
     C* If no problems (and no changes), update the subfile:
     C*
     C           #DELOK    IFEQ 'Y'
     C           #CHG      ANDNE'Y'
     C           #FLAG     ANDNE'Y'
     C                     EXSR SRINZ1
     C                     ENDIF
     C*
     C                     ENDIF
     C*...................................................................084190
     C/EJECT
     C*...................................................................084190
     C* Changes:
     C           #CHG      IFEQ 'Y'
     C                     MOVE 'Y'       #CHGOK  1
     C                     Z-ADD*ZERO     RRN1
     C*
     C           RRN1      DOUEQ#RRMX1
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN1
     C           RRN1      CHAIN#SFLRCD1             92
     C           *IN92     IFEQ *OFF
     C           #1ACT     ANDEQ'A'
     C           *IN92     OREQ *OFF
     C           #1ACT     ANDEQ'C'
     C                     SETOF                     40                   084190
     C                     EXSR SRCHG1
     C                     ENDIF
     C                     ENDDO
     C*
     C* If no problems (and no flag changes), update the subfile:
     C*
     C           #CHGOK    IFEQ 'Y'
     C           #FLAG     ANDNE'Y'
     C                     EXSR SRINZ1
     C                     ENDIF
     C*
     C                     ENDIF
     C*                                                                   084190
     C* Enquiries:                                                        084190
     C           #ENQ      IFEQ 'Y'                                       084190
     C                     Z-ADD*ZERO     RRN1                            084190
     C*                                                                   084190
     C           RRN1      DOUEQ#RRMX1                                    084190
     C           *IN92     OREQ *ON                                       084190
     C                     ADD  1         RRN1                            084190
     C           RRN1      CHAIN#SFLRCD1             92                   084190
     C           *IN92     IFEQ *OFF                                      084190
     C           #1ACT     ANDEQ'E'                                       084190
     C                     MOVE *BLANK    #1ACT                           084190
     C                     UPDAT#SFLRCD1                                  084190
     C                     SETON                     40                   084190
     C                     EXSR SRCHG1                                    084190
     C                     SETOF                     40             084190089775
     C                     ENDIF                                          084190
     C                     ENDDO                                          084190
     C*                                                                   084190
     C                     ENDIF                                          084190
     C*...................................................................084190
     C/EJECT
     C*...................................................................084190
     C* Flag changes:
     C*
     C           #FLAG     IFEQ 'Y'
     C                     MOVE 'Y'       #FLGOK  1
     C                     Z-ADD*ZERO     RRN1
     C*
     C           RRN1      DOUEQ#RRMX1
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN1
     C           RRN1      CHAIN#SFLRCD1             92
     C           *IN92     IFEQ *OFF
     C           #1ACND    ANDNE#1FLAG
     C                     EXSR SRFLAG
     C                     ENDIF
     C                     ENDDO
     C*
     C* If no problems, update the subfile:
     C*
     C           #FLGOK    IFEQ 'Y'
     C                     EXSR SRINZ1
     C                     ENDIF
     C*
     C                     ENDIF
     C                     ENDIF
     C*
     C           EXCHK1    TAG                             <<<=== EXCHK1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDEL1 deletes a conditions group and ALL          **
     C**   related conditions. You have been warned!       ~~~          **
     C********************************************************************
     C           SRDEL1    BEGSR                           * S R D E L 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDEL1'  @STK,Q
     C*
     C* Force re-display:
     C                     MOVE 'N'       #EXIT
     C*
     C* Clear messages from the program's message queue:
     C*
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* Send "Press F10 to confirm deletion":
     C*
     C                     MOVE 'CGD1506' ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C*
     C* Zero-suppress and left-adjust the condition identifier:
     C*
     C                     MOVE #1CID     ED8DS
     C*
     C           ED81      DOUNE'0'
     C                     DO   7         #I      30
     C           #I        ADD  1         #J      30
     C                     MOVE ED8,#J    ED8,#I
     C                     ENDDO
     C                     MOVE *BLANK    ED88
     C                     ENDDO
     C*
     C                     MOVELED8DS     ZAMSDA
     C                     EXSR SRSNMS
     C*
     C* Allow F10 and F12 only:
     C*
     C                     SETON                     61
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Do until F10 (Confirm delete) or F12 (Cancel delete):
     C*
     C           *IN10     DOUEQ*ON
     C           *IN12     OREQ *ON
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL1
     C*
     C* F10 (Confirm) -- execute the deletions:
     C*
     C           *IN10     IFEQ *ON
     C                     EXSR SRXDEL
     C                     ENDIF
     C*
     C                     ENDDO
     C*
     C* If F12, cancel the reverse image:
     C*
     C           *IN12     IFEQ *ON
     C           RRN1      CHAIN#SFLRCD1             92
     C           *IN92     IFEQ *OFF
     C                     SETOF                     33
     C                     UPDAT#SFLRCD1
     C                     ENDIF
     C                     ENDIF
     C* Reset F12:
     C                     SETOF                     12
     C* Reset toggle:
     C                     SETOF                     61
     C*
     C* Clear messages from the program's message queue:
     C*
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C           EXDEL1    TAG                             <<<=== EXDEL1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C*******  Subroutine SR#DEL executes the requested deletion.       **084049
     C**  Subroutine SRXDEL executes the requested deletion.            **084049
     C**                                                                **
     C*******  Note: This subroutine will replace the next one (SRXDEL) **
     C*******         when the deletions suite (CG04xx) has been tested **
     C*******         and approved.                                     **
     C********************************************************************
     C********** SR#DEL    BEGSR                           * S R # D E L *084049
     C           SRXDEL    BEGSR                           * S R X D E L *084049
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C***********          MOVEL'SR#DEL'  @STK,Q
     C                     MOVEL'SRXDEL'  @STK,Q
     C*
     C                     MOVEL#@LAYO    P4LAYO
     C                     MOVE #@PLAN    P4PLAN
     C                     MOVE #@FLDN    P4FLDN
     C                     Z-ADD#@TCGP    P4TCGP
     C                     Z-ADD#1CID     P4CID                           084049
     C                     MOVE '*PDELETE'W4ACT                           084049
     C*
     C                     CALL 'CG0499'               90
     C                     PARM           P4RTN   7
     C                     PARM           W4ACT   8        Action Code
     C           P4PARM    PARM P4PARM    P@PAR1                          084049
     C*                                                                   084049
     C* Trap error:
     C           P4RTN     IFNE *BLANKS
     C           P4RTN     ANDNE'Y2U9999'
     C           P4RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C                     MOVEL'CG0499  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD3         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 3.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*...................................................................084049
     C/EJECT
     C*...................................................................084049
     C* Check that at least one condition association record exists.      084049
     C* If there are none, clear the group ID in the plane definition     084049
     C*  or plane declaration record, as appropriate:                     084049
     C*                                                                   084049
     C           KKGCON    SETLLCGGCONL0                 94               084049
     C           *IN94     IFEQ *OFF                                      084049
     C           #@FLDN    IFEQ *BLANKS                                   084049
     C*                                                                   084049
     C           KKPDEC    CHAINCGPDECL0             95                   084049
     C           *IN95     IFEQ *OFF                                      084049
     C                     Z-ADD*ZERO     LPTCGP                          084049
     C                     UPDAT@PDECL0                90                 084049
     C                     ENDIF                                          084049
     C*                                                                   084049
     C                     ELSE                                           084049
     C           KKPDEF    CHAINCGPDEFL0             95                   084049
     C           *IN95     IFEQ *OFF                                      084049
     C                     Z-ADD*ZERO     LRTCGP                          084049
     C                     UPDAT@PDEFL0                90                 084049
     C                     ENDIF                                          084049
     C*                                                                   084049
     C                     ENDIF                                          084049
     C                     ENDIF                                          084049
     C*
     C* Tag "updated -- review layout":
     C*
     C                     MOVE 'Y'       #@REVU
     C*
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C*                                                                   084049
     C********** EXXDEL    TAG                             <<<=== EXXDEL  084049
     C           EX#DEL    TAG                             <<<=== EX#DEL  084049
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************084049
     C***********  Subroutine SRXDEL executes the requested deletion.   **084049
     C********************************************************************084049
     C********** SRXDEL    BEGSR                           * S R X D E L *084049
     C***********                                                         084049
     C*********** Add subroutine name to stack:                           084049
     C***********                                                         084049
     C***********          ADD  1         Q                               084049
     C***********          MOVEL'SRXDEL'  @STK,Q                          084049
     C***********                                                         084049
     C*********** Delete the condition group:                             084049
     C***********                                                         084049
     C********** KKCOND    SETLLCGCGRPL0                                  084049
     C********** *IN91     DOUEQ*ON                                       084049
     C********** KKCOND    READECGCGRPL0                 91               084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@CGRPL0                                   084049
     C***********          ENDIF                                          084049
     C***********          ENDDO                                          084049
     C***********                                                         084049
     C*********** Delete related conditions:                              084049
     C***********                                                         084049
     C********** KKCOND    SETLLCGCONDL0                                  084049
     C********** *IN91     DOUEQ*ON                                       084049
     C********** KKCOND    READECGCONDL0                 91               084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@CONDL0                                   084049
     C***********          ENDIF                                          084049
     C***********          ENDDO                                          084049
     C***********                                                         084049
     C*********** Delete the condition association:                       084049
     C***********                                                         084049
     C********** KKGCO2    CHAINCGGCONL0             91                   084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@GCONL0                                   084049
     C***********          ENDIF                                          084049
     C*...................................................................084049
     C/EJECT
     C*...................................................................084049
     C****** Check that at least one condition association record exists. 084049
     C****** If there are none, clear the group ID in the plane definition084049
     C******  or plane declaration record, as appropriate:                084049
     C***********                                                         084049
     C********** KKGCON    SETLLCGGCONL0                 94               084049
     C********** *IN94     IFEQ *OFF                                      084049
     C********** #@FLDN    IFEQ *BLANKS                                   084049
     C***********                                                         084049
     C********** KKPDEC    CHAINCGPDECL0             95                   084049
     C********** *IN95     IFEQ *OFF                                      084049
     C***********          Z-ADD*ZERO     LPTCGP                          084049
     C***********          UPDAT@PDECL0                90                 084049
     C***********          ENDIF                                          084049
     C***********                                                         084049
     C***********          ELSE                                           084049
     C********** KKPDEF    CHAINCGPDEFL0             95                   084049
     C********** *IN95     IFEQ *OFF                                      084049
     C***********          Z-ADD*ZERO     LRTCGP                          084049
     C***********          UPDAT@PDEFL0                90                 084049
     C***********          ENDIF                                          084049
     C***********                                                         084049
     C***********          ENDIF                                          084049
     C***********          ENDIF                                          084049
     C***********                                                         084049
     C*********** Tag "updated -- review layout":                         084049
     C***********                                                         084049
     C***********          MOVE 'Y'       #@REVU                          084049
     C***********                                                         084049
     C********** EXXDEL    TAG                             <<<=== EXXDEL  084049
     C***********                                                         084049
     C*********** Unwind subroutine stack:                                084049
     C***********                                                         084049
     C***********          MOVE *BLANKS   @STK,Q                          084049
     C***********          SUB  1         Q                               084049
     C***********                                                         084049
     C***********          ENDSR                                          084049
     C********************************************************************084049
     C/EJECT
     C********************************************************************
     C**  Subroutine SRFLAG handles a changed True / False flag.        **
     C********************************************************************
     C           SRFLAG    BEGSR                           * S R F L A G *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRFLAG'  @STK,Q
     C*
     C* Force re-display:
     C                     MOVE 'N'       #EXIT
     C*
     C* Update the condition group record:
     C*
     C           KKCOND    CHAINCGCGRPL0             91
     C           *IN91     IFEQ *OFF
     C                     MOVE #1ACND    CGACND
     C                     UPDAT@CGRPL0
     C                     ENDIF
     C*
     C* Update the saved value:
     C*
     C                     MOVE #1ACND    #1FLAG
     C*
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C*
     C           EXFLAG    TAG                             <<<=== EXFLAG
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRADD1 adds a conditions group.                    **
     C********************************************************************
     C           SRADD1    BEGSR                           * S R A D D 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRADD1'  @STK,Q
     C*
     C* Force re-display:
     C                     MOVE 'N'       #EXIT
     C*
     C* Clear the subfile:
     C                     EXSR SRINZ2
     C*
     C* Add a page of blank lines for new conditions:
     C*
     C                     EXSR SRPAGE
     C*
     C* Display the list:
     C                     EXSR SRDSP2
     C*
     C* If valid, add conditions to the group:
     C*
     C           #ERROR    IFEQ 'N'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C*
     C* If no condition association ID has been specified, generate one:
     C*
     C           #@TCGP    IFEQ *ZERO
     C                     EXSR SRGGRP
     C                     ENDIF
     C*
     C* Get a condition identifier:
     C*
     C                     EXSR SRGCID
     C                     EXSR SRADD2
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Update the condition group value:
     C*
     C           #@FLDN    IFEQ *BLANKS
     C*
     C           KKPDEC    CHAINCGPDECL0             95
     C           *IN95     IFEQ *OFF
     C                     Z-ADD#@TCGP    LPTCGP
     C                     UPDAT@PDECL0                90
     C                     ENDIF
     C*
     C                     ELSE
     C           KKPDEF    CHAINCGPDEFL0             95
     C           *IN95     IFEQ *OFF
     C                     Z-ADD#@TCGP    LRTCGP
     C                     UPDAT@PDEFL0                90
     C                     ENDIF
     C*
     C                     ENDIF
     C*
     C* Update the first subfile:
     C*
     C                     EXSR SRINZ1
     C                     ENDIF
     C*
     C* Reset F12:
     C                     SETOF                     12
     C*
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C*
     C           EXADD1    TAG                             <<<=== EXADD1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCHG1 changes a conditions group.                 **
     C********************************************************************
     C           SRCHG1    BEGSR                           * S R C H G 1 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCHG1'  @STK,Q
     C*
     C* Force re-display:
     C                     MOVE 'N'       #EXIT
     C*
     C* Point the file:
     C*
     C           KKCOND    SETLLCGCONDL0
     C*
     C* Clear and load the subfile:
     C*
     C                     EXSR SRINZ2
     C                     EXSR SRLOD2
     C*
     C* Add a page of blank lines for new conditions:
     C*
     C           *IN40     IFEQ *OFF                                      084190
     C                     EXSR SRPAGE
     C                     ENDIF                                          084190
     C*
     C* Move the conditions group description:
     C*
     C                     MOVE #1DESC    #2GDSC
     C*
     C* Display the list:
     C                     EXSR SRDSP2
     C*...................................................................084190
     C/EJECT
     C*...................................................................084190
     C* Update the files (delete the old conditions and add the new):
     C*
     C           #ERROR    IFNE 'Y'
     C           *IN03     ANDEQ*OFF
     C           *IN12     ANDEQ*OFF
     C           *IN40     ANDEQ*OFF                                      084190
     C                     EXSR SRDEL2
     C                     EXSR SRADD2
     C                     ENDIF
     C* Reset F12:
     C                     SETOF                     12
     C*
     C           EXCHG1    TAG                             <<<=== EXCHG1
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINZ2 initialises the second subfile.             **
     C********************************************************************
     C           SRINZ2    BEGSR                           * S R I N Z 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRINZ2'  @STK,Q
     C*
     C* Clear the subfile:
     C                     SETOF                     8687
     C                     SETON                     85
     C                     WRITE#SFLCTL2
     C                     SETOF                     85
     C                     SETON                     86
     C*
     C* Reset top RRN:
     C                     Z-ADD*ZERO     #RRMX2  50
     C                     Z-ADD*ZERO     RRN2    50
     C*
     C* Reset top sequence:
     C                     Z-ADD*ZERO     #MXSEQ  30
     C*
     C* Prepare the heading values:
     C*
     C                     MOVE *BLANKS   #2GDSC
     C                     SETOF                     35
     C*
     C* /Copy point for subfile control initialisation:
     C*
     C/COPY WNCPYSRC,CG8400DISC
     C*
     C           EXINZ2    TAG                             <<<=== EXINZ2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRLOD2 loads the second subfile.                   **
     C********************************************************************
     C           SRLOD2    BEGSR                           * S R L O D 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRLOD2'  @STK,Q
     C*
     C* Start at previous highest record in subfile:
     C*
     C                     Z-ADD#RRMX2    RRN2
     C*
     C* Reset the subfile record number:
     C*
     C                     Z-ADD*ZERO     #SFRC2
     C*
     C* Load subfile lines until EOF:
     C*
     C           *IN91     DOUEQ*ON
     C*
     C* Note: CGCONDL0 is used here, rather than CGCONDL1, since a write  084049
     C*        to this file occurs in subroutines SRADD2 and SRUPD,       084049
     C*        but no other input reference is used. Using CGCONDL0       084049
     C*        here avoids the need for a dummy CHAIN.                    084049
     C*
     C           KKCOND    READECGCONDL0            N    91
     C           *IN91     IFEQ *OFF
     C                     MOVE *BLANKS   #2RDTA                          087716
     C* Move data:
     C                     EXSR SRMOV2
     C*
     C* /Copy point for subfile record initialisation:
     C*
     C/COPY WNCPYSRC,CG8400DISR
     C*
     C* Write the record:
     C                     ADD  1         RRN2
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If not done, set subfile position to show the current record:
     C*
     C           #SFRC2    IFEQ *ZERO
     C                     Z-ADDRRN2      #SFRC2
     C                     ENDIF
      * Setup path infor.                                                 100811
     C                     EXSR SRPTH2                                    100811
     C*
     C                     WRITE#SFLRCD2
     C                     ENDIF
     C                     ENDDO
     C*
     C* Save highest RRN:
     C                     Z-ADDRRN2      #RRMX2
     C*
     C           EXLOD2    TAG                             <<<=== EXLOD2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRMOV2 moves data to the conditions list.          **
     C********************************************************************
     C           SRMOV2    BEGSR                           * S R M O V 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRMOV2'  @STK,Q
     C*
     C                     Z-ADDCNSEQN    #2SEQN
     C*
     C* Save the top sequence number:
     C*
     C           CNSEQN    IFGT #MXSEQ
     C                     Z-ADDCNSEQN    #MXSEQ
     C                     ENDIF
     C*
     C                     MOVE CNCONG    #2CONG
     C                     Z-ADDCNCSEQ    #2CSEQ
     C* Left:
     C                     MOVELCNLRDE    #2LRDE    P
     C***********          MOVELCNLDTA    #2LDTA                          084049
     C                     MOVE CNLVAL    #2LEXT
     C***********          MOVELCNLDTA    #2LDTA                    098195130717
     C                     MOVELCNLRP     #2LRPT                          098195
     C                     MOVELCNLNRP    #2LNRP                          098195
     C*
     C           CNLRDE    IFNE *BLANKS
     C*
     C* First element type must be established:
     C*
     C                     MOVE CNLRDE    P2RDE
     C                     MOVE CNLRP     P2RPTH
     C                     MOVE CNLNRP    P2NPTH
     C                     MOVELCNLRP     #2LRPT                          096569
     C                     MOVELCNLNRP    #2LNRP                          096569
     C*
     C                     CALL 'CG8800'               90
     C                     PARM           P2RTN   7
     C                     PARM #@RPTH    P2PTH1  6
     C                     PARM #@LRPT    P2PTH2  6
     C                     PARM           P2DATA
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Trap error:
     C           P2RTN     IFNE *BLANKS
     C           *IN90     OREQ *ON
     C                     MOVEL'CG8800  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD4         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 4.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Now numeric value can be formatted:
     C*
     C                     MOVELP2ETYP    #2LELT    P
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
DJU  C********** CNLRDE    IFEQ *BLANKS
DJU  C********** CNLDTA    ANDEQ*BLANKS
DJU  C********** CNLRDE    OREQ *BLANKS
DJU  C********** CNLDTA    ANDEQ'*BLANK '
DJU  C***********          MOVEL'*BLANKS' #2LDTA    P
DJU  C***********          ENDIF
     C***********
DJU  C********** CNLRDE    IFEQ *BLANKS
DJU  C********** CNLDTA    ANDEQ*ZERO
DJU  C********** CNLRDE    OREQ *BLANKS
DJU  C********** CNLDTA    ANDEQ'*ZERO  '
DJU  C***********          MOVEL'*ZERO  ' #2LDTA    P
DJU  C***********          ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     MOVE CNOPER    #2OPER
     C* Right:
     C                     MOVELCNRRDE    #2RRDE    P
     C***********          MOVELCNRDTA    #2RDTA                          084049
     C                     MOVE CNRVAL    #2REXT
     C***********          MOVELCNRDTA    #2RDTA                    098195130717
     C                     MOVELCNRRP     #2RRPT                          098195
     C                     MOVELCNRNRP    #2RNRP                          098195
     C*
     C           CNRRDE    IFNE *BLANKS
     C*
     C* First element type must be established:
     C*
     C                     MOVE CNRRDE    P2RDE
     C                     MOVE CNRRP     P2RPTH
     C                     MOVE CNRNRP    P2NPTH
     C                     MOVELCNRRP     #2RRPT                          096569
     C                     MOVELCNRNRP    #2RNRP                          096569
     C*
     C                     CALL 'CG8800'               90
     C                     PARM           P2RTN   7
     C                     PARM #@RPTH    P2PTH1  6
     C                     PARM #@LRPT    P2PTH2  6
     C                     PARM           P2DATA
     C*
     C* Trap error:
     C           P2RTN     IFNE *BLANKS
     C           *IN90     OREQ *ON
     C                     MOVEL'CG8800  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD5         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 5.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Now numeric value can be formatted:
     C*
     C                     MOVELP2ETYP    #2RELT    P
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
DJU  C********** CNRRDE    IFEQ *BLANKS
DJU  C********** CNRDTA    ANDEQ*BLANKS
DJU  C********** CNRRDE    OREQ *BLANKS
DJU  C********** CNRDTA    ANDEQ'*BLANK '
DJU  C***********          MOVEL'*BLANKS' #2RDTA    P
DJU  C***********          ENDIF
     C***********
DJU  C********** CNRRDE    IFEQ *BLANKS
DJU  C********** CNRDTA    ANDEQ*ZERO
DJU  C********** CNRRDE    OREQ *BLANKS
DJU  C********** CNRDTA    ANDEQ'*ZERO  '
DJU  C***********          MOVEL'*ZERO  ' #2RDTA    P
DJU  C***********          ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     MOVE CNDESC    #2CDSC
     C*
     C* Now numeric value can be formatted:
     C*
     C           CNLRDE    IFEQ *BLANKS
     C                     CLEAR#2RDTA
     C                     CLEAR#2RNUM
     C*
     C           #2RELT    IFNE '*DEC  '
     C                     MOVELCNLDTA    #2LDTA    P
     C                     ELSE
     C                     CLEARNUMDS
     C*
     C           CNLDTA    IFNE *BLANKS
     C                     MOVELCNLDTA    NUMDS
     C                     ENDIF
     C*
     C                     Z-ADDNUMVAL    #2LNUM
     C                     ENDIF
     C                     ENDIF
     C*
     C           CNRRDE    IFEQ *BLANKS
     C                     CLEAR#2LDTA
     C                     CLEAR#2LNUM
     C*
     C           #2LELT    IFNE '*DEC  '
     C                     MOVELCNRDTA    #2RDTA    P
     C                     ELSE
     C           #2LELT    IFEQ '*DEC  '                                  087716
     C                     CLEARNUMDS
     C                     ENDIF                                          087716
     C*
     C           CNRDTA    IFNE *BLANKS
     C                     MOVELCNRDTA    NUMDS
     C                     ENDIF
     C*
     C                     Z-ADDNUMVAL    #2RNUM
     C                     ENDIF
     C                     ENDIF
     C*
     C                     SETOF                     36
     C*
     C           EXMOV2    TAG                             <<<=== EXMOV2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************100811
     C**  Subroutine SRPTH2 moves data to the PATH FIELD                **100811
     C********************************************************************100811
     C           SRPTH2    BEGSR                           * S R P T H 2 *100811
      *                                                                   100811
      * Add subroutine name to stack:                                     100811
      *                                                                   100811
     C                     ADD  1         Q                               100811
     C                     MOVEL'SRPTH2'  @STK,Q                          100811
      *                                                                   100811
      * Setup left information                                            100811
      *                                                                   100811
     C                     MOVEL#2LNRP    NPTH                            100811
     C                     MOVEL#2LRDE    RDE                             100811
     C                     MOVEL*BLANKS   #2LLN1                          100811
     C                     MOVEL*BLANKS   #2LLN2                          100811
     C                     MOVEL*BLANKS   #2RLN1                          100811
     C                     MOVEL*BLANKS   #2RLN2                          100811
     C                     MOVEL*BLANKS   LIN1                            100811
     C                     MOVEL*BLANKS   LIN2                            100811
     C*                                                                   100811
     C           RDE       IFNE *BLANKS                                   100811
     C                     CALL 'CG8400A'              90                 100811
     C                     PARM           NPTH    6                       100811
     C                     PARM           RDE    10                       100811
     C                     PARM           LIN1   30                       100811
     C                     PARM           LIN2   30                       100811
     C                     MOVELLIN1      #2LLN1                          100811
     C                     MOVELLIN2      #2LLN2                          100811
     C                     END                                            100811
      *                                                                   100811
      * Setup right information                                           100811
      *                                                                   100811
     C                     MOVEL#2RNRP    NPTH                            100811
     C                     MOVEL#2RRDE    RDE                             100811
     C                     MOVEL*BLANKS   LIN1                            100811
     C                     MOVEL*BLANKS   LIN2                            100811
     C*                                                                   100811
     C           RDE       IFNE *BLANKS                                   100811
     C                     CALL 'CG8400A'              90                 100811
     C                     PARM           NPTH    6                       100811
     C                     PARM           RDE    10                       100811
     C                     PARM           LIN1   30                       100811
     C                     PARM           LIN2   30                       100811
     C                     MOVELLIN1      #2RLN1                          100811
     C                     MOVELLIN2      #2RLN2                          100811
     C                     END                                            100811
     C*                                                                   100811
     C* Unwind subroutine stack:                                          100811
     C*                                                                   100811
     C                     MOVE *BLANKS   @STK,Q                          100811
     C                     SUB  1         Q                               100811
     C*                                                                   100811
     C                     ENDSR                                          100811
     C********************************************************************100811
     C/EJECT                                                              100811
     C********************************************************************
     C**  Subroutine SRPAGE adds a page of blank lines                  **
     C**   for new conditions.                                          **
     C********************************************************************
     C           SRPAGE    BEGSR                           * S R P A G E *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRPAGE'  @STK,Q
     C*
     C* Move the current highest RRN; define the subfile page size:
     C*
     C                     Z-ADD#RRMX2    #COUNT  30
     C                     Z-ADD16        #PAGSZ  30
     C*
     C* Get the number of lines on the last page:
     C*
     C           #COUNT    IFGT #PAGSZ
     C           #COUNT    DOULE#PAGSZ
     C                     SUB  #PAGSZ    #COUNT
     C                     ENDDO
     C                     ENDIF
     C*
     C* Get the number of lines to fill the last page, with a minimum
     C*  of three lines (otherwise we fill another page):
     C*
     C           #PAGSZ    SUB  #COUNT    #COUNT
     C           #COUNT    IFLT 3
     C                     ADD  #PAGSZ    #COUNT
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     DO   #COUNT
     C                     Z-ADD*ZERO     #2SEQN
     C                     MOVE *BLANKS   #2CONG
     C*
     C                     MOVE *BLANKS   #2LRDE
     C                     MOVE *BLANKS   #2LDTA
     C                     Z-ADD*ZERO     #2LNUM
     C                     MOVE *BLANK    #2LEXT
     C*
     C                     MOVE *BLANKS   #2OPER
     C*
     C                     MOVE *BLANKS   #2RRDE
     C                     MOVE *BLANKS   #2RDTA
     C                     Z-ADD*ZERO     #2RNUM
     C                     MOVE *BLANK    #2REXT
     C*
     C                     MOVE *BLANKS   #2CDSC
     C*
     C                     Z-ADD*ZERO     #2CSEQ
     C*
     C* Write the record:
     C                     ADD  1         RRN2
     C*
     C* If not done, set subfile position to show the current record:
     C*
     C           #SFRC2    IFEQ *ZERO
     C                     Z-ADDRRN2      #SFRC2
     C                     ENDIF
      * Setup path infor.                                                 100811
     C                     EXSR SRPTH2                                    100811
     C*
     C                     WRITE#SFLRCD2
     C                     ENDDO
     C*
     C* Save highest RRN:
     C                     Z-ADDRRN2      #RRMX2
     C*
     C           EXPAGE    TAG                             <<<=== EXPAGE
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRDSP2 displays the list of conditions.            **
     C********************************************************************
     C           SRDSP2    BEGSR                           * S R D S P 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDSP2'  @STK,Q
     C*
     C* Set indicator 87 (display subfile):
     C*
     C                     SETOF                     87
     C           RRN2      IFNE *ZERO
     C                     SETON                     87
     C                     ENDIF
     C*
     C* Default to "No update":
     C*
     C                     MOVE 'N'       ##UPD   1
     C*
     C* Do until F3 (exit), F12 (cancel) or update flag set,
     C*  or until indicator 40 is on (ie, exit if enquiry):               084190
     C*
     C           *IN03     DOUEQ*ON
     C           *IN12     OREQ *ON
     C           ##UPD     OREQ 'Y'
     C           #ERROR    ANDEQ'N'
     C           *IN40     OREQ *ON                                       084190
     C*
     C* Update the screen time and the job time:
     C*
     C                     TIME           ##TME
     C                     Z-ADD##TME     ##JTM
     C*
     C                     WRITE#MSGCTL
     C           *IN40     IFEQ *OFF                                      084190
     C                     WRITE#CMDTXT2
     C                     EXFMT#SFLCTL2
     C                     ELSE                                           084190
     C                     WRITE#SFLCTL2                                  084190
     C                     EXFMT#CMDTXT2                                  084190
     C                     ENDIF                                          084190
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If not F3 (exit) or F12 (cancel),
     C*  check for Roll up pressed or changed lines:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C           *IN40     ANDEQ*OFF                                      084190
     C*
     C           *IN28     CASEQ*ON       SRPAGE
     C           RRN2      CASGT*ZERO     SRCHK2
     C                     ENDCS
     C*
     C                     ENDIF
     C                     ENDDO
     C*
     C           EXDSP2    TAG                             <<<=== EXDSP2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRCHK2 looks for changed conditions.               **
     C********************************************************************
     C           SRCHK2    BEGSR                           * S R C H K 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRCHK2'  @STK,Q
     C*
     C* Clear error flags:
     C                     MOVE 'N'       #ERROR
     C                     MOVE *ALL'N'   ERR
     C*
     C* Convert prompted elements into data elements:
     C*
     C                     EXSR SRPRMT
     C*
     C* Clear the RRN and the lines count:
     C*
     C                     Z-ADD*ZERO     RRN2
     C                     Z-ADD*ZERO     #LCNT   50
     C*
     C* Validate all conditions:
     C*
     C           RRN2      DOUEQ#RRMX2
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN2
     C           RRN2      CHAIN#SFLRCD2             92
     C           *IN92     IFEQ *OFF
     C                     MOVEA#OFF9     *IN,41
     C                     MOVE 'N'       #LNERR  1
     C           #2CONG    IFNE *BLANKS
     C                     ADD  1         #LCNT
     C                     EXSR SRVAL2
     C                     ENDIF
      * Setup path infor.                                                 100811
     C                     EXSR SRPTH2                                    100811
     C                     UPDAT#SFLRCD2
     C                     ENDIF
     C                     ENDDO
     C*
     C                     Z-ADD#RRMX2    RRN2
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Condition group description is blank:
     C*
     C                     SETOF                     35
     C           #2GDSC    IFEQ *BLANKS
     C                     SETON                     35
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       ERR,15
     C                     ENDIF
     C*
     C* At least one condition is required:
     C*
     C           #LCNT     IFEQ *ZERO
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       ERR,17
     C                     ENDIF
     C*
     C* Send up to 25 error messages:
     C*
     C           #ERROR    IFEQ 'Y'
     C                     DO   25        #E      30
     C           ERR,#E    IFEQ 'Y'
     C                     MOVE MSG,#E    ZAMSID
     C                     MOVEL'CGUSRMSG'ZAMSGF
     C*
     C* If invalid operator, show a list:
     C*
     C           #E        IFEQ 7
     C                     MOVEL@OPS      ZAMSDA
     C                     ENDIF
     C*
     C                     EXSR SRSNMS
     C                     ENDIF
     C                     ENDDO
     C*
     C* If no errors, set update flag:
     C*
     C                     ELSE
     C                     MOVE 'Y'       ##UPD
     C                     ENDIF
     C*
     C           EXCHK2    TAG                             <<<=== EXCHK2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRADD2 adds a condition to this group.             **
     C********************************************************************
     C           SRADD2    BEGSR                           * S R A D D 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRADD2'  @STK,Q
     C*
     C                     Z-ADD*ZERO     RRN2
     C*                                                                   091826
     C* Move the identifier:                                              091826
     C                     Z-ADD#1CID     CNCID                           091826
     C                     Z-ADD#1CID     GCTCGP                          091826
     C                     Z-ADD#1CID     CGCID                           091826
     C*
     C* Write records to the conditions file:
     C*
     C           RRN2      DOUEQ#RRMX2
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN2
     C           RRN2      CHAIN#SFLRCD2             92
     C           *IN92     IFEQ *OFF
     C           #2CONG    ANDNE*BLANKS
     C                     MOVE #@LAYO    CNLAYO
     C                     ADD  1         CNCSEQ
     C                     MOVE 'D'       CNRECI
     C                     Z-ADD#2SEQN    CNSEQN
     C           #2SEQN    IFEQ *ZERO
     C                     ADD  1         #MXSEQ
     C                     Z-ADD#RRMX1    CNSEQN
     C                     ENDIF
     C                     MOVEL#2CONG    CNCONG
     C                     MOVEL#2OPER    CNOPER
     C* Left details:
     C                     MOVEL#2LRPT    CNLRP
     C                     MOVEL#2LNRP    CNLNRP
     C                     MOVEL#2LRDE    CNLRDE
     C***********          MOVEL#2LDTA    CNLDTA
     C                     MOVE #2LEXT    CNLVAL
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Data source depends upon element type:
     C*
     C           #2LRDE    IFEQ *BLANKS
     C           #2RELT    IFNE '*DEC  '
     C***********          MOVEL#2LDTA    CNLDTA                          091826
     C                     MOVEL#2LDTA    CNLDTA    P                     091826
     C                     ELSE
     C                     Z-ADD#2LNUM    NUMVAL
     C                     MOVELNUMDS     CNLDTA
     C                     ENDIF
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
DJU  C********** #2LDTA    IFEQ '*BLANK '
DJU  C********** #2LDTA    OREQ '*BLANKS'
DJU  C***********          MOVEL'*BLANK ' CNLDTA    P
DJU  C***********          ENDIF
     C***********
DJU  C********** #2LDTA    IFEQ '*ZERO  '
DJU  C********** #2LDTA    OREQ '*ZEROS '
DJU  C********** #2LDTA    OREQ '*ZEROES'
DJU  C***********          MOVEL'*ZERO  ' CNLDTA    P
DJU  C***********          ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Right details:
     C                     MOVEL#2RRPT    CNRRP
     C                     MOVEL#2RNRP    CNRNRP
     C                     MOVEL#2RRDE    CNRRDE
     C***********          MOVEL#2RDTA    CNRDTA
     C                     MOVE #2REXT    CNRVAL
     C*
     C* Data source depends upon element type:
     C*
     C           #2RRDE    IFEQ *BLANKS
     C           #2LELT    IFNE '*DEC  '
     C***********          MOVEL#2RDTA    CNRDTA                          091826
     C                     MOVEL#2RDTA    CNRDTA    P                     091826
     C                     ELSE
     C                     Z-ADD#2RNUM    NUMVAL
     C                     MOVELNUMDS     CNRDTA
     C                     ENDIF
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
DJU  C********** #2RDTA    IFEQ '*BLANK '
DJU  C********** #2RDTA    OREQ '*BLANKS'
DJU  C***********          MOVEL'*BLANK ' CNRDTA    P
DJU  C***********          ENDIF
     C***********
DJU  C********** #2RDTA    IFEQ '*ZERO  '
DJU  C********** #2RDTA    OREQ '*ZEROS '
DJU  C********** #2RDTA    OREQ '*ZEROES'
DJU  C***********          MOVEL'*ZERO  ' CNRDTA    P
DJU  C***********          ENDIF
     C*
     C* Description:
     C                     MOVE #2CDSC    CNDESC
     C*
     C* Ensure correct values written to conditions file                  098195
     C*                                                                   098195
     C           CNRRDE    IFNE *BLANKS                                   098195
     C                     MOVEL*BLANKS   CNRDTA                          098195
     C                     ELSE                                           098195
     C                     MOVEL*BLANKS   CNRRP                           098195
     C                     MOVEL*BLANKS   CNRNRP                          098195
     C                     END                                            098195
     C*                                                                   098195
     C           CNLRDE    IFNE *BLANKS                                   098195
     C                     MOVEL*BLANKS   CNLDTA                          098195
     C                     ELSE                                           098195
     C                     MOVEL*BLANKS   CNLRP                           098195
     C                     MOVEL*BLANKS   CNLNRP                          098195
     C                     END                                            098195
     C*                                                                   098195
     C                     WRITE@CONDL0
     C                     ENDIF
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     Z-ADD#RRMX2    RRN2
     C*
     C* Write a record to the condition groups file:
     C*
     C                     MOVE #@LAYO    CGLAYO
     C                     MOVE 'D'       CGRECI
     C*
     C*********** Default to True:                                        084049
     C***********          MOVE 'T'       CGACND                          084049
     C*
     C* Default to previous:                                              084049
     C                     MOVEL#1ACND    CGACND                          084049
     C*
     C* Description:
     C                     MOVE #2GDSC    CGDESC
     C                     WRITE@CGRPL0
     C*
     C* Write a record to the condition association file:
     C*
     C                     MOVE #@LAYO    GCLAYO
     C                     MOVE #@TCGP    GCCID
     C* Set in SRGCID ...                 GCTCGP
     C                     MOVE 'D'       GCRECI
     C                     MOVE #@PLAN    GCPLAN
     C                     MOVE #@FLDN    GCFLDN
     C* Defaults:
     C                     MOVE *BLANKS   GCSEQA
     C                     MOVE *BLANKS   GCCDTP
     C                     WRITE@GCONL0
     C*
     C* Flag as updated:
     C                     MOVE 'Y'       ##UPD
     C*
     C* Tag "updated -- review layout":
     C*
     C                     MOVE 'Y'       #@REVU
     C*
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C*
     C           EXADD2    TAG                             <<<=== EXADD2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGGRP retrieves a condition association ID.       **
     C********************************************************************
     C           SRGGRP    BEGSR                           * S R G G R P *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGGRP'  @STK,Q
     C*
     C* Make 999 attempts to get an ID (it may already be used):
     C*
     C                     Z-ADD*ZERO     #TRY    30
     C           #TRY      DOUEQ999
     C           *IN96     OREQ *OFF
     C                     ADD  1         #TRY
     C*
     C           *LOCK     IN   CGDTA
     C*
     C* If an invalid number, start at zero:
     C*
     C           #TEST3    IFEQ *BLANKS
     C                     Z-ADD*ZERO     DACGRP
     C                     ENDIF
     C*
     C                     ADD  1         DACGRP
     C                     OUT  CGDTA
     C*
     C* Move the identifier:
     C*
     C                     Z-ADDDACGRP    #@TCGP
     C*
     C* Test to see if it has been used:
     C*
     C           KKGCON    SETLLCGGCONL0                 96
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Dump if maximum number of attempts made without success:
     C*
     C           #TRY      IFEQ 999
     C           *IN96     ANDEQ*ON
     C                     MOVEL'CGGCONL0'W0FILE
     C                     MOVEL#@TCGP    W0KEY            ***************
     C                     Z-ADD6         W0ERNB           ** Database  **
     C                     MOVE 'MEM5004' W0MSGD           ** error 6.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C           EXGGRP    TAG                             <<<=== EXGGRP
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGCID retrieves a condition identifier.           **
     C********************************************************************
     C           SRGCID    BEGSR                           * S R G C I D *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGCID'  @STK,Q
     C*
     C* Make 999 attempts to get an ID (it may already be used):
     C*
     C                     Z-ADD*ZERO     #TRY
     C           #TRY      DOUEQ999
     C           *IN96     OREQ *OFF
     C                     ADD  1         #TRY
     C*
     C           *LOCK     IN   CGDTA
     C*
     C* If an invalid number, start at zero:
     C*
     C           #TEST1    IFEQ *BLANKS
     C                     Z-ADD*ZERO     DACID
     C                     ENDIF
     C*
     C                     ADD  1         DACID
     C                     Z-ADDDACID     #1CID
     C                     OUT  CGDTA
     C*
     C* Move the identifier:
     C                     Z-ADDDACID     CNCID
     C                     Z-ADDDACID     GCTCGP
     C                     Z-ADDDACID     CGCID
     C*
     C* Test to see if it has been used:
     C*
     C           KKCOND    SETLLCGCGRPL0                 96
     C                     ENDDO
     C*...................................................................
     C/EJECT
     C*...................................................................
     C           #TRY      IFEQ 999
     C           *IN96     ANDEQ*ON
     C                     MOVEL'CGCGRPL0'W0FILE
     C                     MOVEL#1CID     W0KEY            ***************
     C                     Z-ADD7         W0ERNB           ** Database  **
     C                     MOVE 'MEM5004' W0MSGD           ** error 7.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C           EXGCID    TAG                             <<<=== EXGCID
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRGSEQ retrieves a condition sequence number.      **
     C********************************************************************
     C           SRGSEQ    BEGSR                           * S R G S E Q *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRGSEQ'  @STK,Q
     C*
     C           *LOCK     IN   CGDTA
     C*
     C* If an invalid number, start at 1:
     C*
     C           #TEST2    IFEQ *BLANKS
     C                     Z-ADD1         DACSEQ
     C                     ENDIF
     C*
     C                     Z-ADDDACSEQ    CNCSEQ
     C                     ADD  1         DACSEQ
     C                     OUT  CGDTA
     C*
     C           EXGSEQ    TAG                             <<<=== EXGSEQ
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRVAL2 validates a condition.                      **
     C********************************************************************
     C           SRVAL2    BEGSR                           * S R V A L 2 *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRVAL2'  @STK,Q
     C*
     C* Clear the element types:
     C*
     C                     MOVE *BLANKS   #2LELT
     C                     MOVE *BLANKS   #2RELT
     C*
     C* Condition grouping -- must be IF, AND or OR:
     C*
     C           #2CONG    IFNE 'IF    '
     C           #2CONG    ANDNE'AND   '
     C           #2CONG    ANDNE'OR    '
     C                     SETON                     41
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,1
     C                     ENDIF
     C*
     C* The first group must be IF; subsequent groups may not be IF:
     C*                 ~~~~                              ~~~
     C           RRN2      IFEQ 1
     C           #2CONG    ANDNE'IF    '
     C           RRN2      ORNE 1
     C           #2CONG    ANDEQ'IF    '
     C                     SETON                     41
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,18
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Left element and left data both blank:
     C*
DJU  C********** #2LRDE    IFEQ *BLANKS
DJU  C********** #2LDTA    ANDEQ*BLANKS
DJU  C***********          SETON                     4247
DJU  C***********          MOVE 'Y'       #ERROR
DJU  C***********          MOVE 'Y'       #LNERR
DJU  C***********          MOVE 'Y'       ERR,2
DJU  C***********          ENDIF
     C*
     C* Left element and left data both non-blank:
     C*
     C           #2LRDE    IFNE *BLANKS
     C           #2LDTA    ANDNE*BLANKS
DJU  C           #2LRDE    ORNE *BLANKS
DJU  C           #2LNUM    ANDNE*ZERO
     C                     SETON                     4247
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,3
     C                     ENDIF
     C*
     C* Left extender and left data both non-blank (if not error 3):
     C*
     C           #2LEXT    IFNE *BLANK
     C           #2LDTA    ANDNE*BLANKS
DJU  C           #2LEXT    ORNE *BLANK
DJU  C           #2LNUM    ANDNE*ZERO
     C********** ERR,3     ANDEQ'N'                                       084049
     C           ERR,3     IFEQ 'N'
     C                     SETON                     4347
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,4
     C                     ENDIF                                          084049
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Left element not valid (if not error 3):
     C*
     C           #2LRDE    IFNE *BLANKS
     C           ERR,3     ANDEQ'N'
     C           #2LRDE    IFNE '##DATA'
     C           #2LNRP    ORNE 'REPEAT'
     C**********           MOVE *BLANKS   P2ALL                                        128686 180285
     C                     MOVE #2LRDE    P2RDE
     C**********           MOVE #2LRPT    P2RPTH                    086941128686
     C**********           MOVE #2LNRP    P2NPTH                    086941128686
     C                     MOVE #2LRPT    P2RPTH                                              180285
     C                     MOVE #2LNRP    P2NPTH                                              180285
     C                     EXSR SRVRDE
     C           P2RDE     IFEQ *BLANKS
     C                     SETON                     42
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,5
     C                     ELSE
     C                     MOVE P2RPTH    #2LRPT
     C                     MOVE P2NPTH    #2LNRP
     C                     MOVE P2ETYP    #2LELT
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C*
     C* Left extender not valid (must be either blank or "P" (Previous)):
     C*
     C           #2LEXT    IFNE *BLANK
     C           #2LEXT    ANDNE'P'
     C           ERR,4     ANDEQ'N'
     C                     SETON                     43
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,6
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Operator -- required and must be found in array OPR@:
     C*
     C           #2OPER    IFEQ *BLANKS
     C                     SETON                     44
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,7
     C                     ELSE
     C           #2OPER    LOKUPOPR@                     93
     C           *IN93     IFEQ *OFF
     C                     SETON                     44
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,7
     C                     ENDIF
     C                     ENDIF
     C*
     C* Right element and right data both blank:
     C*
DJU  C********** #2RRDE    IFEQ *BLANKS
DJU  C********** #2RDTA    ANDEQ*BLANKS
DJU  C***********          SETON                     4548
DJU  C***********          MOVE 'Y'       #ERROR
DJU  C***********          MOVE 'Y'       #LNERR
DJU  C***********          MOVE 'Y'       ERR,8
DJU  C***********          ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Right element and right data both non-blank:
     C*
     C           #2RRDE    IFNE *BLANKS
     C           #2RDTA    ANDNE*BLANKS
DJU  C           #2RRDE    ORNE *BLANKS
DJU  C           #2RNUM    ANDNE*ZERO
     C                     SETON                     4548
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,9
     C                     ENDIF
     C*
     C* Right extender and right data both non-blank (if not error 9):
     C*
     C           #2REXT    IFNE *BLANK
     C           #2RDTA    ANDNE*BLANKS
DJU  C           #2REXT    ORNE *BLANK
DJU  C           #2RNUM    ANDNE*ZERO
     C********** ERR,9     ANDEQ'N'                                       084049
     C           ERR,9     IFEQ 'N'                                       084049
     C                     SETON                     4648
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,10
     C                     ENDIF                                          084049
     C                     ENDIF
     C*
     C* Right element not valid (if not error 9):
     C*
     C           #2RRDE    IFNE *BLANKS
     C           ERR,9     ANDEQ'N'
     C           #2RRDE    IFNE '##DATA'
     C           #2RNRP    ORNE 'REPEAT'
     C**********           MOVE *BLANKS   P2ALL                                        128686 180285
     C                     MOVE #2RRDE    P2RDE
     C**********           MOVE #2RRPT    P2RPTH                    086941128686
     C**********           MOVE #2RNRP    P2NPTH                    086941128686
     C                     MOVE #2RRPT    P2RPTH                                              180285
     C                     MOVE #2RNRP    P2NPTH                                              180285
     C                     EXSR SRVRDE
     C           P2RDE     IFEQ *BLANKS
     C                     SETON                     45
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,11
     C                     ELSE
     C                     MOVE P2RPTH    #2RRPT
     C                     MOVE P2NPTH    #2RNRP
     C                     MOVE P2ETYP    #2RELT
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Right extender not valid (must be either blank or "P" (Previous)):
     C*
     C           #2REXT    IFNE *BLANK
     C           #2REXT    ANDNE'P'
     C           ERR,10    ANDEQ'N'
     C                     SETON                     46
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,12
     C                     ENDIF
     C*
     C* Left data and right data both non-blank:
     C*
     C           #2LDTA    IFNE *BLANKS
     C           #2RDTA    ANDNE*BLANKS
     C                     SETON                     4748
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,13
     C                     ENDIF
     C*
     C* Left element equal to right element (if not error 3):
     C*
     C           #2LRDE    IFNE *BLANKS
     C           #2LRDE    ANDEQ#2RRDE
     C           #2LEXT    ANDEQ#2REXT
     C           #2LRPT    ANDEQ#2RRPT                                    096569
     C           #2LNRP    ANDEQ#2RNRP                                    096569
     C           ERR,3     ANDEQ'N'
     C                     SETON                     4245
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,19
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If the left RDE is of type "*DEC" and right data is used,
     C*  this data must be *ZERO (or its variants); except that
     C*   a left RDE of COPY or PAGE allows right data of *nnnn,
     C*   where "nnnn" is a 4-digit number:
     C*
     C********** #LNERR    IFEQ 'N'
DJU  C********** #2LELT    ANDEQ'*DEC  '
DJU  C********** #2RDTA    ANDNE*BLANKS
DJU  C********** #2RDTA    IFNE '*ZERO   '
DJU  C********** #2RDTA    ANDNE'*ZEROS '
DJU  C********** #2RDTA    ANDNE'*ZEROES'
DJU  C********** #2LRDE    IFNE 'COPY   '
DJU  C********** #2LRDE    ANDNE'PAGE   '
DJU  C***********          SETON                     48
DJU  C***********          MOVE 'Y'       #ERROR
DJU  C***********          MOVE 'Y'       #LNERR
DJU  C***********          MOVE 'Y'       ERR,20
DJU  C***********          ELSE
DJU  C***********          EXSR SRVNUM                        special case
DJU  C***********          ENDIF
DJU  C***********          ENDIF
DJU  C***********          ENDIF
     C*
     C* If the right RDE is of type "*DEC" and left data is used,
     C*  this data must be *ZERO (or its variants) -- the exception
     C*  shown above for COPY and PAGE does not apply here:
     C*
DJU  C********** #LNERR    IFEQ 'N'
DJU  C********** #2RELT    ANDEQ'*DEC  '
DJU  C********** #2LDTA    ANDNE*BLANKS
DJU  C********** #2LDTA    IFNE '*ZERO   '
DJU  C********** #2LDTA    ANDNE'*ZEROS '
DJU  C********** #2LDTA    ANDNE'*ZEROES'
DJU  C***********          SETON                     47
DJU  C***********          MOVE 'Y'       #ERROR
DJU  C***********          MOVE 'Y'       #LNERR
DJU  C***********          MOVE 'Y'       ERR,22
DJU  C***********          ENDIF
DJU  C***********          ENDIF
      *                                                                   087716
      ** Use characteristic of RDE's to be entered to ascertain           087716
      ** which fields should be entered.                                  087716
     C           #2LRDE    IFNE *BLANKS                                   087716
     C           #2RRDE    ANDEQ*BLANKS                                   087716
      *                                                                   087716
     C                     SELEC                                          087716
     C           #2LELT    WHEQ '*DEC'                                    087716
      *                                                                   087716
     C           #2RDTA    IFNE *BLANKS                                   087716
     C                     SETON                     48                   087716
     C                     MOVE 'Y'       #ERROR                          087716
     C                     MOVE 'Y'       #LNERR                          087716
     C                     MOVE 'Y'       ERR,23                          087716
     C                     ENDIF                                          087716
      *                                                                   087716
     C                     OTHER                                          087716
     C           #2RNUM    IFNE *ZEROS                                    087716
     C                     SETON                     48                   087716
     C                     MOVE 'Y'       #ERROR                          087716
     C                     MOVE 'Y'       #LNERR                          087716
     C                     MOVE 'Y'       ERR,23                          087716
     C                     ENDIF                                          087716
      *                                                                   087716
     C                     ENDSL                                          087716
      *                                                                   087716
     C                     ENDIF                                          087716
      *                                                                   087716
     C           #2RRDE    IFNE *BLANKS                                   087716
     C           #2LRDE    ANDEQ*BLANKS                                   087716
      *                                                                   087716
     C                     SELEC                                          087716
     C           #2RELT    WHEQ '*DEC'                                    087716
      *                                                                   087716
     C           #2LDTA    IFNE *BLANKS                                   087716
     C                     SETON                     47                   087716
     C                     MOVE 'Y'       #ERROR                          087716
     C                     MOVE 'Y'       #LNERR                          087716
     C                     MOVE 'Y'       ERR,23                          087716
     C                     ENDIF                                          087716
      *                                                                   087716
     C                     OTHER                                          087716
     C           #2LNUM    IFNE *ZEROS                                    087716
     C                     SETON                     47                   087716
     C                     MOVE 'Y'       #ERROR                          087716
     C                     MOVE 'Y'       #LNERR                          087716
     C                     MOVE 'Y'       ERR,23                          087716
     C                     ENDIF                                          087716
      *                                                                   087716
     C                     ENDSL                                          087716
      *                                                                   087716
     C                     ENDIF                                          087716
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Validate the condition if no other errors:
     C*
     C           #LNERR    IFEQ 'N'
     C                     MOVE #2OPER    P3OPER
     C                     CLEARP3L256
     C                     CLEARP3R256
     C*
     C           #2LELT    IFEQ *BLANKS
     C                     MOVEL#2LDTA    P3L256
     C                     ENDIF
     C*
     C           #2RELT    IFEQ *BLANKS
     C                     MOVEL#2RDTA    P3R256
     C                     ENDIF
     C*
     C           #2LELT    IFEQ '*DEC  '
     C           #2RELT    ANDEQ*BLANKS
     C                     CLEARNUMDS
     C                     Z-ADD#2RNUM    NUMVAL
     C                     MOVELNUMDS     P3R256    P
     C                     ENDIF
     C*
     C           #2RELT    IFEQ '*DEC  '
     C           #2LELT    ANDEQ*BLANKS
     C                     CLEARNUMDS
     C                     Z-ADD#2LNUM    NUMVAL
     C                     MOVELNUMDS     P3L256    P
     C                     ENDIF
     C*
     C                     MOVE #2LELT    P3LET
     C                     MOVE #2RELT    P3RET
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Figurative constants:
     C*
DJU  C********** #2LDTA    IFEQ '*BLANK '
DJU  C********** #2LDTA    OREQ '*BLANKS'
DJU  C***********          MOVE *BLANKS   P3L256
DJU  C***********          ENDIF
     C***********
DJU  C********** #2LDTA    IFEQ '*ZERO  '
DJU  C********** #2LDTA    OREQ '*ZEROS '
DJU  C********** #2LDTA    OREQ '*ZEROES'
DJU  C***********          MOVE *ZEROS    P3L256
DJU  C***********          ENDIF
     C***********
DJU  C********** #2RDTA    IFEQ '*BLANK '
DJU  C********** #2RDTA    OREQ '*BLANKS'
DJU  C***********          MOVE *BLANKS   P3R256
DJU  C***********          ENDIF
     C***********
DJU  C********** #2RDTA    IFEQ '*ZERO  '
DJU  C********** #2RDTA    OREQ '*ZEROS '
DJU  C********** #2RDTA    OREQ '*ZEROES'
DJU  C***********          MOVE *ZEROS    P3R256
DJU  C***********          ENDIF
     C*
     C                     CALL 'CG3010'
     C                     PARM           P3RTN   7
     C                     PARM           P3LET   6
     C                     PARM           P3RET   6
     C                     PARM           P3OPER 10
     C                     PARM           P3L256256
     C                     PARM           P3R256256
     C                     PARM           P3VAL   1
     C*...................................................................
     C/EJECT
     C*...................................................................
     C           P3RTN     IFEQ '*ERROR*'
     C                     SETON                     4142
     C                     SETON                     4445
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,16
     C                     ENDIF
     C                     ENDIF
     C*
     C* Skip the description test:
     C*
     C                     GOTO EXVAL2
     C*
     C* Condition description is blank (not currently an error):
     C*
     C           #2CDSC    IFEQ *BLANKS
     C                     SETON                     49
     C                     MOVE 'Y'       #ERROR
     C                     MOVE 'Y'       #LNERR
     C                     MOVE 'Y'       ERR,14
     C                     ENDIF
     C*
     C           EXVAL2    TAG                             <<<=== EXVAL2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************084049
     C***********  Subroutine SRVNUM validates a number of the format   **084049
     C***********   "*nnnn", used for comparison with COPY or PAGE.     **084049
     C********************************************************************084049
DJU  C********** SRVNUM    BEGSR                           * S R V N U M *084049
     C***********                                                         084049
     C*********** Add subroutine name to stack:                           084049
     C***********                                                         084049
DJU  C***********          ADD  1         Q                               084049
DJU  C***********          MOVEL'SRVNUM'  @STK,Q                          084049
     C***********                                                         084049
DJU  C***********          MOVEL#2RDTA    COPYDS           5 characters   084049
DJU  C***********          MOVE 'N'       #ERRX   1                       084049
DJU  C***********          MOVE 'N'       #BLANK  1                       084049
     C***********                                                         084049
     C*********** The value must have a leading asterisk:                 084049
     C***********                                                         084049
DJU  C********** CPY,1     IFNE '*'                                       084049
DJU  C***********          MOVE 'Y'       #ERRX                           084049
DJU  C***********          ELSE                                           084049
DJU  C********** 2         DO   5         #C      10                      084049
DJU  C***********          ADD  1         #C                              084049
DJU  C***********          MOVE CPY,#C    #CHAR1  1                       084049
     C***********                                                         084049
     C*********** Each character in positions 2 to 5 must be a valid digit084049
     C***********  or a trailing blank:                                   084049
     C***********       ~~~~~~~~                                          084049
DJU  C********** #CHAR1    IFLT '0'                         Not 0..9:     084049
DJU  C********** #CHAR1    ORGT '9'                                       084049
DJU  C********** #CHAR1    IFEQ *BLANK                      A blank --    084049
DJU  C***********          MOVE 'Y'       #BLANK             note this    084049
DJU  C***********          ELSE                             else          084049
DJU  C***********          MOVE 'Y'       #ERRX              tag error.   084049
DJU  C***********          ENDIF                                          084049
DJU  C***********          ELSE                             Is in 0..9:   084049
DJU  C********** #BLANK    IFEQ 'Y'                          after blank -084049
DJU  C***********          MOVE 'Y'       #ERRX               tag error.  084049
DJU  C***********          ENDIF                                          084049
DJU  C***********          ENDIF                                          084049
DJU  C***********          ENDDO                                          084049
DJU  C***********          ENDIF                                          084049
     C*...................................................................084049
     C/EJECT
     C*...................................................................084049
     C******* If the value is valid so far, it must be followed by blanks:084049
     C***********                                                         084049
DJU  C********** #ERRX     IFEQ 'N'                                       084049
DJU  C***********          MOVE #2RDTA    #DTA10 10           chars 6..15 084049
DJU  C********** #DTA10    IFNE *BLANKS                                   084049
DJU  C***********          MOVE 'Y'       #ERRX                           084049
DJU  C***********          ENDIF                                          084049
DJU  C***********          ENDIF                                          084049
     C***********                                                         084049
     C*********** If an error was encountered, set the error flags:       084049
     C***********                                                         084049
DJU  C********** #ERRX     IFNE 'N'                                       084049
DJU  C***********          SETON                     48                   084049
DJU  C***********          MOVE 'Y'       #ERROR                          084049
DJU  C***********          MOVE 'Y'       #LNERR                          084049
DJU  C***********          MOVE 'Y'       ERR,21                          084049
DJU  C***********          ENDIF                                          084049
     C***********                                                         084049
DJU  C***********EXVNUM    TAG                             <<<=== EXVNUM  084049
     C***********                                                         084049
     C*********** Unwind subroutine stack:                                084049
     C***********                                                         084049
DJU  C***********          MOVE *BLANKS   @STK,Q                          084049
DJU  C***********          SUB  1         Q                               084049
     C***********                                                         084049
     C***********          ENDSR                                          084049
     C********************************************************************084049
     C/EJECT
     C********************************************************************
     C**  Subroutine SRPRMT retrieves RDEs via prompting.               **
     C********************************************************************
     C           SRPRMT    BEGSR                           * S R P R M T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRPRMT'  @STK,Q
     C*
     C                     Z-ADD*ZERO     RRN2
     C*
     C           RRN2      DOUEQ#RRMX2
     C           *IN92     OREQ *ON
     C           *IN03     OREQ *ON
     C           *IN12     OREQ *ON
     C                     ADD  1         RRN2
     C           RRN2      CHAIN#SFLRCD2             92
     C           *IN92     IFEQ *OFF
     C*
     C* Work with the left element:
     C*
     C* Special case:
     C*
     C           #2LRDE    IFEQ '##DATA'
     C           #2LNRP    IFEQ *BLANKS
     C                     MOVE *BLANKS   #2LRPT
     C                     MOVE 'REPEAT'  #2LNRP
     C                     ENDIF
     C           #2LNRP    IFEQ 'REPEAT'
     C                     MOVE '*DEC  '  #2LELT
     C                     ENDIF
     C                     ENDIF
     C*
     C* "?":
     C*
     C           #2LRDE    IFEQ #QUERY
     C                     MOVE *BLANKS   P2RDE
     C                     EXSR SRVRDE
     C*
     C* Get the data element details, if neither F3 nor F12:
     C*
     C           P2RTN     IFEQ *BLANKS
     C                     MOVE P2RDE     #2LRDE
     C                     MOVE P2RPTH    #2LRPT                          086941
     C                     MOVE P2NPTH    #2LNRP                          086941
     C                     ENDIF
     C                     ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Work with the right element:
     C*
     C* Special case:
     C*
     C           #2RRDE    IFEQ '##DATA'
     C           #2RNRP    IFEQ *BLANKS
     C                     MOVE *BLANKS   #2RRPT
     C                     MOVE 'REPEAT'  #2RNRP
     C                     ENDIF
     C           #2RNRP    IFEQ 'REPEAT'
     C                     MOVE '*DEC  '  #2RELT
     C                     ENDIF
     C                     ENDIF
     C*
     C* "?":
     C*
     C           #2RRDE    IFEQ #QUERY
     C                     MOVE *BLANKS   P2RDE
     C                     EXSR SRVRDE
     C*
     C* Get the data element details, if neither F3 nor F12:
     C*
     C           P2RTN     IFEQ *BLANKS
     C                     MOVE P2RDE     #2RRDE
     C                     MOVE P2RPTH    #2RRPT                          086941
     C                     MOVE P2NPTH    #2RNRP                          086941
     C                     ENDIF
     C                     ENDIF
     C*
      * Setup path infor.                                                 100811
     C                     EXSR SRPTH2                                    100811
     C                     UPDAT#SFLRCD2
     C                     ENDIF
     C                     ENDDO
     C*
     C                     Z-ADD#RRMX2    RRN2
     C*
     C           EXPRMT    TAG                             <<<=== EXPRMT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRVRDE validates an entered RDE.                   **
     C********************************************************************
     C           SRVRDE    BEGSR                           * S R V R D E *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRVRDE'  @STK,Q
     C*
     C* Move the path names:
     C                     MOVEL#@RPTH    P2PTH1
     C                     MOVEL#@LRPT    P2PTH2
     C*
     C                     CALL 'CG8800'               90
     C                     PARM           P2RTN   7
     C                     PARM           P2PTH1  6
     C                     PARM           P2PTH2  6
     C                     PARM           P2DATA
     C*
     C* Trap error:
     C           P2RTN     IFNE *BLANKS
     C           P2RTN     ANDNE'Y2U9999'
     C           P2RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C                     MOVEL'CG8800  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD8         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 8.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C* F3:
     C           P2RTN     IFEQ 'Y2U9999'
     C                     SETON                     03
     C                     ENDIF
     C*
     C           EXVRDE    TAG                             <<<=== EXVRDE
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRUPD updates the files with new or added data.    **
     C********************************************************************
     C           SRUPD     BEGSR                           * S R U P D   *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRUPD '  @STK,Q
     C*
     C                     Z-ADD*ZERO     RRN2
     C                     Z-ADD*ZERO     ##CID   80
     C                     Z-ADD*ZERO     CNCSEQ
     C*
     C           RRN2      DOUEQ#RRMX2
     C           *IN92     OREQ *ON
     C                     ADD  1         RRN2
     C           RRN2      CHAIN#SFLRCD2             92
     C           *IN92     IFEQ *OFF
     C                     MOVE #@LAYO    CNLAYO
     C                     Z-ADD#1CID     CNCID
     C                     ADD  1         CNCSEQ
     C                     MOVE 'D'       CNRECI
     C                     Z-ADD#2SEQN    CNSEQN
     C                     MOVEL#2CONG    CNCONG
     C                     MOVEL#2OPER    CNOPER
     C* Left details:
     C                     MOVEL#2LRDE    CNLRDE
     C                     MOVE #2LEXT    CNLVAL
     C*
     C* Data source depends upon element type:
     C*
     C           #2LELT    IFNE '*DEC  '
     C                     MOVEL#2LDTA    CNLDTA
     C                     ELSE
     C                     Z-ADD#2LNUM    NUMVAL
     C                     MOVELNUMDS     CNLDTA
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
     C           #2LDTA    IFEQ '*BLANK '
     C           #2LDTA    OREQ '*BLANKS'
     C                     MOVEL'*BLANK ' CNLDTA    P
     C                     ENDIF
     C*
DJU  C********** #2LDTA    IFEQ '*ZERO  '
DJU  C********** #2LDTA    OREQ '*ZEROS '
DJU  C********** #2LDTA    OREQ '*ZEROES'
DJU  C***********          MOVEL'*ZERO  ' CNLDTA    P
DJU  C***********          ENDIF
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Right details:
     C                     MOVEL#2RRDE    CNRRDE
     C                     MOVE #2REXT    CNRVAL
     C*
     C* Data source depends upon element type:
     C*
     C           #2RELT    IFNE '*DEC  '
     C                     MOVEL#2RDTA    CNRDTA
     C                     ELSE
     C                     Z-ADD#2RNUM    NUMVAL
     C                     MOVELNUMDS     CNRDTA
     C                     ENDIF
     C*
     C* Figurative constants:
     C*
     C           #2RDTA    IFEQ '*BLANK '
     C           #2RDTA    OREQ '*BLANKS'
     C                     MOVEL'*BLANK ' CNRDTA    P
     C                     ENDIF
     C*
DJU  C********** #2RDTA    IFEQ '*ZERO  '
DJU  C********** #2RDTA    OREQ '*ZEROS '
DJU  C********** #2RDTA    OREQ '*ZEROES'
DJU  C***********          MOVEL'*ZERO  ' CNRDTA    P
DJU  C***********          ENDIF
     C* Ensure correct values written to conditions file                  098195
     C*                                                                   098195
     C           CNRRDE    IFNE *BLANKS                                   098195
     C                     MOVEL*BLANKS   CNRDTA                          098195
     C                     ELSE                                           098195
     C                     MOVEL*BLANKS   CNRRP                           098195
     C                     MOVEL*BLANKS   CNRNRP                          098195
     C                     END                                            098195
     C*                                                                   098195
     C           CNLRDE    IFNE *BLANKS                                   098195
     C                     MOVEL*BLANKS   CNLDTA                          098195
     C                     ELSE                                           098195
     C                     MOVEL*BLANKS   CNLRP                           098195
     C                     MOVEL*BLANKS   CNLNRP                          098195
     C                     END                                            098195
     C*                                                                   098195
     C* Write a record:
     C                     WRITE@CONDL0
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C                     ENDIF
     C                     ENDDO
     C* Reset RRN2:
     C                     Z-ADD#RRMX2    RRN2
     C*
     C           EXUPD     TAG                             <<<=== EXUPD
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************084049
     C***********  Subroutine SR#EL2 deletes a set of conditions.       **084049
     C**  Subroutine SRDEL2 deletes a set of conditions.                **084049
     C**                                                                **084049
     C******** Note: This subroutine will replace the next one (SRDEL2) **084049
     C********        when the deletions suite (CG04xx) has been tested **084049
     C********        and approved.                                     **084049
     C********************************************************************084049
     C********** SR#EL2    BEGSR                           * S R # E L 2 *084049
     C           SRDEL2    BEGSR                           * S R D E L 2 *084049
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRDEL2'  @STK,Q
     C*
     C                     MOVEL#@LAYO    P4LAYO
     C                     MOVE #@PLAN    P4PLAN
     C                     MOVE #@FLDN    P4FLDN
     C                     Z-ADD#@TCGP    P4TCGP
     C***********          Z-ADD*ZERO     P4CID                     084049091826
     C                     Z-ADD#1CID     P4CID                           091826
     C                     MOVE '*PDELETE'W4ACT                           084049
     C*
     C                     CALL 'CG0499'               90
     C                     PARM           P4RTN
     C                     PARM           W4ACT
     C           P4PARM    PARM P4PARM    P@PAR1                          084049
     C*
     C* Trap error:
     C           P4RTN     IFNE *BLANKS
     C           P4RTN     ANDNE'Y2U9999'
     C           P4RTN     ANDNE'USR0790'
     C           *IN90     OREQ *ON
     C                     MOVEL'CG0499  'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD9         W0ERNB           ** Database  **
     C                     MOVEL'MEM5003' W0MSGD           ** error 9.  **
     C                     MOVEL'MIDAS  ' W0MSGF           ***************
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C* Tag changes:                                                      084049
     C                     MOVE 'Y'       ##CHG                           084049
     C*
     C           EXDEL2    TAG                             <<<=== EXDEL2
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************084049
     C***********  Subroutine SRDEL2 deletes a set of conditions.       **084049
     C********************************************************************084049
     C********** SRDEL2    BEGSR                           * S R D E L 2 *084049
     C***********                                                         084049
     C*********** Add subroutine name to stack:                           084049
     C***********                                                         084049
     C***********          ADD  1         Q                               084049
     C***********          MOVEL'SRDEL2'  @STK,Q                          084049
     C***********                                                         084049
     C*********** Delete the conditions:                                  084049
     C***********                                                         084049
     C********** KKCOND    SETLLCGCONDL0                                  084049
     C********** *IN91     DOUEQ*ON                                       084049
     C********** KKCOND    READECGCONDL0                 91               084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@CONDL0                                   084049
     C***********          ENDIF                                          084049
     C***********          ENDDO                                          084049
     C***********                                                         084049
     C*********** Delete the condition group:                             084049
     C***********                                                         084049
     C********** KKCOND    CHAINCGCGRPL0             91                   084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@CGRPL0                                   084049
     C***********          ENDIF                                          084049
     C***********                                                         084049
     C*********** Delete the condition association:                       084049
     C***********                                                         084049
     C********** KKGCO2    CHAINCGGCONL0             91                   084049
     C********** *IN91     IFEQ *OFF                                      084049
     C***********          DELET@GCONL0                                   084049
     C***********          ENDIF                                          084049
     C***********                                                         084049
     C********** EXDEL2    TAG                             <<<=== EXDEL2  084049
     C***********                                                         084049
     C*********** Unwind subroutine stack:                                084049
     C***********                                                         084049
     C***********          MOVE *BLANKS   @STK,Q                          084049
     C***********          SUB  1         Q                               084049
     C***********                                                         084049
     C***********          ENDSR                                          084049
     C********************************************************************084049
     C/EJECT
     C********************************************************************
     C**  Subroutine SRTEXT retrieves displayed text strings.           **
     C********************************************************************
     C           SRTEXT    BEGSR                           * S R T E X T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRTEXT'  @STK,Q
     C* Header texts:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1498' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD1
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1499' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD2
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1587' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD3
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1500' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD4
     C*...................................................................
     C/EJECT
     C*...................................................................
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1544' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD5
     C*
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1501' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEAD6                  4 6
     C*
     C* Line text:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1545' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #TEXT1
     C* Left numeric:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1798' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #TEXTL
     C* Right numeric:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1799' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #TEXTN
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Instructions:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1502' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD1
     C*
     C* Function keys:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1503' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD2
     C*
     C* More instructions:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1504' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD3
     C* More function keys:
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1505' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    ##CMD4
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* "Layout:":
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1660' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEADL
     C*
     C* "Plane:":
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1661' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEADP
     C*
     C* "Field:":
     C                     CALL 'CGC1000'              9090
     C                     PARM 'CGD1662' #MSGID
     C                     PARM 'CGUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
     C*
     C                     MOVEL#MSTX1    #HEADF
     C*
     C           EXTEXT    TAG                             <<<=== EXTEXT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRSNMS sends a message to the program's queue.     **
     C********************************************************************
     C           SRSNMS    BEGSR                           * S R S N M S *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRSNMS'  @STK,Q
     C*
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVE ##PGM     ZAPGMQ
     C                     ENDIF
     C*
     C* If no message file specified, use default:
     C*
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVE ZADFMF    ZAMSGF
     C                     ENDIF
     C*
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
     C*
     C* Clear all fields after use:
     C*
     C                     MOVE *BLANKS   ZAPGMQ
     C                     MOVE *BLANKS   ZAPGRL
     C                     MOVE *BLANKS   ZAMSID
     C                     MOVE *BLANKS   ZAMSGF
     C                     MOVE *BLANKS   ZAMSDA
     C                     MOVE *BLANKS   ZAMSTP
     C*
     C           EXSNMS    TAG                             <<<=== EXSNMS
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SREXPG exits the program.                          **
     C********************************************************************
     C           SREXPG    BEGSR                           * S R E X P G *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SREXPG'  @STK,Q
     C* F3:
     C           *IN03     IFEQ *ON
     C                     MOVE 'Y2U9999' P0RTN
     C***********          ROLBK                                          084478
     C                     CLEAR#@PLAN
     C                     ENDIF
     C* F12:
     C           *IN12     IFEQ *ON
     C                     MOVE 'USR0790' P0RTN
     C                     ENDIF
     C*
     C* /Copy point for exit processing:
     C*
     C/COPY WNCPYSRC,CG8400DEPP
     C*
     C* Copy any undisplayed messages to the caller:
     C*
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
     C*
     C* Update the LDA:
     C                     MOVE #@LAST    #@NEXT
     C                     MOVE *BLANKS   #@LAST
     C                     OUT  BIGLDA
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* If neither F3 nor F12, commit changes:
     C*
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
     C***********          COMIT                                          084478
     C*
     C* Temporary fix -- plane conditions:
     C*
     C           #@FLDN    IFEQ *BLANKS                                   088478
     C*                                                                   088478
     C                     CALL 'CG8250'                                  088478
     C                     PARM           P5RTN   7                       088478
     C                     PARM 'C'       P5RPLY  1                       088478
     C                     PARM '       ' P5MSG   7                       088478
     C*                                                                   088478
     C                     ENDIF                                          088478
     C*
     C* Clear work-files used by CG8300:
     C*
     C                     CALL 'CG8301'
     C                     PARM *BLANKS   P@RTCD  7
     C*
     C                     ENDIF
     C*
     C* Close the plane definitions files or the plane declarations files:084049
     C*
     C           #@FLDN    IFNE *BLANKS
     C                     CLOSECGPDEFL0
     C                     CLOSECGPDEFL1                                  084049
     C                     ELSE
     C                     CLOSECGPDECL0
     C                     CLOSECGPDECL1                                  084049
     C                     ENDIF
     C*
     C           EXEXPG    TAG                             <<<=== EXEXPG
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINIT provides initialisation.                    **
     C********************************************************************
     C           SRINIT    BEGSR                           * S R I N I T *
     C*
     C* Add subroutine name to stack:
     C*
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
     C*
     C* Define and clear error return code:
     C*
     C                     MOVE *BLANKS   P0RTN   7
     C*
     C* Clear messages:
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ
     C                     PARM '*SAME'   ZAPGRL
     C*
     C* Set job date and time and the screen time:
     C*
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
     C                     Z-ADD##JTM     ##TME   60
     C*
     C* Define the default message file:
     C*
     C                     MOVEL'CGUSRMSG'ZADFMF 10
     C*
     C* Move the copyright parameter:
     C*
     C                     MOVEACPY@      ACT@   80
     C*
     C* Get the run-date:
     C*
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C*
     C                     MOVELAGMRDT    ##MRDT  7        Midas Run date
     C                     MOVELAGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* /Copy point for calculations:
     C*
     C/COPY WNCPYSRC,CG8400DCPG
     C*
     C* Build a list of valid operators:
     C*
     C           OPR@,1    CAT  OPR@,2:1  @OPS   50 P
     C           @OPS      CAT  OPR@,3:1  @OPS      P
     C           @OPS      CAT  OPR@,4:1  @OPS      P
     C           @OPS      CAT  OPR@,5:1  @OPS      P
     C           @OPS      CAT  OPR@,6:1  @OPS      P
     C*
     C* Get the local data area (*LDA):
     C*
     C           *NAMVAR   DEFN *LDA      BIGLDA
     C                     IN   BIGLDA
     C*
     C                     MOVE *BLANKS   #HEADL 20
     C                     Z-ADD*ZERO     #@TCGP
     C*
     C                     MOVE #@PLAN    #1PLAN
     C                     MOVE #@FLDN    #1FLDN
     C*
     C* Show the "Field:" label only if a field name is given:
     C*
     C                     SETOF                     50
     C           #@FLDN    IFNE *BLANKS
     C                     SETON                     50
     C                     ENDIF
     C*
     C* Clear the "changes" flag:                                         084049
     C*                                                                   084049
     C                     MOVE 'N'       ##CHG   1                       084049
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Open the plane definitions files or the plane declarations files: 084049
     C*
     C           #@FLDN    IFNE *BLANKS
     C                     OPEN CGPDEFL0
     C                     OPEN CGPDEFL1                                  084049
     C                     ELSE
     C                     OPEN CGPDECL0
     C                     OPEN CGPDECL1                                  084049
     C                     ENDIF
     C*
     C* Move values to key list data structures:
     C*
     C                     MOVE #@LAYO    @@LAYO
     C                     MOVE #@PLAN    @@PLAN
     C                     MOVE #@FLDN    @@FLDN
     C*
     C* Define the conditions data area:
     C*
     C           *NAMVAR   DEFN           CGDTA
     C*
     C                     MOVE *ALL'0'   #OFF9   9
     C*
     C* Get the text for the headings and command keys:
     C*
     C                     EXSR SRTEXT
     C*
     C* Load the subfile:
     C                     EXSR SRINZ1
     C*...................................................................
     C/EJECT
     C*...................................................................
     C* Key lists:
     C*
     C* CGCGRPLn:                                                         084049
     C           KKCGRP    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           GCTCGP
     C* CGCONDL0:
     C           KKCOND    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #1CID
     C* CGGCONLn:
     C           KKGCON    KLIST                                          084049
     C                     KFLD           #@LAYO
     C                     KFLD           #@TCGP
     C* ==="===
     C           KKGCO2    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@TCGP
     C                     KFLD           #1CID
     C* CGPDECLn:                                                         084049
     C           KKPDEC    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C* CGPDEFLn:                                                         084049
     C           KKPDEF    KLIST
     C                     KFLD           #@LAYO
     C                     KFLD           #@PLAN
     C                     KFLD           #@FLDN
     C*
     C* Define the conditions deletion program parameter:
     C*
     C           *LIKE     DEFN P4PARM    P@PAR1
     C*
     C           EXINIT    TAG                             <<<=== EXINIT
     C*
     C* Unwind the subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C** Subroutine *PSSR handles program errors.                       **
     C********************************************************************
     C*
     C/COPY CGCPYSRC,SRERRPSSR
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* File and Program Error Processing
     C*
     C/COPY CGCPYSRC,SRERRC
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* /Copy point for calculation specifications:
     C*
     C/COPY WNCPYSRC,CG8400CPG
     C*
     C********************************************************************
     O/EJECT
     O********************************************************************
     C* /Copy point for output:
     C*
     O/COPY WNCPYSRC,CG8400DOPG
     C*
     O********************************************************************
** CPY@
(c) Misys International Banking Systems Ltd. 2001
** OPR@ -- Array of valid operation codes.
EQUAL     |
GREATER   |
GREATEREQ |
LESS      |
LESSEQUAL |
NOTEQUAL  |
** MSG -- Error message identifiers for the second subfile's validation.
CGD1531 -- Invalid condition grouping (#2CONG).
CGD1532 -- Left element and left data both blank.
CGD1533 -- Left element and left data both non-blank.
CGD1534 -- Left extender and left data both non-blank.
CGD1535 -- Left element not valid.
CGD1536 -- Left extender not valid.
CGD1537 -- Operator not valid.
CGD1538 -- Right element and right data both blank.
CGD1539 -- Right element and right data both non-blank.
CGD1540 -- Right extender and right data both non-blank.
CGD1541 -- Right element not valid.
CGD1542 -- Right extender not valid.
CGD1543 -- Left data and right data both non-blank.
CGD1558 -- Condition description is blank.
CGD1559 -- Condition group description is blank.
CGD1560 -- Condition rejected by program CG3010.
CGD1563 -- No conditions entered.
CGD1585 -- First condition group must be IF, but no others.
CGD1586 -- Left and right elements and extenders are the same.
CGD1682 -- A left element of type *DEC must be compared with *ZERO.
CGD1683 -- The number of copies is not *1 to *9999.
CGD1684 -- A right element of type *DEC must be compared with *ZERO.
CGD2518 -- As Left element entered , one field must also be entered.
CGD1600 -- Undefined.
CGD1600 -- Undefined.
