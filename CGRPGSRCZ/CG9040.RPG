     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas CG Write to UDC data COB log of members')
     F*****************************************************************
     F*                                                               *
     F*  Midas - User Defined Correspondence                      *
     F*                                                               *
     F*  CG9040        - Write data to UDC COB Log Member File        *
     F*                                                               *
     F*  Function:  This program writes data to one of two files,     *
     F*              according to the state of a commitment flag.     *
     F*                                                               *
     F*  Called By: Many programs, as required.                       *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Prev Amend No. S01522             Date 22Nov94               *
      *                                    Date ddmmmyy               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
     F*  S01522 - User Defined Correspondence                         *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*  90 -- Error detected.                                        *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  Subroutine usage                                             *
     F*  ~~~~~~~~~~~~~~~~                                             *
     F*                                                               *
     F*  SROUT  -- Write a record to the appropriate file.            *
     F*  SRAUD  -- Print the audit report.                            *
     F*  SRBAD  -- Handle an undefined action.                        *
     F*  SRINIT -- Provides initialisation and definitions.           *
     F*                                                               *
     F*  Copied in routines:                                          *
     F*                                                               *
     F*  *PSSR  -- Program error routine.                             *
     F*  SRFILE -- File error routine.                                *
     F*  SRERR  -- Error reporting routine.                           *
     F*                                                               *
     F*****************************************************************
     F/SPACE
     F*-------------------------------------------------------------------
     F* Copied-in file definitions:
     F*
     F/COPY WNCPYSRC,CG9040FPG
     F*-------------------------------------------------------------------
     F*-------------------------------------------------------------------
     FCGCOBLL0UF  E           K        DISK         KINFSR SRFILEA    UC
     F*
     F*-------------------------------------------------------------------
     E/EJECT
     E*-------------------------------------------------------------------
     E* Error processing array:
     E*
     E/COPY CGCPYSRC,SRERRE
     E*
     E                    CPY@    1   1 80               Copyright
     E*
     E* Copied-in array definitions:
     E*
     E/COPY WNCPYSRC,CG9040EPG
     E*
     E*-------------------------------------------------------------------
     I/EJECT
     I*-------------------------------------------------------------------
     I* Error processing data structures:
     I*
     I/COPY CGCPYSRC,SRERRI
     I*
     I*...................................................................
     I* RUNDAT data area:
     I*
     IRUNDAT    E DSRUNDAT
     I*
     I*...................................................................
     IW1DTA       DS                            256
     I* ______________________________________________
     I* Data structure for data being sent to CGZAUDIT
     I* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     I* Spool file name (if blank, name unchanged)
     I* N.B. To change name, I#SPLR must be Y
     I*       unless first call of program:
     I                                        1  10 I#SPLN
     I* Repeat open and close of spool file:
     I                                       11  11 I#SPLR
     I* Report reference:
     I                                       12  21 I#REF
     I* Report title (uses MSGID on CGUSRMSG):
     I                                       26  32 I#TITL
     I* Title underline (uses MSGID on CGUSRMSG):
     I                                       33  39 I#TUL
     I* Flag to control Report Control Facility:
     I                                       40  40 I#RCF
     I* Define fields for line printing:
     I                                       41  47 I#TEXT
     I                                       48  57 I#FILE
     I                                       58  720I#QTY
     I                                       73  730I#DECS
     I                                       74  74 I#EDIT
     I                                       75  770I#EXT
     I                                       78  78 I#MORE
     I                                       81 130 I#SUB
     I*...................................................................
     I* Data structure for compilation - Copyright insertion:
     I*
     ICPYR@#      DS
     I                                        1  80 CPY@
     I*...................................................................
     I* Message translation fields:
     I*
     IDSMTR       DS
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
     I*...................................................................
     I* Named constant holding the message ID for the audit report:
     I*
     I*   > W#ID1 -- Total count of records written to file &1 ...:
     I*
     I              'CAD1011'             C         W#ID1
     I*...................................................................
     I* Named constants identifying the files for error handling:
     I*
     I              'CGCOBLPD  '          C         W#FILE
     I              'EXCOBLPD  '          C         X#FILE
     I********************************************************************
     C/EJECT
     C********************************************************************
     C*                 M A I N L I N E
     C********************************************************************
     C           *ENTRY    PLIST
     C                     PARM           W0RTN   7
     C                     PARM           W0ACT   8
     C                     PARM           W0MBR  10
     C                     PARM           W0TITL  7
     C                     PARM           W0ULIN  7
     C*
     C* Add subroutine to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
     C*
     C* Initialise program:
     C*
     C           W0INIT    IFNE 'Y'
     C                     EXSR SRINIT
     C                     ENDIF
     C*
     C* Select the appropriate action:
     C*
     C           W0ACT     CASEQ'*WRITE  'SROUT
     C           W0ACT     CASEQ'*AUDIT  'SRAUD
     C*
     C* Copy in optional action processing:
     C*
     C/COPY WNCPYSRC,CG9040ACT
     C*
     C                     CAS            SRBAD
     C                     ENDCS
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C* Return to calling program:
     C*
     C                     RETRN
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SROUT writes a record to the appropriate file.     **
     C********************************************************************
     C           SROUT     BEGSR                           * S R O U T   *
     C*
     C* Add subroutine to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SROUT '  @STK,Q
     C*
     C* Check if record exists
     C*
     C           W0MBR     CHAIN@COBLL0              90
     C*
     C* Write a record:
     C*
     C* Common values:
     C                     MOVE 'D'       B0RECI
     C                     MOVELW0MBR     B0MBR
     C                     MOVE ##JOB     B0AJOB
     C                     MOVE ##USR     B0AUSR
     C                     Z-ADDW#TIME    B0ATIM
     C                     MOVE AGMRDT    B0ARDT
     C                     MOVE 'I'       B0AACT
     C                     Z-ADDAGRDNB    B0RDNB
     C*
     C* Write to the appropriate file:
     C*
     C           *IN90     IFEQ *OFF
     C                     UPDAT@COBLL0
     C                     ELSE
     C                     WRITE@COBLL0                90
     C                     ENDIF
     C*
     C                     MOVE W#FILE    Y#FILE 10
     C* Count the record:
     C                     ADD  1         COUNT
     C*
     C           *IN90     IFEQ *ON
     C                     MOVE 'CGCOBLPD'W0FILE           ***************
     C                     MOVEL'*WRITE  'W0KEY            ** Database  **
     C                     Z-ADD1         W0ERNB           ** error 1.  **
     C                     MOVE 'MEM5002' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
     C*
     C           EXOUT     TAG                             <<<=== EXOUT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRAUD prints the audit report.                     **
     C********************************************************************
     C           SRAUD     BEGSR                           * S R A U D   *
     C*
     C* Add subroutine to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRAUD '  @STK,Q
     C*
     C* Prepare parameters for the report:
     C*
     C                     MOVEL'CG9040AU'I#REF
     C                     MOVEL'CG9040AU'I#SPLN
     C                     MOVE W0TITL    I#TITL
     C                     MOVE W0ULIN    I#TUL
     C                     MOVEL'CGUSRMSG'I#FILE
     C*
     C                     MOVE W#ID1     I#TEXT
     C* Print count:
     C                     MOVE '*LINE   'W1ACT
     C                     MOVELY#FILE    I#SUB
     C                     Z-ADDCOUNT     I#QTY
     C                     Z-ADD*ZERO     I#DECS
     C                     MOVE '1'       I#EDIT
     C*
     C                     CALL 'CGZAUDIT'
     C                     PARM           W1RTN   7
     C                     PARM           W1ACT   8
     C                     PARM           W1DTA
     C                     PARM           W1RSQN  5
     C* Reset the counter:
     C                     Z-ADD*ZERO     COUNT
     C*
     C           EXAUD     TAG                             <<<=== EXAUD
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRBAD handles an undefined action.                 **
     C********************************************************************
     C           SRBAD     BEGSR                           * S R B A D   *
     C*
     C* Add subroutine to stack:
     C*
     C                     ADD  1         Q
     C                     MOVEL'SRBAD '  @STK,Q
     C*
     C* Database error -- undefined action:
     C*
     C                     MOVEL'*ACTION 'W0FILE           ***************
     C                     MOVELW0ACT     W0KEY            ** Database  **
     C                     Z-ADD2         W0ERNB           ** error 2.  **
     C                     MOVEL'MEM5006' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C*
     C           EXBAD     TAG                             <<<=== EXBAD
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C**  Subroutine SRINIT provides initialisation and definition.     **
     C********************************************************************
     C           SRINIT    BEGSR                           * S R I N I T *
     C*
     C* Add subroutine to stack:
     C*
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
     C*
     C* Move copyright statement:
     C*
     C                     MOVE CPYR@#    ACT@   80
     C*
     C* Tag subroutine as executed:
     C*
     C                     MOVE 'Y'       W0INIT  1
     C*
     C* Open the appropriate file
     C*
     C                     OPEN CGCOBLL0
     C*
     C* Initialise the counter:
     C*
     C                     Z-ADD*ZERO     COUNT   90
     C*
     C* Get the date (from the RUNDAT data area) and the time:
     C*
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C*
     C                     TIME           W#TIME  60
     C*
     C           EXINIT    TAG                             <<<=== EXINIT
     C*
     C* Unwind subroutine stack:
     C*
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
     C*
     C                     ENDSR
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* /Copy point for calculations:
     C*
     C/COPY WNCPYSRC,CG9040CPG
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C** Subroutine *PSSR handles program errors.                       **
     C********************************************************************
     C*
     C/COPY CGCPYSRC,SRERRPSSR
     C*
     C********************************************************************
     C/EJECT
     C********************************************************************
     C* /Copy point for error-handling subroutine:
     C*
     C/COPY CGCPYSRC,SRERRC
     C*
     C********************************************************************
     O/EJECT
     O********************************************************************
     O* /Copy point for output specifications:
     O*
     O/COPY WNCPYSRC,CG9040OPG
     O*
     O********************************************************************
** CPY@ -- Copyright statement
(c) Misys International Banking Systems Ltd. 2001
