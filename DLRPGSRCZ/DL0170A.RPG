     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ER Loans/Deposit/ N/A Purchased')                *
      *****************************************************************
      *                                                               *
      *  Midas - Dealing Module                                       *
      *                                                               *
      *  DL0170A - Loan/Deposit/Negotiable Assets Purchase Screen     *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027A            Date 10May06               *
      *                 CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (recompiled)                                        *
      *  CSD027A- Conversion of cust. no. to alpha (post 103 build)   *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
      *  The following routines CANNOT be changed :
      *   ========================================
      *
      *  (Main processing)
      *  SRENQ
      *  SRSMSG
      *  SRCMSG
      *  SRRTRN
      *  SRSCRN
      *  SRREC
      *
      *  The following routines can be changed :
      *  =====================================
      *
      *  SRINIT for specific initialization
      *  SRDBER to handle database errors
      *  SRVAL  to initialize error indicators and control validation
      *         of more/less fields
      *  SRINZ  to setup fields with defaults
      *  SRFTOS to move additional fields to the screen fields
      *  SRSTOF to move additional fields to the file fields
      *  SRPERC to validate Guarantee percentages
      *
      *
      *  Changes to the existing code should be reduced to a minimum,
      *  using separate subroutines in order to preserve the program
      *  structure as defined in the skeleton, thus reducing
      *  maintenance efforts.
      *
      *  Moreover, no functionality should be added unless specifically
      *  required. In this case, it should be very well documented
      *  in the header box.
      *
      *  The data structure used to save the before image of the
      *  record is called SVRCD.
      *  Only the length should be changed.
      *
      *  The data structure used to access the current record
      *  via the DS name is called NWRCD.
      *  Only the file name should be changed.
      *
      *  The files must have their record formats renamed to:
      *     RTVIDX for the retrieve index
      *     UPDIDX for the update index
      *     SCREEN for the screen format
      *  Any file/screen access will be done through the renamed format
      *  so that these routines remain unchanged.
      *
      *---------------------------------------------------------------*
      *
      *  Naming conventions
      *  ==================
      *
      *  Work fields used in the program should start with WW or WU
      *  i.e. WWPLEX or WUPLEX
      *
      *  Screen fields should start with #0 (for 1st screen format),
      *  i.e. #0PLEX
      *
      *  Key fields should start with K ,i.e. KDN38
      *  (Also for fields used in KLIST's)
      *
      *  Subroutines should start with SR, i.e. SRVAL for validation,
      *  SRINIT for initial routine , etc...
      *
      *-------------------------------------------------------------------------
      *  Use of indicators:
      *
      *  (Screen field error indicators should start with 20 in
      *   ascending order)
      *
      *  *IN15  -  On=Delete/Enquiry, Protect field.
      *            Off=Insert/Amend, Underline field.
      *  *IN23  -  Error on field #0MOBL
      *  *IN24  -  Error on field #0RISC
      *  *IN25  -  Error on field #0SECT
      *  *IN33  -  Error on field #0SWLK
      *  *IN34  -  Error on field #0OPTP
      *  *IN35  -  Error on field #0IM93
      *  *IN36  -  Error on field #0CLAT
      *  *IN48  -  Error on field #0COAM
      *  *IN60  -  Extension record not found via update index
      *  *IN61  -  Unable to allocate record via update index
      *  *IN68  -  Error occured during DBF update
      *  *IN69  -  SFLEND control
      *  *IN75  -  General error indicator. Used to condition output
      *            of error messages and redisplay screen.
      *  *IN81  -  Call to DBERRCTL ended in error
      *  *IN82  -  Plexus capital currency in error
      *  *IN89  -  Extension record not found via retrieval index
      *
      *  *INKJ  -  F10 pressed, enable delete
      *  *INKL  -  F12 pressed, exit
      *  *INLR  -  End processing
      *
      *  *INU7  -  :    Data-base
      *  *INU8  -  :  error control
      *
      *----------------------------------------------------------------
     FSDCURRL1IF  E           K        DISK
      *
     FMMDBX2L0IF  E           K        DISK
     F            MMDENBF6                          KRENAMERTVIDX
      ** Extended Customer Loans
      *
     FMMDLX1L0IF  E           K        DISK
     F            MMDELDF6                          KRENAMERTVIDX1
      ** Extended Customer Loans
      *
     FDL170ADFCF  E                    WORKSTN
      ** Display file       Prefix #0.
      *
      /EJECT
      *----------------------------------------------------------------
     E                    ZA1        16  1
     E                    ZA2        16  1
      *----------------------------------------------------------------
     I           SDS
      * Get program name from PSDS
     I                                     *PROGRAM WWPGM
     I                                      244 253 WWJOB
     I                                      254 263 WWUSR
      /EJECT
      *----------------------------------------------------------------
     IDLDA        DS                            256
      * Data structure for data-base processing
     I                                      132 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      /EJECT
      *----------------------------------------------------------------
     IDSFDY     E DSDSFDY
      *
      ** First DS for Access Programs, short Data Structure
      *
     I@MMOD     E DSSDMMODPD
      *
      ** Dummy record formsts for Access to Midas modules details
      *
     INWRCD     E DSMMDBX2PD
      *
      ** Current/previous master file fields
      *
     ISDBANK    E DSSDBANKPD
      *
      */COPY QWINDSRC,DL0170DTA
      *
     IDATA        DS                           1024
     I                                        1   6 #1DN38
     I                                        7   8 DDSTYP
     I**********                              9  140CNUM                                     CSD027A
     I                                        9  14 CNUM                                     CSD027A
     I                                       15  17 DDCCY
     I                                       18  32 DDAMNP
      /EJECT
      *----------------------------------------------------------------
      * Main processing
      *----------------------------------------------------------------
      * Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Enquire record
      *
     C                     EXSR SRENQ
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRENQ - Routine to handle 'ENQUIRY' action                   *
      *                                                               *
      *****************************************************************
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE '1'       *IN15
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSMSG - Routine to send messages to message subfile.        *
      *                                                               *
      *****************************************************************
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     END
     C                     CALL 'SNDERMSG'
     C                     PARM WWPGM     ZAPGM  10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCMSG - Routine to clear program's message queue.           *
      *                                                               *
      *****************************************************************
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM WWPGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRREC - Routine to access file via retrieve index            *
      *                                                               *
      *****************************************************************
      *
     C           SRREC     BEGSR
      *
     C           SCREEN    IFEQ 'L'
     C           KDN38     CHAINRTVIDX1              89
     C                     ELSE
     C           KDN38     CHAINRTVIDX               89
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRRTRN - Routine to set up return code for calling program   *
      *                                                               *
      *****************************************************************
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN69     IFEQ '1'
     C                     MOVE 'Y2U0004' WWRTRN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ '1'
     C                     MOVE 'USR0790' WWRTRN
     C                     ELSE
      *
      ** No errors
      *
     C                     MOVE *BLANKS   WWRTRN
     C                     END
      *
     C                     END
      *
      ** Exit program
      *
     C                     MOVE '1'       *INLR
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDBER - Routine to handle database errors                   *
      *                                                               *
      *****************************************************************
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN LDA       DLDA
     C           *LOCK     IN   DLDA
     C                     MOVEL'MM0026W6'DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  DLDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSCRN - Routine to handle screen and validation             *
      *                                                               *
      *****************************************************************
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C           SCREEN    IFEQ 'N'
     C                     EXFMTDL170AF1
     C                     ELSE
     C                     EXFMTDL170AF2
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRFTOS - Routine to move file fields to screen fields        *
      *                                                               *
      *****************************************************************
      *
     C           SRFTOS    BEGSR
      *
     C           SCREEN    IFEQ 'N'
     C                     Z-ADDVMLUSU    #0LUSU
     C                     Z-ADDVMIM93    #0IM93
     C                     Z-ADDVMCLAT    #0CLAT
     C           VM1UAC    IFEQ 5
     C                     Z-ADDVM1UAC    #1GUAC
     C                     ELSE
     C                     Z-ADD0         #1GUAC
     C                     END
      *
     C                     MOVE VMSUBR    #0SUBR
     C                     MOVELVMMOBL    #0MOBL
     C                     Z-ADDVMRISC    #0RISC
     C                     MOVE VMROFC    #0ROFC
     C                     MOVE VMRATC    #0RATC
      *
     C           VMSECQ    IFEQ 1
     C                     MOVE 'Y'       #0SECQ
     C                     ELSE
     C                     MOVE 'N'       #0SECQ
     C                     END
      *
     C                     Z-ADDVMSECT    #0SECT
     C                     MOVE VMEVMT    #0EVMT
     C                     MOVE VMOPTP    #0OPTP
      *
      **   Use the SR/ZEDIT to format the file amount
      *
     C                     MOVE *BLANKS   ZFIELD
     C           VMCOAM    IFNE 0
     C                     MOVE VMCOAM    ZFIELD
     C                     Z-ADDA6NBDP    ZADEC
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0COAM
     C                     MOVE *BLANKS   ZFIELD
     C                     ELSE
     C                     MOVE *BLANKS   #0COAM
     C                     END
     C                     ELSE
     C                     Z-ADDVLLUSU    #0LUSU
     C                     Z-ADDVLIM93    #0IM93
     C                     Z-ADDVLCLAT    #0CLAT
     C                     MOVE VLSUBR    #0SUBR
     C                     MOVELVLMOBL    #0MOBL
     C                     Z-ADDVLRISC    #0RISC
     C           VL1UAC    IFEQ 5
     C                     Z-ADDVL1UAC    #1GUAC
     C                     ELSE
     C                     Z-ADD0         #1GUAC
     C                     END
     C                     Z-ADDVLIMEX    #0IMEX
     C                     Z-ADDVLPPSC    #0PPSC
      *
      **   Use the SR/ZEDIT to format the file amount
      *
     C                     MOVE *BLANKS   ZFIELD
     C           VLCOAM    IFNE 0
     C                     MOVE VLCOAM    ZFIELD
     C                     Z-ADDA6NBDP    ZADEC
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0COAM
     C                     MOVE *BLANKS   ZFIELD
     C                     ELSE
     C                     MOVE *BLANKS   #0COAM
     C                     END
      *
      ** In enquiry mode, the guarantee maintenance is not mandatory
      *
     C                     MOVE 'N'       #0ER91  1
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT - Routine to handle initial processing                *
      *                                                               *
      *****************************************************************
      *
     C           SRINIT    BEGSR
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           SCREEN  1
      *
      ** SCREEN - 'L' = Loans/Deposit  'N' = Negotiable Asset
      *
     C                     PARM           DATA
     C                     PARM           WWRTRN  7
      *
      ** Dummy parameters (used for non-DDS window method)
      *
     C                     PARM           DUMMY1  30
     C                     PARM           DUMMY2  30
     C                     PARM           DUMMY3  30
     C                     PARM           DUMMY4  30
     C                     PARM           DUMMY5 10
      *
      ** The following parameter is needed from PTF16 on.
      ** Every PTF level below should omit this parameter
      *
     C                     PARM           SPARE 256
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN VMDN38    KDN38
     C                     MOVE #1DN38    KDN38
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Setup file value used in database error during access to
      ** retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'MMDBX2PD'WWEXTF
      *
      ** Initialise error indicators
      *
     C                     MOVEA'0000000' *IN,23
     C                     MOVEA'0'       *IN,30
     C                     MOVEA'00'      *IN,33
     C                     MOVEA'00'      *IN,35
     C                     MOVE '0'       *IN48
     C                     MOVE '0'       *IN75
      *
      ** Initialize screen header
      *
     C                     MOVE WWPGM     SPGM
     C                     MOVE WWUSR     SUSER
     C                     MOVE WWJOB     SJOB
      *
      ** Call Access Program for BANK details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
      ** Call Access Program for MIDAS modules details
      *
     C                     CALL 'AOMMODR0'
     C                     PARM '*MSG    '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           @MMOD     PARM @MMOD     DSFDY
      *
     C           @RTCD     IFNE *BLANK
     C                     MOVEL'SDMMODPD'WWBFIL            *************
     C                     MOVEL'99'      WWBASE            *DBERROR 099*
     C                     MOVEL@OPTN     WWBKEY            *************
     C                     EXSR SRDBER
     C                     END
      *
     C           BGLRIN    IFNE 'Y'
     C                     MOVE *BLANKS   WWRTRN
     C                     MOVE '1'       *INLR
     C                     RETRN
     C                     END
      *
      ** Access Currency file to retrieve decimal position
      ** for Correction Amount
      *
     C           BJCYCD    CHAINSDCURRL1             88
     C           *IN88     IFEQ '1'                        - B1
     C                     MOVELDDCCY     WWBFIL           ************
     C                     Z-ADD10        WWBASE           * DBER 010 *
     C                     MOVELDDCCY     WWBKEY           ************
     C                     EXSR SRDBER
     C                     END                             - E1
      *
     C                     MOVE DDAMNP    #1AMNT 150
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  ZEDIT subroutine to Insert a Decimal Point into a numeric    *
      *  field and to Blank out leading zeroes.                       *
      *       Input fields:   ZFIELD 16/                              *
      *                       ZADEC                                   *
      *                       ZADIG - Not actually used               *
      *                                                               *
      *  Arrays    ZA1 ,ZA2   Both 16 elements, each one Byte long.   *
      *                                                               *
      *       Output field:  ZFIELD                                   *
      *                                                               *
      *****************************************************************
     C           ZEDIT     BEGSR
      *
      ** Calculation to Define the number structure control fields.
      *
     C                     Z-ADDZADIG     ZADIG   20
     C                     Z-ADDZADEC     ZADEC   10
      *
      **      SET UP WORK FIELDS
      *
     C                     MOVEA' '       ZA1
     C                     MOVEA' '       ZA2
      *
     C                     Z-ADD16        Z1      20
     C                     Z-ADD16        Z2      20
      *
     C           16        SUB  ZADEC     ZADEC2  20
      *
     C                     MOVEAZFIELD    ZA1
      *
      ** Check to see If there are any Decimal Places
      *
      *
     C           ZADEC     COMP 0                        91
     C   91                GOTO ZT20
      *
     C           ZT10      TAG                             ** ZT10 TAG **
      *
      *
      ** Set up Decimals
      *
     C                     MOVE ZA1,Z1    ZA2,Z2
     C           Z1        SUB  1         Z1
     C           Z2        SUB  1         Z2
      *
     C           Z2        COMP 0                        90
     C   90                GOTO ZT30
      *
      ** Check if End of Decimals
      *
     C           Z2        COMP ZADEC2               90
     C   90                GOTO ZT10
      *
      ** Pit in Decimal Place
      *
     C                     MOVE '.'       ZA2,Z2
     C           Z2        SUB  1         Z2
      *
     C           ZT20      TAG
      *
      ** Set up integers
      *
     C                     MOVE ZA1,Z1    ZA2,Z2
     C           Z1        SUB  1         Z1
     C           Z2        SUB  1         Z2
      *
     C           Z2        COMP 0                    90
     C   90                GOTO ZT20
      *
      **      PUT IN LEADING BLANKS
      *
     C           ZT30      TAG
      *
     C                     Z-ADD1         Z2
      *
     C           ZT40      TAG
      *
     C           ZA2,Z2    COMP '0'                  9090
     C   90      ZA2,Z2    COMP ' '                  9090
      *
     C   90                GOTO ZT50
      *
     C                     MOVE ' '       ZA2,Z2
     C           Z2        ADD  1         Z2
      *
     C           Z2        COMP 16                     90
     C   90                GOTO ZT40
      *
      ** If no Integers put in Leading Zero
      *
     C           ZT50      TAG
      *
     C                     Z-ADDZADEC2    Z2
     C  N91      Z2        SUB  1         Z2
     C           ZA2,Z2    COMP ' '                      90
     C   90                MOVE '0'       ZA2,Z2
      *
      ** Set up Output screen fields
      *
     C           ZT60      TAG
      *
     C                     MOVEAZA2       ZFIELD 16
      *
     CSR         ZEND      ENDSR
     C****************************************************
