     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas DL IR interest rate swap rates maintenance')     *
      ****************************************************************
      *                                                               *
      *  Midas - FRA/IRS Module                                       *
      *                                                               *
      *  DL1935 - INTEREST RATE SWAP RATES MAINTENANCE                *
      *                                                               *
      *  Function: To enable maintenance of the Interest Rate Swap    *
      *   (I/C)    Rates.                                             *
      *                                                               *
      *  Called By: DLC1935 - Swap Rates Maintenance Control.         *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. 250570             Date 11Jan22               *
      *  Prev Amend No. MD053295           Date 13Apr19               *
      *                 MD046248           Date 27Oct17               *
      *                 MD047993           Date 23Sep17               *
      *                 MD035545           Date 11Sep15               *
      *                 AR1058442          Date 02Jul15               *
      *                 AR996895           Date 25Nov12               *
      *                 263666             Date 01Feb10               *
      *                 CER059             Date 19Jul10               *
      *                 CER016A            Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *                 246141             Date 26Mar07               *
      *                 164847             Date 30Nov06               *
      *                 BUG12990           Date 05Jan07               *
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 242286             Date 25Sep06               *
      *                 CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 BUG8891            Date 26Jun06               *
      *                 213463             Date 06Jun06               *
      *                 CIR013             Date 21Apr05               *
      *                 CAAA03             Date 18Mar04               *
      * Midas Release 4.01.02 ----------------------------------------*
      *                 200995             Date 27Mar02               *
      * Midas Release 4.01 -------------------------------------------*
      *                 194012             Date 22Nov01              *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.05 -----------------------------------------------*
      * Midas DBA 3.03 -----------------------------------------------*
      *                 CIR004             Date 20Jan00               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 163136             Date 08Jul99               *
      *                 100317             Date 04Mar96               *
      *                 100299             Date 04Mar96               *
      *                 CIR001             DATE 13JUN95               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  250570 - Give user the ability to enter multiple YEAR/MONTH  *
      *           rates for frequency 'Y' from 1 to 12 months.        *
      *  MD053295 - Lending loan with Interest Calculation Basis      *
      *             method 3 (30/360) has wrong interest payment      *
      *             amount for month of March (Recompile)             *
      *  MD046248 - Finastra Rebranding                               *
      *  MD047993 - Modified MD035545. Removed dependency on Accrue   *
      *             on Last Day indicator.                            *
      *  MD035545 - LE: Interest Calculation in Leap year. Consider   *
      *             Accrue on Last Day Indicator for method 6.        *
      *  AR1058442 - Allow insertion/amendment of Swap Rates to be    *
      *              negative. (Child: AR1058443)                     *
      *  AR996895 - Incorrect acrrual interest calculation            *
      *             (Child: AR996897) (Recompile)                     *
      *  263666 - Recompiled due to changes in ZINTDYZ2               *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER016A - German Interest Calculation: Upgarde of FGE059     *
      *            to Midas Plus (Recompile)                          *
      *  246141 - Recompiled due to changes in ZINTDYZ2               *
      *  164847 - Recompile over changes in /COPY ZINTDYZ2.           *
      *  BUG12990 - Recompiled due to changes in ZINTDYZ2/ZINTDYZ2LE  *
      *  242286 - Recompile over changes in /COPY ZINTDYZ2.           *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  BUG8891 - IRS rates do not update table file(TABLETX)        *
      *  213463 - Unable to re-insert a swap rate with a logically    *
      *           deleted record on file. Check logical delete flag   *
      *           before issuing error message FIS0040.               *
      *  CIR013 - Additional Calculation Method for FRA/IRS/CCF       *
      *           Allow method 9 - actual/365, 366 for Feb 29 period. *
      *           Also fix incorrect calculation of 'to' rates due to *
      *           ZZBEG not being reset before 2nd call to ZINTDY.    *
      *  CAAA03 - Separate DL1935S0 to 2 record formats to stop non-  *
      *           display / errors.                                   *
      *  200995 - Maturity Dates should be recalculated before        *
      *           loading to screen.                                  *
     F*  194012 - Change maximum no. of permitted Swap Rate entry    *
     F*           from 90 to 150.                                    *
      *  CIR004 - Dealing Calculation Method Change.                  *
     F*  163136 - Interest Calculation Method '6'  showing incorrect -*
     F*           ZERO - amount . Addition to Core #126017 which dealt*
     F*           with the issue. It introduced an additional  INT6DY *
     F*           field in  Core  s-routine  ZINTDY in  /COPY ZSRSRC/ *
     F*           ZINTDYZ2 w/ch is usually called from GLINTC s-routine
     F*           in /COPY  ZSRSRC/ GLINTCZ1 .  However, there are at *
     F*           least a dozen other pgms that use ZINTDY but do     *
     F*           GLINTC-processing within the pgms calculation specs *
     F*           and therefore need to make use of INT6DY  field .   *
     F*  100317 - Add additional action code of 'C' for 'Copy' and   *
     F*           a new field 'To Int.Cal.Mth'.                      *
     F*           It will calculate the swap rates for one interest  *
     F*           calculation method from another.                   *
     F*  100299 - Program is amended to use the currency spot days   *
     F*           (A6SPDY from PF/SDCURRPD) in all cases to calcu.   *
     F*           the spot date.                                     *
     F*  CIR001 - Interest Rate Calendars                            *
     F*                                                              *
     F****************************************************************
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                              *
     F****************************************************************
     F/EJECT
     F/COPY WNCPYSRC,DL1935F001
     FDLSWPRL1IF  E           K        DISK         KINFSR *PSSR
     FDLSWPRL2UF  E           K        DISK         KINFSR INFSR A
     F                                              KINFDS INFDS
     F                                              KCOMIT
     F            DLSWPRD0                          KRENAMEDLSWPRXX
     FFDTTOTLLUF  E           K        DISK         KINFSR *PSSR                             BUG8891
     F                                              KCOMIT                                   BUG8891
     FDL1935DFCF  E                    WORKSTN      KINFSR *PSSR
     F                                        @RRN  KSFILE DL1935S1
     F                                        @RRN1 KSFILE DL1935S5
     F/EJECT
     F*****************************************************************
     F*                                                               *
     F*  F U N C T I O N   O F   I N D I C A T O R S                  *
     F*                                                               *
     F*    KC  - END                                                  *
     F*    KL  - END OR GO TO INITIAL LEVEL                           *
     F*    KH  - NEXT RECORD                                          *
     F*    KG  - PREVIOUS RECORD                                      *
     F*    KJ  - CONFIRM DELETE                                       *
     F*                                                               *
     F*    10  - SFLEND DL1935S1                                      *
     F*                                                               *
     F*    20  - ERROR ON FIELD DDACTN                                *
     F*    21  - ERROR ON FIELD DDCCY                                 *
     F*    22  - POSITION CURSOR ON FIELD DDCCY                       *
     F*    23  - ERROR ON FIELD DDINCL                                *
     F*    24  - ERROR ON FIELD DDFREQ                                *
     F*    25  - ERROR ON FIELD TOINCL                                *   100317
     F*                                                               *
     F*    30  - ERROR ON FIELD DDPDYR                                *
     F*    31  - ERROR ON FIELD DDPDMN                                *
     F*    32  - ERROR ON FIELD DDPDDY                                *
     F*    33  - ERROR ON FIELD DDRATE                                *
     F*    34  - POSITION CURSOR ON FIELD DDPDYR                      *
     F*    35  - POSITION CURSOR ON FIELD DDPDMN                      *
     F*    36  - POSITION CURSOR ON FIELD DDPDDY                      *
     F*    37  - POSITION CURSOR ON FIELD DDRATE                      *
     F*                                                               *
     F*    45  - CLEAR POINTS SUBFILE                                 *
     F*                                                               *
     F*    50  - ERROR INDICATOR                                      *
     F*    51  - ROLLUP ON MESSAGE SUBFILE                            *
     F*    52  - ROLLDOWN ON MESSAGE SUBFILE                          *
     F*                                                               *
     F*    60  - DELETE MODE                                          *
     F*    64  - EOF/CHAIN FAIL                                       *   100317
     F*    65  - RECORD IS PRESENT ON DLSWPRL1                        *
     F*                                                               *
     F*    70  - EOF/CHAIN FAIL                                       *
     F*    74  - RECORD LOCKED                                        *
     F*                                                               *
     F*  U7+U8 - DATA BASE ERROR                                      *
     F*                                                               *
     F*****************************************************************
     F/EJECT
     F*****************************************************************
     F*                                                               *
     F*  S U B R O U T I N E   I N D E X                              *
     F*                                                               *
     F* #DISP - DISPLAY THE MAIN SCREEN.                              *
     F* #READ - READ THE MAIN SCREEN.                                 *
     F* #MAIN - LOOPS UNTIL CF3 OR CK12 IS TAKEN                      *
     F* #RDFWD- READ A RECORD FROM THE FILE DLSWPRL1                  *
     F* #RDPRV- READ THE PREVIOUS RECORD FROM DLSWPRL1                *
     F* #ADVAN- CMD 8 PROCESSING-ADVANCE TO NEXT CURRENCY/INT.CAL.MTH *
     F* #RETRE- CMD 7 PROCESSING-RETREAT TO PREVIOUS CCY/INT.CAL.MTH  *
     F* #CLRIN- CMD 12 PROCESSING-CLEAR INPUT FIELDS                  *
     F* #INSRT- CONTROL THE INSERTING OF RECORDS.                     *
     F* #AMEND- CONTROL THE AMENDING OF RECORDS.                      *
     F* #DELET- CONTROL THE DELETING OF RECORDS.                      *
     F* #COPY - CONTROL THE COPYING OF RECORDS.                       *   100317
     F* #PRODL- PROCESS DELETION WHEN CK/10 IS TAKEN                  *
     F* #ENQRY- CONTROL THE ENQUIRY INTO RECORDS.                     *
     F* #VALKY- VALIDATE KEY FIELDS (CURRENCY/INT.CAL.MTH/FREQUENCY)  *
     F* #VALSF- VALIDATE SUBFILE FIELDS (INSERTIONS & AMENDMENTS ONLY)*
     F* #UPDFL- PERFORM UPDATES TO THE FILES                          *
     F* #SETUP- SET UP OUTPUT FIELDS                                  *
     F* #LODSF- LOAD SUBFILE WITH RECORDS OF SELECTED CCY/INT.CAL.MTH *
     F* CONVER- TO CALCULATE THE INTEREST RATE SWAP RATE              *
     F* #INIT - INITIAL PROCESSING                                    *
     F* #END  - TERMINATE THE PROGRAM BY SETTING ON LR                *
     F* INFSR - FILE ERROR PROCESSING                                 *
     F* *PSSR - PROGRAM ERROR PROCESSING                              *
     F*                                                               *
     F* STANDARD SUBROUTINES USED                                     *
     F* -------------------------                                     *
     F* ZALIGN - VALIDATE AND RIGHT-ALIGN NUMERIC FIELDS              *
     F* ZEDIT  - INSERT DECIMAL POINT/BLANK OUT LEADING ZEROES        *
     F* ZDATE2 - CONVERT MIDAS DAY NUMBER TO DDMMMYY/DDMMYY           *
     F* ZCPD   - CALCULATE THE PERIOD DATE FROM SPOT                  *
     F* ZDATE9 - CONVERT MIDAS DAY NUMBER TO YYYYMMDD                 *
     F* ZDAT10 - CONVERT YYYYMMDD TO MIDAS DAY NUMBER                 *
     F* ZINTDY - CALCULATE NUMBER OF INTEREST DAYS                    *   100317
     F*                                                               *
     F* EXTERNAL ROUTINES USED                                        *
     F* ----------------------                                        *
     F* ZA0240 - ADD MESSAGE TO PROGRAM SUBFILE MESSAGE QUEUE         *
     F* ZA0240 - CLEAR PROGRAM SUBFILE MESSAGE QUEUE                  *
     F* ZA0440 - ADD MESSAGE WITH DATA TO MESSAGE QUEUE               *
     F*****************************************************************
     F/EJECT
     E**********          @PY        30  2 0             PERIOD YEARS                         194012
     E**********          @PM        30  2 0             PERIOD MONTHS                        194012
     E**********          @PD        30  2 0             PERIOD DAYS                          194012
     E**********          @MN        30  5 0             MAT. DAY NUMBER                      194012
     E**********          MNX        30  5 0             MAT. DAY NUMBER               100317 194012
     E**********          @MA        30  7               MATURITY DATE                        194012
     E**********          @RT        30 11 7             RATES                                194012
     E                    @PY       150  2 0             PERIOD YEARS                         194012
     E                    @PM       150  2 0             PERIOD MONTHS                        194012
     E                    @PD       150  2 0             PERIOD DAYS                          194012
     E                    @MN       150  5 0             MAT. DAY NUMBER                      194012
     E                    MNX       150  5 0             MAT. DAY NUMBER                      194012
     E                    @MA       150  7               MATURITY DATE                        194012
     E                    @RT       150 11 7             RATES                                194012
     E*
     E**********          @EM        10  1               ERROR MESSAGES                       250570
     E                    @EM        12  1               Error Messages                       250570
     E*
     E                    CPY@    1   1 80
     E** COMPILE TIME ARRAY FOR COPYRIGHT STATEMENT
     E*
     E/COPY ZSRSRC,ZALIGNZ1
     E/COPY ZSRSRC,ZDATE2Z1
     E/COPY ZSRSRC,ZFREQBZ1
     E/COPY ZSRSRC,ZDATE9Z1
     E/COPY ZSRSRC,ZHOLE
     E*
     E                    HED     1   1 10
     E                    NAR     1   1  8
     E***********         INC     1   6 22                                CIR004
     E***********         INC     1   7 22                                             CIR004 CIR013
     E                    INC     1   8 22                                                    CIR013
     E                    FRN     1   2 20
     E** SCREEN HEADING
     E                    TABCAL  6   6  1   TABCBS  5 0 CALC.BASES       100317
     E*
     E                    @F         16  1                                                 AR1058442
      **  Input array                                                                      AR1058442
     E                    @G         16  1                                                 AR1058442
      **  Output array                                                                     AR1058442
     E                    @H      1  15 15 0                                               AR1058442
      **  Array of powers of ten                                                           AR1058442
     E                    @P         14  1                                                 AR1058442
      **  Array @P stores amount with decimal.                                             AR1058442
     E                    @Q         13  1 0                                               AR1058442
      **  Array @Q stores amount as it is.                                                 AR1058442
      *                                                                                    AR1058442
     IINFDS       DS
     I* DATA STRUCTURE FOR FILE STATUS
     I                                     *STATUS  STATUS
     I*
     IPSDS       SDS
     I**  PROGRAM STATUS DATA STRUCTURE
     I                                      244 253 @JOB
     I                                      254 263 @USER
     I*
     I@KEY        DS                             12                                          BUG8891
     I**  Key to access FDTTOTLL                                                             BUG8891
     I                                        1   2 @KEY1                                    BUG8891
     I*                                                                                      BUG8891
     ICMTTXT      DS                            101
     I* DATA STRUCTURE FOR TEXT ON COMIT ON JOURNAL
     I                                        6   7 MDID
     I                                        8  15 PGMN
     I                                       19  240MTIME
     I*
     I*DDS******* DS                         30                                               194012
     I@DDS        DS                        150                                               194012
     I** DATA STRUCTURE TO HOLD SAVED VERSIONS OF THE SUBFILE RECORD FIELDS
     I                                        1  25 @TOTL
     I                                        1   2 @PDYR
     I                                        3   4 @PDMN
     I                                        5   6 @PDDY
     I                                        7  13 @MDMY
     I**********                             14  25 @RATE                                  AR1058442
     I                                       14  26 @RATE                                  AR1058442
     I*
     IDDTOTL      DS
     I** DATA STRUCTURE TO HOLD ALL SUBFILE RECORD FIELDS
     I                                        1   6 DDYMD
     I                                        1   2 DDPDYR
     I                                        3   4 DDPDMN
     I                                        5   6 DDPDDY
     I                                        7  13 DDMDMY
     I**********                             14  25 DDRATE                                 AR1058442
     I                                       14  26 DDRATE                                 AR1058442
     I*
     I            DS
     I** DATA STRUCTURE TO HOLD NUMERIC INPUT YEAR/MONTH/DAY
     I                                        1   60#IYMD
     I                                        1   20#IPDYR
     I                                        3   40#IPDMN
     I                                        5   60#IPDDY
     I            DS
     I** DATA STRUCTURE TO HOLD NUMERIC COMPARISON YEAR/MONTH/DAY
     I                                        1   60#CYMD
     I                                        1   20#CPDYR
     I                                        3   40#CPDMN
     I                                        5   60#CPDDY
     I            DS
     I** DATA STRUCTURE TO HOLD NUMERIC PREVIOUS YEAR/MONTH/DAY
     I                                        1   60#PYMD
     I                                        1   20#PPDYR
     I                                        3   40#PPDMN
     I                                        5   60#PPDDY
      *                                                                                    AR1058442
     I            DS                                                                       AR1058442
     I**  Data structure to redefine array @P as returned field @@AMTD                     AR1058442
     I                                        1  14 @@AMTD                                 AR1058442
     I                                        1  14 @P                                     AR1058442
      *                                                                                    AR1058442
     I            DS                                                                       AR1058442
      **  Data structure to redefine array @Q as input field @@AMTW                        AR1058442
     I                                        1  130@@AMTW                                 AR1058442
     I                                        1  130@Q                                     AR1058442
     I*
     I              'LECalcBasis6LeapYear'C         WPARML                                  MD035545
     I/COPY ZSRSRC,ZCPDZ1
     I/COPY ZSRSRC,ZDATE9Z2
     I/COPY ZSRSRC,ZDAT10Z1
     I/COPY ZSRSRC,ZHOLI
     I/COPY ZSRSRC,ZHOLDS
     I/COPY ZSRSRC,ZINTDYZ1                                               100317
     I/COPY WNCPYSRC,DL1935I001
     I*
     ISDBANK    E DSSDBANKPD
     I** BANK DETAILS ACCESSED VIA ACCESS PORGRAM
     I*
     ISDCURR    E DSSDCURRPD
     I* CURRENCY DETAILS ACCESSED VIA ACCESS PROGRAM
     I*
     ISCSARD    E DSSCSARDPD                                              CIR004
      ** Data Structure for Switchable Feature Details                    CIR004
      *                                                                   CIR004
     I***SDGELR*   E DSSDGELRPD                                                    MD035545 MD047993
     I**GENERAL*LEDGER*DETAILS*ACCESSED*VIA*ACCESS*PROGRAM*************            MD035545 MD047993
     IDSFDY     E DSDSFDY
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE
     I*
     ISDDEAL    E DSSDDEALPD                                                               AR1058442
      ** Dealing ICD                                                                       AR1058442
      *                                                                                    AR1058442
     I           UDS
     I**  LOCAL DATA AREA FOR DATA BASE ERROR
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* MAIN PROCESSING - THIS ROUTINE CONTROLS THE WHOLE PROGRAM     *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :      #INIT                                            *
     C*              #MAIN                                            *
     C*              #END                                             *
     C*                                                               *
     C*****************************************************************
     C*
     C                     EXSR #INIT
     C*
     C                     EXSR #MAIN
     C*
     C                     EXSR #END
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #DISP - DISPLAY THE MAIN SCREEN.                              *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*             #INSRT                                            *
     C*             #AMEND                                            *
     C*             #DELET                                            *
     C*             #ENQRY                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #DISP     BEGSR
     C*
     C                     TIME           DDTIME
     C*
     C** SAVE ALL DISPLAY FIELDS BEFORE DISPLAYING SCREEN
     C*
     C** FIRST SAVE ALL THE SUBFILE FIELDS IN THE DATA STRUCTURE
     C*
     C           1         DO   @CNT      @X
     C           @X        CHAINDL1935S5             70
     C           @X        OCUR @DDS
     C                     MOVE DDTOTL    @TOTL
     C                     END
     C*
     C** NOW SAVE THE OTHER FIELDS
     C*
     C** IF ACTION CODE BLANK DEFAULT TO 'E'
     C*
     C           DDACTN    IFEQ ' '
     C                     MOVE 'A'       DDACTN
     C                     END
     C                     MOVE DDACTN    @ACTN
     C                     MOVE DDCCY     @CCY
     C                     MOVE DDINCL    @INCL
     C                     MOVE DDFREQ    @FREQ
     C                     MOVE DDCCNM    @CCNM
     C                     MOVE DDINCN    @INCN
     C                     MOVE DDFRQN    @FRQN
     C                     MOVE TOINCL    @TOCL                           100317
     C                     MOVE TOINCN    @TOCN                           100317
     C/COPY WNCPYSRC,DL1935C001
     C*
     C* IF CURRENCY BLANK, POSITION CURSOR ON CURRENCY
     C*
     C           DDCCY     IFEQ *BLANK
     C                     MOVE '1'       *IN22
     C                     END
     C*
     C** DISPLAY THE MAIN SCREEN
     C*
     C                     WRITEDL1935D1                                                      CAAA03
     C                     WRITEDL1935S0
     C*
     C** DISPLAY THE SUBFILE POINTS FIELDS
     C*
     C                     WRITEDL1935S4
     C*
     C** DISPLAY THE SCREEN FOOTER
     C*
     C                     WRITEDL1935D0
     C*
     C** REDISPLAY THE MAIN SCREEN IF THERE WAS AN ERROR; OTHERWISE
     C** THE CURSOR REPOSITIONS ON THE FIRST INPUT CAPABLE FIELD.
     C*
     C           *IN20     IFEQ '1'
     C           *IN21     OREQ '1'
     C           *IN22     OREQ '1'
     C           *IN23     OREQ '1'
     C           *IN24     OREQ '1'
     C           *IN25     OREQ '1'                                       100317
     C/COPY WNCPYSRC,DL1935C002
     C                     WRITEDL1935S0
     C                     END
     C*
     C           #DISP9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #READ -THIS SUBROUTINE READS THE MAIN SCREEN                  *
     C*        AND CLEARS ALL THE ERROR INDICATORS                    *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*             #INSRT                                            *
     C*             #AMEND                                            *
     C*             #DELET                                            *
     C*             #ENQRY                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :     ZA0250                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #READ     BEGSR
     C*
     C** READ THE SCREEN
     C*
      *                                                                                       CAAA03
      ** Rollup/Rolldown of Message Subfile works even without the                            CAAA03
      ** following codes.                                                                     CAAA03
      *                                                                                       CAAA03
     C**********           READ DL1935S0                 70                                   CAAA03
     C********** *IN51     DOWEQ'1'                                                           CAAA03
     C********** *IN52     OREQ '1'                                                           CAAA03
     C**********           WRITEDL1935S0                                                      CAAA03
     C**********           READ DL1935S0                 70                                   CAAA03
     C**********           END                                                                CAAA03
     C                     READ DL1935D1                 70                                   CAAA03
     C*
     C** CLEAR PROGRAM MESSAGE QUEUE
     C*
     C                     CALL 'ZA0250'
     C*
     C** RESET ERROR INDICATORS AND PAGE POSITION FIELD
     C*
     C                     MOVE '0'       *IN20
     C                     MOVE '0'       *IN21
     C                     MOVE '0'       *IN22
     C                     MOVE '0'       *IN23
     C                     MOVE '0'       *IN24
     C                     MOVE '0'       *IN25                           100317
     C                     MOVE '0'       *IN50
     C                     MOVE '0'       *IN51
     C                     MOVE '0'       *IN52
     C                     Z-ADD1         RECNO
     C/COPY WNCPYSRC,DL1935C003
     C           #READ9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #MAIN- THIS SUBROUTINE LOOPS UNTIL CF3 OR CK12 IS TAKEN       *
     C*                                                               *
     C* CALLED BY : MAINLINE                                          *
     C*                                                               *
     C* CALLS :     #DISP                                             *
     C*             #READ                                             *
     C*             ZA0240                                            *
     C*             #ADVAN                                            *
     C*             #RETRE                                            *
     C*             #CLRIN                                            *
     C*             #INSRT                                            *
     C*             #AMEND                                            *
     C*             #DELET                                            *
     C*             #ENQRY                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C*****************************************************************
     C*
     C           #MAIN     BEGSR
     C*
     C** IF U7 OR U8 ARE ON GO TO END OF SUBROUTINE
     C*
     C           *INU7     CABEQ'1'       #MAIN9
     C           *INU8     CABEQ'1'       #MAIN9
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C*
     C** LOOP HERE UNTIL CF3 OR CF12 AT THE INITIAL LEVEL
     C*
     C           *INKC     DOWEQ'0'
     C*
     C** IF ACTION CODE IS BLANK DEFAULT TO E
     C*
     C           DDACTN    IFEQ ' '
     C                     MOVE 'A'       DDACTN
     C                     END
     C*
     C** VALIDATE ACTION CODE
     C*
     C           DDACTN    IFNE 'A'
     C           DDACTN    ANDNE'D'
     C           DDACTN    ANDNE'E'
     C           DDACTN    ANDNE'I'
     C           DDACTN    ANDNE'C'                                       100317
     C                     MOVEL'FIS0032' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE '1'       *IN20
     C*
     C** REFRESH SUBFILE WITH SAVED DATA (AS AT LAST SCREEN DISPLAY)
     C*
     C           1         DO   @CNT      @X
     C           @X        CHAINDL1935S5             70
     C           @X        OCUR @DDS
     C                     MOVE @TOTL     DDTOTL
     C                     UPDATDL1935S5
     C                     END
     C*
     C** REFRESH THE OTHER FIELDS
     C*
     C                     MOVE @CCNM     DDCCNM
     C                     MOVE @INCN     DDINCN
     C                     MOVE @FRQN     DDFRQN
     C                     MOVE @TOCN     TOINCN                          100317
     C/COPY WNCPYSRC,DL1935C004
     C                     END
     C*
     C** CF8 PROCESSING - ADVANCE TO NEXT CURRENCY/INT.CAL.MTH.
     C*
     C           *INKH     CASEQ'1'       #ADVAN
     C*
     C** CF7 PROCESSING - RETREAT TO PREVIOUS CURRENCY/INT.CAL.MTH.
     C*
     C           *INKG     CASEQ'1'       #RETRE
     C*
     C** CF12 PROCESSING - CLEAR INPUT FIELDS
     C*
     C           *INKL     CASEQ'1'       #CLRIN
     C*
     C                     END
     C*
     C** INSERT MODE
     C*
     C           DDACTN    CASEQ'I'       #INSRT
     C*
     C** AMEND MODE
     C*
     C           DDACTN    CASEQ'A'       #AMEND
     C*
     C** DELETE MODE
     C*
     C           DDACTN    CASEQ'D'       #DELET
     C*
     C** ENQUIRY MODE
     C*
     C           DDACTN    CASEQ'E'       #ENQRY
     C*                                                                   100317
     C** COPY MODE                                                        100317
     C*                                                                   100317
     C           DDACTN    CASEQ'C'       #COPY                           100317
     C*
     C                     END
     C*
     C** CHECK FOR DATA BASE ERROR
     C*
     C           *INU7     CABEQ'1'       #MAIN9
     C*
     C** CHECK FOR CF3
     C*
     C           *INKC     CABEQ'1'       #MAIN9
     C*
     C** IF ACTION CODE,CURRENCY CODE, INT.CAL.MTH, OR FREQUENCY IN ERROR,
     C** DISPLAY AND READ SCREEN
     C*
     C           *IN20     IFEQ '1'
     C           *IN21     OREQ '1'
     C           *IN22     OREQ '1'
     C           *IN23     OREQ '1'
     C           *IN24     OREQ '1'
     C           *IN25     OREQ '1'                                       100317
     C/COPY WNCPYSRC,DL1935C005
     C                     EXSR #DISP
     C                     EXSR #READ
     C                     END
     C*
     C                     END
     C*
     C           #MAIN9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #RDFWD-THIS SUBROUTINE READS A RECORD FROM THE FILE DLSWPRL1  *
     C*        IT WILL IGNORE DELETED RECORDS. IT WILL RETURN *IN70   *
     C*        ON FOR EOF                                             *
     C*                                                               *
     C* CALLED BY : #ADVAN                                            *
     C*             #LODSF                                            *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #RDFWD    BEGSR
     C*
     C** READ RECORD UNTIL THE END OF THE FILE IS FOUND OR A LIVE RECORD
     C*
     C           IRDLTF    DOUEQ' '
     C           *IN70     OREQ '1'
     C                     READ DLSWPRL1                 70
     C                     END
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #RDPRV-THIS SUBROUTINE READS THE PREVIOUS RECORD FROM DLSWPRL1*
     C*        IT WILL IGNORE DELETED RECORDS. IT WILL RETURN *IN70   *
     C*        ON FOR BOF                                             *
     C*                                                               *
     C* CALLED BY : #RETRE                                            *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #RDPRV    BEGSR
     C*
     C* READ THE PREVIOUS RECORD FROM THE FILE UNTIL A LIVE RECORD IS
     C* FOUND OR THE BEGINNING OF THE FILE IS FOUND
     C*
     C           IRDLTF    DOUEQ' '
     C           *IN70     OREQ '1'
     C                     READPDLSWPRL1                 70
     C                     END
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ADVAN- CMD 8 PROCESSING - ADVANCE TO NEXT CURRENCY/INT.CAL.MT*
     C*                                                               *
     C*         THIS SUBROUTINE PERFORMS THE VALIDATION FOR CF8       *
     C*         IF THE VALIDATION IS SUCCESSFUL THEN IT READS THE     *
     C*         NEXT CURRENCY/INT.CAL.MTH                             *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     ZA0240                                            *
     C*             #RDFWD                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ADVAN    BEGSR
     C*
     C** FIRST CHECK THE ACTION CODE IF INVALID EXIT
     C*
     C           DDACTN    IFEQ 'I'
     C*
     C** SEND PROGRAM MESSAGE
     C*
     C                     MOVEL'FIS0033' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C*
     C** REVERSE IMAGE ACTION CODE
     C*
     C                     MOVE '1'       *IN20
     C*
     C                     GOTO #ADV9
     C                     END
     C*
     C** NOW GET THE NEXT CURRENCY/INT.CAL.MTH ON FILE
     C*
     C           DLSWPK    SETGTDLSWPRL1
     C                     EXSR #RDFWD
     C*
     C** IF ANOTHER CURRENCY/INT.CAL.MTH IS PRESENT UPDATE THE SCREEN FIELDS
     C*
     C           *IN70     IFEQ '0'
     C                     MOVELIRCCY     DDCCY
     C                     MOVELIRINCL    DDINCL
     C                     MOVELIRFREQ    DDFREQ
     C*
     C/COPY WNCPYSRC,DL1935C006
     C** OTHERWISE OUTPUT END OF FILE MESSAGE
     C*
     C                     ELSE
     C                     MOVEL'FIS0110' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #ADV9
     C                     END
     C*
     C           #ADV9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #RETRE-CMD 7 PROCESSING-RETREAT TO PREVIOUS CURRENCY/INT.CAL.M*
     C*                                                               *
     C*         THIS SUBROUTINE PERFORMS THE VALIDATION FOR CF7       *
     C*         IF THE VALIDATION IS SUCCESSFUL THEN IT READS THE     *
     C*         PREVIOUS CURRENCY/INT.CAL.MTH                         *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     ZA0240                                            *
     C*             #RDPRV                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #RETRE    BEGSR
     C*
     C** FIRST CHECK THE ACTION CODE IF INVALID EXIT
     C*
     C           DDACTN    IFEQ 'I'
     C*
     C** SEND PROGRAM MESSAGE
     C*
     C                     MOVEL'FIS0033' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C*
     C** REVERSE IMAGE ACTION CODE
     C*
     C                     MOVE '1'       *IN20
     C*
     C** EXIT SUBROUTINE
     C*
     C                     GOTO #RETR9
     C                     END
     C*
     C** NOW GET THE PREVIOUS CURRENCY/INT.CAL.MTH ON FILE
     C*
     C           DLSWPK    SETLLDLSWPRL1
     C                     EXSR #RDPRV
     C*
     C** IF A CURRENCY/INT.CAL.MTH IS PRESENT UPDATE THE SCREEN FIELDS
     C*
     C           *IN70     IFEQ '0'
     C                     MOVELIRCCY     DDCCY
     C                     MOVELIRINCL    DDINCL
     C                     MOVELIRFREQ    DDFREQ
     C*
     C** OTHERWISE OUTPUT START OF FILE MESSAGE
     C*
     C                     ELSE
     C                     MOVEL'FIS0111' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #RETR9
     C                     END
     C*
     C/COPY WNCPYSRC,DL1935C007
     C           #RETR9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #CLRIN- CMD 12 PROCESSING - CLEAR INPUT FIELDS                *
     C*                                                               *
     C*         THIS SUBROUTINE CLEARS THE INPUT FIELDS               *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*             #INSRT                                            *
     C*             #AMEND                                            *
     C*             #DELET                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :     ZA0250                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #CLRIN    BEGSR
     C*
     C** CLEAR THE SUBFILE FIELDS
     C*
     C           1         DO   @CNT      @X
     C           @X        CHAINDL1935S5             70
     C                     MOVE *BLANK    DDTOTL
     C                     UPDATDL1935S5
     C                     END
     C*
     C** CLEAR THE OTHER FIELDS
     C*
     C           DDACTN    IFEQ 'D'
     C                     MOVE *BLANKS   DDACTN
     C                     END
     C                     MOVE *BLANKS   DDCCY
     C                     MOVE *BLANKS   DDINCL
     C                     MOVE *BLANKS   TOINCL                          100317
     C                     MOVE *BLANKS   DDFREQ
     C                     MOVE *BLANKS   DDCCNM
     C                     MOVE *BLANKS   DDINCN
     C                     MOVE *BLANKS   TOINCN                          100317
     C                     MOVE *BLANKS   DDFRQN
     C/COPY WNCPYSRC,DL1935C008
     C*
     C** CLEAR MESSAGE QUEUE
     C*
     C                     CALL 'ZA0250'
     C*
     C** SET ON INDICATOR TO POSITION CURSOR ON CURRENCY
     C*
     C                     MOVE '1'       *IN22
     C*
     C                     ROLBK                                          100317
     C           #CLRI9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #INSRT- THIS SUBROUTINE CONTROLS THE INSERTING OF RECORDS.    *
     C*         IT VALIDATES THE CURRENCY, INT.CAL.MTH, FREQ. INPUT   *
     C*         AND IF THEY ARE VALID IT OUTPUTS THE INSERT SCREEN.   *
     C*         IT THEN VALIDATES THE SUBFILE INPUT AND IF THERE ARE  *
     C*         NO ERRORS IT WILL CALL SUBR. #UPDFL TO UPDATE THE FILE*
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     #VALKY                                            *
     C*             #VALSF                                            *
     C*             #UPDFL                                            *
     C*             #CLRIN                                            *
     C*             ZA0440                                            *
     C*             #DISP                                             *
     C*             #READ                                             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #INSRT    BEGSR
     C*
     C** VALIDATE KEY FIELDS
     C** IE. CCY/INT.CAL.MTH/FREQ (DO NOT FILL UP SUBFILE WITH ACCESSEDDATA)
     C                     EXSR #VALKY
     C*
     C/COPY WNCPYSRC,DL1935C009
     C** IF CURRENCY, INT.CAL.MTH OR FREQUENCY IN ERROR, THEN EXIT
     C           *IN21     IFEQ '1'
     C           *IN23     OREQ '1'
     C           *IN24     OREQ '1'
     C                     GOTO #INS9
     C                     END
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C*
     C** DO WHILE ACTION CODE AND CURRENCY CODE ARE UNCHANGED
     C*
     C           DDCCY     DOWEQ@CCY
     C           DDINCL    ANDEQ@INCL
     C           DDFREQ    ANDEQ@FREQ
     C           DDACTN    ANDEQ@ACTN
     C/COPY WNCPYSRC,DL1935C010
     C           @CCY      ANDNE*BLANK
     C*
     C** IF CMD 3 , CMD 7 , CMD 8 , CMD 12,   EXIT SUBROUTINE
     C*
     C           *INKC     IFEQ '1'
     C           *INKG     OREQ '1'
     C           *INKH     OREQ '1'
     C           *INKL     OREQ '1'
     C                     GOTO #INS9
     C                     END
     C*
     C** NOW VALIDATE SUBFILE FIELDS
     C*
     C                     EXSR #VALSF
     C*
     C** IF THE SUBFILE DETAILS ARE VALID UPDATE THE FILE
     C*
     C           *IN50     IFEQ '0'
     C*
     C/COPY WNCPYSRC,DL1935C011
     C** INSERT OVER DELETED RECORDS, ELSE WRITE NEW RECORDS
     C*
     C                     MOVE DDCCY     @CCY
     C                     MOVE DDINCL    @INCL
     C                     MOVE DDFREQ    @FREQ
     C                     MOVE 'Y'       @UPDTD
     C                     EXSR #UPDFL
     C*
     C** CLEAR SCREEN FIELDS AND OUTPUT MESSAGE IF SUCCESSFUL INSERTION
     C*
     C           @UPDTD    IFEQ 'Y'
     C                     EXSR #CLRIN
     C                     END
     C*
     C                     END
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C                     END
     C*
     C           #INS9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #AMEND- THIS SUBROUTINE CONTROLS THE AMENDING OF RECORDS.     *
     C*         IT VALIDATES THE CURRENCY, INT.CAL.MTH, FREQ. INPUT   *
     C*         AND IF THEY ARE VALID IT OUTPUTS THE AMEND SCREEN.    *
     C*         IT THEN VALIDATES THE SUBFILE INPUT AND IF THERE ARE  *
     C*         NO ERRORS IT WILL CALL SUBR. #UPDFL TO UPDATE THE FILE*
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     #VALKY                                            *
     C*             #DISP                                             *
     C*             #READ                                             *
     C*             #VALSF                                            *
     C*             #UPDFL                                            *
     C*             #CLRIN                                            *
     C*             ZA0440                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #AMEND    BEGSR
     C*
     C** VALIDATE KEY FIELDS
     C** IE CURRENCY/INT.CAL.MTH/FREQ(AND FILL UP SUBFILE WITH ACCESSEDDATA)
     C*
     C                     EXSR #VALKY
     C*
     C/COPY WNCPYSRC,DL1935C012
     C** IF CURRENCY, INT.CAL.MTH OR FREQUENCY IN ERROR, THEN EXIT
     C*
     C           *IN21     IFEQ '1'
     C           *IN23     OREQ '1'
     C           *IN24     OREQ '1'
     C                     GOTO #AMND9
     C                     END
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C*
     C** DO WHILE ACTION CODE AND CURRENCY CODE ARE UNCHANGED
     C*
     C           DDCCY     DOWEQ@CCY
     C           DDINCL    ANDEQ@INCL
     C           DDFREQ    ANDEQ@FREQ
     C           DDACTN    ANDEQ@ACTN
     C/COPY WNCPYSRC,DL1935C013
     C           @CCY      ANDNE*BLANK
     C*
     C** IF CMD 3 , CMD 7 , CMD 8 , CMD 12,   EXIT SUBROUTINE
     C*
     C           *INKC     IFEQ '1'
     C           *INKG     OREQ '1'
     C           *INKH     OREQ '1'
     C           *INKL     OREQ '1'
     C                     GOTO #AMND9
     C                     END
     C*
     C** NOW VALIDATE SUBFILE FIELDS
     C*
     C                     EXSR #VALSF
     C*
     C** IF THE SUBFILE DETAILS ARE VALID UPDATE THE FILE
     C*
     C           *IN50     IFEQ '0'
     C                     MOVE 'Y'       @UPDTD
     C                     EXSR #UPDFL
     C*
     C** CLEAR SCREEN FIELDS AND OUTPUT MESSAGE IF SUCCESSFUL AMENDMENT
     C*
     C           @UPDTD    IFEQ 'Y'
     C                     EXSR #CLRIN
     C                     END
     C*
     C                     END
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C                     END
     C*
     C           #AMND9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #DELET- THIS SUBROUTINE CONTROLS THE DELETING OF RECORDS.     *
     C*         IT VALIDATES THE CURRENCY, INT.CAL.MTH, FREQ. INPUT   *
     C*         AND IF THEY ARE VALID IT OUTPUTS THE DELETE SCREEN.   *
     C*         IT THEN WAITS FOR COMMAND KEY 10 TO BE TAKEN BEFORE   *
     C*         IT WILL ATTEMPT TO UPDATE THE FILE.                   *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     #DISP                                             *
     C*             #READ                                             *
     C*             #CLRIN                                            *
     C*             #PRODL                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #DELET    BEGSR
     C*
     C** VALIDATE KEY FIELDS
     C** IE CURRENCY/INT.CAL.MTH/FREQ & FILL UP SUBFILE WITH ACCESSED DATA)
     C*
     C                     EXSR #VALKY
     C*
     C/COPY WNCPYSRC,DL1935C014
     C** IF CURRENCY, INT.CAL.MTH OR FREQUENCY IN ERROR, THEN EXIT
     C*
     C           *IN21     IFEQ '1'
     C           *IN23     OREQ '1'
     C           *IN24     OREQ '1'
     C                     GOTO #DELT9
     C                     END
     C*
     C** DISPLAY AND READ SCREEN (*IN60 ON TO ENABLE CK10 ON SCREEN)
     C*
     C                     MOVE '1'       *IN60
     C                     EXSR #DISP
     C                     EXSR #READ
     C                     MOVE '0'       *IN60
     C*
     C** DO WHILE ACTION CODE AND CURRENCY CODE ARE UNCHANGED
     C*
     C           DDCCY     DOWEQ@CCY
     C           DDINCL    ANDEQ@INCL
     C           DDFREQ    ANDEQ@FREQ
     C           DDACTN    ANDEQ@ACTN
     C/COPY WNCPYSRC,DL1935C015
     C           @CCY      ANDNE*BLANK
     C*
     C** IF CMD 3 , CMD 7 , CMD 8 , CMD 12,   EXIT SUBROUTINE
     C*
     C           *INKC     IFEQ '1'
     C           *INKG     OREQ '1'
     C           *INKH     OREQ '1'
     C           *INKL     OREQ '1'
     C                     GOTO #DELT9
     C                     END
     C*
     C** NOW VALIDATE SUBFILE FIELD TO FILL UPDATE ARRAYS WITH DATA
     C*
     C                     EXSR #VALSF
     C*
     C** DO UPDATES (AS LONG AS SCREEN IS UNCHANGED AND CK10 IS TAKEN)
     C*
     C                     MOVE 'Y'       @UPDTD
     C                     EXSR #PRODL
     C*
     C** CLEAR SCREEN FIELDS AND OUTPUT MESSAGE IF SUCCESSFUL DELETION
     C*
     C           @UPDTD    IFEQ 'Y'
     C                     EXSR #CLRIN
     C                     END
     C*
     C** DISPLAY AND READ SCREEN (*IN60 ON TO DISABLE COMM.KEYS ON SCREEN)
     C*
     C           DDACTN    IFEQ 'D'
     C                     MOVE '1'       *IN60
     C                     END
     C                     EXSR #DISP
     C                     EXSR #READ
     C                     MOVE '0'       *IN60
     C                     END
     C*
     C           #DELT9    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #PRODL -PROCESS DELETION WHEN CK/10 IS TAKEN                  *
     C*         THIS CHECKS THAT NONE OF THE FIELDS HAVE BEEN CHANGED.*
     C*         THEN IT WILL THEN CALL THE SUBROUTINE TO UPDATE THE   *
     C*         RECORDS WITH THE LOGICAL DELETE FLAG SET TO '*'       *
     C*                                                               *
     C* CALLED BY : #DELET                                            *
     C*                                                               *
     C* CALLS :     ZA0250                                            *
     C*             ZA0240                                            *
     C*             #UPDFL                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #PRODL    BEGSR
     C*
     C** CHECK FIELDS HAVE NOT BEEN CHANGED
     C*
     C                     MOVE '0'       *IN70
     C*
     C** FIRST ALL THE RECORDS IN THE SUBFILE
     C*
     C           1         DO   @CNT      @RRN1
     C           @RRN1     OCUR @DDS
     C  N70      @RRN1     CHAINDL1935S5             70
     C           DDPDYR    IFNE @PDYR
     C           DDPDMN    ORNE @PDMN
     C           DDPDDY    ORNE @PDDY
     C           DDMDMY    ORNE @MDMY
     C           DDRATE    ORNE @RATE
     C                     MOVE '1'       *IN70
     C                     END
     C                     END
     C*
     C** NOW THE OTHER FIELDS
     C*
     C           *IN70     IFEQ '1'
     C           DDACTN    ORNE @ACTN
     C           DDCCY     ORNE @CCY
     C           DDINCL    ORNE @INCL
     C           DDFREQ    ORNE @FREQ
     C/COPY WNCPYSRC,DL1935C016
     C*
     C** IF THERE ARE CHANGES,
     C** CLEAR THE MESSAGE QUEUE AND SEND AN ERROR MESSAGE
     C*
     C                     CALL 'ZA0250'
     C                     MOVEL'FIS0034' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE 'N'       @UPDTD  1
     C*
     C** REFRESH SUBFILE WITH SAVED DATA (AS AT LAST SCREEN DISPLAY)
     C*
     C           1         DO   @CNT      @X
     C           @X        CHAINDL1935S5             70
     C           @X        OCUR @DDS
     C                     MOVE @TOTL     DDTOTL
     C                     UPDATDL1935S5
     C                     END
     C*
     C** REFRESH THE OTHER FIELDS
     C*
     C                     MOVE @ACTN     DDACTN
     C                     MOVE @CCY      DDCCY
     C                     MOVE @INCL     DDINCL
     C                     MOVE @FREQ     DDFREQ
     C                     MOVE @CCNM     DDCCNM
     C                     MOVE @INCN     DDINCN
     C                     MOVE @FRQN     DDFRQN
     C/COPY WNCPYSRC,DL1935C017
     C                     GOTO #PROD9
     C                     END
     C*
     C** NOW UPDATE FILE IF CK10 HAS BEEN TAKEN
     C*
     C           *INKJ     IFEQ '1'
     C                     EXSR #UPDFL
     C                     ELSE
     C                     MOVE 'N'       @UPDTD
     C                     END
     C           #PROD9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ENQRY- THIS SUBROUTINE CONTROLS THE ENQUIRY INTO RECORDS.    *
     C*         IT VALIDATES THE CURRENCY, INT.CAL.MTH, FREQ. INPUT   *
     C*         AND IF THEY ARE VALID IT OUTPUTS THE ENQUIRY SCREEN.  *
     C*                                                               *
     C* CALLED BY : #MAIN                                             *
     C*                                                               *
     C* CALLS :     #VALKY                                            *
     C*             #DISP                                             *
     C*             #READ                                             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ENQRY    BEGSR
     C*
     C** REFRESH SUBFILE WITH SAVED DATA (AS AT LAST SCREEN DISPLAY)
     C*
     C           1         DO   @CNT      @X
     C           @X        CHAINDL1935S5             70
     C           @X        OCUR @DDS
     C                     MOVE @TOTL     DDTOTL
     C                     UPDATDL1935S5
     C                     END
     C*
     C** REFRESH THE OTHER FIELDS
     C*
     C                     MOVE @CCNM     DDCCNM
     C                     MOVE @INCN     DDINCN
     C                     MOVE @FRQN     DDFRQN
     C*
     C/COPY WNCPYSRC,DL1935C018
     C** VALIDATE KEY FIELDS IE CURRENCY CODE/INT.CAL.MTH/FREQUENCY
     C*
     C                     EXSR #VALKY
     C*
     C** DISPLAY AND READ SCREEN
     C*
     C                     EXSR #DISP
     C                     EXSR #READ
     C*
     C           #ENQR9    ENDSR
     C*
     C*****************************************************************
     C/EJECT                                                              100317
     C*****************************************************************   100317
     C*                                                               *   100317
     C* #COPY - THIS SUBROUTINE CONTROLS THE COPYING OF RECORDS.      *   100317
     C*         IT VALIDATES THE CURRENCY, INT.CAL.MTH, FREQ. INPUT   *   100317
     C*         AND IF THEY ARE VALID IT OUTPUTS THE COPY SCREEN.     *   100317
     C*         IT THEN VALIDATES THE SUBFILE INPUT AND IF THERE ARE  *   100317
     C*         NO ERRORS IT WILL CALL SUBR. #UPDFL TO UPDATE THE FILE*   100317
     C*                                                               *   100317
     C* CALLED BY : #MAIN                                             *   100317
     C*                                                               *   100317
     C* CALLS :     #VALKY                                            *   100317
     C*             #VALSF                                            *   100317
     C*             #UPDFL                                            *   100317
     C*             #CLRIN                                            *   100317
     C*             ZA0440                                            *   100317
     C*             #DISP                                             *   100317
     C*             #READ                                             *   100317
     C*                                                               *   100317
     C*****************************************************************   100317
     C*                                                                   100317
     C           #COPY     BEGSR                                          100317
     C*                                                                   100317
     C** VALIDATE KEY FIELDS                                              100317
     C** IE. CCY/INT.CAL.MTH/FREQ                                         100317
     C** (DO NOT FILL UP SUBFILE WITH ACCESSEDDATA)                       100317
     C                     EXSR #VALKY                                    100317
     C*                                                                   100317
     C** IF CURRENCY, INT.CAL.MTH OR FREQUENCY IN ERROR, THEN EXIT        100317
     C           *IN21     IFEQ '1'                                       100317
     C           *IN23     OREQ '1'                                       100317
     C           *IN24     OREQ '1'                                       100317
     C           *IN25     OREQ '1'                                       100317
     C                     GOTO #CPY9                                     100317
     C                     END                                            100317
     C*                                                                   100317
     C** DISPLAY AND READ SCREEN                                          100317
     C*                                                                   100317
     C                     EXSR #DISP                                     100317
     C                     EXSR #READ                                     100317
     C*                                                                   100317
     C** DO WHILE ACTION CODE AND CURRENCY CODE ARE UNCHANGED             100317
     C*                                                                   100317
     C           DDCCY     DOWEQ@CCY                                      100317
     C           DDINCL    ANDEQ@INCL                                     100317
     C           DDFREQ    ANDEQ@FREQ                                     100317
     C           DDACTN    ANDEQ@ACTN                                     100317
     C           TOINCL    ANDEQ@TOCL                                     100317
     C/COPY WNCPYSRC,DL1935C019
     C           @CCY      ANDNE*BLANK                                    100317
     C*                                                                   100317
     C** IF CMD 3 , CMD 7 , CMD 8 , CMD 12,   EXIT SUBROUTINE             100317
     C*                                                                   100317
     C           *INKC     IFEQ '1'                                       100317
     C           *INKG     OREQ '1'                                       100317
     C           *INKH     OREQ '1'                                       100317
     C           *INKL     OREQ '1'                                       100317
     C                     GOTO #CPY9                                     100317
     C                     END                                            100317
     C*                                                                   100317
     C** NOW VALIDATE SUBFILE FIELDS                                      100317
     C*                                                                   100317
     C                     EXSR #VALSF                                    100317
     C*                                                                   100317
     C** IF THE SUBFILE DETAILS ARE VALID UPDATE THE FILE                 100317
     C*                                                                   100317
     C           *IN50     IFEQ '0'                                       100317
     C*                                                                   100317
     C/COPY WNCPYSRC,DL1935C020
     C** INSERT OVER DELETED RECORDS, ELSE WRITE NEW RECORDS              100317
     C*                                                                   100317
     C                     MOVE DDCCY     @CCY                            100317
     C                     MOVE TOINCL    @INCL                           100317
     C                     MOVE TOINCL    DDINCL                          100317
     C                     MOVE DDFREQ    @FREQ                           100317
     C                     MOVE 'Y'       @UPDTD                          100317
     C                     EXSR #UPDFL                                    100317
     C*                                                                   100317
     C** CLEAR SCREEN FIELDS                                              100317
     C*                                                                   100317
     C           @UPDTD    IFEQ 'Y'                                       100317
     C                     EXSR #CLRIN                                    100317
     C                     END                                            100317
     C*                                                                   100317
     C                     END                                            100317
     C*                                                                   100317
     C** DISPLAY AND READ SCREEN                                          100317
     C*                                                                   100317
     C                     EXSR #DISP                                     100317
     C                     EXSR #READ                                     100317
     C                     END                                            100317
     C*                                                                   100317
     C           #CPY9     ENDSR                                          100317
     C*                                                                   100317
     C*****************************************************************   100317
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #VALKY - VALIDATE KEY FIELDS (CURRENCY/INT.CAL.MTH/FREQ.)     *
     C*                                                               *
     C* CALLED BY : #INSRT                                            *
     C*             #AMEND                                            *
     C*             #DELET                                            *
     C*             #ENQRY                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :     ZA0240                                            *
     C*             #LODSF                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #VALKY    BEGSR
     C*
     C/COPY WNCPYSRC,DL1935C021
     C** CURRENCY, INT.CAL.MTH OR FREQUENCY CANNOT BE BLANK
     C*
     C           DDCCY     IFEQ *BLANKS
     C           DDINCL    OREQ *BLANKS
     C           DDFREQ    OREQ *BLANKS
     C                     MOVE '1'       *IN21
     C                     MOVE '1'       *IN22
     C                     MOVE '1'       *IN23
     C                     MOVE '1'       *IN24
     C                     MOVEL'FIS0101' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #VALK9
     C                     END
     C*
     C**  ACCESS CURRENCY FILE FOR CURRENCY NAME
     C*
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM DDCCY     @CRKEY  3
     C           SDCURR    PARM SDCURR    DSSDY
     C           @RTCD     IFNE *BLANK
     C                     MOVE '1'       *IN21
     C                     MOVE '1'       *IN22
     C                     MOVEL'FIS0100' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #VALK9
     C                     ELSE                                           100317
     C                     MOVE A6CYCD    DDCCY                           100317
     C                     END
     C*
     C** INT.CAL.MTH MUST BE '1', '2', '3', '4' '5' OR '6'
     C** If Dealing Calculation Method (CIR004) is installed, method      CIR004
     C** '7' is also allowed                                              CIR004
      ** If CIR013 is switched on, method 9 is also allowed.                                  CIR013
     C*
     C********** DDINCL    IFNE '1'                                                           CIR013
     C********** DDINCL    ANDNE'2'                                                           CIR013
     C********** DDINCL    ANDNE'3'                                                           CIR013
     C********** DDINCL    ANDNE'4'                                                           CIR013
     C********** DDINCL    ANDNE'5'                                                           CIR013
     C********** DDINCL    ANDNE'6'                                                           CIR013
     C********** CIR004    IFEQ 'N'                                                    CIR004 CIR013
     C********** CIR004    OREQ 'Y'                                                    CIR004 CIR013
     C********** DDINCL    ANDNE'7'                                                    CIR004 CIR013
     C           DDINCL    IFLT '1'                                                           CIR013
     C           DDINCL    ORGT '9'                                                           CIR013
     C           DDINCL    OREQ '8'                                                           CIR013
     C           DDINCL    OREQ '7'                                                           CIR013
     C           CIR004    ANDEQ'N'                                                           CIR013
     C           DDINCL    OREQ '9'                                                           CIR013
     C           CIR013    ANDEQ'N'                                                           CIR013
     C                     MOVE '1'       *IN23
     C           CIR004    IFEQ 'Y'                                       CIR004
     C           CIR013    IFEQ 'N'                                                           CIR013
     C                     MOVEL'FIS0115' @MSGID                          CIR004
     C                     ELSE                                                               CIR013
     C                     MOVEL'MMM4005' @MSGID                                              CIR013
     C                     ENDIF                                                              CIR013
     C                     ELSE                                           CIR004
     C           CIR013    IFEQ 'N'                                                           CIR013
     C                     MOVEL'FIS0102' @MSGID
     C                     ELSE                                                               CIR013
     C                     MOVEL'MMM4004' @MSGID                                              CIR013
     C                     ENDIF                                                              CIR013
     C                     ENDIF                                          CIR004
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #VALK9
     C**********           ENDIF                                                       CIR004 CIR013
     C                     END
     C*                                                                   100317
     C** TO INT.CAL.MTH MUST BE '1', '2', '3', '4' '5' OR '6'             100317
     C** If Dealing Calculation Method (CIR004) is installed, method      CIR004
     C** '7' is also allowed                                              CIR004
      ** If CIR013 is switched on, method 9 is also allowed.                                  CIR013
     C*                                                                   100317
     C           DDACTN    IFEQ 'C'                                       100317
     C********** TOINCL    IFNE '1'                                                    100317 CIR013
     C********** TOINCL    ANDNE'2'                                                    100317 CIR013
     C********** TOINCL    ANDNE'3'                                                    100317 CIR013
     C********** TOINCL    ANDNE'4'                                                    100317 CIR013
     C********** TOINCL    ANDNE'5'                                                    100317 CIR013
     C********** TOINCL    ANDNE'6'                                                    100317 CIR013
     C********** CIR004    IFEQ 'N'                                                    CIR004 CIR013
     C********** CIR004    OREQ 'Y'                                                    CIR004 CIR013
     C********** TOINCL    ANDNE'7'                                                    CIR004 CIR013
     C           TOINCL    IFLT '1'                                                           CIR013
     C           TOINCL    ORGT '9'                                                           CIR013
     C           TOINCL    OREQ '8'                                                           CIR013
     C           TOINCL    OREQ '7'                                                           CIR013
     C           CIR004    ANDEQ'N'                                                           CIR013
     C           TOINCL    OREQ '9'                                                           CIR013
     C           CIR013    ANDEQ'N'                                                           CIR013
     C                     MOVE '1'       *IN25                           100317
     C           CIR004    IFEQ 'Y'                                       CIR004
     C           CIR013    IFEQ 'N'                                                           CIR013
     C                     MOVEL'FIS0115' @MSGID                          CIR004
     C                     ELSE                                                               CIR013
     C                     MOVEL'MMM4005' @MSGID                                              CIR013
     C                     ENDIF                                                              CIR013
     C                     ELSE                                           CIR004
     C           CIR013    IFEQ 'N'                                                           CIR013
     C                     MOVEL'FIS0102' @MSGID                          100317
     C                     ELSE                                                               CIR013
     C                     MOVEL'MMM4004' @MSGID                                              CIR013
     C                     ENDIF                                                              CIR013
     C                     ENDIF                                          CIR004
     C                     CALL 'ZA0240'                                  100317
     C                     PARM           @MSGID                          100317
     C                     GOTO #VALK9                                    100317
     C**********           ENDIF                                                       CIR004 CIR013
     C                     END                                            100317
     C                     END                                            100317
     C*                                                                   100317
     C** TO INT.CAL.MTH MUST NOT BE THE SAME AS 'FROM' INT.CAL.MTH        100317
     C*                                                                   100317
     C           DDACTN    IFEQ 'C'                                       100317
     C           TOINCL    IFEQ DDINCL                                    100317
     C                     MOVE '1'       *IN25                           100317
     C                     MOVEL'FIS0114' @MSGID                          100317
     C                     CALL 'ZA0240'                                  100317
     C                     PARM           @MSGID                          100317
     C                     GOTO #VALK9                                    100317
     C                     END                                            100317
     C                     END                                            100317
     C*                                                                   100317
     C** TO INT.CAL.MTH MUST BE BLANK IF ACTION CODE IS NOT 'C'           100317
     C*                                                                   100317
     C           DDACTN    IFNE 'C'                                       100317
     C           TOINCL    ANDNE*BLANKS                                   100317
     C                     MOVE '1'       *IN25                           100317
     C                     MOVEL'FIS0113' @MSGID                          100317
     C                     CALL 'ZA0240'                                  100317
     C                     PARM           @MSGID                          100317
     C                     GOTO #VALK9                                    100317
     C                     END                                            100317
     C*
     C** FREQUENCY MUST BE 'X' OR 'Y'
     C*
     C           DDFREQ    IFNE 'X'
     C           DDFREQ    ANDNE'Y'
     C                     MOVE '1'       *IN24
     C                     MOVEL'FIS0103' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     GOTO #VALK9
     C                     END
     C*
     C/COPY WNCPYSRC,DL1935C022
     C** CHECK TO SEE IF RECORD EXISTS,
     C** AND STORE TIME,DAY,MONTH,YEAR LAST UPDATED
     C*
     C                     Z-ADD*ZERO     @@TLUP
     C                     Z-ADD*ZERO     @@DLUP
     C                     MOVEL*BLANK    @@MLUP
     C                     Z-ADD*ZERO     @@YLUP
     C           DDACTN    IFEQ 'I'
     C           DLSWPP    CHAINDLSWPRL1             65
     C                     ELSE
     C           DLSWPK    CHAINDLSWPRL1             65
     C                     END
     C                     Z-ADDIRTLUP    @@TLUP
     C                     Z-ADDIRDLUP    @@DLUP
     C                     MOVELIRMLUP    @@MLUP
     C                     Z-ADDIRYLUP    @@YLUP
     C*
     C** IF ACTION CODE IS INSERT
     C*
     C           DDACTN    IFEQ 'I'
     C*
     C** IF IT DOES EXIST THEN CHECK TO SEE IF IT HAS BEEN LOGICALLY DELETED
     C*
     C           *IN65     IFEQ '0'
     C           IRDLTF    ANDEQ' '
     C                     MOVEL'FIS0104' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE '1'       *IN21
     C                     MOVE '1'       *IN22
     C                     MOVE '1'       *IN23
     C                     MOVE '1'       *IN24
     C                     GOTO #VALK9
     C                     END
     C*
     C** ELSE (IF ACTION CODE IS NOT INSERT IE AMEND,DELETE,ENQUIRE)
     C** (OR IF ACTION CODE IS COPY)                                      100317
     C*
     C                     ELSE
     C*
     C** IF IT DOES EXIST THEN CHECK TO SEE IF IT HAS BEEN LOGICALLY DELETED
     C*
     C           *IN65     IFEQ '1'
     C           IRDLTF    OREQ '*'
     C                     MOVEL'FIS0105' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE '1'       *IN21
     C                     MOVE '1'       *IN22
     C                     MOVE '1'       *IN23
     C                     MOVE '1'       *IN24
     C                     GOTO #VALK9
     C                     END
     C*
     C**IF THE RECORD ALREADY EXISTS FOR COPY, DELETE THE RECORDS.     LET100317
     C*                                                                   100317
     C           DDACTN    IFEQ 'C'                                       100317
     C                     SETOF                     64                   100317
     C           DLSWPC    CHAINDLSWPRL2             64                   100317
     C           *IN64     DOWEQ'0'                                       100317
     C           DLSWPC    DELETDLSWPRL2             64                   100317
     C                     END                                            100317
     C                     END                                            100317
     C*                                                                   100317
     C** LOAD SUBFILE WITH RECORDS FOR SELECTED CURRENCY/INT.CAL.MTH/FREQ.
     C*
     C                     EXSR #LODSF
     C                     END
     C           #VALK9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #VALSF -VALIDATE SUBFILE FIELDS (INSERTIONS & AMENDMENTS ONLY)*
     C*                                                               *
     C* CALLED BY : #INSRT                                            *
     C*             #AMEND                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :     ZALIGN                                            *
     C*             ZCPD                                              *
     C*                                                               *
     C*****************************************************************
     C*
     C           #VALSF    BEGSR
     C*
     C* INITIALIZE ARRAYS USED IN OUTPUT TO FILE
     C*
     C                     MOVEL*BLANK    @EM
     C                     Z-ADD0         @MN
     C                     MOVEL*BLANK    @MA
     C                     Z-ADD0         @PY
     C                     Z-ADD0         @PM
     C                     Z-ADD0         @PD
     C                     Z-ADD0         @RT
     C                     Z-ADD*ZERO     #PYMD
     C*
     C** VALIDATE ALL THE FIELDS IN THE SUBFILE
     C*
     C                     Z-ADD99        RECNO
     C           1         DO   @CNT      @RRN1
     C           @RRN1     CHAINDL1935S5             70
     C                     MOVE '0'       *IN30
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN33
     C                     MOVE '0'       *IN34
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN37
     C                     MOVE '0'       *IN27                           100317
     C                     MOVE '0'       *IN28                           100317
     C           DDACTN    IFEQ 'C'                                       100317
     C           DDACTN    OREQ 'D'                                       100317
     C                     MOVELDDMDMY    IRMXX   7                       100317
     C                     Z-ADD@RRN1     @Z                              100317
     C                     END                                            100317
     C                     MOVEL*BLANK    DDMDMY
     C*
     C** VALIDATE IF THE FIRST ELEMENT OR IF DATA INPUT
     C*
     C           @RRN1     IFEQ 1
     C           DDTOTL    ORNE *BLANK
     C*
     C** PERIOD YEARS
     C*
     C           DDPDYR    IFEQ *BLANKS
     C           DDYMD     ANDEQ*BLANKS
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN34
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,1
     C                     ELSE
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVELDDPDYR    ZFIELD
     C                     Z-ADD2         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ '0'
     C           DDPDYR    ANDNE'. '
     C           DDPDYR    ANDNE' .'
     C                     Z-ADD@RRN1     @X
     C                     MOVE ZFIELD    @PY,@X
     C                     MOVE ZFIELD    DDPDYR
     C                     ELSE
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN34
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,2
     C                     END
     C                     END
     C*
     C** PERIOD MONTHS
     C*
     C           DDPDMN    IFEQ *BLANKS
     C           DDYMD     ANDEQ*BLANKS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,3
     C                     ELSE
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVELDDPDMN    ZFIELD
     C                     Z-ADD2         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ '0'
     C           DDPDMN    ANDNE'. '
     C           DDPDMN    ANDNE' .'
     C                     Z-ADD@RRN1     @X
     C                     MOVE ZFIELD    @PM,@X
     C                     MOVE ZFIELD    DDPDMN
     C           @PM,@X    IFLT 0
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,4
     C                     END
     C                     ELSE
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,4
     C                     END
     C                     END
     C*
     C** PERIOD DAYS
     C*
     C           DDPDDY    IFEQ *BLANKS
     C           DDYMD     ANDEQ*BLANKS
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,5
     C                     ELSE
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVELDDPDDY    ZFIELD
     C                     Z-ADD2         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ '0'
     C           DDPDDY    ANDNE'. '
     C           DDPDDY    ANDNE' .'
     C                     Z-ADD@RRN1     @X
     C                     MOVE ZFIELD    @PD,@X
     C                     MOVE ZFIELD    DDPDDY
     C           @PD,@X    IFLT 0
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,6
     C                     END
     C                     ELSE
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,6
     C                     END
     C                     END
     C*
     C** IF PERIOD YEARS,MONTHS,DAYS ARE VALID,
     C** CHECK FOR INVALID COMBINATIONS
     C*
     C           *IN30     IFEQ '0'
     C           *IN31     ANDEQ'0'
     C           *IN32     ANDEQ'0'
     C*
     C** SET UP COMPARISON YEAR/MONTH/DAY ACCORDING TO FREQUENCY
     C*
     C                     Z-ADD*ZERO     #CYMD
     C                     SELEC
     C           DDFREQ    WHEQ 'X'
     C                     Z-ADD6         #CPDMN
     C           DDFREQ    WHEQ 'Y'
     C                     Z-ADD1         #CPDYR
     C                     ENDSL
     C*
     C** SET UP INPUT YEAR/MONTH/DAY
     C*
     C                     Z-ADD*ZERO     #IYMD
     C                     MOVELDDPDYR    #IPDYR
     C                     MOVELDDPDMN    #IPDMN
     C                     MOVELDDPDDY    #IPDDY
     C*
     C** IF INPUT YEAR/MONTH DAY IS GREATER THAN COMPARISON YEAR/MONTH/DAY
     C** THEN IT MUST BE A MULTIPLE OF THE FREQUENCY
     C*
     C           #IYMD     IFGT #CYMD
     C/COPY WNCPYSRC,DL1935C030
     C*
     C** DAY NOT ALLOWED FOR EITHER FREQUENCY ('X' OR 'Y')
     C*
     C           DDPDDY    IFNE '00'
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,10
     C                     END
     C*
     C/COPY WNCPYSRC,DL1935C032
     C** MONTH CAN ONLY BE '00' OR '06' FOR TWICE-YEARLY
     C*
     C           DDFREQ    IFEQ 'X'
     C           DDPDMN    ANDNE'00'
     C           DDPDMN    ANDNE'06'
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,10
     C                     END
     C*
     C***MONTH*CAN*ONLY*BE*'00'*FOR*YEARLY*****************************                       250570
     C**********                                                                              250570
     C********** DDFREQ    IFEQ 'Y'                                                           250570
     C********** DDPDMN    ANDNE'00'                                                          250570
     C**********           MOVE '1'       *IN31                                               250570
     C**********           MOVE '1'       *IN50                                               250570
     C**********           MOVE 'X'       @EM,10                                              250570
     C**********           END                                                                250570
     C*
     C** CHECK THAT CURRENT DATE IS NEXT DATE AFTER PREVIOUS DATE
     C** ACCORDING TO FREQUENCY CODE
     C** (6 MONTHS AFTER PREVIOUS IF 'X', ELSE 1 YEAR AFTER PREVIOUS IF 'Y')
     C*
     C           DDFREQ    IFEQ 'X'
     C           #IPDYR    SUB  #PPDYR    ##DIFF  80
     C                     MULT 12        ##DIFF
     C                     ADD  #IPDMN    ##DIFF
     C                     SUB  #PPDMN    ##DIFF           * MONTHS
     C                     ELSE
     C           #IPDYR    SUB  #PPDYR    ##DIFF           * YEARS
     C                     END
     C           DDFREQ    IFEQ 'X'
     C           ##DIFF    ANDNE6                          * 6 MONTHS
     C           DDFREQ    OREQ 'Y'
     C********** ##DIFF    ANDNE1                          * 1 YEAR                           250570
     C           #IPDYR    ANDNE1                          * 1 YEAR                           250570
     C           #IPDMN    ANDNE0                                                             250570
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,10
     C                     END
      **********                                                                              250570
     C           DDFREQ    IFEQ 'Y'                                                           250570
     C           #IPDYR    ANDEQ1                          * 1 YEAR                           250570
     C           #IPDMN    ANDGT11                         * 1 YEAR                           250570
     C                     MOVE '1'       *IN30                                               250570
     C                     MOVE '1'       *IN31                                               250570
     C                     MOVE '1'       *IN50                                               250570
     C                     MOVE 'X'       @EM,12                                              250570
     C                     END                                                                250570
     C/COPY WNCPYSRC,DL1935C031
     C*
     C                     END
     C*
     C** UPDATE PREVIOUS YEAR/MONTH/DAY
     C*
     C                     Z-ADD#IYMD     #PYMD
     C*
     C                     END
     C*
     C** IF PERIOD YEARS,MONTHS,DAYS ARE VALID, THEN CALCULATE PERIOD DATE
     C*
     C           *IN30     IFEQ '0'
     C           *IN31     ANDEQ'0'
     C           *IN32     ANDEQ'0'
     C*
     C**  SET UP NUMBER OF YEARS, MONTHS AND DAYS FOR SR ZCPD
     C*
     C                     MOVELDDPDYR    ZNYR
     C                     MOVELDDPDMN    ZNMN
     C                     MOVELDDPDDY    ZNDY
     C*
     C****IF*CURRENCY*THE*SAME*AS*THE*LOCAL*CURRENCY*SPOT*DATE*IS*TODAY   100299
     C*                                                                   100299
     C********** DDCCY     IFEQ BJCYCD                                    100299
     C**********           Z-ADDBJRDNB    ZINDT                           100299
     C**********           ELSE                                           100299
     C*                                                                   100299
     C****ELSE*SPOT*DATE*IS*TWO*WORKING*DAYS*FROM*TODAY                   100299
     C* Use the currency spot days in all cases to calculate spot date    100299
     C*
     C                     MOVE DDCCY     ZCCY
     C                     MOVE *BLANKS   ZLOC
     C                     Z-ADDBJRDNB    ZDAYNO
     C***********          Z-ADD2         ZNRDYS                          100299
     C                     Z-ADDA6SPDY    ZNRDYS                          100299
     C                     EXSR ZFWDT
     C                     Z-ADDZDYNBR    ZINDT
     C***********          END                                            100299
     C*
     C**  CALCULATE THE PERIOD DATE
     C*
     C                     EXSR ZCPD
     C*                                                                   100317
     C           DDACTN    IFEQ 'C'                                       100317
     C           DDACTN    OREQ 'D'                                       100317
     C                     MOVELIRMXX     ZPDTE                           100317
     C                     MOVELMNX,@Z    ZPDNO                           100317
     C                     END                                            100317
     C*
     C**  UPDATE RATES TABLE WITH PERIOD DATE
     C**  CHECK FOR DUPLICATE RECORDS FIRST
     C*
     C                     Z-ADD1         @Y
     C           ZPDNO     LOKUP@MN,@Y                   34
     C           *IN34     IFEQ '1'
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,9
     C                     ELSE
     C                     MOVE ZPDNO     @MN,@X
     C                     MOVE ZPDTE     @MA,@X
     C                     END
     C                     MOVE ZPDTE     DDMDMY
     C                     END
     C*
     C**  RATES
     C*
     C           DDRATE    IFEQ *BLANKS
     C                     MOVE '1'       *IN33
     C                     MOVE '1'       *IN37
     C                     MOVE '1'       *IN50
     C                     MOVE 'X'       @EM,7
     C                     ELSE
     C**********           MOVE *BLANKS   ZFIELD                                           AR1058442
     C**********           MOVELDDRATE    ZFIELD                                           AR1058442
     C**********           Z-ADD4         ZADIG                                            AR1058442
     C**********           Z-ADD7         ZADEC                                            AR1058442
     C**********           EXSR ZALIGN                                                     AR1058442
     C********** *IN99     IFEQ '0'                                                        AR1058442
     C**********           Z-ADD@RRN1     @X                                               AR1058442
     C**********           MOVE ZFIELD    @RT,@X                                           AR1058442
     C********** @RT,@X    IFEQ 0                                                          AR1058442
     C**********           MOVE '1'       *IN33                                            AR1058442
     C**********           MOVE '1'       *IN37                                            AR1058442
     C**********           MOVE '1'       *IN50                                            AR1058442
     C**********           MOVE 'X'       @EM,8                                            AR1058442
     C**********           END                                                             AR1058442
     C**********           ELSE                                                            AR1058442
     C**********           MOVE '1'       *IN33                                            AR1058442
     C**********           MOVE '1'       *IN37                                            AR1058442
     C**********           MOVE '1'       *IN50                                            AR1058442
     C**********           MOVE 'X'       @EM,8                                            AR1058442
     C**********           END                                                             AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD7         @@IDP                                            AR1058442
     C                     Z-ADD4         @@IINT                                           AR1058442
     C                     MOVE *BLANKS   @@ALPH 16                                        AR1058442
     C                     MOVELDDRATE    @@ALPH                                           AR1058442
     C                     MOVE 'N'       @@MTID  1                                        AR1058442
     C                     EXSR ZA0821                                                     AR1058442
      *                                                                                    AR1058442
     C           @@ERCD    IFNE 0                                                          AR1058442
     C           @@AMT     OREQ 0                                                          AR1058442
     C                     MOVE '1'       *IN33                                            AR1058442
     C                     MOVE '1'       *IN37                                            AR1058442
     C                     MOVE '1'       *IN50                                            AR1058442
     C                     MOVE 'X'       @EM,8                                            AR1058442
     C                     ELSE                                                            AR1058442
     C                     Z-ADD@RRN1     @X                                               AR1058442
     C                     MOVE @@AMT     @RT,@X                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     END
     C*
     C* SET RECORD NUMBER FOR SUBFILE PAGE DISPLAY TO FIRST PAGE IN ERROR
     C*
     C           *IN50     IFEQ '1'
     C           RECNO     ANDEQ99
     C                     Z-ADD@RRN1     RECNO
     C                     END
     C                     END
     C                     UPDATDL1935S5
     C                     END
     C*
     C* IF NO ERRORS, SET RECORD NUMBER FOR SUBFILE PAGE DISPLAY = 1
     C*
     C           RECNO     IFEQ 99
     C                     Z-ADD1         RECNO
     C                     END
     C*
     C** SEND MESSAGES ACCORDING TO ERRORS
     C*
     C           @EM,1     IFEQ 'X'
     C                     MOVEL'FIS0045' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,2     IFEQ 'X'
     C                     MOVEL'FIS0046' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,3     IFEQ 'X'
     C                     MOVEL'FIS0047' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,4     IFEQ 'X'
     C                     MOVEL'FIS0048' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,5     IFEQ 'X'
     C                     MOVEL'FIS0049' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,6     IFEQ 'X'
     C                     MOVEL'FIS0050' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,7     IFEQ 'X'
     C                     MOVEL'FIS0051' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,8     IFEQ 'X'
     C                     MOVEL'FIS0052' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,9     IFEQ 'X'
     C                     MOVEL'FIS0055' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C           @EM,10    IFEQ 'X'
     C                     MOVEL'FIS0112' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     END
     C*
     C           @EM,11    IFEQ 'X'                                                           250570
     C                     MOVEL'FIS0060' @MSGID                                              250570
     C                     CALL 'ZA0240'                                                      250570
     C                     PARM           @MSGID                                              250570
     C                     END                                                                250570
      **********                                                                              250570
     C           @EM,12    IFEQ 'X'                                                           250570
     C                     MOVEL'FIS0115' @MSGID                                              250570
     C                     CALL 'ZA0240'                                                      250570
     C                     PARM           @MSGID                                              250570
     C                     END                                                                250570
     C** SET OFF SUBFILE RECORD ERROR INDICATORS
     C*
     C                     MOVE '0'       *IN30
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN33
     C                     MOVE '0'       *IN34
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN37
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZACCH
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZALIGNZ2
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZCPDZ2
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZDATE2Z2
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZDATE9Z3
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZDAT10Z2
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZFWDT
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #UPDFL-THIS SUBROUTINE PERFORMS UPDATES TO THE FILES          *
     C*                                                               *
     C* CALLED BY : #INSRT                                            *
     C*             #AMEND                                            *
     C*             #PRODL                                            *
     C*             #COPY                                             *   100317
     C*                                                               *
     C* CALLS :     *PSSR                                             *
     C*             #SETUP                                            *
     C*             ZA0240                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #UPDFL    BEGSR
     C*                                                                                      BUG8891
     C** GET HEADER RECORD FOR UPDATE                                                        BUG8891
     C*                                                                                      BUG8891
     C                     MOVE *BLANKS   @KEY                                               BUG8891
     C                     MOVE 'IR'      @KEY1                                              BUG8891
     C           @KEY      CHAINFDTTOTLL             7074                                    BUG8891
     C*                                                                                      BUG8891
     C**  DATA BASE ERROR                                                                    BUG8891
     C*                                                                                      BUG8891
     C           *IN70     IFEQ '1'                                                          BUG8891
     C                     MOVEL@KEY      DBKEY            ***************                   BUG8891
     C                     MOVEL'FDTTOTLL'DBFILE           * DB ERROR 005*                   BUG8891
     C                     MOVE '005'     DBASE            ***************                   BUG8891
     C                     EXSR *PSSR                                                        BUG8891
     C                     END                                                               BUG8891
     C*                                                                                      BUG8891
     C** IF RECORD LOCKED SEND MESSAGE AND RELEASE MAIN UPDATE RECORD                        BUG8891
     C*                                                                                      BUG8891
     C           *IN74     IFEQ '1'                                                          BUG8891
     C                     CALL 'ZA0250'                                                     BUG8891
     C                     MOVEL'FIS0039' @MSGID                                             BUG8891
     C                     CALL 'ZA0240'                                                     BUG8891
     C                     PARM           @MSGID                                             BUG8891
     C                     MOVE 'N'       @UPDTD                                             BUG8891
     C                     ROLBK                                                             BUG8891
     C                     GOTO #UPD9                                                        BUG8891
     C                     END                                                               BUG8891
     C*
     C** POSITION POINTER ON FILE
     C*
     C           DLSWPK    SETLLDLSWPRL2
     C*
     C** LOOP UNTIL ALL SUBFILE ELEMENTS HAVE BEEN PROCESSED
     C*
     C                     MOVE '0'       *IN70
     C           1         DO   @CNT      @X
     C*
     C** ONLY PROCESS RECORDS ON THE SUBFILE FOR WHICH DETAILS ARE PRESENT
     C*
     C           @RT,@X    IFNE *ZERO
     C*
     C** IF END OF FILE HAS ALREADY BEEN REACHED
     C*
     C           *IN70     IFEQ '1'
     C*
     C** SET UP FIELDS FOR OUTPUT, AND WRITE A RECORD
     C*
     C                     EXSR #SETUP
     C                     WRITEDLSWPRXX
     C*                                                                                      BUG8891
     C** UPDATE TOTALS OF CHANGES DONE TODAY                                                 BUG8891
     C*                                                                                      BUG8891
     C                     ADD  1         NINS                                               BUG8891
     C*
     C** OTHERWISE, READ THE NEXT RECORD ON THE FILE
     C*
     C                     ELSE
     C           DLSWPK    READEDLSWPRL2               7470
     C*
     C** RECORD LOCKED
     C*
     C           *IN74     IFEQ '1'
     C                     CALL 'ZA0250'
     C                     MOVEL'FIS0039' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE 'N'       @UPDTD
     C                     ROLBK
     C                     GOTO #UPD9
     C                     END
     C*
     C** IF A RECORD WAS NOT READ IN
     C*
     C           *IN70     IFEQ '1'
     C*
     C** SET UP FIELDS FOR OUTPUT, AND WRITE A RECORD
     C*
     C                     EXSR #SETUP
     C                     WRITEDLSWPRXX
     C*                                                                                      BUG8891
     C** UPDATE TOTALS OF CHANGES DONE TODAY                                                 BUG8891
     C*                                                                                      BUG8891
     C                     ADD  1         NINS                                               BUG8891
     C*
     C** OTHERWISE, IF A RECORD WAS READ IN
     C** CHECK FOR UPDATES BY ANOTHER WORKSTATION
     C*
     C                     ELSE
     C           @@TLUP    IFNE IRTLUP
     C           @@DLUP    ORNE IRDLUP
     C           @@MLUP    ORNE IRMLUP
     C           @@YLUP    ORNE IRYLUP
      *                                                                                       213463
      ** If logical delete flag is '*', then do not issue error                               213463
      ** message to allow re-insert                                                           213463
      *                                                                                       213463
     C           IRDLTF    IFEQ '*'                                                           213463
     C           DDACTN    ANDEQ'I'                                                           213463
      *                                                                                       213463
     C                     EXSR #SETUP                                                        213463
     C                     WRITEDLSWPRXX                                                      213463
      *                                                                                       213463
     C                     ELSE                                                               213463
      *                                                                                       213463
     C                     CALL 'ZA0250'
     C                     MOVEL'FIS0040' @MSGID
     C                     CALL 'ZA0240'
     C                     PARM           @MSGID
     C                     MOVE 'N'       @UPDTD
     C                     ROLBK
     C                     GOTO #UPD9
      *                                                                                       213463
     C                     ENDIF                                                              213463
      *                                                                                       213463
     C                     END
     C*                                                                                      BUG8891
     C** UPDATE TOTALS OF CHANGES DONE TODAY                                                 BUG8891
     C*                                                                                      BUG8891
     C           DDACTN    IFEQ 'I'                                                          BUG8891
     C                     ADD  1         NINS                                               BUG8891
     C                     ELSE                                                              BUG8891
     C           DDACTN    IFEQ 'A'                                                          BUG8891
     C                     ADD  1         NAMD                                               BUG8891
     C                     ELSE                                                              BUG8891
     C                     ADD  1         NDEL                                               BUG8891
     C                     END                                                               BUG8891
     C                     END                                                               BUG8891
     C*
     C** SET UP FIELDS FOR OUTPUT, AND UPDATE THE RECORD READ IN
     C*
     C                     EXSR #SETUP
     C                     UPDATDLSWPRXX
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C** PHYSICALLY DELETE ANY REMAINING RECORDS
     C*
     C           *IN70     DOWEQ'0'
     C           DLSWPK    READEDLSWPRL2                 70
     C  N70                DELETDLSWPRXX
     C*                                                                                      BUG8891
     C** UPDATE TOTALS OF CHANGES DONE TODAY                                                 BUG8891
     C*                                                                                      BUG8891
     C           *IN70     IFEQ '0'                                                          BUG8891
     C           IRDLTF    ANDNE'*'                                                          BUG8891
     C                     ADD  1         NDEL                                               BUG8891
     C                     END                                                               BUG8891
     C                     END
     C*                                                                                      BUG8891
     C** UPDATE TABLETX                                                                      BUG8891
     C*                                                                                      BUG8891
     C                     UPDATTABLETXF                                                     BUG8891
     C*
     C           CMTTXT    COMIT
     C*
     C           #UPD9     ENDSR
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C* #SETUP - SET UP OUTPUT FIELDS                                 *
     C*                                                               *
     C* CALLED BY :  #UPDFL                                           *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C           #SETUP    BEGSR
     C           DDACTN    IFEQ 'D'
     C                     MOVE '*'       IRDLTF
     C                     ELSE
     C                     MOVE *BLANK    IRDLTF
     C                     END
     C                     MOVE DDCCY     IRCCY
     C                     MOVELDDINCL    IRINCL
     C                     MOVELDDFREQ    IRFREQ
     C                     Z-ADD@MN,@X    IRMMDN
     C                     MOVEL@MA,@X    IRMDMY
     C                     Z-ADD@PY,@X    IRPDYR
     C                     Z-ADD@PM,@X    IRPDMN
     C                     Z-ADD@PD,@X    IRPDDY
     C                     Z-ADD@RT,@X    IRRATE
     C                     MOVE DDACTN    IRCHTP
     C                     MOVEL@USER     IRLUSI
     C                     Z-ADDBJRDNB    IRLCD
     C                     Z-ADDDDTIME    IRTLUP
     C                     Z-ADD@RUNDY    IRDLUP
     C                     MOVEL@RUNMN    IRMLUP
     C                     Z-ADD@RUNYR    IRYLUP
     C/COPY WNCPYSRC,DL1935C023
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C* #LODSF - LOAD SUBFILE WITH RECORDS OF SELECTED CRNCY/ICM/FREQ *
     C*                                                               *
     C* CALLED BY : #VALKY                                            *
     C*                                                               *
     C* CALLS :     #RDFWD                                            *
     C*             ZEDIT                                             *
     C*             *PSSR                                             *
     C*                                                               *
     C*****************************************************************
     C           #LODSF    BEGSR
     C*                                                                   100299
     C           DDACTN    IFEQ 'C'                                       100299
     C                     MOVE DDCCY     ZCCY                            100299
     C                     MOVE *BLANKS   ZLOC                            100299
     C                     Z-ADDBJRDNB    ZDAYNO                          100299
     C                     Z-ADDA6SPDY    ZNRDYS                          100299
     C                     EXSR ZFWDT                                     100299
     C                     Z-ADDZDYNBR    ZSPDT   50                      100299
     C                     ENDIF                                          100299
     C           DDINCL    LOKUPTABCAL    TABCBS         27               100317
     C                     MOVELTABCBS    FMCBS   30                      100317
     C           TOINCL    LOKUPTABCAL    TABCBS         28               100317
     C                     MOVELTABCBS    TOCBS   30                      100317
     C*
     C* POSITION POINTER TO START OF CURRENCY
     C*
     C           DLSWPK    SETLLDLSWPRL1
     C*
     C** GET THE FIRST SUBFILE RECORD AND READ THE FIRST RECORD
     C*
     C                     Z-ADD1         @RRN1
     C                     Z-ADD1         @Z                              100317
     C           @RRN1     CHAINDL1935S5             70
     C                     EXSR #RDFWD
     C*
     C** NOW LOOP TO FILL UP THE SUBFILE
     C*
     C           *IN70     DOWEQ'0'
     C           IRCCY     ANDEQDDCCY
     C           IRINCL    ANDEQDDINCL
     C           IRFREQ    ANDEQDDFREQ
     C*
     C/COPY WNCPYSRC,DL1935C024
     C** UPDATE THE SUBFILE RECORD
     C*
     C                     MOVELIRPDDY    DDPDDY
     C                     MOVELIRPDMN    DDPDMN
     C                     MOVELIRPDYR    DDPDYR
      *                                                                                       200995
      ** Instead of retrieving Maturity Date from file, calculate                             200995
      ** it from rundate.  Pattern after SR/#VALSF processing.                                200995
      *                                                                                       200995
     C**********           MOVELIRMDMY    DDMDMY                                              200995
      *                                                                                       200995
     C                     MOVELIRPDYR    ZNYR                                                200995
     C                     MOVELIRPDMN    ZNMN                                                200995
     C                     MOVELIRPDDY    ZNDY                                                200995
      *                                                                                       200995
     C                     MOVE IRCCY     ZCCY                                                200995
     C                     MOVE *BLANKS   ZLOC                                                200995
     C                     Z-ADDBJRDNB    ZDAYNO                                              200995
     C                     Z-ADDA6SPDY    ZNRDYS                                              200995
     C                     EXSR ZFWDT                                                         200995
     C                     Z-ADDZDYNBR    ZINDT                                               200995
      *                                                                                       200995
     C                     EXSR ZCPD                                                          200995
     C                     MOVE ZPDTE     DDMDMY                                              200995
      *                                                                                       200995
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE IRRATE    ZFIELD
     C*                                                                   100317
     C** CONVERT SWAP RATE FOR COPY ACTION                                100317
     C*                                                                   100317
     C           DDACTN    IFEQ 'C'                                       100317
     C                     EXSR CONVER                                    100317
     C*                                                                   100317
     C                     Z-ADDIRMMDN    MNX,@Z                          100317
     C                     MOVE *BLANKS   ZFIELD                          100317
     C                     MOVE ZZRAT1    ZFIELD                          100317
     C                     END                                            100317
     C*                                                                   100317
     C**********           Z-ADD7         ZADEC                                            AR1058442
     C**********           EXSR ZEDIT                                                      AR1058442
     C**********           MOVE ZFIELD    DDRATE                                           AR1058442
     C                     Z-ADD7         @@QECN  10                                       AR1058442
     C                     MOVE *BLANKS   @@AMTW 130                                       AR1058442
     C                     MOVE ZFIELD    @@AMTW                                           AR1058442
     C                     EXSR ZA0920                                                     AR1058442
     C                     MOVE @@AMTD    DDRATE                                           AR1058442
     C                     UPDATDL1935S5
     C*
     C** GET THE NEXT SUBFILE RECORD AND READ THE NEXT RECORD
     C*
     C                     ADD  1         @RRN1
     C                     ADD  1         @Z                              100317
     C********** @RRN1     IFLE 30                                                            194012
     C           @RRN1     IFLE 150                                                           194012
     C           @RRN1     CHAINDL1935S5             70
     C                     END
     C                     EXSR #RDFWD
     C*
     C                     END
     C*
     C* BLANK OUT UNUSED SUBFILE RECORDS
     C*
     C           @RRN1     DOWLE@CNT
     C           @RRN1     CHAINDL1935S5             70
     C                     MOVE *BLANK    DDTOTL
     C                     UPDATDL1935S5
     C                     ADD  1         @RRN1
     C                     END
     C*
     C**  ACCESS CURRENCY FILE FOR CURRENCY NAME
     C**  (IF NOT FOUND DATABASE ERROR HANDLED BY ACCESS PROGRAM)
     C                     CALL 'AOCURRR0'
     C                     PARM '*DBERR ' @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM DDCCY     @CRKEY  3
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C                     MOVELA6CYNM    DDCCNM
     C*
     C* SET UP THE FREQUENCY NAME
     C                     SELEC
     C           DDFREQ    WHEQ 'X'
     C                     MOVELFRN,1     DDFRQN
     C           DDFREQ    WHEQ 'Y'
     C                     MOVELFRN,2     DDFRQN
     C                     ENDSL
     C*
     C* SET UP THE INT.CAL.MTH NAME
     C                     SELEC
     C           DDINCL    WHEQ '1'
     C                     MOVELINC,1     DDINCN
     C           DDINCL    WHEQ '2'
     C                     MOVELINC,2     DDINCN
     C           DDINCL    WHEQ '3'
     C                     MOVELINC,3     DDINCN
     C           DDINCL    WHEQ '4'
     C                     MOVELINC,4     DDINCN
     C           DDINCL    WHEQ '5'
     C                     MOVELINC,5     DDINCN
     C           DDINCL    WHEQ '6'
     C                     MOVELINC,6     DDINCN
     C           DDINCL    WHEQ '7'                                       CIR004
     C           CIR004    ANDEQ'Y'                                       CIR004
     C                     MOVELINC,7     DDINCN                          CIR004
     C           DDINCL    WHEQ '9'                                                           CIR013
     C           CIR013    ANDEQ'Y'                                                           CIR013
     C                     MOVELINC,8     DDINCN                                              CIR013
     C                     ENDSL
     C*                                                                   100317
     C* SET UP THE TO INT.CAL.MTH NAME                                    100317
     C                     SELEC                                          100317
     C           TOINCL    WHEQ '1'                                       100317
     C                     MOVELINC,1     TOINCN                          100317
     C           TOINCL    WHEQ '2'                                       100317
     C                     MOVELINC,2     TOINCN                          100317
     C           TOINCL    WHEQ '3'                                       100317
     C                     MOVELINC,3     TOINCN                          100317
     C           TOINCL    WHEQ '4'                                       100317
     C                     MOVELINC,4     TOINCN                          100317
     C           TOINCL    WHEQ '5'                                       100317
     C                     MOVELINC,5     TOINCN                          100317
     C           TOINCL    WHEQ '6'                                       100317
     C                     MOVELINC,6     TOINCN                          100317
     C           TOINCL    WHEQ '7'                                       CIR004
     C           CIR004    ANDEQ'Y'                                       CIR004
     C                     MOVELINC,7     TOINCN                          CIR004
     C           TOINCL    WHEQ '9'                                                           CIR013
     C           CIR013    ANDEQ'Y'                                                           CIR013
     C                     MOVELINC,8     TOINCN                                              CIR013
     C                     ENDSL                                          100317
     C*
     C/COPY WNCPYSRC,DL1935C025
     C           #LODS9    ENDSR
     C*****************************************************************
      /EJECT                                                              100317
     C*****************************************************************   100317
     C*                                                               *   100317
     C* CONVER -   TO CALCULATE THE INTEREST RATE SWAP RATE           *   100317
     C*                                                               *   100317
     C*   Formula:  Rate2 =   Rate1   *   Days1   *   Basis2          *   100317
     C*                                  -------     --------         *   100317
     C*                                   Days2       Basis1          *   100317
     C*                                                               *   100317
     C*                 where xx1 = From Basis                        *   100317
     C*                 where xx2 = To Basis                          *   100317
     C*                                                               *   100317
     C* CALLED BY : #LODSF                                            *   100377
     C*                                                               *   100317
     C* CALLS :     ZINTDY                                            *   100317
     C*             *PSSR                                             *   100317
     C*                                                               *   100317
     C*****************************************************************   100317
     C           CONVER    BEGSR                           ** CONVER  **  100317
     C*                                                                   100317
     C           IRMMDN    IFGT ZSPDT                                     100317
     C                     MOVE ZSPDT     ZZBEG                           100317
     C                     MOVE IRMMDN    ZZEND                           100317
     C                     MOVE DDINCL    ZZCALC  1                       100317
     C                     EXSR ZINTDY                                    100317
      *                                                                   163136
      * For calculation Method '6'  use new field INT6DY  introduced by   163136
      * core  #126017  in  ZINTDY .                                       163136
      * Also use INT6DY if method '9' and Feb 29 is within the period.                        CIR013
      *                                                                   163136
     C           ZZCALC    IFEQ '6'                                       163136
     C           ZZCALC    OREQ '9'                                                           CIR013
     C           #29FEB    ANDEQ'Y'                                                           CIR013
     C                     Z-ADDINT6DY    FMDAYS                          163136
     C                     ELSE                                           163136
      *                                                                   163136
     C                     Z-ADDZZINDY    FMDAYS  50                      100317
     C                     END                                            163136
      *                                                                                       CIR013
      * For calculation method '9', set the 'from' basis days to 366                          CIR013
      * if a Feb 29 falls within the period, else set to 365.                                 CIR013
     C           ZZCALC    IFEQ '9'                                                           CIR013
     C           #29FEB    IFEQ 'Y'                                                           CIR013
     C                     Z-ADD366       FMCBS                                               CIR013
     C                     ELSE                                                               CIR013
     C                     Z-ADD365       FMCBS                                               CIR013
     C                     ENDIF                                                              CIR013
     C                     ENDIF                                                              CIR013
      *                                                                   163136
     C                     Z-ADDZSPDT     ZZBEG                                               CIR013
     C                     Z-ADDIRMMDN    ZZEND                                               CIR013
     C                     MOVE TOINCL    ZZCALC  1                       100317
     C                     EXSR ZINTDY                                    100317
      *                                                                   163136
      * For calculation Method '6'  use new field INT6DY  introduced by   163136
      * core  #126017  in  ZINTDY .                                       163136
      * Also use INT6DY if method '9' and Feb 29 is within the period.                        CIR013
      *                                                                   163136
     C           ZZCALC    IFEQ '6'                                       163136
     C           ZZCALC    OREQ '9'                                                           CIR013
     C           #29FEB    ANDEQ'Y'                                                           CIR013
     C                     Z-ADDINT6DY    TODAYS                          163136
     C                     ELSE                                           163136
      *                                                                   163136
     C                     Z-ADDZZINDY    TODAYS  50                      100317
     C                     END                                            163136
      *                                                                                       CIR013
      * For calculation method '9', set the 'to' basis days to 366                            CIR013
      * if a Feb 29 falls within the period, else set to 365.                                 CIR013
     C           ZZCALC    IFEQ '9'                                                           CIR013
     C           #29FEB    IFEQ 'Y'                                                           CIR013
     C                     Z-ADD366       TOCBS                                               CIR013
     C                     ELSE                                                               CIR013
     C                     Z-ADD365       TOCBS                                               CIR013
     C                     ENDIF                                                              CIR013
     C                     ENDIF                                                              CIR013
      *                                                                   163136
     C           IRRATE    MULT FMDAYS    ZZRAT1 127H                     100317
     C           ZZRAT1    DIV  TODAYS    ZZRAT1    H                     100317
     C           ZZRAT1    MULT TOCBS     ZZRAT1    H                     100317
     C           ZZRAT1    DIV  FMCBS     ZZRAT1    H                     100317
     C                     ELSE                                           100317
     C                     MOVE IRRATE    ZZRAT1                          100317
     C                     ENDIF                                          100317
     C**                                                                  100317
     C                     ENDSR                                          100317
      /EJECT
     C*****************************************************************
     C/COPY ZSRSRC,ZEDITZ2
     C*****************************************************************
     C/EJECT
     C*****************************************************************   100317
     C/COPY ZSRSRC,ZINTDYZ2                                               100317
     C*****************************************************************   100317
     C/EJECT                                                              100317
     C*****************************************************************
     C*                                                               *
     C* #INIT- INITIAL PROCESSING                                     *
     C*                                                               *
     C* CALLED BY : MAINLINE                                          *
     C*                                                               *
     C* CALLS :     *PSSR                                             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #INIT     BEGSR
     C*
     C           *LIKE     DEFN DDACTN    @ACTN
     C           *LIKE     DEFN DDCCNM    @CCNM
     C           *LIKE     DEFN DDINCN    @INCN
     C           *LIKE     DEFN DDFRQN    @FRQN
     C           *LIKE     DEFN TOINCN    @TOCN                           100317
     C           *LIKE     DEFN DDCCY     @CCY
     C           *LIKE     DEFN DDFREQ    @FREQ
     C           *LIKE     DEFN DDINCL    @INCL
     C           *LIKE     DEFN TOINCL    @TOCL                           100317
     C*
     C           *LIKE     DEFN IRDLUP    @@DLUP
     C           *LIKE     DEFN IRMLUP    @@MLUP
     C           *LIKE     DEFN IRYLUP    @@YLUP
     C           *LIKE     DEFN IRTLUP    @@TLUP
     C                     MOVELHED,1     DDHEAD
     C                     MOVELNAR,1     DDNARR
     C                     MOVE 'IR'      IRRCID
     C*
     C** CLEAR THE PROGRAM MESSAGE QUEUE
     C*
     C                     CALL 'ZA0250'
     C*
     C** DEFINE ALL WORK FIELDS USED IN PROGRAM
     C*
     C                     Z-ADD0         STATUS
     C                     Z-ADD0         @CNT    50
     C                     MOVE *BLANKS   @MSGID 10
     C                     Z-ADD1         RECNO   20
     C                     Z-ADD0         @RRN    50
     C                     Z-ADD0         @RRN1   50
     C                     Z-ADD0         @X      50
     C                     Z-ADD0         @Y      50
     C                     Z-ADD0         @Z      50                      100317
     C                     MOVE *BLANKS   EXTTAG  6
     C                     Z-ADD@@DAYN    @@DAYN  50
     C                     Z-ADD0         ZZBEG   50                      100317
     C                     Z-ADD0         ZZEND   50                      100317
     C                     Z-ADD0         FMDAYS  50                      100317
     C                     Z-ADD0         TODAYS  50                      100317
     C                     Z-ADD0         FMCBS   30                      100317
     C                     Z-ADD0         TOCBS   30                      100317
     C                     Z-ADD0         ZZRAT1 127                      100317
     C                     MOVE *BLANKS   ZZCALC  1                       100317
     C*
     C** INITIALISE SCREEN FIELDS
     C*
     C                     MOVE *BLANKS   DDCCY
     C                     MOVE *BLANKS   DDCCNM
     C                     MOVE *BLANKS   DDINCL
     C                     MOVE *BLANKS   DDINCN
     C                     MOVE *BLANKS   TOINCL                          100317
     C                     MOVE *BLANKS   TOINCN                          100317
     C                     MOVE *BLANKS   DDFREQ
     C                     MOVE *BLANKS   DDFRQN
     C                     MOVEL'*'       DDPGMQ
     C                     MOVE '1'       *IN10
     C                     MOVEL'DL1935'  DBPGM
     C                     MOVEL@USER     DDUSER
     C                     MOVEL@JOB      DDJOB
     C                     Z-ADD0         DDTIME
     C*
     C** DEFINE KEYS TO DLSWPRL1
     C*
     C           DLSWPK    KLIST
     C                     KFLD           DDCCY
     C                     KFLD           DDINCL
     C                     KFLD           DDFREQ
     C/COPY WNCPYSRC,DL1935C026
     C           DLSWPC    KLIST                                          100317
     C                     KFLD           DDCCY                           100317
     C                     KFLD           TOINCL                          100317
     C                     KFLD           DDFREQ                          100317
     C/COPY WNCPYSRC,DL1935C027
     C           DLSWPP    KLIST
     C                     KFLD           DDCCY
     C                     KFLD           DDINCL
     C/COPY WNCPYSRC,DL1935C028
     C*
     C                     MOVEACPY@      BIS@   80
     C*
     C** FIRST CLEAR SUBFILE
     C*
     C                     MOVE '1'       *IN45
     C                     WRITEDL1935S4
     C                     MOVE '0'       *IN45
     C*
     C***SET*UP*SUBFILE*(CREATE 30 BLANK RECORDS ON IT - 3 PAGES)                             194012
     C** SET UP SUBFILE (CREATE 150 BLANK RECORDS ON IT)                                      194012
     C*
     C                     Z-ADD1         @RRN1
     C                     Z-ADD1         @CNT
     C********** @CNT      DOWLT31                                                            194012
     C           @CNT      DOWLT151                                                           194012
     C                     MOVE *BLANK    DDPDYR
     C                     MOVE *BLANK    DDPDMN
     C                     MOVE *BLANK    DDPDDY
     C                     MOVE *BLANK    DDMDMY
     C                     MOVE *BLANK    DDRATE
     C                     WRITEDL1935S5
     C                     ADD  1         @CNT
     C                     ADD  1         @RRN1
     C                     END
     C           @RRN1     SUB  1         @CNT
     C*
     C** CALL ACCESS PROGRAM FOR BANK DETAILS
     C*
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR  '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
     C*
     C           @RTCD     IFNE *BLANK
     C                     MOVEL@OPTN     DBKEY            ****************
     C                     MOVEL'SDBANKPD'DBFILE           * DB ERROR 002 *
     C                     MOVEL'002'     DBASE            ****************
     C                     EXSR *PSSR
     C                     END
      *                                                                                    AR1058442
      ** Get Dealing ICD Details                                                           AR1058442
      *                                                                                    AR1058442
     C                     CALL 'AODEALR0'                                                 AR1058442
     C                     PARM '*MSG'    @RTCD                                            AR1058442
     C                     PARM '*FIRST'  @OPTN                                            AR1058442
     C           SDDEAL    PARM SDDEAL    DSFDY                                            AR1058442
      *                                                                                    AR1058442
     C           @RTCD     IFNE *BLANKS                                                    AR1058442
     C                     MOVEL'*FIRST'  DBKEY            ****************                AR1058442
     C                     MOVEL'SDDEALPD'DBFILE           * DB ERROR 003 *                AR1058442
     C                     MOVEL'003'     DBASE            ****************                AR1058442
     C                     EXSR *PSSR                                                      AR1058442
     C                     ENDIF                                                           AR1058442
     C*
     C**  SET DATE FORMAT INDICATOR FOR LATER USE IN SR ZDATE2
     C*
     C           BJDFIN    IFEQ 'M'
     C                     MOVE '1'       *IN98
     C                     END
     C*
     C**  SET RUN DAY,MONTH,YEAR FOR OUTPUT TO DLSWPRL2
     C*
     C                     MOVELBJMRDT    @WRK    5
     C                     MOVELBJMRDT    @RUNDY  20
     C                     MOVE @WRK      @RUNMN  3
     C                     MOVE BJMRDT    @RUNYR  20
      *                                                                   CIR004
      ** Access Switchable Features Details                               CIR004
      *                                                                   CIR004
     C                     CALL 'AOSARDR0'                                CIR004
     C                     PARM *BLANKS   PRTCD   7                       CIR004
     C                     PARM '*VERIFY 'POPTN   7                       CIR004
     C                     PARM 'CIR004'  PSARD   6                       CIR004
     C           SCSARD    PARM SCSARD    DSFDY                           CIR004
     C           PRTCD     IFEQ *BLANKS                                   CIR004
     C                     MOVE 'Y'       CIR004  1                       CIR004
     C                     ELSE                                           CIR004
     C                     MOVE 'N'       CIR004                          CIR004
     C                     ENDIF                                          CIR004
      *                                                                                       CIR013
     C                     CALL 'AOSARDR0'                                                    CIR013
     C                     PARM *BLANKS   PRTCD                                               CIR013
     C                     PARM '*VERIFY 'POPTN                                               CIR013
     C                     PARM 'CIR013'  PSARD                                               CIR013
     C           SCSARD    PARM SCSARD    DSFDY                                               CIR013
     C           PRTCD     IFEQ *BLANKS                                                       CIR013
     C                     MOVE 'Y'       CIR013  1                                           CIR013
     C                     ELSE                                                               CIR013
     C                     MOVE 'N'       CIR013                                              CIR013
     C                     ENDIF                                                              CIR013
      *****************************************************************            MD035545 MD047993
      ***Call*access*program*for*General*Ledger*details.***************            MD035545 MD047993
      *****************************************************************            MD035545 MD047993
     C**********           CALL 'AOGELRR1'                                         MD035545 MD047993
     C**********           PARM '*MSG   ' @RTCD   7                                MD035545 MD047993
     C**********           PARM '*FIRST ' @OPTN   7                                MD035545 MD047993
     C********** SDGELR    PARM SDGELR    DSSDY                                    MD035545 MD047993
      *                                                                                     MD035545
     C********** @RTCD     IFNE *BLANK                                             MD035545 MD047993
     C**********           MOVEL'SDGELRPD'DBFILE                                   MD035545 MD047993
     C**********           MOVEL'062'     DBASE                                    MD035545 MD047993
     C**********           MOVEL@OPTN     DBKEY                                    MD035545 MD047993
     C**********           EXSR *PSSR                                              MD035545 MD047993
     C**********           ENDIF                                                   MD035545 MD047993
      *                                                                                       CIR013
      ** Retrieve system value setting                                                      MD035545
      *                                                                                     MD035545
     C                     MOVELWPARML    P@OP01                                            MD035545
     C                     CALL 'AOSVALR0'                                                  MD035545
     C                     PARM *BLANKS   W0RTCD  7                                         MD035545
     C                     PARM           P@OP01 20                                         MD035545
     C                     PARM           P@VL01200                                         MD035545
     C                     PARM           P@OP02 20                                         MD035545
     C                     PARM           P@VL02200                                         MD035545
     C                     PARM           P@OP03 20                                         MD035545
     C                     PARM           P@VL03200                                         MD035545
     C                     PARM           P@OP04 20                                         MD035545
     C                     PARM           P@VL04200                                         MD035545
     C                     PARM           P@OP05 20                                         MD035545
     C                     PARM           P@VL05200                                         MD035545
     C                     PARM           P@OP06 20                                         MD035545
     C                     PARM           P@VL06200                                         MD035545
     C                     PARM           P@OP07 20                                         MD035545
     C                     PARM           P@VL07200                                         MD035545
     C                     PARM           P@OP08 20                                         MD035545
     C                     PARM           P@VL08200                                         MD035545
     C                     PARM           P@OP09 20                                         MD035545
     C                     PARM           P@VL09200                                         MD035545
     C                     PARM           P@OP10 20                                         MD035545
     C                     PARM           P@VL10200                                         MD035545
      *                                                                                     MD035545
      ** If system value is not found then default value to 'N'                             MD035545
      *                                                                                     MD035545
     C           W0RTCD    IFNE '       '                                                   MD035545
     C                     MOVE 'N'       WCALC6                                            MD035545
     C                     ELSE                                                             MD035545
     C                     MOVELP@VL01    WCALC6                                            MD035545
     C********** WCALC6    IFEQ 'Y'                                                MD035545 MD047993
     C********** BKALDI    ANDEQ'Y'                                                MD035545 MD047993
     C**********           MOVE 'Y'       WCALC6                                   MD035545 MD047993
     C**********           ELSE                                                    MD035545 MD047993
     C**********           MOVE 'N'       WCALC6                                   MD035545 MD047993
     C**********           ENDIF                                                   MD035545 MD047993
     C                     ENDIF                                                            MD035545
      *                                                                                     MD035545
     C/COPY WNCPYSRC,DL1935C029
     C           #INIT9    ENDSR
      *                                                                                    AR1058442
      *****************************************************************                    AR1058442
      *                                                               *                    AR1058442
      *  ZA0841 - Validate whether field is numeric - accepts a '-'   *                    AR1058442
      *           sign to indicate input amount is negative.          *                    AR1058442
      *                                                               *                    AR1058442
      *  Function:This subroutine will take as input a 16A field,     *                    AR1058442
      *           a 1N number of integers and a 1N number of decimal  *                    AR1058442
      *           places. Ignoring the leading and trailing blanks    *                    AR1058442
      *           it will ensure that the field contains only numeric *                    AR1058442
      *           characters and a decimal point, and that it has no  *                    AR1058442
      *           embedded blanks, or more than one decimal point.    *                    AR1058442
      *           It will also check that the number of figures before*                    AR1058442
      *           and after the decimal point do not exceed the input *                    AR1058442
      *           parameters. The module will output the number as    *                    AR1058442
      *           a 16A field and a 15N field, along with an error    *                    AR1058442
      *           code. The alpha field will be right aligned with    *                    AR1058442
      *           the leading zeros blanked, and trailing blanks zero *                    AR1058442
      *           filled. The number returned will be 15 long with 0  *                    AR1058442
      *           decimal places. The error code will contain 0 if    *                    AR1058442
      *           there was no error, 1 if there was a non-numeric    *                    AR1058442
      *           character found, and 2 if the number of decimal     *                    AR1058442
      *           places are wrong.                                   *                    AR1058442
      *                                                               *                    AR1058442
      *  Input  : @@ALPH - 16A field containing the field to validate *                    AR1058442
      *           @@IDP  - number of decimal places                   *                    AR1058442
      *           @@IINT - number of integers                         *                    AR1058442
      *           @@MTID - Millions/Thousands id (Y = function on)    *                    AR1058442
      *                                                               *                    AR1058442
      *  Output : @@ALPH - 16A field for display                      *                    AR1058442
      *           @@AMT  - 15N field for calculation                  *                    AR1058442
      *           @@ERCD - 1N error code                              *                    AR1058442
      *                                                               *                    AR1058442
      *****************************************************************                    AR1058442
      *                                                                                    AR1058442
     C           ZA0821    BEGSR                                                           AR1058442
      *                                                                                    AR1058442
      ** Initialize the fields and the arrays                                              AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD0         IN81    10                                       AR1058442
     C                     Z-ADD0         IN82    10                                       AR1058442
     C                     MOVE 'N'       @@MTF   1                                        AR1058442
     C                     MOVE 'N'       @@MRT   1                                        AR1058442
     C                     MOVE 'N'       @@MIN   1                                        AR1058442
     C                     MOVE ' '       @@MRTS  1                                        AR1058442
     C                     Z-ADD0         @@ERCD  10                                       AR1058442
     C                     Z-ADD0         @@AMT  150                                       AR1058442
     C                     MOVEA*BLANKS   @G                                               AR1058442
     C                     MOVEA@@ALPH    @F                                               AR1058442
     C                     MOVE *BLANKS   @@ALPH 16                                        AR1058442
     C                     Z-ADD0         @@WK7   10                                       AR1058442
     C                     Z-ADD0         @@CADP  30                                       AR1058442
     C                     Z-ADD0         @@CINT  30                                       AR1058442
     C                     Z-ADD0         @@PIDP  30                                       AR1058442
     C                     Z-ADD0         @@PODP  30                                       AR1058442
     C                     Z-ADD0         @@C     20                                       AR1058442
     C                     Z-ADD0         @@D     20                                       AR1058442
     C                     Z-ADD0         @@E     20                                       AR1058442
     C                     Z-ADD0         @@K     20                                       AR1058442
      *                                                                                    AR1058442
      ** Define the input fields                                                           AR1058442
      *                                                                                    AR1058442
     C           *LIKE     DEFN @@CADP    @@IDP                                            AR1058442
     C           *LIKE     DEFN @@CINT    @@IINT                                           AR1058442
      *                                                                                    AR1058442
      ** First check that the number input will not produce a number                       AR1058442
      ** output with more than 15 figures.                                                 AR1058442
      *                                                                                    AR1058442
     C           @@IDP     ADD  @@IINT    @@WK2   20                                       AR1058442
     C           @@WK2     IFGT 15                                                         AR1058442
     C                     Z-ADD2         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Remove trailing zeros if decimal point present                                    AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD1         @@S                                              AR1058442
     C           BNDCSP    LOKUP@F,@@S                   99                                AR1058442
     C           *IN99     IFEQ '1'                                                        AR1058442
     C                     ADD  @@IDP     @@S                                              AR1058442
     C                     Z-ADD16        @@C                                              AR1058442
     C           @@C       DOWGT@@S                                                        AR1058442
     C           @F,@@C    IFNE '0'                                                        AR1058442
     C           @F,@@C    ANDNE' '                                                        AR1058442
     C                     Z-ADD0         @@C                                              AR1058442
     C                     ELSE                                                            AR1058442
     C                     MOVE ' '       @F,@@C                                           AR1058442
     C                     SUB  1         @@C                                              AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDDO                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Work through input array, ignoring leading zeros and blanks,                      AR1058442
      ** also blanking the leading zeros in the input array.                               AR1058442
      ** note any leading '-' sign by setting on @@MIN.                                    AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD0         IN83    10                                       AR1058442
     C                     Z-ADD1         @@C                                              AR1058442
     C           @@C       DOWLE16                                                         AR1058442
     C           IN83      ANDEQ0                                                          AR1058442
     C           @F,@@C    IFEQ '-'                                                        AR1058442
      *                                                                                    AR1058442
      ** Error if reading a second '-' sign.                                               AR1058442
      *                                                                                    AR1058442
     C           @@MIN     IFEQ 'Y'                                                        AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     MOVE 'Y'       @@MIN                                            AR1058442
     C                     ENDIF                                                           AR1058442
     C           @F,@@C    IFNE ' '                                                        AR1058442
     C           @F,@@C    ANDNE'0'                                                        AR1058442
     C           @F,@@C    ANDNE'-'                                                        AR1058442
     C                     Z-ADD1         IN83                                             AR1058442
     C                     SUB  1         @@C                                              AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ADD  1         @@C                                              AR1058442
     C                     ENDDO                                                           AR1058442
      *                                                                                    AR1058442
      * If first integer is a zero subtract 1 from @@C to provide                          AR1058442
      * correct first integer element of the array.                                        AR1058442
      *                                                                                    AR1058442
     C           @@C       IFNE 1                                                          AR1058442
     C                     SUB  1         @@C                                              AR1058442
     C           @F,@@C    IFNE '0'                                                        AR1058442
     C           @F,@@C    ORNE '-'                                                        AR1058442
     C                     ADD  1         @@C                                              AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C                     Z-ADD@@C       @@FEL   20                                       AR1058442
      *                                                                                    AR1058442
      ** Check the integer part of the number for valid characters.                        AR1058442
      *                                                                                    AR1058442
     C           @@C       DOWLE16                                                         AR1058442
     C           @F,@@C    ANDNEBNDCSP                                                     AR1058442
     C           @F,@@C    ANDNE' '                                                        AR1058442
      *                                                                                    AR1058442
      ** check for non numeric characters                                                  AR1058442
      ** If @@MTID = Y ,allow M or T - for millions and thousands                          AR1058442
      ** processing.                                                                       AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFGT '9'                                                        AR1058442
     C           @F,@@C    ORLT '0'                                                        AR1058442
     C           @F,@@C    IFEQ 'M'                                                        AR1058442
     C           @@MTID    ANDNE'Y'                                                        AR1058442
     C           @F,@@C    OREQ 'T'                                                        AR1058442
     C           @@MTID    ANDNE'Y'                                                        AR1058442
     C           @F,@@C    ORNE 'M'                                                        AR1058442
     C           @F,@@C    ANDNE'T'                                                        AR1058442
     C           @F,@@C    ANDNE'-'                                                        AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C                     ELSE                                                            AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFNE 'M'                                                        AR1058442
     C           @F,@@C    ANDNE'T'                                                        AR1058442
     C                     ADD  1         @@CINT                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** check number of integers is not greater than that required                        AR1058442
      *                                                                                    AR1058442
     C           @@CINT    IFGT @@IINT                                                     AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD2         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** multiply the output amount by 10 then add the number in                           AR1058442
      ** the input array element being processed.                                          AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFNE 'M'                                                        AR1058442
     C           @F,@@C    ANDNE'T'                                                        AR1058442
     C           @@AMT     MULT 10        @@AMT                                            AR1058442
     C                     MOVE @F,@@C    @@WK7                                            AR1058442
     C           @@AMT     ADD  @@WK7     @@AMT                                            AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** MT or TM etc not allowed.                                                         AR1058442
      *                                                                                    AR1058442
     C           @@MTF     IFEQ 'Y'                                                        AR1058442
     C           @F,@@C    IFEQ 'M'                                                        AR1058442
     C           @F,@@C    OREQ 'T'                                                        AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ 'M'                                                        AR1058442
     C                     MOVE 'Y'       @@MTF                                            AR1058442
     C           @@C       SUB  1         @@K                                              AR1058442
      * If M entered alone add 1 @@amt.                                                    AR1058442
     C           @@AMT     IFEQ 0                                                          AR1058442
     C           @F,@@K    ANDNE'0'                                                        AR1058442
     C                     Z-ADD1         @@AMT                                            AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@AMT     MULT 1000000   @@AMT                                            AR1058442
     C                     Z-ADD6         @@MIEA  20                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ 'T'                                                        AR1058442
     C                     MOVE 'Y'       @@MTF                                            AR1058442
     C           @@C       SUB  1         @@K                                              AR1058442
      * If T entered alone add 1 @@amt.                                                    AR1058442
     C           @@AMT     IFEQ 0                                                          AR1058442
     C           @F,@@K    ANDNE'0'                                                        AR1058442
     C                     Z-ADD1         @@AMT                                            AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@AMT     MULT 1000      @@AMT                                            AR1058442
     C                     Z-ADD3         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Two minus signs not allowed.                                                      AR1058442
      *                                                                                    AR1058442
     C           @@MIN     IFEQ 'Y'                                                        AR1058442
     C           @F,@@C    IFEQ '-'                                                        AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ '-'                                                        AR1058442
     C                     MOVE 'Y'       @@MIN                                            AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** increase array index                                                              AR1058442
      *                                                                                    AR1058442
     C                     ADD  1         @@C                                              AR1058442
     C                     ENDDO                                                           AR1058442
      *                                                                                    AR1058442
      ** Set up position of decimal point in input array                                   AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD@@C       @@PIDP                                           AR1058442
      *                                                                                    AR1058442
      ** If the character pointed to is a decimal point add 1 to the                       AR1058442
      ** index                                                                             AR1058442
      *                                                                                    AR1058442
     C           @@C       IFLE 16                                                         AR1058442
     C           @F,@@C    ANDEQBNDCSP                                                     AR1058442
     C                     ADD  1         @@C                                              AR1058442
     C                     Z-ADD1         IN82                                             AR1058442
     C                     ENDIF                                                           AR1058442
      * Set Maximum input elements allowed to the correct figure.                          AR1058442
     C           @@MTF     IFEQ 'Y'                                                        AR1058442
     C           @@C       SUB  @@FEL     @@FEL                                            AR1058442
     C           @@FEL     ADD  @@MIEA    @@MIEA                                           AR1058442
     C                     ELSE                                                            AR1058442
     C           @@C       SUB  @@FEL     @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Read through array checking to see if there is an M or T.                         AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD@@C       @@S     20                                       AR1058442
     C                     Z-ADD@@C       @@S1    20                                       AR1058442
     C           @@S       DOWLE16                                                         AR1058442
     C           @F,@@S    IFEQ 'M'                                                        AR1058442
     C           @F,@@S    OREQ 'T'                                                        AR1058442
     C                     MOVEA@F,@@S    @@MRTS                                           AR1058442
     C                     MOVE 'Y'       @@MRT                                            AR1058442
     C                     Z-ADD@@S       @@S2    20                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ADD  1         @@S                                              AR1058442
     C                     ENDDO                                                           AR1058442
      * Calculate the number of decimals after the decimal point.                          AR1058442
     C           @@S2      SUB  @@S1      @@S1                                             AR1058442
      * In thousands - only 3 decimal places allowed.                                      AR1058442
     C           @@MRTS    IFEQ 'T'                                                        AR1058442
     C           @@S1      IFGT 3                                                          AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      * In millions  - only 6 decimal places allowed.                                      AR1058442
     C           @@MRTS    IFEQ 'M'                                                        AR1058442
     C           @@S1      IFGT 6                                                          AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** now validate the decimal part of the number                                       AR1058442
      *                                                                                    AR1058442
     C           @@C       DOWLE16                                                         AR1058442
      *                                                                                    AR1058442
      ** if a blank is found set on the blank input indicator                              AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ ' '                                                        AR1058442
     C                     Z-ADD1         IN81                                             AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** if the figure is numeric, check that the number of decimal                        AR1058442
      ** places does not exceed that specified, and that no blanks                         AR1058442
      ** have been entered.                                                                AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFGE '0'                                                        AR1058442
     C           @F,@@C    ANDLE'9'                                                        AR1058442
     C           @F,@@C    OREQ 'T'                                                        AR1058442
     C           @@MTID    ANDEQ'Y'                                                        AR1058442
     C           @F,@@C    OREQ 'M'                                                        AR1058442
     C           @@MTID    ANDEQ'Y'                                                        AR1058442
      *                                                                                    AR1058442
     C           @@MRT     IFNE 'Y'                                                        AR1058442
     C                     ADD  1         @@CADP                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C           @@CADP    IFGT @@IDP                                                      AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD2         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           IN81      IFEQ 1                                                          AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** update output amount                                                              AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFNE 'M'                                                        AR1058442
     C           @F,@@C    ANDNE'T'                                                        AR1058442
     C           @@AMT     MULT 10        @@AMT                                            AR1058442
     C                     MOVE @F,@@C    @@WK7                                            AR1058442
     C                     ADD  @@WK7     @@AMT                                            AR1058442
     C                     ENDIF                                                           AR1058442
      * MT or TM etc not allowed.                                                          AR1058442
     C           @@MTF     IFEQ 'Y'                                                        AR1058442
     C           @F,@@C    IFEQ 'M'                                                        AR1058442
     C           @F,@@C    OREQ 'T'                                                        AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ 'M'                                                        AR1058442
     C                     MOVE 'Y'       @@MTF                                            AR1058442
      *                                                                                    AR1058442
      * Multiply @@amt by the correct factor and add the number                            AR1058442
      * digits to @@MIEA.                                                                  AR1058442
      *                                                                                    AR1058442
     C           @@S1      IFEQ 1                                                          AR1058442
     C           @@AMT     MULT 1000000   @@AMT                                            AR1058442
     C                     ADD  6         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 2                                                          AR1058442
     C           @@AMT     MULT 100000    @@AMT                                            AR1058442
     C                     ADD  5         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 3                                                          AR1058442
     C           @@AMT     MULT 10000     @@AMT                                            AR1058442
     C                     ADD  4         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 4                                                          AR1058442
     C           @@AMT     MULT 1000      @@AMT                                            AR1058442
     C                     ADD  3         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 5                                                          AR1058442
     C           @@AMT     MULT 100       @@AMT                                            AR1058442
     C                     ADD  2         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 6                                                          AR1058442
     C           @@AMT     MULT 10        @@AMT                                            AR1058442
     C                     ADD  1         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ 'T'                                                        AR1058442
     C                     MOVE 'Y'       @@MTF                                            AR1058442
      *                                                                                    AR1058442
      * Multiply @@amt by the correct factor and add the number                            AR1058442
      * digits to @@MIEA.                                                                  AR1058442
      *                                                                                    AR1058442
     C           @@S1      IFEQ 1                                                          AR1058442
     C           @@AMT     MULT 1000      @@AMT                                            AR1058442
     C                     ADD  3         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 2                                                          AR1058442
     C           @@AMT     MULT 100       @@AMT                                            AR1058442
     C                     ADD  2         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@S1      IFEQ 3                                                          AR1058442
     C           @@AMT     MULT 10        @@AMT                                            AR1058442
     C                     ADD  1         @@MIEA                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     ELSE                                                            AR1058442
      *                                                                                    AR1058442
      ** if the character is not numeric and not a blank and not a                         AR1058442
      ** '-' then it should be invalid.                                                    AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFNE ' '                                                        AR1058442
     C           @F,@@C    ANDNE'-'                                                        AR1058442
     C                     Z-ADD0         @@AMT                                            AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C           @F,@@C    IFEQ '-'                                                        AR1058442
      ** Error if reading a second '-' sign.                                               AR1058442
     C           @@MIN     IFEQ 'Y'                                                        AR1058442
     C                     Z-ADD1         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     MOVE 'Y'       @@MIN                                            AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** increase index                                                                    AR1058442
      *                                                                                    AR1058442
     C                     ADD  1         @@C                                              AR1058442
      *                                                                                    AR1058442
     C                     ENDDO                                                           AR1058442
      ** Check that the number of elements input does not exceed allowed                   AR1058442
     C           @@MIEA    ADD  @@IDP     @@MIEA                                           AR1058442
     C           @@MIEA    IFGT 14                                                         AR1058442
     C                     Z-ADD2         @@ERCD                                           AR1058442
     C                     GOTO EXIT                                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Correct the output number for any decimal places not input                        AR1058442
      ** in the alpha field.                                                               AR1058442
      *                                                                                    AR1058442
     C           @@IDP     SUB  @@CADP    @@E                                              AR1058442
      *                                                                                    AR1058442
      ** increase the index by one to get correct array entry                              AR1058442
      ** If @@IDP = 0 add 1 to @@E to prevent array index error.                           AR1058442
     C           @@MRT     IFEQ 'N'                                                        AR1058442
     C           @@IDP     OREQ 0                                                          AR1058442
     C                     ADD  1         @@E                                              AR1058442
     C                     ENDIF                                                           AR1058442
     C           @@AMT     MULT @H,@@E    @@AMT                                            AR1058442
      *                                                                                    AR1058442
     C           @@MRT     IFEQ 'Y'                                                        AR1058442
     C           @@IDP     ANDEQ0                                                          AR1058442
     C           @@AMT     DIV  10        @@AMT                                            AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** now format the output alpha field, first calculate where                          AR1058442
      ** the decimal point goes                                                            AR1058442
     C           16        SUB  @@IDP     @@PODP                                           AR1058442
     C           @@PODP    SUB  1         @@PIDP                                           AR1058442
     C*                                                                                    AR1058442
     C** if there are no decimal points set the position to 17                             AR1058442
     C           @@IDP     IFEQ 0                                                          AR1058442
     C                     Z-ADD17        @@PODP                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** Move the output number into the input array                                       AR1058442
      *                                                                                    AR1058442
     C                     MOVEA*BLANKS   @F                                               AR1058442
     C                     MOVE @@AMT     @@AMTA 15                                        AR1058442
     C                     MOVEA@@AMTA    @F                                               AR1058442
      *                                                                                    AR1058442
      ** Set up indexes                                                                    AR1058442
      *                                                                                    AR1058442
     C                     Z-ADD1         @@C                                              AR1058442
     C                     Z-ADD1         @@D                                              AR1058442
     C                     Z-ADD0         IN80    10                                       AR1058442
      *                                                                                    AR1058442
      ** Now fill up the output array                                                      AR1058442
      *                                                                                    AR1058442
     C           @@D       DOWLE16                                                         AR1058442
      *                                                                                    AR1058442
      ** insert decimal point if the position is found                                     AR1058442
      *                                                                                    AR1058442
     C           @@D       IFEQ @@PODP                                                     AR1058442
     C                     MOVE BNDCSP    @G,@@D                                           AR1058442
     C                     ADD  1         @@D                                              AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      ** insert the zero before the decimal point                                          AR1058442
      *                                                                                    AR1058442
     C           IN80      IFEQ 0                                                          AR1058442
     C           @@D       ANDEQ@@PIDP                                                     AR1058442
     C           @F,@@C    ANDEQ'0'                                                        AR1058442
     C                     Z-ADD1         IN80                                             AR1058442
     C                     MOVE '0'       @G,@@D                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C** blank leading zeros                                                               AR1058442
     C           IN80      IFEQ 0                                                          AR1058442
     C           @F,@@C    ANDEQ'0'                                                        AR1058442
     C                     MOVE ' '       @G,@@D                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C** move a normal character                                                           AR1058442
     C           @F,@@C    IFGE '1'                                                        AR1058442
     C           @F,@@C    ANDLE'9'                                                        AR1058442
     C                     MOVE @F,@@C    @G,@@D                                           AR1058442
     C                     Z-ADD1         IN80                                             AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C** remove the '-' sign prior to reinsertion in correct locaton.                      AR1058442
     C           @F,@@C    IFEQ '-'                                                        AR1058442
     C                     MOVE ' '       @G,@@D                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C** non blanked zero                                                                  AR1058442
     C           @F,@@C    IFEQ '0'                                                        AR1058442
     C           IN80      ANDEQ1                                                          AR1058442
     C                     MOVE '0'       @G,@@D                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C                     ADD  1         @@C                                              AR1058442
     C                     ADD  1         @@D                                              AR1058442
     C                     ENDDO                                                           AR1058442
     C*                                                                                    AR1058442
     C** reinsert '-' sign in rightmost available blank, if negative.                      AR1058442
     C           @@MIN     IFEQ 'Y'                                                        AR1058442
     C                     Z-SUB@@AMT     @@AMT                                            AR1058442
     C                     Z-ADD16        @@D                                              AR1058442
     C*                                                                                    AR1058442
     C           @@D       DOWGE1                                                          AR1058442
     C           @G,@@D    IFEQ ' '                                                        AR1058442
     C                     MOVE '-'       @G,@@D                                           AR1058442
     C                     Z-ADD1         @@D                                              AR1058442
     C                     ENDIF                                                           AR1058442
     C                     SUB  1         @@D                                              AR1058442
     C                     ENDDO                                                           AR1058442
     C*                                                                                    AR1058442
     C                     ENDIF                                                           AR1058442
     C*                                                                                    AR1058442
     C*                                                                                    AR1058442
     C** put output array into output amount                                               AR1058442
     C                     MOVEA@G        @@ALPH                                           AR1058442
     C*                                                                                    AR1058442
     C** align figure with zero decimal places.                                            AR1058442
     C           @@IDP     IFEQ 0                                                          AR1058442
     C                     MOVE *BLANKS   @@ALP1 17                                        AR1058442
     C                     MOVE @@ALPH    @@ALP1                                           AR1058442
     C                     MOVEL@@ALP1    @@ALPH                                           AR1058442
     C                     END                                                             AR1058442
      *                                                                                    AR1058442
      ** If an error was found, set the return code appropriately                          AR1058442
      *                                                                                    AR1058442
     C           EXIT      TAG                             *** Exit ***                    AR1058442
      *                                                                                    AR1058442
     C                     ENDSR                                                           AR1058442
      *****************************************************************                    AR1058442
      /EJECT                                                                               AR1058442
      *****************************************************************                    AR1058442
      *                                                               *                    AR1058442
      *       Title: Back Office Amount Editor                        *                    AR1058442
      *                                                               *                    AR1058442
      *       Subroutine ZA0920 accepts an amount field (13N) and     *                    AR1058442
      *       a field (1N) specifying no. of decimals and with this   *                    AR1058442
      *       converts the amount into an alphanumeric field (14A)    *                    AR1058442
      *       with the required decimal place.                        *                    AR1058442
      *                                                               *                    AR1058442
      *                                                               *                    AR1058442
      * Input:  @@AMTW Amount      Format(13N)                        *                    AR1058442
      *         @@QECN Decimal No. Format(1N)                         *                    AR1058442
      *                                                               *                    AR1058442
      * Output: @@AMTD Amount with Decimal format(14A)                *                    AR1058442
      *                                                               *                    AR1058442
      * Uses:   @@AMTW Amount field passed                            *                    AR1058442
      *         @@QECN No. of decimal field                           *                    AR1058442
      *         @@QECW Position on array @P for a decimal point      *                     AR1058442
      *         @@SIG  Position on array that cannot be blank         *                    AR1058442
      *         @@Z    Index for array @P                             *                    AR1058442
      *         @@Q    Index for array @Q                             *                    AR1058442
      *         @@SWT  Switch saying zero has been suppressed         *                    AR1058442
     C*         @@SWT1 Switch saying zero suppression over            *                    AR1058442
     C*                                                               *                    AR1058442
     C* Arrays:  @P Array used for decimal alignment                  *                    AR1058442
     C*          @Q Array used for storing amount passed to the SR    *                    AR1058442
     C*                                                               *                    AR1058442
     C*****************************************************************                    AR1058442
      *                                                                                    AR1058442
     C           ZA0920    BEGSR                                                           AR1058442
      *                                                                                    AR1058442
      * Initialization                                                                     AR1058442
      *                                                                                    AR1058442
     C                     MOVE '0'       @@SWT1  1                                        AR1058442
      *                                                                                    AR1058442
      * Finding where decimal position is                                                  AR1058442
      *                                                                                    AR1058442
     C           14        SUB  @@QECN    @@QECW  20                                       AR1058442
      *                                                                                    AR1058442
      * Finding out most significant position                                              AR1058442
      *                                                                                    AR1058442
     C           @@QECW    SUB  1         @@SIG   20                                       AR1058442
     C                     MOVEA*BLANKS   @P                                               AR1058442
     C                     Z-ADD1         @@Q     20                                       AR1058442
      *                                                                                    AR1058442
      * Check to see if no. of decimal places is zero. If zero                             AR1058442
      * then significant position is 14 and position 1 is blank                            AR1058442
      *                                                                                    AR1058442
     C           @@QECW    IFEQ 14                                                         AR1058442
     C                     Z-ADD14        @@SIG                                            AR1058442
     C                     Z-ADD2         @@Z     20                                       AR1058442
     C                     ELSE                                                            AR1058442
     C                     Z-ADD1         @@Z     20                                       AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      * Performing actual movement                                                         AR1058442
      *                                                                                    AR1058442
     C           @@Z       DOWLT15                                                         AR1058442
     C           @@Q       ANDLT14                                                         AR1058442
      *                                                                                    AR1058442
      * Switch for zero suppression                                                        AR1058442
      *                                                                                    AR1058442
     C                     MOVE '0'       @@SWT                                            AR1058442
      *                                                                                    AR1058442
      * If element of array @Q is zero and index @@Z for array @P                          AR1058442
      * is *LT sig. position and also *LT decimal position then zero                       AR1058442
      * can be suppressed and zero suppression switch is SETON.                            AR1058442
      * Display leading '_' sign if amount is negative.                                    AR1058442
      *                                                                                    AR1058442
     C           @@AMTW    IFGE 0                                                          AR1058442
     C           @Q,@@Q    IFEQ 0                                                          AR1058442
     C           @@SWT1    ANDEQ'0'                                                        AR1058442
     C           @@Z       ANDLT@@SIG                                                      AR1058442
     C           @@Z       ANDLT@@QECW                                                     AR1058442
     C                     MOVE *BLANK    @P,@@Z                                           AR1058442
     C                     MOVE '1'       @@SWT   1                                        AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ELSE                                                            AR1058442
     C           @Q,@@Q    IFEQ 0                                                          AR1058442
     C           @@SWT1    ANDEQ'0'                                                        AR1058442
     C           @@Z       ANDLT@@SIG                                                      AR1058442
     C           @@Z       ANDLT@@QECW                                                     AR1058442
     C           @@Z       SUB  1         @@Y     20                                       AR1058442
     C           @@Y       IFEQ 0                                                          AR1058442
     C                     MOVE '-'       @P,@@Z                                           AR1058442
     C                     ELSE                                                            AR1058442
     C                     MOVEA' -'      @P,@@Y                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C                     MOVE '1'       @@SWT                    1                       AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      * If index @@Z for array @P is equal to the decimal position                         AR1058442
      * and not equal to the length of the array @P(14) then move                          AR1058442
      * decimal position and increment @@Z by 1                                            AR1058442
      *                                                                                    AR1058442
     C           @@Z       IFEQ @@QECW                                                     AR1058442
     C           @@Z       ANDNE14                                                         AR1058442
     C                     MOVE BNDCSP    @P,@@Z                                           AR1058442
     C                     ADD  1         @@Z                                              AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      * If zero has not been suppressed then move element from array                       AR1058442
      * @Q to @P. Seton zero suppression switch over (@@SWT1)                              AR1058442
      *                                                                                    AR1058442
     C           @@AMTW    IFGE 0                                                          AR1058442
     C           @@Z       ORNE 14                                                         AR1058442
     C           @@SWT     IFEQ '0'                                                        AR1058442
     C                     MOVE @Q,@@Q    @P,@@Z                                           AR1058442
     C                     MOVE '1'       @@SWT1                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
      * If amount is negative, the last character needs high zone change                   AR1058442
      * from 'D' to 'F' prior to printing. (Leave original field unchanged).               AR1058442
      *                                                                                    AR1058442
     C                     ELSE                                                            AR1058442
     C           @@SWT     IFEQ '0'                                                        AR1058442
     C                     MOVE @Q,@@Q    POSQ    1                                        AR1058442
     C                     BITON'0123'    POSQ                                             AR1058442
     C                     MOVE POSQ      @P,@@Z                                           AR1058442
     C                     MOVE '1'       @@SWT1                                           AR1058442
     C                     ENDIF                                                           AR1058442
     C                     ENDIF                                                           AR1058442
      *                                                                                    AR1058442
     C                     ADD  1         @@Q                                              AR1058442
     C                     ADD  1         @@Z                                              AR1058442
      *                                                                                    AR1058442
     C                     ENDDO                                                           AR1058442
      *                                                                                    AR1058442
     C                     ENDSR                                                           AR1058442
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #C  - TERMINATES THE PROGRAM BY SETTING ON LR                 *
     C*                                                               *
     C* CALLED BY : MAINLINE                                          *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #END      BEGSR
     C*
     C                     MOVE '1'       *INLR
     C                     ROLBK                                          100317
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* INFSR - FILE ERROR PROCESSING                                 *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :    ZA0240                                             *
     C*                                                               *
     C*****************************************************************
     C*
     C           INFSR     BEGSR
     C*
     C           STATUS    IFEQ 01021
     C*
     C** CHAIN TO THE FILE
     C*
     C           DLSWPK    CHAINDLSWPRL1             65
     C           *IN65     IFEQ '0'
     C*
     C** CLEAR PROGRAM MESSAGE QUEUE
     C*
     C                     CALL 'ZA0250'
     C                     ROLBK
     C*
     C** SEND MESSAGE RECORD UPDATED BY ANOTHER WORKSTATION
     C*
     C                     MOVE '*DETC '  EXTTAG
     C                     ELSE
     C                     MOVE '*CANCL'  EXTTAG
     C                     DUMP
     C                     END
     C                     ELSE
     C                     MOVE '*CANCL'  EXTTAG
     C                     DUMP
     C                     END
     C*
     C                     ENDSREXTTAG
     C*                                                               *
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* *PSSR - PROGRAM ERROR PROCESSING                              *
     C*                                                               *
     C* CALLED BY : #UPDFL                                            *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
     C                     SETON                     U7U8LR
     C                     DUMP
     C                     CALL 'DBERRCTL'
     C                     END
     C*
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
** CPY@   **      OBJECT COPYRIGHT
(c) Finastra International Limited 2001
**   ZYDY - YEARS IN DAYS CUMULATIVE, FOUR YEAR SPAN
0366073110961461
**   ZMDY - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
000031059090120151181212243273304334365
**   ZMNM - MONTHS SHORT NAMES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
**   ZFMD  -  NUMBER OF DAYS IN THE MONTH
312831303130313130313031
** @YD  USED BY SR. ZDATE9 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZDATE9 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
** HEADING
SWAP RATES
** NARRATIVE
Maturity
** INT.CAL.MTH NAMES
ACTUAL/365
ACTUAL/360
30/360
ACTUAL/365 (IGN 29FEB)
ACTUAL/360 (IGN 29FEB)
ACTUAL/ACTUAL
Eurobond                                                                  CIR004
ACTUAL/365 (366 29FEB)                                                                        CIR013
** FREQUENCY NAMES
SEMI-ANNUAL
ANNUAL                                                                    100317
**   TABCAL/TABCBS - CALCULATION BASES.                                   100317
136500236000336000436500536000636600                                      100317
** array of powers of 10 from 0 to 8  @@H                                                  AR1058442
000000000000001
000000000000010
000000000000100
000000000001000
000000000010000
000000000100000
000000001000000
000000010000000
000000100000000
000001000000000
000010000000000
000100000000000
001000000000000
010000000000000
100000000000000
