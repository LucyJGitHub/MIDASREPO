     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas DL FRA Rework - Daily Deals Enq')
     F*****************************************************************
     F*                                                               *
     F*  Midas - FRA/IRS Module                                   *
     F*                                                               *
     F*  DL1940 - REWORK DETAILS FOR DAILY DEALS ENQUIRY              *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Prev Amend No. 053820             Date 28Apr94               *
      *                 S01157             Date 19/05/88              *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD046248 - Finastra Rebranding                               *
     F*  053820 - Increase work fields for average price calculation  *
     F*  S01157 - NEW PROGRAM WRITTEN FOR FRA/IRS                     *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*
     F/EJECT
     F* ID  F  C  H  L    FUNCTION OF INDICATORS
     F*****************************************************************
     F*                                                               *
     F* 01                PREVENT LOOPING WITHIN *PSSR                *
     F*                                                               *
     F*****************************************************************
     E*
     E                    CPY@    1   1 80
     E** COMPILE TIME ARRAY FOR COPYRIGHT STATEMENT
     E*
     I*********************
     I*@CPYRT******DS******
     I*********************
      ***DATA*STRUCTURE*FOR COMPILATION - COPYRIGHT INSERTION
     I*********************
     I*********************                   1  80 CPY@
     I*********************                   1  20 CPY@##
     I*********************
     I*
     IDBERR       DS                            256
     I*
     I* DATA STRUCTURE FOR SETTING UP LDA WITH PROG NAME
     I*
     I                                      171 180 DBPGM
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*  MAIN    -    Main controlling routine                        *
     C*                                                               *
     C*  CALLS        #A   -   Initial processing                     *
     C*               #B   -   Main processing                        *
     C*               #C   -   Final processing                       *
     C*                                                               *
     C*  CALLED BY         -                                          *
     C*                                                               *
     C*  FIELDS USED       -                                          *
     C*                                                               *
     C*****************************************************************
     C*
     C                     MOVEACPY@      BIS@   80
     C*
     C                     EXSR #A
     C*
     C                     EXSR #B
     C*
     C                     EXSR #C
     C*
     C*****************************************************************
     C*  SUBROUTINES USED                                             *
     C*                                                               *
     C*  01   #A    -    INITIAL PROCESSING                           *
     C*  02   #B    -    MAIN PROCESSING                              *
     C*  03   #C    -    FINAL PROCESSING                             *
     C*                                                               *
     C*  EXTERNAL PROGRAMS CALLED     -     NONE                      *
     C*                                                               *
     C*****************************************************************
     C*                                                               *
     C*  #A    -    INITIAL PROCESSING                                *
     C*                                                               *
     C*  CALLS      -                                                 *
     C*                                                               *
     C*  CALLED BY  -   MAIN CONTROLLING ROUTINE                      *
     C*                                                               *
     C*  FIELDS USED    @LDAPR   -   OLD AVERAGE PRICE                *
     C*                 @LDPOS   -   OLD NET POSITION                 *
     C*                 @LDPAL   -   OLD CLOSED PROFIT & LOSS         *
     C*                 @LDSIG   -   OLD NET POSITION SIGN            *
     C*                 @DEALA   -   DEAL AMOUNT                      *
     C*                 @DEALP   -   DEAL PRICE                       *
     C*                 @DEALS   -   DEAL SIGN                        *
     C*                 @TENOR   -   TENOR                            *
     C*                 @DYEAR   -   DAYS IN YEAR                     *
     C*                 @DECS    -   NUMBER OF DEC PLACES             *
     C*                 @NAPR    -   NEW AVERAGE PRICE                *
     C*                 @NPOS    -   NEW NET POSITION                 *
     C*                 @NPAL    -   NEW CLOSED PROFIT & LOSS         *
     C*                 @NSIG    -   NEW NET POSITION SIGN            *
     C*                 @DEC1    -   1 DEC PLACE CCY                  *
     C*                 @DEC2    -   2---  "  ---                     *
     C*                 @DEC3    -   3---  "  ---                     *
     C*                                                               *
     C*****************************************************************
     C*
     C           #A        BEGSR
     C*
     C**   RECEIVE PARAMETERS FROM CALLING PROGRAM
     C*
     C           *ENTRY    PLIST
     C                     PARM           @LDAPR 117
     C                     PARM           @LDPOS 130
     C                     PARM           @LDPAL 130
     C                     PARM           @LDSIG  10
     C                     PARM           @DEALA 130
     C                     PARM           @DEALP 117
     C                     PARM           @DEALS  10
     C                     PARM           @TENOR  50
     C                     PARM           @DYEAR  30
     C                     PARM           @DECS   10
     C*
     C**   RETURN PARAMETERS TO CALLING PROGRAM
     C*
     C                     PARM           @NAPR  117
     C                     PARM           @NPOS  130
     C                     PARM           @NPAL  130
     C                     PARM           @NSIG   10
     C*
     C*
     C*INIT AND DEFINE ALL TEMPORARY WORKING FIELDS PRIOR TO
     C*USAGE IN SUBROUTINE #B.
     C*
     C                     Z-ADD0         @NETX  153
     C                     Z-ADD0         @PALX  153
     C                     Z-ADD0         @AMTX  153
     C                     Z-ADD0         @DEC1  131
     C                     Z-ADD0         @DEC2  132
     C                     Z-ADD0         @DEC3  133
     C                     Z-ADD0         @SGPOS 153
     C                     Z-ADD0         @SGAMT 153
     C***********          Z-ADD0         @AMRAT 153                      053820
     C***********          Z-ADD0         @POSPR 153                      053820
     C***********          Z-ADD0         @TOT1  153                      053820
     C***********          Z-ADD0         @TOT2  153                      053820
     C                     Z-ADD0         @AMRAT 163                      053820
     C                     Z-ADD0         @POSPR 163                      053820
     C                     Z-ADD0         @TOT1  163                      053820
     C                     Z-ADD0         @TOT2  163                      053820
     C                     Z-ADD0         @RATSG 117
     C                     Z-ADD0         @AVESG 117
     C                     Z-ADD0         @TEMP1 117
     C                     Z-ADD0         @TEMP2 157
     C                     Z-ADD0         @DAY00  50
     C                     Z-ADD0         @DLAMT 153
     C                     Z-ADD0         @@NETP 153
     C                     Z-ADD0         @@PRLO 153
     C*
     C* CONVERT AMOUNTS INTO AMOUNT + DEC PLACES
     C*
     C* Align fields according to number of dec places for the ccy
     C*
     C           @DECS     IFEQ 0                          B1
     C                     Z-ADD@LDPOS    @NETX            *1
     C                     Z-ADD@LDPAL    @PALX            *1
     C                     Z-ADD@DEALA    @AMTX            *1
     C                     ELSE                            X1
     C*
     C           @DECS     IFEQ 1                          B*2
     C                     MOVE @LDPOS    @DEC1            **2
     C                     Z-ADD@DEC1     @NETX            **2
     C                     MOVE @LDPAL    @DEC1            **2
     C                     Z-ADD@DEC1     @PALX            **2
     C                     MOVE @DEALA    @DEC1            **2
     C                     Z-ADD@DEC1     @AMTX            **2
     C                     ELSE                            X*2
     C*
     C           @DECS     IFEQ 2                          B**3
     C                     MOVE @LDPOS    @DEC2             **3
     C                     Z-ADD@DEC2     @NETX             **3
     C                     MOVE @LDPAL    @DEC2             **3
     C                     Z-ADD@DEC2     @PALX             **3
     C                     MOVE @DEALA    @DEC2             **3
     C                     Z-ADD@DEC2     @AMTX             **3
     C                     ELSE                            X**3
     C*
     C           @DECS     IFEQ 3                          B***4
     C                     MOVE @LDPOS    @DEC3             ***4
     C                     Z-ADD@DEC3     @NETX             ***4
     C                     MOVE @LDPAL    @DEC3             ***4
     C                     Z-ADD@DEC3     @PALX             ***4
     C                     MOVE @DEALA    @DEC3             ***4
     C                     Z-ADD@DEC3     @AMTX             ***4
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C           #A9       ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #B    -    MAIN PROCESSING                                   *
     C*                                                               *
     C*  CALLS      -                                                 *
     C*                                                               *
     C*  CALLED BY  -   MAIN CONTROLLING ROUTINE                      *
     C*                                                               *
     C*  FIELDS USED    @NETX    -   ALIGNED NET POSN                 *
     C*                 @PALX    -   ALIGNED PROFIT & LOSS            *
     C*                 @AMTX    -   ALIGNED DEAL AMOUNT              *
     C*                 @SGPOS   -   FOR CALC OF NET POSN             *
     C*                 @SGAMT   -     -----    "    -----            *
     C*                 @AMRAT   -   FOR CALC OF AVE PRICE            *
     C*                 @POSPR   -     -----    "    -----            *
     C*                 @TOT2    -     -----    "    -----            *
     C*                 @RATSG   -   FOR CALC OF NEW P & L            *
     C*                 @AVESG   -     -----    "    -----            *
     C*                 @TEMP1   -     -----    "    -----            *
     C*                 @DAY00   -     -----    "    -----            *
     C*                 @TEMP2   -     -----    "    -----            *
     C*                 @DLAMT   -     -----    "    -----            *
     C*                 @@NETP   -   ALIGNED NEW NET POSN (15.3)      *
     C*                 @@PRLO   -   ALIGNED NEW PROF & LOSS (15.3)   *
     C*****************************************************************
     C*
     C**       TO UPDATE NET POSITION, AVERAGE PRICE AND CLOSED
     C**       PROFIT & LOSS FOR A DEAL
     C*
     C* New net position is calculated as:
     C* (old net pos X old net pos sign) + (deal amount X deal sign)
     C*
     C* New net position sign is calculated as:
     C*  If new net posn >= zero, then sign = '+1'
     C*  ELSE if new net posn < zero, then sign = '-1'
     C*
     C* New average price is calculated as:
     C* IF old net pos sign = deal sign, then new ave price is:
     C*   (deal amount X deal rate) + (old net pos X old ave price)
     C*   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     C*                  deal amount + old net pos
     C*
     C* ELSE
     C*
     C*IF Deal Amount < old net position, New ave price = old ave price
     C*IF Deal Amount > old net position, New ave price = Deal Price
     C*IF Deal Amount = old net position, New ave price = zero
     C*
     C* New closed profit & loss is calculated as:
     C* IF old net pos sign NOT = deal sign then,
     C*               (deal rate X deal sign)
     C*        +      (old ave price X old net pos sign)
     C*                 (      tenor         )
     C*        X        (~~~~~~~~~~~~~~~~~~~~)
     C*                 ( days in year X 100 )
     C*               (deal amount X -1)-----IF deal amt < old net pos
     C*        X    OR
     C*               (old net pos X -1)-----IF deal amt <= old net pos
     C*        +      old closed profit & loss
     C*
     C*  ELSE
     C*
     C* New closed profit & loss = Old closed profit & loss
     C*
     C* Finally, convert new net amounts into 13,0 field, depending on
     C* the dec places for the currency, and return to calling program.
     C*
     C           #B        BEGSR
     C*
     C**
     C**   CALCULATE NEW NET POSITION
     C**
     C           @NETX     MULT @LDSIG    @SGPOS
     C           @AMTX     MULT @DEALS    @SGAMT
     C           @SGPOS    ADD  @SGAMT    @@NETP
     C**
     C**   CALCULATE NEW NET POSITION SIGN
     C**
     C*
     C* Position sign is negative (-1)
     C*
     C           @@NETP    IFLT 0                          B1
     C                     Z-SUB1         @NSIG            *1
     C                     ELSE                            X1
     C*
     C* Position sign is positive (+1)
     C*
     C                     Z-ADD1         @NSIG            *1
     C                     END                             E1
     C**
     C**   CALCULATE NEW AVERAGE PRICE
     C**
     C*
     C* If Net Position Sign equal to Deal Sign,
     C*
     C           @LDSIG    IFEQ @DEALS                     B1
     C*
     C* Deal Amount mult Deal Rate, added to (Net Posn mult Ave Price)
     C*
     C           @AMTX     MULT @DEALP    @AMRAT           *1
     C           @NETX     MULT @LDAPR    @POSPR           *1
     C           @AMRAT    ADD  @POSPR    @TOT1            *1
     C*
     C* Add Deal Amount & Net Posn, div above total by this for Ave Pr.
     C*
     C           @AMTX     ADD  @NETX     @TOT2            *1
     C           @TOT1     DIV  @TOT2     @NAPR            *1
     C                     ELSE                            X1
     C*
     C* If Deal Amount LESS THAN Net Position, New Ave Pr = Old Ave Pr
     C*
     C           @AMTX     IFLT @NETX                      B*2
     C                     Z-ADD@LDAPR    @NAPR            **2
     C                     ELSE                            X*2
     C*
     C* If Deal Amount MORE THAN Net Position, New Ave Pr = Deal Pr
     C*
     C           @AMTX     IFGT @NETX                      B**3
     C                     Z-ADD@DEALP    @NAPR            ***3
     C                     ELSE                            X**3
     C*
     C* If Deal Amount EQUAL TO Net Position, New Ave Pr = Zero
     C*
     C           @AMTX     IFEQ @NETX                      B***4
     C                     Z-ADD0         @NAPR            ****4
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C**
     C**   CALCULATE NEW CLOSED PROFIT AND LOSS
     C**
     C*
     C* If old Net Position Sign not equal to Deal Sign,
     C*
     C           @LDSIG    IFNE @DEALS                     B1
     C*
     C*Deal Rate mult Deal Sign, plus (old Ave Price mult Net Pos Sign)
     C*
     C           @DEALP    MULT @DEALS    @RATSG           *1
     C           @LDAPR    MULT @LDSIG    @AVESG           *1
     C           @RATSG    ADD  @AVESG    @TEMP1           *1
     C*
     C* Mult Days in Year by 100, div Tenor by this & mult result by
     C* above total.
     C*
     C           @DYEAR    MULT 100       @DAY00           *1
     C           @TENOR    DIV  @DAY00    @TEMP2    H      *1
     C           @TEMP1    MULT @TEMP2    @TEMP2           *1
     C*
     C* If Deal Amount LESS THAN old Net Position
     C*
     C           @AMTX     IFLT @NETX                      B*2
     C*
     C* Mult Deal Amount by -1, mult result by above total & add old
     C* closed profit & loss, to calculate NEW PROFIT & LOSS
     C           @AMTX     MULT -1        @DLAMT           **2
     C           @TEMP2    MULT @DLAMT    @@PRLO           **2
     C                     ADD  @PALX     @@PRLO           **2
     C                     ELSE                            X*2
     C*
     C* If Deal Amount MORE THAN old Net Position, do same calculation,
     C* but use old Net Position instead of Deal Amount
     C*
     C           @NETX     MULT -1        @DLAMT           **2
     C           @TEMP2    MULT @DLAMT    @@PRLO           **2
     C                     ADD  @PALX     @@PRLO           **2
     C                     END                             E*2
     C*
     C                     ELSE                            X1
     C*
     C* Else if signs are equal, new P&L should equal old P&L
     C*
     C                     Z-ADD@PALX     @@PRLO           *1
     C                     END                             E1
     C*
     C           #B9       ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #C    -    FINAL PROCESSING                                  *
     C*                                                               *
     C*  CALLS      -                                                 *
     C*                                                               *
     C*  CALLED BY  -   MAIN CONTROLLING ROUTINE                      *
     C*                                                               *
     C*  FIELDS USED    @@NETP   -   ALIGNED NEW NET POSN             *
     C*                 @NPOS    -   NEW NET POSN (FOR RETURN)        *
     C*                 @@PRLO   -   ALIGNED NEW PROFIT & LOSS        *
     C*                 @NPAL    -   NEW PROFIT & LOSS (FOR RETURN)   *
     C*                 @DEC1    -   FOR CURRENCY WITH 1 DEC PLACE    *
     C*                 @DEC2    -   FOR CURRENCY WITH 2 DEC PLACES   *
     C*                 @DEC3    -   FOR CURRENCY WITH 3 DEC PLACES   *
     C*****************************************************************
     C*
     C* REALIGN NEW NET POSITION AND NEW PROFIT & LOSS FIELDS
     C*
     C* Finally, convert new net amounts into 13,0 field, depending on
     C* the dec places for the currency, and return to calling program.
     C*
     C           #C        BEGSR
     C*
     C           @DECS     IFEQ 0                          B1
     C                     Z-ADD@@NETP    @NPOS            *1
     C                     Z-ADD@@PRLO    @NPAL            *1
     C                     ELSE                            X1
     C*
     C           @DECS     IFEQ 1                          B*2
     C                     Z-ADD@@NETP    @DEC1            **2
     C                     MOVE @DEC1     @NPOS            **2
     C                     Z-ADD@@PRLO    @DEC1            **2
     C                     MOVE @DEC1     @NPAL            **2
     C                     ELSE                            X*2
     C*
     C           @DECS     IFEQ 2                          B**3
     C                     Z-ADD@@NETP    @DEC2            ***3
     C                     MOVE @DEC2     @NPOS            ***3
     C                     Z-ADD@@PRLO    @DEC2            ***3
     C                     MOVE @DEC2     @NPAL            ***3
     C                     ELSE                            X**3
     C*
     C           @DECS     IFEQ 3                          B***4
     C                     Z-ADD@@NETP    @DEC3            ****4
     C                     MOVE @DEC3     @NPOS            ****4
     C                     Z-ADD@@PRLO    @DEC3            ****4
     C                     MOVE @DEC3     @NPAL            ****4
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* IF NEW NET POSITION IS NEGATIVE THEN MAKE IT POSITIVE
     C*
     C           @NPOS     IFLT 0                          B1
     C                     Z-SUB@NPOS     @NPOS            *1
     C                     END                             E1
     C*
     C* RETURN TO CALLING PROGRAM
     C*
     C                     RETRN
     C*
     C           #C9       ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* *PSSR    - DATABASE ERROR SUBROUTINE                          *
     C*                                                               *
     C* CALLS    -                                                    *
     C*                                                               *
     C* CALLED IF ANY PROGRAM OR FILE ERRORS                          *
     C*                                                               *
     C* FLDS USED                                                     *
     C*            DBPGM    -  HOLDS PGM NAME IN LDA                  *
     C*            @LDA     -  VARIABLE TO SET UP LDA WITH DB ERRORS  *
     C*            DBERR    -  DS TO HOLD DB ERROR                    *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C*    MOVE PROGRAM NAME INTO LDA FIELD
     C*    CHECK INDICATOR *IN01 ON FIRST PASS THROUGH *PSSR TO PREVENT
     C*    LOOPING WITHIN *PSSR
     C*
     C           *IN01     IFEQ '0'                        B*1
     C                     MOVE '1'       *IN01             *1
     C*
     C                     MOVEL'DL1940'  DBPGM             *1
     C*
     C           *NAMVAR   DEFN LDA       @LDA  256         *1
     C           *LOCK     IN   @LDA                        *1
     C                     MOVELDBERR     @LDA              *1
     C                     OUT  @LDA                        *1
     C*
     C** TURN ON ERROR SWITCHES, SET ON LR, DUMP AND RETURN
     C*
     C                     MOVE '1'       *INU7             *1
     C                     MOVE '1'       *INU8             *1
     C                     MOVE '1'       *INLR             *1
     C                     DUMP                             *1
     C*
     C                     END                             E*1
     C*
     C                     RETRN
     C*
     C                     ENDSR
     C*****************************************************************
**  CPY@  **      OBJECT COPYRIGHT
(c) Finastra International Limited 2001
