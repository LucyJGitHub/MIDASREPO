      *****************************************************************
     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas DL Portuguese Forward Rates')                    *
      *****************************************************************
      *                                                               *
      *  Midas - Portuguese FX Revaluations                           *
      *                                                               *
      *  DL8604 - Calculate Forward Rate                              *
      *                                                               *
      *  Parameters: - - P0RTN  --   7    -- Return code;             *
      *                  P0VIN  -- 256    -- Input value;             *
      *                  P0VOUT -- 256    -- Output value;            *
      *                                                               *
      *  (c) Finastra International Limited 2021                      *
      *                                                               *
      *                                                               *
      *  Last Amend No. CDL086  *CREATE    Date 04May21               *
      *  Prev Amend No. XXXXXX             Date DDMMMYY               *
      *                                                               *
      *---------------------------------------------------------------*
      *  CDL086 - Portuguese FX Revaluation Extensions                *
      *           Upgrade to FM 2.1 2021.A                            *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  Indicator usage                                              *
      *  иииииииииииииии                                              *
      *  90 -- Error detected.                                        *
      *                                                               *
      *                                                               *
      *  Copied in routines:                                          *
      *                                                               *
      *  SRINIT -- Initialisation subroutine                          *
      *  SRCALC -- Calculate forward rate                             *
      *  *PSSR  -- Program error routine.                             *
      *  SRFILE -- File error routine.                                *
      *  SRERR  -- Error reporting routine.                           *
      *                                                               *
      *****************************************************************
      *
     FFDINTRLLIF  E           K        DISK
     F                                              KINFSR SRFILE
      * Forward interest rates file
      *
     F/EJECT
      *-------------------------------------------------------------------
      * Error processing array:
     E/COPY CGCPYSRC,SRERRE
      *
     E                    CPY@    1   1 80               Copyright Finastra
      *
      **  Array of Currencies accessed by program
     E                    ##CY      100  3
      *
      *-------------------------------------------------------------------
     IFDINTRP0
     I              HWTMESTMP                       #STMP
     I/COPY CGCPYSRC,SRERRI
      *
      * Error processing data structures
      *...................................................................
     ISDBANK    E DSSDBANKPD
      **  External DS for Bank details
      *
     ISDGELR    E DSSDGELRPD
      **  External DS for General Ledger details
      *
     ISDCURR    E DSSDCURRPD                101
      **  External DS for currency details
      *
     IDSFDY     E DSDSFDY
      **  First DS for access programs, short data structure
      *
     IDSSDY     E DSDSSDY
      **  Second DS for access programs, long data structure
      *
      *...................................................................
      * Incoming data structure
     IP0VIN       DS                            256
      * Other currency
     I                                        1   3 I#OCCY
      * Maturity date
     I                                        4   80I#MDAT
      * Override base currency
     I                                        9  11 I#BCCY
      * Outgoing data structure
     IP0VOUT      DS                            256
      * Forward rate
     I                                        1  158O#FRAT
      * Incoming data structure for DL8604
     IP1VIN       DS                            256
      * Spot rate
     I                                        1  158I1SPOT
      * Base currency interest rate as a percentage
     I                                       16  308I1BINT
      * Base currency - interest calculation days
     I                                       31  330I1BDAY
      * Other currency interest rate as a percentage
     I                                       34  488I1OINT
      * Other currency - interest calculation days
     I                                       49  510I1ODAY
      * Number of days to maturity
     I                                       52  570I1DMAT
      * Outgoing data structure for DL8604
     IP1VOUT      DS                            256
      * Forward rate
     I                                        1  158O1FRAT
      *...................................................................
      ********************************************************************
     I/EJECT
      ********************************************************************
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P0VIN
     C                     PARM           P0VOUT
      *
      * Add subroutine name to stack:
     C                     Z-ADD1         Q
     C                     MOVEL'@Main@'  @STK,Q
      *
      * Initialise:
      *
     C           ##FRST    IFEQ ' '
     C           I#BCCY    ORNE BJCYCD
     C                     EXSR SRINIT
     C                     ENDIF
      *
      * Get currency data
      *
     C                     EXSR SRCCY
      *
      * Calculate forward rate
      *
     C                     EXSR SRCALC
      *
     C           EXMAIN    TAG                             <<<=== EXMAIN
      *
      * Unwind subroutine stack:
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     RETRN
     C/EJECT
      ********************************************************************
      **  Subroutine SRCALC Calculate forward rate                      **
      ********************************************************************
     C           SRCALC    BEGSR                           * S R C A L C *
      *
      * Add subroutine name to stack:
     C                     ADD  1         Q       50
     C                     MOVEL'SRCALC'  @STK,Q
      *
      * Spot rate
     C                     Z-ADDW#SPOT    I1SPOT
      *
      * Adjust rate if base currency are different
      *
      * if base currency no scaling
     C           I#BCCY    IFNE B#BCCY
      *
      * If currency quoted M
      *
     C           A6MDIN    IFEQ 'M'
     C           B#MDIN    IFEQ 'M'
      *
      * reduce rounding errors
      *
     C           B#SPRT    IFGT A6SPRT
     C           B#SPRT    DIV  A6SPRT    ##SPRT
     C           1         DIV  ##SPRT    ##SPRT
     C                     ELSE
     C           A6SPRT    DIV  B#SPRT    ##SPRT
     C                     ENDIF
     C                     ENDIF
     C           B#MDIN    IFEQ 'D'
     C           B#SPRT    MULT A6SPRT    ##SPRT
     C                     ENDIF
     C                     ENDIF
      *
      * If currency quoted D
      *
     C           A6MDIN    IFEQ 'D'
     C           B#MDIN    IFEQ 'D'
      *
      * reduce rounding errors
      *
     C           B#SPRT    IFGT A6SPRT
     C           B#SPRT    DIV  A6SPRT    ##SPRT
     C           1         DIV  ##SPRT    ##SPRT
     C                     ELSE
     C           A6SPRT    DIV  B#SPRT    ##SPRT
     C                     ENDIF
     C                     ENDIF
     C           B#MDIN    IFEQ 'M'
     C           B#SPRT    MULT A6SPRT    ##SPRT
     C                     ENDIF
     C                     ENDIF
     C                     ELSE
     C                     Z-ADDA6SPRT    ##SPRT
     C                     ENDIF
      *
     C                     Z-ADD##SPRT    I1SPOT
     C           A6MDIN    IFEQ 'M'
      * Base currency interest rate as a percentage
     C                     Z-ADDW#BINT    I1BINT
      * Base currency - interest calculation days
     C                     Z-ADDW#BDAY    I1BDAY
      * Other currency interest rate as a percentage
     C                     Z-ADDW#OINT    I1OINT
      * Other currency - interest calculation days
     C                     Z-ADDW#ODAY    I1ODAY
     C                     ELSE
      * Base currency interest rate as a percentage
     C                     Z-ADDW#BINT    I1OINT
      * Base currency - interest calculation days
     C                     Z-ADDW#BDAY    I1ODAY
      * Other currency interest rate as a percentage
     C                     Z-ADDW#OINT    I1BINT
      * Other currency - interest calculation days
     C                     Z-ADDW#ODAY    I1BDAY
     C                     ENDIF
      * Number of days to maturity
     C                     Z-ADDW#DMAT    I1DMAT
      * Call forward calculation program
      *
     C                     CALL 'DL8603'
     C                     PARM           P1RTN   7
     C                     PARM           P1VIN
     C                     PARM           P1VOUT
      *
      ** Database error
      *
     C           P1RTN     IFNE *BLANK
     C                     MOVEL'DL8604'  W0FILE           ***************
     C                     MOVEL'*CALL'   W0KEY            * DB ERROR  1 *
     C                     Z-ADD1         W0ERNB           ***************
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Forward rate
     C                     Z-ADDO1FRAT    O#FRAT
      *
     C           EXCALC    TAG                             <<<=== EXCALC
      *
      * Unwind subroutine stack:
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      ********************************************************************
      **  Subroutine SRCCY Get currency information                     **
      ********************************************************************
     C           SRCCY     BEGSR                           *  S R C C Y  *
      *
      * Add subroutine name to stack:
     C                     ADD  1         Q       50
     C                     MOVEL'SRCCY '  @STK,Q
      *
      * Define and clear error return code:
     C                     MOVE *BLANKS   P0RTN
      *
      * Get spot rate for currency passed
     C                     MOVELI#OCCY    ##CCY
     C                     EXSR SRDCDT
      *
      * Spot rate
     C           *LIKE     DEFN I1SPOT    W#SPOT
     C                     Z-ADDA6SPRT    W#SPOT
      * Base currency - interest calculation days
     C           *LIKE     DEFN I1BDAY    W#BDAY
      * Other currency - interest calculation days
     C           *LIKE     DEFN I1ODAY    W#ODAY
     C                     SELEC
     C           A6DICB    WHEQ '1'
     C                     Z-ADD365       W#ODAY
     C           A6DICB    WHEQ '2'
     C                     Z-ADD360       W#ODAY
     C                     OTHER
     C                     Z-ADD360       W#ODAY
     C                     ENDSL
      * Number of days to maturity
     C           *LIKE     DEFN I1DMAT    W#DMAT
     C           I#MDAT    SUB  BJRDNB    W#DMAT
     C           W#DMAT    IFLT 0
     C                     MOVEL'W#DMAT  'W0FILE           ***************
     C                     MOVEL'*ZERO'   W0KEY            * DB ERROR  1 *
     C                     Z-ADD2         W0ERNB           ***************
     C                     MOVEL'MEM5001' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      * Other currency interest rate as a percentage
     C           *LIKE     DEFN I1OINT    W#OINT
     C                     Z-ADD0         W#OINT
      *
      * If an in currency use Euro rates
     C           A6INCY    IFNE 'Y'
     C                     MOVELI#OCCY    ##CCY
     C                     ELSE
     C                     MOVELBKEURO    ##CCY
     C                     ENDIF
     C                     EXSR SRFWRT
     C                     Z-ADDW#FWRT    W#OINT
      * Base currency interest rate as a percentage
     C           *LIKE     DEFN I1BINT    W#BINT
     C                     Z-ADD0         W#BINT
     C                     MOVELW#BCCY    ##CCY
     C                     EXSR SRFWRT
     C                     Z-ADDW#FWRT    W#BINT
      *
      * Clear the output values and the length:
     C                     CLEARP0VOUT
      *
     C           EXCCY     TAG                             <<<=== EXCCY
      *
      * Unwind subroutine stack:
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      ********************************************************************
      **  Subroutine SRFWRT get forward rate                            **
      ********************************************************************
     C           SRFWRT    BEGSR                           * S R F W R T *
      *
      * Add subroutine name to stack:
     C                     ADD  1         Q       50
     C                     MOVEL'SRFWRT'  @STK,Q
      *
      * Define forward rate
     C           *LIKE     DEFN I1BINT    W#FWRT
      *
      * Define forward rate key
     C           KFWRT     KLIST
     C                     KFLD           HWCCY
     C                     KFLD           HWTPRD
     C                     KFLD           HWPRD
      *
      * Set up key
     C                     MOVEL##CCY     HWCCY
     C                     SELEC
     C           W#DMAT    WHEQ 1
     C                     MOVEL'D'       HWTPRD
     C                     Z-ADD1         HWPRD
     C           W#DMAT    WHEQ 2
     C                     MOVEL'D'       HWTPRD
     C                     Z-ADD2         HWPRD
     C           W#DMAT    WHLE 6
     C                     MOVEL'D'       HWTPRD
     C                     Z-ADD3         HWPRD
     C           W#DMAT    WHLE 13
     C                     MOVEL'W'       HWTPRD
     C                     Z-ADD1         HWPRD
     C           W#DMAT    WHLE 20
     C                     MOVEL'W'       HWTPRD
     C                     Z-ADD2         HWPRD
     C           W#DMAT    WHLE 29
     C                     MOVEL'W'       HWTPRD
     C                     Z-ADD3         HWPRD
     C           W#DMAT    WHLE 59
     C                     MOVEL'M'       HWTPRD
     C                     Z-ADD1         HWPRD
     C           W#DMAT    WHLE 89
     C                     MOVEL'M'       HWTPRD
     C                     Z-ADD2         HWPRD
     C           W#DMAT    WHLE 179
     C                     MOVEL'M'       HWTPRD
     C                     Z-ADD3         HWPRD
     C           W#DMAT    WHLE 269
     C                     MOVEL'M'       HWTPRD
     C                     Z-ADD6         HWPRD
     C           W#DMAT    WHLE 359
     C                     MOVEL'M'       HWTPRD
     C                     Z-ADD9         HWPRD
     C           W#DMAT    WHLE 719
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD1         HWPRD
     C           W#DMAT    WHLE 1079
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD2         HWPRD
     C           W#DMAT    WHLE 1439
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD3         HWPRD
     C           W#DMAT    WHLE 1799
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD4         HWPRD
     C           W#DMAT    WHLE 2159
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD5         HWPRD
     C           W#DMAT    WHLE 2519
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD6         HWPRD
     C           W#DMAT    WHLE 2879
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD7         HWPRD
     C           W#DMAT    WHLE 3239
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD8         HWPRD
     C           W#DMAT    WHLE 3599
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD9         HWPRD
     C                     OTHER
     C                     MOVEL'Y'       HWTPRD
     C                     Z-ADD10        HWPRD
     C                     ENDSL
      *
      * Get rate
     C           KFWRT     CHAINFDINTRLL             90
     C           *IN90     IFEQ *ON
     C           HWDLTF    ORNE *BLANKS
      *
      * Default Spot rate
     C                     Z-ADDW#SPOT    O#FRAT
     C                     RETRN
     C                     ENDIF
      *
      * Set up rate
      *
     C           HWLDRT    ADD  HWBRRT    W#FWRT
     C                     DIV  2         W#FWRT    H
      *
     C           EXFWRT    TAG                             <<<=== EXINIT
      *
      * Unwind subroutine stack:
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      ********************************************************************
      **  Subroutine SRINIT provides initialisation.                    **
      ********************************************************************
     C           SRINIT    BEGSR                           * S R I N I T *
      *
      * Add subroutine name to stack:
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      * Define and clear error return code:
     C                     MOVE *BLANKS   P0RTN
      *
      * Move the copyright parameter:
     C                     MOVEACPY@      MKI@   80
      *
      * Clear the output values and the length:
     C                     CLEARP0VOUT
      *
      ** Call access program for Bank details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANKS   ##RTCD  7
     C                     PARM '*FIRST  '##OPTN  7
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C           ##RTCD    IFNE *BLANK
      *
      ** Database error
      *
     C                     MOVEL'AOBANKR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD2         W0ERNB           * DB ERROR  2 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      ** Call access program for General Ledger Details
      *
     C                     CALL 'AOGELRR0'
     C                     PARM *BLANKS   ##RTCD
     C                     PARM '*FIRST  '##OPTN
     C           SDGELR    PARM SDGELR    DSFDY
      *
     C           ##RTCD    IFNE *BLANK
      *
      ** Database error
      *
     C                     MOVEL'AOGELRR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD3         W0ERNB           * DB ERROR  3 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      * Set initialisation complete
      *
     C                     MOVEL'Y'       ##FRST  1
      *
      ** Base Currency
      *
      *
      * If override base currency is not blank use
      *
     C           I#BCCY    IFNE *BLANKS
     C                     MOVELBJCYCD    B#BCCY
     C                     MOVELI#BCCY    BJCYCD
     C                     ENDIF
      *
     C                     MOVELBJCYCD    ##CCY   3
     C                     EXSR SRDCDT
     C                     MOVELBJCYCD    W#BCCY  3
      *
      * Save base currency values
      *
     C           *LIKE     DEFN A6CYCD    B#BCCY
     C           *LIKE     DEFN A6SPRT    B#SPRT
     C           *LIKE     DEFN A6SPRT    ##SPRT
     C           *LIKE     DEFN A6MDIN    B#MDIN
     C           *LIKE     DEFN A6INCY    B#INCY
     C                     Z-ADDA6SPRT    B#SPRT
     C                     MOVELA6MDIN    B#MDIN
     C                     MOVELA6INCY    B#INCY
      *
      ** Check if base currency is an In currency
      *
     C           A6INCY    IFEQ 'Y'
      *
      ** Get Euro currency details
      *
     C                     MOVELBKEURO    ##CCY
     C                     MOVELBKEURO    W#BCCY
     C                     EXSR SRDCDT
      *
     C                     ENDIF
      *
      * Set base currency interest days
      *
     C                     SELEC
     C           A6DICB    WHEQ '1'
     C                     Z-ADD365       W#BDAY
     C           A6DICB    WHEQ '2'
     C                     Z-ADD360       W#BDAY
     C                     OTHER
     C                     Z-ADD360       W#BDAY
     C                     ENDSL
      *
     C           EXINIT    TAG                             <<<=== EXINIT
      *
      * Unwind subroutine stack:
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      ********************************************************************
      **  Subroutine SRDCDT determine currency details.                 **
      ********************************************************************
     C           SRDCDT    BEGSR                           * S R D C D T *
      *
      **  Set up subroutine stack name
     C                     ADD  1         Q
     C                     MOVEL'SRDCDT'  @STK,Q
      *
      *................................................................
      *
      **  Access array of Currency Details already loaded
     C                     Z-ADD1         C       30
     C           ##CCY     LOKUP##CY,C                   99
      *
      **  If no match is found determine the next free space in the
      **  loaded currency array.
     C           *IN99     IFEQ *OFF
     C                     Z-ADD1         C
     C           *BLANK    LOKUP##CY,C                   99
      *
      **  If no space is left, set the Currency Data data structure to
      **  the 101st occurrence so that when the new details are
      **  retrieved no existing details are overwritten.
     C           *IN99     IFEQ *OFF
     C           101       OCUR SDCURR
      *
      **  If a space is found, set up the new currency into the array
      **  and position the Currency Data data structure on the
      **  occurrence matching the array index.
     C                     ELSE
     C                     MOVE ##CCY     ##CY,C
     C           C         OCUR SDCURR
     C                     ENDIF
      *
      **  Retrieve the currency details.
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   ##RTCD           B:Return Cd
     C                     PARM '*KEY'    ##OPTN           I:Option
     C                     PARM ##CCY     ##CCYP  3        I:Currency Code
     C           SDCURR    PARM *BLANK    DSSDY            O:Format
      *
      **  Database Error
     C           ##RTCD    IFNE *BLANK
     C                     MOVEL'SDCURRPD'W0FILE
     C                     MOVEL##CCY     W0KEY            ***************
     C                     Z-ADD17        W0ERNB           * DB ERROR 17 *
     C                     MOVEL'MEM5004' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      **  If the currency has been retrieved earlier, position the
      **  Currency Data data structure on the relevant occurrence.
     C                     ELSE
     C           C         OCUR SDCURR
     C                     ENDIF
      *
     C           EXDCDT    TAG
      *
      **  Unwind subroutine stack name
     C                     MOVE *BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     ENDSR
     C/EJECT
      ********************************************************************
      ** Subroutine *PSSR handles program errors.                       **
      ********************************************************************
      *
     C/COPY CGCPYSRC,SRERRPSSR
      *
     C/EJECT
     C********************************************************************
      * File and Program Error Processing
      *
     C/COPY CGCPYSRC,SRERRC
      *
      ********************************************************************
** CPY@
(c) Finastra International Limited 2021
