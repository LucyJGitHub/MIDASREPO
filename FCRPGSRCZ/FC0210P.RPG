     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FC Report periodic requests')
      *****************************************************************
      *                                                               *
      *  Midas - Report Control Facility Module                       *
      *                                                               *
      *  FC0210P - Report Periodic Requests.                          *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  LAST AMEND NO. S01486           DATE 03JUN94                 *
      *  PREV AMEND NO. 056650           DATE 17FEB94                 *
      *                 S01407           DATE 26JAN93                 *
      *                 E25978           DATE 24OCT91                 *
      *                 LN1190           DATE 29APR91                 *
      *                 LN1086           DATE 20DEC90                 *
      *                 LN1061           DATE 04DEC90                 *
      *                 LN0510           DATE 22AUG90                 *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  S01486 - Private Banking Upgrade to Rel 10.                  *
      *           Add Account Officer and Department Level (RCF).     *
      *  056650 - REINSTATE VALUE IN RETURN CODE IF DATABASE ERROR    *
      *           INSERT IN THE H-SPECS : DEBUG= '1' TO ALLOW DUMP    *
      *  S01407 - SWITCHABILITY ENHANCEMENTS                          *
      *  E25978 - AVOID PRINTING 'NO DETAILS' TWICE                   *
      *  LN1190 - REMOVE 'USR' MESSAGES AND REPLACE WITH 'RCF'        *
      *           MESSAGES.                                           *
      *  LN1086 - RECOMPILE FOR CHANGES TO PRINT FILE - PRINT 'NO     *
      *           DETAILS' FOR NULL PROCESSING                        *
      *  LN1061 - PASS CORRECT VALUE IN WORK FLAG PARAMETER TO        *
      *           SDC540P. CHANGE 'I' IN @CN,16 TO 'N'.               *
      *  LN0990 - CORRECT FILE NAME IN CHAIN TO SDFCTLL1              *
      *  LN0510 - REMOVE '#' UNDERLINES AND REPLACE WITH '-'          *
      *           UNDERLINES; STANDARDISE CAPITALISATION;             *
      *           AVOID ABBREVIATION                                  *
      *                                                               *
      *****************************************************************
      *  C R E A T I O N     P A R A M E T E R S                      *
      *                                                               *
      *                                                               *
      *****************************************************************
     F*             FUNCTION OF INDICATORS
     F*
     F*  99         Successful look up of array - UARRAY
     F*
     F********************************************************************
      **
      **
      **
      **
      **
     F********************************************************************
     F*             DESCRIPTION OF SUBROUTINES
     F*
     F*  DBERR      DATABASE ERROR
     F*  INIT       INITIAL PROCESSING
     F*  *PSSR      SYSTEM RECOVERY
     F********************************************************************
      **
      * Narrative Report Array Txt (53)
      **
     F*Report Periodic Requests Initialise Program F-Spec
     F/COPY WNCPYSRC,FC0210PFPG
     FFCPREQL1IF  E           K        DISK
      * RTV: Periodic Requests         Retrieval index
      *
     F***********FCREPTL1IF  E           K        DISK                    S01407
     FFCREPTJ0IF  E           K        DISK                               S01407
      * RTV: Report Descriptions       Retrieval index
      *
     FSDFCTLL1IF  E           K        DISK
      * RTV: Standing Data Controls    Retrieval index
      *
     FSDFCTLL0UF  E           K        DISK
      * UPD: Standing Data Controls    Update index
      *
     FFC0210PMO   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Report Periodic Requests  Print file
      *
     E                    CPY@    1   1 80
     E*
     E                    UAR        53  1
     E                    ULN        53  1
     E                    UARRAY  1   2 26
     E*Report Periodic Requests Initialise Program E-Spec
     E/COPY WNCPYSRC,FC0210PEPG
     E************        @CN     1  20 25               Long constants.  S01486
     E                    @CN     1  24 25               Long constants.  S01486
     I*
     I*
     I*Report Periodic Requests Initialise Program I-Spec
     I/COPY WNCPYSRC,FC0210PIPG
      /EJECT
      * Data structures:-
     IPGMDS     ESDSY2PGDSP
      * Program data structure.
     IJBDTTM      DS
      * Job date/time.
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure.
      *
     IUUFDY     E DSDSFDY
     I*
     I* 200 BYTE DATA STRUCTURE FOR INCOMING DATA ROM ACCESS PGM
     I*
     ID@BANK    E DSSDBANKPD
     I*
     I* BANK DETAILS DATA STRUCTURE FOR ASSIGNING DATA FROM ACCESS PGM
     I*
     IRUNDAT      DS
     I                                        1   7 RUNA
     I                                    P   8  100RUND
     I                                       11  11 SSF
     I                                       12  12 DATF
     I                                       13  13 MBIN
     I*                                                                   S01407
     ILDA         DS                            256                       S01407
     I*                                                                   S01407
     I** LOCAL DATA AREA FOR DATABASE ERROR REPORTING                     S01407
     I*                                                                   S01407
     I                                      134 141 DBFILE                S01407
     I                                      142 170 DBKEY                 S01407
     I                                      171 180 DBPGM                 S01407
     I                                      181 1830DBASE                 S01407
      /EJECT
      * Parameter declarations.
     IP1PARM      DS
      * I:    Audit Report Program Mode
     I                                        1   1 P1NEST
     IP2PARM      DS
      * I:    Sequence Number
     I                                        1   5 P2RQSQ
     IP3PARM      DS
      * I:    Level
     I                                        1   1 P3LVL
     IP4PARM      DS
      * I:    Entity
     I                                        1   3 P4ETTY
      /EJECT
      *****************************************************************
     C           *ENTRY    PLIST                           Entry parameter
     C                     PARM           P0RTN   7        Return code
     C           P1NEST    PARM           WP0001  1        Audit Report Pr
     C           P2RQSQ    PARM           WP0002  5        Sequence Number
     C           P3LVL     PARM           WP0003  1        Level
     C           P4ETTY    PARM           WP0004  3        Entity
      *****************************************************************
      * Initialise
     C                     EXSR ZZINIT
      *
      * Clear overflow indicator.
     C                     SETOF                     97
      * Establish starting position.
     C           *LOVAL    SETLL@D9REJJ                    *
      * Read first record with user selection.
     C                     EXSR GARDRC
      * Print null report headings.
     C           W0EOF     IFEQ '1'
     C                     MOVE '1'       *IN80                           E25978
     C                     WRITE$PAGHDR
      * USER: Null report processing
      * 00/copy member XX0210PNRP - Periodic Requests  *
     C*Report Periodic Requests Null Report Processing
     C/COPY WNCPYSRC,FC0210PNRP
     C                     WRITE$ENDRPT
     C                     ELSE
      * Request all headings.
     C                     MOVEL'Y'       L0      1        Page headings
     C                     MOVEL'Y'       L1      1        Report name
      * Initialise final totals.
     C                     Z-ADD*ZERO     $TAPNB           No of Calculate
      * Print report body.
     C           W0EOF     DOWEQ'0'
      * Print headings.
     C                     EXSR BAPRHD
      * Print report detail line.
     C                     EXSR CAPRDT
      * Hold current values.
     C           *LIKE     DEFN D9RNAM    WZRNAM           Report name
     C                     MOVELD9RNAM    WZRNAM
      * Read next record with user selection.
     C                     EXSR GARDRC
      * Determine level changes.
     C                     EXSR DALVCH
      * Print totals.
     C                     EXSR EAPRTT
      * Process necessary heading requests
     C                     EXSR FASGHD
     C                     END
     C                     WRITE$ENDRPT
     C                     END
      * Exit program.
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *****************************************************************
      /EJECT
     CSR         BAPRHD    BEGSR
      *================================================================
      * Print report Headers.
      *================================================================
     C           L0        IFEQ 'Y'
     C                     WRITE$PAGHDR
     C                     END
      *
     C           L1        IFNE *BLANK
      * User: Process Report name headings.
      * 00/copy member XX0210PPLH - Periodic Requests  *
     C*Report Periodic Requests Print Level Headings
     C/COPY WNCPYSRC,FC0210PPLH
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         CAPRDT    BEGSR
      *================================================================
      * Print report detail line.
      *================================================================
      * Load detail line.
     C                     Z-ADDD9TNLU    $RTNLU           Transaction No.
     C                     MOVELD9LVL     $RLVL            Level
     C                     Z-ADDD9LCD     $RLCD            Last Change Dat
     C                     MOVELD9CHTP    $RCHTP           Type of Last Ch
     C                     MOVELD9ARMF    $RARMF           Archived On Mic
     C                     MOVELD9AROD    $RAROD           Archived On Opt
     C                     Z-ADDD9PFDT    $RPFDT           First Date
     C                     Z-ADDD9LPDT    $RLPDT           Last Active Dat
     C                     Z-ADDD9PNDT    $RPNDT           Next Active Dat
     C                     MOVELD9RNAM    $RRNAM           Report name
     C                     MOVEL*BLANK    $RAETX           Screen report d
     C                     MOVELD9PSQN    $RPSQN           Periodic Sequen
     C                     MOVELD9CSEQ    $RCSEQ           Component Seque
     C                     MOVELD9COTT    $RCOTT           Component Name
     C                     MOVEL*BLANK    $RLVLN           Level Name
     C                     MOVELD9ETTY    $RETTY           Entity
     C                     MOVELD9DRQD    $RDRQD           Distribution Re
     C                     MOVELD9SOID    $RSOID           Instruction Ide
     C                     MOVELD9USRO    $RUSRO           User ID For Out
     C                     MOVELD9DLS1    $RDLS1           Distribution Li
     C                     MOVELD9USRR    $RUSRR           User ID For Req
     C                     MOVEL*BLANK    $RBPTX           Archived On
     C                     MOVEL*BLANK    $RA0NA           Alpha Change Da
     C                     MOVEL*BLANK    $RANST           Alpha Of Last C
     C                     MOVELD9DLS2    $RDLS2           Distribution Li
     C                     MOVELD9PDSC    $RPDSC           Request Descrip
     C                     MOVELD9FREQ    $RFREQ           Frequency
     C                     Z-ADDD9FDAY    $RFDAY           Frequency Day N
     C                     MOVEL*BLANK    $RA7NA           Alpha First dat
     C                     MOVEL*BLANK    $RA8NA           Alpha Last date
     C                     MOVEL*BLANK    $RA9NA           Alpha Next date
     C                     MOVEL'Y'       W0PFM
      * USER: Process detail record
     C                     MOVEL@CN,01    WUAQST           Suppress Level
     C                     MOVELP1NEST    WUNEST           Audit Report Pr
      *CASE:     WRK.Previous Report Name EQ CUR.Report name
     C           WUARCD    IFEQ $RRNAM                     *IF
     C                     MOVEL@CN,02    WUAQST           Suppress Level
     C                     END                             *FI
      * Process Detail Rec PRTFIL
     C                     ADD  1         WUAONB           work number
      *CASE:     PAR.Audit Report Program Mode is Audit Report
     C           WUNEST    IFEQ @CN,03                     *IF
      *CASE:     PAR.Last Change Date NE WRK.run day number
     C           $RLCD     IFNE WURUND                     *IF
     C                     MOVEL@CN,01    W0PFM            *Print format
     C                     END                             *FI
     C                     END                             *FI
      *CASE:     PGM.*Print format is Print format
     C           W0PFM     IFEQ @CN,02                     *IF
     C                     ADD  1         $TAPNB           No of Calculate
      *CASE:     PAR.No of Calculated Recs is Equal to one
     C           $TAPNB    IFEQ 1                          *IF
      * Change Print Control To Y - Standing Data Controls  *
      *
      * SET PRINT CONTROL TO Y TO ENABLE COLUMN HEADERS TO BE
      *     PRINTED ON FIRST RECORD
      *
     C                     MOVEL'Y'       BAPR    1
     C                     END                             *FI
     C                     END                             *FI
      * Midas conv day to date - standard functions  *
     C                     CALL 'ZDATE2'               90  Midas conv day
     C                     PARM $RLCD     WQ0001  50       run day number
     C                     PARM WUDATF    WQ0002  1        date format fla
     C           WUARNA    PARM *ZERO     WQ0003  60       screen/report d
     C           $RA0NA    PARM *BLANK    WQ0004  7        Alpha run date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
      * PAR.Alpha Of Last Change = Condition name of PAR.Type of Last Change
     C                     CALL 'FCRVCNR'              90  *
     C                     PARM           W0RTN   7        Return code
     C                     PARM 1100090   Y2LSNO  70       List number
     C                     PARM $RCHTP    W0INVL 20        Type of Last Ch
     C                     PARM ' '       W0VLMP  1        Value mapped?
     C           $RANST    PARM           W0CNNM 25        Alpha Of Last C
      *
     C                     MOVEL*BLANK    $RBPTX           Archived On
      * Archived On
      *CASE:     PAR.Archived On Optical Disk is Yes
     C           $RAROD    IFEQ @CN,02                     *IF
      *CASE:     PAR.Archived On Microfiche is Yes
     C           $RARMF    IFEQ @CN,02                     *IF
     C                     MOVEL@CN,04    $RBPTX           Archived On
     C                     ELSE
      *CASE:     *OTHERWISE
     C                     MOVEL@CN,05    $RBPTX           Archived On
     C                     END                             *FI
     C                     ELSE
      *CASE:     *OTHERWISE
      *CASE:     PAR.Archived On Microfiche is Yes
     C           $RARMF    IFEQ @CN,02                     *IF
     C                     MOVEL@CN,06    $RBPTX           Archived On
     C                     ELSE
      *CASE:     *OTHERWISE
     C                     MOVEL*BLANK    $RBPTX           Archived On
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    $RLVLN           Level Name
      * Level Name
     C                     MOVEL*BLANK    $RLVLN           Level Name
      *CASE:     PAR.Level is Branch
     C           $RLVL     IFEQ @CN,07                     *IF
     C                     MOVEL@CN,08    $RLVLN           Level Name
     C                     END                             *FI
      *CASE:     PAR.Level is Company
     C           $RLVL     IFEQ @CN,09                     *IF
     C                     MOVEL@CN,10    $RLVLN           Level Name
     C                     END                             *FI
      *CASE:     PAR.Level is System
     C           $RLVL     IFEQ @CN,11                     *IF
     C                     MOVEL@CN,12    $RLVLN           Level Name
     C                     END                             *FI
      *CASE:     PAR.Level is Account Officer                             S01486
     C           $RLVL     IFEQ @CN,21                     *IF            S01486
     C                     MOVEL@CN,22    $RLVLN           Level Name     S01486
     C                     END                             *FI            S01486
      *CASE:     PAR.Level is Department                                  S01486
     C           $RLVL     IFEQ @CN,23                     *IF            S01486
     C                     MOVEL@CN,24    $RLVLN           Level Name     S01486
     C                     END                             *FI            S01486
     C                     MOVEL*BLANK    $RA7NA           Alpha First date
      * Alpha First date
      * Midas conv day to date - standard functions  *
     C                     CALL 'ZDATE2'               90  Midas conv day
     C                     PARM $RPFDT    WQ0005  50       run day number
     C                     PARM WUDATF    WQ0006  1        date format fla
     C           WUARNA    PARM *ZERO     WQ0007  60       screen/report d
     C           $RA7NA    PARM *BLANK    WQ0008  7        Alpha run date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C                     MOVEL*BLANK    $RA8NA           Alpha Last date
      * Alpha Last date
      * Midas conv day to date - standard functions  *
     C                     CALL 'ZDATE2'               90  Midas conv day
     C                     PARM $RLPDT    WQ0009  50       run day number
     C                     PARM WUDATF    WQ0010  1        date format fla
     C           WUARNA    PARM *ZERO     WQ0011  60       screen/report d
     C           $RA8NA    PARM *BLANK    WQ0012  7        Alpha run date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C                     MOVEL*BLANK    $RA9NA           Alpha Next date
      * Alpha Next date
      * Midas conv day to date - standard functions  *
     C                     CALL 'ZDATE2'               90  Midas conv day
     C                     PARM $RPNDT    WQ0013  50       run day number
     C                     PARM WUDATF    WQ0014  1        date format fla
     C           WUARNA    PARM *ZERO     WQ0015  60       screen/report d
     C           $RA9NA    PARM *BLANK    WQ0016  7        Alpha run date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C                     MOVEL*BLANK    $RAETX           Screen report d
      * Screen report description
      * Get report description - Report Descriptions  *
     C                     EXSR SARVGN
     C                     MOVEL$RRNAM    WUARCD           Previous Report
      * 00/copy member XX0210PPDR - Periodic Requests  *
     C*Report Periodic Requests Process Detail Record
     C/COPY WNCPYSRC,FC0210PPDR
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form.
     C                     MOVEL'0'       *IN79
     C           WUAQST    IFEQ @CN,02                     *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print detail line.
     C                     WRITE$DTLRCD
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DALVCH    BEGSR
      *================================================================
      * Detect level changes.
      *================================================================
      * Clear all level breaks.
     C                     MOVEL*BLANK    L0               Page headings
     C                     MOVEL*BLANK    L1               Report name
      * Clear heading length to print.
     C                     Z-ADD*ZERO     @$HDL
      *
      * End of file - Signal all level breaks.
     C           W0EOF     IFEQ '1'
     C                     MOVEL'Y'       L1
     C                     ELSE
     C           D9RNAM    IFNE WZRNAM                     Report name
      * Set on level break indicator.
     C                     MOVEL'Y'       L1
     C                     END
     C                     END
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         EAPRTT    BEGSR
      *================================================================
      * Print report Totals.
      *================================================================
      * Print level break totals as required
     C           L1        IFEQ 'Y'
      * User: Process Report name totals.
      * 00/copy member XX0210PPLT - Periodic Requests  *
     C*Report Periodic Requests Print Level Totals
     C/COPY WNCPYSRC,FC0210PPLT
     C                     END
      *
      * End of file - Print final totals.
     C           W0EOF     IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: Process End of Report
      *CASE:     CUR.No of Calculated Recs is equal to zero
     C           $TAPNB    IFEQ *ZERO                      *IF
     C                     MOVEL@CN,13    WUAPST           Alpha Zero
     C                     END                             *FI
      *CASE:     PAR.Audit Report Program Mode is Audit Report
     C           P1NEST    IFEQ @CN,03                     *IF
      * Audit/On-req RTV on FCTL - Standing Data Controls  *
     C                     EXSR SBRVGN
      *CASE:     WRK.work number NE WRK.No of records on file
     C           WUAONB    IFNE WUAVNB                     *IF
     C                     MOVEL@CN,16    WUAOST           work flag
     C                     END                             *FI
      * Audit Printfile Override - Standing Data Controls  *
     C                     CALL 'SDC540P'              90  Audit Printfile
     C                     PARM @CN,17    WQ0017 10        *PROGRAM
     C                     PARM WUAOST    WQ0018  1        work flag
     C                     PARM WUAUNB    WQ0019  50       No of records i
     C                     PARM WUASNB    WQ0020  50       No of records a
     C                     PARM WUATNB    WQ0021  50       No of records d
     C                     PARM WUAONB    WQ0022  50       work number
     C                     PARM WUAVNB    WQ0023  50       No of records o
     C                     PARM WUE8TX    WQ0024 53        Audit/Report Ti
     C                     PARM WUBJNA    WQ0025 53        Report Underlin
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
      *CASE:     PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,15                     *IF
      * Database Error U7U8 - Standing Data Controls  *
      *
      ** DATABASE ERROR, SET ON SWITCHES U7 AND U8
      *
     C                     SETON                     U7U8
      *
     C                     ELSE
      *CASE:     WRK.work flag is Incorrect
     C           WUAOST    IFEQ @CN,16                     *IF
      * File Control Error U8 - Standing Data Controls  *
      *
      ** FILE CONTROLS OUT OF BALANCE SETON U8
      *
     C                     SETON                     U8
      *
     C                     ELSE
      *CASE:     *OTHERWISE
      * Zeroise Standing Data Ctl - Standing Data Controls  *
     C                     EXSR SCCHRC
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/copy member XX0210PPER - Periodic Requests  *
     C*Report Periodic Requests Process End Of Report
     C/COPY WNCPYSRC,FC0210PPER
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:-
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal artificial overflow.
     C                     SETON                     97
      * Print page headers.
     C                     WRITE$PAGHDR
     C                     END
     C                     MOVEL'0'       *IN78
     C           WUAPST    IFEQ @CN,13                     *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WUAPST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print format.
     C                     WRITE$FINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         FASGHD    BEGSR
      *================================================================
      * Signal required header formats.
      *================================================================
      * Cascade skip to new page requests upwards.
      *
     C           *IN97     IFNE '1'
     C           L0        ANDNE'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line.
     C           W0OFL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE @$HDL
     C                     SETON                     97
     C                     ELSE
      * Signal overflow if requested headings would cause
      * detail format to be printed past end of page
     C                     ADD  13        @$HDL
     C           W0PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE @$HDL
     C                     SETON                     97
     C                     END
     C                     END
     C                     END
      * Overflow detected.
     C           *IN97     IFEQ '1'
      * Request page headings.
     C                     MOVEL'Y'       L0
      * Request all formats which print on overflow.
     C                     SETOF                     97
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GARDRC    BEGSR
      *================================================================
      * Read next record with user selection.
      *================================================================
     C           W0RSL     DOUEQ'Y'
     C                     READ @D9REJJ                  90*
     C                     MOVEL*IN90     W0EOF   1
      * Quit if no record read.
     C           W0EOF     CABEQ'1'       GAEXIT
      * Select record unless user action states otherwise.
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * 00/copy member XX0210PRSP - Periodic Requests  *
     C*Report Periodic Requests Record Selection Proc.
     C/COPY WNCPYSRC,FC0210PRSP
     C                     END
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Get report description - Report Descriptions  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define Keylist.
     C           KRSSA     KLIST
     C                     KFLD           DXRNAM           Report name
      * Move fields to key list.
     C                     MOVEL$RRNAM    DXRNAM           Report name
     C***********KRSSA     CHAIN@DXREIK              90    *              S01407
     C           KRSSA     CHAINFCREPTD0             90    *              S01407
      * DBF Record not found.
     C***90*****           MOVEL'USR0712' W0RTN   7                       LN1190
     C***90*****           MOVEL'RCF0712' W0RTN   7                 LN1190S01407
     C   90                MOVEL'RCF0712' W0RTN   7                       056650
     C*                                                                   S01407
     C           *IN90     IFEQ '1'                                       S01407
     C           *LOCK     IN   LDA                                       S01407
     C                     MOVEL'FC0210P' DBPGM                           S01407
     C                     MOVEL'FCREPTJ0'DBFILE                          S01407
     C                     MOVELDXRNAM    DBKEY            *************  S01407
     C                     Z-ADD1         DBASE            * DBERR 001 *  S01407
     C                     SETON                     U7U8  *************  S01407
     C                     OUT  LDA                                       S01407
     C                     EXSR *PSSR                                     S01407
     C                     END                                            S01407
     C           *IN90     IFEQ '0'
      * USER: Process DBF record
      * PAR = DB1 By name
     C                     MOVELDXRDSC    $RAETX           Report Descript
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Audit/On-req RTV on FCTL - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define Keylist.
     C           KRSSB     KLIST
     C                     KFLD           AHFLNM           Filename
      * Move fields to key list.
     C                     MOVEL@CN,14    AHFLNM           Filename
     C           KRSSB     CHAIN@AHREAV              90    *
     C           *IN90     IFEQ '1'
      * DBF Record not found.
     C                     MOVEL'RCF0013' W0RTN   7
      * USER: Processing if DBF record not found
     C                     MOVEL@CN,15    W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process DBF record
      * PAR = DB1 By name
     C                     Z-ADDAHNORC    WUAVNB           No. of Records
     C                     Z-ADDAHNOIN    WUAUNB           No. of Inserts
     C                     Z-ADDAHNOAM    WUASNB           No. of Amends
     C                     Z-ADDAHNODL    WUATNB           No. of Deletes
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCHRC    BEGSR
      *================================================================
      * Zeroise Standing Data Ctl - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @AHREAU
     C                     MOVEL@CN,14    AHFLNM           Filename
      *
     C           KLCHSC    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSC    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found.
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID           Message id.
     C                     MOVEL'Y2USRMSG'ZAMSGF           Message file.
     C                     EXSR ZASNMS                     Send message
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked.
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SCEXIT
     C                     END
      *
      * USER: Processing after DBF read
     C                     Z-ADDWUAVNB    AHNORC           No. of Records
     C                     Z-ADD*ZERO     AHNOIN           No. of Inserts
     C                     Z-ADD*ZERO     AHNOAM           No. of Amends
     C                     Z-ADD*ZERO     AHNODL           No. of Deletes
      * Move Non-key fields to @AHREAU
     C                     Z-ADDWUAVNB    AHNORC           No. of Records
     C                     Z-ADD*ZERO     AHNOIN           No. of Inserts
     C                     Z-ADD*ZERO     AHNOAM           No. of Amends
     C                     Z-ADD*ZERO     AHNODL           No. of Deletes
      *
     C                     UPDAT@AHREAU                91  *
     C           *IN91     IFEQ '1'
      * Change error detected.
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF Change successful.
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue.
      *================================================================
      * Send if first error message or not an error message.
     C           ZAMSTP    IFNE *BLANK
     C           ZAFSMS    ORNE 'N'
     C           ZAMSTP    IFEQ *BLANK
      * Signal first error message sent.
     C                     MOVEL'N'       ZAFSMS
     C                     END
     C           ZAPGM     IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGM
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGM  10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
     C                     END
      * Clear all fields for default mechanism next time.
     C                     MOVEL*BLANK    ZAPGM            Program queue
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSID           Message Id.
     C                     MOVEL*BLANK    ZAMSGF           Message file.
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct.
      *================================================================
      * Terminate program.
     C                     SETON                     LR
      *
      * Exit program.
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation.
      *================================================================
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
      * Setup job date/time.
     C                     Z-ADDUDATE     ##JDT            Job date.
     C                     TIME           ##JTM            Job time.
     C                     TIME           ##TME   60       Screen time.
      * Define work field Suppress Level Heading
     C                     MOVEL*BLANK    WUAQST  1
      * Define work field Audit Report Program Mode
     C                     MOVEL*BLANK    WUNEST  1
      * Define work field Previous Report Name
     C                     MOVEL*BLANK    WUARCD 10
      * Define work field work number
     C                     Z-ADD*ZERO     WUAONB  50
      * Define work field run day number
     C                     Z-ADD*ZERO     WURUND  50
      * Define work field date format flag
     C                     MOVEL*BLANK    WUDATF  1
      * Define work field screen/report date
     C                     Z-ADD*ZERO     WUARNA  60
      * Define work field Alpha Zero
     C                     MOVEL*BLANK    WUAPST  1
      * Define work field No of records on file
     C                     Z-ADD*ZERO     WUAVNB  50
      * Define work field No of records inserted
     C                     Z-ADD*ZERO     WUAUNB  50
      * Define work field No of records amended
     C                     Z-ADD*ZERO     WUASNB  50
      * Define work field No of records deleted
     C                     Z-ADD*ZERO     WUATNB  50
      * Define work field work flag
     C                     MOVEL*BLANK    WUAOST  1
      * Define work field Audit/Report Title
     C                     MOVEL*BLANK    WUE8TX 53
      * Define work field Report Underline
     C                     MOVEL*BLANK    WUBJNA 53
      * Define work field midas rundate
     C                     MOVEL*BLANK    WURUNA  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSSF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Spool File No.(numeric)
     C                     Z-ADD*ZERO     WUAWNB  60
      * Define work field ZSFILE error
     C                     MOVEL*BLANK    WUAXST  1
      * Signal first error message outstanding.
     C                     MOVEL'Y'       ZAFSMS  1
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
      * Adjust page length and overflow as necessary.
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * USER: Initialise program
      * 200 Byte Access Program - standard functions  *
      *****************************************************************
      **
      ** DEFINE 200 BYTE DATA STRUCTURE
      ** LAST AMEND : 00                         DATE : 00/00/00
      **
      * Bank Data Structure - standard functions  *
      *****************************************************************
      **
      ** DEFINE BANK DETAILS DATA STRUCTURE
      ** LAST AMEND : 00                         DATE : 00/00/00
      **
      * Last Amd Hdr Box fc0210p - Periodic Requests  *
      * get rundate - rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE RUNA      ##RUNA
     C                     MOVE RUNA      WURUNA
     C                     MOVE RUND      WURUND
     C                     MOVE SSF       WUSSF
     C                     MOVE DATF      WUDATF
     C                     MOVE MBIN      WUMBIN
     C*                                                                   S01407
     C           *NAMVAR   DEFN           LDA                             S01407
      * Copyright Statement - standard functions  *
     C                     MOVEACPY@      BIS@   80
      * Get Bank Title - standard functions  *
     C*
     C** ACCESS BANK ICD FOR TITLE
     C*
     C                     CALL 'AOBANKR0'                   <BANK ICD>
     C                     PARM *BLANK    P@APRC  7          B:Return code
     C                     PARM '*FIRST'  P@APOP  7          I:Option
     C           D@BANK    PARM D@BANK    UUFDY              O:Rec.format
      * Bank ICD Access Program record format data structure
      *
     C                     MOVE BJURPT    ##TITL
      * Get Title And Underline - Standing Data Controls  *
     C********************************************************************
      /EJECT
      **
      * Save Indicator - *IN99
      **
     C           *IN99     IFEQ '1'
     C                     MOVE 1         UIND    10
     C                     SETOF                     99
     C                     ELSE
     C                     MOVE 0         UIND
     C                     END
     C*
      **
      * Calculate End of Text Point
      **
     C                     Z-ADD1         U       20
     C                     MOVEA@CN,18    UAR,U
     C*
     C           *IN99     DOWEQ'0'
     C           ' '       LOKUPUAR,U                    99
     C                     ADD  1         U
     C           UAR,U     COMP ' '                      99
     C                     END
     C*
     C* Move Array Value to Output Parameter
     C*
     C           P1NEST    IFEQ 'A'
     C                     MOVELUARRAY,1  UTEMP  26
     C                     MOVEAUTEMP     UAR,U
     C                     ADD  26        U
     C                     ELSE
     C*
     C* If a third option to Array is added,
     C* a Temp storage is required
     C*
     C                     MOVEAUARRAY,2  UAR,U
     C                     ADD  7         U
     C                     END
     C*
     C* Store Text in USTORE field
     C*
     C                     MOVEAUAR       USTORE 53
     C                     MOVE *BLANKS   UAR
     C*
     C           53        SUB  U         UB      20
     C           UB        DIV  2         UB
     C                     MVR            UR      10
     C           UB        ADD  U         U
     C           U         SUB  1         U
     C*
     C* Insert underline to Array
     C*
     C*********************MOVEA*ALL'#'   ULN,UB                          LN0510
     C                     MOVEA*ALL'-'   ULN,UB                          LN0510
     C                     MOVEA*BLANKS   ULN,U
     C*
     C*
     C           UB        IFGT 0
     C                     MOVEAUSTORE    UAR,UB
     C                     ELSE
     C                     MOVEAUSTORE    UAR
     C                     END
     C*
     C* Move Array value to Screen Text field
     C*
     C                     MOVEAUAR       ##E8TX
     C                     MOVEAUAR       WUE8TX
     C                     MOVEAULN       ##BJNA
     C                     MOVEAULN       WUBJNA
     C*
     C* Reset Indicator - *IN99
     C*
     C           UIND      IFEQ 1
     C                     SETON                     99
     C                     ELSE
     C                     SETOF                     99
     C                     END
     C*
     C*
      * Set Up Spool File Number - standard functions  *
     C                     Z-ADD@$FNB     WUAWNB
      * ZSFILE(Write Rpt Rqsts) - standard functions  *
     C                     CALL 'ZSFILE'               90  ZSFILE(Write Rp
     C                     PARM P2RQSQ    WQ0026  5        Sequence Number
     C                     PARM P4ETTY    WQ0027  3        Entity
     C                     PARM @CN,19    WQ0028 10        Spool File Name
     C                     PARM WUAWNB    WQ0029  60       Spool File No.(
     C           WUAXST    PARM *BLANK    WQ0030  1        ZSFILE error
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
      *CASE:     WRK.ZSFILE error is Error occured
     C           WUAXST    IFEQ @CN,02                     *IF
     C                     MOVEL@CN,20    P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * 00/copy member XX0210PCPG - Periodic Requests  *
     C*Report Periodic Requests Initialise Program C-Spec
     C/COPY WNCPYSRC,FC0210PCPG
      * 00/copy member XX0210PEPG - Periodic Requests  *
      * 00/copy member XX0210PFPG - Periodic Requests  *
      * 00/copy member XX0210POPG - Periodic Requests  *
      * 00/copy member XX0210PIPG - Periodic Requests  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT                                                              S01407
      *****************************************************************   S01407
      * *PSSR - DATABASE ERROR HANDLING ROUTINE                           S01407
      *****************************************************************   S01407
     C*                                                                   S01407
     C           *PSSR     BEGSR                                          S01407
     C*                                                                   S01407
     C           @RUN      IFEQ *BLANK                                    S01407
     C                     MOVE 'Y'       @RUN    1                       S01407
     C                     DUMP                                           S01407
     C                     END                                            S01407
     C                     SETON                     LR                   S01407
     C                     RETRN                                          S01407
     C*                                                                   S01407
     C                     ENDSR                                          S01407
      *****************************************************************   S01407
     O*Report Periodic Requests Initialise Program O-Spec
     O/COPY WNCPYSRC,FC0210POPG
** CPY@
(c) Misys International Banking Systems Ltd. 2001
** ARRAY ENTRIES FOR REPORT TITLE
MAINTENANCE - AUDIT REPORT
LISTING
** @CN Long constants used in program.      PREQ CHANGED TO FCPREQPD      LN0990
N
Y
A
BOTH
OPTICAL DISK
MICROFICHE
B
BRANCH
C
COMPANY
S
BANK
0
FCPREQPD
Y2U0005
N                                                                         LN1061
FC0210AU
PERIODIC REPORTS
FC0210PM
Y2U0004
A
A/C OFR
D
DEPT
