     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FD Exchange rates maintenance')                  *
     F****************************************************************
     F*                                                              *
     F*                                                              *
     F*  Midas - Standing Data
     F*                                                              *
     F*     FD0140 - EXCHANGE RATES MAINTENANCE                      *
     F*                                                              *
      *  (c) Finastra International Limited 2001                      *
     F*                                                              *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CCB020             Date 06Aug12               *
      *                 CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 145043             Date 06Jun06               *
      *                 CAAA03             Date 01Apr04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4.01 -------------------------------------------*
      *                 204923             Date 29Apr02               *
      * Midas Release 4 --------------- Base -------------------------*
      *                 CIR007             Date 11May01               *
      * Midas DBA 3.05 -----------------------------------------------*
      *                 CSD006             Date 15May01               *
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CDL008             Date 02May00               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
     F*                     093459         DATE   03NOV95            *
     F*                     S01319         DATE   20AUG91            *
     F*                     DT0162         DATE   13MAY91            *
     F*                     S01314         DATE   05FEB91            *
     F*                     E21369         DATE   15MAR90            *
     F*                     E21137         DATE   18FEB90            *
     F*                     E20954         DATE   17FEB90            *
     F*                     S01195         DATE   22JAN90            *
     F*                     S01194         DATE   22JAN90            *
     F*                     E15512         DATE   31/01/89           *
     F*                     E13959         DATE   13/07/88           *
     F*                     E13880         DATE   11/07/88           *
     F*                     E12700         DATE   23/03/88           *
     F*                     E12301         DATE   15/03/88           *
     F*                                                              *
     F****************************************************************
     F*                                                              *
      *  MD046248 - Finastra Rebranding                               *
      *  CCB020 - COB Restructure - Secondary COB Infrastructure      *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  145043 - Make sure all work fields are 13,8 .                *
      *  CAAA03 - Webfacing Changes                                   *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  204923 - Rate Fix Days Adjustment (OIS)                      *
      *           (Recompiled over changed SDCURRPD)                  *
      *  CIR007 - Overnight Index Swaps                               *
      *           (Recompiled over changed SDCURRPD)                  *
      *  CSD006 - Recompiled over changed SDCURRPD.                   *
      *  CDL008 - Continuous Linked Settlement (recompile SDCURRPD)   *
     F*     093459 - Allow concurrent enquiries to be run - use      *
     F*              access object to obtain currency details        *
     F*              instead of reading SDCURRL0, in enquiry mode.   *
     F*     S01319 - Remove redundant processing                     *
     F*              Bring up to release 10 standards                *
     F*              Only do SPF processing if not at Next Day Setup *
     F*     DT0162 - Dealing Release 10 System Test error:           *
     F*              incorporation had failed to change the          *
     F*              SDCURRL0/1 references correctly; program was    *
     F*              reading L1 and attempting to update L0, and     *
     F*              failing with attempt to update without prior    *
     F*              read.                                           *
     F*     S01314 - Incorporation changes                           *
     F*     E21369 -  REC FDCCYPP0 NOT DELETED, OR INSERTED AFTER A  *
     F*               DELETION, IF HIGH AND LOW POINTS BOTH ZERO     *
     F*               (Already corrected under S01194)
     F*     E21137 - Check SDMMODPD for DRS before updating PC files *
     F*     E20954 -  Incorrect indicator used for chain fail on     *
     F*               FDCYTULL.                                      *
     F*     S01195 -  NEW HOLIDAY PROCESSING                         *
     F*                                                              *
     F*     S01194 -  REL. 10  NEW COPYRIGHT STATEMENTS              *
     F*               AND NEW STANDING DATA FILES                    *
     F*                                                              *
     F*     E15512 -  ANY NEGATIVE SPOT RATE SHOULD NOT BE ACCEPTED  *
     F*                                                              *
     F*     E13959 -  Fields missed off TABTG10 record for           *
     F*               standing data update file.                     *
     F*                                                              *
     F*     E13880 -  PERFORMANCE FIX TO UPDATE FILES WITH ONLY      *
     F*               RECORDS WHICH HAS BEEN CHANGED.                *
     F*                                                              *
     F*     E12700 -  HIGH SPOT RATE DOES NOT NEED TO BE GREATER     *
     F*               THAN LOW SPOT RATE FOR BASE CCY FOR DEALING    *
     F*               (BOTH WOULD NORMALLY BE 1).                    *
     F*                                                              *
     F*     E12301 -  WHEN THE PROGRAM LOOKS FOR THE NEXT WORKING    *
     F*               DAY, THE FIRST DAY IT CHECKS IS SPOT DATE +1   *
     F*                                                              *
     F****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F/EJECT
     F****************************************************************
     F*
     F* ID F  C  H  L    FUNCTION OF INDICATORS
     F*
     F*       KC         END
     F*       KL         END OR GO TO INITIAL LEVEL
     F*       KH         NEXT RECORD
     F*       KG         PREVIOUS RECORD
     F*       KP         SELECT SCREEN
     F*       KJ         CONFIRM DELETE
     F*
     F*       10         SFLEND FD0140S1
     F*
     F*       20         ERROR ON FIELD DDACTN
     F*       21         ERROR ON FIELD DDCCY
     F*       22         ERROR ON FIELD DD01BI
     F*       23         ERROR ON FIELD DD01OF
     F*       24         ERROR ON FIELD DDPDX1
     F*       25         ERROR ON FIELD DD02BI
     F*       26         ERROR ON FIELD DD02OF
     F*       27         ERROR ON FIELD DDPDX2
     F*       28         ERROR ON FIELD DDSPT1
     F*       29         ERROR ON FIELD DDSPT2
     F*       30         ERROR ON FIELD DD03BI
     F*       31         ERROR ON FIELD DD03OF
     F*       32         ERROR ON FIELD DDPDX3
     F*       33         ERROR ON COMPARISON OF CALCULATED RATES
     F*       34         ERROR IN DD03BI AND NO ERROR PRIOR TO
     F*                  SUBFILE VALIDATION
     F*       35         ERROR IN DD03OF AND NO ERROR PRIOR TO
     F*                  SUBFILE VALIDATION
     F*       36         SUCCESSFUL VALIDATION OF ACTION CODE
     F*
     F*       40         DISPLAY ENQUIRY SUBFILE AND CONTROL RECORD
     F*       41         CLEAR ENQUIRY SUBFILE
     F*       43         CLEAR POINTS SUBFILE
     F*       45         CLEAR MESSAGE SUBFILE
     F*       46         PROTECT CURRENCY CODE FOR CMD/15
     F*
     F*       50         ROLLUP
     F*       55         SETON WHEN SUBFILE EXITED
     F*       59         END OF SUBFILE WHEN READC
     F*
     F*       60         AMEND MODE
     F*       61         INSERT MODE
     F*       62         ENQUIRE MODE
     F*       63         DELETE MODE
     F*
     F*       64         ERROR INDICATOR
     F*       65         PRIOR READ WAS SUCCESSFUL
     F*       66         AT SUBFILE LEVEL
     F*       67         INSERT OVER DELETED RECORD
     F*       68         CHAIN FAIL TO FILE FDCCYLL
     F*       69         MATCHING MONTH SHORTNAME FOUND IN ARRAY
     F*
     F*       70         EOF ON READING DISPLAY FILE
     F*       71         LEVEL FLAG
     F*       72         BEGINNING OF FDCCYPLL
     F*       73         END OF FDCCYPLL
     F*       74         RECORD LOCKED
     F*       75         CHANGE OF ACTION CODE AT LEVEL 2
     F*       76         CHAIN FAIL TO FILE ANY SECONDARY FILES
     F*       77         INDICATES END OF READ OR READP
     F*       78         RECORD LOCKING ON FDCYPULL
     F*
     F*       80         INVALID CHARS IN POINTS FIELD
     F********81*********LOKUP OF ARRAY @CY   : ZA0830                    S01195
     F*       82         SIGN ENTERED IN POINTS FIELD
     F*       83         NUMBER ENTERED IN POINTS FIELD
     F*       85         POINTS FIELD IN ERROR
*****F********86*********WORKING DAY IN DISPLAYED CCY
*****F********87*********WORKING DAY IN BASE CCY FOR DEALING
*****F********88*********CHAIN FAIL ON HOLIDAY RECORD
*****F********89*********CURRENCY ON HOLIDAY ARRAY
     F********90*********STOP*ZERO*SUPRESSION*IN*#ZL*FOR*PC*UPDATE******* S01319
     F*
     F*       U7         DATA BASE ERROR
     F*       U8         DATA BASE ERROR
     F*
     F*****************************************************************
     F/EJECT
     F*FDICDRLLIF**E***********K********DISK*********KINFSR *PSSR         S01194
     F************TABTB11F**************************KIGNORE               S01194
     F************TABTB20F**************************KIGNORE               S01194
     F*CMSDULL*O***E*******************DISK*********KINFSR**PSSR**********S01319
     F**********************************************KCOMIT****************S01319
     FFDTTOTLLUF  E           K        DISK         KINFSR *PSSR
     F                                              KCOMIT
     FFDCYTULLUF  E           K        DISK         KINFSR *PSSR
     F                                              KCOMIT
     F*DCURRL1UF**E           K        DISK         KINFSR *PSSR   S01194 S01314
     F*
     F*DCURRL0IF**E           K        DISK         KINFSR *PSSR   S01194 S01314
     F*SDCURRL1IF*E***********K********DISK         KINFSR *PSSR   S01314 DT0162
     FSDCURRL0UF  E           K        DISK         KINFSR *PSSR          S01314
     F*
     FFDCYPULLUF  E           K        DISK         KINFSR INFSR A
     F                                              KINFDS INFDS
     F                                              KCOMIT
     F*FDTABJLLIF*E***********K********DISK*********KINFSR *PSSR          S01194
     F*FDINSTLLIF**E*******************DISK*********KINFSR**PSSR**********S01319
     FFDCCYPLLIF  E           K        DISK         KINFSR *PSSR
     F            FDCCYPP0                          KRENAMEFDCCYPL0
     F*FDCCYTLLIF*E***********K********DISK*********KINFSR *PSSR          S01194
     F************TABTG10F**************************KRENAMEFDCCYTL0       S01194
     FFD0140DDCF  E                    WORKSTN      KINFSR *PSSR
     F                                        @RRN  KSFILE FD0140S1
     F                                        @RRN  KSFILE FD0140S3
     F                                        @RRN1 KSFILE FD0140S5
     E/COPY ZSRSRC,ZHOLE                                                  S01195
     E*
     E**  COPYRIGHT ARRAY                                                 S01194
     E                    CPY@    1   1 80                                S01194
     E*
     E                    @MTH   12  12  3               MONTH S/NAMES
     E                    @PDD    4  20 15               PERIOD NAMES
     E                    @HI        20  7 2             HIS
     E                    @LO        20  7 2             LOS
     E                    @ER         9  1               VALIDATE BID
     E                    @PTP   20  20  1               PERIOD TYPES
     E                    @PRD   20  20  2 0             PERIODS
     E                    @SZ         9  1               SUPRESS 0'S
     E                    @EM        10  1               ERROR FLAGS
     E*                   @HLS       25  3               CCY ON HOLS
     E                    @MSG    1   1 48               COMIT MSG
     E                    @TEN    1   7  8 0             POWERS OF TEN
     E*
     E**  ARRAY FOR SR. ZA0850 - DAYS IN A MONTH (COMPILE TIME ARRAY)
     E                    @M     12  12  2 0
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0A
     E*
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0A
     E*
     E****USED BY SR. ZA0830 - CURRENCY RECORDS                           S01194
     E********************@CY        50  3                                S01194
     E*
     E                    @SF     1  10 10 0
     E**  Array of scaling factors.
     I/EJECT
     ITABLETXF
     I              RECI                            HRECI
     I              KEY                             HKEY
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@Z71Y
     I            DS
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@VDT
     I            DS
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
     I*
     I**  DATA STRUCTURE FOR SR. ZA0680 - DATE INPUT TO SUBROUTINE
     I            DS
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I*
     I************DS                                                      S01195
     I*                                                                   S01195
     I****USED BY SR. ZA0830 - ARRAY DATA STRUCTURE                       S01195
     I********                                1 150 @CY                   S01195
     I********                                1  75 @@CY1                 S01195
     I********                               76 150 @@CY2
     I*                                                                   E13880
     I*** PERFORMANCE FIX - ARRAY TO HOLD CHANGE TIMES FOR POINTS FILE.   E13880
     I@XDL        DS                         20  13                       E13880
     I                                        1   20@XDUP                 E13880
     I                                        3   5 @XMUP                 E13880
     I                                        6   70@XYUP                 E13880
     I                                        8  130@XTUP                 E13880
     I*                                                                   E13880
     IINFDS       DS
     I* DATA STRUCTURE FOR FILE STATUS
     I                                     *STATUS  STATUS
     IPSDS       SDS
     I*
     I**  PROGRAM STATUS DATA STRUCTURE
     I                                      244 253 @JOB
     I                                      254 263 @USER
     I***@PCFT1****E*DSFDPCYPPP****                                       S01319
     I***************************                                         S01319
     I***EXCHANGE*RATES*POINTS***                                         S01319
     I***@PCFT2****E*DSFDPCCYPP****                                       S01319
     I***************************                                         S01319
     I***CURRENCY*DETAILS********                                         S01319
     I@KEY        DS                             12
     I*
     I**  Key to access FDTTOTLL , FDCCYTTLL.
     I                                        1   2 @KEY1
     I*                                       9  11 @KEY2
     I*                                      12  12 @KEY3
     I*                                       7  110@KEY6
     I            DS
     I*
     I** DATA STRUCTURE TO SPLIT UP SPOT DATES FOR PC
     I                                        1  138@SP1
     I                                        1   50@SP2
     I                                        6  138@SP3
     I@SP6        DS                             14
     I*
     I** SPOT RATE DOWNLOADED
     I                                        1   50@SP4
     I                                        6   6 @DCP
     I                                        7  148@SP5
     I           UDS
     I*
     I**  LOCAL DATA AREA FOR DATA BASE ERROR
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPROG
     I                                      181 183 DBASE
     IDNATN       DS                              5
     I* DATA STRUCTURE TO UPDATE TRANSACTION NUMBER DATA AREA
     I**
     I                                        1   50FNATN
     ICMTTXT      DS                            101
     I* DATA STRUCTURE FOR TEXT ON COMIT ON JOURNAL
     I                                        1   50NATN
     I                                        6   7 MDID
     I                                        8  15 PGMN
     I                                       16  18 WSIDX
     I                                       19  240MTIME
     I                                       25  25 ACTCDX
     I                                       26  35 USRIDX
     I                                       51  98 @MSGX
     I                                       99 101 @CCYX
     I            DS
     I*
     I** DATA STRUCTURE TO CONVERT HIGH AND LOW POINTS TO ALPHA
     I                                        1   50@INT1
     I                                        6   72@DEC1
     I                                        1   72@FLD1
     I            DS
     I*
     I** DATA STRUCTURE TO ADD IN DECIMAL POINT AND SIGN
     I                                        1   50@INT2
     I                                        6   6 @DECP
     I                                        7   82@DEC2
     I                                        9   9 @SIGN
     I                                        1   9 @FLD2
     I@SCRKY      DS
     I*
     I** KEY TO READ RECORDS OFF FDCCYTLL
     I                                        9  11 DDCCY
     I                                       12  12 @KEY4
     I@DATER      DS                              7
     I*
     I** DATA AREA TO HOLD THE DATE OF UPDATE FROM RUNA IN DDMMMYY FORMAT
     I                                        1   7 RUNA
     I                                        1   20@DD
     I                                        3   5 @MMM
     I                                        6   70@YY
     I@DATE       DS                              6
     I*
     I** DATA AREA TO HOLD THE DATE OF UPDATE FROM RUNA IN DDMMYY FORMAT
     I                                        1   20@DLUP
     I                                        3   40X
     I                                        5   60@YLUP
     I            DS                             70
     I*
     I** DATA STRUCTURE TO HOLD SCREEN FIELDS FROM FORMAT FD0140S0
     I                                        5  70 DDFLDS
     I                                        1   1 DDACTN
     I                                        2   4 DDCCY2
     I                                        5  12 DD01BI
     I                                       13  20 DD01OF
     I                                       21  24 DDPDX1
     I                                       25  32 DD02BI
     I                                       33  40 DD02OF
     I                                       41  44 DDPDX2
     I                                       45  578DDSPT1
     I                                       58  708DDSPT2
     I*
     I*           DS
     I*
     I**  Data structure to convert 8,0 date to a 6,0 date
     I*                                       1   80@DATE8
     I*                                       3   40@YR
     I*                                       5   60@MT
     I*                                       7   80@DY
     I*           DS
     I*
     I**  Data structure to receive the 8,0 date in 6,0 form
     I*                                       1   60@DAT
     I*                                       1   20@DY6
     I*                                       3   40@MT6
     I*                                       5   60@YR6
     I@DDS        DS                         20
     I*
     I** DATA STRUCTURE TO HOLD THE MULTIPLE
     I                                        1   8 @03OF
     I                                        9  16 @03BI
     I                                       17  20 @PDX3
     I*                                                                   S01194
     ISDBANK    E DSSDBANKPD                                              S01194
     I** EXTERNAL DS FOR BANK DETAILS                                     S01194
     I*                                                                   S01194
     ISDCURR    E DSSDCURRPD                                              S01194
     I* DATA STRUCTURE FOR CURRENCY DETAILS                               S01194
      *                                                                   E21137
     ISDMMOD    E DSSDMMODPD                                              E21137
      *                                                                   S01194
      ** MIDAS MODULES DETAILS ACCESSED VIA ACCESS PROGRAM                E21137
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     I*                                                                   S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE                S01194
     I*                                                                   S01194
     IDSSDY     E DSDSSDY                                                 S01194
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE                S01194
      *                                                                   S01319
     IRUNDAT      DS                                                      S01319
     I** DATA STRUCTURE FOR MULTIBRANCH INDICATOR USING RUNDAT.           S01319
     I                                       13  13 @MBIN                 S01319
     I*                                                                   S01319
     IZMUSER      DS                             17                       S01319
     I                                       11  13 DBRN                  S01319
     I**MPHAS*******DS                              1                                  S01319 CCB020
      **Read*in*phase*to*see*if*SPF*processing*needs*to*be*done********                       CCB020
     I**********                              1   1 PHASE                              S01319 CCB020
     I/COPY ZSRSRC,ZHOLI                                                  S01195
     I/EJECT
     C*****************************************************************
     C*                                                               *
     C* MAIN PROCESSING - THIS ROUTINE CONTROLS THE WHOLE PROGRAM     *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :      #A                                               *
     C*              #B                                               *
     C*              #C                                               *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C                     EXSR #A
     C*
     C                     EXSR #B
     C*
     C                     EXSR #C
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C* SUBROUTINES USED                                              *
     C* ----------------                                              *
     C*                                                               *
     C* 1  #ZG   -   WRITE MAIN SCREEN                                *
     C* 2  #ZF   -   READ MAIN SCREEN                                 *
     C* 3  #BA   -   GETS OPTION AND CALLS ROUTINE                    *
     C* 6  #ZL   -   CONVERT BID POINTS TO ALPHA                      *
     C* 4  #ZA   -   READ NEXT LIVE RECORD ON MAIN FILE               *
     C* 5  #ZB   -   READ PREVIOUS LIVE RECORD ON MAIN FILE           *
     C* 7  #BAA  -   CF8                                              *
     C* 8  #BAB  -   CF7                                              *
     C* 9  #BAC  -   CF15                                             *
     C* 10 #BACA -   FILL SUBFILE                                     *
     C* 11 #BACB -   GET RECORD CHOSEN FROM SUBFILE                   *
     C* 12 #BACC -   PROCESS CHOSEN RECORD                            *
     C* 13 #ZH   -   CF12                                             *
     C* 14 #ZI   -   CF10                                             *
     C* 15 #ZJ   -   AMEND                                            *
     C* 16 #ZK   -   DELETE                                           *
     C* 17 #BAD  -   INPUT                                            *
     C* 18 #BAE  -   ENQUIRE                                          *
     C* 19 #ZC   -   VALIDATE INPUT FOR SCREEN INPUT                  *
     C* 20 #ZCA  -   VALIDATE ALPHA POINTS FIGURE                     *
     C* 21 #ZCB  -   APPLY POINTS FOR EACH PERIOD                     *
     C* 22 #ZD   -   UPDATE A RECORD ON MAIN FILE                     *
     C* 23 #ZE   -   WRITE A RECORD TO MAIN FILE                      *
     C**25*#ZO***-***WRITE*PC*UPDATE*RECORD*FOR*TABTG10****************
     C**26*#ZN***-***WRITE*PC*UPDATE*RECORD*FOR*FDCCYPPP***************   S01319
*****C**27*#ZM*******CALCULATE FORWARD DATE                           *
     C* 27 ZA0850 -  Calculate a period date                          *
     C* 28 ZA0680 -  Convert YYYYMMDD format date to a midas day no.  *
     C* 29 ZA0710 -  Convert a midas day no. to a YYYYMMDD format date*
     C**30*ZA0830*-**Find*if*day*is*holiday*for*the*currency***********   S01195
     C* 31 #B    -   CONTROL MAIN PROCESSING                          *
     C**32*ZA0150-***ACCESSES INSTALLATION FILE FDICDRLL***************   S01195
     C* 33 ZTNLU1-   UPDATE LAST TRANSACTION NUMBER                   *
     C* 34 #A    -   INITIALISE DISPLAY FIELDS                        *
     C* 35 #C    -   TERMINAL PROCESSING                              *
     C* 36 INFSR -   HANDLES ERRORS ON FILE FDCCYPLL                  *
     C* 37 *PSSR -   HANDLES ALL OTHER PROGRAM AND FILE ERRORS        *
     C*                                                               *
     C* EXTERNAL SUBROUTINES                                          *
     C* 1 ZA0240 - SEND PROGRAM MESSAGE                               *
     C* 2 ZA0250 - CLEAR PROGRAM MESSAGE QUEUE                        *
********1**ZA0140  - Day Number to Date********************************
*****C**2**ZA0270  - Date to Day Number********************************
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZG  - THIS SUBROUTINE DISPLAYS THE MAIN SCREEN. IT ALSO GETS *
     C*        VALUE OF THE LOCATION CODE DISPLAYED.                  *
     C*                                                               *
     C* CALLED BY : #B                                                *
     C*             #BA                                               *
     C*             #BAC                                              *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @ACTN  - SAVED ACTION CODE                        *
     C*             @CCNM  - SAVED CURRENCY NAME                      *
     C*             @CCY   - SAVED CURRENCY                           *
     C*             @FLDS  - SAVED HIGH/LOW/SPOT RATES + PERIOD 1 & 2 *
     C*             @CNT   - COUNT OF SUBFILE RECORDS                 *
     C*             @DDS   - DATA STRUCTURE HOLDING THE SAVED S/FILE  *
     C*             @PDX3  - SAVED PERIOD SNAME 3                     *
     C*             @03BI  - SAVED HIGH RATE 3                        *
     C*             @03OF  - SAVED LOW RATE 3                         *
     C*             @X     - MULTIPURPOSE INDEX                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZG       BEGSR
     C*
     C                     TIME           DDTIME
     C*
     C** SAVE ALL DISPLAY FIELDS BEFORE DISPLAYING SCREEN
     C** FIRST SAVE ALL THE SUBFILE FIELDS IN THE DATA STRUCTURE
     C           1         DO   @CNT      @X               B1
     C           @X        CHAINFD0140S5             78    *1
     C           @X        OCUR @DDS                       *1
     C                     MOVE DD03OF    @03OF            *1
     C                     MOVE DD03BI    @03BI            *1
     C                     MOVE DDPDX3    @PDX3            *1
     C                     END                             E1
     C*
     C** NOW MOVE THE OTHER FIELDS
     C*
     C** IF ACTION CODE BLANK DEFAULT TO 'E'
     C           DDACTN    IFEQ ' '                        B1
     C                     MOVE 'E'       DDACTN           *1
     C                     END                             E1
     C                     MOVE DDACTN    @ACTN
     C                     MOVE DDCCY     @CCY
     C                     MOVE DDCCNM    @CCNM
     C                     MOVE DDFLDS    @FLDS
     C                     MOVE *IN21     @IN21   1
     C*
     C** DISPLAY THE MAIN SCREEN
     C                     WRITEFD0140H1                                                      CAAA03
     C                     WRITEFD0140S0
     C*
     C** DISPLAY THE SUBFILE POINTS FIELDS
     C** BUT NOT IF JUST CLEARING THE MESSAGE SUBFILE
     C           *IN45     IFEQ '0'                        B1
     C                     WRITEFD0140S4                   *1
     C*
     C** DISPLAY THE SCREEN FOOTER
     C                     WRITEFD0140D0                   *1
     C                     END                             E1
     C*
     C** REDISPLAY THE MAIN SCREEN IF THERE WAS AN ERROR; OTHERWISE
     C** THE CURSOR REPOSITIONS ON THE FIRST INPUT CAPABLE FIELD.
     C           *IN20     IFEQ '1'                        B1
     C           *IN21     OREQ '1'                        *1
     C           *IN46     OREQ '1'                        *1
     C           *IN22     OREQ '1'                        *1
     C           *IN23     OREQ '1'                        *1
     C           *IN24     OREQ '1'                        *1
     C           *IN25     OREQ '1'                        *1
     C           *IN26     OREQ '1'                        *1
     C           *IN27     OREQ '1'                        *1
     C           *IN28     OREQ '1'                        *1
     C           *IN29     OREQ '1'                        *1
     C                     WRITEFD0140S0                   *1
     C                     END                             E1
     C*
     C           #ZG9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZF  - THIS SUBROUTINE READS THE MAIN SCREEN AND CLEARS ALL   *
     C*        THE ERROR INDICATORS                                   *
     C*                                                               *
     C* CALLED BY : #B                                                *
     C*             #BA                                               *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :     ZA0250                                            *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZF       BEGSR
     C*
     C** READ THE SCREEN
     C**********           READ FD0140S0                 70                                   CAAA03
     C                     READ FD0140H1                 70                                   CAAA03
     C*
     C** CLEAR PROGRAM MESSAGE QUEUE
     C                     CALL 'ZA0250'
     C*
     C** RESET ALL ERROR INDICATORS
     C                     MOVE '0'       *IN20
     C                     MOVE '0'       *IN21
     C                     MOVE '0'       *IN22
     C                     MOVE '0'       *IN23
     C                     MOVE '0'       *IN24
     C                     MOVE '0'       *IN25
     C                     MOVE '0'       *IN26
     C                     MOVE '0'       *IN27
     C                     MOVE '0'       *IN28
     C                     MOVE '0'       *IN29
     C                     MOVE '0'       *IN30
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN33
     C                     MOVE '0'       *IN34
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN46
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN61
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN64
     C*
     C           #ZF9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*                                                               *
     C* #ZQ  - THIS SUBROUTINE IS USED TO SCALE HIGH AND LOW SPOT     *
     C*        RATES                                                  *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C* CALLS :     ZA1150 - CONVERT RATE TO SCALE RATE               *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*
     C           #ZQ       BEGSR
     C*********************Z-ADDSEXP      @@SXP1                          S01194
     C                     Z-ADDA6SCEX    @@SXP1                          S01194
     C                     Z-ADD@SEXPB    @@SXP2
     C*********************Z-ADDLOSP      @@INRT                          S01194
     C                     Z-ADDA6LSPR    @@INRT                          S01194
     C                     MOVE 'M'       @@FCMD
     C                     EXSR ZA1150
     C*
     C** CHECK FOR RETURN ERROR CODE
     C           @@ERCD    IFEQ 1
     C           @@ERCD    OREQ 3
     C*
     C** SET UP DATABASE ERROR FIELDS
     C                     MOVEL'        'DBFILE           ***************
     C                     MOVEL'905'     DBASE            * DBERROR 905 *
     C*********************MOVELLOSP      DBKEY            ***************S01194
     C                     MOVELA6LSPR    DBKEY                           S01194
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     GOTO #ZQ9
     C                     END
     C*
     C** Move scaled spot rate
     C                     MOVE @@SCRT    DDSPT1
     C*********************Z-ADDHGSP      @@INRT                          S01194
     C                     Z-ADDA6HSRT    @@INRT                          S01194
     C                     EXSR ZA1150
     C*
     C** CHECK FOR RETURN ERROR CODE
     C           @@ERCD    IFEQ 1
     C           @@ERCD    OREQ 3
     C*
     C** SET UP DATABASE ERROR FIELDS
     C                     MOVEL'        'DBFILE           ***************
     C                     MOVEL'905'     DBASE            * DBERROR 905 *
     C*********************MOVELHGSP      DBKEY            ***************S01194
     C                     MOVELA6HSRT    DBKEY                           S01194
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     GOTO #ZQ9
     C                     END
     C*
     C** Move scaled spot rate
     C                     MOVE @@SCRT    DDSPT2
     C*
     C           #ZQ9      ENDSR
     C*
     C/EJECT
     C*                                                               *
     C* #ZR  - THIS SUBROUTINE IS USED TO UNSCALE SCREEN HIGH/LOW     *
     C*        RATES FOR FILE UPDATES                                 *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C* CALLS :     ZA1160 - CONVERT SCALE RATE TO UNSCALED           *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*
     C           #ZR       BEGSR
     C*
     C** Unscale screen low spot rate
     C*********************Z-ADDSEXP      @@SEXP                          S01194
     C                     Z-ADDA6SCEX    @@SEXP                          S01194
     C                     Z-ADDDDSPT1    @@INRT
     C                     EXSR ZA1160
     C                     Z-ADD@@USRT    LOSP
     C                     Z-ADD@@USRT    A6LSPR                          S01194
     C*
     C** Unscale screen high spot rate
     C                     Z-ADDDDSPT2    @@INRT
     C                     EXSR ZA1160
     C                     Z-ADD@@USRT    HGSP
     C                     Z-ADD@@USRT    A6HSRT                          S01194
     C*
     C           #ZR9      ENDSR
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1150 -  Convert rate to scaled rate.                   *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SXP1 - First currency scaling exponent.       *
     C*              @@SXP2 - Second currency scaling exponent.      *
     C*              @@INRT - Rate to be scaled.                     *
     C*              @@FCMD - First Currency Multiply/Divide Ind.    *
     C*                                                              *
     C*     OUTPUT:  @@SCRT - Scaled rate.                           *
     C*              @@ISRT - Inverse of scaled rate.                *
     C*              @@ERCD - Error code.                            *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCF1 - Scaling factor for currency 1.         *
     C*              @@SCF2 - Scaling factor for currency 2.         *
     C*              @@WKA  - Work field, 15,0N.                     *
     C*              @@WKB  - Work field, 15,0N.                     *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1150    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SXP1    @@SXP1  10
     C                     Z-ADD@@SXP2    @@SXP2  10
     C***********          Z-ADD@@INRT    @@INRT 128                      145043
     C                     Z-ADD@@INRT    @@INRT 138                      145043
     C                     MOVE @@FCMD    @@FCMD  1
     C*
     C***********          Z-ADD*ZEROS    @@SCRT 128                      145043
     C***********          Z-ADD*ZEROS    @@ISRT 128                      145043
     C                     Z-ADD*ZEROS    @@SCRT 138                      145043
     C                     Z-ADD*ZEROS    @@ISRT 138                      145043
     C                     Z-ADD*ZEROS    @@ERCD  10
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCF1 100
     C                     Z-ADD*ZEROS    @@SCF2 100
     C                     Z-ADD*ZEROS    @@WKA  150
     C                     Z-ADD*ZEROS    @@WKB  150
     C*
     C**  If the input rate is zero, the two output rates are zero,
     C**  by-pass further processing.
     C           @@INRT    CABEQ0         ZA1159
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the first currency.
     C                     Z-ADD@@SXP1    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF1
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the second currency.
     C                     Z-ADD@@SXP2    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF2
     C*
     C**  If the M/D indicator is M, then the scaled rate is calculated
     C**  as follows....
     C           @@FCMD    IFEQ 'M'                        B1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF1    @@SCRT           *1
     C           @@SCF2    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF1    @@WKA            *1
     C           @@SCF2    DIV  @@INRT    @@WKB     H      *1
     C*
     C**  Otherwise, calculate the rate as follows....
     C                     ELSE                            X1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF2    @@SCRT           *1
     C           @@SCF1    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF2    @@WKA            *1
     C           @@SCF1    DIV  @@INRT    @@WKB     H      *1
     C*
     C                     END                             E1
     C*
     C**  If the work fields are greater than 9999.99999999, set up the
     C**  error codes.
     C***********@@WKA     IFGE 10000                      B1             145043
     C           @@WKA     IFGE 100000                     B1             145043
     C                     Z-ADD1         @@ERCD           *1
     C                     END                             E1
     C***********@@WKB     IFGE 10000                      B1             145043
     C           @@WKB     IFGE 100000                     B1             145043
     C                     Z-ADD2         @@ERCD           *1
     C                     END                             E1
     C***********@@WKA     IFGE 10000                      B1             145043
     C***********@@WKB     ANDGE10000                      B1             145043
     C           @@WKA     IFGE 100000                     B1             145043
     C           @@WKB     ANDGE100000                     B1             145043
     C                     Z-ADD3         @@ERCD           *1
     C                     END                             E1
     C*
     C           ZA1159    ENDSR                           **ZA1159**
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1160 -  Convert scaled rate to unscaled rate.          *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SEXP - Scaling exponent.                      *
     C*              @@INRT - Rate to be unscaled.                   *
     C*                                                              *
     C*     OUTPUT:  @@USRT - Unscaled rate.                         *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCAF - Scaling factor.                        *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1160    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SEXP    @@SEXP  10
     C***********          Z-ADD@@INRT    @@INRT 128                      145043
     C                     Z-ADD@@INRT    @@INRT                          145043
     C*
     C***********          Z-ADD*ZEROS    @@USRT 128                      145043
     C                     Z-ADD*ZEROS    @@USRT 138                      145043
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCAF 100
     C*
     C**  If the input rate is zero, the output rate is zero, by-pass
     C**  further processing.
     C           @@INRT    CABEQ0         ZA1169
     C*
     C**  Determine the scaling factor from the scaling exponent.
     C                     Z-ADD@@SEXP    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCAF
     C*
     C**  Calculate the unscaled rate.
     C           @@INRT    DIV  @@SCAF    @@USRT    H
     C*
     C           ZA1169    ENDSR                           **ZA1169**
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BA  - THIS SUBROUTINE LOOPS UNTIL CF3 IS PRESSED OR CF12 IS  *
     C*        PRESSED AT THE INITIAL LEVEL                           *
     C*                                                               *
     C* CALLED BY : #B                                                *
     C*                                                               *
     C* CALLS :     #BAA                                              *
     C*             #BAB                                              *
     C*             #BAC                                              *
     C*             #ZH                                               *
     C*             #ZI                                               *
     C*             #ZJ                                               *
     C*             #ZK                                               *
     C*             #BAD                                              *
     C*             #BAE                                              *
     C*             #ZG                                               *
     C*             #ZF                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @CCNM  - SAVED CURRENCY NAME                      *
     C*             @CCY   - SAVED CURRENCY                           *
     C*             @FLDS  - SAVED HIGH/LOW/SPOT RATES + PERIOD 1 & 2 *
     C*             @CNT   - COUNT OF SUBFILE RECORDS                 *
     C*             @DDS   - DATA STRUCTURE HOLDING THE SAVED S/FILE  *
     C*             @PDX3  - SAVED PERIOD SNAME 3                     *
     C*             @03BI  - SAVED HIGH RATE 3                        *
     C*             @03OF  - SAVED LOW RATE 3                         *
     C*             @X     - MULTIPURPOSE INDEX                       *
     C*             @MSGID - MESSAGE ID TO SEND TO ZA0240             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BA       BEGSR
     C*
     C** LOOP HERE UNTIL CF3 OR CF12 AT THE INITIAL LEVEL
     C           *INKC     DOWEQ'0'                        B1
     C*
     C           #BA1      TAG                             *1
     C*
     C** IF ACTION CODE IS BLANK DEFAULT TO E
     C           DDACTN    IFEQ ' '                        B*2
     C                     MOVE 'E'       DDACTN           **2
     C                     END                             E*2
     C*
     C** VALIDATE ACTION CODE
     C           DDACTN    IFNE 'A'                        B*2
     C           DDACTN    ANDNE'D'                        **2
     C           DDACTN    ANDNE'E'                        **2
     C           DDACTN    ANDNE'I'                        **2
     C                     MOVEL'FDM0101' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       *IN20            **2
     C*
     C** RESET SUBFILE RECORDS
     C           *IN75     IFEQ '0'                        B**3
     C           1         DO   @CNT      @X               B***4
     C           @X        CHAINFD0140S5             78    ****4
     C           @X        OCUR @DDS                       ****4
     C                     MOVE @03OF     DD03OF           ****4
     C                     MOVE @03BI     DD03BI           ****4
     C                     MOVE @PDX3     DDPDX3           ****4
     C                     UPDATFD0140S5                   ****4
     C                     END                             E***4
     C                     END                             E**3
     C*
     C** NOW MOVE THE OTHER FIELDS
     C           *IN75     IFEQ '0'                        B**3
     C                     MOVE @CCNM     DDCCNM           ***3
     C                     MOVE @FLDS     DDFLDS           ***3
     C                     END                             E**3
      **                                                                  S01319
     C                     ELSE                            X*2            S01319
      **                                                                  S01319
      **Get*MPHAS*to*find*Midas*phase**********************************                S01319 CCB020
     C********** *NAMVAR   DEFN           MPHAS                                        S01319 CCB020
     C**********           IN   MPHAS                                                  S01319 CCB020
     C**********           UNLCKMPHAS                                                  S01319 CCB020
      *                                                                   S01319
      **If*the*system*is*not*in*Next*Day*Setup*(TM*takeon*is*not*******                S01319 CCB020
      **being*run),****************************************************                S01319 CCB020
     C********** PHASE     IFNE 'D'                                                    S01319 CCB020
     C*                                                                   S01319
      ** If multibranching, -                                             S01319
     C           @MBIN     IFEQ 'Y'                                       S01319
      **                                                                  S01319
      ** - check the action and default branch security                   S01319
      **                                                                  S01319
     C                     CALL 'ZVACTBU'                                 S01319
     C                     PARM           DDACTN                          S01319
     C                     PARM           DBRN                            S01319
     C                     PARM           @ERR                            S01319
      **                                                                  S01319
     C           @ERR      IFNE 0                                         S01319
      ** Set code and message if ZVACTBU ended in error.                  S01319
     C                     MOVE '1'       *IN20                           S01319
     C                     MOVEL'FXM0290' @MSGID                          S01319
     C                     CALL 'ZA0240'                                  S01319
     C                     PARM           @MSGID                          S01319
     C                     END                                            S01319
      **                                                                  S01319
     C                     ELSE                                           S01319
      **                                                                  S01319
     C                     CALL 'ZVACTU'                                  S01319
     C                     PARM           DDACTN                          S01319
     C                     PARM           @ERR    10                      S01319
      **                                                                  S01319
     C           @ERR      IFNE 0                                         S01319
     C                     MOVE '1'       *IN20                           S01319
     C                     MOVEL'FXM0292' @MSGID                          S01319
     C                     CALL 'ZA0240'                                  S01319
     C                     PARM           @MSGID                          S01319
     C                     END                                            S01319
     C                     END                                            S01319
     C**********           END                                                         S01319 CCB020
      **                                                                  S01319
     C                     END
     C                     MOVE '0'       *IN75            *1
     C*                                                                   S01319
     C           *IN20     IFEQ '0'                                       S01319
     C*
     C           DDACTN    IFNE 'A'                                       S01194
     C                     MOVE DDCCY     @CCY                            S01194
     C                     END                                            S01194
     C*
     C** VALIDATE CF8
     C           *INKH     CASEQ'1'       #BAA             B*2
     C*
     C** VALIDATE CF4
     C           *INKG     CASEQ'1'       #BAB             **2
     C*
     C** VALIDATE CF15
     C           *INKP     CASEQ'1'       #BAC             **2
     C*
     C** VALIDATE CF12
     C           *INKL     CASEQ'1'       #ZH              **2
     C*
     C** CF10
     C*          *INKJ     CASEQ'1'       #ZI              **2
     C*
     C** VALIDATE AMEND MODE
     C           DDACTN    CASEQ'A'       #ZJ              **2
     C*
     C** VALIDATE DELETE MODE
     C           DDACTN    CASEQ'D'       #ZP              **2
     C*
     C** VALIDATE INSERT MODE
     C           DDACTN    CASEQ'I'       #BAD             **2
     C*
     C** PROCESS ENQUIRY
     C           DDACTN    CASEQ'E'       #BAE             **2
     C*
     C                     END                             E*2
     C*                                                                   S01319
     C                     END                                            S01319
     C*
     C** CHECK FOR DATA BASE ERROR
     C           *INU7     CABEQ'1'       #BA9             *1
     C*
     C** CHECK FOR CF3
     C           *INKC     CABEQ'1'       #BA9             *1
     C*
     C** RESET SELECT FLAG
     C                     MOVE '0'       *IN66            *1
     C                     MOVE '0'       *IN69            *1
     C*
     C** IF CHANGE OF ACTION CODE TOOK PLACE DURING LEVEL 2 SCREEN
     C** PROCESS, CONTINUE WITH THE SPECIFIC PROCESSING FOR THAT
     C** ACTION CODE
     C           *IN75     CABEQ'1'       #BA1             *1
     C*
     C** WRITE SCREEN
     C                     EXSR #ZG                        *1
     C*
     C** READ SCREEN
     C                     EXSR #ZF                        *1
     C*
     C                     END                             E1
     C*
     C           #BA9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZL  - THIS SUBROUTINE CONVERTS A NUMBER TO AN ALPHA FIELD FOR*
     C*        OUTPUT TO THE DISPLAY FILE                             *
     C*                                                               *
     C* CALLED BY : #BAA                                              *
     C*             #BAB                                              *
     C*             #BACB                                             *
     C**************#ZN************************************************   S01319
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @DECP  - INSERTS '.' INTO FIELD                   *
     C*             @DEC1  - USED TO SEPARATE THE DECIMAL PART OF @FLD1
     C*             @DEC2  - USED TO INSERT THE DECIMAL PART OF @FLD2 *
     C*             @FLD1  - INPUT NUMERIC FIELD                      *
     C*             @FLD2  - OUTPUT FIELD ALPHA                       *
     C*             @INT1  - USED TO GET THE INTEGER FROM @FLD1       *
     C*             @INT2  - USED TO INSERT THE INTEGER IN @FLD2      *
     C*             @L     - USED AS AN INDEX TO BLANK LEADING 0'S    *
     C*             @SIGN  - USED TO ENTER SIGN INTO @FLD2            *
     C*             @SZ    - ARRAY FOR ZERO SUPRESSION                *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZL       BEGSR
     C*
     C           @FLD1     IFLT 0                          B1
     C                     MOVE '-'       @SIGN            *1
     C                     Z-SUB@FLD1     @FLD1            *1
     C                     ELSE                            X1
     C                     MOVE '+'       @SIGN            *1
     C                     END                             E1
     C                     MOVE '.'       @DECP
     C                     Z-ADD@INT1     @INT2
     C                     Z-ADD@DEC1     @DEC2
     C*
     C***ONLY*SUPRESS*ZEROS*IF*THE*FIELD*IS*BEING*FORMATTED*FOR********** S01319
     C***DISPLAY********************************************************* S01319
     C************IN90*****IFEQ '0'                        B1             S01319
     C*
     C*******K OUT FIELD IF IT IS ZERO
     C           @FLD1     IFEQ 0                          B*2
     C                     MOVE *BLANKS   @FLD2            **2
     C                     MOVE '0.00+'   @FLD2            **2
     C                     ELSE                            X*2
     C*
     C** NOW BLANK LEADING ZEROS
     C                     MOVEA@FLD2     @SZ              **2
     C           1         DO   5         @L               B**3
     C           @SZ,@L    CABNE'0'       #ZL8             ***3
     C                     MOVE *BLANKS   @SZ,@L           ***3
     C                     END                             E**3
     C           #ZL8      TAG                             #ZL8
     C                     MOVEA@SZ       @FLD2            **2
     C                     END                             E*2
     C*********************END                             E1             S01319
     C*
     C           #ZL9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZA  - THIS SUBROUTINE READS A RECORD FROM THE FILE FDCCYPLL  *
     C*        IT WILL IGNORE DELETED RECORDS. IT WILL RETURN *IN73   *
     C*        ON FOR EOF                                             *
     C*                                                               *
     C* CALLED BY : #BAC                                              *
     C*             #BAA                                              *
     C*             #BAB                                              *
     C*             #BACB                                             *
     C*             #ZC                                               *
     C*             #ZK                                               *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZA       BEGSR
     C*
     C** READ RECORD UNTIL THEEND OF THE FILE IS FOUND OR A LIVE RECORD
     C           XPDLTF    DOUEQ' '                        B1
     C           *IN73     OREQ '1'                        *1
     C                     READ FDCCYPLL                 73*1
     C                     END                             E1
     C*
     C           #ZA9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZB  - THIS SUBROUTINE READ THE PREVIOUS RECORD FROM FDCCYPLL *
     C*        IT WILL IGNORE DELETED RECORDS. IT WILL RETURN *IN72   *
     C*        ON FOR BOF                                             *
     C*                                                               *
     C* CALLED BY : #BAB                                              *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZB       BEGSR
     C*
     C* READ THE PREVIOUS RECORD FROM THE FILE UNTIL A LIVE RECORD IS
     C* FOUND OR THE BEGINNING OF THE FILE IS FOUND
     C           XPDLTF    DOUEQ' '                        B1
     C           *IN72     OREQ '1'                        *1
     C                     READPFDCCYPLL                 72*1
     C                     END                             E1
     C*
     C           #ZB9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BAA  - THIS SUBROUTINE PERFORMS THE VALIDATION FOR CF8       *
     C*         IF THE VALIDATION IS SUCCESSFUL THEN IT READS THE     *
     C*         NEXT RECORD                                           *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*                                                               *
     C* CALLS :     #ZA                                               *
     C*             #ZL                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @CCY   - SAVED CURRENCY CODE                      *
     C*             @CNT   - NUMBER OF SUBFILE RECORDS                *
     C*             @CHGD  - SAVED DAY OF LAST UPDATE                 *
     C*             @EXKY  - KEYLIST FOR FDCCYPLL                     *
     C*             @FLD1  - NUMERIC FIELD TO CONVERT TO ALPHA        *
     C*             @FLD2  - ALPHA FIELD CONVERTED FROM NUMERIC       *
     C*             @TSPC  - SAVED TIME  OF LAST UPDATE               *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @RRN1  - RELATIVE RECORD NUMBER FOR POINTS SFILE  *
     C*             @SCCY  - CURRENCY CODE SAVED FROM PREVIOUS READ   *
     C**************@SCRKY*-*KEY*FOR*FDCCYTLL*FROM*DISPLAY*************   S01194
     C*             @XDLUP - SAVED DAY OF LAST UPDATE FDCCYPLL        *
     C*             @XMLUP - SAVED MONTH OF LAST UPDATE FDCCYPLL      *
     C*             @XTLUP - SAVED TIME OF LAST UPDATE FDCCYPLL       *
     C*             @XYLUP - SAVED YEAR OF LAST UPDATE FDCCYPLL       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BAA      BEGSR
     C*
     C** FIRST CHECK THE ACTION CODE IF INVALID EXIT
     C           DDACTN    IFEQ 'I'                        B1
     C*
     C** SEND PROGRAM MESSAGE
     C                     MOVEL'FDM0052' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C*
     C** REVERSE IMAGE ACTION CODE
     C                     MOVE '1'       *IN20            *1
     C*
     C** EXIT SUBROUTINE
     C                     GOTO #BAA9                      *1
     C                     END                             E1
     C*
     C** SETLL IF THE KEY HAS BEEN CHANGED
     C           DDCCY     IFNE @CCY                       B1
     C           @EXKY     SETLLFDCCYPLL                   *1
     C                     END                             E1
     C*
     C** SET LOWER LIMITS IF AT INITIAL LEVEL OR LAST READ
     C** FAILED
     C           *IN71     IFEQ '0'                        B1
     C           *IN73     OREQ '1'                        *1
     C           *IN72     OREQ '1'                        *1
     C           @EXKY     SETLLFDCCYPLL                   *1
     C                     END                             E1
     C*
     C** NOW READ THE FILE
     C                     EXSR #ZA
     C*
     C** NOW READ THE FILE AGAIN IF THE CF7 BEFORE PRODUCED
     C** AN ERROR
     C** BUT NOT FOR A CHANGED KEY
     C           *IN72     IFEQ '1'                        B1
     C           *IN73     ANDEQ'0'                        *1
     C           @CCY      ANDEQDDCCY                      *1
     C                     MOVE '0'       *IN72            *1
     C*
     C** GET THE NEXT RECORD IF THE CCY IS NOT BLANK
     C           DDCCY     IFNE *BLANKS                    B*2
     C                     DO   12                         B**3
     C                     EXSR #ZA                        ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     ELSE                            X1
     C*
     C           *IN65     IFEQ '0'                        B*2
     C           DDCCY     ANDNE*BLANKS                    **2
     C           DDCCY     ANDEQ@CCY                       **2
     C                     DO   12                         B**3
     C                     EXSR #ZA                        ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** SET OFF SUCCESSFUL READ INDICATOR
     C                     MOVE '0'       *IN65
     C*
     C** IF *IN73 IS SET ON THEN SIGNAL END OF FILE MESSAGE
     C           *IN73     IFEQ '1'                        B1
     C                     MOVEL'FDM0053' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     GOTO #BAA9
     C                     END                             E1
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           1         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** FILL FIELDS AS THE TRANSACTION WAS SUCCESSFUL
     C*
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN71
     C*
     C** FIRST GET ALL THE EXCHANGE RATES RECORDS
     C** MOVE THE FIELDS IN FROM THE FIRST RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01OF
     C                     MOVE XPPRDX    DDPDX1
     C                     MOVE XPCCY     @SCCY
     C** NOW FOR THE SECOND RECORD
     C                     EXSR #ZA
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B1
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '001'     DBASE            * DB ERROR 001*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #BAA9                      *1
     C                     END                             E1
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           2         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02OF
     C                     MOVE XPPRDX    DDPDX2
     C                     MOVE XPCCY     @SCCY
     C*
     C** NOW LOOP TO FILL UP THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET THE SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             77    *1
     C** NOW FOR THE THIRD RECORD
     C                     EXSR #ZA                        *1
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B*2
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '002'     DBASE            * DB ERROR 002*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     GOTO #BAA9                      **2
     C                     END                             E*2
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           @RRN1     ADD  2         @OCR    20                      E13880
     C           @OCR      OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03BI           *1
     C                     Z-ADDXPHIPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03OF           *1
     C                     MOVE XPPRDX    DDPDX3           *1
     C                     MOVE XPCCY     @SCCY            *1
     C*
     C** UPDATE THE SUBFILE RECORD
     C                     UPDATFD0140S5                   *1
     C*
     C                     END                             E1
     C*
     C** NOW GET THE CURRENCY NAME  AND SPOT RATES
     C*********************MOVE @SCCY     DDCCY                           S01194
     C***********@SCRKY    CHAINFDCCYTLL             68                   S01194
     C*                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*BLANK ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM @SCCY     @WRK3   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*
     C** IF THE CURRENCY DOES NOT EXIST DATA BASE ERROR
     C*********  *IN68     IFEQ '1'                        B1             S01194
     C           @RTCD     IFNE *BLANK                     B1             S01194
     C*********            MOVE 'FDCCYPLL'DBFILE           ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *             *S01194
     C                     MOVE '003'     DBASE            * DB ERROR 003*
     C*********            MOVE DDCCY     DBKEY            ***************S01194
     C                     MOVEL@CCY      DBKEY            * DBERROR 003 *S01194
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BAA9                      *1
     C                     END                             E1
     C*********************MOVE CCNM      DDCCNM                          S01194
     C                     MOVE A6CYCD    DDCCY                           S01194
     C                     MOVE A6CYNM    DDCCNM                          S01194
     C****SAVE THE SPOT HIGH AND LOW RATES.                               E13880
     C*********************Z-ADDHGSP      @@HGSP 138               E13880 S01194
     C*********************Z-ADDLOSP      @@LOSP 138               E13880 S01194
     C                     Z-ADDA6HSRT    @@HGSP 138                      S01194
     C                     Z-ADDA6LSPR    @@LOSP 138                      S01194
     C***                                                                 E13880
     C*
     C** Scale high/low spot rate for display
     C                     EXSR #ZQ
     C           *INU7     CABEQ'1'       #BAA9
     C*
     C** SAVE THE TIME AND DATE FIELDS
     C                     Z-ADDXPDLUP    @XDLUP
     C                     MOVE XPMLUP    @XMLUP
     C                     Z-ADDXPYLUP    @XYLUP
     C                     Z-ADDXPTLUP    @XTLUP
     C                     Z-ADDXPTLUP    @XTLUP
     C                     Z-ADDCHGD      @CHGD
     C                     Z-ADDTSPC      @TSPC
     C*
     C           #BAA9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BAB  - THIS SUBROUTINE PERFORMS THE VALIDATION FOR CF7       *
     C*         IF THE VALIDATION IS SUCCESSFUL THEN IT READS THE     *
     C*         PREVIOUS RECORD                                       *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*                                                               *
     C* CALLS :     #ZB                                               *
     C*             #ZL                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @CCY   - SAVED CURRENCY CODE                      *
     C*             @CNT   - NUMBER OF SUBFILE RECORDS                *
     C*             @CHGD  - SAVED DAY OF LAST UPDATE                 *
     C*             @EXKY  - KEYLIST FOR FDCCYPLL                     *
     C*             @FLD1  - NUMERIC FIELD TO CONVERT TO ALPHA        *
     C*             @FLD2  - ALPHA FIELD CONVERTED FROM NUMERIC       *
     C*             @TSPC  - SAVED TIME  OF LAST UPDATE               *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @RRN1  - RELATIVE RECORD NUMBER FOR POINTS SFILE  *
     C*             @SCCY  - CURRENCY CODE SAVED FROM PREVIOUS READ   *
     C**************@SCRKY - KEY FOR FDCCYTLL FROM DISPLAY*************   S01194
     C*             @XDLUP - SAVED DAY OF LAST UPDATE FDCCYPLL        *
     C*             @XMLUP - SAVED MONTH OF LAST UPDATE FDCCYPLL      *
     C*             @XTLUP - SAVED TIME OF LAST UPDATE FDCCYPLL       *
     C*             @XYLUP - SAVED YEAR OF LAST UPDATE FDCCYPLL       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BAB      BEGSR
     C*
     C** FIRST CHECK THE ACTION CODE IF INVALID EXIT
     C           DDACTN    IFEQ 'I'                        B1
     C*
     C** SEND PROGRAM MESSAGE
     C                     MOVEL'FDM0052' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C*
     C** REVERSE IMAGE ACTION CODE
     C                     MOVE '1'       *IN20            *1
     C*
     C** EXIT SUBROUTINE
     C                     GOTO #BAB9                      *1
     C                     END                             E1
     C*
     C** SET OFF SUCCESSFUL READ INDICATOR
     C                     MOVE '0'       *IN65
     C*
     C** SET THE POSITION IN THE FILE
     C           @EXKY     SETLLFDCCYPLL
     C*
     C** NOW READ THE FILE
     C                     DO   12                         B1
     C                     EXSR #ZB                        *1
     C                     END                             E1
     C*
     C** NOW READ THE FILE AGAIN IF THE CF8 BEFORE PRODUCED
     C** AN ERROR
     C           *IN73     IFEQ '1'                        B1
     C           *IN72     ANDEQ'0'                        *1
     C                     MOVE '0'       *IN73            *1
     C                     END                             E1
     C*
     C*
     C** IF *IN72 IS SET ON THEN SIGNAL BEGINNING OF FILE MESSAGE
     C           *IN72     IFEQ '1'                        B1
     C                     MOVEL'FDM0054' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     GOTO #BAB9                      *1
     C                     END                             E1
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           1         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C*
     C** FILL FIELDS AS THE TRANSACTION WAS SUCCESSFUL
     C*
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN71
     C*
     C** FIRST GET ALL THE EXCHANGE RATES RECORDS
     C** MOVE THE FIELDS IN FROM THE FIRST RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01OF
     C                     MOVE XPPRDX    DDPDX1
     C                     MOVE XPCCY     @SCCY
     C** NOW FOR THE SECOND RECORD
     C                     EXSR #ZA
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B1
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '004'     DBASE            * DB ERROR 004*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #BAB9                      *1
     C                     END                             E1
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           2         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02OF
     C                     MOVE XPPRDX    DDPDX2
     C                     MOVE XPCCY     @SCCY
     C*
     C** NOW LOOP TO FILL UP THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET THE SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             77    *1
     C** NOW FOR THE THIRD RECORD
     C                     EXSR #ZA                        *1
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B*2
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '005'     DBASE            * DB ERROR 005*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     GOTO #BAB9                      **2
     C                     END                             E*2
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           @RRN1     ADD  2         @OCR    20                      E13880
     C           @OCR      OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C*
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03BI           *1
     C                     Z-ADDXPHIPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03OF           *1
     C                     MOVE XPPRDX    DDPDX3           *1
     C                     MOVE XPCCY     @SCCY            *1
     C*
     C** UPDATE THE SUBFILE RECORD
     C                     UPDATFD0140S5                   *1
     C*
     C                     END                             E1
     C*
     C** NOW GET THE CURRENCY NAME
     C*********************MOVE @SCCY     DDCCY                           S01194
     C***********@SCRKY    CHAINFDCCYTLL             68                   S01194
     C*
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*BLANK ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM @SCCY     @WRK3   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01194
     C** IF THE CURRENCY DOES NOT EXIST DATA BASE ERROR
     C*********  *IN68     IFEQ '1'                        B1             S01194
     C           @RTCD     IFNE *BLANK                     B1             S01194
     C*********            MOVE 'FDCCYPLL'DBFILE           ***************S01194
     C                     MOVE '006'     DBASE            * DB ERROR 006*
     C*********            MOVE DDCCY     DBKEY            ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *              S01194
     C                     MOVEL@CCY      DBKEY            *              S01194
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BAB9                      *1
     C                     END                             E1
     C****SAVE THE SPOT HIGH AND LOW RATES.                               E13880
     C*********            Z-ADDHGSP      @@HGSP 138               E13880 S01194
     C*********            Z-ADDLOSP      @@LOSP 138               E13880 S01194
     C                     Z-ADDA6HSRT    @@HGSP 138                      S01194
     C                     Z-ADDA6LSPR    @@LOSP 138                      S01194
     C***                                                                 E13880
     C*********            MOVE CCNM      DDCCNM                          S01194
     C*********            Z-ADDHGSP      DDSPT2                          S01194
     C*********            Z-ADDLOSP      DDSPT1                          S01194
     C                     MOVE A6CYCD    DDCCY                           S01194
     C                     MOVE A6CYNM    DDCCNM                          S01194
     C                     Z-ADDA6HSRT    DDSPT2                          S01194
     C                     Z-ADDA6LSPR    DDSPT1                          S01194
     C*
     C** SAVE TIME AND DATE FIELDS
     C                     Z-ADDXPDLUP    @XDLUP
     C                     MOVE XPMLUP    @XMLUP
     C                     Z-ADDXPYLUP    @XYLUP
     C                     Z-ADDXPTLUP    @XTLUP
     C                     Z-ADDCHGD      @CHGD
     C                     Z-ADDTSPC      @TSPC
     C*
     C           #BAB9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BAC  - THIS SUBROUTINE PERFORMS THE VALIDATION FOR CF15      *
     C*         AND CONTROLS THE SUBFILE                              *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*                                                               *
     C* CALLS :     #ZG                                               *
     C*             #BACA                                             *
     C*             #BACB                                             *
     C*             #BACC                                             *
     C*             #ZH                                               *
     C*             ZA0240                                            *
     C*             ZA0250                                            *
     C*                                                               *
     C* USES :      @EXKY  - KEY LIST FOR FDCCYPLL                    *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @RRN   - RELATIVE RECORD NUMBER FOR ENQUIRY SFILE *
     C**************@SCRKY - KEY FOR FDCCYTLL**************************   S01194
     C*                                                               *
     C*****************************************************************
     C*
     C           #BAC      BEGSR
     C*
     C** CLEAR MESSAGE SUBFILE
     C                     MOVE '1'       *IN45
     C                     EXSR #ZG
     C                     MOVE '0'       *IN45
     C*
     C                     MOVE '1'       *IN71
     C*
     C** LOOP UNTIL FINISHED WITH
     C                     MOVE '1'       *IN66
     C                     MOVE '1'       *IN65
     C                     MOVE '0'       *IN55
     C*
     C** CLEAR MESSAGE QUEUE AND BLANK IT OUT
     C                     CALL 'ZA0250'
     C*
     C** INITIALISE SUBFILE FIELDS
     C                     Z-ADD1         @RRN
     C                     MOVE '1'       *IN41
     C                     MOVE '0'       *IN40
     C                     WRITEFD0140S2
     C                     MOVE '1'       *IN40
     C                     MOVE '0'       *IN41
     C*
     C** GET THE FIRST LIVE RECORD ON THE CURRENCY FILE THAT
     C** ALSO HAS RECORDS ON THE POINTS RATE FILE
     C***********@SCRKY    SETLLFDCCYTLL                                  S01194
     C           DDCCY     SETLLSDCURRL0                                  S01194
     C           *IN77     DOUEQ'1'                        B1
     C***********          READ FDCCYTLL                 73*1             S01194
     C                     READ SDCURRL0                 73*1             S01194
      *                                                                   S01194
     C*********            MOVE CCY       DDCCY            *1             S01194
     C                     MOVE A6CYCD    DDCCY            *1             S01194
     C           @EXKY     SETLLFDCCYPLL                 77*1
     C                     READ FDCCYPLL                 68*1
     C*
     C** CHECK RECORD IS LIVE
     C           *IN77     IFEQ '1'                        B*2
     C           XPDLTF    ANDEQ'*'                        **2
     C                     MOVE '0'       *IN77            **2
     C                     END                             E*2
     C           *IN73     IFEQ '1'                        B*2
     C                     MOVEL'FDM0225' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     GOTO #BAC9                      **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C** FILL SUBFILE UNTIL ROLLUP NOT PRESSED OR FILE END
     C           *IN50     DOUEQ'0'                        B1
     C*
     C           *IN73     IFEQ '0'                        B*2
     C                     EXSR #BACA                      **2
     C                     END                             E*2
     C*
     C** EXIT IF CF3 OR CF12 PRESSED
     C           *INKC     CABEQ'1'       #BAC9            *1
     C           *INKL     CABEQ'1'       #BAC8            *1
     C                     END                             E1
     C*
     C** LOOP UNTIL END OF SELECTIONS
     C           *IN59     DOUEQ'1'                        B1
     C*
     C**  GET OPTION
     C                     EXSR #BACB                      *1
     C*
     C** EXIT ON DB ERROR
     C           *INU7     CABEQ'1'       #BAC9            *1
     C*
     C** LOOP UNTIL NO ERRORS
     C           *IN64     DOUEQ'0'                        B*2
     C                     MOVE '0'       *IN64            **2
     C*
     C** PROCESS DETAILS
     C           *IN59     IFEQ '0'                        B**3
     C                     EXSR #BACC                      ***3
     C                     END                             E**3
     C*
     C** EXIT IF CF3 OR CF12 PRESSED
     C           *INKC     CABEQ'1'       #BAC9            **2
     C           *INKL     CABEQ'1'       #BAC8            **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C** CLEAR THE INPUT FIELDS
     C           #BAC8     TAG                             TAG #BAC8
     C                     MOVE '1'       *IN71
     C                     EXSR #ZH
     C*
     C           #BAC9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BACA -  FILLS UP THE ENQUIRY SUBFILE AND DISPLAYS        IT  *
     C*                                                               *
     C* CALLED BY : #BAC                                              *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @COUNT - COUNTS NUMBER OF RECORDS WRITTEN TO SFILE*
     C*             @EXKY  - KEY LIST FOR FDCCYPLL                    *
     C*             @RRN   - RELATIVE RECORD NUMBER ENQUIRY SUBFILE   *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BACA     BEGSR
     C*
     C** LOOP HERE UNTIL SUBFILE FILLED
     C*
     C                     DO   14                         B1
     C*********************MOVE CCY       DDCCY            *1             S01194
     C                     MOVE A6CYCD    DDCCY            *1             S01194
     C*********************MOVE CCNM      DDCCNM           *1             S01194
     C                     MOVE A6CYNM    DDCCNM           *1             S01194
     C                     MOVE *BLANK    DDOPT            *1
     C                     Z-ADD@RRN      DDSFRN           *1
     C                     WRITEFD0140S3                   *1
     C*
     C** GET THE NEXT LIVE CCY RECORD THAT HAS RELATED RECORDS ON
     C** THE POINT FILE
     C           *IN77     DOUEQ'1'                        B*2
     C           *IN73     OREQ '1'                        **3
     C*********************READ FDCCYTLL                 73**2            S01194
     C                     READ SDCURRL0                 73**2            S01194
      *                                                                   S01194
     C*********************MOVE CCY       DDCCY            **2            S01194
     C                     MOVE A6CYCD    DDCCY            **2            S01194
     C           @EXKY     SETLLFDCCYPLL                 77**2
     C                     READ FDCCYPLL                 68**2
     C           *IN77     IFEQ '1'                        B**3
     C           XPDLTF    ANDEQ'*'                        ***3
     C                     MOVE '0'       *IN77            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C                     ADD  1         @RRN             *1
     C*
     C** CHECK FOR END OF FILE
     C           *IN73     CABEQ'1'       #BACA1           *1
     C*
     C                     END                             E1
     C*
     C           #BACA1    TAG                             #BACA1
     C*
     C** DISPLAY SUBFILE
     C                     TIME           DDTIME
     C                     WRITEFD0140S2
     C                     WRITEFD0140D1
     C*
     C** READ DISPLAY
     C                     READ FD0140S2                 70
     C*
     C           #BACA9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BACB- THIS SUBROUTINE READS THE DISPLAY FOR                  *
     C*        CHANGED RECORDS                                        *
     C*                                                               *
     C* CALLED BY : #BAC                                              *
     C*                                                               *
     C* CALLS :     #ZA                                               *
     C*             #ZL                                               *
     C*                                                               *
     C* USES :      @CCY   - SAVED CURRENCY CODE                      *
     C*             @CNT   - NUMBER OF SUBFILE RECORDS                *
     C*             @CHGD  - SAVED DAY OF LAST UPDATE                 *
     C*             @EXKY  - KEYLIST FOR FDCCYPLL                     *
     C*             @FLD1  - NUMERIC FIELD TO CONVERT TO ALPHA        *
     C*             @FLD2  - ALPHA FIELD CONVERTED FROM NUMERIC       *
     C*             @TSPC  - SAVED TIME  OF LAST UPDATE               *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @RRN1  - RELATIVE RECORD NUMBER FOR POINTS SFILE  *
     C*             @SCCY  - CURRENCY CODE SAVED FROM PREVIOUS READ   *
     C**************@SCRKY - KEY FOR FDCCYTLL FROM DISPLAY*************   S01194
     C*             @XDLUP - SAVED DAY OF LAST UPDATE FDCCYPLL        *
     C*             @XMLUP - SAVED MONTH OF LAST UPDATE FDCCYPLL      *
     C*             @XTLUP - SAVED TIME OF LAST UPDATE FDCCYPLL       *
     C*             @XYLUP - SAVED YEAR OF LAST UPDATE FDCCYPLL       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BACB     BEGSR
     C*
     C** GET NEXT CHANGED RECORD
     C           DDOPT     DOUNE*BLANK                     B1
     C                     READCFD0140S3                 59*1
     C           *IN59     CABEQ'1'       #BACB9           *1
     C                     END                             E1
     C*
     C** SET ON END OF READ INDICATOR
     C                     MOVE '0'       *IN55
     C*
     C** GET REQUIRED RECORD
     C           @EXKY     CHAINFDCCYPLL             68
     C*
     C** FILL UP DISPLAY
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           1         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** FIRST GET ALL THE EXCHANGE RATES RECORDS
     C** MOVE THE FIELDS IN FROM THE FIRST RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01OF
     C                     MOVE XPPRDX    DDPDX1
     C                     MOVE XPCCY     @SCCY
     C** NOW FOR THE SECOND RECORD
     C                     EXSR #ZA
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B1
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '007'     DBASE            * DB ERROR 007*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #BACB9                     *1
     C                     END                             E1
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           2         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C*
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02OF
     C                     MOVE XPPRDX    DDPDX2
     C                     MOVE XPCCY     @SCCY
     C*
     C** NOW LOOP TO FILL UP THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET THE SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             77    *1
     C** NOW FOR THE THIRD RECORD
     C                     EXSR #ZA                        *1
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B*2
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '008'     DBASE            * DB ERROR 008*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     GOTO #BACB9                     **2
     C                     END                             E*2
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           @RRN1     ADD  2         @OCR    20                      E13880
     C           @OCR      OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03BI           *1
     C                     Z-ADDXPHIPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03OF           *1
     C                     MOVE XPPRDX    DDPDX3           *1
     C                     MOVE XPCCY     @SCCY            *1
     C*
     C** UPDATE THE SUBFILE RECORD
     C                     UPDATFD0140S5                   *1
     C*
     C                     END                             E1
     C*
     C** NOW GET THE CURRENCY NAME
     C                     MOVE @SCCY     DDCCY
     C***********@SCRKY    CHAINFDCCYTLL             68                   S01194
     C           @SCCY     CHAINSDCURRL0             68                   S01194
     C*                                                                   S01194
     C*                                                                   S01194
     C** IF THE CURRENCY DOES NOT EXIST DATA BASE ERROR
     C           *IN68     IFEQ '1'                        B1             S01194
     C**********           MOVE 'FDCCYPLL'DBFILE           ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *             *S01194
     C                     MOVE '009'     DBASE            * DB ERROR 009*
     C**********           MOVE DDCCY     DBKEY            ***************S01194
     C                     MOVEL@CCY      DBKEY            * DBERROR 009 *S01194
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BACB9                     *1
     C                     END                             E1
     C**********           MOVE CCNM      DDCCNM                          S01194
     C                     MOVE A6CYNM    DDCCNM                          S01194
     C*
     C****SAVE THE SPOT HIGH AND LOW RATES.                               E13880
     C**********           Z-ADDHGSP      @@HGSP                   E13880 S01194
     C**********           Z-ADDLOSP      @@LOSP                   E13880 S01194
     C                     Z-ADDA6HSRT    @@HGSP                          S01194
     C                     Z-ADDA6LSPR    @@LOSP                          S01194
     C***                                                                 E13880
     C** Scale high/low spot rate for display
     C                     EXSR #ZQ
     C           *INU7     CABEQ'1'       #BACB9
     C*
     C** SAVE THE TIME AND DATE
     C                     Z-ADDXPDLUP    @XDLUP
     C                     MOVE XPMLUP    @XMLUP
     C                     Z-ADDXPYLUP    @XYLUP
     C                     Z-ADDXPTLUP    @XTLUP
     C                     Z-ADDCHGD      @CHGD
     C                     Z-ADDTSPC      @TSPC
     C*
     C           #BACB9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BACC- THIS SUBROUTINE HANDLES THE USE OF THE                 *
     C*        SELECTED RECORDS                                       *
     C*                                                               *
     C* CALLED BY : #BAC                                              *
     C*                                                               *
     C* CALLS :     #ZG                                               *
     C*             #ZF                                               *
     C*             #BAD                                              *
     C*             #ZI                                               *
     C*             #ZK                                               *
     C*             #ZJ                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BACC     BEGSR
     C*
     C** LOOP UNTIL NO ERRORS
     C           *IN64     DOUEQ'0'                        B1
     C*
     C** PROTECT CURRENCY CODE FIELD AND DISPLAY THE SCREEN
     C                     MOVE '1'       *IN46            *1
     C                     EXSR #ZG                        *1
     C*
     C** NOW READ THE SCREEN
     C                     EXSR #ZF                        *1
     C*
     C** EXIT IF CF3 OR CF12 PRESSED
     C           *INKC     CABEQ'1'       #BACC9           *1
     C           *INKL     CABEQ'1'       #BACC9           *1
     C*
     C** PROCESS ACTION
     C** VALIDATE ACTION CODE
     C** INSERT INVALID
     C           DDACTN    IFNE 'A'                        B*2
     C           DDACTN    ANDNE'D'                        **2
     C           DDACTN    ANDNE'E'                        **2
     C                     MOVE '1'       *IN64            **2
     C                     MOVE '1'       *IN20            **2
     C                     MOVEL'FDM0101' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C*
     C** CALL SUBROUTINE TO DEAL WITH THE ACTION CODE
     C           DDACTN    IFEQ 'A'                        B*2
     C                     MOVE '1'       *IN69            **2
     C***                  EXSR #ZJ                        **2
     C*
     C** NOW VALIDATE FIELDS
     C                     MOVE '0'       *IN64            **2
     C                     EXSR #ZC                        **2
     C*
     C** IF VALID UPDATE FILE
     C           *IN64     IFEQ '0'                        B**3
     C                     EXSR #ZD                        ***3
     C*
     C           @UPDWS    IFEQ 'N'                        B***4
     C                     EXSR #ZH                        ****4
     C                     END                             E***4
     C*
     C** OUTPUT MESSAGE FOR SUCCESSFUL AMENDMENT OF RECORD
     C           @UPDWS    IFEQ 'N'                        B***4
     C                     MOVEL@CCY      @DATA  45        ****4
     C                     MOVEL'FDM8028' @MSGID           ****4
     C                     CALL 'ZA0440'                   ****4
     C                     PARM           @MSGID           ****4
     C                     PARM           @DATA            ****4
     C                     ELSE                            X***4
     C                     MOVE 'Y'       @UPDWS           ****4
     C                     END                             E***4
     C*
     C                     END                             E**3
     C                     END                             E*2
     C*
     C           DDACTN    IFEQ 'D'                        B*2
     C                     EXSR #ZK                        **2
     C           *IN64     IFEQ '0'                        B**3
     C*
     C** REDISPLAY SCREEN TO ENABLE CF10, AND PROCESS IT IF SELECTED
     C                     EXSR #ZG                        ***3
     C                     EXSR #ZF                        ***3
     C           *INKJ     IFEQ '1'                        B***4
     C                     EXSR #ZI                        ****4
     C                     END                             E***4
     C*
     C                     END                             E**3
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C           #BACC9    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZH   - THIS SUBROUTINE CLEARS THE INPUT FIELDS               *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*             #BAC                                              *
     C*             #ZI                                               *
     C*             #ZJ                                               *
     C*             #BAD                                              *
     C*                                                               *
     C* CALLS :     ZA0250                                            *
     C*                                                               *
     C* USES :      @CNT   - NUMBER OF SFILE RECORDS                  *
     C*             @DDS   - DATA STRUCTURE HOLDING SAVED VALUES      *
     C*             @X     - INDEX TO @DDS                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZH       BEGSR
     C*
     C** IF AT THE SECOND LEVEL CLEAR ALL THE FIELDS AND RESET
     C** THE LEVEL INDICATOR
     C           *IN71     IFEQ '1'                        B1
     C           *IN66     OREQ '1'                        *1
     C*
     C** CLEAR THE SUBFILE FIELDS
     C           1         DO   @CNT      @X               B**3
     C           @X        CHAINFD0140S5             78    ***3
     C           @X        OCUR @DDS                       ***3
     C                     MOVE *BLANKS   DD03OF           ***3
     C                     MOVE *BLANKS   DD03BI           ***3
     C                     MOVE *BLANKS   DDPDX3           ***3
     C                     UPDATFD0140S5                   ***3
     C                     END                             E**3
     C*
     C** NOW MOVE THE OTHER FIELDS
     C                     MOVE *BLANKS   DDACTN           **2
     C                     MOVE *BLANKS   DDCCY            **2
     C                     MOVE *BLANKS   DDCCNM           **2
     C                     MOVE *BLANKS   DDFLDS           **2
     C                     Z-ADD0         DDSPT1           **2
     C                     Z-ADD0         DDSPT2           **2
     C                     MOVE '0'       *IN71            *1
     C*
     C** CLEAR MESSAGE QUEUE AND ERROR INDICATORS
     C           *INKL     IFEQ '1'                        B*2
     C                     CALL 'ZA0250'                   **2
     C                     END                             E*2
     C                     MOVE '0'       *IN20            *1
     C                     MOVE '0'       *IN21            *1
     C                     MOVE '0'       *IN22            *1
     C                     MOVE '0'       *IN23            *1
     C                     MOVE '0'       *IN24            *1
     C                     MOVE '0'       *IN25            *1
     C                     MOVE '0'       *IN26            *1
     C                     MOVE '0'       *IN27            *1
     C                     MOVE '0'       *IN28            *1
     C                     MOVE '0'       *IN29            *1
     C                     MOVE '0'       *IN30            *1
     C                     MOVE '0'       *IN31            *1
     C                     MOVE '0'       *IN32            *1
     C                     MOVE '0'       *IN33            *1
     C                     MOVE '0'       *IN34            *1
     C                     MOVE '0'       *IN35            *1
     C*
     C                     ELSE                            X1
     C*
     C** SET ON *INKC TO SIGNAL END OF THE PROGRAM
     C                     MOVE '1'       *INKC            *1
     C                     END                             E1
     C*
     C           #ZH9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZI   - THIS SUBROUTINE IS CALLED IF CF10 IS PRESSED. IT      *
     C*         CHECKS THAT NONE OF THE FIELDS HAVE BEEN CHANGED THEN *
     C*         IT WILL THEN CALL THE SUBROUTINE TO UPDATE THE RECORD *
     C*         WITH THE LOGICAL DELETE FLAG SET TO '*'               *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :     #ZD                                               *
     C*             #ZH                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @ACTN  - SAVED ACTION CODE                        *
     C*             @CCNM  - CCY NAME                                 *
     C*             @CCY   - SAVED CURRENCY CODE                      *
     C*             @FLDS  - SAVED LOW/HIGH/SPOT RATES AND PERIODS 1/2*
     C*             @CNT   - NUMBER OF SUBFILE RECORDS                *
     C*             @DDS   - DS HOLDING THE SAVED SFILE VALUES        *
     C*             @PDX3  - SAVED PERIOD SNAME 3                     *
     C*             @03BI  - SAVED HIGH RATE 3                        *
     C*             @03OF  - SAVED LOW RATE 3                         *
     C*             @RRN1  - ENQUIRY SFILE RELATIVE REC NO            *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @X     - MULTIPURPOSE INDEX                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZI       BEGSR
     C*
     C** CHECK FIELDS HAVE NOT BEEN CHANGED
     C                     MOVE '0'       *IN77
     C*
     C** FIRST ALL THE RECORDS IN THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C           @RRN1     OCUR @DDS                       *1
     C           @RRN1     CHAINFD0140S5             77    *1
     C           DD03OF    IFNE @03OF                      B*2
     C           DD03BI    ORNE @03BI                      **2
     C           DDPDX3    ORNE @PDX3                      **2
     C                     MOVE '1'       *IN77            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** NOW THE OTHER FIELDS
     C           *IN77     IFEQ '1'                        B1
     C           DDCCY     ORNE @CCY                       *1
     C           DDACTN    ORNE @ACTN                      *1
     C           DDFLDS    ORNE @FLDS                      *1
     C*
     C                     MOVEL'FDM0104' @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C                     MOVE '1'       *IN20            *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C*
     C** RESET ALL FIELDS, FIRST THE SUBFILE FIELDS
     C           1         DO   @CNT      @X               B*2
     C           @X        CHAINFD0140S5             78    **2
     C           @X        OCUR @DDS                       **2
     C                     MOVE @03OF     DD03OF           **2
     C                     MOVE @03BI     DD03BI           **2
     C                     MOVE @PDX3     DDPDX3           **2
     C                     UPDATFD0140S5                   **2
     C                     END                             E*2
     C*
     C** NOW MOVE THE OTHER FIELDS
     C                     MOVE @ACTN     DDACTN           *1
     C                     MOVE @CCY      DDCCY            *1
     C                     MOVE @CCNM     DDCCNM           *1
     C                     MOVE @FLDS     DDFLDS           *1
     C                     GOTO #ZI9                       *1
     C                     END                             E1
     C*
     C** NOW UPDATE RECORD
     C                     EXSR #ZD
     C*
     C** CLEARDOWN DISPLAY
     C                     EXSR #ZH
     C*
     C** OUTPUT MESSAGE FOR SUCCESSFUL DELETION OF RECORD
     C                     MOVEL@CCY      @DATA  45        *1
     C                     MOVEL'FDM8027' @MSGID           *1
     C                     CALL 'ZA0440'                   *1
     C                     PARM           @MSGID           *1
     C                     PARM           @DATA            *1
     C*
     C           #ZI9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZJ   - THIS SUBROUTINE CONTROLS THE AMEND MODE. IT WILL FIRST*
     C*         CHECK THAT THE LOCATION CODE HAS NOT BEEN CHANGED     *
     C*         IT WILL THEN CALL THE SUBROUTINE TO VALIDATE THE      *
     C*         DATA THEN IF THERE ARE NO ERRORS IT WILL CALL THE     *
     C*         SUBROUTINE TO UPDATE THE FILE                         *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :     #ZC                                               *
     C*             #ZD                                               *
     C*             #ZH                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @CCY   - SAVED CURRENCY CODE                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZJ       BEGSR
     C*
     C** IF VALID ENQUIRE/DELETE ON PREVIOUS SCREEN, GO DIRECTLY TO
     C** AMEND VALIDATION
     C           @ACTN     IFEQ 'E'                        B1
     C           @ACTN     OREQ 'D'                        *1
     C           @IN21     IFEQ '0'                        B*2
     C           DDCCY     ANDEQ@CCY                       **2
     C                     GOTO #ZJ3                       **2
     C                     END                             E*2
     C                     END                             E*1
     C*
     C           #ZJ1      TAG
     C*
     C** CHECK RECORD HAS NOT BEEN SELECTED FOR DELETION AT THE
     C** INITIAL SCREEN
     C*          DDCCY     IFEQ *BLANKS                    B1
     C*                    MOVEL'FDM0125' @MSGID           *1
     C*                    CALL 'ZA0240'                   *1
     C*                    PARM           @MSGID           *1
     C*                    MOVE '1'       *IN20            *1
     C*                    GOTO #ZJ9                       *1
     C*                    END                             E1
     C*
     C**         DDCCY     IFNE @CCY                       B1
     C**                   MOVEL'FDM0221' @MSGID           *1
     C**                   CALL 'ZA0240'                   *1
     C**                   PARM           @MSGID           *1
     C**                   MOVE '1'       *IN64            *1
     C**                   MOVE '1'       *IN21            *1
     C**                   MOVE @CCY      DDCCY            *1
     C**                   GOTO #ZJ9                       *1
     C**                   END                             E1
     C*                                                                   S01194
     C                     MOVE DDCCY     @CCY                            S01194
     C*                                                                   S01194
     C** VALIDATE CURRENCY CODE AND OUTPUT RECORD
     C                     EXSR #ZZ
     C*          *IN21     CABEQ'1'       #ZJ9
     C           *IN21     IFEQ '1'                        B1
     C*
     C** SET OFF ANY INDICATORS SET IN PREVIOUS POINTS SUBFILE;
     C** OTHERWISE ANY FIELDS THAT WERE IN REVERSE IMAGE WILL
     C** STILL BE DISPLAYED IN REVERSE IMAGE.
     C           1         DO   @CNT      @RRN1            B*2
     C           @RRN1     CHAINFD0140S5             77    **2
     C                     MOVE '0'       *IN30            **2
     C                     MOVE '0'       *IN31            **2
     C                     MOVE '0'       *IN34            **2
     C                     MOVE '0'       *IN35            **2
     C                     UPDATFD0140S5                   **2
     C                     END                             E*2
     C                     GOTO #ZJ9                       *1
     C                     END                             E1
     C*
     C           #ZJ2      TAG
     C*
     C** DISPLAY SCREEN
     C                     EXSR #ZG
     C** READ SCREEN
     C                     EXSR #ZF
     C*
     C** IF CURRENCY CODE IS BLANK
     C*          DDCCY     IFEQ *BLANKS                    B1
     C*                    MOVE '1'       *IN71            *1
     C*                    EXSR #ZH                        *1
     C*                    GOTO #ZJ9                       *1
     C*                    END                             E1
     C*
     C** VALIDATE CF12
     C           *INKL     CASEQ'1'       #ZH
     C*
     C** VALIDATE CF8
     C           *INKH     CASEQ'1'       #BAA
     C*
     C** VALIDATE CF7
     C           *INKG     CASEQ'1'       #BAB
     C                     END
     C*
     C** IF CMD 3 OR 12 EXIT SUBROUTINE
     C           *INKC     CABEQ'1'       #ZJ9
     C           *INKL     CABEQ'1'       #ZJ9
     C           *IN69     CABEQ'1'       #ZJ9
     C*
     C** IF CMD 8 OR CMD7
     C           *INKH     IFEQ '1'                        B1
     C           *INKG     OREQ '1'                        B1
     C                     GOTO #ZJ9                       *1
     C                     END                             E1
     C*
     C** VALIDATE CF15
     C           *INKP     IFEQ '1'                        B1
     C                     MOVE '1'       *IN75            *1
     C                     GOTO #ZJ9                       *1
     C                     END                             E1
     C*
     C**  PROCESSING FOR WHEN THERE IS CHANGE IN ACTION CODE OR
     C**  CURRENCY AT SCREEN LEVEL 2
     C           DDACTN    IFNE @ACTN                      B1
     C           DDCCY     ORNE @CCY                       *1
     C*
     C**  STORE ACTION CODE AND CURRENCY - THESE ARE BLANKED OUT
     C**  IN #ZH
     C                     MOVE DDACTN    @ACTN            *1
     C                     MOVE DDCCY     @CCY             *1
     C           DDACTN    IFNE 'I'                        B*2
     C*
     C** MUST BLANK OUT ALL FIELDS FOR ACTION CODE NOT 'I' IN CASE
     C** ACTION CODE AND/OR CURRENCY CODE ARE INVALID
     C                     MOVE '1'       *IN71            **2
     C                     EXSR #ZH                        **2
     C                     ELSE                            X*2
     C*
     C**  ONLY CURRENCY NAME IS TO BE BLANKED OUT IN CASE OF
     C**  INVALID ACTION CODE AND/OR CURRENCY CODE
     C                     MOVE *BLANKS   DDCCNM           **2
     C                     END                             E*2
     C*
     C**  RESET ACTION CODE AND CURRENCY CODE
     C                     MOVE @ACTN     DDACTN           *1
     C                     MOVE @CCY      DDCCY            *1
     C           DDACTN    IFNE 'A'                        B*2
     C                     MOVE '1'       *IN75            **2
     C                     GOTO #ZJ9                       **2
     C                     ELSE                            X*2
     C*
     C**  IF ACTION CODE IS 'A', PROCESSING CAN BE CONTINUED
     C**  DIRECTLY IN THIS ROUTINE
     C                     GOTO #ZJ1                       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** NOW VALIDATE FIELDS
     C*
     C           #ZJ3      TAG
     C*
     C                     MOVE '0'       *IN64
     C                     EXSR #ZC
     C           *IN64     CABEQ'1'       #ZJ2
     C*
     C** IF VALID UPDATE FILE
     C           *IN64     IFEQ '0'                        B1
     C                     EXSR #ZD                        *1
     C*
     C           @UPDWS    IFEQ 'N'                        B*2
     C                     EXSR #ZH                        **2
     C                     END                             E*2
     C*
     C** OUTPUT MESSAGE FOR SUCCESSFUL AMENDMENT OF RECORD
     C           @UPDWS    IFEQ 'N'                        B*2
     C                     MOVEL@CCY      @DATA  45        **2
     C                     MOVEL'FDM8028' @MSGID           **2
     C                     CALL 'ZA0440'                   **2
     C                     PARM           @MSGID           **2
     C                     PARM           @DATA            **2
     C                     ELSE                            X*2
     C                     MOVE 'N'       @UPDWS           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C           #ZJ9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZK   - THIS SUBROUTINE SAVES THE SCREEN FIELDS AND SETS ON   *
     C*         THE DELETE MODE INDICATOR                             *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :     ZA0240                                            *
     C*                                                               *
     C* USES :      @ACTN  - SAVED ACTION CODE                        *
     C*             @CCNM  - SAVED CURRENCY NAME                      *
     C*             @CCY   - SAVED CURRENCY                           *
     C*             @FLDS  - SAVED LOW/HIGH/SPOT RATES AND PERIODS 1/2*
     C*             @CNT   - COUNT OF SUBFILE RECORDS                 *
     C*             @DDS   - DATA STRUCTURE HOLDING THE SAVED S/FILE  *
     C*             @EXKY  - KEY LIST FDCCYPLL                        *
     C*             @PDX3  - SAVED PERIOD SNAME 3                     *
     C*             @03BI  - SAVED HIGH RATE 3                        *
     C*             @03OF  - SAVED LOW RATE 3                         *
     C*             @RRN1  - REL REC NO OF POINTS SFILE
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @X     - MULTIPURPOSE INDEX                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZK       BEGSR
     C*
     C** CHECK RECORD HAS NOT BEEN SELECTED FOR DELETION AT THE
     C** INITIAL SCREEN
     C           @CCY      IFEQ *BLANKS                    B1
     C                     MOVEL'FDM0125' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN20            *1
     C** RESET ALL FIELDS
     C           1         DO   @CNT      @X               B*2
     C           @X        CHAINFD0140S5             78    **2
     C           @X        OCUR @DDS                       **2
     C                     MOVE *BLANKS   DD03OF           **2
     C                     MOVE *BLANKS   DD03BI           **2
     C                     MOVE *BLANKS   DDPDX3           **2
     C                     UPDATFD0140S5                   **2
     C                     END                             E*2
     C*
     C** NOW MOVE THE OTHER FIELDS
     C                     MOVE *BLANKS   DDCCY            *1
     C                     MOVE *BLANKS   DDCCNM           *1
     C                     MOVE *BLANKS   DDFLDS           *1
     C                     Z-ADD0         DDSPT1           *1
     C                     Z-ADD0         DDSPT2           *1
     C                     GOTO #ZK9                       *1
     C                     END                             E1
     C*
     C** CHECK FIELDS HAVE NOT BEEN CHANGED
     C                     MOVE '0'       *IN77
     C           1         DO   @CNT      @RRN1            B1
     C           @RRN1     OCUR @DDS                       *1
     C           @RRN1     CHAINFD0140S5             78    *1
     C           DD03OF    IFNE @03OF                      B*2
     C           DD03BI    ORNE @03BI                      **2
     C           DDPDX3    ORNE @PDX3                      **2
     C                     MOVE '1'       *IN77            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C           *IN77     IFEQ '1'                        B1
     C           DDCCY     ORNE @CCY                       *1
     C           DDFLDS    ORNE @FLDS                      *1
     C                     MOVEL'FDM0104' @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C                     MOVE '1'       *IN20            *1
     C*
     C** RESET ALL FIELDS
     C           1         DO   @CNT      @X               B*2
     C           @X        CHAINFD0140S5             78    **2
     C           @X        OCUR @DDS                       **2
     C                     MOVE @03OF     DD03OF           **2
     C                     MOVE @03BI     DD03BI           **2
     C                     MOVE @PDX3     DDPDX3           **2
     C                     UPDATFD0140S5                   **2
     C                     END                             E*2
     C*
     C** NOW MOVE THE OTHER FIELDS
     C                     MOVE @ACTN     DDACTN           *1
     C                     MOVE @CCY      DDCCY            *1
     C                     MOVE @CCNM     DDCCNM           *1
     C                     MOVE @FLDS     DDFLDS           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     GOTO #ZK9                       *1
     C                     END                             E1
     C*
     C** CHECK A RECORD HAS BEEN SELECTED
     C           *IN65     IFEQ '0'                        B1
     C           @EXKY     SETLLFDCCYPLL                   *1
     C                     EXSR #ZA                        *1
     C           DDCCY     IFEQ @CCY                       B*2
     C           DDCCY     ANDEQXPCCY                      **2
     C                     MOVE '1'       *IN65            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF NO RECORD READ THEN DISPLAY ERROR MESSAGE
     C           *IN65     IFEQ '0'                        B1
     C                     MOVEL'FDM0224' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN20            *1
     C                     GOTO #ZK9                       *1
     C                     END                             E1
     C*
     C                     MOVE '1'       *IN71
     C*
     C** SET ON DELETE INDICATOR
     C                     MOVE '1'       *IN63
     C*
     C           #ZK9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZP   - THIS SUBROUTINE CONTROLS THE DELETE MODE.             *
     C*         IT VALIDATES THE CURRENCY CODE AND OUTPUTS THE        *
     C*         FIRST DELETE SCREEN. IT THEN CHECKS AND VALIDATES     *
     C*         FOR THE SUBSEQUENT INPUT ON THE DELETE SCREEN.        *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*             #BACC                                             *
     C*                                                               *
     C* CALLS :     #ZF                                               *
     C*             #ZG                                               *
     C*             #ZI                                               *
     C*                                                               *
     C* USES :      @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @CCY   - SAVED CURRENCY CODE                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZP       BEGSR
     C*
     C           #ZP1      TAG
     C*
     C**  VALIDATE CURRENCY CODE AND SET UP OUTPUT SCREEN
     C                     EXSR #ZZ
     C           *IN21     CABEQ'1'       #ZP9
     C*
     C**  DISPLAY SCREEN
     C                     MOVE '1'       *IN63
     C                     EXSR #ZG
     C*
     C**  READ SCREEN
     C                     EXSR #ZF
     C*
     C** VALIDATE CF2
     C           *INKL     CASEQ'1'       #ZH
     C*
     C** VALIDATE CF8
     C           *INKH     CASEQ'1'       #BAA
     C*
     C** VALIDATE CF7
     C           *INKG     CASEQ'1'       #BAB
     C                     END
     C*
     C** IF CMD 3 OR 12 EXIT SUBROUTINE
     C           *INKC     CABEQ'1'       #ZP9
     C           *INKL     CABEQ'1'       #ZP9
     C           *IN69     CABEQ'1'       #ZP9
     C*
     C** IF CMD 8 OR CMD7
     C           *INKH     IFEQ '1'                        B1
     C           *INKG     OREQ '1'                        B1
     C                     GOTO #ZP9                       *1
     C                     END                             E1
     C*
     C** VALIDATE CF15
     C           *INKP     IFEQ '1'                        B1
     C                     MOVE '1'       *IN75            *1
     C                     GOTO #ZP9                       *1
     C                     END                             E1
     C*
     C**  PROCESSING FOR WHEN THERE IS CHANGE IN ACTION CODE OR
     C**  CURRENCY AT SCREEN LEVEL 2
     C           DDACTN    IFNE @ACTN                      B1
     C           DDCCY     ORNE @CCY                       *1
     C*
     C**  STORE ACTION CODE AND CURRENCY - THESE ARE BLANKED OUT
     C**  IN #ZH
     C                     MOVE DDACTN    @ACTND  1        *1
     C                     MOVE DDCCY     @CCYD   3        *1
     C           DDACTN    IFNE 'I'                        B*2
     C           DDACTN    ANDNE'A'                        **2
     C*
     C** MUST BLANK OUT ALL FIELDS FOR ACTION CODE NOT 'I' IN CASE
     C** ACTION CODE AND/OR CURRENCY CODE ARE INVALID
     C                     MOVE '1'       *IN71            **2
     C                     EXSR #ZH                        **2
     C                     ELSE                            X*2
     C*
     C**  ONLY CURRENCY NAME IS TO BE BLANKED OUT IN CASE OF
     C**  INVALID ACTION CODE AND/OR CURRENCY CODE
     C           DDACTN    IFEQ 'I'                        B**3
     C                     MOVE *BLANKS   DDCCNM           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C**  RESET ACTION CODE AND CURRENCY CODE
     C                     MOVE @ACTND    DDACTN           *1
     C                     MOVE @CCYD     DDCCY            *1
     C           DDACTN    IFNE 'D'                        B*2
     C                     MOVE '1'       *IN75            **2
     C                     GOTO #ZP9                       **2
     C                     ELSE                            X*2
     C*
     C**  IF ACTION CODE IS 'D', PROCESSING CAN BE CONTINUED
     C**  DIRECTLY IN THIS ROUTINE
     C                     GOTO #ZP1                       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C**  TEST FOR CMD/10
     C           *INKJ     IFEQ '1'                        B1
     C                     EXSR #ZI                        *1
     C                     ELSE                            X1
     C                     GOTO #ZP1                       *1
     C                     END                             E1
     C*
     C           #ZP9      ENDSR
     C*
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BAD  - THIS SUBROUTINE WILL VALIDATE THE INPUT FOR AN INSERT *
     C*         THEN IT WILL EITHER UPDATE A RECORD FOR INSERT OVER A *
     C*         DELETED RECORD OR WRITE A NEW RECORD                  *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*                                                               *
     C* CALLS :     #ZC                                               *
     C*             #ZD                                               *
     C*             #ZE                                               *
     C*             #ZH                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @EXKY  - KEY LIST FOR FDCCYPLL                    *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C**************@SCRKY - KEY FOR FDCCYTLL**************************   S01194
     C*                                                               *
     C*****************************************************************
     C*
     C           #BAD      BEGSR
     C                     MOVE '0'       *IN64
     C*
     C** CHECK THAT CURRENCY FIELD IS NOT COMPLETELY BLANK                S01194
     C           @CCY      IFEQ *BLANK                                    S01194
     C                     MOVEL'FDM0177' @MSGID                          S01194
     C                     MOVE '1'       *IN21                           S01194
     C                     CALL 'ZA0240'                                  S01194
     C                     PARM           @MSGID                          S01194
     C                     MOVE '1'       *IN64                           S01194
     C                     GOTO #BAD9                                     S01194
     C                     END                                            S01194
     C*
     C*
     C** FIRST CHECK THAT THE CURRENCY IS A VALID DEALING CCY
     C***********@SCRKY    CHAINFDCCYTLL             68                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*BLANK ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM @CCY      @WRK3   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C********** *IN68     IFEQ '1'                        B1             S01194
     C********** RECI      ORNE 'D'                        *1             S01194
     C********** DCCY      ORNE 'Y'                        *1             S01194
     C           @RTCD     IFNE *BLANK                     B1             S01194
     C                     MOVEL'FDM0168' @MSGID           *1
     C                     MOVE '1'       *IN21            *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C* Processing for '?' prompt                          *1             S01194
     C                     ELSE                            *1             S01194
     C                     MOVELA6CYCD    DDCCY            *1             S01194
     C                     MOVELA6CYNM    DDCCNM           *1             S01194
     C                     END                             E1
     C*
     C** FIRST CHECK TO SEE IF RECORD EXISTS
     C                     MOVE '1'       *IN71
     C           @EXKY     CHAINFDCCYPLL             68
     C*
     C** IF IT DOES EXIST THEN CHECK TO SEE IF IT HAS BEEN LOGICALLY
     C** DELETED
     C           *IN68     IFEQ '0'                        B1
     C           XPDLTF    ANDEQ' '                        *1
     C                     MOVEL'FDM0166' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN21            *1
     C*
     C** SET OFF ANY INDICATORS SET IN PREVIOUS POINTS SUBFILE;
     C** OTHERWISE ANY FIELDS THAT WERE IN REVERSE IMAGE WILL
     C** STILL BE DISPLAYED IN REVERSE IMAGE.
     C           1         DO   @CNT      @RRN1            B*2
     C           @RRN1     CHAINFD0140S5             77    **2
     C                     MOVE '0'       *IN30            **2
     C                     MOVE '0'       *IN31            **2
     C                     MOVE '0'       *IN34            **2
     C                     MOVE '0'       *IN35            **2
     C                     UPDATFD0140S5                   **2
     C                     END                             E*2
     C                     GOTO #BAD9                      *1
     C                     END                             E1
     C*
     C** NOW VALIDATE INPUT
     C*
     C** EXTRA VALIDATION FOR INSERT
     C           DDCCY     IFEQ *BLANKS                    B1
     C                     MOVEL'FDM0224' @MSGID           *1
     C                     MOVE '1'       *IN21            *1
     C                     MOVE '1'       *IN64            *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     END                             E1
     C*
     C** SET ON SUCCESSFUL READ INDICATOR
     C                     MOVE '1'       *IN65
     C*
     C** CALL THE MAIN FIELD VALIDATION
     C                     EXSR #ZC
     C*
     C** UPDATE FILE IF NO ERRORS
     C           *IN64     IFEQ '0'                        B1
     C*
     C           *IN68     IFEQ '0'                        B*2
     C*
     C** INSERT OVER A DELETED RECORD
     C                     EXSR #ZD                        **2
     C*
     C                     ELSE                            X*2
     C*
     C                     EXSR #ZE                        **2
     C                     END                             E*2
     C*
     C** OUTPUT MESSAGE FOR SUCCESSFUL INSERTION OF RECORD
     C                     MOVELDDCCY     @DATA  45        *1
     C                     MOVEL'FDM8029' @MSGID           *1
     C                     CALL 'ZA0440'                   *1
     C                     PARM           @MSGID           *1
     C                     PARM           @DATA            *1
     C*
     C** CLEAR INPUT FIELDS
     C                     EXSR #ZH                        *1
     C                     END                             E1
     C*
     C                     MOVE '1'       *IN65
     C*
     C           #BAD9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #BAE - HANDLES ENTER BEING PRESSED IN ENQUIRY MODE            *
     C*                                                               *
     C* CALLED BY : #BA                                               *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @ACTN  - SAVED ACTION CODE                        *
     C*             @CCNM  - SAVED CURRENCY NAME                      *
     C*             @CCY   - SAVED CURRENCY                           *
     C*             @FLDS  - SAVED LOW/HIGH/SPOT RATES AND PERIODS 1/2*
     C*             @CNT   - COUNT OF SUBFILE RECORDS                 *
     C*             @DDS   - DATA STRUCTURE HOLDING THE SAVED S/FILE  *
     C*             @PDX3  - SAVED PERIOD SNAME 3                     *
     C*             @03BI  - SAVED HIGH RATE 3                        *
     C*             @03OF  - SAVED LOW RATE 3                         *
     C*             @X     - MULTIPURPOSE INDEX                       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BAE      BEGSR
     C*
     C** IF ANY FIELD WAS CHANGED CHANGE IT BACK
     C           1         DO   @CNT      @X               B1
     C           @X        CHAINFD0140S5             78    *1
     C           @X        OCUR @DDS                       *1
     C                     MOVE @03OF     DD03OF           *1
     C                     MOVE @03BI     DD03BI           *1
     C                     MOVE @PDX3     DDPDX3           *1
     C                     UPDATFD0140S5                   *1
     C                     END                             E1
     C*
     C** NOW MOVE THE OTHER FIELDS
     C**                   MOVE @ACTN     DDACTN
     C**                   MOVE @CCY      DDCCY
     C                     MOVE @CCNM     DDCCNM
     C                     MOVE @FLDS     DDFLDS
     C*
     C** VALIDATE CURRENCY CODE
     C                     EXSR #ZZ
     C*
     C** INITIALISE INPUT FIELDS IF INPUT CURRENCY CODE
     C** BLANKS OR ERROR ON ENQUIRY
     C           DDCCY     IFEQ *BLANKS                    B1
     C           *IN36     OREQ '0'                        *1
     C                     MOVE DDACTN    @ACTN            *1
     C                     MOVE DDCCY     @CCY             *1
     C                     MOVE '1'       *IN71            *1
     C                     EXSR #ZH                        *1
     C                     MOVE @ACTN     DDACTN           *1
     C                     MOVE @CCY      DDCCY            *1
     C                     MOVE '1'       *IN21            *1
     C                     END                             E1
     C           #BAE9     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZZ  -  CHECK FOR CURRENCY RECORD AND DISPLAY RECORD          *
     C*                                                               *
     C* CALLED BY : #ZJ                                               *
     C*                                                               *
     C* CALLS :     ZA0240                                            *
     C*             #ZA                                               *
     C*             #ZL                                               *
     C* USES :                                                        *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZZ       BEGSR
     C*
     C**
     C                     MOVE '0'       *IN64
     C*
     C** CHECK THAT CURRENCY FIELD IS NOT COMPLETELY BLANK                S01194
     C           @CCY      IFEQ *BLANK                                    S01194
     C                     MOVEL'FDM0177' @MSGID                          S01194
     C                     MOVE '1'       *IN21                           S01194
     C                     CALL 'ZA0240'                                  S01194
     C                     PARM           @MSGID                          S01194
     C                     MOVE '1'       *IN64                           S01194
     C                     GOTO #ZZ9                                      S01194
     C                     END                                            S01194
     C*
     C** FIRST CHECK THAT THE CURRENCY IS A VALID DEALING CCY
     C***********@SCRKY    CHAINFDCCYTLL             68                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*BLANK ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM @CCY      @WRK3   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01194
     C********** *IN68     IFEQ '1'                        B1             S01194
     C********** RECI      ORNE 'D'                        *1             S01194
     C********** DCCY      ORNE 'Y'                        *1             S01194
     C           @RTCD     IFNE *BLANK                     B1             S01194
     C                     MOVEL'FDM0168' @MSGID           *1
     C                     MOVE '1'       *IN21            *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C                     GOTO #ZZ9                       *1
     C* Processing for '?' prompt                          *1             S01194
     C                     ELSE                            *1             S01194
     C                     MOVELA6CYCD    DDCCY            *1             S01194
     C                     MOVELA6CYNM    DDCCNM           *1             S01194
     C                     MOVELA6CYCD    @CCY             *1             S01194
     C                     MOVELA6CYNM    @CCNM            *1             S01194
     C                     END                             E1
     C*
     C** FIRST CHECK TO SEE IF RECORD EXISTS
     C                     MOVE '1'       *IN71
     C           @EXKY     CHAINFDCCYPLL             68
     C*
     C** IF IT DOES EXIST THEN CHECK TO SEE IF IT HAS BEEN LOGICALLY
     C** DELETED
     C           *IN68     IFEQ '1'                        B1
     C           XPDLTF    OREQ '*'                        *1
     C                     MOVEL'FDM0167' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN21            *1
     C                     GOTO #ZZ9                       *1
     C                     END                             E1
     C*
     C** SET ON END OF READ INDICATOR
     C                     MOVE '0'       *IN55
     C*
     C** GET REQUIRED RECORD
     C           @EXKY     CHAINFDCCYPLL             68
     C*
     C** FILL UP DISPLAY
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           1         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** FIRST GET ALL THE EXCHANGE RATES RECORDS
     C** MOVE THE FIELDS IN FROM THE FIRST RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD01OF
     C                     MOVE XPPRDX    DDPDX1
     C                     MOVE XPCCY     @SCCY
     C** NOW FOR THE SECOND RECORD
     C                     EXSR #ZA
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B1
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '007'     DBASE            * DB ERROR 007*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #ZZ9                       *1
     C                     END                             E1
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           2         OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02BI
     C                     Z-ADDXPHIPT    @FLD1
     C                     EXSR #ZL
     C                     MOVE @FLD2     DD02OF
     C                     MOVE XPPRDX    DDPDX2
     C                     MOVE XPCCY     @SCCY
     C*
     C** NOW LOOP TO FILL UP THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET THE SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             77    *1
     C** NOW FOR THE THIRD RECORD
     C                     EXSR #ZA                        *1
     C*
     C** IF THE CURRENCY HAS CHANGED IT IS A DATA BASE ERROR
     C           @SCCY     IFNE XPCCY                      B*2
     C                     MOVE 'FDCCYPLL'DBFILE           ***************
     C                     MOVE '008'     DBASE            * DB ERROR 008*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     GOTO #ZZ9                       **2
     C                     END                             E*2
     C*
     C**** SAVE THE TIME AND DATE FIELDS.                                 E13880
     C           @RRN1     ADD  2         @OCR    20                      E13880
     C           @OCR      OCUR @XDL                                      E13880
     C                     Z-ADDXPDLUP    @XDUP                           E13880
     C                     MOVE XPMLUP    @XMUP                           E13880
     C                     Z-ADDXPYLUP    @XYUP                           E13880
     C                     Z-ADDXPTLUP    @XTUP                           E13880
     C***                                                                 E13880
     C** MOVE THE FIELDS IN FROM THE SECOND RECORD
     C                     Z-ADDXPLOPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03BI           *1
     C                     Z-ADDXPHIPT    @FLD1            *1
     C                     EXSR #ZL                        *1
     C                     MOVE @FLD2     DD03OF           *1
     C                     MOVE XPPRDX    DDPDX3           *1
     C                     MOVE XPCCY     @SCCY            *1
     C*
     C** UPDATE THE SUBFILE RECORD
     C                     UPDATFD0140S5                   *1
     C*
     C                     END                             E1
     C*
     C** NOW GET THE CURRENCY NAME
     C**********           MOVE @SCCY     DDCCY                           S01194
     C********** @SCRKY    CHAINFDCCYTLL             68                   S01194
     C*                                                                   S01194
     C***********@CCY      CHAINSDCURRL0             68             S01194093459
     C                     CALL 'AOCURRR0'                                093459
     C                     PARM '*BLANK ' @RTCD   7                       093459
     C                     PARM '*KEY   ' @OPTN   7                       093459
     C                     PARM @CCY      @WRK3   3                       093459
     C           SDCURR    PARM SDCURR    DSSDY                           093459
     C*                                                                   S01194
     C** IF THE CURRENCY DOES NOT EXIST DATA BASE ERROR
     C************IN68     IFEQ '1'                        B1       S01194093459
     C           @RTCD     IFNE *BLANK                     B1             093459
     C**********           MOVE 'FDCCYPLL'DBFILE           ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *             *S01194
     C                     MOVE '009'     DBASE            * DB ERROR 009*
     C**********           MOVE DDCCY     DBKEY            ***************S01194
     C                     MOVEL@CCY      DBKEY            *              S01194
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE '1'       *INLR            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #ZZ9                       *1
     C                     END                             E1
     C**********           MOVE CCNM      DDCCNM                          S01194
     C                     MOVE A6CYNM    DDCCNM                          S01194
     C*
     C****SAVE THE SPOT HIGH AND LOW RATES.                               E13880
     C**********           Z-ADDHGSP      @@HGSP                   E13880 S01194
     C**********           Z-ADDLOSP      @@LOSP                   E13880 S01194
     C                     Z-ADDA6HSRT    @@HGSP                          S01194
     C                     Z-ADDA6LSPR    @@LOSP                          S01194
     C***                                                                 E13880
     C** Scale high/low spot rate for display
     C                     EXSR #ZQ
     C           *INU7     CABEQ'1'       #ZZ9
     C*
     C** SAVE THE TIME AND DATE
     C                     Z-ADDXPDLUP    @XDLUP
     C                     MOVE XPMLUP    @XMLUP
     C                     Z-ADDXPYLUP    @XYLUP
     C                     Z-ADDXPTLUP    @XTLUP
     C                     Z-ADDCHGD      @CHGD
     C                     Z-ADDTSPC      @TSPC
     C*
     C** SUCCESSFULL OVERALL VALIDATION OF ACTION CODE
     C                     MOVE '1'       *IN36
     C*
     C           #ZZ9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZC  - VALIDATES INPUT FOR AMENDMENTS AND DELETIONS           *
     C*                                                               *
     C* CALLED BY : #ZJ                                               *
     C*             #BAD                                              *
     C*                                                               *
     C* CALLS :     #ZA                                               *
     C*             #ZCA                                              *
     C*             #ZC                                               *
     C*             ZA0240                                            *
     C*                                                               *
     C* USES :      @CCY   - SAVED CCY                                *
     C*             @CNT   - RECORDS IN POINTS SFILE                  *
     C*             @EM    - FLAG FOR POSITIONING ERROR MESSAGES      *
     C*             @ER    - ARRAY CONTAINING FIELD TO BE VALIDATED   *
     C*             @EXKY  - KEY LIST FOR FDCCYPLL                    *
     C*             @FLD4  - NUMERIC FIELD AFTER VALIDATION           *
     C*             @HI    - ARRAY CONTAINING THE SFILE HIPOINTS      *
     C*             @HIPTS - FIELD TO CALCULATE HIGH RATE             *
     C*             @LO    - ARRAY CONTAINING THE SFILE LOPOINTS      *
     C*             @LOPTS - FIELD TO CALCULATE LOW RATE              *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @RRN1  - REL REC NO POINTS SFILE                  *
     C*             @X     - ARRAY INDEX                              *
     C*             @01HI  - OVERNIGHT HI POINTS                      *
     C*             @01LO  - OVERNIGHT LO POINTS                      *
     C*             @02HI  - TOMORROW NEXT HI POINTS                  *
     C*             @02LO  - TOMORROW NEXT LO POINTS                  *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZC       BEGSR
     C*
     C** IF *IN65 IS OFF CHECK IT IS BECAUSE YOU ARE AT THE END OR
     C** BEGINNING OF THE FILE
     C                     MOVE ' '       @PERR
     C                     MOVEA*BLANKS   @EM
     C           *IN65     IFEQ '0'                        B1
     C           DDACTN    ANDNE'I'                        *1
     C           @EXKY     SETLLFDCCYPLL                   *1
     C                     EXSR #ZA                        *1
     C           DDCCY     IFEQ @CCY                       B*2
     C                     MOVE '1'       *IN65            **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C** CHECK A RECORD HAS BEEN READ FROM THE FILE
     C           *IN65     IFEQ '0'                        B1
     C                     MOVE '1'       *IN64            *1
     C                     MOVEL'FDM0125' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN20            *1
     C                     END                             E1
     C*
     C** SPOT RATES
     C** THEY ARE BOTH MANDATORY ENTRY AND REQUIRE TO BE > 0
     C***********DDSPT1    IFEQ 0                          B1             E15512
     C***********DDSPT2    OREQ 0                          *1             E15512
     C           DDSPT1    IFLE 0                          B1             E15512
     C           DDSPT2    ORLE 0                          *1             E15512
     C                     MOVEL'FDM0201' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C***********DDSPT1    IFEQ 0                          B1             E15512
     C           DDSPT1    IFLE 0                          B1             E15512
     C                     MOVE '1'       *IN28            *1
     C                     END                             E1
     C***********DDSPT2    IFEQ 0                          B1             E15512
     C           DDSPT2    IFLE 0                          B1             E15512
     C                     MOVE '1'       *IN29            *1
     C                     END                             E1
     C*
     C** THE HIGH RATE MUST BE >= LOW SPOT RATE
     C*
     C           DDSPT1    IFGT DDSPT2                     B1
     C                     MOVE '1'       *IN28            *1
     C                     MOVE '1'       *IN29            *1
     C                     MOVEL'FDM0208' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C*
     C**  VALIDATE OVERNIGHT LOW
     C           DD01BI    IFEQ *BLANKS                    B1
     C                     MOVE '1'       *IN22            *1
     C                     MOVE '1'       @EM,5            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C                     MOVEADD01BI    @ER
     C                     EXSR #ZCA
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN22            *1
     C                     END                             E1
     C                     Z-ADD@FLD4     @01LO
     C                     Z-ADD@01LO     @LOPTS
     C*
     C**  VALIDATE OVERNIGHT HIGH
     C           DD01OF    IFEQ *BLANKS                    B1
     C                     MOVE '1'       *IN23            *1
     C                     MOVE '1'       @EM,5            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C                     MOVEADD01OF    @ER
     C                     EXSR #ZCA
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN23            *1
     C                     END                             E1
     C                     Z-ADD@FLD4     @01HI
     C                     Z-ADD@01HI     @HIPTS
     C                     EXSR #ZCB
     C           *IN33     IFEQ '1'                        B1
     C                     MOVE '1'       *IN22            *1
     C                     MOVE '1'       *IN23            *1
     C                     MOVE '1'       @EM,6            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C** TOMORROW NEXT  LOW
     C           DD02BI    IFEQ *BLANKS                    B1
     C                     MOVE '1'       *IN25            *1
     C                     MOVE '1'       @EM,6            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C                     MOVEADD02BI    @ER
     C                     EXSR #ZCA
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN25            *1
     C                     END                             E1
     C                     Z-ADD@FLD4     @02LO
     C                     Z-ADD@02LO     @LOPTS
     C*
     C**  TOMORROW NEXT HIGH
     C           DD02OF    IFEQ *BLANKS                    B1
     C                     MOVE '1'       *IN26            *1
     C                     MOVE '1'       @EM,5            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C                     MOVEADD02OF    @ER
     C                     EXSR #ZCA
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN26            *1
     C                     END                             E1
     C                     Z-ADD@FLD4     @02HI
     C                     Z-ADD@02HI     @HIPTS
     C*          @02HI     IFLT @02LO                      B1
     C                     EXSR #ZCB
     C           *IN33     IFEQ '1'                        B1
     C                     MOVE '1'       *IN25            *1
     C                     MOVE '1'       *IN26            *1
     C                     MOVE '1'       @EM,6            *1
     C                     MOVE '1'       *IN64            *1
     C                     END                             E1
     C*
     C** IF AN ERROR HAS OCCURED BEFORE THE SUBFILE VALIDATION
     C** THEN SEND THE APPROPRIATE ERROR MESSAGE
     C           *IN22     IFEQ '1'                        B1
     C           *IN23     OREQ '1'                        *1
     C           *IN25     OREQ '1'                        *1
     C           *IN26     OREQ '1'                        *1
     C*                                                    *1
     C**  SET 'PRIOR ERROR' FLAG                           *1
     C                     MOVE 'Y'       @PERR            *1
     C           @EM,1     IFEQ '1'                        B*2
     C                     MOVEL'FDM0170' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       @EM,3            **2
     C                     END                             E*2
     C           @EM,2     IFEQ '1'                        B*2
     C                     MOVEL'FDM0171' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       @EM,4            **2
     C                     END                             E*2
     C           @EM,5     IFEQ '1'                        B*2
     C                     MOVEL'FDM0169' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       @EM,7            **2
     C                     END                             E*2
     C           @EM,6     IFEQ '1'                        B*2
     C                     MOVEL'FDM0173' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       @EM,8            **2
     C                     END                             E*2
     C           @EM,9     IFEQ '1'                        B*2
     C                     MOVEL'FDM0209' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       @EM,10           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C*
     C** VALIDATE ALL THE FIELDS IN THE SUBFILE
     C           1         DO   @CNT      @RRN1            B1
     C           @RRN1     CHAINFD0140S5             77    *1
     C                     MOVE '0'       *IN30            *1
     C                     MOVE '0'       *IN31            *1
     C*
     C**                LOW
     C           DD03BI    IFEQ *BLANKS                    B*2
     C                     MOVE '1'       *IN30            **2
     C           @PERR     IFEQ ' '                        B**3
     C                     MOVE '1'       *IN34            ***3
     C                     END                             E**3
     C                     MOVE '1'       @EM,5            **2
     C                     MOVE '1'       *IN64            **2
     C                     END                             E*2
     C                     MOVEADD03BI    @ER              *1
     C                     EXSR #ZCA                       *1
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN30            *1
     C           @PERR     IFEQ ' '                        B*2
     C                     MOVE '1'       *IN34            **2
     C                     END                             E*2
     C                     END                             E1
     C                     Z-ADD@RRN1     @X               *1
     C                     Z-ADD@FLD4     @LO,@X           *1
     C                     Z-ADD@LO,@X    @LOPTS           *1
     C*
     C**           HIGH
     C           DD03OF    IFEQ *BLANKS                    B*2
     C                     MOVE '1'       *IN31            **2
     C           @PERR     IFEQ ' '                        B**3
     C                     MOVE '1'       *IN35            ***3
     C                     END                             E**3
     C                     MOVE '1'       @EM,5            **2
     C                     MOVE '1'       *IN64            **2
     C                     END                             E*2
     C                     MOVEADD03OF    @ER              *1
     C                     EXSR #ZCA                       *1
     C           *IN85     IFEQ '1'                        B1
     C                     MOVE '1'       *IN31            *1
     C           @PERR     IFEQ ' '                        B*2
     C                     MOVE '1'       *IN34            **2
     C                     END                             E*2
     C                     END                             E1
     C                     Z-ADD@RRN1     @X               *1
     C                     Z-ADD@FLD4     @HI,@X           *1
     C                     Z-ADD@HI,@X    @HIPTS           *1
     C                     EXSR #ZCB
     C           *IN33     IFEQ '1'                        B*2
     C                     MOVE '1'       *IN30            **2
     C                     MOVE '1'       *IN31            **2
     C                     MOVE '1'       @EM,6            **2
     C                     MOVE '1'       *IN64            **2
     C                     END                             E*2
     C                     UPDATFD0140S5                   *1
     C                     END                             E1
     C*
     C** IF ANY ERRORS OCCURED AFTER SPOT RATE VALIDATION BUT NOT
     C** BEFORE SEND THE ERROR MESSAGE
     C           @EM,1     IFEQ '1'                        B*2
     C           @EM,3     ANDEQ' '                        **2
     C                     MOVEL'FDM0170' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C           @EM,2     IFEQ '1'                        B*2
     C           @EM,4     ANDEQ' '                        **2
     C                     MOVEL'FDM0171' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C           @EM,5     IFEQ '1'                        B*2
     C           @EM,7     ANDEQ' '                        **2
     C                     MOVEL'FDM0169' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C           @EM,6     IFEQ '1'                        B*2
     C           @EM,8     ANDEQ' '                        **2
     C                     MOVEL'FDM0173' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C           @EM,9     IFEQ '1'                        B*2
     C           @EM,10    ANDEQ' '                        **2
     C                     MOVEL'FDM0209' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     END                             E*2
     C*
     C           #ZC9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZCA - THIS SUBROUTINE VALIDATES THE HI AND LO POINTS AND     *
     C*        CONVERTS THEM INTO THE CORRECT NUMBER                  *
     C*                                                               *
     C* CALLED BY : #ZC                                               *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @DEC   - NUMBER OF DECIMAL PLACES INPUT           *
     C*             @EM    - FLAG FOR THE POSITIONING OF MESSAGES     *
     C*             @ER    - ARRAY CONTAINING FIELD TO BE VALIDATED   *
     C*             @FLD3  - 7,0 FIELD TO ENTER SCREEN FIELD          *
     C*             @FLD4  - 7,2 FIELD OUTPUT                         *
     C*             @FLD5  - 1,0 FIELD FOR CONVERTING ALPA DIGIT      *
     C*             @X     - ARRAY INDEX                              *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZCA      BEGSR
     C*
     C** FIRST SET POINTERS
     C                     Z-ADD0         @DEC
     C                     MOVE '0'       *IN77
     C                     MOVE '0'       *IN80
     C                     MOVE '0'       *IN81
     C                     MOVE '0'       *IN82
     C                     MOVE '0'       *IN83
     C                     MOVE '0'       *IN85
     C**
     C****   HANDLE BLANK FIELDS
     C**
     C                     MOVEA@ER       @X9A    9
     C           @X9A      IFEQ *BLANKS
     C                     Z-ADD*ZERO     @FLD4
     C                     GOTO #ZCA9
     C                     END
     C**
     C**
     C           1         DO   9         @X               B1
     C*
     C** SETS ON AN ERROR INDICATOR IF A BLANK HAS BEEN ENTERED
     C** AFTER A NUMBER HAS BUT BEFORE THE SIGN
     C           @ER,@X    IFEQ ' '                        **2
     C           *IN83     ANDEQ'1'                        **2
     C           *IN82     ANDEQ'0'                        **2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
     C*
     C** CHECK THAT NOTHING BUT BLANKS ARE ENTERED AFTER THE SIGN
     C           *IN82     IFEQ '1'                        B*2
     C           @ER,@X    ANDNE' '                        **2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
     C*
     C** FOR A NUMBER INPUT AFTER THE DECIMAL PLACE, ADD 1 TO THE COUNT
     C** OF DECIMALS
     C           *IN77     IFEQ '1'                        B*2
     C           *IN82     ANDNE'1'                        **2
     C           @ER,@X    ANDGE'0'                        **2
     C           @ER,@X    ANDLE'9'                        **2
     C                     ADD  1         @DEC             **2
     C                     END                             E*2
     C*
     C** SET ON THE SIGN ENTERED INDICATOR
     C           @ER,@X    IFEQ '+'                        B*2
     C           @ER,@X    OREQ '-'                        **2
     C                     MOVE '1'       *IN82            **2
     C                     END                             E*2
     C*
     C** SET ON THE DECIMAL POINT INDICATOR, BUT ONLY IF NONE
     C** HAVE BEEN ENTERED ALREADY
     C           @ER,@X    IFEQ '.'                        B*2
     C           *IN77     IFEQ '1'                        B**3
     C                     MOVE '1'       *IN80            ***3
     C                     ELSE                            X**3
     C                     MOVE '1'       *IN77            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** CHECK FOR INVALID CHARACTERS, ALSO IF A NUMBER HAS BEEN
     C** ENTERED SET THE NUMBER FLAG
     C           @ER,@X    IFNE '.'                        B*2
     C           @ER,@X    ANDNE'+'                        **2
     C           @ER,@X    ANDNE'-'                        **2
     C           @ER,@X    ANDNE' '                        **2
     C           @ER,@X    IFLT '0'                        B**3
     C           @ER,@X    ORGT '9'                        ***3
     C                     MOVE '1'       *IN80            ***3
     C                     ELSE                            X**3
     C                     MOVE '1'       *IN83            ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** NOW SET UP ERROR FLAGS FOR THE MAIN VALIDATION ROUTINE
     C** TO SEND THE ERROR MESSAGES
     C** *IN85 INDICATES AN ERROR
     C*
     C** NO SIGN ENTERED
     C           *IN82     IFEQ '0'                        B1
     C                     MOVE '1'       @EM,1            *1
     C                     MOVE '1'       *IN64            *1
     C                     MOVE '1'       *IN85            *1
     C                     END                             E1
     C*
     C** DECIMAL PLACES MORE THAN TWO
     C           @DEC      IFGT 2                          B1
     C                     MOVE '1'       @EM,2            *1
     C                     MOVE '1'       *IN64            *1
     C                     MOVE '1'       *IN85            *1
     C                     END                             E1
     C*
     C** GENERAL INVALID CHARACTERS
     C           *IN80     IFEQ '1'                        B1
     C                     MOVE '1'       @EM,9            *1
     C                     MOVE '1'       *IN64            *1
     C                     MOVE '1'       *IN85            *1
     C                     END                             E1
     C*
     C** NOW CONVERT ALPHA FIELD INTO A NUMBER
     C           *IN85     IFEQ '0'                        B1
     C                     Z-ADD0         @FLD3            *1
     C                     MOVE '0'       *IN77            *1
     C           1         DO   9         @X               B*2
     C*
     C** IF THE ARRAY ENTRY IS A NUMBER THEN ADD IT TO THE
     C** FIELD AFTER FIRST MULTIPLYING THE FIELD BY 10
     C           @ER,@X    IFGE '0'                        B**3
     C           @ER,@X    ANDLE'9'                        ***3
     C           @FLD3     MULT 10        @FLD3            ***3
     C                     MOVE @ER,@X    @FLD5            ***3
     C                     ADD  @FLD5     @FLD3            ***3
     C                     END                             E**3
     C           @ER,@X    IFEQ '+'                        B**3
     C                     MOVE '1'       *IN77            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF THE FIELD HAS NO DECIMAL PLACES MOVE IT TO THE
     C** OUTPUT FIELD
     C           @DEC      IFEQ 0                          B*2
     C                     Z-ADD@FLD3     @FLD4            **2
     C                     END                             E*2
     C*
     C** IF THE FIELD HAS 2 DP'S DIVIDE IT BY 100
     C           @DEC      IFEQ 2                          B*2
     C           @FLD3     DIV  100       @FLD4            **2
     C                     END                             E*2
     C*
     C** IF THE FIELD HAS 1 DP DIVIDE IT BY 10
     C           @DEC      IFEQ 1                          B*2
     C           @FLD3     DIV  10        @FLD4            **2
     C                     END                             E*2
     C*
     C** IF THE SIGN IS NEGATIVE THEN MAKE THE FIELD NEGATIVE
     C           *IN77     IFEQ '0'                        B*2
     C                     Z-SUB@FLD4     @FLD4            **2
     C                     END                             E*2
     C*
     C** ZERO INVALID FIELDS
     C                     ELSE                            X1
     C                     Z-ADD0         @FLD4            *1
     C                     END                             E1
     C*
     C           #ZCA9     ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZCB - THIS SUBROUTINE APPLIES THE POINTS FOR EACH PERIOD     *
     C*        TO THE SPOT RATES AND DETERMINES WHETEHER THE          *
     C*        RESULTING HIGH RATE IS GREATER THEN THE LOW RATE.      *
     C*                                                               *
     C* CALLED BY : #ZC                                               *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :      @PWR   - POWER OF TEN                             *
     C*             @TEN   - ARRAY OF POWERS OF TEN                   *
     C*             @LOPTS - RESULTING LOW EXHANGE RATE               *
     C*             @HIPTS - RESULTING HIGH EXCHANGE RATE             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZCB      BEGSR
     C*
     C                     MOVE '0'       *IN33
     C                     Z-ADD0         @PWR
     C*
     C**  THE EXCHANGE RATE FOR ANY PERIOD IS FOUND FROM THE
     C**  FOLLOWING FORMULA:
     C**
     C**                                         POINTS
     C**  EXCHANGE RATE  =  SPOT RATE  +  ------------------------
     C**                                      (BIG-FIGURE  +  2)
     C**                                    10
     C**
     C***********DPBF      ADD  2         @PWR                            S01194
     C           A6DPBF    ADD  2         @PWR                            S01194
     C*
     C** CALCULATION OF 'LOW' RATE
     C           @LOPTS    DIV  @TEN,@PWR @LOPTS
     C           DDSPT1    ADD  @LOPTS    @LOPTS
     C*
     C** CALCULATION OF 'HIGH' RATE
     C           @HIPTS    DIV  @TEN,@PWR @HIPTS
     C           DDSPT2    ADD  @HIPTS    @HIPTS
     C*
     C** HIGH RATE MUST BE GREATER THAN LOW RATE
     C*  EXCEPT BASE CCY FOR DEALING                                      E12700
     C*                                                                   E12700
     C***********DDCCY*****IFNE*IDCYDL*********************B1*******E12700S01319
     C           DDCCY     IFNE BNCYDL                     B1             S01319
     C*                                                                   E12700
     C           @HIPTS    IFLE @LOPTS                     B*2
     C                     MOVE '1'       *IN33            **2
     C                     END                             E*2
     C*                                                                   E12700
     C                     END                             E1             E12700
     C*
     C           #ZCB9     ENDSR
     C*
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZD  - THIS SUBROUTINE IS USED TO PERFORM ANY UPDATES TO MAIN *
     C*        FILE                                                   *
     C*                                                               *
     C* CALLED BY : #ZI                                               *
     C*             #ZJ
     C*             #BAD
     C*                                                               *
     C* CALLS :     ZA0850                                            *
     C**************#ZN************************************************   S01319
     C**************#ZO************************************************   S01319
     C*             ZA0240                                            *
     C*             ZA0250                                            *
     C*             ZA0270                                            *
     C*             ZTNLU1                                            *
     C*                                                               *
     C* USES :      @CCYX  - CURRENCY FOR CMTTXT                      *
     C*             @CNT   - NUMBER OF RECORDS IN POINTS SFILE        *
     C*             @MDATE - 6,0 DATE
*****C**************@DATEN - 5,0 DAY NUMBER                           *
*****C**************@DSC   - PERIOD TYPE FOR #ZM                      *
     C*             @EXKY  - KEYLIST FOR FDCCYPLL                     *
     C*             @HI    - ARRAY OF HIPOINTS                        *
     C*             @KEY   - KEY FOR ACCESSING FDTTOTLL,FDCCYTLL      *
     C*             @LO    - ARRAY OF LOW POINTS                      *
     C*             @TSPC  - SAVED TIME  OF LAST UPDATE               *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @MTH   - ARRAY HOLDING THE MONTH SHORTNAMES       *
     C*             @P     - ARRAY INDEX                              *
     C*             @PRD   - ARRAY OF PERIODS                         *
     C*             @PTP   - ARRAY OF PERIOD TYPES                    *
     C*             @RRN1  - REL REC NO OF POINTS SFILE               *
*****C**************@RTN   - RETURN ERROR CODE ZA0270                 *
*****C**************@SCRKY - KEY FOR FDCCYTLL**************************   S01194
*****C**************@TIM   - PERIOD PASSED TO #ZM                     *
     C*             @USER  - USER ID                                  *
     C*             @X     - ARRAY INDEX                              *
     C*             @XDLUP - DAY OF LAST UPDATE FDCCYPLL              *
     C*             @XMLUP - MONTH OF LAST UPDATE FDCCYPLL            *
     C*             @XYLUP - TIME OF LAST UPDATE FDCCYPLL             *
     C*             @XTLUP - YEAR OF LAST UPDATE FDCCYPLL             *
     C*             @XTIME - TIME OF UPDATE                           *
     C*             @01HI  - FIRST HIGH POINT                         *
     C*             @01LO  - FIRST LOW POINT                          *
     C*             @02HI  - SECOND HIGH POINT                        *
     C*             @02LO  - SECOND LOW POINT                         *
     C*             @@SPDD  SPOT DATE     FORMAT(8N)                  *
     C*             @@PRDU  PERIOD UNIT   FORMAT(2N)                  *
     C*             @@PRDT  PERIOD TYPE   FORMAT(1A)                  *
     C*             @@CCY1  CURRENCY 1    FORMAT(3A)                  *
     C*             @@CCY2  CURRENCY 2    FORMAT(3A)                  *
     C*             @@VDT   SPOT DATE RETURNED FORMAT(8N)             *
     C*             @@ESWT  SWITCH SET IF ERROR OCCURS  FORMAT(1A)    *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZD       BEGSR
     C*
     C** GET UPDATE RECORD
     C           @SCRKY    CHAINFDCYTULL             6874
     C*
     C*
     C**  DATA BASE ERROR
     C********** *IN76     IFEQ '1'                        B1             E20954
     C           *IN68     IFEQ '1'                        B1             E20954
     C                     MOVEL@KEY      DBKEY            ***************
     C                     MOVEL'FDCYTULL'DBFILE           * DB ERROR 010*
     C                     MOVE '010'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** IF *IN74 IS ON THEN THE RECORD IS LOCKED
     C           *IN74     IFEQ '1'                        B1
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C***IF*ANY*OF*THE*DATE*AND*TIME*FIELDS*HAVE*CHANGED*SINCE***         S01194
     C***THE*FILE*WAS*INITIALLY*READ,*THEN*THE*RECORD*HAS*BEEN***         S01194
     C***UPDATED*BY*ANOTHER*WORKSTATION**************************         S01194
     C***********DDACTN    IFNE 'I'                        B1             S01194
     C***********@CHGD     IFNE CHGD                       B*2            S01194
     C***********@TSPC     ORNE TSPC                       **2            S01194
     C***********          MOVEL'FDM0139' @MSGID           **2            S01194
     C***********          CALL 'ZA0240'                   **2            S01194
     C***********          PARM           @MSGID           **2            S01194
     C***********          MOVE 'Y'       @UPDWS           **2            S01194
     C***********          ROLBK                           **2            S01194
     C***********          GOTO #ZD9                       **2            S01194
     C***********          END                             E*2            S01194
     C***********          END                             E1             S01194
     C*
     C** GET HEADER RECORD FOR UPDATE
     C                     MOVE *BLANKS   @KEY
     C                     MOVE 'XP'      @KEY1
     C           @KEY      CHAINFDTTOTLL             7674
     C*
     C**  DATA BASE ERROR
     C           *IN76     IFEQ '1'                        B1
     C                     MOVEL@KEY      DBKEY            ***************
     C                     MOVEL'FDTTOTLL'DBFILE           * DB ERROR 011*
     C                     MOVE '011'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*** SAVE TOTALS BEFORE INCREMENTING FIELDS.                         E13880
     C                     Z-ADDNAMD      @NAMD   40                      E13880
     C                     Z-ADDNDEL      @NDEL   40                      E13880
     C                     Z-ADDNINS      @NINS   40                      E13880
     C***                                                                 E13880
     C** IF RECORD LOCKED SEND MESSAGE AND RELEASE MAIN UPDATE RECORD
     C           *IN74     IFEQ '1'                        B1
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** NOW UPDATE ALL THE POINTS RECORDS
     C** THE FIRST ONE
     C** RECORD LOCKED
     C                     MOVE '0'       *IN77                           S01194
     C           @EXKY     SETLLFDCYPULL
     C                     READ FDCYPULL               7877
     C           *IN78     IFEQ '1'                        B1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0250'                   *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** DATA BASE ERROR
     C           *IN77     IFEQ '1'                        B1
     C                     MOVEL'FDCYPULL'DBFILE           ***************
     C                     MOVE '012'     DBASE            * DB ERROR 012*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** RECORD HAS BEEN UPDATED AND NOT BEING INSERTED
     C           DDACTN    IFNE 'I'                        B1
     C****       @XDLUP    IFNE XPDLUP                     B*2            E13880
     C****       @XMLUP    ORNE XPMLUP                     **2            E13880
     C****       @XYLUP    ORNE XPYLUP                     **2            E13880
     C****       @XTLUP    ORNE XPTLUP                     **2            E13880
     C           1         OCUR @XDL                       *1             E13880
     C           @XDUP     IFNE XPDLUP                     B*2            E13880
     C           @XMUP     ORNE XPMLUP                     **2            E13880
     C           @XYUP     ORNE XPYLUP                     **2            E13880
     C           @XTUP     ORNE XPTLUP                     **2            E13880
     C                     CALL 'ZA0250'                   **2
     C                     MOVEL'FDM0139' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE 'Y'       @UPDWS           **2
     C                     ROLBK                           **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF THE ACTION CODE IS I THEN CHECK THAT THE LAST CHANGE WAS
     C** A DELETE
     C           DDACTN    IFEQ 'I'                        B1
     C           XPCHTP    ANDNE'D'                        *1
     C                     MOVEL'FDM0139' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE 'Y'       @UPDWS           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C**  PERFORMANCE FIX                                                 E13880
     C                     MOVE XPHIPT    @HIPT1  72                      E13880
     C                     MOVE XPLOPT    @LOPT1  72                      E13880
     C                     MOVE @PRDX1    @PRDX1  4                       E13880
     C**                                                                  E13880
     C** SET UP COMMON FIELDS
     C                     MOVE 'XP'      XPRCID
     C           DDACTN    IFEQ 'D'                        B1
     C                     MOVE '*'       XPDLTF           *1
     C                     ELSE                            X1
     C                     MOVE *BLANK    XPDLTF           *1
     C                     END                             E1
     C                     MOVEL@USER     XPLUID
     C                     MOVE DDACTN    XPCHTP
     C*********************Z-ADDRUND      XPLCD                           S01194
     C                     Z-ADDBJRDNB    XPLCD                           S01194
     C                     Z-ADD@DD       XPDLUP
     C                     MOVE @MMM      XPMLUP
     C                     Z-ADD@YY       XPYLUP
     C                     Z-ADD@01HI     XPHIPT
     C                     Z-ADD@01LO     XPLOPT
     C                     Z-ADD@MDATE    XPCHGD
     C                     MOVE DDPDX1    XPPRDX
     C                     MOVE DDCCY     XPCCY
     C           DDACTN    IFEQ 'I'                        B1
     C*
     C** Load fields required by ZA0850 for period date calculation
     C*                    Z-SUB2         @TIM             *1
     C                     Z-SUB2         @@PRDU           *1
     C*                    MOVE 'D'       @DSC             *1
     C                     MOVE 'D'       @@PRDT           *1
     C*                    EXSR #ZM                        *1
     C*********************Z-ADDFXSP      @@SPDD           *1             S01194
     C                     Z-ADDA6FXSD    @@SPDD           *1             S01194
     C*********************MOVE*IDCYDL****@@CCY1************1*************S01319
     C                     MOVE BNCYDL    @@CCY1           *1             S01319
     C                     MOVE XPCCY     @@CCY2           *1
     C*
     C                     EXSR ZA0850                     *1
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B*2
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C*
     C                     Z-ADD@@VDT     XPPRDD           *1
     C*
     C                     END                             E1
     C                     TIME           XPTLUP
     C****                                                                E13880
     C           XPHIPT    IFNE @HIPT1                                    E13880
     C           XPLOPT    ORNE @LOPT1                                    E13880
     C           XPPRDX    ORNE @PRDX1                                    E13880
     C           DDACTN    OREQ 'I'                                       S01194
     C           DDACTN    OREQ 'D'                                       S01194
     C***
     C                     UPDATFDCCYPP0
     C*
     C***WRITE*RECORDS*TO*PC*UPDATE*FILE***********************           S01319
     C***IF*DRS*IS*PRESENT.***********************************      E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                                       S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C           DDACTN    IFEQ 'A'                                       E13880
     C                     ADD  1         NAMD                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'D'                                       E13880
     C                     ADD  1         NDEL                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'I'                                       E13880
     C                     ADD  1         NINS                            E13880
     C                     END                                            E13880
     C                     END                                            E13880
     C                     Z-ADDXPTLUP    @XTIME  60
     C*
     C** SEND SECOND RECORD
     C                     READ FDCYPULL               7877
     C           *IN78     IFEQ '1'                        B1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0250'                   *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** DATA BASE ERROR
     C           *IN77     IFEQ '1'                        B1
     C                     MOVEL'FDCCYPLL'DBFILE           ***************
     C                     MOVE '013'     DBASE            * DB ERROR 013*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** RECORD HAS BEEN UPDATED BUT NO CHECK FOR INSERT
     C           DDACTN    IFNE 'I'                        B1
     C*****      @XDLUP    IFNE XPDLUP                     B*2            E13880
     C*****      @XMLUP    ORNE XPMLUP                     **2            E13880
     C*****      @XYLUP    ORNE XPYLUP                     **2            E13880
     C*****      @XTLUP    ORNE XPTLUP                     **2            E13880
     C           2         OCUR @XDL                       *1             E13880
     C           @XDUP     IFNE XPDLUP                     B*2            E13880
     C           @XMUP     ORNE XPMLUP                     **2            E13880
     C           @XYUP     ORNE XPYLUP                     **2            E13880
     C           @XTUP     ORNE XPTLUP                     **2            E13880
     C                     CALL 'ZA0250'                   **2
     C                     MOVEL'FDM0139' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE 'Y'       @UPDWS           **2
     C                     ROLBK                           **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF THE ACTION CODE IS I THEN CHECK THAT THE LAST CHANGE WAS
     C** A DELETE
     C           DDACTN    IFEQ 'I'                        B1
     C           XPCHTP    ANDNE'D'                        *1
     C                     MOVEL'FDM0139' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE 'Y'       @UPDWS           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C**  PERFORMANCE FIX                                                 E13880
     C                     MOVE XPHIPT    @HIPT2  72                      E13880
     C                     MOVE XPLOPT    @LOPT2  72                      E13880
     C                     MOVE @PRDX1    @PRDX2  4                       E13880
     C**                                                                  E13880
     C** SET UP COMMON FIELDS
     C                     MOVE 'XP'      XPRCID
     C           DDACTN    IFEQ 'D'                        B1
     C                     MOVE '*'       XPDLTF           *1
     C                     ELSE                            X1
     C                     MOVE *BLANK    XPDLTF           *1
     C                     END                             E1
     C                     MOVEL@USER     XPLUID
     C                     MOVE DDACTN    XPCHTP
     C*********************Z-ADDRUND      XPLCD                           S01194
     C                     Z-ADDBJRDNB    XPLCD                           S01194
     C                     Z-ADD@DD       XPDLUP
     C                     MOVE @MMM      XPMLUP
     C                     Z-ADD@YY       XPYLUP
     C                     Z-ADD@02HI     XPHIPT
     C                     Z-ADD@02LO     XPLOPT
     C                     Z-ADD@MDATE    XPCHGD
     C                     MOVE DDPDX2    XPPRDX
     C                     MOVE DDCCY     XPCCY
     C*
     C** WORK OUT PERIOD DATE
     C           DDACTN    IFEQ 'I'                        B1
     C*
     C** Load fields required by ZA0850 for period date calculation
     C*                    Z-SUB1         @TIM             *1
     C                     Z-SUB1         @@PRDU           *1
     C*                    MOVE 'D'       @DSC             *1
     C                     MOVE 'D'       @@PRDT           *1
     C*                    EXSR #ZM                        *1
     C*********************Z-ADDFXSP      @@SPDD           *1             S01194
     C                     Z-ADDA6FXSD    @@SPDD           *1             S01194
     C*********************MOVE*IDCYDL****@@CCY1************1*************S01319
     C                     MOVE BNCYDL    @@CCY1           *1             S01319
     C                     MOVE XPCCY     @@CCY2           *1
     C*                                                    *1
     C                     EXSR ZA0850                     *1
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B*2
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C*
     C                     Z-ADD@@VDT     XPPRDD           *1
     C*
     C                     END                             E1
     C*
     C****                                                                E13880
     C           XPHIPT    IFNE @HIPT2                                    E13880
     C           XPLOPT    ORNE @LOPT2                                    E13880
     C           XPPRDX    ORNE @PRDX2                                    E13880
     C           DDACTN    OREQ 'I'                                       S01194
     C           DDACTN    OREQ 'D'                                       S01194
     C***
     C                     Z-ADD@XTIME    XPTLUP
     C                     UPDATFDCCYPP0
     C*
     C***WRITE*RECORDS*TO*PC*UPDATE*FILE*******                           S01319
     C***IF*DRS*IS*PRESENT.********************                     E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                                       S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C           DDACTN    IFEQ 'A'                                       E13880
     C                     ADD  1         NAMD                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'D'                                       E13880
     C                     ADD  1         NDEL                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'I'                                       E13880
     C                     ADD  1         NINS                            E13880
     C                     END                                            E13880
     C                     END                                            E13880
     C*
     C** LOOP UNTIL ALL RECORDS HAVE BEEN UPDATED
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             78    *1
     C*
     C** SET INDEX
     C           @RRN1     ADD  2         @X               *1
     C                     Z-ADD@RRN1     @P               *1
     C*
     C** SEND ALL OTHER RECORDS
     C                     READ FDCYPULL               7877*1
     C           *IN78     IFEQ '1'                        B*2
     C                     MOVEL'FDM0120' @MSGID           **2
     C                     CALL 'ZA0250'                   **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     ROLBK                           **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C*
     C** DATA BASE ERROR
     C           *IN77     IFEQ '1'                        B*2
     C                     MOVEL'FDCCYPLL'DBFILE           ***************
     C                     MOVE '014'     DBASE            * DB ERROR 014*
     C                     MOVE DDCCY     DBKEY            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C*
     C** RECORD HAS BEEN UPDATED, BUT NO CHECKING FOR INSERTS
     C           DDACTN    IFNE 'I'                        B*2
     C*****      @XDLUP    IFNE XPDLUP                     B**3           E13880
     C*****      @XMLUP    ORNE XPMLUP                     ***3           E13880
     C*****      @XYLUP    ORNE XPYLUP                     ***3           E13880
     C*****      @XTLUP    ORNE XPTLUP                     ***3           E13880
     C           @RRN1     ADD  2         @OCR             ***3           E13880
     C           @OCR      OCUR @XDL                       *1             E13880
     C           @XDUP     IFNE XPDLUP                     B*2            E13880
     C           @XMUP     ORNE XPMLUP                     **2            E13880
     C           @XYUP     ORNE XPYLUP                     **2            E13880
     C           @XTUP     ORNE XPTLUP                     **2            E13880
     C                     CALL 'ZA0250'                   ***3
     C                     MOVEL'FDM0139' @MSGID           ***3
     C                     CALL 'ZA0240'                   ***3
     C                     PARM           @MSGID           ***3
     C                     MOVE 'Y'       @UPDWS           ***3
     C                     ROLBK                           ***3
     C                     GOTO #ZD9                       ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF THE ACTION CODE IS I THEN CHECK THAT THE LAST CHANGE WAS
     C** A DELETE
     C           DDACTN    IFEQ 'I'                        B*2
     C           XPCHTP    ANDNE'D'                        **2
     C                     MOVEL'FDM0139' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE 'Y'       @UPDWS           **2
     C                     ROLBK                           **2
     C                     GOTO #ZD9                       **2
     C                     END                             E*2
     C*
     C** SET UP COMMON FIELDS
     C                     MOVE 'XP'      XPRCID           *1
     C           DDACTN    IFEQ 'D'                        B*2
     C                     MOVE '*'       XPDLTF           **2
     C                     ELSE                            X*2
     C                     MOVE *BLANK    XPDLTF           **2
     C                     END                             E*2
     C**  PERFORMANCE FIX                                                 E13880
     C                     MOVE XPHIPT    @HIPT3  72                      E13880
     C                     MOVE XPLOPT    @LOPT3  72                      E13880
     C                     MOVE @PRDX1    @PRDX3  4                       E13880
     C**                                                                  E13880
     C                     MOVEL@USER     XPLUID           *1
     C                     MOVE DDACTN    XPCHTP           *1
     C*********************Z-ADDRUND      XPLCD            *1             S01194
     C                     Z-ADDBJRDNB    XPLCD            *1             S01194
     C                     Z-ADD@DD       XPDLUP           *1
     C                     MOVE @MMM      XPMLUP           *1
     C                     Z-ADD@YY       XPYLUP           *1
     C                     Z-ADD@HI,@P    XPHIPT           *1
     C                     Z-ADD@LO,@P    XPLOPT           *1
     C                     Z-ADD@MDATE    XPCHGD           *1
     C                     MOVE DDPDX3    XPPRDX           *1
     C                     MOVE DDCCY     XPCCY            *1
     C           DDACTN    IFEQ 'I'                        B*2
     C*                    Z-ADD@PRD,@X   @TIM             **2
     C                     Z-ADD@PRD,@X   @@PRDU           **2
     C*                    MOVE @PTP,@X   @DSC             **2
     C                     MOVE @PTP,@X   @@PRDT           **2
     C*
     C** ZERO DAYS FOR SPOT/NEXT
     C           @X        IFEQ 3                          B**3
     C*                    Z-ADD1         @TIM             ***3
     C                     Z-ADD1         @@PRDU           ***3
     C                     END                             E**3
     C*                    EXSR #ZM                        **2
     C*********************Z-ADDFXSP      @@SPDD           **2            S01194
     C                     Z-ADDA6FXSD    @@SPDD           **2            S01194
     C*********************MOVE*IDCYDL****@@CCY1*************2************S01319
     C                     MOVE BNCYDL    @@CCY1           **2            S01319
     C                     MOVE XPCCY     @@CCY2           **2
     C*
     C                     EXSR ZA0850                     **2
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B**3
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     GOTO #ZD9                       ***3
     C                     END                             E**3
     C*
     C                     Z-ADD@@VDT     XPPRDD           *1
     C*
     C                     END                             E*2
     C                     Z-ADD@XTIME    XPTLUP           *1
     C****                                                                E13880
     C           XPHIPT    IFNE @HIPT3                                    E13880
     C           XPLOPT    ORNE @LOPT3                                    E13880
     C           XPPRDX    ORNE @PRDX3                                    E13880
     C           DDACTN    OREQ 'I'                                       S01194
     C           DDACTN    OREQ 'D'                                       S01194
     C***
     C                     UPDATFDCCYPP0                   *1
     C*
     C***WRITE*RECORDS*TO*PC*UPDATE*FILE********                          S01319
     C***IF*DRS*IS*PRESENT.*********************                    E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                                       S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C           DDACTN    IFEQ 'A'                                       E13880
     C                     ADD  1         NAMD                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'D'                                       E13880
     C                     ADD  1         NDEL                            E13880
     C                     END                                            E13880
     C           DDACTN    IFEQ 'I'                                       E13880
     C                     ADD  1         NINS                            E13880
     C                     END                                            E13880
     C                     END                                            E13880
     C                     END                             E1
     C*****      DDACTN    IFEQ 'A'                                       E13880
     C*****                ADD  12        NAMD                            E13880
     C*****                END                                            E13880
     C*****      DDACTN    IFEQ 'D'                                       E13880
     C*****                ADD  12        NDEL                            E13880
     C*****                END                                            E13880
     C*****      DDACTN    IFEQ 'I'                                       E13880
     C*****                ADD  12        NINS                            E13880
     C*****                END                                            E13880
     C*****                                                               E13880
     C           @NAMD     IFNE NAMD                                      E13880
     C           @NDEL     ORNE NDEL                                      E13880
     C           @NINS     ORNE NINS                                      E13880
     C***
     C                     UPDATTABLETXF
     C                     END                                            E13880
     C*
     C** GET HEADER RECORD FOR UPDATE
     C                     MOVE *BLANKS   @KEY
     C                     MOVE '20'      @KEY1
     C           @KEY      CHAINFDTTOTLL             7674
     C*
     C**  DATA BASE ERROR
     C           *IN76     IFEQ '1'                        B1
     C                     MOVEL@KEY      DBKEY            ***************
     C                     MOVEL'FDTTOTLL'DBFILE           * DB ERROR 015*
     C                     MOVE '015'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** IF RECORD LOCKED SEND MESSAGE AND RELEASE MAIN UPDATE RECORD
     C           *IN74     IFEQ '1'                        B1
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZD9                       *1
     C                     END                             E1
     C*
     C** NOW FILL UP FIELDS ON TABTG10F
     C                     MOVEL@USER     USID
     C*
     C                     Z-ADD@DD       DLUP
     C                     MOVE @MMM      MLUP
     C                     Z-ADD@YY       YLUP
     C*
     C** Unscale high/low spot rate from display for file update
     C                     EXSR #ZR
     C*
     C           DDACTN    IFEQ 'D'                        B1
     C                     Z-ADD0         LOSP             *1
     C                     Z-ADD0         HGSP             *1
     C                     END                             E1
     C                     Z-ADD@MDATE    CHGD
     C                     Z-ADDXPTLUP    TSPC
     C                     MOVE @SCRKY    KEY
     C                     MOVE 'D'       RECI
     C*
     C** UPDATE LAST TRANSACTION NUMBER
     C                     EXSR ZTNLU1
     C******                                                              E13880
     C           DDSPT1    IFNE @@LOSP                                    E13880
     C           DDSPT2    ORNE @@HGSP                                    E13880
     C           DDACTN    OREQ 'D'                                       S01194
     C           DDACTN    OREQ 'I'                                       S01194
     C**                                                                  E13880
     C                     UPDATTABTG10F
     C*                                                                   S01194
     C**                                                                  S01194
     C** ALSO GET UPDATE RECORD ON SDCURR                                 S01194
     C***********A6CYCD****CHAINSDCURRL1             7674           S01194DT0162
     C           A6CYCD    CHAINSDCURRL0             7674                 DT0162
     C*                                                                   S01194
     C*                                                                   S01194
     C**  DATA BASE ERROR                                                 S01194
     C           *IN76     IFEQ '1'                        B1             S01194
     C                     MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL@CCY      DBKEY            *             *S01194
     C                     MOVEL'SDCURRPD'DBFILE           * DB ERROR 022*S01194
     C                     MOVE @OPTN     DBOPTN  7        *             *S01194
     C                     MOVE '022'     DBASE            ***************S01194
     C                     MOVE '1'       *INU7            *1             S01194
     C                     MOVE '1'       *INU8            *1             S01194
     C                     GOTO #ZD9                       *1             S01194
     C                     END                             E1             S01194
     C*                                                                   S01194
     C** IF *IN74 IS ON THEN THE RECORD IS LOCKED                         S01194
     C           *IN74     IFEQ '1'                        B1             S01194
     C                     CALL 'ZA0250'                   *1             S01194
     C                     MOVEL'FDM0120' @MSGID           *1             S01194
     C                     CALL 'ZA0240'                   *1             S01194
     C                     PARM           @MSGID           *1             S01194
     C                     GOTO #ZD9                       *1             S01194
     C                     END                             E1             S01194
     C*                                                                   S01194
     C*                                                                   S01194
     C**                                                                  S01194
     C** ALSO UPDATE RECORD ON SDCURR                                     S01194
     C                     MOVE LOSP      A6LSPR                          S01194
     C                     MOVE HGSP      A6HSRT                          S01194
     C                     UPDAT@A6REA4                                   S01194
     C*                                                                   S01194
     C***UPDATE*PC*DOWNLOAD*FILE***************************************** S01319
     C***IF*DRS*IS*PRESENT.**************************************** E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZO                                       S01319
     C*********************END                                      E21137S01319
     C*
     C** NOW UPDATE HEADER
     C                     ADD  1         NAMD             *1
     C                     UPDATTABLETXF
     C                     END                                            E13880
     C*
     C           CMTTXT    COMIT
     C*
     C           #ZD9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZE  - THIS SUBROUTINE IS USED TO WRITE NEW RECORDS TO THE MAIN
     C*        FILE                                                   *
     C*                                                               *
     C* CALLED BY : #BAD                                              *
     C*                                                               *
     C* CALLS :     ZA0270                                            *
     C*             ZA0240                                           *
     C*             ZA0250                                           *
*****C**************#ZM                                              *
     C*             ZA0850                                           *
     C**************#ZN***********************************************    S01319
     C**************#ZO***********************************************    S01319
     C*             ZTNLU1                                           *
     C*                                                               *
     C* USES :      @CCYX  - CURRENCY FOR CMTTXT                      *
     C*             @CNT   - NUMBER OF RECORDS IN POINTS SFILE        *
*****C**************@DATEN - 5,0 DAY NUMBER                           *
     C*             @MDATE - 6,0 DATE                                 *
*****C**************@DSC   - PERIOD TYPE FOR #ZM                      *
     C*             @HI    - ARRAY OF HIPOINTS                        *
     C*             @KEY   - KEY FOR ACCESSING FDTTOTLL,FDCCYTLL      *
     C*             @LO    - ARRAY OF LOW POINTS                      *
     C*             @MSGID - MESSAGE ID FOR ZA0240 TO SEND            *
     C*             @MTH   - ARRAY HOLDING THE MONTH SHORTNAMES       *
     C*             @P     - ARRAY INDEX                              *
     C*             @PRD   - ARRAY OF PERIODS                         *
     C*             @PTP   - ARRAY OF PERIOD TYPES                    *
     C*             @RRN1  - REL REC NO OF POINTS SFILE               *
*****C**************@RTN   - RETURN ERROR CODE ZA0270                 *
*****C**************@SCRKY - KEY FOR FDCCYTLL**************************   S01194
*****C**************@TIM   - PERIOD PASSED TO #ZM                     *
     C*             @USER  - USER ID                                  *
     C*             @X     - ARRAY INDEX                              *
     C*             @01HI  - FIRST HIGH POINT                         *
     C*             @01LO  - FIRST LOW POINT                          *
     C*             @02HI  - SECOND HIGH POINT                        *
     C*             @02LO  - SECOND LOW POINT                         *
     C*             @@SPDD  SPOT DATE     FORMAT(8N)                  *
     C*             @@PRDU  PERIOD UNIT   FORMAT(2N)                  *
     C*             @@PRDT  PERIOD TYPE   FORMAT(1A)                  *
     C*             @@CCY1  CURRENCY 1    FORMAT(3A)                  *
     C*             @@CCY2  CURRENCY 2    FORMAT(3A)                  *
     C*             @@VDT   SPOT DATE RETURNED FORMAT(8N)             *
     C*             @@ESWT  SWITCH SET IF ERROR OCCURS  FORMAT(1A)    *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZE       BEGSR
     C*
     C** GET UPDATE RECORD
     C           @SCRKY    CHAINFDCYTULL             6874
     C*
     C*
     C** IF *IN74 IS ON THEN THE RECORD IS LOCKED
     C           *IN74     IFEQ '1'                        B1             S01194
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C** GET HEADER RECORD FOR UPDATE
     C                     MOVE *BLANKS   @KEY
     C                     MOVE 'XP'      @KEY1
     C           @KEY      CHAINFDTTOTLL             7674
     C*
     C**  DATA BASE ERROR
     C           *IN76     IFEQ '1'                        B1
     C                     MOVEL@KEY      DBKEY            ***************
     C                     MOVEL'FDTTOTLL'DBFILE           * DB ERROR 016*
     C                     MOVE '016'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     ROLBK                           *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C** IF RECORD LOCKED SEND MESSAGE AND RELEASE MAIN UPDATE RECORD
     C           *IN74     IFEQ '1'                        B1
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C** SET UP COMMON FIELDS
     C                     MOVE 'XP'      XPRCID
     C           DDACTN    IFEQ 'D'                        B1
     C                     MOVE '*'       XPDLTF           *1
     C                     ELSE                            X1
     C                     MOVE *BLANK    XPDLTF           *1
     C                     END                             E1
     C                     MOVEL@USER     XPLUID
     C                     MOVE DDACTN    XPCHTP
     C*********************Z-ADDRUND      XPLCD                           S01194
     C                     Z-ADDBJRDNB    XPLCD                           S01194
     C                     Z-ADD@DD       XPDLUP
     C                     MOVE @MMM      XPMLUP
     C                     Z-ADD@YY       XPYLUP
     C                     TIME           XPTLUP
     C                     Z-ADD@PRD,1    XPPRD
     C                     Z-ADD@01HI     XPHIPT
     C                     Z-ADD@01LO     XPLOPT
     C                     Z-ADD@MDATE    XPCHGD
     C                     MOVE @PTP,1    XPTPRD
     C                     MOVE DDPDX1    XPPRDX
     C                     MOVE DDCCY     XPCCY
     C*
     C** WORK OUT PERIOD DATE
     C*                    Z-SUB2         @TIM
     C                     Z-SUB2         @@PRDU
     C*                    MOVE 'D'       @DSC
     C                     MOVE 'D'       @@PRDT
     C*                    EXSR #ZM
     C*
     C** Load fields required by ZA0850 for period date calculation
     C*********************Z-ADDFXSP      @@SPDD           *1             S01194
     C                     Z-ADDA6FXSD    @@SPDD           *1             S01194
     C*********************MOVE*IDCYDL****@@CCY1************1*************S01319
     C                     MOVE BNCYDL    @@CCY1           *1             S01319
     C                     MOVE XPCCY     @@CCY2           *1
     C*                                                    *1
     C                     EXSR ZA0850                     *1
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B*2
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #ZE9                       **2
     C                     END                             E*2
     C*
     C                     Z-ADD@@VDT     XPPRDD           *1
     C*
     C*
     C                     WRITEFDCCYPP0
     C*
     C***SEND*PS*UPDATE*RECORD******************                          S01319
     C***IF*DRS*IS*PRESENT.*********************                    E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                                       S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C                     Z-ADD@PRD,2    XPPRD
     C                     Z-ADD@02HI     XPHIPT
     C                     Z-ADD@02LO     XPLOPT
     C                     MOVE @PTP,2    XPTPRD
     C                     MOVE DDPDX2    XPPRDX
     C                     MOVE DDCCY     XPCCY
     C*
     C** WORK OUT PERIOD DATE
     C*                    Z-SUB1         @TIM
     C                     Z-SUB1         @@PRDU
     C*                    MOVE 'D'       @DSC
     C                     MOVE 'D'       @@PRDT
     C*                    EXSR #ZM
     C*********************Z-ADDFXSP      @@SPDD                          S01194
     C                     Z-ADDA6FXSD    @@SPDD                          S01194
     C*********************MOVE*IDCYDL****@@CCY1**************************S01319
     C                     MOVE BNCYDL    @@CCY1                          S01319
     C                     MOVE XPCCY     @@CCY2
     C*
     C                     EXSR ZA0850
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B1
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C                     Z-ADD@@VDT     XPPRDD
     C*
     C                     WRITEFDCCYPP0
     C*
     C***SEND*PS*UPDATE*RECORD************                                S01319
     C***IF*DRS*IS*PRESENT.***************                          E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                                       S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C*
     C** LOOP UNTIL ALL RECORDS HAVE BEEN UPDATED
     C           1         DO   @CNT      @RRN1            B1
     C*
     C** GET SUBFILE RECORD
     C           @RRN1     CHAINFD0140S5             78    *1
     C*
     C** SET INDEX
     C           @RRN1     ADD  2         @X               *1
     C                     Z-ADD@RRN1     @P               *1
     C*
     C                     Z-ADD@PRD,@X   XPPRD            *1
     C                     Z-ADD@HI,@P    XPHIPT           *1
     C                     Z-ADD@LO,@P    XPLOPT           *1
     C                     MOVE @PTP,@X   XPTPRD           *1
     C                     MOVE DDPDX3    XPPRDX           *1
     C                     MOVE DDCCY     XPCCY            *1
     C*                    Z-ADD@PRD,@X   @TIM             *1
     C                     Z-ADD@PRD,@X   @@PRDU           *1
     C*                    MOVE @PTP,@X   @DSC             *1
     C                     MOVE @PTP,@X   @@PRDT           *1
     C*
     C** ZERO DAYS FOR SPOT/NEXT
     C           @X        IFEQ 3                          B*2
     C*                    Z-ADD1         @TIM             **2
     C                     Z-ADD1         @@PRDU           **2
     C                     END                             E*2
     C*                    EXSR #ZM                        *1
     C*
     C*********************Z-ADDFXSP      @@SPDD           *1             S01194
     C                     Z-ADDA6FXSD    @@SPDD           *1             S01194
     C*********************MOVE*IDCYDL****@@CCY1************1*************S01319
     C                     MOVE BNCYDL    @@CCY1           *1             S01319
     C                     MOVE XPCCY     @@CCY2           *1
     C*                                                    *1
     C                     EXSR ZA0850                     *1
     C*
     C** If error has been found by ZA0850 then @@ESWT will be = to '1'
     C           @@ESWT    IFEQ '1'                        B*2
     C*
     C** Treat as database error.                          ***************
     C                     MOVEL*BLANKS   DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 019 *
     C                     MOVEL'019'     DBASE            *             *
     C                     MOVE '1'       *IN80            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #ZE9                       **2
     C                     END                             E*2
     C*
     C                     Z-ADD@@VDT     XPPRDD           *1
     C*
     C                     WRITEFDCCYPP0                   *1
     C*
     C***SEND*PC*UPDATE*RECORD**********                                  S01319
     C***IF*DRS*IS*PRESENT.*************                            E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZN                        *1             S01319
     C*********************END                                      E21137S01319
     C*                                                                   E21137
     C                     END                             E1
     C                     ADD  12        NINS
     C                     UPDATTABLETXF
     C*
     C** GET HEADER RECORD FOR UPDATE
     C                     MOVE *BLANKS   @KEY
     C                     MOVE '20'      @KEY1
     C           @KEY      CHAINFDTTOTLL             7674
     C*
     C**  DATA BASE ERROR
     C           *IN76     IFEQ '1'                        B1
     C                     MOVEL@KEY      DBKEY            ***************
     C                     MOVEL'FDTTOTLL'DBFILE           * DB ERROR 017*
     C                     MOVE '017'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     ROLBK                           *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C** IF RECORD LOCKED SEND MESSAGE AND RELEASE MAIN UPDATE RECORD
     C           *IN74     IFEQ '1'                        B1
     C                     CALL 'ZA0250'                   *1
     C                     MOVEL'FDM0120' @MSGID           *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     ROLBK                           *1
     C                     GOTO #ZE9                       *1
     C                     END                             E1
     C*
     C** NOW FILL UP OTHER FIELDS
     C                     MOVEL@USER     USID
     C*
     C                     Z-ADD@DD       DLUP
     C                     MOVE @MMM      MLUP
     C                     Z-ADD@YY       YLUP
     C*
     C** Unscale high/low spot rate from display for file update
     C                     EXSR #ZR
     C*
     C                     Z-ADDXPTLUP    TSPC
     C                     Z-ADD@MDATE    CHGD
     C                     MOVE @SCRKY    KEY
     C*
     C** UPDATE LAST TRANSACTION NUMBER
     C                     EXSR ZTNLU1
     C                     UPDATTABTG10F
     C*                                                                   S01194
     C**                                                                  S01194
     C** ALSO UPDATE RECORD ON SDCURR                                     S01194
     C***********A6CYCD****CHAINSDCURRL1             7674           S01194DT0162
     C           A6CYCD    CHAINSDCURRL0             7674                 DT0162
     C*                                                                   S01194
     C*                                                                   S01194
     C**  DATA BASE ERROR                                                 S01194
     C           *IN76     IFEQ '1'                        B1             S01194
     C                     MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL@CCY      DBKEY            *             *S01194
     C                     MOVEL'SDCURRPD'DBFILE           * DB ERROR 023*S01194
     C                     MOVE @OPTN     DBOPTN  7        *             *S01194
     C                     MOVE '023'     DBASE            ***************S01194
     C                     MOVE '1'       *INU7            *1             S01194
     C                     MOVE '1'       *INU8            *1             S01194
     C                     GOTO #ZE9                       *1             S01194
     C                     END                             E1             S01194
     C*                                                                   S01194
     C** IF *IN74 IS ON THEN THE RECORD IS LOCKED                         S01194
     C           *IN74     IFEQ '1'                        B1             S01194
     C                     CALL 'ZA0250'                   *1             S01194
     C                     MOVEL'FDM0120' @MSGID           *1             S01194
     C                     CALL 'ZA0240'                   *1             S01194
     C                     PARM           @MSGID           *1             S01194
     C                     GOTO #ZE9                       *1             S01194
     C                     END                             E1             S01194
     C*                                                                   S01194
     C                     MOVE LOSP      A6LSPR                          S01194
     C                     MOVE HGSP      A6HSRT                          S01194
     C                     UPDAT@A6REA4                                   S01194
     C*
     C***UPDATE*PC*DOWNLOAD*FILE***************************************** S01319
     C***IF*DRS*IS*PRESENT.**************************************** E21137S01319
     C***********BGDRCM****IFEQ 'Y'                                 E21137S01319
     C*********************EXSR #ZO                                       S01319
     C*********************END                                      E21137S01319
     C*
     C** NOW UPDATE HEADER
     C                     ADD  1         NAMD
     C*
     C                     UPDATTABLETXF
     C*
     C           CMTTXT    COMIT
     C*
     C           #ZE9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C**#ZO**-*THIS*SUBROUTINE*WRITES*A*RECORD*TO*THE*PC*UPDATE*FILE***** S01319
     C*********FOR*EVERY*RECORD*CHANGED*BY*THIS*PROGRAM*ON*TABTG10******* S01319
     C*                                                               *
     C**CALLED*BY*:*#ZE************************************************** S01319
     C**************#ZD************************************************** S01319
     C*                                                               *
     C**CALLS*:********************************************************** S01319
     C*                                                               *
     C**USES*:******@DCP***-*INSERTS*DECIMAL*PLACE*INTO*ALPHA************ S01319
     C**************@PCFT2*-*PC*DOWNLOAD*FOR*CURRENCY*FILE*************** S01319
     C**************@SP1***-*DS*FOR*SPOT*RATE*CONVERTION***************** S01319
     C**************@SP2***-*INTEGER*PART*TO*MOVE*INTO*ALPHA************* S01319
     C**************@SP3***-*DECIMAL*PART*TO*MOVE*INTO*ALPHA************* S01319
     C**************@SP4***-*INTEGER*PART*TO*ACCEPT*NUMERIC************** S01319
     C**************@SP5***-*DECIMAL*PART*TO*ACCEPT*NUMERIC************** S01319
     C**************@SP6***-*14A*SPOT*RATE******************************* S01319
     C*                                                               *
     C*****************************************************************
     C*
     C***********#ZO*******BEGSR                                          S01319
     C*
     C***SET*UP*CURRENCY*FIELDS*********                                  S01319
     C*********************MOVE 'PC'      PCRCID                          S01319
     C*********************MOVE CCY       PCCCY                           S01194
     C*********************MOVE A6CYCD    PCCCY                     S01194S01319
     C*********************Z-ADDCDP       PCDCPL                          S01194
     C*********************Z-ADDA6NBDP    PCDCPL                    S01194S01319
     C*********************MOVE MDIN      PCSPMD                          S01194
     C*********************MOVE A6MDIN    PCSPMD                    S01194S01319
     C*********************MOVE XRMD      PCXRMD                          S01319
     C*********************Z-ADDSPDY      PCSPDY                          S01194
     C*********************Z-ADDA6SPDY    PCSPDY                    S01194S01319
     C*********************Z-ADDFXSP      PCSPDT                          S01194
     C*********************Z-ADDA6FXSD    PCSPDT                    S01194S01319
     C*********************MOVE '.'       @DCP                            S01319
     C*********************MOVE NQDP      PCNQDP                          S01194
     C*********************MOVE A6NQDP    PCNQDP                    S01194S01319
     C*********************MOVE DPBF      PCDPBF                          S01194
     C*********************MOVE A6DPBF    PCDPBF                    S01194S01319
     C*********************MOVE DICM      PCDICM                   E13959 S01194
     C*********************MOVE A6DICB    PCDICM                    S01194S01319
     C*********************Z-ADDSEXP      PCSEXP                   E13959 S01194
     C*********************Z-ADDA6SCEX    PCSEXP                    S01194S01319
     C*
     C***CONVERT*SPOT*RATE*TO*ALPHA************************************** S01319
     C*********************Z-ADDSPOT      @SP1                            S01319
     C*********************Z-ADD@SP2      @SP4                            S01319
     C*********************Z-ADD@SP3      @SP5                            S01319
     C*********************MOVE @SP6      PCSPTR                          S01319
     C*
     C***CONVERT*HIGH*SPOT*RATE*TO*ALPHA********************************* S01319
     C*********************Z-ADDHGSP      @SP1                            S01194
     C*********************Z-ADDA6HSRT    @SP1                      S01194S01319
     C*********************Z-ADD@SP2      @SP4                            S01319
     C*********************Z-ADD@SP3      @SP5                            S01319
     C*********************MOVE @SP6      PCPHIS                          S01319
     C*
     C***CONVERT*LOW*SPOT*RATE*TO*ALPHA**********************************
     C*********************Z-ADDLOSP      @SP1                            S01194
     C*********************Z-ADDA6LSPR    @SP1                      S01194S01319
     C*********************Z-ADD@SP2      @SP4                            S01319
     C*********************Z-ADD@SP3      @SP5                            S01319
     C*********************MOVE @SP6      PCPLOS                          S01319
     C*
     C***FORMAT*PCDOWNLOAD*FILE*******************************************S01319
     C*********************MOVE*'BC'******SURCID**************************S01319
     C*********************MOVE*'FD'******SUMOID**************************S01319
     C*********************MOVE*'10'******SUFIID**************************S01319
     C*********************MOVE*'PC'******SUFIID**************************S01319
     C*********************Z-ADD61********SULREC**************************S01319
     C*********************Z-ADD63********SULREC**************************S01319
     C*********************MOVE*DDACTN****SUACTC**************************S01319
     C*********************MOVE**BLANKS***SUSDUD**************************S01319
     C*********************MOVEL@PCFT2****SUSDUD**************************S01319
     C********************************************************************S01319
     C***WRITE*RECORD*****************************************************S01319
     C*********************WRITECMSDUP0***********************************S01319
     C*
     C***********#ZO9******ENDSR                                          S01319
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C**#ZN**-*WRITES*A*RECORD*TO*THE*PC*UPDATE*FILE*FOR*EVERY*RECORD**   S01319
     C*********INSERTED,*AMENDED*OR*DELETED*ON*FDCCYPLL****************   S01319
     C*                                                               *
     C**CALLED BY*:*#ZE****                                           *   S01319
     C**************#ZD****                                           *   S01319
     C*                                                               *
     C**CALLS*:*****#ZL****                                           *   S01319
     C*                                                               *
     C**USES*:******@FLD1**-*NUMERIC*TO*BE*CONVERTED*******************   S01319
     C**************@FLD2**-*ALPHA*CONVERTED*FROM*NUMERIC**************   S01319
     C**************@PCFT1*-*PC*DOWN*LOAD*FOR*POINT*FILE***************   S01319
     C*                                                               *
     C*****************************************************************
     C*
     C***********#ZN*******BEGSR                                          S01319
     C*
     C***FILL*UP*DATA*STRUCTURE***                                        S01319
     C*********************MOVE '1'       *IN90                           S01319
     C*********************MOVE XPRCID    PXRCID                          S01319
     C*********************MOVE XPPRD     PXPRD                           S01319
     C*********************MOVE XPTPRD    PXPRDT                          S01319
     C*********************MOVE XPPRDX    PXPRDX                          S01319
     C*********************MOVE XPCCY     PXCCY                           S01319
     C*********************Z-ADDXPPRDD    PXPRDD                          S01319
     C*
     C***CONVERT*HIGH*POINTS*TO*APLHA***                                  S01319
     C*********************Z-ADDXPHIPT    @FLD1                           S01319
     C*********************EXSR #ZL                                       S01319
     C*********************MOVE @FLD2     PXPHIP                          S01319
     C*
     C***CONVERT*LOW*POINTS*TO*APLHA***                                   S01319
     C*********************Z-ADDXPLOPT    @FLD1                           S01319
     C*********************EXSR #ZL                                       S01319
     C*********************MOVE @FLD2     PXPLOP                          S01319
     C*
     C***NOW*SET*UP*THE*PC*DOWNLOAD*RECORD********************************S01319
     C********************************************************************S01319
     C*********************MOVE*'BC'******SURCID**************************S01319
     C*********************MOVE*'FD'******SUMOID**************************S01319
     C*********************MOVE*'04'******SUFIID**************************S01319
     C*********************MOVE*'XP'******SUFIID**************************S01319
     C*********************MOVE*'PX'******SUFIID**************************S01319
     C*********************Z-ADD34********SULREC**************************S01319
     C*********************MOVE*DDACTN****SUACTC**************************S01319
     C*********************MOVE**BLANKS***SUSDUD**************************S01319
     C*********************MOVEL@PCFT1****SUSDUD**************************S01319
     C********************************************************************S01319
     C***WRITE*RECORD*TO*THE*FILE*****************************************S01319
     C*********************WRITECMSDUP0***********************************S01319
     C*
     C*********************MOVE '0'       *IN90                           S01319
     C*
     C***********#ZN9******ENDSR                                          S01319
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       TITLE:CALCULATE A PERIOD DATE.                          *
     C*                                                               *
     C*       SUBROUTINE ZA0850 ACCEPTS A SPOT DATE(8N),PERIOD        *
     C*       UNITS (2N),PERIOD TYPE (1A),CURRENCY 1 AND CURRENCY 2.  *
     C*       IT THEN USES THE ABOVE FIELDS AND CALCULATES A PERIOD   *
     C*       DATE ACCORDINGLY.                                       *
     C*                                                               *
     C*                                                               *
     C* INPUT  :@@SPDD  SPOT DATE     FORMAT(8N)                      *
     C*         @@PRDU  PERIOD UNIT   FORMAT(2N)                      *
     C*         @@PRDT  PERIOD TYPE   FORMAT(1A)                      *
     C*         @@CCY1  CURRENCY 1    FORMAT(3A)                      *
     C*         @@CCY2  CURRENCY 2    FORMAT(3A)                      *
     C*                                                               *
     C* OUTPUT :@@VDT   SPOT DATE RETURNED FORMAT(8N)                 *
     C*         @@ESWT  SWITCH SET IF ERROR OCCURS  FORMAT(1A)        *
     C*                                                               *
     C* USES   :@@SPDD  SPOT DATE                                     *
     C*         @@PRDU  PERIOD UNIT                                   *
     C*         @@PRDT  PERIOD TYPE                                   *
     C*         @@CCY1  CURRENCY 1                                    *
     C*         @@CCY2  CURRENCY 2                                    *
     C*         @@CDAY  DAYS IN MONTH + 1                             *
     C*         @@SDAY  NO OF DAYS IN A MONTH SAVED                   *
     C*         @@HSWT  HOLIDAY SWITCH USED FOR DO OPERATIONS         *
     C*         @@LSWT  LAST DAY SWITCH INDICATING SPOT DAY IS THE    *
     C*                 LAST WORKING DAY OF THE MONTH                 *
     C*         @@WDSB  NO. OF DAYS PRIOR TO CURRENT DATE REQUIRED    *
     C*         @@DTIN  INPUT FOR ZA0680 - (YYYYMMDD)                 *
     C*         @@MDNO  OUTPUT OF ZA0680 - (MIDAS DAY NO.)            *
     C*         @@DAYN  INPUT FOR ZA0710 - (MIDAS DAY NO.)            *
     C*         @@VDT   OUTPUT OF ZA0710 - (YYYYMMDD)                 *
     C**********@@CCY***INPUT*FOR*ZA0830*-*(CURRENCY CODE)*************   S01195
     C**********@@MNO***INPUT*FOR*ZA0830*-*(MIDAS DAY NO.)*************   S01195
     C**********@@HIND**OUTPUT*OF*ZA0830*-*(HOLIDAY INDICATOR)*********   S01195
     C*         ZCCY    INPUT FOR ZCHKH - (CURRENCY CODE)             *   S01195
     C*         ZDAYNO  INPUT FOR ZCHKH - (MIDAS DAY NO.)             *   S01195
     C*         ZIND    OUTPUT OF ZCHKH - (HOLIDAY INDICATOR)         *   S01195
     C*         @@Z71D  DAY PART OF SPOT DATE                         *
     C*         @@Z71M  MONTH PART OF SPOT DATE                       *
     C*         @@Z71Y  YEAR PART OF SPOT DATE                        *
     C*                                                               *
     C* ARRAYS USED:                                                  *
     C*         @M      USED BY ZA0850  (COMPILE TIME)                *
     C*         @YD     USED BY ZA0680 AND ZA0710 (COMPILE TIME)      *
     C*         @MD     USED BY ZA0680 AND ZA0710 (COMPILE TIME)      *
     C**********@CY*****USED*BY*ZA0830**(EXECUTION TIME)***************   S01194
     C*                                                               *
     C* SUBROUTINES CALLED:                                           *
     C*         ZA0680  CONVERT DATE FORMAT(YYYYMMDD) TO MIDAS DAY NO.*
     C*         ZA0710  CONVERT MIDAS DAY NO. TO DATE FORMAT(YYYYMMDD)*
     C**********ZA0830**CHECK*IF*DATE*IS*A*WORKING*DAY*OR*NOT**********   S01194
     C*                                                               *
     C*     LAST AMEND NO. FX0078             DATE   16/09/86         *
     C*     PREV AMEND NO. 000001             DATE   16/07/86         *
     C*                                                               *
     C*****************************************************************
     C*                                                               *
     C           ZA0850    BEGSR
     C*
     C* VALIDATING PERIOD UNIT AGAINST PERIOD TYPE
     C*
     C                     MOVE '0'       @@ESWT  1
     C*
     C* VALIDATING FOR DAY
     C*
     C           @@PRDT    IFEQ 'D'                        B1
     C           @@PRDU    ANDNE-2                         *1
     C           @@PRDU    ANDNE-1                         *1
     C           @@PRDU    ANDNE1                          *1
     C                     MOVE '1'       @@ESWT  1        *1
     C                     GOTO ZA0859                     *1
     C                     END                             E1
     C*
     C* VALIDATING FOR WEEK
     C*
     C           @@PRDT    IFEQ 'W'                        B1
     C           @@PRDU    ANDNE1                          *1
     C           @@PRDU    ANDNE2                          *1
     C           @@PRDU    ANDNE3                          *1
     C                     MOVE '1'       @@ESWT           *1
     C                     GOTO ZA0859                     *1
     C                     END                             E1
     C*
     C* VALIDATING FOR MONTH
     C*
     C           @@PRDT    IFEQ 'M'                        B1
     C           @@PRDU    IFLT 0                          B*2
     C           @@PRDU    ORGT 12                         **2
     C                     MOVE '1'       @@ESWT           **2
     C                     GOTO ZA0859                     **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* VALIDATING FOR YEAR
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C           @@PRDU    IFNE 1                          B*2
     C                     MOVE '1'       @@ESWT           **2
     C                     GOTO ZA0859                     **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* IF PERIOD TYPE IS MONTH OR YEAR THEN PROCESSING IS DIFFERENT
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C           @@PRDT    OREQ 'M'                        *1
     C                     GOTO ZA0851                     *1
     C                     END                             E1
     C*
     C* PROCESSING FOR DAY AND WEEK
     C*
     C* CONVERT SPOT DATE TO MIDAS DAY NO.
     C                     Z-ADD@@SPDD    @@DTIN  80
     C                     EXSR ZA0680
     C*
     C* IF PERIOD TYPE IS 'W' THEN CONVERT PERIOD UNITS AND ADD TO THE
     C* MIDAS DAY NO. (NOTE THAT 1 DAY IS ADDED IN NEXT PROCESSING,
     C* HENCE, (N WEEKS TIMES 7) - 1 DAY. )
     C           @@PRDT    IFEQ 'W'                        B1
     C*
     C           @@PRDU    IFEQ 1                          B*2
     C                     ADD  6         @@MDNO           **2
     C                     END                             E*2
     C*
     C           @@PRDU    IFEQ 2                          B*2
     C                     ADD  13        @@MDNO           **2
     C                     END                             E*2
     C*
     C           @@PRDU    IFEQ 3                          B*2
     C                     ADD  20        @@MDNO           **2
     C                     END                             E*2
     C*
     C                     END                             E*1
     C*
     C**  IF THE DATE TO BE FOUND IS FOR THE NEXT WORKING DAY, OR FOR
     C**  THE NEXT WORKING DAY AFTER 1,2 OR 3 WEEKS, USE THE FOLLOWING
     C**  PROCESSING.
     C           @@PRDU    IFGT 0                          B1
     C*
     C**  CONTINUE PROCESSING WHILST THE CALC. SPOT DATE IS A HOLIDAY
     C**  FOR EITHER CURRENCY.
     C******               MOVE 'H'       @@HIND           *1             S01195
     C******     @@HIND    DOWEQ'H'                        B*2            S01195
     C                     MOVE 'H'       ZIND             *1             S01195
     C           ZIND      DOWEQ'H'                        B*2            S01195
     C*
     C**  INCREMENT THE SPOT DATE BEING CALCULATED BY ONE DAY.
     C                     ADD  1         @@MDNO           **2
     C*
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE FIRST
     C**  CURRENCY BY EXECUTING SR. ZA0830.
     C*******              MOVE @@CCY1    @@CCY   3        **2            S01195
     C                     MOVE @@CCY1    ZCCY    3        **2            S01195
     C*******              Z-ADD@@MDNO    @@MNO   50       **2            S01195
     C                     Z-ADD@@MDNO    ZDAYNO  50       **2            S01195
     C*******              EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                                     S01195
     C*
     C**  IF THE SPOT DATE IS NOT A HOLIDAY FOR THE FIRST CURRENCY,
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE
     C**  SECOND CURRENCY BY EXECUTING SR. ZCHKH.
     C******     @@HIND    IFNE 'H'                        B**3           S01195
     C           ZIND      IFNE 'H'                        B**3           S01195
     C*
     C******               MOVE @@CCY2    @@CCY            ***3           S01195
     C                     MOVE @@CCY2    ZCCY             ***3           S01195
     C******               Z-ADD@@MDNO    @@MNO            ***3           S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ***3           S01195
     C******               EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C**  IF THE DATE TO BE FOUND IS FOR 1 OR 2 WORKING DAYS PRIOR TO
     C**  THE CURRENT DATE, USE THE FOLLOWING PROCESSING.
     C           @@PRDU    IFLT 0                          B1
     C*
     C**  INITIALISE THE NUMBER OF WORKING DAYS SUBTRACTED FROM THE
     C**  CURRENT DATE.
     C                     Z-ADD0         @@WDSB  10       *1
     C*
     C**  CONTINUE PROCESSING WHILST THE ABSOLUTE NO. OF MUTUAL WORKING
     C**  DAYS PRIOR TO THE CURRENT DATE IS GREATER THAN THE ABSOLUTE
     C**  NO. OF DAYS SUBTRACTED FROM THE CURRENT DATE.
     C           @@PRDU    DOWLT@@WDSB                     B*2
     C*
     C**  CONTINUE PROCESSING WHILST THE CALC. SPOT DATE IS A HOLIDAY
     C**  FOR EITHER CURRENCY.
     C******               MOVE 'H'       @@HIND           **2            S01195
     C******     @@HIND    DOWEQ'H'                        B**3           S01195
     C                     MOVE 'H'       ZIND             **2            S01195
     C           ZIND      DOWEQ'H'                        B**3           S01195
     C*
     C**  DECREMENT THE SPOT DATE BEING CALCULATED BY ONE DAY.
     C                     SUB  1         @@MDNO           ***3
     C*
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE FIRST
     C**  CURRENCY BY EXECUTING SR. ZCHKH .
     C*******              MOVE @@CCY1    @@CCY            ***3           S01195
     C                     MOVE @@CCY1    ZCCY             ***3           S01195
     C*******              Z-ADD@@MDNO    @@MNO            ***3           S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ***3           S01195
     C*******              EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C*
     C**  IF THE SPOT DATE IS NOT A HOLIDAY FOR THE FIRST CURRENCY,
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE
     C**  SECOND CURRENCY BY EXECUTING SR. ZA0830.
     C******     @@HIND    IFNE 'H'                        B***4          S01195
     C           ZIND      IFNE 'H'                        B***4          S01195
     C*
     C******               MOVE @@CCY2    @@CCY            ****4          S01195
     C                     MOVE @@CCY2    ZCCY             ****4          S01195
     C******               Z-ADD@@MDNO    @@MNO            ****4          S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ****4          S01195
     C******               EXSR ZA0830                     ****4          S01195
     C                     EXSR ZCHKH                      ****4          S01195
     C*
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C**  INCREMENT THE NO. OF WORKING DAYS ADDED TO THE CURRENT DATE
     C**  BY ONE DAY.
     C                     SUB  1         @@WDSB           **2
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* CONVERTING MIDAS DAY NO. TO DATE(YYYYMMDD)
     C*
     C                     Z-ADD@@MDNO    @@DAYN  50
     C                     EXSR ZA0710
     C                     GOTO ZA0859
     C*
     C           ZA0851    TAG
     C*
     C                     MOVE 'N'       @@NXTM  1
     C                     MOVE '1'       @@HSWT  1
     C                     MOVE @@SPDD    @@VDT
     C*
     C* CHECKING FOR LEAP YEAR
     C*
     C           @@YR      DIV  4         @@LP    40
     C                     MVR            @@RM    10
     C*
     C* STORING DAYS IN A MONTH FOR SPOT DATE INPUTED
     C*
     C                     MOVE @M,@@Z71M @@SDAY
     C*
     C           @@RM      IFEQ 0                          B1
     C           @@Z71M    IFEQ 2                          B*2
     C                     MOVE 29        @@SDAY  20       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* CHECKING IF SPOT DATE IS THE LAST WORKING DAY OF THE MONTH
     C*
     C******               ADD  1         @@Z71D
     C                     Z-ADD@@Z71D    @@CDAY  20
     C                     ADD  1         @@CDAY
     C*
     C* IF NEXT DAY IS GREATER THAN DAYS IN A MONTH THEN SPOT DATE
     C* IS THE LAST WORKING DAY
     C*
     C           @@CDAY    IFGT @@SDAY                     B1
     C                     MOVE '1'       @@LSWT  1        *1
     C******               Z-ADD@@SDAY    @@Z71D           *1
     C                     ELSE                            X1             E12301
     C                     Z-ADD@@CDAY    @@Z71D           *1             E12301
     C                     END                             E1
     C*
     C* CHECKING FOR NEXT WORKING DATE
     C*
     C           @@LSWT    IFEQ '0'                        B1
     C*
     C           @@HSWT    DOWEQ'1'                        B*2
     C*
     C* GET MIDAS DAY NO
     C*
     C                     Z-ADD@@VDT     @@DTIN           **2
     C                     EXSR ZA0680                     **2
     C*
     C* CHECK IF WORKIN DAY
     C*
     C******               Z-ADD@@MDNO    @@MNO            **2            S01195
     C                     Z-ADD@@MDNO    ZDAYNO           **2            S01195
     C******               MOVE @@CCY1    @@CCY            **2            S01195
     C                     MOVE @@CCY1    ZCCY             **2            S01195
     C******               EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C*
     C*******    @@HIND    IFEQ 'W'                        B**3           S01195
     C           ZIND      IFEQ 'W'                        B**3           S01195
     C*******              MOVE @@CCY2    @@CCY            ***3           S01195
     C                     MOVE @@CCY2    ZCCY             ***3           S01195
     C*******              EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C                     END                             E**3
     C*
     C* IF HOLIDAY ADD 1 TO DAY
     C*
     C******     @@HIND    IFEQ 'H'                        B**3           S01195
     C           ZIND      IFEQ 'H'                        B**3           S01195
     C                     ADD  1         @@Z71D           ***3
     C                     ELSE                            X**3
     C                     MOVE '0'       @@HSWT           ***3
     C                     END                             E**3
     C*
     C* IF DAY GREATER THAN DAYS IN A MONTH THEN EXIT OUT OF DO AND SETON
     C* LAST DAY SWITCH ALSO MOVE DAYS IN THE MONTH TO DAY
     C*
     C           @@Z71D    IFGT @@SDAY                     B**3
     C                     MOVE '0'       @@HSWT           ***3
     C                     MOVE '1'       @@LSWT           ***3
     C                     MOVE @@SDAY    @@Z71D           ***3
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* IF LAST DAY SWITCH IS NOT ON THEN MOVE SPOT DATE INPUTED TO
     C* WORK DATE BEING USED
     C*
     C           @@LSWT    IFEQ '0'                        B1
     C                     Z-ADD@@SPDD    @@VDT            *1
     C                     END                             E1
     C*
     C* IF PERIOD TYPE IS 'Y' THEN ADD PERIOD UNIT TO YEAR ELSE ADD IT
     C* TO MONTH
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C                     ADD  @@PRDU    @@YR             *1
     C                     ELSE                            X1
     C                     ADD  @@PRDU    @@Z71M           *1
     C                     END                             E1
     C*
     C* CHECKING IF MONTH IS GREATER THAN 12
     C*
     C           @@Z71M    IFGT 12                         B1
     C           @@Z71M    SUB  12        @@Z71M           *1
     C                     ADD  1         @@YR             *1
     C                     END                             E1
     C*
     C* CHECKING FOR LEAP YEAR
     C*
     C           @@YR      DIV  4         @@LP    40
     C                     MVR            @@RM    10
     C                     MOVE '1'       @@HSWT
     C*
     C                     MOVE @M,@@Z71M @@SDAY
     C*
     C           @@RM      IFEQ 0                          B1
     C           @@Z71M    IFEQ 2                          B*2
     C                     MOVE 29        @@SDAY  20       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* IF LAST DAY SWITCH IS ON THEN MOVE DAYS IN A MONTH TO DAY FIELD
     C*
     C           @@LSWT    IFEQ '1'                        B1
     C                     MOVE @@SDAY    @@Z71D           *1
     C                     END                             E1
     C*
     C* IF DAY FIELD IS GREATER THAN DAYS IN A MONTH THEN MOVE DAYS IN A
     C* MONTH TO DAY FIELD
     C*
     C           @@Z71D    IFGT @@SDAY                     B1
     C                     Z-ADD@@SDAY    @@Z71D           *1
     C                     END                             E1
     C*
     C* CHECKING IF A WORKING DAY
     C*
     C           @@HSWT    DOWEQ'1'                        B1
     C*
     C                     Z-ADD@@VDT     @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C******               Z-ADD@@MDNO    @@MNO            *1             S01195
     C                     Z-ADD@@MDNO    ZDAYNO           *1             S01195
     C******               MOVE @@CCY1    @@CCY            *1             S01195
     C                     MOVE @@CCY1    ZCCY             *1             S01195
     C******               EXSR ZA0830                     *1             S01195
     C                     EXSR ZCHKH                      *1             S01195
     C*
     C*******    @@HIND    IFEQ 'W'                        B*2            S01195
     C           ZIND      IFEQ 'W'                        B*2            S01195
     C*******              MOVE @@CCY2    @@CCY            **2            S01195
     C                     MOVE @@CCY2    ZCCY             **2            S01195
     C*******              EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C                     END                             E*2
     C*
     C* IF HOLIDAY ADD 1 TO DAY FIELD.IF DAY FIELD IS GREATER THAN DAYS IN
     C* A MONTH THEN SUBTRACT 2 TO GET THE PREVIOUS DAY
     C*
     C******     @@HIND    IFEQ 'H'                        B*2            S01195
     C           ZIND      IFEQ 'H'                        B*2            S01195
     C                     ADD  1         @@Z71D           **2
     C           @@Z71D    IFGT @@SDAY                     B**3
     C           @@NXTM    OREQ 'Y'                        ***3
     C                     SUB  2         @@Z71D           ***3
     C                     MOVE 'Y'       @@NXTM           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C*******    @@HIND    IFEQ 'W'                        B*2            S01195
     C           ZIND      IFEQ 'W'                        B*2            S01195
     C                     MOVE '0'       @@HSWT           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C                     GOTO ZA0859
     C                     MOVE @@SPDD    @@SPDD  80
     C                     MOVE @@PRDU    @@PRDU  20
     C                     MOVE @@PRDT    @@PRDT  1
     C                     MOVE @@CCY1    @@CCY1  3
     C                     MOVE @@CCY2    @@CCY2  3
     C*
     C           ZA0859    ENDSR
     C*******************************************************************
     C/EJECT
     C*******************************************************************
     C*
     C* ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO
     C*          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)
     C*
     C* CALLED BY :
     C*
     C* CALLS :
     C*
     C* INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
     C*
     C* OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)
     C*
     C* USES :   @@CC   NUMBER OF CENTURIES IN DATE
     C*          @@DAY  DAY NUMBER
     C*          @@REM  REMAINDER FROM DIVIDE
     C*          @@MTH  MONTH NUMBER
     C*          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 MONTH
     C*          @@WK2  WORK FIELD (2,0)
     C*          @@WK5  WORK FIELD (5,0)
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @@YY   YEAR (2 CHARACTER)
     C*          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 A FOUR YEAR PERIOD
     C*
     C*******************************************************************
     C*
     C           ZA0680    BEGSR
     C*
     C**  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
     C*
     C**   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
     C*
     C**  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C           @@YYYY    ADD  28        @@WK2
     C*
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
     C*
     C**  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          B1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C**  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
     C*
     C**  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
     C*
     C**  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
     C*
     C           ZA0689    ENDSR                           **ZA0689 TAG**
     C*****************************************************************
     C/EJECT
      *****************************************************************
      *                                                               *
      *       TITLE:CALCULATE MIDAS DAY NO. TO DRS (YYYYMMDD) FORMAT. *
      *                                                               *
      *       SUBROUTINE ZA0710 EXPECTS FIELD '@@DAYN' TO BE          *
      *       PASSED TO IT IN 5,0 FORMAT.IF THE ABOVE FIELD IS LESS   *
      *       THAN 1 IT RETURNS 1 IN FIELD '@@RTN'.THE MAIN PROGRAM   *
      *       SHOULD CHECK FOR THIS CONDITION AND DO THE NECESSARY.   *
      *       IF '@@RTN' IS NOT EQUAL TO 1 IT RETURNS THE FIELD       *
      *       '@@VDT'  IN 'YYYYMMDD' FORMAT.                          *
      *                                                               *
      * NOTE: FIELD TO BE DEFINED BY EXTERNAL ROUTINE IS
      *                                                               *
      *       1) @@DAYN   LENGTH 5,0.                                 *
      *                                                               *
      *       FIELDS USED AND ALREADY DEFINED IN THE ROUTINE ARE:     *
      *                                                               *
      *       1) @@VDT    LENGTH 8,0 DEFINED BY A DS.                 *
      *       2) @@RTN    LENGTH 1,0.                                 *
      *       3) @@I      LENGTH 2,0 USED TO ACCESS ARRAY @YD         *
      *       4) @@J      LENGTH 2,0 USED TO ACCESS ARRAY @MD         *
      *       5) @@Z71Y   LENGTH 4,0 DEFINED BY A DS.                 *
      *       6) @@RDAY   LENGTH 5,0.                                 *
      *       7) @@LEAP   LENGTH 1,0.
      *                                                               *
      *       INDICATORS USED ARE:                                    *
      *                                                               *
      *       1) 80       CHECK FOR LOW AND EQUAL ON ARRAY @YD        *
      *       2) 81       CHECK FOR LOW ON ARRAY @MD.                 *
      *                                                               *
      * INPUT FIELD:       @@DAYN                                     *
      *                                                               *
      * OUTPUT FIELD:      @@VDT                                      *
      *                                                               *
      * WORK FIELDS:       @@RTN                                      *
      *                    @@Z71Y                                     *
      *                    @@RDAY                                     *
      *                    @@LEAP                                     *
      *                    @@I                                        *
      *                    @@J                                        *
      *                                                               *
      * ARRAYS USED:       @YD COMPILE TIME ARRAY.
      *                    @MD COMPILE TIME ARRAY.
      *
      *****************************************************************
     C*
     C           ZA0710    BEGSR
     C*
     C                     SETOF                     8081
     C                     Z-ADD0         @@RTN   10
     C                     Z-ADD0         @@VDT
     C                     Z-ADD1         @@I     20
     C                     Z-ADD1         @@J     20
     C                     Z-ADD1         @@LEAP  10
     C*
     C           @@DAYN    IFLT 1
     C                     Z-ADD1         @@RTN
     C                     GOTO ZA0719
     C                     END
     C*
     C* DIVISION TO DETERMINE WETHER LEAP YEAR.
     C*
     C           @@DAYN    DIV  1461      @@Z71Y
     C                     MVR            @@RDAY  50
     C*
     C* CALCULATING YEAR.
     C*
     C           @@Z71Y    MULT 4         @@Z71Y
     C                     ADD  1972      @@Z71Y
     C*
     C* CHECKING IF YEAR IS GREATER THAN OR EQUAL TO 2100
     C*
     C           @@Z71Y    IFGE 2100
     C                     ADD  @@SSY2    @@RDAY
     C                     END
     C*
     C* LOKUP ARRAY @YD TO SEE HOW MANY YEARS OF A FOUR YEAR CYCLE
     C* HAVE PASSED.
     C*
     C           @@RDAY    LOKUP@YD,@@I                8080
     C*
     C* IF YEAR IS A LEAP YEAR SSLEAP IS SET TO ZERO.
     C*
     C           *IN80     IFEQ '0'
     C                     Z-ADD0         @@LEAP
     C                     END
     C*
     C* ADD INDEX TO YEAR TO GIVE CORRECT YEAR AND ADJUST '@@RDAY'.
     C*
     C           @@LEAP    IFEQ 1
     C           @@RDAY    SUB  @YD,@@I   @@RDAY
     C                     ADD  @@I       @@Z71Y
     C                     END
     C*
     C* PROCESSING FOR A LEAP YEAR.
     C*
     C           @@LEAP    IFEQ 0
     C*
     C* IF '@@RDAY' = 60 DATE MUST BE 29TH OF FEBRUARY.
     C*
     C           @@RDAY    IFEQ 60
     C                     Z-ADD29        @@Z71D
     C                     Z-ADD2         @@Z71M
     C                     GOTO ZA0711
     C                     END
     C*
     C* IF '@@RDAY' > 60 DATE IS AFTER 29TH OF FEBRUARY,CONVERSION CAN
     C* PROCEED AS USUAL AFTER SUBTRACTING THE EXTRA DAY FOR THE LEAP
     C* YEAR. NOTE : '@@RDAY' < 60 CONVERSION PROCEEDS AS USUAL.
     C*
     C           @@RDAY    IFGT 60
     C           @@RDAY    SUB  1         @@RDAY
     C                     END
     C*
     C                     END
     C*
     C* IF DAY '@@DAYN' IS EXACTLY DIVISIBLE BY 1461 (NUMBER OF DAYS
     C* IN 4 YEARS) THEN DATE MUST BE LAST DAY OF PREVIOUS FOUR YEAR
     C* GROUP.
     C*
     C           @@RDAY    IFEQ 0
     C                     Z-ADD31        @@Z71D
     C                     Z-ADD12        @@Z71M
     C                     SUB  1         @@Z71Y
     C                     GOTO ZA0711
     C                     END
     C*
     C* LOOK UP ARRAY ARRAY @MD TO DETERMINE WHICH MONTH '@@RDAY'
     C* OCCURS IN
     C*
     C           @@RDAY    LOKUP@MD,@@J                81
     C                     Z-ADD@@J       @@Z71M
     C           @@RDAY    SUB  @MD,@@J   @@Z71D
     C*
     C* DS @@VDT  IS RETURNED IN YYYYMMDD FORMAT
     C*
     C           ZA0711    TAG
     C*
     C                     MOVE @@Z71Y    @@YR
     C*
     C           ZA0719    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*****                                                       *****   S01195
     C**ZA0830 - THIS SUBROUTINE FINDS OUT WHETHER A PARTICULAR DAY****   S01195
     C*****      IS A HOLIDAY IN A PARTICULAR CURRENCY             ****   S01195
     C*****                                                       *****   S01195
     C**CALLED BY :                                               *****   S01195
     C*****                                                       *****   S01195
     C**CALLS :                                                   *****   S01195
     C*****                                                       *****   S01195
     C**INPUT  : @@MNO  MIDAS DAY NUMBER 5N                       *****   S01195
     C*****      @@CCY  CURRENCY CODE 3A                          *****   S01195
     C*****                                                       *****   S01195
     C**OUTPUT : @@HIND HOLIDAY/WORKING DAY INDICATOR 1A          *****   S01195
     C*****                                                       *****   S01195
     C**USES :   @@MNO  MIDAS DAY NUMBER                          *****   S01195
     C*****      @@CCY  CURRENCY CODE                             *****   S01195
     C*****      @@ONCE FIRST TIME THROUGH INDICATOR              *****   S01195
     C*****      @@CY1  FIRST HALF OF CURRENCY ARRAY              *****   S01195
     C*****      @@CY2  SECOND HALF OF CURRENCY ARRAY             *****   S01195
     C*****      @@MNO6 MIDAS NUMBER WITH TRAILING BLANK          *****   S01195
     C*****      @@HIND HOLIDAY/WORKING DAY INDICATOR             *****   S01195
     C*****      @@INEX INCLUDE/EXCLUDE INDICATOR                 *****   S01195
     C*****                                                       *****   S01195
     C*****      INDICATORS                                       *****   S01195
     C*****      80 RECORD NOT FOUND                              *****   S01195
     C*****      81 CURRENCY NOT FOUND ON RECORD                  *****   S01195
     C*****                                                       *****   S01195
     C*****************************************************************   S01195
     C*****      ZA0830    BEGSR                                  *****   S01195
     C*****                                                       *****   S01195
     C***OPEN CURRENCY/HOLIDAY FILE IF FIRST TIME THROUGH         *****   S01195
     C*****      @@ONCE    IFNE 'Y'                        B1     *****   S01195
     C*****                OPEN FDTABJLL                   *1     *****   S01195
     C*****                MOVE 'Y'       @@ONCE  1        *1     *****   S01195
     C*****                END                             E1     *****   S01195
     C*****                                                       *****   S01195
     C***BLANK OUT ARRAY                                          *****   S01195
     C*****                MOVE *BLANKS   @@CY1                   *****   S01195
     C*****                MOVE *BLANKS   @@CY2                   *****   S01195
     C*****                                                       *****   S01195
     C***ACCESS TABLE ON FIRST KEY                                *****   S01195
     C*****                MOVEL@@MNO     @@MNO6  6               *****   S01195
     C*****                MOVE @@MNO6    @@0830 12               *****   S01195
     C*****                MOVEL'22    '  @@0830                  *****   S01195
     C*****                MOVE '1'       @@0830                  *****   S01195
     C*****      @@0830    CHAINTABLETJF             80           *****   S01195
     C*****                                                       *****   S01195
     C***IF RECORD NOT FOUND OR DELETED                           *****   S01195
     C*****      *IN80     IFEQ '1'                        B1     *****   S01195
     C*****      RECI      OREQ '*'                        *1     *****   S01195
     C*****                MOVE 'W'       @@HIND           *1     *****   S01195
     C*****                GOTO ZA0839                     *1     *****   S01195
     C*****                END                             E1     *****   S01195
     C*****                                                       *****   S01195
     C***MOVE FIRST 25 CURRENCIES TO ARRAY                        *****   S01195
     C*****                MOVE HCCY      @@CY1                   *****   S01195
     C*****                                                       *****   S01195
     C***ACCESS TABLE ON SECOND KEY                               *****   S01195
     C*****                MOVE '2'       @@0830                  *****   S01195
     C*****      @@0830    CHAINTABLETJF             80           *****   S01195
     C*****                                                       *****   S01195
     C***IF SECOND RECORD FOUND AND NOT DELETED                   *****   S01195
     C*****      *IN80     IFEQ '0'                        B1     *****   S01195
     C*****      RECI      ANDNE'*'                        *1     *****   S01195
     C*****                MOVE HCCY      @@CY2            *1     *****   S01195
     C*****                END                             E1     *****   S01195
     C*****                                                       *****   S01195
     C***SEARCH ARRAY FOR INPUT CURRENCY                          *****   S01195
     C*****      @@CCY     LOKUP@CY                      81       *****   S01195
     C*****                                                       *****   S01195
     C***IF INPUT CURRENCY IS IN ARRAY                            *****   S01195
     C*****      *IN81     IFEQ '1'                        B1     *****   S01195
     C*****                                                       *****   S01195
     C***IF INCLUDE/EXCLUDE INDICATOR EQ 'E'                      *****   S01195
     C*****      INEX      IFEQ 'E'                        B*2    *****   S01195
     C*****                MOVE 'W'       @@HIND  1        **2    *****   S01195
     C*****                ELSE                            X*2    *****   S01195
     C*****                MOVE 'H'       @@HIND           **2    *****   S01195
     C*****                END                             E*2    *****   S01195
     C*****                END                             E1     *****   S01195
     C*****                                                       *****   S01195
     C***IF INPUT CURRENCY IS NOT IN ARRAY                        *****   S01195
     C*****      *IN81     IFEQ '0'                        B1     *****   S01195
     C*****                                                       *****   S01195
     C***IF INCLUDE/EXCLUDE INDICATOR EQ 'I'                      *****   S01195
     C*****      INEX      IFEQ 'I'                        B*2    *****   S01195
     C*****                MOVE 'W'       @@HIND           **2    *****   S01195
     C*****                ELSE                            X*2    *****   S01195
     C*****                MOVE 'H'       @@HIND           **2    *****   S01195
     C*****                END                             E*2    *****   S01195
     C*****                END                             E1     *****   S01195
     C*****      ZA0839    ENDSR                                  *****   S01195
     C*****************************************************************   S01195
     C/COPY ZSRSRC,ZCHKH                                                  S01195
     C/COPY ZSRSRC,ZACCH                                                  S01195
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #B  - CONTROLS THE MAIN FLOW OF THE PROGRAM                   *
     C*                                                               *
     C* CALLED BY : MAIN                                              *
     C*                                                               *
     C* CALLS :     #ZG                                               *
     C*             #ZF                                               *
     C*             #BA                                               *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           #B        BEGSR
     C*
     C** IF U7 OR U8 ARE ON GO TO END OF SUBROUTINE
     C           *INU7     CABEQ'1'       #B9
     C           *INU8     CABEQ'1'       #B9
     C*
     C                     EXSR #ZG
     C*
     C                     EXSR #ZF
     C*
     C                     EXSR #BA
     C*
     C           #B9       ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* ZTNLU - TO LOCK AND UPDATE THE TRANSACTION NUMBER DATA AREA   *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           ZTNLU1    BEGSR
     C           *NAMVAR   DEFN MNATN     DNATN
     C           *LOCK     IN   DNATN
     C                     MOVE FNATN     NATN
     C                     MOVE FNATN     ZZWK05
     C                     ADD  1         ZZWK05
     C                     MOVE ZZWK05    FNATN
     C                     OUT  DNATN
     C                     MOVE 'FD'      MDID
     C                     MOVEL'FD0140'  PGMN
     C                     MOVE DDWID     WSIDX
     C                     TIME           MTIME
     C                     MOVE DDACTN    ACTCDX
     C                     MOVE @USER     USRIDX
     C                     MOVE DDCCY     @CCYX
     C                     MOVE @MSG,1    @MSGX
     C                     Z-ADDNATN      TNLU
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #A  - INITIALISES THE DISPLAY FIELDS AND FIELDS USED FOR THE  *
     C* SUBFILE MESSAGE FILE.                                         *
     C*                                                               *
     C* CALLED BY : MAIN                                              *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES : @JOB - THE JOB NAME FROM THE PSDS                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           #A        BEGSR
     C*
     C                     MOVEACPY@      BIS@   80                       S01194
      *                                                                   E21137
      ** Access SDMMODPD for CM ind.                                      E21137
      *                                                                   E21137
     C                     CALL 'AOMMODR0'                                E21137
     C                     PARM '*DBERR ' @RTCD   7                       E21137
     C                     PARM '*FIRST ' @OPTN   7                       E21137
     C           SDMMOD    PARM SDMMOD    DSFDY                           E21137
     C*
     C           *LIKE     DEFN DDACTN    @ACTN
     C           *LIKE     DEFN DDCCNM    @CCNM
     C           *LIKE     DEFN DDCCY     @CCY
     C           *LIKE     DEFN CHGD      @CHGD
     C*          *LIKE     DEFN XPTPRD    @DSC
     C           *LIKE     DEFN TSPC      @TSPC
     C           *LIKE     DEFN XPPRD     @PRDJ
     C           *LIKE     DEFN XPCCY     @SCCY
     C           *LIKE     DEFN XPTPRD    @TPRD
     C           *LIKE     DEFN XPDLUP    @XDLUP
     C           *LIKE     DEFN XPMLUP    @XMLUP
     C           *LIKE     DEFN XPTLUP    @XTLUP
     C           *LIKE     DEFN XPYLUP    @XYLUP
     C*
     C** IF IT IS THE FIRST TIME THE PROGRAM RUNS THROUGH THIS SECTION
     C** THEN CLEAR THE PROGRAM MESSAGE QUEUE
     C           @FIRST    IFNE 'FIRST'                    B1
     C                     CALL 'ZA0250'                   *1
     C                     ELSE                            X1
     C                     GOTO #A9                        *1
     C                     END                             E1
     C                     MOVE 'FIRST'   @FIRST  5
     C                     Z-ADD0         STATUS
     C*
     C** DEFINE ALL WORK FIELDS USED IN PROGRAM
     C*                    MOVE *BLANKS   @ADAT   7
     C*                    MOVE *BLANKS   @CDE    1
     C                     Z-ADD0         @CNT    50
     C                     Z-ADD0         @COUNT  50
     C*                    Z-ADD0         @DATEN  50
     C*                    Z-ADD0         @DATEP  60
     C                     Z-ADD0         @DEC    50
     C*                    MOVE *BLANKS   @DFMT   1
     C                     Z-ADD0         @FLD3   70
     C                     Z-ADD0         @FLD4   72
     C                     Z-ADD0         @FLD5   10
     C                     Z-ADD0         @HIPTS 138
     C*                    Z-ADD0         @IDX    50
     C                     Z-ADD0         @L      50
     C                     Z-ADD0         @LOPTS 138
     C                     Z-ADD0         @MDAT   60
     C                     MOVE *BLANKS   @MSGID 10
     C                     MOVE *BLANKS   @FLDS  66
     C                     Z-ADD0         @P      50
     C*                    Z-ADD0         @PDAT   80
     C                     MOVE ' '       @PERR   1
     C                     Z-ADD0         @PWR    20
     C                     Z-ADD0         @RRN    50
     C                     Z-ADD0         @RRN1   50
     C*                    MOVE *BLANKS   @RTN    1
     C*                    Z-ADD0         @TDAT   50
     C*                    Z-ADD0         @TIM    50
     C                     Z-ADD0         @X      50
     C                     Z-ADD0         @01HI   72
     C                     Z-ADD0         @01LO   72
     C                     Z-ADD0         @02HI   72
     C                     Z-ADD0         @02LO   72
     C                     MOVE *BLANKS   EXTTAG  6
     C                     Z-ADD0         ZZWK05  50
     C                     MOVE 'N'       @UPDWS  1
     C*
     C***NOW*GET*THE*BASE*CURRENCY*FOR*DEALING*FROM*FDINSTLL**************S01319
     C***********1*********CHAINFDINSTLL*************77*******************S01319
     C********************************************************************S01319
     C********************************************************************S01319
     C***DATA*BASE*ERROR*IF*NOT*PRESENT***********************************S01319
     C************IN77*****IFEQ*'1'************************B1*************S01319
     C***CHECK*RECORD*IS*LIVE*********************************************S01319
     C***********IDDLTF****ORNE**BLANK*********************X1*************S01319
     C*********************MOVE*'018'*****DBASE***************************S01319
     C*********************MOVEL'FDINSTLL'DBFILE*************DB*ERROR*018*S01319
     C*********************MOVE*'1'*******DBKEY***************************S01319
     C*********************MOVE*'1'********INU7*************1*************S01319
     C*********************MOVE*'1'********INU8*************1*************S01319
     C*********************GOTO*#A9*************************1*************S01319
     C*********************END*****************************E1*************S01319
     C**********           CALL 'AODEALR0'                                S01319              CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*DBERR ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                           S01319              CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C*
     C** SET UP THE SCALING EXPONENT FOR THE BASE CURRENCY
     C*********************Z-ADDSEXP      @SEXPB  10                      S01194
     C                     Z-ADDA6SCEX    @SEXPB  10                      S01194
     C*
     C** NOW INITIALISE THE FIELDS
     C                     MOVE *BLANKS   DDACTN
     C                     MOVE *BLANKS   DDCCNM
     C                     MOVE *BLANKS   DDCCY
     C                     Z-ADD0         DDSPT1
     C                     Z-ADD0         DDSPT2
     C                     MOVE *BLANKS   DD01OF
     C                     MOVE *BLANKS   DD01BI
     C                     MOVE *BLANKS   DDPDX1
     C                     MOVE *BLANKS   DD02OF
     C                     MOVE *BLANKS   DD02BI
     C                     MOVE *BLANKS   DDPDX2
     C                     MOVEL'*'       DDPGMQ
     C                     MOVE '1'       *IN10
     C                     MOVEL'FD0140'  DBPROG
     C                     MOVEL@JOB      DDWID
     C                     Z-ADD0         DDTIME
     C                     MOVE '1'       *IN65
     C                     MOVEL'20'      @SCRKY
     C                     MOVE '1'       @KEY4
     C           @EXKY     KLIST
     C                     KFLD           DDCCY
     C                     KFLD           @TPRD
     C                     KFLD           @PRDJ
     C                     Z-ADD@PRD,1    @PRDJ
     C                     MOVE @PTP,1    @TPRD
     C*
     C** FIRST CLEAR SUBFILE
     C                     MOVE '1'       *IN43
     C                     WRITEFD0140S4
     C                     MOVE '0'       *IN43
     C*
     C* THIS SETS UP THE INPUT SUBFILE TO ENTER THE PERIOD DESCRIPTIONS
     C* IN TO IT
     C*
     C** SET UP SUBFILE FIELDS
     C                     Z-ADD1         @RRN1
     C*
     C** SET UP THE FIRST TWO FIELDS
     C                     MOVE @PDD,1    DDDSC1
     C                     MOVE @PDD,2    DDDSC2
     C                     Z-ADD3         @CNT
     C*
     C** NOW THE SUBFILE FIELDS
     C           @PDD,@CNT DOWNE*BLANKS                    B1
     C           @CNT      ANDLT21                         *1
     C                     MOVE @PDD,@CNT DDDSC3           *1
     C                     MOVE *BLANKS   DD03OF
     C                     MOVE *BLANKS   DD03BI
     C                     MOVE *BLANKS   DDPDX3
     C                     WRITEFD0140S5                   *1
     C                     ADD  1         @CNT             *1
     C                     ADD  1         @RRN1            *1
     C                     END                             E1
     C           @RRN1     SUB  1         @CNT
     C*
     C**  ACCESS INSTALLATION FILE FDICDRLL TO GET DATE DETAILS.
     C*********************EXSR ZA0150                                    S01194
     C*                                                                   S01194
     C                     CALL 'AOBANKR0'                                S01194
     C*********************PARM '*MSG   ' @RTCD   7                       S01314
     C                     PARM '*DBERR ' @RTCD   7                       S01314
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
     C****Check*for*data*base*error.                                S01194S01314
     C***********@RTCD     IFNE *BLANK                     B1       S01194S01314
     C*********************MOVEL'SDBANKPD'DBFILE           ******** S011S4S01314
     C*********************MOVEL'900'     DBASE            * DBERR  S01194S01314
     C*********************MOVEL@OPTN     DBKEY            ********S01194 S01314
     C*********************MOVE '1'       *INU7            *1       S01194S01314
     C*********************MOVE '1'       *INU8            *1       S01194S01314
     C*********************DUMP                            *1       S01194S01314
     C*********************EXSR *PSSR                      *1       S01194S01314
     C*********************GOTO #A9                        *1       S01194S01314
     C*********************END                             E1       S01194S01314
     C*                                                                   S01194
     C                     MOVE BJMRDT    RUNA                            S01194
     C*                                                                   S01194
     C*                                                                   S01194
     C**  CONVERT MONTH TO NUMERIC FORM.
     C                     Z-ADD1         X
     C           @MMM      LOKUP@MTH,X                   69
     C                     MOVE '0'       *IN69
     C                     MOVE @DD       @DLUP
     C                     MOVE @YY       @YLUP
     C                     MOVE @DATE     @MDATE  60
     C*
     C** READ DATA AREA - RUNDAT                                          S01319
     C           *NAMVAR   DEFN           RUNDAT                          S01319
     C                     IN   RUNDAT                                    S01319
     C**  GET ZMUSER to access default branch.                            S01319
     C**                                                                  S01319
     C           *NAMVAR   DEFN           ZMUSER                          S01319
     C                     IN   ZMUSER                                    S01319
     C                     UNLCKZMUSER                                    S01319
     C**                                                                  S01319
     C           #A9       ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #C  - TERMINATES THE PROGRAM BY SETTING ON LR                 *
     C*                                                               *
     C* CALLED BY : MAIN                                              *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           #C        BEGSR
     C*
     C                     MOVE '1'       *INLR
     C*
     C           #C9       ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C********                                                        *   S01194
     C********SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF/  *   S01194
     C********FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD *   S01194
     C********1 (HELD ON PF/TABTB10)                                  *   S01194
     C********INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD *   S01194
     C********IS FLAGGED FOR DELETION.                                *   S01194
     C********IF INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED      *   S01194
     C********ACCESS ARE PLACED IN THE LDA.                           *   S01194
     C********                                                        *   S01194
     C********FIELDS USED : SS0150 - KEY USED TO ACCESS FDICDRLL      *   S01194
     C********                                                        *   S01194
     C*****************************************************************   S01194
     C********                                                            S01194
     C********   ZA0150    BEGSR                                          S01194
     C********                                                            S01194
     C***SET*UP KEY TO OBTAIN FORMAT TABTB10F '01        10'              S01194
     C********             MOVEL'01'      SS0150 12                       S01194
     C********             MOVE '10'      SS0150                          S01194
     C********                                                            S01194
     C***CHAIN TO FILE FDICDRLL                                           S01194
     C********   SS0150    CHAINFDICDRLL             80                   S01194
     C********   RECI      IFNE 'D'                        B1             S01194
     C********             MOVE '1'       *IN80            *1             S01194
     C********             END                             E1             S01194
     C********                                                            S01194
     C***DEAL*WITH DATA BASE ERROR                                        S01194
     C********   *IN80     IFEQ '1'                        ************** S01194
     C********             MOVEL'FDICDRLL'DBFILE           *             *S01194
     C********             MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C********             MOVELSS0150    DBKEY            *             *S01194
     C********             END                             ***************S01194
     C********                                                            S01194
     C********   ZA0159    ENDSR                                          S01194
     C*****************************************************************   S01194
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* INFSR - THIS SUBROUTINE CHECKS THAT THE ERROR ON THE FILE     *
     C*         FDLCY3LL WAS TRYING TO INSERT A RECORD                *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :    ZA0240                                             *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           INFSR     BEGSR
     C*
     C           STATUS    IFEQ 01021                      B1
     C*
     C** CHAIN TO THE FILE
     C                     MOVE XPTPRD    @TPRD            *1
     C                     Z-ADDXPPRD     @PRDJ            *1
     C           @EXKY     CHAINFDCCYPLL             68    *1
     C           *IN68     IFEQ '0'                        B*2
     C*
     C** CLEAR PROGRAM MESSAGE QUEUE
     C                     CALL 'ZA0250'                   **2
     C                     ROLBK                           **2
     C*
     C** SEND MESSAGE RECORD UPDATED BY ANOTHER WORKSTATION
     C                     MOVELDDCCY     @DATA            **2
     C                     MOVEL'FDM0132' @MSGID           **2
     C                     CALL 'ZA0440'                   **2
     C                     PARM           @MSGID           **2
     C                     PARM           @DATA            **2
     C                     MOVE '*DETC '  EXTTAG           **2
     C                     ELSE                            X*2
     C                     MOVE '*CANCL'  EXTTAG           **2
     C                     DUMP                            **2
     C                     END                             E*2
     C                     ELSE                            X1
     C                     MOVE '*CANCL'  EXTTAG           *1
     C                     DUMP                            *1
     C                     END                             E1
     C*
     C                     ENDSREXTTAG
     C*                                                               *
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* *PSSR - THIS SUBROUTINE IS CALLED FOR ANY PROGARM OR FILE     *
     C*         ERRORS                                                *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C                     DUMP
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
** CPY@   **      OBJECT COPYRIGHT
(c) Finastra International Limited 2001
** ARRAY TO HOLD MONTHS NAMES FOR THE UPDATES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
** ARRAY FOR PEROID NAMES
Overnight      Tomorrow/Next  Spot/Next      1 Week
2 Weeks        3 Weeks        1 Month        2 Months
3 Months       6 Months       9 Months       1 Year
 
 
** ARRAY FOR PERIOD TYPES
DDDWWWMMMMMY
** ARRAY FOR PERIOD LENGTH
0001020102030102030609010000000000000000
** COMMIT TEXT MESSAGE
Exchange Rates Points Records for Currency Code
** ARRAY OF POWERS OF TEN
00000010
00000100
00001000
00010000
00100000
01000000
10000000
** @M  USED BY SR. ZA0850 - DAYS IN A MONTH
312831303130313130313031
** @YD  USED BY SR. ZA0680 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZA0680 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
** Scaling factors array - @SF
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
