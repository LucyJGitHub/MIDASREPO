     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FF LUX OTCs Maintenance')
      *****************************************************************
      *                                                               *
      *  Midas  -  Futures and Options Module                         *
      *                                                               *
      *  FF0141   - LUX OTCs  Maintenance                             *
      *                                                               *
      *  Function:  This program prompt a screen on OTC details       *
      *             to allow input of new fiels                       *
      *                                                               *
      *  (phase(s)) Input Cycle                                       *
      *                                                               *
      *  Called By: FF0140 - FF OTC's Maintenace                      *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD058285           Date 22Jun21               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027A            Date 03May06               *
      *                 CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD058285 - Change base rate code to alphanumeric (Recompile) *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027A - Conversion of customer number to alpha (post       *
      *            build 103). Recompiled.                            *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *                                                               *
      * FUNCTION OF INDICATORS                                        *
      *                                                               *
      *       03      F3 PRESSED EXIT PROGRAM                         *
      *       05      F5 PRESSED REDISPLAY THE SCREEN                 *
      *       12      F12 PRESSED GOTO PREVIOUS SCREEN                *
      *       20      PROTECT FIELDS IN ENQUIRE MODE                  *
      *       30      REDISPLAY THE SCREEN                            *
      *       35      ENABLE F5                                       *
      *       40      ENABLE F10                                      *
      *       49      NON DISPLAY AND PROTECT INDICATOR               *
      *       50, 68  FIELDS IN ERROR                                 *
      *       69      FEATURE INSTALLED - ER_R10                      *
      *       70      GEMERAL ERROR INDICATOR                         *
      *       84      CHAIN TO FFITX2PD FAILED - UPDIDX               *
      *       85      CHAIN TO FFITX2L0 FAILED - RTVIDX               *
      *       86      CHAIN TO ERLUICL1 FAILED                        *
      *       87      CHAIN TO SECTY FAILED                           *
      *                                                               *
      *****************************************************************
     FFFITX2PDUF  E           K        DISK                      A
      * EXTENSION FILE (UNDER COMMITMENT CONTROL)
     F            INTYPDD6                          KRENAMEUPDIDX
     F*                                             KCOMIT
     FFFITX2L0IF  E           K        DISK
      * EXTENSION FILE FOR READ
     F            INTYPDD6                          KRENAMERTVIDX
      *
     FERLUICL1IF  E           K        DISK
     F* VP - ER I.C.D. FOR LU
      *
     FSECTY   IF  E           K        DISK
      * SECURITIES FILES
      *
     FFF0141DFCF  E                    WORKSTN
     F            FF0141F                           KRENAMESCREEN
      *****************************************************************
      /EJECT
     E/COPY ZSRSRC,ZALIGNZ1
     E                    CPY@    1   1 80
      *
      ** Array containing Copyright statement
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     ILDA       E DSLDA                         256
      *
      ** Local data area for database error details
      ** *LOCK IN LDA immediately before and OUT LDA immediately
      ** after each database error handling.
      **
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
     IPSDS       SDS
      *
      ** Program Status Data Structure - gives Job/Workstation name and
      ** User ID
      *
     I                                     *PROGRAM ##PGM
     I                                      244 253 JOB
     I                                      244 246 WSID
     I                                      254 263 USER
      *
     ISDBANK    E DSSDBANKPD
      * Bank Details
      *
     IDSFDY     E DSDSFDY
      * First DS for access programs, short data structure
      *
     INWRCD     E DSFFITX2PD
      * Current/previous file fields
      *
     ISVRCD       DS                             17
     I* Stored  file fields
     I*
     I* Run Date
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
      *
     I/COPY QWINDSRC,FF0140DTA
      * DATA MEMBER FOR MAIN PROGRAM
      *****************************************************************
     C/EJECT
      *****************************************************************
      *
      **   Standard parameter list
      *
     C           *ENTRY    PLIST
     C                     PARM           RTNCD   7
     C                     PARM           ACTN    1
     C                     PARM           #ISTT
     C                     PARM           W0RTN   7
      *
      *****************************************************************
      *
      *                M A I N  P R O C E S S I N G
      *
      *****************************************************************
      *
      ** Initialise data
      *
     C                     EXSR INIT
      *
      ** Continue to redisplay the screen if *IN30 remains off
      *
     C           *IN30     DOUEQ'1'                        *B1
      *
     C                     MOVELJOB       SJOB             Job
     C                     MOVEL##PGM     SPGM             Program Name
     C                     MOVELUSER      SUSER            User ID
      *
      **   If error write messages
      *
     C           *IN70     IFEQ '1'                        *B2
     C                     WRITE#MSGCTL
      *
     C                     ENDIF                           *E2
      * MAIN FORMAT OF THE DISPLAY FILE
     C                     EXFMTSCREEN
     C                     EXSR CLEAR
      *
     C           *IN03     CASEQ'1'       EXIT             *B2
     C           *IN05     CASEQ'1'       RESET
     C           *IN10     CASEQ'1'       DELETE
     C           *IN12     CASEQ'1'       PREV
     C                     CAS            VALID
      *
     C                     ENDCS                           *E2
      *
     C                     ENDDO                           *E1
      *
      **   Exit from program
      *
     C                     EXSR END
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      * CLEAR MESSAGE FILE
      *****************************************************************
     C           CLEAR     BEGSR
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * DELETE RECORD
      *****************************************************************
     C           DELETE    BEGSR
      *
      ** If the record does not exist, or has been modified by another user
      *
     C           K@KEY     CHAINUPDIDX               84
      *
     C           *IN84     IFEQ *ON                        *B1
     C           *IN84     OREQ *OFF
     C           NWRCD     ANDNESVRCD
      *
     C                     MOVEL'XXX9000' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     MOVE *OFF      *IN30
     C                     MOVEA'11111111'*IN,50           50-57
     C                     MOVEA'11111111'*IN,58           58-65
     C                     MOVEA'111'     *IN,66           66-68
     C                     MOVE *ON       *IN70
     C                     EXSR ZASNMS
      *
     C                     ELSE                            *X1
      *
     C                     EXSR END
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * EXIT FROM PROGRAM
      *****************************************************************
     C           END       BEGSR
     C                     SETON                     LR
     C                     RETRN
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * EXIT FROM PROGRAM IF F3 HAS BEEN PRESSED
      *****************************************************************
     C           EXIT      BEGSR
     C                     MOVE 'Y2U9999' W0RTN
     C                     EXSR END
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * INITIALISE FIELDS
      *****************************************************************
      *
     C           INIT      BEGSR
      *
      **   Only do first time through
      *
     C           WFIRST    IFEQ *BLANKS                    *B1
      *
      **   Define the LDA for error handling
      *
     C           *NAMVAR   DEFN           LDA
      *
      **   Protect input fields if enquiry and enable command keys
      *
     C           ACTN      IFEQ 'E'                        *B2
     C                     MOVE *ON       *IN20            Protect fields
      *
     C                     ELSE                            *X2
     C                     MOVE *ON       *IN35            Refresh
     C           ACTN      IFEQ 'D'                        *B3
     C                     MOVE *ON       *IN20            Protect fields
     C                     MOVE *ON       *IN40            Delete
     C                     MOVE *OFF      *IN35            No Refresh
     C                     ENDIF                           *E3
      *
     C                     ENDIF                           *E2
      *
      ** Set up KLIST and move in key from DATA
      *
     C           *LIKE     DEFN CBISTT    K@ISTT
     C           *LIKE     DEFN CBISTT    #ISTT
     C           K@KEY     KLIST
     C                     KFLD           K@ISTT
     C                     MOVEL#ISTT     K@ISTT
      *
      ** Access bank details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*FIRST'  POPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'001'     DBASE
     C                     MOVEL'SDBANKPD'DBFILE
     C                     MOVEL'*FIRST'  DBKEY
     C                     MOVEL##PGM     DBPGM
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Get ICD Details
      *
     C           'LU'      CHAINERLUICL1             86
     C           *IN86     IFEQ '1'                        - B2
     C           *LOCK     IN   LDA
     C                     MOVEL'002'     DBASE
     C                     MOVEL'ERLUICL1'DBFILE
     C                     MOVEL'LU'      DBKEY
     C                     MOVEL##PGM     DBPGM
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     END                             - E2
      *
     C                     MOVE 'N'       WFIRST  1        First time
      *
     C                     ENDIF                           *E1
      *
      *----------------------------------------------------------------
      *
     C           K@KEY     CHAINRTVIDX               85
     C           *IN85     IFEQ '0'                        *B1
      *
      **    Load sreen fields
      *
     C                     MOVE CBOPCM    SOPCM
     C                     MOVE CBSESN    SSESN
     C                     MOVE CBBBIX    SBBIX
      *
      **    Save record before modification
      *
     C                     MOVE NWRCD     SVRCD
      *----------------------------------------------------------------
      *
      ** If delete does not require screen to be displayed, do here
      *
     C                     ELSE                            *X1
      *
      **    Load sreen fields
      *
     C                     MOVE VPOPCM    SOPCM
     C                     MOVE *BLANKS   SSESN
     C                     MOVE *BLANKS   SBBIX
      *
      **    Save record before modification
      *
     C                     MOVE *BLANKS   SVRCD
      *
     C                     ENDIF                           *E1
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      BJMRDT           RUN DATE
      *
     C                     WRITE#MSGCTL
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      **   EXIT FROM PROGRAM IF F12 HAS BEEN PRESSED
      *
      *****************************************************************
      *
     C           PREV      BEGSR
      *
      **   Set F12 return code and end program
      *
     C                     MOVE 'USR0790' W0RTN
     C                     EXSR END
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * RESET/REFRESH THE SCREEN IF F5 IS PRESSED
      *****************************************************************
     C           RESET     BEGSR
      *
      **   Clear the program message queue and call SR/INIT to retrieve
      **   the last committed data from the extension file.
      *
     C                     EXSR CLEAR
     C                     WRITE#MSGCTL
     C                     EXSR INIT
      *
      **   Reset all error indicators
      *
     C                     MOVEA'00000000'*IN,50           50-57
     C                     MOVEA'00000000'*IN,58           58-65
     C                     MOVEA'000'     *IN,66           66-68
     C                     MOVE *OFF      *IN70
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * UPDATE THE EXTENSION FILE
      *****************************************************************
      *
     C           UPDAT     BEGSR
      *
      ** Insert Mode.
      *
     C           *IN85     IFEQ *ON                        *B1
      *
     C           K@KEY     CHAINUPDIDX               84
      *
      ** If the record exists, the details has been modified by another user
      *
     C           *IN84     IFEQ *OFF                       *B2
      *
     C                     MOVEL'XXX9000' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     MOVE *OFF      *IN30
     C                     MOVEA'11111111'*IN,50           50-57
     C                     MOVEA'11111111'*IN,58           58-65
     C                     MOVEA'111'     *IN,66           66-68
     C                     MOVE *ON       *IN70
     C                     EXSR ZASNMS
      *
     C                     ELSE                            *X2
      *
     C                     MOVE #ISTT     CBISTT
     C                     MOVE SOPCM     CBOPCM
     C                     MOVE SSESN     CBSESN
     C                     MOVE SBBIX     CBBBIX
      *
     C                     WRITEUPDIDX
      *
     C                     ENDIF                           *E2
      *
      ** Amend Mode.
      *
     C                     ELSE                            *X1
      *
     C           K@KEY     CHAINUPDIDX               84
      *
      ** If the record does not exist, or has been modified by another user
      *
     C           *IN84     IFEQ *ON                        *B2
     C           *IN84     OREQ *OFF
     C           NWRCD     ANDNESVRCD
      *
     C                     MOVEL'XXX9000' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     MOVE *OFF      *IN30
     C                     MOVEA'11111111'*IN,50           50-57
     C                     MOVEA'11111111'*IN,58           58-65
     C                     MOVEA'111'     *IN,66           66-68
     C                     MOVE *ON       *IN70
     C                     EXSR ZASNMS
      *
     C                     ELSE                            *X2
      *
     C                     MOVE #ISTT     CBISTT
     C                     MOVE SOPCM     CBOPCM
     C                     MOVE SSESN     CBSESN
     C                     MOVE SBBIX     CBBBIX
      *
     C                     UPDATUPDIDX
      *
     C                     ENDIF                           *E2
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
     C*****************************************************************
      /EJECT
      *****************************************************************
      * VALIDATE THE SCREEN
      *****************************************************************
     C           VALID     BEGSR
      *
      ** IF THE ACTION CODE IS ENQUIRE THEN SIMPLY EXIT FROM PROGRAM
      *
     C           ACTN      IFEQ 'E'                        *B1
     C                     EXSR END
     C                     ENDIF                           *E1
      *
     C           ACTN      IFEQ 'D'                        *B1
     C                     MOVE *ON       *IN70
     C                     MOVEL'XXX9001' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO VAEXIT
      *
     C                     ENDIF                           *E1
      *
     C                     MOVE *ON       *IN30
     C                     MOVEA'00000000'*IN,50           50-57
     C                     MOVEA'00000000'*IN,58           58-65
     C                     MOVEA'000'     *IN,66           66-68
     C                     MOVE *OFF      *IN70
      *
      ** SOPCM validation
      *
     C                     EXSR #OPCM
      *
      ** SSESN validation
      *
     C                     EXSR #SESN
      *
      ** SBBIX validation
      *
     C                     EXSR #BBIX
      *
      ** IF THERE ARE ANY ERRORS *IN30 MUST BE SET OFF
      *
      ** IF THERE IS AN ERROR IN ANY OF THE FIELDS THEN NEED TO
      ** REDISPLAY THE SCREEN AND SEND ALL ERROR MESSAGES
      *
     C           *IN30     IFEQ '1'                        *B1
      *
      ** NO ERRORS SO UPDATE THE EXTENSION FILE
      *
     C                     EXSR UPDAT
      *
     C                     ENDIF                           *E1
      *
     C           VAEXIT    ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      ** #OPCM S/R - Check Option Calculation Method
      ** Called from : VALID                                          *
      ** Calls       : ZASNMS                                         *
      *                                                               *
      ****************************************************************
     C           #OPCM     BEGSR
      *
      ** Option Calculation Method is blank, setup it with default value
      ** (VPOPCM) from file LF/ERLUICL1
      *
     C           SOPCM     IFEQ *BLANKS                    - B1
      *
     C                     MOVE VPOPCM    SOPCM
      *
     C                     ENDIF                           - E1
      *
      ** Option Calculation Method different from blank, Validate it
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE SOPCM     ZFIELD
     C                     Z-ADD1         ZADIG
     C                     Z-ADD0         ZADEC
      *
     C                     EXSR ZALIGN
      *
      ** If not numeric - report error - must be numeric
      *
     C           *IN99     IFEQ *ON                        - B1
      *
     C                     MOVE *OFF      *IN30
     C                     MOVE *ON       *IN50
     C                     MOVE *ON       *IN70
     C                     MOVEL'ER14001' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
      *
      *
      ** If numeric - must be between 0 and 3
      *
     C                     ELSE                            - X1
      *
     C                     MOVE ZFIELD    WOPCM   10
      *
     C           WOPCM     IFNE 0                          - B2
     C                     MOVE ZFIELD    SOPCM
     C                     ENDIF                           - E2
      *
      ** Must be between 0 and 3
      *
     C           WOPCM     IFLT 0                          - B2
     C           WOPCM     ORGT 3
      *
     C                     MOVE *OFF      *IN30
     C                     MOVE *ON       *IN50
     C                     MOVE *ON       *IN70
     C                     MOVEL'ER14002' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
      *
     C                     ENDIF                           - E2
     C                     ENDIF                           - E1
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      * #SESN S/R - Check Security shortname                          *
      * Called from : VALID                                           *
      * Calls       : ZASNMS                                          *
      *                                                               *
      ****************************************************************
     C           #SESN     BEGSR
      *
      ** Security shortname different from blank, Validate it
      *
     C           SSESN     IFNE *BLANKS                    - B1
      *
     C           SSESN     CHAINSECTYDF              87
      *
     C           *IN87     IFEQ '1'                        - B2
     C           *IN87     OREQ '0'
     C           RECI      ANDNE'D'
     C                     MOVE *OFF      *IN30
     C                     MOVE *ON       *IN51
     C                     MOVE *ON       *IN70
     C                     MOVEL'ER14003' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
     C                     ENDIF                           - E2
      *
     C                     ENDIF                           - E1
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      * #BBIX S/R - Check Broad-based index                           *
      * Called from : VALID                                           *
      * Calls       : ZASNMS                                          *
      *                                                               *
      *****************************************************************
     C           #BBIX     BEGSR
      *
      ** Broad-based index different from blank, Validate it
      *
     C           SBBIX     IFNE *BLANKS                    - B1
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE SBBIX     ZFIELD
     C                     Z-ADD1         ZADIG
     C                     Z-ADD0         ZADEC
      *
     C                     EXSR ZALIGN
      *
      ** If not numeric - report error - must be numeric
      *
     C           *IN99     IFEQ *ON                        - B2
      *
     C                     MOVE *OFF      *IN30
     C                     MOVE *ON       *IN52
     C                     MOVE *ON       *IN70
     C                     MOVEL'ER14004' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
      *
      ** If numeric - must be 0 or 1
      *
     C                     ELSE                            - X2
      *
     C                     MOVE ZFIELD    WBBIX   10
      *
     C           WBBIX     IFNE 0                          - B3
     C                     MOVE ZFIELD    SBBIX
     C                     ENDIF                           - E3
      *
      ** Must be between 0 and 3
      *
     C           WBBIX     IFLT 0                          - B3
     C           WBBIX     ORGT 1
      *
     C                     MOVE *OFF      *IN30
     C                     MOVE *ON       *IN52
     C                     MOVE *ON       *IN70
     C                     MOVEL'ER14005' ZAMSID
     C                     MOVEL'DRSMM'   ZAMSGF
     C                     EXSR ZASNMS
      *
     C                     ENDIF                           - E3
     C                     ENDIF                           - E2
     C                     ENDIF                           - E1
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * Send message to program's message queue.
      *****************************************************************
      *
     C           ZASNMS    BEGSR
      *
     C           ZAPGMQ    IFEQ *BLANK                     *B1
     C                     MOVEL##PGM     ZAPGMQ
      *
     C                     END                             *E1
      *
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
      *
     C           ZAEXIT    ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR                           ** *PSSR SR **
      *
     C           @RUN      IFEQ *BLANK                     *B1
     C                     MOVE 'Y'       @RUN    1
     C                     SETON                     U7U8LR
     C                     DUMP
      *
     C                     CALL 'DBERRCTL'
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      *
      ********************************************************************
      /EJECT
      /COPY ZSRSRC,ZALIGNZ2
** CPY@
(c) Finastra International Limited 2005
