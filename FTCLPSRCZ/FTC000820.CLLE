/********************************************************************/
/*STD    CLPBASEBND                                                 */
/*EXI    TEXT('Midas FT Stamp Tax A/C Keys - Funds Transfer')        */
/********************************************************************/
/*                                                                  */
/*       Midas - Funds Transfer                                     */
/*                                                                  */
/*       FTC000820 - Stamp Tax - Generate Tax Account Keys on FT    */
/*                   I/O Payments & C/P Cheques                     */
/*                                                                  */
/*                   After GL008130 has run, FPKEYDD file is saved  */
/*                   to STTFTnnnnn for check purposes (where nnnnn  */
/*                   is the cob component sequence)                 */
/*                                                                  */
/*                   If the Update Flag is 'N', Stamp Tax           */
/*                   a/c key records will only be in STTFTnnnnn     */
/*                                                                  */
/*       (c) Misys International Banking Systems Ltd. 2010          */
/*                                                                  */
/*       Last Amend No. AR820949           Date 26Aug11             */
/*       Prev Amend No. CER049  *CREATE    Date 06Dec10             */
/*                                                                  */
/********************************************************************/
/*                                                                  */
/*       AR820949 - Component FTC000820 00001 failed                */
/*       CER049 - Stamp Tax                                         */
/*                                                                  */
/********************************************************************/
             PGM        PARM(&UPDF &CNAM &CSEQ)
 
             DCL        VAR(&MKICPY) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Copyright Misys International Banking +
                          Systems Ltd. 2010')
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&UPDF) TYPE(*CHAR) LEN(1)
             DCL        VAR(&SEQU) TYPE(*CHAR) LEN(5)
             DCL        VAR(&BUSY) TYPE(*CHAR) LEN(1)
             DCL        VAR(&DILIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PRE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&WORKFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILEN) TYPE(*CHAR) LEN(10) +
                          VALUE('STFTIN    ')
             DCL        VAR(&PGMC) TYPE(*CHAR) LEN(10) +
                          VALUE('FTC000820 ')
 
/* DB error defintion */
 
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
 
/** Declare parameters for access object AOSARDR0 */
 
             DCL        VAR(&CCB009) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&DSFDY) TYPE(*CHAR) LEN(60)
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Retrieve the system prefix xx                                              */
 
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&PRE)
             CHGVAR     VAR(&DMLIB) VALUE(&PRE *TCAT 'DMLIB')
             CHGVAR     VAR(&DPLIB) VALUE(&PRE *TCAT 'DPLIB')
             CHGVAR     VAR(&DILIB) VALUE(&PRE *TCAT 'DILIB')
             CHGVAR     VAR(&SEQU) VALUE(&CSEQ)
             CHGVAR     VAR(&WORKFILE) VALUE('STTFT' *TCAT &SEQU)
 
/* Check if CCB009 is active  */
 
             CALL       PGM(AOSARDR0) PARM(&RTCD '*VERIFY'   +
                          'CCB009' &DSFDY)
             IF         COND(&RTCD = '       ') THEN(CHGVAR +
                          VAR(&CCB009) VALUE('Y'))
 
/* Allocate object and check for restart */
 
             ALCOBJ     OBJ((FPKEYDD *FILE *EXCL)) WAIT(120)
             CALL       CB0160 PARM(&CNAM &CSEQ &BUSY)
 
/* No restart - save object */
 
/**********  IF         COND(&BUSY *EQ 'N') THEN(DO)                */                  /*AR820949*/
             IF         COND(&BUSY *NE 'Y') THEN(DO)                                    /*AR820949*/
 
/* If no save file create */
 
             CHKOBJ     OBJ(&DILIB/SAVFFPKEYD) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             CRTSAVF    FILE(&DILIB/SAVFFPKEYD) TEXT('Save of FPKEY*  +
                          before update')
             ENDDO
             CLRSAVF    FILE(&DILIB/SAVFFPKEYD)
 
             CHKOBJ     OBJ(&DILIB/SAVFTRSTAX) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             CRTSAVF    FILE(&DILIB/SAVFTRSTAX) TEXT('Save of SDSTM*  +
                          before update')
             ENDDO
             CLRSAVF    FILE(&DILIB/SAVFTRSTAX)
 
/* Save data */
 
             SAVOBJ     OBJ(FPKEYDD FPKEYZZ) +
                          LIB(&DPLIB) DEV(*SAVF) +
                          SAVF(&DILIB/SAVFFPKEYD)
 
             SAVOBJ     OBJ(SDSTMDPD INPAYDQD OTPAYDQD CQCOCDQD CQPACDQD) +
                          LIB(&DMLIB) DEV(*SAVF) +
                          SAVF(&DILIB/SAVFTRSTAX)
 
/* Set active flag */
 
             CHGVAR     VAR(&BUSY) VALUE('Y')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &BUSY)
 
             ENDDO
             ELSE       CMD(DO)
 
/* Restore copy of files */
 
             RSTOBJ     OBJ(FPKEYDD FPKEYZZ) +
                        SAVLIB(&DPLIB) +
                          DEV(*SAVF) SAVF(&DILIB/SAVFFPKEYD)
             RSTOBJ     OBJ(SDSTMDPD INPAYDQD OTPAYDQD CQCOCDQD CQPACDQD) +
                        SAVLIB(&DMLIB) +
                          DEV(*SAVF) SAVF(&DILIB/SAVFTRSTAX)
             ENDDO
 
/* Override Report File */
 
             OVRPRTF    FILE(GL008130P1) USRDTA('GL8130-FT')
/*                                                                   */
/* Start journalling extension files PF/SDSTM* & PF/FPKEY* to        */
/* journal ICJRN.                                                    */
/* If file is already journalled continue processing.                */
/*                                                                   */
             STRJRNPF   FILE(*LIBL/INPAYDQD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/OTPAYDQD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/CQCOCDQD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/CQPACDQD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/SDSTMDPD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/FPKEYDD) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
             STRJRNPF   FILE(*LIBL/FPKEYZZ) JRN(*LIBL/ICJRN) +
                          IMAGES(*BOTH) OMTJRNE(*OPNCLO)
             MONMSG     MSGID(CPF7030)
 
/* &WORKFILE = 'STTFT+Cob Component Sequece*/
 
             DLTF       FILE(&WORKFILE)
             MONMSG     MSGID(CPF0000)
 
/* GL008130 - generate Stamp Tax A/C Keys on Funds Transfer A/C keys */
 
             CALL       PGM(GL008130) PARM(&FILEN &PGMC &UPDF)
 
             DLTOVR     FILE(*ALL)
 
/* Save account keys */
 
             CPYF       FROMFILE(FPKEYDD) TOFILE(&DPLIB/&WORKFILE) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
             MONMSG     MSGID(CPF2817) EXEC(CHGJOB SWS(XXXXXX11))
 
/* If UPDF is N, then account keys are not to be updated so restore account keys files */
/* from save file*/
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             IF         COND(&UPDF *NE 'Y') THEN(DO)
             RSTOBJ     OBJ(FPKEYDD FPKEYZZ) +
                        SAVLIB(&DPLIB) +
                          DEV(*SAVF) SAVF(&DILIB/SAVFFPKEYD)
             MONMSG     MSGID(CPF3801) EXEC(CHGJOB SWS(XXXXXX11))
             ENDDO
             ENDDO
 
/* DB error  */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOMSGQ(MOPERQ MRUNQ)
             CHGVAR     VAR(&MEM) VALUE('FTC000820 - Job Terminated, +
                        Database in Error')
             SNDPGMMSG  MSG(&MEM) TOPGMQ(*EXT) TOMSGQ(MRUNQ MOPERQ)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
/* Set OK flag  */
 
             CHGVAR     VAR(&BUSY) VALUE('N')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &BUSY)
 
             GOTO       CMDLBL(END)
 
 ABNOR:
 
             CHGJOB     SWS(XXXXXX11)
 
 END:
 
/*  If CCB009 (COB Journalling) off, end journalling             */
 
             IF         COND(&CCB009 *NE 'Y') THEN(DO)
 
             ENDJRNPF   FILE(INPAYDQD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(OTPAYDQD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(CQCOCDQD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(CQPACDQD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(SDSTMDPD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(FPKEYDD)
             MONMSG     MSGID(CPF7032)
 
             ENDJRNPF   FILE(FPKEYZZ)
             MONMSG     MSGID(CPF7032)
 
             ENDDO
 
             CHGVAR     VAR(&MKICPY) VALUE('Copyright Misys International +
                          Banking Systems Ltd. 2010')
             ENDPGM
