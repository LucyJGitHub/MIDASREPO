     H DEBUG
     H COPYRIGHT('(c) Finastra International Limited 2002')
      *****************************************************************
/*STD *  RPGBASEMOD                                                   *
/*EXI *  TEXT('Midas FT Validate account with bank')                  *
      *****************************************************************
      *                                                               *
      *  Midas - Standard subprograms                                 *
      *                                                               *
      *  FTVACBA  - Validate Account with Bank                        *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. AR666005           Date 14Feb23               *
      *  Prev Amend No. CSD103             Date 10Aug20               *
      *                 MD046248           Date 27Oct17               *
      *                 MD035364           Date 07Aug15               *
      *                 CFT049             Date 20Feb15               *
      *                 MD024825           Date 19Aug14               *
      *                 CFT120             Date 28Sep12               *
      *                 261003             Date 06Aug12               *
      *                 CSF011A            Date 28Nov11               *
      *                 CRE067             Date 05Oct10               *
      *                 CSD089             Date 07Oct10               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      *                 257144             Date 10Oct08               *
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *                 256564             Date 17Sep08               *
      *                 255711             Date 31Jul08               *
      *                 255286             Date 07Jul08               *
      *                 250600             Date 07Oct07               *
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 241855             Date 04Sep06               *
      *                 CSD031             Date 10Apr06               *
      *                 CDL049             Date 06Jul06               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 CLE025             Date 20Oct03               *
      *                 CGL029             Date 01Sep03               *
      *                 CSW203             Date 26May03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.05 -----------------------------------------------*
      *                 CFT009             Date 13Nov00               *
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CFT014             Date 25May00               *
      * Midas DBA 3.03 -----------------------------------------------*
      *                 CFT007             Date 23Dec99               *
      * Midas DBA 3.02 -----------------------------------------------*
      *                 CFT004             Date 01Dec99               *
      *                 CAP031  *CREATE    Date 12Apr99               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  AR666005 - Add a validation which prevents closed customers  *
      *           from being inserted in the account with bank field. *
      *           Applied fix 229380.                                 *
      *  CSD103 - LIBOR Deregulation - Common Layer/Standing Data     *
      *           (Recompile)                                         *
      *  MD046248 - Finastra Rebranding                               *
      *  MD035364 - Unable to send message 5047550 for OPAY Template  *
      *  CFT049 - Account with Bank validation if EU/EEA Payment      *
      *  MD024825 - Unexpected warning message in OPAY input          *
      *  CFT120 - FT IN/OP - Charges to DR of Account Currency        *
      *           (Recompile)                                         *
      *  261003 - If field line exceeds 11 characters, show warning   *
      *           message that it is not a SWIFT address              *
      *  CSF011A - CCR015: Display Order in Confirmation Pages        *
      *            (Recompile)                                        *
      *  CRE067 - Midas Plus/Teller Interface via Bankfusion          *
      *           (Recompile)                                         *
      *  CSD089 - Overrideable Errors Phase 2                         *
      *  257144 - Include lower case in ISO validation.               *
      *           Use new /COPY member SFTVALCSLL.                    *
      *  256564 - Recompile due to PF changes done by fix 256330      *
      *  255711 - Field Ref rate does not record rate. (Recompile)    *
      *  255286 - Allow lowercase characters on input.                *
      *           Recompile due to change in /copy SFTVALCSLE         *
      *  250600 - Recompiled for change in FTV@OPAYPD                 *
      *           to fix CFT032/CSW207 errors                         *
      *  241855 - System is not validating clearing codes for field   *
      *           56A, 56D, 57A and 57D even though it is required    *
      *           by SWIFT to be validated.                           *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CDL049 - Addition of a Reference Rate field (recompile)      *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  CSW203 - SWIFT 2003 Standards Update                         *
      *  CFT009 - Funds Transfer Fees and Charges - recompile         *
      *  CFT014 - Straight-through Processing Phase 2 MT103           *
      *           Messages Generation for FT.                         *
      *  CFT007 - Recompiled for BIC Database Plus Integration        *
      *  CFT004 - IBAN, International Bank Account Number             *
      *  CAP031 - Conversion of FT inputs into modular structure to   *
      *           use as APIs.                                        *
      *                                                               *
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
      *****************************************************************

      *****************************************************************
      ** +--------------------------------------+
      ** ¦ Automatically included D-specs       ¦
      ** ¦ ==============================       ¦
      ** +--------------------------------------+
      **
      ** Standard D-specs
      ** ================
      **
      ** The following /COPY line includes the LDA layout,
      ** the copyright array definition,
      ** and the following named constants:
      **    True       logical = *on (for indcator processing)
      **    False      logical = *off (for indcator processing)
      **    DBErrCtl   10A     = 'DBERRCTL' (the name of the database error
      **                                    handler)
      ** and the following variables:
      **    RunBefore  1A (for the PSSR)

     D/COPY ZACPYSRC,STD_D_SPEC

      ** Program Status Data Structure
      ** =============================
      ** The following /COPY line includes all the defined fields in the
      ** PSDS.  They have meaningful names, prefixed by 'PS'.

     D/COPY ZACPYSRC,PSDS

      ** +--------------------------------------+
      ** ¦ End of automatically included D-specs¦
      ** ¦ =====================================¦
      ** +--------------------------------------+

      **********************************************************************
      /EJECT                                                               *
      **********************************************************************

      ** +--------------------------------------+
      ** ¦ Manually included D-specs            ¦
      ** ¦ =========================            ¦
      ** +--------------------------------------+

      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+

     **COPY*FTCPYSRC,SFTVALCSLE                                                               257144
      /COPY FTCPYSRC,SFTVALCSLL                                                               257144

      ** The maximum size of the appended error arrays
     D XArrayMax       C                   CONST(20)

      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+

      ** Array of Fields in error.
     D FldNamXAr       S             10A   DIM(XArrayMax)

      ** Array of error message IDs
     D MsgIDXAr        S                   DIM(XArrayMax) LIKE(#MsgId)

      ** Array of error message data.
     D MsgDtaXAr       S                   DIM(XArrayMax) LIKE(#MsgData)

      ** Array of Warning in error.
     D WFldNmXAr       S             10A   DIM(XArrayMax)

      ** Array of Warning message IDs
     D WMsgIDXAr       S                   DIM(XArrayMax) LIKE(#MsgId)

      ** Array of Warning message data.
     D WMsgDtaXAr      S                   DIM(XArrayMax) LIKE(#MsgData)

      * Incoming Transaction
     D TranInPrim    E DS                  EXTNAME(FTOPY1PD)                    CFT014
     D TranInSecA    E DS                  EXTNAME(FTOPY2PD)
     D TranInSecB    E DS                  EXTNAME(FTOPY3PD)                    CFT014

      * Flags to indicate whether transaction fields are valid
     D OKFlagsDS     E DS                  EXTNAME(FTEOPY2PD)

      * Validation Work Fields
     D Val@Fields    E DS                  EXTNAME(FTV@OPAYPD)

      ** Array of valid swift characters
     D SWCH            S              1    DIM(47) CTDATA PERRCD(47)

      ** External data structure for customer number
     D SDCUST        E DS                  EXTNAME(SDCUSTPD)

      ** Midas Counterparty NOSTROS
     D SDCNST        E DS                  EXTNAME(SDCNSTPD)

      ** Midas BIC Directory
     D MEBICD        E DS                  EXTNAME(MEBICDPD)

      * Second DS for access programs, long data structure
     D DSSDY         E DS                  EXTNAME(DSSDY)
     D DSLDY         E DS                  EXTNAME(DSLDY)                                   AR666005

     D/COPY FTCPYSRC,SFTADDRILE

     D SACBDS          DS           175
     D  DSACB1Pos1             1      1                                         CFT004
     D  DSACB1                 1     35
     D  DSACB2                36     70
     D  DSACB3                71    105
     D  DSACB4               106    140
     D  DSACB5               141    175

     DCLSWTK           DS
     D SW                      1     12
                                                                                CFT014
      ** Input fields passed to ME9940                                          CFT014
                                                                                CFT014
     D***I#PARM*         DS           512                                              CFT014 CGL029
     D I#PARM          DS           514                                                       CGL029
      ** Field to be validated                                                  CFT014
     D  I#VFLD                 1      5                                         CFT014
      ** Pay/Receive Settlement (PAY/REC)                                       CFT014
     D  I#PR                   6      8                                         CFT014
      ** Customer/Counterparty Nostro /BIC indentified type                     CFT014
     D  I#PRTT                 9      9                                         CFT014
      ** Customer/Counterparty/BIC indentified                                  CFT014
     D  I#PRTY                10     20                                         CFT014
      ** Pay Currency                                                           CFT014
     D  I#PCCY                21     23                                         CFT014
      ** Receive Currency                                                       CFT014
     D  I#RCCY                24     26                                         CFT014
      ** Account Line                                                           CFT014
     D  I#ACLN                27     61                                         CFT014
      ** Account Line Character 1                                               CFT014
     D  I#ACC1                27     27                                         CFT014
      ** Account Line Character 2                                               CFT014
     D  I#ACC2                28     28                                         CFT014
      ** Account Line Character 3                                               CFT014
     D  I#ACC3                29     29                                         CFT014
      ** Account Line first 4 characters                                        CFT014
     D  I#ACCL                27     30                                         CFT014
      ** Account Line Clearing System                                           CFT014
     D  I#ACCS                29     30                                         CFT014
      ** Account Line No account data                                           CFT014
     D  I#SPC1                31     61                                         CFT014
      ** Message Type                                                           CFT014
     D  I#MTYP                62     64                                         CFT014
      ** Intermediary Institution for Bank to Bank validation                   CFT014
     D  I#INBT                65     65                                         CFT014
     D  I#INBK                66     76                                         CFT014
      ** Account with Institution for Bank to Bank validation                   CFT014
     D  I#AWBT                77     77                                         CFT014
     D  I#AWBK                78     88                                         CFT014
      ** Beneficiary for Bank to Bank validation                                CFT014
     D  I#BENT                89     89                                         CFT014
     D  I#BENF                90    100                                         CFT014
      ** Pay and Receive Settlement Methods                                     CFT014
     D  I#RSTM               101    102                                         CFT014
     D  I#PSTM               103    104                                         CFT014
      ** Field 53 and 54 Entered                                                CFT014
     D  I#5354               105    105                                         CFT014
      ** Midas Module                                                           CFT014
     D  I#MMOD               106    107                                         CFT014
      ** Pay and Receive Settlement Accounts                                    CFT014
     D***I#PYAC*              108    125                                               CFT014 CGL029
     D***I#RCAC*              126    143                                               CFT014 CGL029
     D  QQPYAC               108    125                                                       CGL029
     D  QQRCAC               126    143                                                       CGL029
      ** Transaction Type                                                       CFT014
     D  I#TTYP               144    145                                         CFT014
      ** Cover Required ?                                                       CFT014
     D  I#COVR               146    146                                         CFT014
      ** Bank to Bank Information                                               CFT014
     D  I#BTB                257    466                                         CFT014
     D  I#BTB1               257    291                                         CFT014
     D  I#BTB2               292    326                                         CFT014
     D  I#BTB3               327    361                                         CFT014
     D  I#BTB4               362    396                                         CFT014
     D  I#BTB5               397    431                                         CFT014
     D  I#BTB6               432    466                                         CFT014
     D  I#PYAC               467    490                                                       CGL029
     D  I#RCAC               491    514                                                       CGL029
                                                                                CFT014
      ** Output Parameters from ME9940                                          CFT014
                                                                                CFT014
     D O#PARM          DS           512                                         CFT014
      ** Account Line modified                                                  CFT014
     D  O#ACLN                 1     35                                         CFT014
      ** Bank to Bank Information                                               CFT014
     D  O#BTB                257    466                                         CFT014
     D  O#BTB1               257    291                                         CFT014
     D  O#BTB2               292    326                                         CFT014
     D  O#BTB3               327    361                                         CFT014
     D  O#BTB4               362    396                                         CFT014
     D  O#BTB5               397    431                                         CFT014
     D  O#BTB6               432    466                                         CFT014
                                                                                CFT014
      ** Error Information to/from ME9940                                       CFT014
                                                                                CFT014
     D X#PARM          DS           256                                         CFT014
      ** Calling Program                                                        CFT014
     D  X#CPGM                 1     10                                         CFT014
      ** Error message sent                                                     CFT014
     D  X#ERRM                12     12                                         CFT014
      ** Warning message sent                                                   CFT014
     D  X#WARN                13     13                                         CFT014
      ** Error index                                                            CFT014
     D  X#INDX                14     18  0                                      CFT014
      ** Message text to prefix error message                                   CFT014
     D  X#MSGD                19     25                                         CFT014
     D  X#MSGF                26     35                                         CFT014
      ** Fields in error                                                        CFT014
     D  X#FLDS                36     41                                         CFT014
      ** Error codes array                                                      CFT014
     D  X#ERCD                51    200                                         CFT014
     D  O#E                   51    200                                         CFT014

      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+

      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+

      ** Index for arrays of error message ids etc
     D Idx             S              3P 0

      ** Index for arrays of warning message ids etc
     D WIx             S              3P 0

     D C#RTCD          S              7
     D C#OPTN          S              7
     D C#CNUM          S             10
     D C#KYST          S              7
                                                                                CFT014
      ** Program where the message from ME9940 will be sent                     CFT014
     D WPrgQ           S             10A                                        CFT014

      * This prog only
     D ADLINE          S              1
     D ADSLON          S              1
     D ##CSID          S              1

      ** IBAN character test arrays                                             CFT004
     D Alpha           S              1    DIM(26) CTDATA PERRCD(26)            CFT004
     D Numeric         S              1    DIM(10) CTDATA PERRCD(10)            CFT004
                                                                                              CSW203
      ** Flag to indicate if CSW203 is switched on                                            CSW203
     D CSW203          S              1A                                                      CSW203
                                                                                              CSW203
      ** Parameter used as return code for call SWIF2003                                      CSW203
     D PRTCD           S              7A                                                      CSW203
                                                                                              CSW203
      **                                                                        CFT004
      ** +--------------------------------------+
      ** ¦ End of D-specs                       ¦
      ** ¦ ==============                       ¦
      ** +--------------------------------------+
      *********************************************************************
      /EJECT                                                              *
      *********************************************************************
     C
      ** +--- Start of Main processing -----------------------------------+
      ** ¦                                                                ¦
      ** ¦ Initial processing is performed automatically: the *INZSR is   ¦
      ** ¦ executed at program activation.                                ¦
      ** ¦                                                                ¦
      ** +----------------------------------------------------------------+

      ** Initialization
      *
     C                   Eval      RetCodeIn = *BlankS
     C                   Eval      FldNamXAr = *BlankS
     C                   Eval      MsgIDXAr  = *BlankS
     C                   Eval      MsgDtaXAr = *BlankS
     C                   Eval      WFldNmXAr = *Blanks
     C                   Eval      WMsgIDXAr  = *Blanks
     C                   Eval      WMsgDtaXAr = *Blanks
     C                   Eval      Idx = 0
     C                   Eval      WIx = 0
     C                   Eval      AD#1 = 'N'
     C                   Eval      AD#2 = 'N'
     C                   Eval      AD#3 = 'N'
     C                   Eval      AD#4 = 'N'
     C                   Eval      AD#5 = 'N'
     C                   Eval      AD#6 = 'N'


      * Sender's Correspondent
      *
     C                   Exsr      VACCBNK

      ** If an error was found, set the return code appropriately
      *
     C                   If        OKAcb1 = 'N' or
     C                             OKAcb2 = 'N' or
     C                             OKAcb3 = 'N' or
     C                             OKAcb4 = 'N' or
     C                             OKAcb5 = 'N'
     C                   Eval      RetCodeIn = 'Error'
     C                   Else                                                                 CSD089
     C                   If        OKAcb1 = 'W' or                                            CSD089
     C                             OKAcb2 = 'W' or                                            CSD089
     C                             OKAcb3 = 'W' or                                            CSD089
     C                             OKAcb4 = 'W' or                                            CSD089
     C                             OKAcb5 = 'W'                                               CSD089
     C                   Eval      RetCodeIn = 'Warning'                                      CSD089
     C                   End                                                                  CSD089
     C                   End

      * RETURN
      *
     C                   RETURN
      ******************************************************************
      /EJECT
     C******************************************************************
     C* VACCBNK - VALIDATION ACCOUNT WITH BANK                         *
      ******************************************************************
     C*
     C     VACCBNK       BEGSR

     C                   Eval      DSACB1 = SACB1
     C                   Eval      DSACB2 = SACB2
     C                   Eval      DSACB3 = SACB3
     C                   Eval      DSACB4 = SACB4
     C                   Eval      DSACB5 = SACB5
     C                   Eval      @ACBT = *Blanks

      *  Receiver's Correspondent is Optional
     C                   If        SACBDS  <> *Blanks

      *  ? not allowed
     C     '?'           Scan      SACB1         Y#                3 0    90
      *
     C                   If        *IN90 = *On
      * Send error to screen
     C                   Move      'N'           OKAcb1
     C                   Add       1             Idx
     C                   Movel     'SACB1'       FldNamXAr(Idx)
     C                   Movel     'MMA1044'     MsgIdXAr(Idx)
     C                   End

      * No error
     C                   If        OKAcb1 <> 'N'

      *  Account with Bank not allowed for settlement type 12 or 13
      *  i.e. Cheques and Drafts
     C                   If        @STMT = 12 or
     C                             @STMT = 13
      * Send error to screen
     C                   Move      'N'           OKAcb1
     C                   Add       1             Idx
     C                   Movel     'SACB1'       FldNamXAr(Idx)
     C                   Movel     'MMA1045'     MsgIdXAr(Idx)

     C                   Else
     C                   Movel(P)  SACBDS        ADDRSS
      *
      *  If first ten characters used then try to find via SDCUSTPD
     C                   If        ADCH26 = *Blanks and
     C                             ADEXCS = *Blanks and
     C                             ADSLSH <> '/' or
     C                             ADCH36 = *Blanks and
     C                             ADXCS2 = *Blanks and
     C                             ADCHK2 <> *Blanks and
     C                             ADSLSH = '/' and
     C                             ADSLS2 <> '/'

      *  First 10 characters should be key for SDCUST
     C                   If        ADSLSH <> '/'
     C                   Movel     ADCHK1        C#CNUM
     C                   Else
     C                   Movel     ADCHK2        C#CNUM
     C                   End
      *
      *  Call to access pgm for Customer details
     C**********         CALLB     'AOCUSTR0'                                               AR666005
     C                   CALLB     'AOCUSTR1'                                               AR666005
     C                   Parm      *Blanks       C#RTCD
     C                   Parm      '*KEY   '     C#OPTN
     C                   Parm                    C#CNUM
     C                   Parm      *Blanks       C#KYST
     C*****SDCUST        Parm      *Blanks       DSSDY                                      AR666005
     C     SDCUST        PARM      *Blanks       DSLDY                                      AR666005

     C                   If        C#RTCD = *Blanks

      * Overwrite shortname
     C                   If        ADSLSH <> '/'
     C                   Movel(P)  BBCUST        SACB1
     C                   Else
     C                   Movel(P)  BBCUST        SACB2
     C                   End

     C                   Eval      @ACBT = 'C'

     C                   End
     C                   End
     C                   End
     C                   End

     C                   If        OKAcb1 <> 'N' and
     C                             @ACBT = *Blanks

      *  If 1st 11 Chars of 1st line then SWIFT address assumed
      *  Or first is '/' and second is SWIFT Address

      *                                                                                       261003
      ** If field does not begin with '/' and is longer than 11                               261003
      ** characters, show warning message that it is not S.W.I.F.T.                           261003
      *                                                                                       261003
     C                   If        ADCH26 = *Blanks and                                       261003
     C                             ADEXSW <> *Blanks and                                      261003
     C                             ADSLSH <> '/' or                                           261003
     C                             ADCH36 = *Blanks and                                       261003
     C                             ADEXS2 <> *Blanks and                                    MD024825
     C                             ADCHK2 <> *Blanks and                                      261003
     C                             ADSLSH = '/' and                                           261003
     C                             ADSLS2 <> '/'                                              261003
      *                                                                                       261003
      ** Send warning to screen                                                               261003
      *                                                                                       261003
     C                   Add       1             WIx                                          261003
     C                   If        ADSLSH <> '/'                                              261003
     C                   Move      'W'           OKAcb1                                       261003
     C                   Movel     'SACB1'       WFldNmXAr(WIx)                               261003
     C                   Else                                                                 261003
     C                   Move      'W'           OKAcb2                                       261003
     C                   Movel     'SACB2'       WFldNmXAr(WIx)                               261003
     C                   Endif                                                                261003
      *                                                                                       261003
     C                   Movel     'MMA1338'     WMsgIdXAr(WIx)                               261003
     C                   Endif                                                                261003
      *                                                                                       261003
      *  If field does not begin with '/' and is not longer than 11
      *  characters, validate as a S.W.I.F.T. Address
     C                   If        ADCH26 = *Blanks and
     C                             ADEXSW = *Blanks and
     C                             ADSLSH <> '/' or
     C                             ADCH36 = *Blanks and
     C                             ADEXS2 = *Blanks and
     C                             ADCHK2 <> *Blanks and
     C                             ADSLSH = '/' and
     C                             ADSLS2 <> '/'

      *  First 11 characters should be key for CLSWT.
     C                   If        ADSLSH <> '/'
     C                   Movel     ADCHK1        CLSWTK
     C                   Else
     C                   Movel     ADCHK2        CLSWTK
     C                   End

     C                   Exsr      SWIFT

     C                   If        ##CSID = 'Y'
     C     WCUSTC        IFEQ      'Y'                                                      AR666005
      *                                                                                     AR666005
      ** Send error to screen                                                               AR666005
      *                                                                                     AR666005
     C                   ADD       1             Idx                                        AR666005
     C                   IF        ADSLSH <> '/'                                            AR666005
     C                   MOVE      'N'           OKAcb1                                     AR666005
     C                   MOVEL     'SACB1'       FldNamXAr(Idx)                             AR666005
     C                   ELSE                                                               AR666005
     C                   MOVE      'N'           OKAcb2                                     AR666005
     C                   MOVEL     'SACB2'       FldNamXAr(Idx)                             AR666005
     C                   ENDIF                                                              AR666005
     C                   MOVEL     'FTM7119'     MsgIdXAr(Idx)                              AR666005
     C                   ELSE                                                               AR666005

     C                   If        *IN31 = *On
      * Send error to screen
     C**********         Add       1             Idx                                          CSD089
     C                   Add       1             WIx                                          CSD089
     C                   If        ADSLSH <> '/'
     C**********         Move      'N'           OKAcb1                                       CSD089
     C**********         Movel     'SACB1'       FldNamXAr(Idx)                               CSD089
     C                   Move      'W'           OKAcb1                                       CSD089
     C                   Movel     'SACB1'       WFldNmXAr(WIx)                               CSD089
     C                   Else
     C**********         Move      'N'           OKAcb2                                       CSD089
     C**********         Movel     'SACB2'       FldNamXAr(Idx)                               CSD089
     C                   Move      'W'           OKAcb2                                       CSD089
     C                   Movel     'SACB2'       WFldNmXAr(WIx)                               CSD089
     C                   End
     C**********         Movel     'MMA1046'     MsgIdXAr(Idx)                                CSD089
     C                   Movel     'MMA1046'     WMsgIdXAr(WIx)                               CSD089

     C                   Else
     C                   Eval      @ACBT = 'S'
      *
      *  No SWIFT address record.
     C                   If        *IN32 = *On and
     C                             *IN31 = *Off

      *  If text changed then warning needs to be changed
     C                   If        ADSLSH <> '/'
     C                   Movel     CLSWTK        @ACB1
      * Send warning to screen
     C                   Move      'W'           OKAcb1
     C                   Add       1             WIx
     C                   Movel     'MMA1047'     WMsgIdXAr(WIx)
     C                   Movel     'SACB1'       WFldNmXAr(WIx)

     C                   Else
     C                   Movel     CLSWTK        @Acb2
      * Send warning to screen
     C                   Move      'W'           OKAcb2
     C                   Add       1             WIx
     C                   Movel     'MMA1047'     WMsgIdXAr(WIx)
     C                   Movel     'SACB2'       WFldNmXAr(WIx)

     C                   End

     C                   End
     C                   End
     C                   End
     C                   ENDIF                                                              AR666005
     C                   End
     C                   End

     C                   If        OKAcb1 <> 'N' and
     C                             @ACBT = *Blanks

      * Invalid customer number or shortname.
     C                   If        ADCH26 = *Blanks and
     C                             ADEXCS = *Blanks and
     C                             ADSLSH <> '/' or
     C                             ADCH36 = *Blanks and
     C                             ADXCS2 = *Blanks and
     C                             ADCHK2 <> *Blanks and
     C                             ADSLSH = '/' and
     C                             ADSLS2 <> '/'

      *  First 10 characters should be key for SDCUST
      * Send error to screen
     C                   Add       1             Idx
     C                   If        ADSLSH <> '/'
     C                   Move      'N'           OKAcb1
     C                   Movel     'SACB1'       FldNamXAr(Idx)
     C                   Else
     C                   Move      'N'           OKAcb2
     C                   Movel     'SACB2'       FldNamXAr(Idx)
     C                   End
     C     C#RTCD        IFEQ      '*CUSDEL'                                                AR666005
     C     BBCLST        ANDEQ     'Y'                                                      AR666005
     C                   MOVEL     'FTM7119'     MsgIdXAr(Idx)                              AR666005
     C                   ELSE                                                               AR666005
     C                   Movel     'MMA1048'     MsgIdXAr(Idx)
     C                   ENDIF                                                              AR666005

     C                   Else
      * Validate as an address
     C                   Eval      ADLINE = 'Y'
     C                   Exsr      ADCHK
                                                                                CFT014
      ** Bilateral agreement exists and account line is a clearing code         CFT014
                                                                                CFT014
     C                   If        (@CFT014 = 'Y') And (@MT103 = 'Y') And       CFT014
     C                             (ADNOSN = '//') And (ADCH26 = *Blank)        CFT014
     C                   Move      'Y'           WCL103            1            CFT014
     C                   Else                                                   CFT014
     C                   Move      'N'           WCL103                         CFT014
     C                   EndIf                                                  CFT014

      *  Depending on the indicators, highlight the field in error
     C                   If        *IN91 = *On
     C                             And (@CFT014 = 'N') Or *IN91 = *On           CFT014
     C                             And (@CFT014 = 'Y') And (WCL103 = 'N')       CFT014
      * Send error to screen
     C                   Move      'N'           OKAcb1
     C                   Add       1             Idx
     C                   Movel     'SACB1'       FldNamXAr(Idx)
     C                   Movel     'MMA1049'     MsgIdXAr(Idx)
     C                   End
      *
     C                   If        *IN92 = *On
      * Send error to screen
     C                   Move      'N'           OKAcb1
     C                   Add       1             Idx
     C                   Movel     'SACB1'       FldNamXAr(Idx)
     C                   Movel     'MMA1050'     MsgIdXAr(Idx)
     C                   End
     C                   End

     C                   If        AD#1 = 'Y'
     C**********         Move      'N'           OKAcb1                                       CSD089
     C**********         Add       1             Idx                                          CSD089
     C**********         Movel     'SACB1'       FldNamXAr(Idx)                               CSD089
     C**********         Movel     'MMA1051'     MsgIdXAr(Idx)                                CSD089
     C                   Move      'W'           OKAcb1                                       CSD089
     C                   Add       1             WIx                                          CSD089
     C                   Movel     'SACB1'       WFldNmXAr(WIx)                               CSD089
     C                   Movel     'MMA1051'     WMsgIdXAr(WIx)                               CSD089
     C                   End

     C                   If        AD#2 = 'Y'
     C**********         Move      'N'           OKAcb2                                       CSD089
     C**********         Add       1             Idx                                          CSD089
     C**********         Movel     'SACB2'       FldNamXAr(Idx)                               CSD089
     C**********         Movel     'MMA1051'     MsgIdXAr(Idx)                                CSD089
     C                   Move      'W'           OKAcb2                                       CSD089
     C                   Add       1             WIx                                          CSD089
     C                   Movel     'SACB2'       WFldNmXAr(WIx)                               CSD089
     C                   Movel     'MMA1051'     WMsgIdXAr(WIx)                               CSD089
     C                   End

     C                   If        AD#3 = 'Y'
     C**********         Move      'N'           OKAcb3                                       CSD089
     C**********         Add       1             Idx                                          CSD089
     C**********         Movel     'SACB3'       FldNamXAr(Idx)                               CSD089
     C**********         Movel     'MMA1051'     MsgIdXAr(Idx)                                CSD089
     C                   Move      'W'           OKAcb3                                       CSD089
     C                   Add       1             WIx                                          CSD089
     C                   Movel     'SACB3'       WFldNmXAr(WIx)                               CSD089
     C                   Movel     'MMA1051'     WMsgIdXAr(WIx)                               CSD089
     C                   End

     C                   If        AD#4 = 'Y'
     C**********         Move      'N'           OKAcb4                                       CSD089
     C**********         Add       1             Idx                                          CSD089
     C**********         Movel     'SACB4'       FldNamXAr(Idx)                               CSD089
     C**********         Movel     'MMA1051'     MsgIdXAr(Idx)                                CSD089
     C                   Move      'W'           OKAcb4                                       CSD089
     C                   Add       1             WIx                                          CSD089
     C                   Movel     'SACB4'       WFldNmXAr(WIx)                               CSD089
     C                   Movel     'MMA1051'     WMsgIdXAr(WIx)                               CSD089
     C                   End

     C                   If        AD#5 = 'Y'
     C**********         Move      'N'           OKAcb5                                       CSD089
     C**********         Add       1             Idx                                          CSD089
     C**********         Movel     'SACB5'       FldNamXAr(Idx)                               CSD089
     C**********         Movel     'MMA1051'     MsgIdXAr(Idx)                                CSD089
     C                   Move      'W'           OKAcb5                                       CSD089
     C                   Add       1             WIx                                          CSD089
     C                   Movel     'SACB5'       WFldNmXAr(WIx)                               CSD089
     C                   Movel     'MMA1051'     WMsgIdXAr(WIx)                               CSD089
     C                   End
                                                                                CFT014
      ** Address not allowed without an account line if bank operation          CFT014
      ** code is either a 'SPRI', 'SSTD' or a 'SPAY'.                           CFT014
                                                                                CFT014
     C                   If        @CFT014 = 'Y'                                CFT014
     C                   If        (SBOCD = 'SPRI') Or (SBOCD = 'SPAY') Or      CFT014
     C                             (SBOCD = 'SSTD')                             CFT014
     C                   If        ADSLSH <> '/'                                CFT014
     C                   Move      'N'           OKACB1                         CFT014
     C                   Add       1             Idx                            CFT014
     C                   Movel     'SACB1'       FldNamXAr(Idx)                 CFT014
     C                   Movel     'FTM3215'     MsgIdXAr(Idx)                  CFT014
     C                   EndIf                                                  CFT014
     C                   EndIf                                                  CFT014
     C                   EndIf                                                  CFT014

      *  If no errors then customer is an address
     C**********         If        OKAcb1 = 'Y'and                                            261003
     C**********                   OKAcb2 = 'Y'and                                            261003
     C                   If        OKAcb1 <> 'N'and                                           261003
     C                             OKAcb2 <> 'N'and                                           261003
     C                             OKAcb3 = 'Y'and
     C                             OKAcb4 = 'Y'and
     C                             OKAcb5 = 'Y'and
     C                             @ACBT = *Blanks
     C                   Eval      @ACBT = 'A'
     C                   End

     C                   End
                                                                                CFT014
      ** Clearing code exists                                                   CFT014
                                                                                CFT014
     C**********         If        (ADNOSN = '//') And (ADCH26 = *Blank)               CFT014 241855
     C                   If        (ADNOSN = '//')                                            241855
     C                   Clear                   I#PARM                         CFT014
     C                   Clear                   O#PARM                         CFT014
     C                   Clear                   X#PARM                         CFT014
     C                   If        WCL103 = 'N'                                 CFT014
                                                                                              CSW203
      ** If CSW203 is installed, set I#MTYP to '103' instead of '100'                         CSW203
                                                                                              CSW203
     C                   IF        CSW203 = 'Y'                                               CSW203
     C                   EVAL      I#MTYP = '103'                                             CSW203
     C                   ELSE                                                                 CSW203
     C                   Eval      I#MTYP = '100'                               CFT014
     C                   ENDIF                                                                CSW203
                                                                                              CSW203
     C                   Else                                                   CFT014
     C                   Eval      I#MTYP = '103'                               CFT014
     C                   Endif                                                  CFT014
     C                   Eval      I#VFLD = 'AWBK'                              CFT014
     C                   Eval      I#PR = 'PAY'                                 CFT014
     C                   If        @ACBT = 'C'                                  CFT014
     C                   Eval      I#PRTT = 'C'                                 CFT014
     C                   Eval      I#PRTY = C#CNUM                              CFT014
     C                   Else                                                   CFT014
     C                   If        @ACBT = 'S'                                  CFT014
     C                   Eval      I#PRTT = 'S'                                 CFT014
     C                   Eval      I#PRTY = CLSWTK                              CFT014
     C                   Else                                                   CFT014
     C                   Eval      I#PRTT = *Blank                              CFT014
     C                   Eval      I#PRTY = *Blank                              CFT014
     C                   EndIf                                                  CFT014
     C                   EndIf                                                  CFT014
     C                   Eval      I#PCCY = SPCCY                               CFT014
     C                   Eval      I#RCCY = SSMCY                               CFT014
     C                   Eval      I#ACLN = SACB1                               CFT014
                                                                                CFT014
     C                   Eval      X#CPGM = WPrgQ                               CFT014
     C                   Eval      X#MSGD = 'MEC0017'                           CFT014
     C                   Eval      X#MSGF = 'MEMSG'                             CFT014
                                                                                CFT014
      ** Validate account line                                                  CFT014
                                                                                CFT014
     C                   Call      'ME9940'                                     CFT014
     C                   Parm                    @RCODE                         CFT014
     C                   Parm                    I#PARM                         CFT014
     C                   Parm                    O#PARM                         CFT014
     C                   Parm                    X#PARM                         CFT014
     C                   Parm      *Blank        Z#PARM          256            CFT014
                                                                                CFT014
      ** Error found                                                            CFT014
                                                                                CFT014
     C                   If        X#ERRM <> *Blank                             CFT014
     C                   Eval      OKACB1 = 'N'                                 CFT014
     C                   Eval      Idx = Idx + 1                                CFT014
     C                   Movel     'SACB1'       FldNamXAr(Idx)                 CFT014
     C                   Movel     X#MSGD        MsgIdXar(Idx)                  CFT014
     C                   Movel     Z#PARM        MsgDtaXAr(Idx)                 CFT014
     C                   EndIf                                                  CFT014
     C                   EndIf                                                  CFT014
     C                                                                          CFT004
      *  If IBAN (International Bank Account Number) is switched on             CFT004
     C                                                                          CFT004
     C                   IF        @CFT004 = 'Y'                                CFT004
                                                                                CFT004
      *  Remove '/' from first position                                         CFT004
                                                                                CFT004
     C                   IF        DSACB1Pos1 = '/'                             CFT004
     C     34            SUBST     DSACB1:2      PIBAN                          CFT004
     C                   ELSE                                                   CFT004
     C                   EVAL      PIBAN = DSACB1                               CFT004
     C                   ENDIF                                                  CFT004
                                                                                CFT004
      *  Format field, removing blanks and IBAN prefix                          CFT004
                                                                                CFT004
     C                   CALL      'AOIBANR3'                                   CFT004
     C                   PARM                    @Rcode            7            CFT004
     C                   PARM                    PIBAN            47            CFT004
     C                   PARM                    POWith           47            CFT004
     C     P@IBAN        PARM                    PONobl           34            CFT004
                                                                                CFT004
      *  If first four characters are 'AANN', proceed with IBAN validn          CFT004
                                                                                CFT004
     C     1             SUBST     P@IBAN:1      IBCTY1            1            CFT004
     C     1             SUBST     P@IBAN:2      IBCTY2            1            CFT004
     C     1             SUBST     P@IBAN:3      IBCHK1            1            CFT004
     C     1             SUBST     P@IBAN:4      IBCHK2            1            CFT004
     C     IBCTY1        LOOKUP    Alpha                                  94    CFT004
     C   94IBCTY2        LOOKUP    Alpha                                  94    CFT004
     C   94IBCHK1        LOOKUP    Numeric                                94    CFT004
     C   94IBCHK2        LOOKUP    Numeric                                94    CFT004
                                                                                CFT004
     C                   IF        *IN94 = *ON                                  CFT004
                                                                                CFT004
     C                   CALL      'AOIBANR5'                           90      CFT004
     C                   PARM      *Blanks       @Rcode                         CFT004
     C                   PARM                    P@IBAN           34            CFT004
                                                                                CFT004
      *  If no warnings, prefix IBAN with '/'                                   CFT004
                                                                                CFT004
     C                   IF        *IN90 = *Off and @Rcode = *Blanks            CFT004
     C     '/'           CAT       P@IBAN        SACB1                          CFT004
     C                   ELSE                                                   CFT004
                                                                                CFT004
      *  Warnings:                                                              CFT004
                                                                                CFT004
     C                   EVAL      OKacb1 = 'N'                                 CFT004
     C                   EVAL      WIx = WIx + 1                                CFT004
     C                   EVAL      WFldNmXAr(WIx) = 'SACB1     '                CFT004
     C                   EVAL      WMsgDtaXAr(WIx) = 'Acc. with Bank   '        CFT004
     C                   SELECT                                                 CFT004
                                                                                CFT004
      *  Invalid ISO country code                                               CFT004
                                                                                CFT004
     C                   WHEN      @Rcode = '      1'                           CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2400'                   CFT004
                                                                                CFT004
      *  Invalid BBAN length                                                    CFT004
                                                                                CFT004
     C                   WHEN      @Rcode = '      2'                           CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2401'                   CFT004
                                                                                CFT004
      *  Invalid character                                                      CFT004
                                                                                CFT004
     C                   WHEN      @Rcode = '      3'                           CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2402'                   CFT004
                                                                                CFT004
      *  Invalid IBAN length                                                    CFT004
                                                                                CFT004
     C                   WHEN      @Rcode = '      4'                           CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2403'                   CFT004
                                                                                CFT004
      *  Invalid check digit                                                    CFT004
                                                                                CFT004
     C                   WHEN      @Rcode = '      5'                           CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2404'                   CFT004
                                                                                CFT004
      *  Other/non-specific warning                                             CFT004
                                                                                CFT004
     C                   OTHER                                                  CFT004
     C                   EVAL      WMsgIdXAr(WIx) = 'FTM2405'                   CFT004
     C                   ENDSL                                                  CFT004
                                                                                CFT004
     C                   ENDIF                                                  CFT004
     C                   ENDIF                                                  CFT004
     C                   ENDIF                                                  CFT004
     C/COPY WNCPYSRC,FTH00493
     C                                                                          CFT004
     C                   End
      *                                                                                       CFT049
      ** Give Warning if Account with Bank is not SWIFT BIC                                   CFT049
      *                                                                                       CFT049
     C                   If        CFT049 = 'Y'                                               CFT049
     C                   MOVEL     SACB1         WCHK              4                          CFT049
      *                                                                                       CFT049
     C                   If        @ACBT <> 'S' AND                                           CFT049
     C                             WCHK  <> '//FW'                                            CFT049
     C                   Move      'W'           OKAcb1                                       CFT049
     C                   Add       1             WIx                                          CFT049
     C                   Movel     'SACB1'       WFldNmXAr(WIx)                               CFT049
     C**********         Movel     '5047550'     WMsgIdXAr(WIx)                      CFT049 MD035364
     C                   MOVEL     'FTM0060'     WMsgIdXAr(WIx)                             MD035364
     C                   Endif                                                                CFT049
      *                                                                                       CFT049
     C                   Endif                                                                CFT049
      *                                                                                       CFT049

     C                   ENDSR
     C*****************************************************************
     C* END OF RECEIVER'S CORRESPONDENT VALIDATION                    *
     C*****************************************************************
     C/EJECT
      * Subroutine SWIFT
     E/COPY FTCPYSRC,SFTSWFTCLE

      * Subroutine ADCHK
     E/COPY FTCPYSRC,SFTADDRCLE

      * Subroutine SWSET
     E/COPY FTCPYSRC,SFTADDRSC1

      *****************************************************************
      * *INZSR - Program Initialisation routine                       *
      *****************************************************************
     C     *INZSR        BEGSR

     C     *ENTRY        PLIST
      *
      * INPUTS
      *  Return Code
     C                   Parm                    RetCodeIn

      *  Screen fields
     C                   Parm                    TranInPrim                     CFT014
     C                   Parm                    TranInSecA
     C                   Parm                    TranInSecB                     CFT014
     C                   Parm                    WPrgQ                          CFT014

      * OUTPUTS
      * Error fields/message IDs/message data (arrays) from/to caller
     C                   Parm                    FldNamXAr
     C                   Parm                    MsgIDXAr
     C                   Parm                    MsgDtaXAr

     C                   Parm                    WFldNmXAr
     C                   Parm                    WMsgIDXAr
     C                   Parm                    WMsgDtaXAr

      *  OK Flags
     C                   Parm                    OKFlagsDS

      *  Validation Work Fields
     C                   Parm                    Val@Fields

      ** =================================================================
      ** Program, module and procedure names for database error processing.
      ** =================================================================
      ** The following /COPY sets these values, and also defines LDA as
      ** an external data area

     C/COPY ZACPYSRC,DBFIELDS

      ** Call SWIF2003 to check if CSW203 is installed                                        CSW203
                                                                                              CSW203
     C                   CALL      'SWIF2003'                                                 CSW203
     C                   PARM      *BLANKS       PRTCD                                        CSW203
                                                                                              CSW203
      ** If ret. code is "CSW203", set CSW203 flag to "Y", else set it to "N"                 CSW203
                                                                                              CSW203
     C                   IF        PRTCD = 'CSW2003'                                          CSW203
     C                   EVAL      CSW203 = 'Y'                                               CSW203
     C                   ELSE                                                                 CSW203
     C                   EVAL      CSW203 = 'N'                                               CSW203
     C                   ENDIF                                                                CSW203
                                                                                              CSW203
      *                                                                                       CFT049
      *** Check if CFT049 is switched on                                                      CFT049
      *                                                                                       CFT049
     C                   MOVE      'N'           CFT049            1                          CFT049
     C                   CALL      'AOSARDR0'                                                 CFT049
     C                   PARM      *BLANKS       @RTCD             7                          CFT049
     C                   PARM      '*VERIFY'     @OPTN             7                          CFT049
     C                   PARM      'CFT049'      @SARD             6                          CFT049
      *                                                                                       CFT049
     C     @RTCD         IFEQ      *BLANK                                                     CFT049
     C                   MOVE      'Y'           CFT049                                       CFT049
     C                   ENDIF                                                                CFT049
						*												                                                                     				  CFT049
     C/COPY WNCPYSRC,FTH00494
     C                   ENDSR                                                  *** InzEnd ***
      *****************************************************************
      /EJECT
      ********************************************************************
     C/COPY ZACPYSRC,PSSR_ILE
      ********************************************************************
**  CPY@
(c) Finastra International Limited 2001
**  SWCH  - Array of valid Swift characters
ABCDEFGHIJKLMNOPQRSTUVWXYZ 1234567890/-?:().,'+
**  Alpha - Array of alphabetic characters                                      CFT004
ABCDEFGHIJKLMNOPQRSTUVWXYZ
**  Numeric - Array of numeric characters                                       CFT004
0123456789
