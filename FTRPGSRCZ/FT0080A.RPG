     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas IBLC 2002 Cheques to be Paid - Window contr.')   *
      *****************************************************************
      *                                                               *
      *  Midas - Funds Transfer Module                                *
      *                                                               *
      *  RPG/FT0080A   - IBLC CHEQUES TO BE PAID WINDOW CONTR.        *
      *                                                               *
      *  Function:  This program prompt a new window on cheques to    *
      *             be paid to allow input of new fields used         *
      *             in the IBLC Returns.                              *
      *                                                               *
      *  (phase(s)) Input Cycle                                       *
      *                                                               *
      *  Called By: FT0080E - Cheques to Be Paid                      *
      *             FT0080R - Cheques to Be Paid Maintenance          *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CER059             Date 19Jul10               *
      *                 CER045             Date 20Jul09               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER045 - German Features - Reporting Bundesbank (Recompile)  *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
     FSDBRX1L0IF  E           K        DISK
      *
      ** Branch ext file                                 Prefix BC
      *
     FSDCTRYL1IF  E           K        DISK
      *
      ** Country Codes                                   Prefix A4
      *
     FFTCPX1L0IF  E           K        DISK
     F            CQPACDL                           KRENAMERTVIDX
      *
      ** Extended Cheques to be paid Retrieval index     Prefix CP.
      *
     FFTCPX1PDUF  E           K        DISK         KCOMIT       A    UC
     F            CQPACDL                           KRENAMEUPDIDX
      *
      ** Extended Cheques to be paid Update index        Prefix CP.
      *
     FILICDRPDIF  E                    DISK
      *
      ** IBLC 2002 ICD modules                           Prefix BG
      *
     FSDCUX1L0IF  E           K        DISK
      *
      ** IBLC Customer details                           Prefix BB
      *
     FFT008ADFCF  E                    WORKSTN
     F            FT0080X0                          KRENAMESCREEN
     F                                              KINFDS FILEDS
      *
      ** Display file                                    Prefix #0.
      *
      /EJECT
      *----------------------------------------------------------------
     E                    CTR     8   8  2
     E                    WND     7  28  5   OPT     1
      *
     E                    ZA1        16  1
     E                    ZA2        16  1
      /EJECT
      *----------------------------------------------------------------
     E                    ZS1        15  1 0
     E                    ZS2        21  1
      /EJECT
      *----------------------------------------------------------------
     E                    CPY@    1   1 80
      /EJECT
      *----------------------------------------------------------------
     IFILEDS      DS
      *
      ** File feedback data structure used to determine cursor location
      *
     I                                      370 370 BINROW
     I                                      371 371 BINCOL
     IBINARY      DS
      *
      ** Data structure used to determine cursor location
      *
     I                                    B   1   20BINVAL
      /EJECT
      *----------------------------------------------------------------
     I            DS
      *
      ** ZSEDIT data structure
      *
     I                                        1  150WORK15
     I                                        1  150ZS1
     I            DS
      *
      ** Data structure for testing CUTYPE  field
      *
     I                                        1   2 #0ORTY
     I                                        1   1 #0ORT1
     I                                        2   2 #0ORT2
     I                                        3   4 #0BETY
     I                                        3   3 #0BET1
     I                                        4   4 #0BET2
     I            DS
      *
      ** Data structure to test if operation code is required or not
      *
     I                                        1   5 TWND
     I                                        1   2 WWTRAN
     I                                        3   3 WWORDE
     I                                        4   4 WWBENE
     I                                        5   5 WWSETT
     ISDMMOD    E DSSDMMODPD
      *
      ** Midas Modules Deatils
      *
     IDSSDY     E DSDSSDY
      *
      ** DS for access programs, long data structure
      *
     IDSFDY     E DSDSFDY
      *
      ** DS for access programs, short data structure
      *
     ISDBANK    E DSSDBANKPD
      /EJECT
      *----------------------------------------------------------------
     I           SDS
      *
      ** Get program name from PSDS
      *
     I                                     *PROGRAM ##PGM
     I                                      244 253 SWSID
     I                                      254 263 SUSER
      /EJECT
      *----------------------------------------------------------------
     IDLDA        DS                            256
      *
      ** Data structure for data-base error processing
      *
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
     IRUNDAT    E DSRUNDAT
      *
      ** Rundat Data area
      *
      /EJECT
      *----------------------------------------------------------------
     INWRCD     E DSFTCPX1PD
      *
      ** Current/previous master file fields
      *
      /EJECT
      *----------------------------------------------------------------
     ISVRCD       DS                             37
      *
      ** Stored master file fields
      *
      /EJECT
      *----------------------------------------------------------------
      *
      ** Get the data structure passed from calling program
      *
      /COPY QWINDSRC,FT0080DTA
     IPDATA       DS                           1024
      *
     I                                        1  15 PREF1
     I                                       16  170SQCQ
     I                                       18  18 ##DRPT
     I                                       19  300##DRPY
     I                                       31  430##CQAM
     I                                       44  46 ##DRCY
     I                                       47  49 ##DRBR
     I                                     10151024 #1PGM
     I                                       50  52 BRCH
      /EJECT
      *----------------------------------------------------------------
      * Main processing
      *----------------------------------------------------------------
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Test if Window needed
      *
     C           *IN12     IFEQ '1'
     C           ACTION    ANDNE'D'
      *
      ** Access to SDBRX1L0 file
      *
     C           ##DRBR    IFNE '   '
     C           ##DRBR    CHAINSDBRX1L0             99
     C           *IN99     IFEQ *ON
     C                     Z-ADD21        WWBASE
     C                     MOVEL'SDBRX1L0'WWBFIL
     C                     MOVEL##DRBR    WWBKEY
     C                     EXSR SRDBER
     C                     ENDIF
     C                     ELSE
     C           BRCH      CHAINSDBRX1L0             99
     C           *IN99     IFEQ *ON
     C                     Z-ADD22        WWBASE
     C                     MOVEL'SDBRX1L0'WWBFIL
     C                     MOVELBRCH      WWBKEY
     C                     EXSR SRDBER
     C                     ENDIF
     C                     ENDIF
      *
      ** Check if Branch of Transaction as to be Reported
      *
     C           BRREPT    IFEQ 'Y'
      *
      ** Execute specific routine depending on action
      *
     C                     SELEC
      *
     C           ACTION    WHEQ 'E'
     C                     EXSR SRENQ
      *
     C           ACTION    WHEQ 'I'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *ON
     C                     EXSR SRINS
     C                     ELSE
     C                     EXSR SRAMD
     C                     ENDIF
      *
     C           ACTION    WHEQ 'A'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *OFF
     C                     EXSR SRAMD
     C                     ELSE
     C                     EXSR SRINS
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** Execute routine to setup return code and exit program
      *
      ** Call pgm once more just to close files
      *
     C                     CALL 'IL0421'
     C                     PARM           PCURR   3
     C                     PARM           PTYPE   1
     C                     PARM           PLINE  35
     C                     PARM 9         POPCL   10
      *
     C                     PARM           PACCD  10
     C                     PARM           PCUST   6
     C                     PARM           PFOUND  1
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *----------------------------------------------------------------
      * SRINS - Routine to handle 'INSERT' action
      *----------------------------------------------------------------
      *
     C           SRINS     BEGSR
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00000'   *IN,20
     C                     MOVEA'00000'   *IN,25
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Exit
      *
     C           *INKC     IFEQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write a new record to the file
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRAMD - Routine to handle 'AMEND' action
      *----------------------------------------------------------------
      *
     C           SRAMD     BEGSR
      *
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00000'   *IN,20
     C                     MOVEA'00000'   *IN,25
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Exit
      *
     C           *INKC     IFEQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRDEL - Routine to handle 'DELETE' action
      *----------------------------------------------------------------
      *
     C           SRDEL     BEGSR
      *
      ** Set indicators on for 'DELETE' mode to protect fields
      *
     C                     MOVE '1'       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     ELSE
      *
      ** Record found,
      ** save before image
      *
     C                     EXSR SRSAVE
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, delete record
      *
      ** DON'T DELETE PHYSICALLY
      *
     C           WWMTCH    IFNE 'Y'
     C                     EXSR SRDELR
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRENQ - Routine to handle 'ENQUIRY' action
      *----------------------------------------------------------------
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE '1'       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSMSG - Routine to send messages to message subfile.
      *----------------------------------------------------------------
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'FTUSRMSG'ZAMSGF
     C                     ENDIF
     C                     CALL 'SNDERMSG'
     C                     PARM ##PGM     ZAPGM  10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
     C                     MOVEL*BLANK    ZAMSGF
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRCMSG - Routine to clear program's message queue.
      *----------------------------------------------------------------
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRREC - Routine to access file via retrieve index
      *----------------------------------------------------------------
      *
     C           SRREC     BEGSR
      *
     C           KKEY1     CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRALOC - Routine to access record via update index
      *----------------------------------------------------------------
      *
     C           SRALOC    BEGSR
      *
     C           KKEY1     CHAINUPDIDX               6061
      *
      ** If record not on file, setup message 'Record deleted'
      *
     C           *IN60     IFEQ '1'
     C                     MOVEL'IL00018' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRUPD - Routine to update file.
      *----------------------------------------------------------------
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
     C           *IN68     IFEQ '0'
     C                     MOVE '1'       *IN70
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRWRT - Routine to write a new record to the file.
      *----------------------------------------------------------------
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
     C           *IN68     IFEQ '0'
     C                     MOVE '1'       *IN70
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRDELR - Routine to delete a record
      *----------------------------------------------------------------
      *
     C           SRDELR    BEGSR
      *
     C                     DELETUPDIDX                 68
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRCOMP - Routine to compare before/after image of records
      *----------------------------------------------------------------
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'IL00019' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KKEY1     SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE '1'       *IN60
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSAVE - Routine to save before image of record via DS
      *----------------------------------------------------------------
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRRTRN - Routine to set up return code for calling program
      *----------------------------------------------------------------
      *
     C           SRRTRN    BEGSR
     C                     SELEC
      *
      ** DBF update error
      *
     C           *IN69     WHEQ '1'
     C                     MOVE 'Y2U0004' WWRTRN
      *
      ** Database / Window error
      *
     C           *IN68     WHEQ '1'
     C                     MOVE 'USR0563' WWRTRN
      *
      ** F3 pressed
      *
     C           *INKC     WHEQ '1'
     C                     MOVE 'Y2U9999' WWRTRN
      *
      ** No errors
      *
     C                     OTHER
     C                     MOVE *BLANKS   WWRTRN
     C                     ENDSL
      *
     C                     CLOSEFTCPX1PD               99
      *
      ** Exit program
      *
     C                     MOVE '1'       *INLR
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRDBER - Routine to handle database errors
      *----------------------------------------------------------------
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN LDA       DLDA
     C           *LOCK     IN   DLDA
     C                     MOVEL'FT0080A 'DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  DLDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSCRN - Routine to handle screen and validation
      *----------------------------------------------------------------
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRCLOC - Routine to determine cursor location
      *----------------------------------------------------------------
      *
     C           SRCLOC    BEGSR
      *
     C                     MOVELZHEX      ZHEX    1
     C                     Z-ADDZHDEC     ZHDEC   30
      *
     C                     BITOF'01234567'HEX00   1
     C                     MOVELHEX00     WWBIN   2
     C                     MOVE ZHEX      WWBIN
     C                     MOVE WWBIN     BINARY
     C                     Z-ADDBINVAL    ZHDEC
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRVAL - Routine to control validation of each field.
      *----------------------------------------------------------------
      *
     C           SRVAL     BEGSR
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00000'   *IN,20
     C                     MOVEA'00000'   *IN,25
      *
      ** Validate fields
      *
     C                     EXSR SRORRE
      *
     C                     EXSR SRBERE
      *
      ** How have I to manage the operation code
      *
     C           *IN20     IFEQ *OFF
     C           *IN21     ANDEQ*OFF
     C                     EXSR SRWIND
      *
     C                     EXSR SROPCO
      *
     C           *IN22     IFEQ *OFF
     C                     EXSR SRCOCO
      *
      ** IDCO & IDEN should be validated simultaneously
      *
     C                     EXSR SRVLID
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRORRE - Routine to validate INORRE
      *----------------------------------------------------------------
      *
     C           SRORRE    BEGSR
      *
      ** Validate field
      *
     C           #0ORTY    IFEQ *BLANK
     C                     MOVE WWCUTY    #0ORTY
      *
     C                     ELSE
     C           #0ORTY    LOKUPCTR                      61
     C           *IN61     IFEQ *OFF
     C                     MOVEL'IL08001' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN20
     C                     EXSR SRSMSG
      *
     C                     ENDIF
     C                     ENDIF
     C                     ENDSR
      *
      /EJECT
      *----------------------------------------------------------------
      * SRBERE - Routine to validate INBERE
      *----------------------------------------------------------------
      *
     C           SRBERE    BEGSR
      *
      ** Validate field
      *
     C           #0BETY    IFEQ *BLANKS
     C                     MOVEL'IL08002' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN21
     C                     EXSR SRSMSG
     C                     ELSE
     C           #0BETY    LOKUPCTR                      61
     C           *IN61     IFEQ *OFF
      *
      ** 'Beneficiary type is not valid. '
      *
     C                     MOVEL'IL08015' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN21
     C                     EXSR SRSMSG
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      *
      /EJECT
      *----------------------------------------------------------------
      * SRWIND - Routine to know how to manage the window depending of
      *        Ordering type, beneficiary type and IBLC settlement type
      *----------------------------------------------------------------
      *
     C           SRWIND    BEGSR
      *
      ** Is the ordering custoner type resident ?
      *
     C                     MOVE #0ORTY    WWORDE
     C           WWORDE    IFNE 'R'
     C                     MOVE 'O'       WWORDE
     C                     ENDIF
      *
      ** Is the Beneficiary custoner type resident ?
      *
     C                     MOVE #0BETY    WWBENE
     C           WWBENE    IFNE 'R'
     C                     MOVE 'O'       WWBENE
     C                     ENDIF
      *
      **  Verify mode of management
      *
     C                     MOVE *OFF      WWMAND  1
     C                     MOVE *OFF      WWOPTI  1
      *
      ** Retrieve limit of Registration
      ** Call validation program IL0410 without Operation Code
      *
      ** Synoptic Program will remove unnecessary items
      *
     C                     MOVE '*NBANK'  PLIMT   6
      *
     C                     CALL 'IL0410'
     C                     PARM *BLANKS   PCODE
     C                     PARM           PLIMT   6
     C                     PARM WWCYCD    PTCCY   3
     C                     PARM ##PGM     PCPGM  10
      *
      ** Result parameters
      *
     C                     PARM '0'       PERID   1
     C                     PARM '0'       PDBID   1
     C                     PARM *ZEROS    PCLIM  150
     C                     PARM *ZEROS    PILIM  150
     C                     PARM ICLIMR    PLREG  150
      *
      ** If Limit of Registration is reached, then validate window
      ** Management
      *
      ** For Now, Synoptic program will remove unecessary items
      *
     C                     Z-ADD1         W       20
     C           TWND      LOKUPWND,W                    99
     C           *IN99     IFEQ *ON
     C           OPT,W     IFEQ 'O'
     C                     MOVE *ON       WWOPTI
     C                     ELSE
     C                     MOVE *ON       WWMAND
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SROPCO - Routine to validate INOPCO
      *----------------------------------------------------------------
     C           SROPCO    BEGSR
      *
      ** Validate field
      *
     C                     DO
      *
      ** Operation code couldn't be blank if mandatory,
      **                    must be blank if not allowed,
      ***           if it is allowed, normal validation
      *
      ** Validation for *blank
      *
     C           WWMAND    IFEQ *ON
     C           WWOPTI    ANDEQ*OFF
     C           #0OPCO    ANDEQ*BLANKS
      *
      ** Default with code 071
      *
     C                     MOVE '071'     #0OPCO
     C                     MOVEL'IL08014' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN22
     C                     EXSR SRSMSG
     C                     ENDIF
      *
      ** Search Asked ?
      *
     C           '?'       SCAN #0OPCO    RESULT  10     90
     C           *IN90     IFEQ *ON
     C                     CALL 'IL0400'
     C                     PARM #0OPCO    WWOPCO  3
     C                     PARM *BLANK    WWSELE  1
     C                     PARM *BLANK    WWRETR  1
      *
     C           WWSELE    IFEQ '1'
     C                     MOVE WWOPCO    #0OPCO
     C                     ENDIF
     C                     MOVE *ON       *IN75
      *
     C                     ENDIF
      *
      ** Validation for not *blanks
      *
     C           #0OPCO    IFNE *BLANK
     C           WWMAND    IFEQ *OFF
     C           WWOPTI    ANDEQ*OFF
      *
      ** 'Not Required. left blank'
      *
     C                     MOVEL'IL08003' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN22
     C                     EXSR SRSMSG
     C                     MOVE *BLANKS   #0OPCO
     C                     LEAVE
     C                     ENDIF
      *
      ** Continue validation if entered when it's possible
      *
      ** Check if numeric
      *
     C                     MOVE #0OPCO    ZFIELD    P
     C                     Z-ADD3         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
      *
      ** If not numeric - report error - must be numeric
      *
     C           *IN99     IFEQ *ON
      *
      ** 'Must be 3 digits field '
      *
     C                     MOVEL'IL08004' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN22
     C                     EXSR SRSMSG
      *
      ** Bypass any further validation
      *
     C                     LEAVE
     C                     ELSE
     C                     MOVE ZFIELD    #0OPCO
     C                     ENDIF
      *
      ** Check if exist
      *
     C                     MOVE #0OPCO    PCODE   3
      *
      ** Call validation program
      *
      ** Synoptic Program will remove unnecessary items
     C                     MOVE '*BANK '  PLIMT   6
     C                     CALL 'IL0410'
     C                     PARM           PCODE
     C                     PARM           PLIMT
     C                     PARM WWCYCD    PTCCY   3
     C                     PARM ##PGM     PCPGM  10
     C                     PARM '0'       PERID   1
     C                     PARM '0'       PDBID   1
     C                     PARM *ZEROS    PCLIM  150
     C                     PARM *ZEROS    PILIM  150
     C                     PARM           PLREG  150
      *
      ** If database error
      *
     C           PDBID     IFEQ '1'
     C                     MOVEL'ILCODEPD'WWBFIL
     C                     MOVEL'1'       WWBKEY
     C                     Z-ADD8         WWBASE
     C                     EXSR SRDBER
     C                     ENDIF
      *
      ** If not found, report error
      *
     C           PERID     IFEQ '1'
      *
      ** 'Doesn't exist'
      *
     C                     MOVEL'IL08005' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN22
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C           PERID     IFEQ '2'
      *
      ** 'Not valid today'
      *
     C                     MOVEL'IL08006' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN22
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRCOCO - Routine to validate INCOCO
      *----------------------------------------------------------------
      *
     C           SRCOCO    BEGSR
      *
      ** Validate field
      *
     C           '?'       SCAN #0COCO    RESULT         90
     C           *IN90     IFEQ *ON
     C                     CALL 'IL0401'
     C                     PARM #0COCO    WWCOCO  2
     C                     PARM *BLANK    WWSELE  1
     C                     PARM *BLANK    WWRETR  1
      *
     C           WWSELE    IFEQ '1'
     C                     MOVE WWCOCO    #0COCO
     C                     ENDIF
     C                     MOVE *ON       *IN75
      *
     C                     ENDIF
      *
      ** IF no opcode >> no country code
      *
     C           #0OPCO    IFEQ *BLANKS
     C           #0COCO    IFNE *BLANKS
      *
      ** 'Not Required. left blank'
      *
     C                     MOVEL'IL08007' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN23
     C                     MOVE *BLANKS   #0COCO
     C                     EXSR SRSMSG
     C                     ENDIF
     C                     ELSE
      *
      ** Check country limit
      *
     C           WWAMNT    IFGE PCLIM
      *
     C           #0COCO    IFEQ *BLANKS
      *
      ** 'Mandatory'
      *
     C                     MOVEL'IL08008' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN23
     C                     EXSR SRSMSG
      *
      ** If not blank, check if exist
      *
     C                     ELSE
     C                     MOVEL#0COCO    KCOCO   2
     C           KCOCO     CHAINSDCTRYL1             90
      *
      ** If not found - report error
      *
     C           *IN90     IFEQ '1'
      *
      ** 'Country code not defined '
      *
     C                     MOVEL'IL08009' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN23
     C                     EXSR SRSMSG
     C                     ENDIF
     C                     ENDIF
      *
      ** If amount is lower then limit, force blanks
      *
     C                     ELSE
     C                     MOVEL*BLANKS   #0COCO
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRVLID - Routine to validate INIDCO & INIDEN
      *----------------------------------------------------------------
      *
     C           SRVLID    BEGSR
      *
      ** Validate field
      *
      ** IF no opcode >> no identification code/number
      *
     C           #0OPCO    IFEQ *BLANKS
      *
     C           #0IDCO    IFNE *BLANKS
     C           #0IDEN    ORNE *BLANKS
      *
      ** 'Not Required, Left it Blanks'
      *
     C                     MOVEL'IL08010' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN24
     C                     MOVE '1'       *IN25
     C                     MOVE *BLANK    #0IDCO
     C                     MOVE *BLANK    #0IDEN
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ELSE
      *
      ** Check identification limit
      *
     C           WWAMNT    IFGE PILIM
      *
      ** Perform validation
      *
     C                     DO
      *
      ** If greater then limit & blank entered, report error
      *
     C           #0IDCO    IFEQ *BLANKS
     C           #0IDEN    OREQ *BLANKS
     C                     MOVEL'IL08011' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN24
     C                     MOVE '1'       *IN25
     C                     EXSR SRSMSG
     C                     ENDIF
      *
      ** If errors detected, bypass any further validation
      *
     C           *IN24     IFEQ '1'
     C           *IN25     OREQ '1'
     C                     LEAVE
     C                     ENDIF
      *
      ** Align numeric fields and report error if non-numeric
      *
     C                     MOVE #0IDCO    ZFIELD    P
     C                     Z-ADD2         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ *ON
      *
      ** 'Must be 2 digits'
      *
     C                     MOVEL'IL08012' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN24
     C                     EXSR SRSMSG
     C                     ELSE
     C                     MOVE ZFIELD    #0IDCO
     C                     ENDIF
      *
     C                     MOVE #0IDEN    ZFIELD    P
     C                     Z-ADD9         ZADIG
     C                     EXSR ZALIGN
     C           *IN99     IFEQ *ON
      *
      ** 'Must be 9 digits'
      *
     C                     MOVEL'IL08013' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN25
     C                     EXSR SRSMSG
     C                     ELSE
     C                     MOVE ZFIELD    #0IDEN
     C                     ENDIF
      *
      ** If errors detected, bypass any further validation
      *
     C           *IN25     IFEQ '1'
     C           *IN24     OREQ '1'
     C                     LEAVE
     C                     ENDIF
      *
      ** Prepare parameters & call external validation program
      *
     C                     MOVE #0IDCO    PIDCO
     C                     MOVE #0IDEN    PIDEN
      *
     C                     CALL 'IL0411'
     C                     PARM           PIDCO   20
     C                     PARM           PIDEN   90
     C                     PARM ##PGM     PCPGM  10
      *
      ** Result parameters
      *
     C                     PARM *BLANK    PDBID   1
     C                     PARM *BLANK    PERR1   1
     C                     PARM *BLANK    PERR2   1
      *
      ** If error found, report error using message, passed by
      ** validation pgm
      *
     C           PDBID     IFEQ '1'
      *
      ** Perform database error processing
      *
     C                     MOVEL'IL0411'  WWBFIL
     C                     Z-ADD9         WWBASE
     C                     MOVEL'*PGM'    WWBKEY
     C                     EXSR SRDBER
     C                     ENDIF
      *
      ** 'Identification code is not consistent'
      *
     C           PERR1     IFEQ '1'
     C                     MOVEL'IL00002' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN24
     C                     EXSR SRSMSG
     C                     ENDIF
      *
      ** 'Identification number isn't consistent'
      *
     C           PERR2     IFEQ '1'
     C                     MOVEL'IL00003' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN25
     C                     EXSR SRSMSG
     C                     ENDIF
      *
      ** End of validation
      *
     C                     ENDDO
      *
      ** If less then limit, force fields to blank
      *
     C                     ELSE
     C                     MOVE *BLANKS   #0IDCO
     C                     MOVE *BLANKS   #0IDEN
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRINZ - Routine to initialize screen fields with defaults
      *----------------------------------------------------------------
      *
     C           SRINZ     BEGSR
      *
     C                     MOVE WWCUTY    #0ORTY
     C                     MOVE *BLANKS   #0BETY
     C                     MOVE *BLANKS   #0OPCO
     C                     MOVE *BLANKS   #0COCO
     C                     MOVE *BLANKS   #0IDCO
     C                     MOVE *BLANKS   #0IDEN
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRFTOS - Routine to move file fields to screen fields
      *----------------------------------------------------------------
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVE CPORTY    #0ORTY
     C                     MOVE CPBETY    #0BETY
     C                     MOVE CPOPCO    #0OPCO
     C                     MOVELCPCOCO    #0COCO
     C                     MOVE CPIDCO    #0IDCO
     C                     MOVE CPIDEN    #0IDEN
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSTOF - Routine to move screen fields to file fields
      *----------------------------------------------------------------
      *
     C           SRSTOF    BEGSR
      *
      ** Move key field to file field
      *
     C                     MOVELKPREF     CPPREF
     C                     Z-ADDSQCQ      CPCQSQ
      *
      ** Move data fields to file fields
      *
     C                     MOVE #0ORTY    CPORTY
     C                     MOVE #0BETY    CPBETY
     C                     MOVE #0OPCO    CPOPCO
     C                     MOVEL#0COCO    CPCOCO
     C                     MOVE #0IDCO    CPIDCO
     C                     MOVE #0IDEN    CPIDEN
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * ZALIGN - Routine to validate and right-align numeric fields
      *----------------------------------------------------------------
      *
      /COPY ZSRSRC,ZALIGNZ2
      /EJECT
      *----------------------------------------------------------------
      * ZSEDIT - Routine to insert a decimal point and sign into a
      *          numeric field and to blank out leading zeros
      *          optionally inserting commas)
      *----------------------------------------------------------------
      *
      /EJECT
      *----------------------------------------------------------------
      * SRINIT - Routine to handle initial processing
      *----------------------------------------------------------------
      *
     C           SRINIT    BEGSR
      *
      ** Set up copyright parameter
      *
     C                     MOVEACPY@      CPY2@  80
      *
      ** Key list
      *
     C           KKEY1     KLIST
     C                     KFLD           KPREF
     C                     KFLD           KCQSQ
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           ACTION  1
     C                     PARM           PDATA
     C                     PARM           WWRTRN  7
      *
      ** The following parameter is needed from PTF16 on.
      ** Every PTF level below should omit this parameter
      *
     C                     PARM           SPARE 256
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN CPPREF    KPREF
     C                     MOVELPREF1     KPREF
      *
     C           *LIKE     DEFN CPCQSQ    KCQSQ
     C                     MOVELSQCQ      KCQSQ
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Setup file value used in database error during access to
      ** retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'FTCPX1PD'WWEXTF
      *
      ** Read Midas Run Date
      *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
      *
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANKS   @RTCD             7
     C                     PARM '*FIRST'  @OPTN             7
     C           SDBANK    PARM SDBANK    DSFDY
     C                     MOVELBJMRDT    SRUNA
      *
      ** Initialise non-display indicators
      *
     C                     MOVEL*OFF      *IN12
      *
      ** Initialise display mode indicators
      *
     C           ACTION    IFEQ 'I'
     C           ACTION    OREQ 'A'
     C                     MOVE '1'       *IN31
     C                     ELSE
     C                     MOVEL*OFF      *IN31
     C                     ENDIF
      *
      ** Initialise error indicators
      *
     C                     MOVEA'00000'   *IN,20
     C                     MOVEA'00000'   *IN,25
     C                     MOVEL*OFF      *IN75
      *
      ** Access ICD Modules
      *
     C                     CALL 'AOMMODR0'
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDMMOD    PARM SDMMOD    DSSDY
     C           @RTCD     IFNE *BLANKS
     C                     MOVEL'SDMMODPD'WWBFIL
     C                     MOVEL'6'       WWBKEY
     C                     Z-ADD03        WWBASE
     C                     EXSR SRDBER
     C                     ENDIF
      *
      ** Verify that ULX043 - IBLC 2002 is activated
      *
     C                     MOVE 'N'       ULX043  1
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*VERIFY' @OPTN
     C                     PARM 'ULX043'  @SARD   6
      *
     C           @RTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       ULX043
      *
      ** Access ICD for IBLC 2002
      *
     C           1         SETLLILICDRPD
     C                     READ ILICDRPD                 99
     C           *IN99     IFEQ *ON
     C                     MOVEL'ILICDRPD'WWBFIL
     C                     MOVEL'ICDR'    WWBKEY
     C                     Z-ADD04        WWBASE
     C                     EXSR SRDBER
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** Check if IBLC Returns module installed
      ** and if window must be displayed
      *
      *
      ** If #1PGM is 'FT0080' Bypass Except when Action is 'D'
      *
     C           #1PGM     IFEQ 'FT0080'
     C           ACTION    ANDEQ'D'
     C                     MOVE 'N'       ULX043
     C                     ENDIF
      *
     C           BGNWST    IFEQ 'Y'
     C           ULX043    ANDEQ'Y'
     C           AGRDNB    ANDGEICACTD
     C           BGNWST    OREQ 'Y'
     C           ULX043    ANDEQ'Y'
     C           AGRDNB    ANDGT10958
     C                     OPEN FTCPX1PD
     C                     MOVE '1'       *IN12
      *
     C                     MOVELSPARE     SP246 246
     C                     MOVE SP246     F12     1
      *
     C                     MOVE *BLANK    F12
     C                     MOVE F12       SP246
     C                     MOVELSP246     SPARE
      *
     C                     ELSE
      *
     C                     MOVEL*OFF      *IN12
      *
     C                     MOVELSPARE     SP246 246
     C                     MOVE SP246     F12     1
      *
     C           F12       IFEQ 'R'
     C                     MOVE 'USR0790' WWRTRN
     C                     MOVE *BLANK    F12
     C                     MOVE F12       SP246
     C                     MOVELSP246     SPARE
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** Check if window should be processed
      *
     C           *IN12     IFEQ *ON
      *
      ** Retreive payment details
      *
     C                     MOVE ##DRPT    PTYPE
     C                     MOVEL##DRPY    PLINE     P
     C                     Z-ADD##CQAM    WWAMNT 130
     C                     MOVEL##DRCY    WWCYCD  3
      *
     C                     CALL 'IL0421'
     C                     PARM WWCYCD    PCURR   3
     C                     PARM           PTYPE   1
     C                     PARM           PLINE  35
     C                     PARM 0         POPCL   10
      *
     C                     PARM *BLANKS   PACCD  10
     C                     PARM *BLANKS   PCUST   6
     C                     PARM *BLANKS   PFOUND  1
      *
      ** If a/c code found
      *
     C           PFOUND    IFEQ 'Y'
      *
     C                     MOVELPCUST     WWCUST  6
     C                     MOVELPACCD     WWACCD 10
      *
      ** Access customer informations
      *
     C           WWCUST    CHAINSDCUX1L0             87
     C           *IN87     IFEQ *ON
     C                     MOVEL'SDCUX1L0'WWBFIL
     C                     MOVELWWCUST    WWBKEY
     C                     Z-ADD4         WWBASE
     C                     EXSR SRDBER
     C                     ENDIF
      *
     C                     MOVE CUTYPE    WWCUTY  2
      *
     C                     ELSE
     C                     MOVEL*OFF      *IN12
     C                     ENDIF
      *
      ** Find IBLC settlement type
      *
     C           *IN12     IFEQ *ON
     C                     MOVEL##DRCY    XXCCY   3
     C                     MOVEL##DRPT    XXRT1T  1
     C                     MOVEL##DRPY    XXRT1  18
     C                     SELEC
     C           ##DRPT    WHEQ 'G'
     C           ##DRBR    IFNE '   '
     C                     MOVE ##DRBR    XXRT1
     C                     ELSE
     C                     MOVE BRCH      XXRT1
     C                     ENDIF
     C           ##DRPT    WHEQ 'P'
     C           ##DRBR    IFNE '   '
     C                     MOVEL##DRBR    FLD6    6
     C                     ELSE
     C                     MOVELBRCH      FLD6
     C                     ENDIF
     C                     MOVE FLD6      XXRT1
     C                     ENDSL
     C                     MOVEL*BLANK    XXRT2T  1
     C                     MOVEL*BLANK    XXRT2  35
      *
     C                     CALL 'IL0420'
     C                     PARM           XXCCY
     C                     PARM           XXRT1T
     C                     PARM           XXRT1
     C                     PARM           XXRT2T
     C                     PARM           XXRT2
     C                     PARM *BLANKS   XXSETT  1
     C                     PARM *BLANKS   XXBOAF  1
      *
      ** Check management for Outgoing payement
      *
     C                     MOVE 'CP'      WWTRAN
     C                     MOVE XXSETT    WWSETT
     C                     MOVE XXBOAF    WWBOAF  1
      *
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
** CTR Benef/ordering type
BRBOOROOARAO R O
**  WND OP. CODE management : M(andatory) or O(ptional)
INOR1MINOR2MINOR4MINOR5OINRO1MINRO5OINOR7M
OPRO1MOPRO2MOPRO4MOPRO5OOPOR1MOPOR5OOPRO7M
CCOR1MCCOR2MCCOR4MCCOR5OCCRO1MCCRO5OCCOR7M
CPRO1MCPRO2MCPRO4MCPRO5OCPOR1MCPOR5OCPRO7M
**  CPY@
(c) Finastra International Limited 2005
