     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
      *****************************************************************
      *                                                               *
      *  Midas - Funds Transfer Module                                *
      *                                                               *
      *  FTL300 - Validate SWIFT for SWIFT key                        *
      *                                                               *
      *  (C) Copyright MKI Limited 1999.                              *
      *                                                               *
      *  Last Amend No. MD31937            Date 13Jan15               *
      *  Last Amend No. AR856737           Date 13Sep11               *
      *  Last Amend No. EVB048 *Create     Date 03Nov99               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD31937  - Upgrade STP enhancements to BF Midas 2.1          *
      *  AR856737 Upgrade STP enhancement to Midas Plus level.        *
      *           Renamed QQDFAC field in SDBRCHPD                    *
      *  EVB048 - FT Validation for SWIFT key                         *
      *                                                               *
      *****************************************************************
     F*****FTSWKYL1IF  E           K        DISK
     FFTSWKYV0IF  E           K        DISK
     F                                              KINFDS INFDS1
     F                                              KINFSR SRFILE
      * RTV : FT SWIFT keys             Retrieval index
      *
      *****************************************************************
     E/EJECT
     E                    CPY@    1   1 80
      *
      *  Array containing Copyright statement
      ***************** FIRST COMPILE TIME ARRAY *********************
      *
      *
     E/COPY FTCPYSRC,SRERRE
      *
      *  Copysource for error processing
      *
     I/COPY FTCPYSRC,SRERRI
      *
      *  End of Program Error Processing copysource
      *
     IJBDTTM      DS
      * Job date/time
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      *
     IRUNDTA    E DSRUNDAT
      *
      * Get Rundate - Rundate  *
      *
     ISDMMOD    E DSSDMMODPD
      *
      * Modules Data Structure *
      *
     ISDBRCH    E DSSDBRCHPD
     I              QQDFAC                          QQDFA1                      AR856737
      *
      * Branch Data Structure *
      *
     ISDCUST    E DSSDCUSTPD
      *
      * Customer details      *
      *
     ISCSARD    E DSSCSARDPD                                              S01494
     I* SAR file details                                                  S01494
     I              LCD                             SCLCD                 S01494
      *
     IP1PARM      DS                            256
      *
      *  Define data structure used to pass parameters
      *
      * Booking branch
     I                                        1   3 I#BRCA
      * Information type  (S=SWIFT C=Customer)
     I                                        4   4 I#TYPE
      * SWIFT BIC
     I                                        5  15 I#SBIC
      * Customer
     I                                       16  21 I#CUST
      *
     IDSFDY     E DSDSFDY
      *
      * Data Structures used by Access Programs
      *
     IDSSDY     E DSDSSDY
      *
      * Data Structures used by Access Programs
      *
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           Incoming dat
      *
      *  Set up primary reference
      *
     C                     MOVELP1PARM    W0PREF
      *
      *  Set up subroutine stack name
      *
     C                     Z-ADD1         Q
     C                     MOVEL*BLANKS   @STK
     C                     MOVEL'MAIN  '  @STK,Q
      *================================================================
      *
      * Initialise
      *
     C           #FIRST    IFEQ *BLANKS
     C                     EXSR ZZINIT
     C                     MOVEL'Y'       #FIRST  1
     C                     END
      *
      * Validate SWIFT for SWIFT key
      *
     C                     EXSR SRVKEY
      *================================================================
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      * Terminate program
      *
     C                     RETRN
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRVKEY   : Validate SWIFT key                                *
      *                                                               *
      *  Called By: Main                                              *
      *                                                               *
      *  Calls    : SRERR - Report errors                             *
      *                                                               *
      *****************************************************************
     CSR         SRVKEY    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRVKEY'  @STK,Q
      *
      *  If customer passed
      *
     C           I#TYPE    IFEQ 'C'
      *
      *  Call to access pgm for Customer details
      *
     C                     CALL 'AOCUSTR0'             9090
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM I#CUST    @CNUM  10
     C                     PARM *BLANKS   @KYST   7
     C           SDCUST    PARM *BLANKS   DSSDY
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'AOCUSTR0'W0FILE           ***************
     C                     MOVEL'*CALL'   W0KEY            * DB ERROR 02 *
     C                     Z-ADD2         W0ERNB           ***************
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
     C                     ENDIF
      *
      *  Call to access pgm for Branch details
      *
     C                     CALL 'AOBRCHR0'             9090
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM I#BRCA    @BRCD  10
     C           SDBRCH    PARM *BLANKS   DSSDY
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'AOBRCHR0'W0FILE           ***************
     C                     MOVEL'*CALL'   W0KEY            * DB ERROR 02 *
     C                     Z-ADD3         W0ERNB           ***************
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     ENDIF
      *
      *  Set up key for access to database
      *
     C                     MOVELA8BTID    SWOKEY
     C           I#TYPE    IFEQ 'C'
     C                     MOVELBBCSID    SWCKEY
     C                     ELSE
     C                     MOVELI#SBIC    SWCKEY
     C                     ENDIF
      *
      *  If branch has not TID then exit
      *
     C           A8BTID    IFEQ *BLANKS
     C                     MOVEL'SWK0001' P0RTN
     C                     GOTO EXVKEY
     C                     ENDIF
      *
      *  If BIC is not connected to SWIFT
      *
     C                     MOVE SWCKEY    TMP1    1
     C           TMP1      IFEQ '1'
     C                     MOVEL'SWK0007' P0RTN
     C                     GOTO EXVKEY
     C                     ENDIF
      *
      *  Define key
      *
     C           SWKY      KLIST
     C                     KFLD           SWOKEY
     C                     KFLD           SWCKEY
      *
      *  Get match
      *
     C*****      SWKY      CHAIN@SWKYL1              90
     C           SWKY      CHAIN@SWKYV0              90
     C           *IN90     IFEQ *ON
      * General country
     C                     MOVE '  '      SWCKEY
     C*****      SWKY      CHAIN@SWKYL1              90
     C           SWKY      CHAIN@SWKYV0              90
     C           *IN90     IFEQ *ON
      * General SWIFT
     C                     MOVE '    '    SWCKEY
     C*****      SWKY      CHAIN@SWKYL1              90
     C           SWKY      CHAIN@SWKYV0              90
      * No match
     C           *IN90     IFEQ *ON
     C                     MOVEL'SWK0002' P0RTN
     C                     GOTO EXVKEY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
      *  Match found is it included ?
      *
     C                     SELEC
     C           SWAKEY    WHEQ '0'
     C                     MOVEL'       ' P0RTN
     C           SWAKEY    WHEQ '5'
     C                     MOVEL'SWK0004' P0RTN
     C                     OTHER
     C                     MOVEL'SWK0005' P0RTN
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C           EXVKEY    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q       50
      *
     CSR                   ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
      *
      *  Set up copyright parameter
      *
     C                     MOVEACPY@      MKI@   80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'ZZINIT'  @STK,Q
      *
     C                     MOVE *BLANK    P0RTN
      *
      * Initialise indicators for re-entry
      *
     C                     MOVE '0'       *IN
      *
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
      *
      * Update screen time
      *
     C                     TIME           ##TME   60
      *
      * Obtain default message file
      *
     C                     MOVEL'FTUSRMSG'ZADFMF 10
      *
      * USER: Initialise program
      * Retrieve Midas Date - R10 Standard Functions  *
      *
      * Get Rundate - Rundate  *
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    ##MRDT  7        Midas Run date
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      * Get modules information
      *
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           SDMMOD    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD14        W0ERNB           * DB ERROR 14 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *                                                                   S01494
      ** Access SAR details file to determine if EVB048 is switched ON    S01494
      *                                                                   S01494
     C                     CALL 'AOSARDR0'                                S01494
     C                     PARM *BLANKS   P@RTCD  7                       S01494
     C                     PARM '*VERIFY' P@OPTN  7                       S01494
     C                     PARM 'EVB048'  P@SARD  6                       S01494
     C           SCSARD    PARM SCSARD    DSFDY                           S01494
     C                     MOVE 'N'       EVB048  1                       S01494
     C                     MOVE '0'       *IN80                           S01494
      *                                                                   S01494
      ** If core feature is switched ON, set a variable field to          S01494
      ** condition the rest of the processing                             S01494
      *                                                                   S01494
     C           P@RTCD    IFEQ *BLANKS                                   S01494
     C                     MOVE 'Y'       EVB048                          S01494
     C                     MOVE '1'       *IN80                           S01494
     C                     ELSE                                           S01494
      *                                                                   S01494
      ** else, database error (return code other than *NRF)               S01494
      *                                                                   S01494
     C           P@RTCD    IFNE '*NRF   '                                 S01494
     C                     MOVEL'SCSARDPD'W0FILE                          S01494
     C                     MOVEL'*CALL'   W0KEY            ***************S01494
     C                     Z-ADD21        W0ERNB           * DB ERROR 21 *S01494
     C                     MOVEL'MEM5003' W0MSGD           ***************S01494
     C                     MOVEL'MIDAS  ' W0MSGF                          S01494
     C                     EXSR SRERR                                     S01494
     C                     END                                            S01494
     C                     END                                            S01494
      *================================================================
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
      *================================================================
      *
      * File and Program Error Processing
      *
     C/COPY FTCPYSRC,SRERRC
**  CPY@
(C) Copyright MKI Limited 1999.
