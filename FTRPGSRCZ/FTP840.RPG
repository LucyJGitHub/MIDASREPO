     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
      *****************************************************************
      *                                                               *
      *  Midas - Funds Transfer Module                                *
      *                                                               *
      *  FTP840 - Midas FT Display STP queues                         *
      *                                                               *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2004            *
      *                                                               *
      *  Last Amend No. MD31937            Date 13Jan15               *
      *  Last Amend No. AR856737           Date 13Sep11               *
      *  Last Amend No. ESL038  *Create    Date 01Oct2004             *
      * Midas Release 4 --------------- Base -------------------------*
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD31937  - Upgrade STP enhancements to BF Midas 2.1          *
      *  AR856737 - Upgrade STP enhancements to Midas Plus level.     *
      *  ESL038- ING STP Development                                  *
      *                                                               *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  Indicator usage                                              *
      *  ~~~~~~~~~~~~~~~                                              *
      *                                                               *
      *  03    Cancel and exit                                        *
      *  05    Refresh/Reload                                         *
      *  09    Insert                                                 *
      *  12    Cancel                                                 *
      *  27    Rollup                                                 *
      *  36    Redisplay screen                                       *
      *  75    Multibranching indicator                               *
      *  77    Allow F9                                               *
      *  78    Allow F12                                              *
      *  81    Sfldsp                                                 *
      *  82    Scan criteria                                          *
      *  90    Working indicator for errors                           *
      *  98,99  General error indicators                              *
      *                                                               *
     F*****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E   I N D E X                              *
      *                                                               *
      *   ZZINIT - Initialization                                     *
      *   BAIZSF - Initialize and load subfile page                   *
      *   CAEXFM - Display screen                                     *
      *   BBLDSF - Display next SFL page                              *
      *   MBFL#1 - Populate SFL fields                                *
      *   MC#1FN - SFL record function fields                         *
      *   DBPRSF - Process SFL records                                *
      *   SRMBIN - Check multibranch action                           *
      *   SRACTD - Check action code                                  *
      *   SRRCHG - Record changed                                     *
      *   MEIZ#2 - Initialize SFL control                             *
      *   DAPR## - Process screen input                               *
      *   ZXEXPG - Cancel and exit program                            *
      *   FBRQRL - Request SFL reload                                 *
      *                                                               *
      *****************************************************************
     FFTP840DFCF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR SRFILE
      * DSP: Display STP Queues        Display file
      *
     FFTSTPQV1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR SRFILE
      * RTV : Display STP Queues        Retrieval index
      *
     FFTSTPQV0IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      * UPD : STP Queues                Update index
      *
     E/EJECT
     E                    CPY@    1   1 80
     E*
     E*  Array containing Copyright statement
     E                    CMD@    1   1 80
      *
      *  Array of QCMDEXC commands
      *
     E                    EDT        80  1
      *
      *  Array of QCMDEXC command to edit
      *
     E*
     E/COPY MECPYSRC,SRERRE
      *
      *  Copysource for error processing
      *
     I/COPY MECPYSRC,SRERRI
      *
      *  End of Program Error Processing copysource
      *
      *
      /EJECT
      * Data structures:
     IJBDTTM      DS
      * Job date/time
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IRUNDTA    E DSRUNDAT
      *
      * Get Rundate - Rundate  *
      *
     IMMODDS    E DSSDMMODPD
      *
      * Modules Data Structure *
      *
     IDSFDY     E DSDSFDY
      *
      * Data Structures used by Access Programs
      *
     IDSSDY     E DSDSSDY
      *
      * Data Structures used by Access Programs
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I : MAP Action Code
     I                                        1   1 P1ACTC
     IP2PARM      DS                             20
      * RCD: Passed Key                Retrieval index
      * I : MAP STP Queue name
     I                                        1  20 P2STPQ
     IO2PARM      DS                             20
      * KEY: STP Queue names           Retrieval index
      * I : MAP STP Queue name
     I                                        1  20 O2STPQ
     I            DS
     I                                        1 132 OAMSDA
      * Message data for 'Invalid Action code (FT1)'
      * *SFLSEL
     I                                        1   1 ZA0001
      *
     IW0DATA      DS                            256
      *
      *  Define data structure used to pass parameters
      *
     I                                        1   3 B#BRCA
     I                                        4   4 O#ACTD
     I                                        5  14 O#CPGM
      *
     IDSMTR       DS
      *
      *  Define fields for message transalation
      *
     I                                        1 132 #MSDTA
     I                                      133 264 #MSTX1
     I#MSTX2      DS
     I                                        1 256 #MSTXA
     I                                      257 512 #MSTXB
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1ACTC    PARM           WP0001  1        Action Code
     C                     PARM           P2PARM           RCD: STP Q
      *****************************************************************
      * Initialise
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
     C   12                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialise subfile control
      * DSPFIL: Init. Subfile Ctl - R10 Copy source templates  * 
     C           KPOS1     KLIST
     C                     KFLD           SQSTPQ           STP Queue name
      * Setup key
     C                     MOVEL#2STPQ    SQSTPQ           STP Queue name
      *
     C           KPOS1     SETLL@STPQV1
     C                     READ @STPQV1                8782*82=EOF
      *
      * Save previous selector values
     C           *LIKE     DEFN #2STPQ    WZSTPQ
     C                     MOVEL#2STPQ    WZSTPQ           STP Queue name
     C           *LIKE     DEFN #SSTPQ    WSSTPQ
     C                     MOVEL#SSTPQ    WSSTPQ           STP Queue
     C           *LIKE     DEFN #SDESC    WSDESC
     C                     MOVEL#SDESC    WSDESC           Description
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@STPQV1                  90*
     C  N82                READ @STPQV1                  90*
      *
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,36
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  50
      *................................................................
     C           #SSTPQ    IFNE *BLANKS
     C           SQSTPQ    ANDNE#SSTPQ
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   20        V#      30
     C           1         SUBST#SSTPQ:V# ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDV#        W#      30
     C                     END
     C                     ENDDO
     C                     END
      *
     C           #SDESC    IFNE *BLANKS
     C           SQDESC    ANDNE#SDESC
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   30        U#      30
     C           1         SUBST#SDESC:U# ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDU#        Z#      30
     C                     END
     C                     ENDDO
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFPG
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #SSTPQ    IFNE *BLANKS
     C           SQSTPQ    ANDNE#SSTPQ
      *
      * Scan for string
      *
     C           #SSTPQ:W# SCAN SQSTPQ:1                 90
     C           *IN90     IFEQ '0'
     C                     GOTO BB020
     C                     END
     C                     END
      *
     C           #SDESC    IFNE *BLANKS
     C           SQDESC    ANDNE#SDESC
      *
      * Scan for string
      *
     C           #SDESC:Z# SCAN SQDESC:1                 90
     C           *IN90     IFEQ '0'
     C                     GOTO BB020
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     EXSR MC#1FN
     C                     MOVEL'Y'       W0RSL   1
      * USER: Initialise subfile record from DBF record
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Output to subfile
     C                     ADD  1         ##RR       81    *
     C                     ADD  1         ##RROK
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @STPQV1                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
     C           ##RRMX    ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * CALC: Subfile control function fields
      * Change of position specified
     C           WZSTPQ    CASNE#2STPQ    FBRQRL
     C           WSSTPQ    CASNE#SSTPQ    FBRQRL
     C           WSDESC    CASNE#SDESC    FBRQRL
     C                     END
      * USER: Process subfile control (Pre-confirm)
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
      * USER: Final processing (Pre-confirm)
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *
      * CASE: CTL.*CMD key is CF09
      *
      *
      * Call add processing
      *
     C           *IN09     IFEQ '1'                        *IF
      *
      * Check user has access to add
      *
     C                     MOVEL'I'       #1SEL
     C  NU1                EXSR SRMBIN
      *
      * User does not have access
      *
     C           *IN99     IFEQ '1'                        *IF
     C                     GOTO DAEXIT
     C                     END                             *FI
      *
      * Set up parameters
      *
     C                     CLEARO2PARM
     C           P1ACTC    IFEQ 'S'
     C                     MOVEL#2STPQ    O2STPQ
     C                     END
      *
     C                     CALL 'FTP850'               9090
     C                     PARM           P0RTN   7
     C                     PARM 'I'       WP0001  1        Action Code
     C                     PARM           O2PARM           KEY: Incoming M
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'MIN0019' P0RTN
     C                     END                             *FI
      *
      *  Depending on return code - exit or re-display screen
      *
     C                     SELEC                           *SL
      *
      *  F12 pressed - redisplay subfile
      *
     C           P0RTN     WHEQ 'USR0790'                  *IF
     C                     MOVEL*BLANKS   P0RTN            *Return code
      *
      * Send message 'F12 taken from previous screen'
      *
     C                     MOVEL'MIN0001' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO DAEXIT
      *
      *  F3 pressed - exit program
      *
     C           P0RTN     WHEQ 'Y2U9999'                  *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
      *
      *  If error redisplay
      *
     C           P0RTN     WHNE *BLANKS                    *IF
      *
      * Re-display screen
      *
     C                     MOVEL'MIN0019' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DAEXIT
      *
      *  New selection - redisplay subfile
      *
     C           P0RTN     WHEQ *BLANKS                    *IF
     C                     MOVEL'Y'       W0DCF
     C                     GOTO DAEXIT
     C                     ENDSL                           *LS
     C                     ENDIF                           *FI
      *
      * USER: Process command keys
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                     SETOF                         50
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
     C                     SETON                         50
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRACTD - Check Action code                                    *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR         SRACTD    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRACTD'  @STK,Q
      *
      * Check all valid actions
      *
      *
      * CASE: RCD.*SFLSEL is not valid
      *
     C           #1SEL     IFEQ ' '                        *IF
     C                     GOTO EXACTD
     C                     END                             *FI
      * If called from window
     C           #1SEL     IFNE 'E'                        *IF
     C           #1SEL     ANDNE'1'                        *IF
     C           P1ACTC    ANDEQ'S'                        *IF
      * If Enquiry option
     C           #1SEL     ORNE 'E'                        *IF
     C           P1ACTC    ANDEQ'E'                        *IF
      * If Update option
     C           #1SEL     ORNE 'E'                        *IF
     C           #1SEL     ANDNE'A'                        *IF
     C           #1SEL     ANDNE'D'                        *IF
     C           #1SEL     ANDNE'R'                        *IF
     C           P1ACTC    ANDEQ'A'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'Invalid Action code'
     C                     MOVEL'MIN0008' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO EXACTD
     C                     END                             *FI
      *
      * Check multi-branch actions
      *
     C  NU1                EXSR SRMBIN
      *
      *  Unwind subroutine stack name
      *
     C           EXACTD    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRMBIN - Check Multi-branch actions                           *
     C*                                                               *
     C*                                                               *
     C* Called by: SRACTD                                             *
     C*                                                               *
      *================================================================
     CSR         SRMBIN    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRMBIN'  @STK,Q
      *
      * Set up parameters
      *
     C                     CLEARW0DATA
     C                     MOVEL*BLANKS   B#BRCA
     C                     MOVEL#1SEL     O#ACTD
     C                     MOVEL##PGM     O#CPGM
      *
      * If select and action is 1 then set to E
      *
     C           P1ACTC    IFEQ 'S'                        *IF
     C           #1SEL     ANDEQ'1'
     C                     MOVEL'E'       O#ACTD
     C                     ENDIF                           *FI
      *
      * Check all valid actions
      *
     C                     CALL 'ME1190'               9090
     C                     PARM *BLANKS   P0RTN   7
     C                     PARM '*ACTCODE'W0ACT   8
     C                     PARM           W0DATA
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'MIN0019' P0RTN
     C                     SETON                     9836  *
     C                     END                             *FI
      *
      * Invalid action
      *
     C           P0RTN     IFNE *BLANKS                    *IF
     C           #1SEL     IFNE 'I'
     C                     SETON                     9836  *
     C                     ELSE                            *FI
     C                     SETON                     99    *
     C                     END                             *FI
     C                     END                             *FI
      *
      *  Unwind subroutine stack name
      *
     C           EXMBIN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRRCHG - Record Changed                                       *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR         SRRCHG    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRRCHG'  @STK,Q
      *
      * Set up key from subfile record and chain to record
      *
     C           KYTRD0    KLIST
     C                     KFLD           #1STPQ           STP Queue name
      *
      * Only chain if record if live #1RECI is 'D' or blank
      *
     C           #1RECI    IFEQ 'D'
     C           #1RECI    OREQ ' '
     C           KYTRD0    CHAIN@STPQV0              90    *
      *
      * Record not found - database error
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'FTSTPQV0'W0FILE
     C                     MOVEL#1STPQ    W0KEY     P
     C                     Z-ADD4         W0ERNB
     C                     MOVEL'MEM5004' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
     C                     ELSE
     C                     MOVEL#1RECI    SQRECI
     C                     END
      *
      *  If action code is not blank then send messge record has been
      *  deleted if RECI not equal to 'D' or blanks
      *
     C           #1SEL     IFNE *BLANKS
     C           SQRECI    IFNE 'D'
     C           SQRECI    ANDNE*BLANKS
      * Send message 'Invalid Action code - record deleted'
     C                     MOVEL'MIN0216' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
     C                     END
     C                     GOTO EXRCHG
     C                     END
      *
      *  Reload subfile record
      *
     C                     EXSR MBFL#1
     C                     EXSR MC#1FN
      *
      *  Unwind subroutine stack name
      *
     C           EXRCHG    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,36
     C                     MOVEL*BLANKS   P0RTN
     C                     SETOF                     98    *
     C                     EXSR MC#1FN
      * USER: Process subfile record (Pre-confirm)
      *
      * Check action code is valid, if invalid exit.
      *
     C                     EXSR SRACTD
      *
      * Check record is active
      *
     C                     EXSR SRRCHG
      *
     C           *IN98     IFEQ '1'
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
     C                     END                             *FI
      *
      * Call option
      *
     C                     SELEC
      *
      * Item selected
      *
     C           #1SEL     WHEQ '1'
     C                     MOVEL#1STPQ    P2STPQ
     C                     MOVEL'PTC0027' P0RTN            *Return code
     C                     EXSR ZXEXPG
      *
      * Reset queue - only if on demand allowed
      *
     C           #1SEL     WHEQ 'R'
      *
     C           #1RSTD    IFNE 'Y'
     C                     MOVEL'PTC0040' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
     C                     ENDIF
      *
      * Call reset program
      *
     C                     MOVEL#1STPQ    O2STPQ
      *
     C                     CALL 'FTCP980'
     C                     PARM           O2STPQ           STP Queue name
     C                     PARM 'I'       O3RUN   1        Run type
      *
      * Amend, Delete and Enquire
      *
     C           #1SEL     WHEQ 'A'
     C           #1SEL     OREQ 'D'
     C           #1SEL     OREQ 'E'
      *
      * Set up parameters
      *
     C                     MOVEL#1STPQ    O2STPQ
      *
     C                     CALL 'FTP850'               9090
     C                     PARM           P0RTN   7
     C                     PARM #1SEL     WP0001  1        Action Code
     C                     PARM           O2PARM           KEY: Incoming M
      *
      * If in error set up return code
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'MIN0019' P0RTN
     C                     END
      *
     C                     ENDSL
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'MIN0019' P0RTN
     C                     END                             *FI
      *
      *  Depending on return code - exit or re-display screen
      *
     C                     SELEC                           *SL
      *
      *  F12 pressed - redisplay subfile
      *
     C           P0RTN     WHEQ 'USR0790'                  *IF
      *
      * Send message 'F12 taken from previous screen'
      *
     C                     MOVEL'MIN0015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
      *
      *  F3 pressed - exit program
      *
     C           P0RTN     WHEQ 'Y2U9999'                  *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
      *
      *  If error redisplay
      *
     C           P0RTN     WHNE *BLANKS                    *IF
      *
      * Re-display screen
      *
     C                     MOVEL'MIN0019' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCENDT                     *QUIT
      *
      *  Function completed normally
      *
     C           P0RTN     WHEQ *BLANKS                    *IF
     C                     ENDSL                           *LS
      *
     C           DCENDT    TAG
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *
      *  If option did not end in error, F12 or F3 then update record
      *  with changes
      *
     C           P0RTN     IFEQ *BLANKS
     C           *IN98     ANDEQ'0'
     C                     EXSR SRRCHG
     C                     END
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @STPQV1  fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELSQRECI    #1RECI           Record Identifi
     C                     MOVELSQAJOB    #1AJOB           Job name
     C                     MOVELSQAUSR    #1AUSR           User name
     C                     Z-ADDSQATIM    #1ATIM           Action Time
     C                     MOVELSQARDT    #1ARDT           Action Date
     C                     MOVELSQAACT    #1AACT           Action Type
     C                     Z-ADDSQRDNB    #1RDNB           Run day number
     C                     MOVELSQSTPQ    #1STPQ
     C                     MOVELSQDESC    #1DESC
     C                     MOVELSQRSTO    #1RSTO
     C                     MOVELSQRSTD    #1RSTD
      *
      * If deleted stop subfile selection and place deleted in
      * access point
      *
     C           #1RECI    IFEQ '*'                        Record Identifi
     C                     MOVEL*BLANKS   #1DESC
     C                     MOVELU#DELT    #1DESC
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     GOTO MBEXIT
     C                     END
      *
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MC#1FN    BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
     CSR         MCEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
      *
      * Initialise header and footer fields
      *
     C                     MOVEL*BLANK    ##ONAM           Option Name
     C                     MOVEL*BLANK    ##CMD1           CMD Line 1
     C                     MOVEL*BLANK    ##CMD2           CMD Line 2
      *
     C                     MOVELP1ACTC    #PACTC           Action Code
     C                     MOVEL*BLANK    #2STPQ           STP Queue name
      *
      * Fill Command lines and narrative text from messages
      *
     C                     SELEC
      *
      * Enquiry screen
      *
     C           P1ACTC    WHEQ 'E'
      *
      * Option Name
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0028' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'MIN0045' #MSGID
     C                     PARM 'MEMSG'   #MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'MIN0315' #MSGID
     C                     PARM 'MEMSG'   #MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD2
      *
      * Update screen
      *
     C           P1ACTC    WHEQ 'A'
      *
      * Option Name
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0029' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0041' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0031' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD2
      *
      * Allow function key 9
      *
     C                     MOVEL'1'       *IN77
      *
      * Selection screen
      *
     C           P1ACTC    WHEQ 'S'
      *
      * Option Name
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0030' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##ONAM
      *
      * Action codes
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'MIN0051' #MSGID
     C                     PARM 'MEMSG'   #MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD1
      *
      * Function keys
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'PTC0018' #MSGID
     C                     PARM 'XXUSRMSG'#MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C                     MOVEL#MSTX1    ##CMD2
      *
      * Allow function keys 12
      *
     C                     MOVEL'1'       *IN78
      *
     C                     ENDSL
      *
      * Get deleted text
      *
     C                     CALL 'MEC1150'              9090
     C                     PARM 'MIN0214' #MSGID
     C                     PARM 'MEMSG'   #MSGF
     C                     PARM           #MSDTA
     C                     PARM *BLANKS   #MSTX1
     C                     PARM *BLANKS   #MSTX2
      *
     C           *LIKE     DEFN #1DESC    U#DELT
     C                     MOVEL#MSTX1    U#DELT
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      *
      * CASE: CTL.*CMD key is CF03
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     END                             *FI
      * CASE: CTL.*CMD key is CF12
     C           *IN12     IFEQ '1'                        *IF
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     END                             *FI
      *
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C                     MOVEL'MEMSG   'ZADFMF 10
     C                     Z-ADD10        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
     C                     Z-ADD0         Q       50
     C                     MOVEA'00'      *IN,77
     C*
     C*  Set up copyright parameter
     C*
     C                     MOVEACPY@      BIS@   80
     C*
     C* Get Rundate - Rundate  *
     C*
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    ##MRDT  7        Midas Run date
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      * Set multi-branch indicator
      *
     C           WUMBIN    IFNE 'Y'                        Multi Branched ?
     C                     MOVEL'0'       *IN75
     C                     ELSE
     C                     MOVEL'1'       *IN75
     C                     END
     C*
     C* Get modules information
     C*
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           * DB ERROR 01 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Open file FTSTPQV1
      *
     C           FIL001    IFEQ *BLANKS
      *
      *  Override file FTSTPQV1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'FTSTPQV1'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD2         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN FTSTPQV1
     C                     MOVEL'Y'       FIL001  1
     C                     END
      *
      * Open file FTSTPQV0
      *
     C           FIL002    IFEQ *BLANKS
      *
      *  Override file FTSTPQV0 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'FTSTPQV0'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD3         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN FTSTPQV0
     C                     MOVEL'Y'       FIL002  1
     C                     END
      *
      * Initialise subfile control
     C                     EXSR MEIZ#2
      * Move input parameters to key fields for positioning DBF
     C                     MOVELP2STPQ    #2STPQ
      *
      *================================================================
     CSR         ZZEXIT    ENDSR
     C*
     C* File and Program Error Processing
     C*
     C/COPY MECPYSRC,SRERRC
**  CPY@
(c) Misys International Banking Systems Ltd. 2004
** Command Array
OVRDBF     FILE(XXXXXXXXXX) SHARE(*NO) SECURE(*YES)
