     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FX Revalue daily positions')
      ****************************************************************
      *                                                              *
      *  Midas - FX Dealer Module                                     *
      *                                                              *
      *     FX0590    - REVALUE DAILY POSITIONS                      *
      *                                                              *
      *     Function: This program updates the revaluation history   *
      *     (I/C)     file (FXREVCPP) with explicit outright rates   *
      *               derived from the spot rate/forward points;     *
      *               and also revalues existing live trades using   *
      *               current market rates.                          *
      *                                                              *
      *     Called by: FXC0590 - Revalue daily positions.            *
      *                                                              *
      *     Calls    : none                                          *
      *                                                              *
      *  (c) Finastra International Limited 2001                      *
      *                                                              *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD031             Date 10Apr06               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4.01.02 ----------------------------------------*
      *                 193092             Date 18Apr02               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 S01319             Date 04Sep91               *
      *                 S01277             Date 22Apr91               *
      *          AMEND NO. S01194             DATE   02JAN90         *
      *          AMEND NO. E19660             DATE   05/10/89        *
      *          AMEND NO. E13898             DATE   01/07/88        *
      *          AMEND NO. E13129             DATE   10/05/88        *
      *          AMEND NO. E12322             DATE   08/03/88        *
      *          AMEND NO. S01136             DATE   17/01/88        *
      *          AMEND NO. S01136             DATE   11/12/87        *
      *          AMEND NO. S01136             DATE   09/12/87        *
      *                                                              *
      ****************************************************************
      *  MD046248 - Finastra Rebranding                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  193092 - PGM Tried to divide by zero when H/L spot rate not  *
      *           defined to currency. Fix only amended FX0680, but   *
      *           the same problem is encountered in this program.    *
      *     S01319 - Remove redundant processing                     *
      *                                                              *
      *     S01277 - TREASURY MANAGEMENT CROSS CCY POSITION          *
      *              RECOMPILE ONLY                                  *
      *                                                              *
      *     S01194 - STANDING DATA CHANGES FOR RELEASE 10            *
      *                                                              *
      *     E19660 - Setup the date value for @@VDAT in the          *
      *              subroutine ZA0640, so that it can calculate     *
      *              the outright exchange rate for a given Value    *
      *              date which do not have a rate on file           *
      *                                                              *
      *     E13898 - Processing for dates before run date incorrect  *    SS1262
      *              and unnecessary when calculating P/L in ZA0640  *    SS1262
      *                                                              *
      *     AMEND NO. E13129 - 10/05/88                              *
      *     Access LF/FXRHTNLL before update of PF/FXRHTNPP          *
      *                                                              *
      *     AMEND NO. E12322 - 08/03/88                              *
      *     Clear all currency records in LF/FXEPOSLL to prevent     *
      *     previous deals being displayed for daily summaries       *
      *                                                              *
      *     AMEND NO. S01136 - 17/01/88                              *
      *     Fix to 11/12 fix. Key to FXREVHLL is currency & period   *
      *     date only ; key used by previous fix has too many fields.*
      *                                                              *
      *     AMEND NO. S01136 - 11/12/87                              *
      *               REVALUATION HISTORY FILE KEY CHANGE            *
      *                                                              *
      *     AMEND NO. S01136                                         *
      *               DATE ARRAY INITIALISED INCORRECTLY             *
      *                                                              *
      ****************************************************************
      /EJECT
      ****************************************************************
      *
      * ID F C  L    FUNCTION OF INDICATORS
      *
      ****** 60    Chain fail to PF/TABTB10                               S01194
      ****** 61    Chain fail to PF/TABTB11                               S01194
     C*******62****End*of*file*on*LF/FDINSTLL*****************************S01319
      *      63    End of file on file LF/FDCCYPLL
      *      64    End of file on file LF/FXFWDTLL
      *      65    End of file on LF/FXREVCLL
      *      66    Chain fail to LF/FXREVHLL
      ****** 67    Chain fail to LF/FDCCYTLL                              S01194
      *      68    Chain fail to LF/FDCCYPLL
      *      69    Chain fail to LF/FDEPOSLL
      *      80-89 Common Subroutine indicators
      *
      ****************************************************************
      /EJECT
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*FDINSTLLIF**E*******************DISK*********KINFSR**PSSR**********S01319
     FFXREVCLLUF  E                    DISK         KINFSR *PSSR
     F**FDICDRLLIF  E           K        DISK         KINFSR *PSSR        S01194
     F*****       TABTB20F                          KIGNORE               S01194
     F**FDCCYTLLIF  E           K        DISK         KINFSR *PSSR        S01194
     FFDCCYPLLIF  E           K        DISK         KINFSR *PSSR
     FFXFWDTLLIF  E           K        DISK         KINFSR *PSSR
     F**REVHLLUF  E           K        DISK         KINFSR *PSSR A        S01136
     FFXREVHLLIF  E           K        DISK         KINFSR *PSSR          S01136
     FFXRHTNLLUF  E           K        DISK         KINFSR *PSSR A        S01136
     F            FXREVHP0                          KRENAMEFXRHTNP0       S01136
     FFXEPOSLLUF  E           K        DISK         KINFSR *PSSR
      *
     E                    CPY@    1   1 80                                S01194
      *
     E                    @PWR    1   9  9 0             Powers of ten 0-8
      *
      **  ARRAY FOR SR. ZA0620 - DECIMAL PLACES CORRECTION
      **  ( ie 1000  100  10  1  .1  .01  .001)
     E                    @DP     7   7  7 3
      *
      **  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0
      *
      **  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0
      *
      **  Array of scaling factors - USED IN SR. ZA1150,ZA1160
     E                    @SF     1  10 10 0
     E*
      *
      *
      **  ARRAY FOR PERIOD DESCRIPTION
     E                    @J     12  12  4
      *
      ** ARRAY FOR PERIOD LENGTH
     E                    @PD    12  12  1 0
      *
      ** ARRAY FOR PERIOD TYPES
     E                    @TP    12  12  1
      /EJECT
     I****@KEY        DS                             12                   S01194
      ****                                                                S01194
      ***Data structure for the key to LF/FDCCYTLL & LF/FDICDRLL          S01194
     I*****                                   1   2 @KEY1                 S01194
     I*****                                   9  11 @CCYKY                S01194
     I*****                                  12  12 @KEY2                 S01194
     I*****                                  11  12 @KEY3                 S01194
     I           UDS
      *
      ** local data area for data base error information
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     I            DS
      *
      **  DATA STRUCTURE FOR SR. ZA0680 - DATE INPUT TO SUBROUTINE
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I            DS
      *
      ** data structure to setup a 8N date from its separate bits
     I                                        1   80@DATE
     I                                        1   40@YYYY
     I                                        5   60@MM
     I                                        7   80@DD
     I@XPDS       DS
      *
      ** data structure to output key of LF/FDCCYPLL in DB errors
     I                                        1   3 CCY
     I                                        4   4 @TPRD
     I                                        5   60@PRD
     IPSDS       SDS
      *
      ** program status data structure
     I                                      244 253 @JOB
     I                                      254 263 @USER
      *
      ** data structure to set up update dates
     I@RUNA       DS
     I                                        1   20FVDLUP
     I                                        3   5 FVMLUP
     I                                        6   70FVYLUP
     I                                        1   20FODLUP
     I                                        3   5 FOMLUP
     I                                        6   70FOYLUP
     I                                        1   20FUDLUP
     I                                        3   5 FUMLUP
     I                                        6   70FUYLUP
      *
     ISDBANK    E DSSDBANKPD                                              S01194
      ** BANK DETAILS ACCESSED VIA ACCESS PROGRAM                         S01194
      *                                                                   S01194
     ISDCURR    E DSSDCURRPD                                              S01194
      ** CURRENCY DETAILS ACCESSED VIA ACCESS PROGRAM                     S01194
      *                                                                   S01194
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     I*                                                                   S01319
     ISDTRMA    E DSSDTRMAPD                                              S01319
     I** EXTERNAL DS FOR TREASURY MANAGEMENT DETAILS                      S01319
     I*                                                                   S01319
     IDSFDY     E DSDSFDY                                                 S01194
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE                S01194
     I*                                                                   S01117
     IDSSDY     E DSDSSDY                                                 S01194
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE                S01194
      *                                                                   S01194
      /EJECT
      *****************************************************************
      *                                                               *
      *  This program processes as follows:                           *
      *                                                               *
      *  1) For each peroid for each currency, calculates the high &  *
      *     low outright rates and updates or generates the           *
      *     revaluation history record.                               *
      *                                                               *
      *  2) For each daily forward book record, calculates outright   *
      *     P/L for the net positions, accumulates for the currency   *
      *     and updates the Bank's Equivalents Positions and Profits  *
      *     file record for the currency.                             *
      *                                                               *
      *****************************************************************
      *
      ** perform initialisation processing
     C                     EXSR #A
      *
      ** perform main processing
     C                     EXSR #B
      *
      ** perform termination processing
     C                     EXSR #C
      *
     C           ENDPGM    TAG                             ENDPGM
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Index to subroutines:                                        *
      *                                                               *
      *                                                               *
      *  1)   #BAA - calculates the revaluation history record data   *
      *  2)   #BBA - accumulates the P/L figures                      *
      *  3) ZA0620 - calculates the revaluation profit and loss       *
      *  4) ZA0640 - obtain forward outright rate                     *
      *  5) ZA0680 - convert YYYYMMDD to MIDAS say number             *
      *  6) ZA1150 - CONVERT RATE TO SCALED RATE                      *
      *  7) ZA1160 - CONVERT SCALED RATE TO RATE                      :
      *  8)    #BA - controls the revaluation for each currency       *
      *  9)    #BB - controls the accumlation of P/L for each currency*
      * 10)     #B - controls the routines #BA & #BB                  *
      * 11)     #A - initailization                                   *
      * 12)     #C - termination                                      *
      * 13)  *PSSR - program or file error subroutine                 *
      * 14)   #BBB - zeroise short/fwd p&l                                E12322
      *                                                               *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #BAA                                              *
      *                                                               *
      *     This subroutine will update or create the revaluation     *
      *     history record for file LF/FXRHTNLL, but only if the      *   S01136
      *     period type is not 'D'. Then it will read the next live   *
      *     record on LF/FDCCYPLL.                                    *
      *                                                               *
      *     Called by : #BA                                           *
      *                                                               *
      *     Calls     : ZA1150                                        *
      *               : ZA1160
      *                                                               *
      *     Uses      : @LORT  - low outright rate                    *
      *                 @HIRT  - high outright rate                   *
      *                 @IDX   - array index
      *                 @@SXP1 - FIRST CCY EXPONENT TO ZA1150         *
      *                 @@SXP2 - SECOND CCY EXPONENT TO ZA1150        *
      *                 @@INRT - INPUT RATE TO BE SCALED TO ZA1150    *
      *                 @@FCMD - FIRST CCY M/D INDICATOR TO ZA1150    *
      *                 @@SCRT - OUTPUT RATE FROM ZA1150              *
      *                 @@SEXP - SCALING EXPONENT TO ZA1160           *
      *                 @@USRT - OUTPUT RATE FROM ZA1160              *
      *                                                               *
      *****************************************************************
      *
     C           #BAA      BEGSR
      *
      ** if the period type is 'D' no processing is done for this
      ** record.
     C           XPTPRD    IFNE 'D'                        B1
      *
      ** attempt to access the record on LF/FXREVHLL for this period.
     C********** @REVKY    CHAINFXREVHLL             66    *1             S01136
     C********** @REVHK    CHAINFXREVHLL             66    *1      S01136 E13129
     C           @REVKY    CHAINFXRHTNLL             66    *1             E13129
      *
      ** set array index to the correct power in the array
      *
     C*****      NQDP      ADD  1         @IDX    30       *1             S01194
     C           A6NQDP    ADD  1         @IDX    30       *1             S01194
      *
      ** SCALE THE HIGH SPOT RATE SR. ZA1150
     C*****                Z-ADDSEXP      @@SXP1           *1             S01194
     C                     Z-ADDA6SCEX    @@SXP1           *1             S01194
     C                     Z-ADD0         @@SXP2           *1
     C*****                Z-ADDHGSP      @@INRT           *1             S01194
     C                     Z-ADDA6HSRT    @@INRT           *1             S01194
     C                     MOVE 'M'       @@FCMD           *1
     C                     EXSR ZA1150                     *1
      *
      ** IF ERROR OCCURS
     C           @@ERCD    IFEQ 1                          B*2
     C           @@ERCD    OREQ 3                          X*2
     C**********           MOVEL'FDCCYTLL'DBFILE           ***************S01194
     C**********           MOVEL'HISP'    DBKEY            * DB ERROR 11 *S01194
     C                     MOVEL'SDCURRPD'DBFILE           ***************S01194
     C                     MOVELA6HSRT    DBKEY            * DB ERROR 11 *S01194
     C                     MOVE '011'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     EXSR *PSSR                      **2            S01194
     C                     END                             E*2
      *
     C           *INU7     CABEQ'1'       #BAA9            *1
      *
      *
      ** calculate the high outright rate
     C           XPHIPT    DIV  @PWR,@IDX @HIRT  138H      *1
     C*********  HISP      ADD  @HIRT     @HIRT            *1
     C           @@SCRT    ADD  @HIRT     @HIRT            *1
      *
      ** DE-SCALE THE CALCULATED RATE SR. ZA1160
     C*****                Z-ADDSEXP      @@SEXP           *1             S01194
     C                     Z-ADDA6SCEX    @@SEXP           *1             S01194
     C                     Z-ADD@HIRT     @@INRT           *1
     C                     EXSR ZA1160                     *1
     C*
     C**************       Z-ADD@HIRT     FVHORT           *1
     C                     Z-ADD@@USRT    FVHORT           *1
      *
      ** SCALE THE LOW SPOT RATE SR. ZA1150
     C*****                Z-ADDSEXP      @@SXP1           *1             S01194
     C                     Z-ADDA6SCEX    @@SXP1           *1             S01194
     C                     Z-ADD0         @@SXP2           *1
     C*****                Z-ADDLOSP      @@INRT           *1             S01194
     C                     Z-ADDA6LSPR    @@INRT           *1             S01194
     C                     MOVE 'M'       @@FCMD           *1
     C                     EXSR ZA1150                     *1
      *
      ** IF ERROR OCCURS
     C           @@ERCD    IFEQ 1                          B*2
     C           @@ERCD    OREQ 3                          **2
     C********             MOVEL'FDCCYTLL'DBFILE           ***************S01194
     C********             MOVEL'LOSP'    DBKEY            * DB ERROR 12 *S01194
     C                     MOVEL'SDCURRPD'DBFILE           ***************S01194
     C                     MOVELA6LSPR    DBKEY            * DB ERROR 12 *S01194
     C                     MOVE '012'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     EXSR *PSSR                      **2            S01194
     C                     END                             E*2
      *
     C           *INU7     CABEQ'1'       #BAA9            *1
      *
      ** calculate the low outright rate
     C           XPLOPT    DIV  @PWR,@IDX @LORT  138H      *1
     C*********  LOSP      ADD  @LORT     @LORT            *1
     C           @@SCRT    ADD  @LORT     @LORT            *1
     C                     Z-ADD@LORT     FVLORT           *1
      *
      ** DE-SCALE THE CALCULATED RATE SR. ZA1160
     C*****                Z-ADDSEXP      @@SEXP           *1             S01194
     C                     Z-ADDA6SCEX    @@SEXP           *1             S01194
     C                     Z-ADD@LORT     @@INRT           *1
     C                     EXSR ZA1160                     *1
     C*
     C************         Z-ADD @LORT    FVLORT           *1
     C                     Z-ADD@@USRT    FVLORT           *1
      *
      ** set up fields for output to LF/FXRHTNLL                          S01136
     C                     TIME           FVTLUP           *1
     C*****                MOVE RUNA      @RUNA            *1             S01194
     C*****                Z-ADDRUND      FVLCD            *1             S01194
     C                     MOVE BJMRDT    @RUNA            *1             S01194
     C                     Z-ADDBJRDNB    FVLCD            *1             S01194
     C                     MOVEL@USER     FVLUID           *1
      *
      ** if the record was found, then update it else create a new
      ** record
     C           *IN66     IFEQ '0'                        B*2
     C                     MOVE 'A'       FVCHTP           **2
     C                     Z-ADDXPPRDD    FVPRDT           **2            S01136
     C****                 UPDATFXREVHP0                   **2            S01136
     C                     UPDATFXRHTNP0                   **2            S01136
     C                     ELSE                            X*2
     C                     MOVE 'FV'      FVRCID           **2
     C                     MOVE ' '       FVDLTF           **2
     C                     MOVE XPCCY     FVCCY            **2
     C                     MOVE 'I'       FVCHTP           **2
     C                     Z-ADDXPPRDD    FVPRDT           **2
     C*****                MOVE XRMD      FVERMD           **2            S01194
     C                     MOVE A6MDEX    FVERMD           **2            S01194
     C                     Z-ADDXPPRD     FVPRD            **2            S01136
     C                     MOVE XPTPRD    FVTPRD           **2            S01136
     C****                 WRITEFXREVHP0                   **2            S01136
     C                     WRITEFXRHTNP0                   **2            S01136
     C                     END                             E*2
      *
     C                     END                             E1
      *
      ** read next live record off LF/FDCCYPLL
     C           XPDLTF    DOUEQ' '                        B1
     C           *IN63     OREQ '1'                        *1
     C                     READ FDCCYPLL                 63*1
     C                     END                             E1
      *
     C           #BAA9     ENDSR                           #BAA9 TAG
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #BBA                                              *
      *                                                               *
      *     This subroutine will calculate the outright profit and    *
      *     loss for each forward book record. and adds them to the   *
      *     short or forward profit and loss accumulators.            *
      *                                                               *
      *     Called by : #BA                                           *
      *                                                               *
      *     Calls     : None                                          *
      *                                                               *
      *     Uses      : @LGPOS - long position                        *
      *                 @STPOS - short position                       *
      *                                                               *
      *****************************************************************
      *
     C           #BBA      BEGSR
      *
      ** if the currency is the base currency for dealing then
      ** don't accumulate.
     C***********XPCCY*****IFNE*IDCYDL*********************B1*************S01319
     C           XPCCY     IFNE BNCYDL                     B1             S01319
      *
      ** set up data for ZA0620
     C                     MOVE FPCCY     @@CCY            *1
     C                     Z-ADDFPDYNM    @@AMT            *1
      *
      ** check to see if buy or sell required
     C           @@AMT     IFLT 0                          B*2
     C                     MOVE 'B'       @@BYSL           **2
     C                     ELSE                            X*2
     C                     MOVE 'S'       @@BYSL           **2
     C                     END                             E*2
      *
      ** set up date
     C                     Z-ADDFPFWBY    @YYYY            *1
     C                     Z-ADDFPFWBM    @MM              *1
     C                     Z-ADDFPFWBD    @DD              *1
     C                     Z-ADD@DATE     @@VDT            *1
     C                     Z-ADDFPDYDE    @@DBCE           *1
      *
      ** call ZA0620
     C                     EXSR ZA0620                     *1
      *
      ** if the date on LF/FXFWDTLL is greater than or equal to
      ** the one month date on LF/FDCCYPLL, then add P/L to the
      ** forward P/L, else add it to the short P/L.
     C           @DATE     IFGE XPPRDD                     B*2
     C                     ADD  @@RPL     @LGPOS           **2
     C                     ELSE                            X*2
     C                     ADD  @@RPL     @STPOS           **2
     C                     END                             E*2
      *
     C                     END                             E1
      *
      ** read the next live record off LF/FXFWDTLL
     C           FPDLTF    DOUEQ' '                        B1
     C           *IN64     OREQ '1'                        *1
     C                     READ FXFWDTLL                 64*1
     C                     END                             E1
      *
     C           #BBA9     ENDSR                           #BBA9 TAG
      *
      *****************************************************************
      /EJECT
      ****************************************************************
      *                                                              *
      * ZA0620 - THIS SUBROUTINE CALCULATES THE REVALUATION PROFIT   *
      *          AND LOSS (IN BASE CCY)                              *
      *                                                              *
      * CALLED BY :                                                  *
      *                                                              *
      * CALLS :  ZA0640  TO OBTAIN MARKET OUTRIGHT RATE              *
      *          ZA0870  TO OBTAIN BASE CURRENCY DECIMAL             *
      *                  PLACES (EXPECTED)                           *
      *                                                              *
      * INPUT  : @@VDT   VALUE DATE(YYYYMMDD)           (ZA0640)     *
      *          @@AMT   AMOUNT                                      *
      *          @@DBCE  DEALT BASE CURRENCY EQUIV    (SIZE : 15,0)  *
      *          @@CCY   CURRENCY CODE                  (ZA0640)     *
      *          @@BYSL  BUY OR SELL RATE REQUIRED      (ZA0640)     *
      *          A6NBDP  CURRENCY DECIMAL PLACES       (SDCURRPD)    *
      *          A6MDEX  EXCHANGE RATE MULTIPLY/DIVIDE (SDCURRPD)    *
      *                                                              *
      * OUTPUT : @@RPL   REVALUATION PROFIT/LOSS    (SIZE : 15,0)    *
      *                                                              *
      * USES :   @@RBCE  REVALUED BASE CURRENCY EQUIVALENT           *
      *          @DP     DECIMAL PLACES CORRECTION ARRAY             *
      *          @@MOR   MARKET OUTRIGHT RATE                        *
      *          @@NDPB  BASE CURRENCY DECIMAL PLACES  (FROM ZA0870) *
      *          @@P     DECIMAL PLACES CORRECTION ARRAY INDEX       *
      *          @@DEC   DECIMAL VALUS OF @@RBCE FIELD.              *
      *          @@MDEC  DECIMAL VALUS OF @@RBCE FIELD AFTER         *
      *                  DECIMAL CORRECTION.                         *
      *                                                              *
      *     AMEND NO. 000001                  DATE   15/07/86        *
      *       Amendment to remove rounding errors.                   *
      *       mutual working days.                                   *
      *                                                              *
      *****************************************************************
      *
     C           ZA0620    BEGSR
      *
      **   DEFINE @@AMT.
     C                     Z-ADD@@AMT     @@AMT  150
      *
      **   OBTAIN MARKET OUTRIGHT RATE
     C                     EXSR ZA0640
     C           *INU7     CABEQ'1'       ZA0629
      *
      **   CHECK MULTIPLY/DIVIDE INDICATOR
     C*****      XRMD      IFEQ 'M'                        B1             S01194
     C           A6MDEX    IFEQ 'M'                        B1             S01194
      *
      **   CALCULATE THE RETURN BASE CURRENCY EQUIVALENT, AND ALSO
      **   STORE THE RESULTING DECIMAL PLACES.
     C           @@AMT     MULT @@MOR     @@RBCE 150       *1
     C           @@AMT     MULT @@MOR     @@DEC   33H      *1
     C                     ELSE                            X1
     C           @@AMT     DIV  @@MOR     @@RBCE           *1
     C           @@AMT     DIV  @@MOR     @@DEC     H      *1
     C                     END                             E1
      *
      **   CHECK FOR -VE AMOUNT; IF IT IS THEN MAKE IT +VE.
     C           @@AMT     IFLT 0                          B1
     C*********************Z-SUB@@DBCE    @@DBCE           *1
     C******************** Z-SUB@@DEC *** @@DEC *********  *1
     C                     END                             E1
      *
      **  CORRECT DECIMAL PLACES OF REVALUED BASE CCY EQUIVALENT
     C*****      CDP       SUB  @@NDPB    @@P     10                      S01194
     C           A6NBDP    SUB  @@NDPB    @@P     10                      S01194
     C                     ADD  4         @@P
     C           @@RBCE    MULT @DP,@@P   @@RBCE    H
     C           @@DEC     MULT @DP,@@P   @@MDEC  63
      *
      **  CALCULATE EXACT VALUE OF @@RBCE (INCLUDES DEC. PLACES FIGURE)
     C           @@MDEC    ADD  @@RBCE    @@RBCE    H
      *
      **  CALCULATE PROFIT/LOSS
     C           @@RBCE    SUB  @@DBCE    @@RPL  150
      *
     C           ZA0629    ENDSR                           **ZA0629 TAG**
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      * ZA0640 - THIS SUBROUTINE CALCULATES THE FORWARD OUTRIGHT
      *          RATE FOR A DATE AND CURRENCY
      *
      * CALLED BY :
      *
      * CALLS :  ZA0680  TO CONVERT DATES TO MIDAS DAY NUMBER FORMAT
      *
      * INPUT  : @@CCY   CURRENCY CODE
      *          @@BYSL  BUY OR SELL RATE REQUIRED
      *          @@VDT   VALUE DATE(YYYYMMDD)
      *          A6MDEX  EXCHANGE RATE MULTIPLY/DIVIDE (SDCURRPD)
      *
      * OUTPUT : @@MOR   FORWARD MARKET OUTRIGHT RATE  (SIZE : 13,8)
      *
      * USES :   @@DATD  DATE EXCESS (VALUE DATE AND LOWER LIMIT DATE)
      *          @@DATD  DATE DIFFERENCE BETWEEN THE TWO READ'S
      *          @@FCCY  CURRENCY FROM FIRST READ
      *          @@FRAT  OUTRIGHT RATE FROM FIRST READ (HIGH OR LOW)
      *          @@HRT1  HIGH OUTRIGHT RATE FROM FIRST READ
      ******     @@KDCY  KLIST FOR ACCESS TO S/FDCCYTLL (EXPECTED)        S01194
      *          @@KREV  KEY FOR READ OF S/FXRHTNLL                       S01136
      *          @@LRT1  LOW OUTRIGHT RATE FROM FIRST READ
      *          @@PRD1  PERIOD DATE FROM FIRST READ (MIDAS DAY NO.)
      *          @@PRD2  PERIOD DATE FROM SECOND READ (MIDAS DAY NO.)
      *          @@RATD  RATE DIFFERENCE BETWEEN THE TWO READ'S
      *          @@SRAT  OUTRIGHT RATE FROM SECOND READ (HIGH OR LOW)
      *          @@VDAT  VALUE DATE IN MIDAS DAY NUMBER FORMAT
      *          @@VTE   VALUE DATE IN ZONED FORMAT
      *          @@WK5   WORK FIELD
      *          @@WK6   WORKFIELD
      *          FVCCY   CURRENCY CODE                 (S/FXRHTNLL)       S01136
      *          FVHORT  HIGH OUTRIGHT RATE            (S/FXRHTNLL)       S01136
      *          FVLORT  LOW OUTRIGHT RATE             (S/FXRHTNLL)       S01136
      *          FVPRDT  PERIOD DATE                   (S/FXRHTNLL)       S01136
      *          A6FXSD  SPOT DATE                     (SDCURRPD)         S01136
      *          A6MDEX  MULTIPLY/DIVIDE INDICATOR     (SDCURRPD)
      *          *IN85   ERROR/RESULT *IN FOR READ'S (NOT REFERRED TO)
      *
      *****************************************************************
      *
     C           ZA0640    BEGSR
      *
      **  IF THE CURRENCY REQUESTED IS BASE FOR DEALING, ASSUME
      **  A RATE OF 1.00
     C***********IDCYDL****IFEQ*@@CCY**********************B1*************S01319
     C           BNCYDL    IFEQ @@CCY                      B1             S01319
     C                     Z-ADD0001.00   @@MOR            *1
     C                     ELSE                            X1
      *
     C****CHECK*IF VALUE DATE FROM S/TABTG10 IS BEFORE TWO                E13898
     C****DAYS*BEFORE SPOT DATE (MUST CONVERT TO MIDAS DAY NUMBERS)       E13898
     C**********           Z-ADD@@VDT     @@DTIN           *1             E13898
     C**********           EXSR ZA0680                     *1             E13898
     C**********           Z-ADD@@MDNO    @@VDAT           *1             E13898
     C**********                                                          E13898
     C**********           Z-ADDFXSP      @@DTIN           *1             E13898
     C**********           EXSR ZA0680                     *1             E13898
     C********** @@MDNO    SUB  @@VDAT    @@WK5   50       *1             E13898
     C**********                                                          E13898
     C****IF*SO*USE SPOT RATE                                             E13898
     C********** @@WK5     IFGT 2                          B*2            E13898
     C**********           Z-ADDSPOT      @@MOR            **2            E13898
     C**********                                                          E13898
     C****EXIT*ROUTINE                                                    E13898
     C**********           GOTO ZA0649                     **2            E13898
     C**********           END                             E*2            E13898
      *
      **  KEY LIST FOR FXREVHLL READ
      **  DATE KEY MUST BE ZONED NOT PACKED
     C                     Z-ADD@@VDT     @@VTE            *1
     C           @@KREV    KLIST                           *1
     C                     KFLD           @@CCY            *1
     C                     KFLD           @@VTE            *1
      *
      **  CLEAR DATABASE FIELD FROM PREVIOUS EXECUTIONS.
     C                     MOVE *BLANKS   FVCCY            *1
      *
      **  SETLL FOR NEXT READP
     C           @@KREV    SETLLFXREVHP0                   *1
     C           @@CCY     READEFXREVHP0               8685*1
      *
      **  IF RECORD NOT FOUND, OR LOCKED, TRY FOR RECORD
      **  WITH DATE LESS THAN THAT PROVIDED. READ LAST
      **  RECORD FOR CURRENCY.
     C           *IN85     IFEQ '1'                        B*2
     C           *IN86     OREQ '1'                        B*2
     C           @@CCY     SETGTFXREVHP0                   **2
     C                     READPFXREVHP0               8685**2
      *
      **  NO RECORD WHATSOEVER EXISTS FOR THE CURRENCY,
      **  PERFORM ERROR PROCESSING. SET IN85, CAUSE
      **  NON EXTRAPOLATION PROCESSING
     C           @@CCY     CABNEFVCCY     ZA0648           **2
     C                     MOVE '1'       *IN85            **2
     C                     END                             E*2
      *
      **  RECORD EXISTS FOR CCY
      **         AND VALUE DATE = THAT ON FILE
      **         OR  VALUE DATE > THAN ANY ON FILE
     C           @@VTE     IFEQ FVPRDT                     B*2
     C           *IN85     OREQ '1'                        B*2
      *
      **  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C*****      XRMD      IFEQ 'M'                        B**3           S01194
     C           A6MDEX    IFEQ 'M'                        B**3           S01194
     C           @@BYSL    ANDEQ'B'                        B**3
      *
     C*****      XRMD      OREQ 'D'                        B**3           S01194
     C           A6MDEX    OREQ 'D'                        B**3           S01194
     C           @@BYSL    ANDEQ'S'                        B**3
      *
      **   USE HIGH OUTRATE RATE
     C           FVHORT    IFNE 0                                                             193092
     C                     Z-ADDFVHORT    @@MOR            ***3
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@MOR                                               193092
     C                     ENDIF                                                              193092
     C                     ELSE                            X**3
      *
      **   USE LOW OUTRATE RATE
     C           FVLORT    IFNE 0                                                             193092
     C                     Z-ADDFVLORT    @@MOR            ***3
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@MOR                                               193092
     C                     ENDIF                                                              193092
     C                     END                             E**3
      *
      **  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
      *
     C****Setting up of @@VDAT                                            E19660
     C****Convert the Value Date to MIDAS No. and store in @@VDAT         E19660
     C                     Z-ADD@@VDT     @@DTIN           *1             E19660
     C                     EXSR ZA0680                     *1             E19660
     C                     Z-ADD@@MDNO    @@VDAT           *1             E19660
     C*                                                                   E19660
      **  SAVE FIRST READ VALUES
     C                     MOVE FVCCY     @@FCCY           *1
     C                     MOVE *BLANKS   FVCCY            *1
      *
      ** CONVERT TO MIDAS DAY NUMBER FORMAT
     C                     Z-ADDFVPRDT    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@PRD1           *1
     C           FVHORT    IFNE 0                                                             193092
     C                     Z-ADDFVHORT    @@HRT1           *1
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@HRT1                                              193092
     C                     ENDIF                                                              193092
     C           FVLORT    IFNE 0                                                             193092
     C                     Z-ADDFVLORT    @@LRT1           *1
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@LRT1                                              193092
     C                     ENDIF                                                              193092
      *
      **  READ PREVIOUS RECORD
     C                     READPFXREVHP0                 85*1
      *
      **  MUST EXTRAPOLATE TO GET RATE FOR VALUE DATE
     C           @@FCCY    IFEQ @@CCY                      B*2
     C           FVCCY     ANDEQ@@CCY                      B*2
     C           @@PRD1    ANDGT@@VDAT                     B*2
     C           *IN85     ANDEQ'0'                        B*2
      *
      **  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C*****      XRMD      IFEQ 'M'                        B**3           S01194
     C           A6MDEX    IFEQ 'M'                        B**3           S01194
     C           @@BYSL    ANDEQ'B'                        B**3
      *
     C*****      XRMD      OREQ 'D'                        B**3           S01194
     C           A6MDEX    OREQ 'D'                        B**3           S01194
     C           @@BYSL    ANDEQ'S'                        B**3
      *
      **   USE HIGH OUTRATE RATE
     C                     Z-ADDFVHORT    @@SRAT           ***3
     C                     Z-ADD@@HRT1    @@FRAT           ***3
     C                     ELSE                            X**3
      *
      **   USE LOW OUTRATE RATE
     C                     Z-ADDFVLORT    @@SRAT           ***3
     C                     Z-ADD@@LRT1    @@FRAT           ***3
     C                     END                             E**3
      *
      **  CALCULATION:
      **  RATE DIFFERENCE
     C           @@FRAT    SUB  @@SRAT    @@RATD           **2
      *
      **  DATE DIFFERENCE
      **  CONVERT TO MIDAS DAY NUMBER FORMAT
     C                     Z-ADDFVPRDT    @@DTIN           **2
     C                     EXSR ZA0680                     **2
     C                     Z-ADD@@MDNO    @@PRD2           **2
      *
      **  DATE EXCESS
     C           @@VDAT    SUB  @@PRD2    @@EDAT           **2
      *
     C           @@PRD1    SUB  @@PRD2    @@DATD           **2
      *
     C           @@EDAT    DIV  @@DATD    @@WK6  109H      **2
     C           @@RATD    MULT @@WK6     @@MOR     H      **2
     C******************** ADD  @@FRAT    @@MOR            **2
     C                     ADD  @@SRAT    @@MOR            **2
      *
      **  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
      *
      **  ONLY ONE REVALUATION RECORD FOR THIS CCY SO CANNOT EXTRAPOLATE
     C           @@FCCY    IFEQ @@CCY                      B*2
     C           FVCCY     ANDNE@@CCY                      B*2
      *
      *
      **  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C*****      XRMD      IFEQ 'M'                        B**3           S01194
     C           A6MDEX    IFEQ 'M'                        B**3           S01194
     C           @@BYSL    ANDEQ'B'                        B**3
      *
     C*****      XRMD      OREQ 'D'                        B**3           S01194
     C           A6MDEX    OREQ 'D'                        B**3           S01194
     C           @@BYSL    ANDEQ'S'                        B**3
      *
      **   USE HIGH OUTRATE RATE
     C                     Z-ADD@@HRT1    @@MOR            ***3
     C                     ELSE                            X**3
      *
      **   USE LOW OUTRATE RATE
     C                     Z-ADD@@LRT1    @@MOR            ***3
     C                     END                             E**3
      *
      **  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
      *
      **  ONLY ONE REVALUATION RECORD FOR THIS CCY SO CANNOT EXTRAPOLATE
     C           FVCCY     IFEQ @@CCY                      B*2
     C           @@FCCY    ANDNE@@CCY                      B*2
      *
      *
      **  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C*****      XRMD      IFEQ 'M'                        B**3           S01194
     C           A6MDEX    IFEQ 'M'                        B**3           S01194
     C           @@BYSL    ANDEQ'B'                        B**3
      *
     C*****      XRMD      OREQ 'D'                        B**3           S01194
     C           A6MDEX    OREQ 'D'                        B**3           S01194
     C           @@BYSL    ANDEQ'S'                        B**3
      *
      **   USE HIGH OUTRATE RATE
     C           FVHORT    IFNE 0                                                             193092
     C                     Z-ADDFVHORT    @@MOR            ***3
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@MOR                                               193092
     C                     ENDIF                                                              193092
     C                     ELSE                            X**3
      *
      **   USE LOW OUTRATE RATE
     C           FVLORT    IFNE 0                                                             193092
     C                     Z-ADDFVLORT    @@MOR            ***3
     C                     ELSE                                                               193092
     C                     Z-ADDFVSPRT    @@MOR                                               193092
     C                     ENDIF                                                              193092
     C                     END                             E**3
      *
      **  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
      *
      **  ANY OTHER RESULTS MUST BE A DATABASE ERROR
     C           ZA0648    TAG                             **ZA0648 TAG**
     C                     MOVE @@CCY     DBKEY            ***************
     C                     MOVEL'FXREVHLL'DBFILE           * DB ERROR 920*
     C                     MOVE '920'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1             S01194
      *
     C                     END                             E1
      *
      **  FIELD DEFINITIONS
     C           *LIKE     DEFN @@MDNO    @@EDAT
     C           *LIKE     DEFN FVHORT    @@RATD
     C           *LIKE     DEFN FVCCY     @@FCCY
     C           *LIKE     DEFN @@MDNO    @@VDAT
     C*****      *LIKE     DEFN SPOT      @@MOR                           S01194
     C           *LIKE     DEFN A6SPRT    @@MOR                           S01194
     C           *LIKE     DEFN A6SPRT    FVSPRT                                              193092
     C           *LIKE     DEFN FVPRDT    @@VTE
     C           *LIKE     DEFN @@MDNO    @@PRD1
     C           *LIKE     DEFN FVHORT    @@HRT1
     C           *LIKE     DEFN FVLORT    @@LRT1
     C           *LIKE     DEFN FVHORT    @@SRAT
     C           *LIKE     DEFN FVHORT    @@FRAT
     C           *LIKE     DEFN @@MDNO    @@PRD2
     C           *LIKE     DEFN @@MDNO    @@DATD
     C                     MOVE @@BYSL    @@BYSL  1
     C                     Z-ADD@@DBCE    @@DBCE 150
     C           *LIKE     DEFN @@FCCY    @@CCY
     C                     Z-ADD@@VDT     @@VDT   80
      *
     C           ZA0649    ENDSR                           **ZA0649 TAG**
      *****************************************************************
      /EJECT
      *******************************************************************
      *
      * ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO
      *          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)
      *
      * CALLED BY :
      *
      * CALLS :
      *
      * INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
      *
      * OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)
      *
      * USES :   @@CC   NUMBER OF CENTURIES IN DATE
      *          @@DAY  DAY NUMBER
      *          @@REM  REMAINDER FROM DIVIDE
      *          @@MTH  MONTH NUMBER
      *          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
      *                 MONTH
      *          @@WK2  WORK FIELD (2,0)
      *          @@WK5  WORK FIELD (5,0)
      *          @@YYYY YEAR (4 CHARACTER)
      *          @@YY   YEAR (2 CHARACTER)
      *          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
      *                 A FOUR YEAR PERIOD
      *
      *******************************************************************
      *
     C           ZA0680    BEGSR
      *
      **  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
      *
      **   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
      *
      **    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
      *
      **  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
      *
     C           @@YYYY    ADD  28        @@WK2
      *
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
      *
      **    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
      *
      **  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          B1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
      *
      **  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
      *
      **  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
      *
      **  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
      *
     C           ZA0689    ENDSR                           **ZA0689 TAG**
      *****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1150 -  Convert rate to scaled rate.                   *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SXP1 - First currency scaling exponent.       *
     C*              @@SXP2 - Second currency scaling exponent.      *
     C*              @@INRT - Rate to be scaled.                     *
     C*              @@FCMD - First Currency Multiply/Divide Ind.    *
     C*                                                              *
     C*     OUTPUT:  @@SCRT - Scaled rate.                           *
     C*              @@ISRT - Inverse of scaled rate.                *
     C*              @@ERCD - Error code.                            *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCF1 - Scaling factor for currency 1.         *
     C*              @@SCF2 - Scaling factor for currency 2.         *
     C*              @@WKA  - Work field, 15,0N.                     *
     C*              @@WKB  - Work field, 15,0N.                     *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1150    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SXP1    @@SXP1  10
     C                     Z-ADD@@SXP2    @@SXP2  10
     C                     Z-ADD@@INRT    @@INRT 128
     C                     MOVE @@FCMD    @@FCMD  1
     C*
     C                     Z-ADD*ZEROS    @@SCRT 128
     C                     Z-ADD*ZEROS    @@ISRT 128
     C                     Z-ADD*ZEROS    @@ERCD  10
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCF1 100
     C                     Z-ADD*ZEROS    @@SCF2 100
     C                     Z-ADD*ZEROS    @@WKA  150
     C                     Z-ADD*ZEROS    @@WKB  150
     C*
     C**  If the input rate is zero, the two output rates are zero,
     C**  by-pass further processing.
     C           @@INRT    CABEQ0         ZA1159
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the first currency.
     C                     Z-ADD@@SXP1    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF1
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the second currency.
     C                     Z-ADD@@SXP2    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF2
     C*
     C**  If the M/D indicator is M, then the scaled rate is calculated
     C**  as follows....
     C           @@FCMD    IFEQ 'M'                        B1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF1    @@SCRT           *1
     C           @@SCF2    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF1    @@WKA            *1
     C           @@SCF2    DIV  @@INRT    @@WKB     H      *1
     C*
     C**  Otherwise, calculate the rate as follows....
     C                     ELSE                            X1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF2    @@SCRT           *1
     C           @@SCF1    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF2    @@WKA            *1
     C           @@SCF1    DIV  @@INRT    @@WKB     H      *1
     C*
     C                     END                             E1
     C*
     C**  If the work fields are greater than 9999.99999999, set up the
     C**  error codes.
     C           @@WKA     IFGE 10000                      B1
     C                     Z-ADD1         @@ERCD           *1
     C                     END                             E1
     C           @@WKB     IFGE 10000                      B1
     C                     Z-ADD2         @@ERCD           *1
     C                     END                             E1
     C           @@WKA     IFGE 10000                      B1
     C           @@WKB     ANDGE10000                      B1
     C                     Z-ADD3         @@ERCD           *1
     C                     END                             E1
     C*
     C           ZA1159    ENDSR                           **ZA1159**
      *****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1160 -  Convert scaled rate to unscaled rate.          *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SEXP - Scaling exponent.                      *
     C*              @@INRT - Rate to be unscaled.                   *
     C*                                                              *
     C*     OUTPUT:  @@USRT - Unscaled rate.                         *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCAF - Scaling factor.                        *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1160    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SEXP    @@SEXP  10
     C                     Z-ADD@@INRT    @@INRT 128
     C*
     C                     Z-ADD*ZEROS    @@USRT 128
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCAF 100
     C*
     C**  If the input rate is zero, the output rate is zero, by-pass
     C**  further processing.
     C           @@INRT    CABEQ0         ZA1169
     C*
     C**  Determine the scaling factor from the scaling exponent.
     C                     Z-ADD@@SEXP    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCAF
     C*
     C**  Calculate the unscaled rate.
     C           @@INRT    DIV  @@SCAF    @@USRT    H
     C*
     C           ZA1169    ENDSR                           **ZA1169**
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #BA:                                              *
      *                                                               *
      *     This subroutine will get the currency detail record for   *
      *     the currency from the exchange rates/points file          *
      *     LF/FDCCYPLL. Then it will call #BAA while the currency    *
      *     remains the same and end of file is not reached.          *
      *                                                               *
      *     Called by : #B                                            *
      *                                                               *
      *     Calls     : #BAA                                          *
      *                                                               *
      *     Uses      : None                                          *
      *                                                               *
      *****************************************************************
      *
     C           #BA       BEGSR
      *
      ***set up key for LF/FDCCYTLL record for the currency on            S01194
      ***LF/FDCCYPLL.                                                     S01194
     C*****                MOVE *BLANKS   @KEY                            S01194
     C*****                MOVE '20'      @KEY1                           S01194
     C*****                MOVE '1'       @KEY2                           S01194
     C                     MOVE XPCCY     @CCYKY
      *
      ** chain to the currency file, if the record is not found it
      ** is a data base error.
     C*****      @KEY      CHAINFDCCYTLL             67                   S01194
     C*****      *IN67     IFEQ '1'                        B1             S01194
     C*****      RECI      ORNE 'D'                        *1             S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*MSG   ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM XPCCY     @AJCD   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C           @RTCD     IFNE *BLANKS                    B1             S01194
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 001*
     C*****                MOVEL'FDCCYTLL'DBFILE           *             *S01194
     C*****                MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *1             S01194
     C                     MOVELXPCCY     DBKEY            *1             S01194
     C                     MOVE '001'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BA9                       *1
     C                     END                             E1
      *
      ** Attempt to access the record on LF/FXRHTNLL for SPOT period.     S01136
     C***        @SPTKY    CHAINFXREVHLL             66                   S01136
     C           @REVKY    CHAINFXRHTNLL             66                   S01136
     C*****                Z-ADDHGSP      FVHORT                          S01194
     C*****                Z-ADDLOSP      FVLORT                          S01194
     C                     Z-ADDA6HSRT    FVHORT                          S01194
     C                     Z-ADDA6LSPR    FVLORT                          S01194
     C                     Z-ADDA6SPRT    FVSPRT                                              193092
      *
      ** If the record was found, then update it else create a new
      ** record
     C           *IN66     IFEQ '0'                        B*2
     C                     MOVE 'A'       FVCHTP           **2
     C*****                Z-ADDFXSP      FVPRDT           **2     S01136 S01194
     C                     Z-ADDA6FXSD    FVPRDT           **2            S01194
     C****                 UPDATFXREVHP0                   **2            S01136
     C                     UPDATFXRHTNP0                   **2            S01136
     C                     ELSE                            X*2
     C                     MOVE 'FV'      FVRCID           **2
     C                     MOVE ' '       FVDLTF           **2
     C                     MOVE XPCCY     FVCCY            **2
     C                     MOVE 'I'       FVCHTP           **2
     C*****                Z-ADDFXSP      FVPRDT           **2            S01194
     C*****                MOVE XRMD      FVERMD           **2            S01194
     C                     Z-ADDA6FXSD    FVPRDT           **2            S01194
     C                     MOVE A6MDEX    FVERMD           **2            S01194
     C                     Z-ADD0         FVPRD            **2            S01136
     C                     MOVE 'D'       FVTPRD           **2            S01136
     C****                 WRITEFXREVHP0                   **2            S01136
     C                     WRITEFXRHTNP0                   **2            S01136
     C                     END                             E*2
      *
      ** loop while the currency code remains the same and not EOF.
     C                     MOVE A6CYCD    CCY                             S01194
     C           CCY       DOWEQXPCCY                      B1             S01194
     C           *IN63     ANDEQ'0'                        *1
      *
      ** call #BAA
     C                     EXSR #BAA                       *1
     C           *INU7     CABEQ'1'       #BA9             *1
     C                     END                             E1
      *
     C           #BA9      ENDSR                           #BA9 TAG
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine
      *                                                               *
      *     This subroutine will get the currency detail record for   *
      *     the currency from the forward book file LF/FXFWDTLL       *
      *     then accesses the 1 month points for the currency. Then   *
      *     while the currency remains the same and not EOF, then     *
      *     it will call #BBA. Then the routine updates the position  *
      *     for the currency.                                         *
      *                                                               *
      *     Called by : #B                                            *
      *                                                               *
      *     Calls     : #BBA                                          *
      *                                                               *
      *     Uses      : @STPOS - short position                       *
      *                 @LGPOS - long position                        *
      *                                                               *
      *****************************************************************
      *
     C           #BB       BEGSR
      *
      ** access currency file for the currency on the forward book.
     C*****                MOVE *BLANKS   @KEY                            S01194
     C*****                MOVE '20'      @KEY1                           S01194
     C*****                MOVE '1'       @KEY2                           S01194
     C*****                MOVE FPCCY     @CCYKY                          S01194
     C*****      @KEY      CHAINFDCCYTLL             67                   S01194
     C*****      *IN67     IFEQ '1'                        B1             S01194
     C*****      RECI      ORNE 'D'                        *1             S01194
     C                     MOVE FPCCY     @CCYKY  3                       S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*MSG   ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM FPCCY     @AJCD   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C           @RTCD     IFNE *BLANKS                    B1             S01194
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 002*
     C*****                MOVEL'FDCCYTLL'DBFILE           *             *S01194
     C*****                MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *1             S01194
     C                     MOVELFPCCY     DBKEY            *1             S01194
     C                     EXSR *PSSR                      *1             S01194
     C                     MOVE '002'     DBASE            *1
     C                     GOTO #BB9                       *1
     C                     END                             E1
      *
      **  IF THE CURRENCY REQUESTED IS NOT BASE DEALING CURRENCY
      **  CHAIN TO FDCCYPLL FILE
     C                     MOVE A6CYCD    CCY              B1             S01194
     C                     Z-ADDA6SPRT    FVSPRT                                              193092
     C***********IDCYDL****IFNE*CCY************************B1*******S01194S01319
     C           BNCYDL    IFNE CCY                        B1             S01319
      *
      ** access the one month points for the selected currency
     C           @PTSKY    CHAINFDCCYPLL             68    *1
      ***access*the*one*month*points*for*the*selected*currency****
      *
      ** ACCESS THE DATE FOR FORWARD/SHORT PERIOD
      *
      ** IF THE PERIOD IS SPOT, GET THE DATE FROM PF/SDCURRPD
     C***********IDPRDE****IFEQ*'SP**'*********************B*2************S01319
     C           ERSPRE    IFEQ 'SP  '                     B*2            S01319
     C*****                Z-ADDFXSP      XPPRDD           **2            S01194
     C                     Z-ADDA6FXSD    XPPRDD           **2            S01194
     C                     ELSE                            X*2
      *
      ** ELSE FROM POINTS FILE
     C           @PTSKY    CHAINFDCCYPLL             68    **2
      *
      ** if it doesn't exist or it is deleted data base error
     C           *IN68     IFEQ '1'                        B*2
     C           XPDLTF    ORNE ' '                        **2
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 003*
     C                     MOVEL'FDCCYPLL'DBFILE           *             *
     C                     MOVEL@XPDS     DBKEY            ***************
     C                     MOVE '003'     DBASE            **2
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BB9                       **2
     C                     END                             E*1
      *
     C                     END                             E1
      *
     C                     END                             E1
      *
      ** zero accumulators
     C                     Z-ADD0         @LGPOS 150
     C                     Z-ADD0         @STPOS 150
      *
      ** call #BBA while not EOF and currency is the same
     C           FPCCY     DOWEQ@CCYKY                     B1
     C           *IN64     ANDEQ'0'                        *1
     C                     EXSR #BBA                       *1
     C                     END                             E1
      *
      ** access LF/FXEPOSLL record for currency and update it with
      ** new forward and short positions
     C           @CCYKY    CHAINFXEPOSLL             69
      *
      ** data base error if it doesn't exist
     C           *IN69     IFEQ '1'                        B1
     C           FODLTF    ORNE ' '                        *1
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 004*
     C                     MOVEL'FXEPOSLL'DBFILE           *             *
     C                     MOVEL@CCYKY    DBKEY            ***************
     C                     MOVE '004'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #BB9                       *1
     C                     END                             E1
      *
      ** set up fields for update
     C                     Z-ADD@STPOS    FOSHPL
     C                     Z-ADD@LGPOS    FOFWPL
     C                     TIME           FOTLUP
     C                     MOVE 'A'       FOCHTP
     C*****                MOVE RUNA      @RUNA                           S01194
     C*****                Z-ADDRUND      FOLCD                           S01194
     C                     MOVE BJMRDT    @RUNA                           S01194
     C                     Z-ADDBJRDNB    FOLCD                           S01194
     C                     MOVEL@USER     FOLUID
      *
      ** update the record
     C                     UPDATFXEPOSP0
      *
     C           #BB9      ENDSR                           #BB9 TAG
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #B:                                               *
      *                                                               *
      *     This subroutine will read the first record off the points *
      *     file, then call #BA until the end of the points file.     *
      *                                                               *
      *     It will then read the first record off the LF/FXFWDTLL    *
      *     then call #BB until the end of file is reached.           *
      *                                                               *
      *     Called by : Main processing                               *
      *                                                               *
      *     Calls     : #BA                                           *
      *                 #BB                                           *
      *                 #BBB                                          *   E12322
      *                                                               *
      *     Uses      : None                                          *
      *                                                               *
      *****************************************************************
      *
     C           #B        BEGSR
      *
      ** exit if data base error has occurred.
     C           *INU7     CABEQ'1'       #B9
      *                                                                   E12322
      ** zeroize the profit/loss value before revaluation.                E12322
     C                     EXSR #BBB                                      E12322
      *
      ** get the first record off LF/FDCCYPLL ignoring deletions
     C           *IN63     DOUEQ'1'                        B1
     C           XPDLTF    OREQ ' '                        *1
     C                     READ FDCCYPLL                 63*1
     C                     END                             E1
      *
      ** call #BA while not end of file
     C           *IN63     DOWEQ'0'                        B1
     C                     EXSR #BA                        *1
      *
      ** exit if data base error has occurred.
     C           *INU7     CABEQ'1'       #B9              *1
     C                     END                             E1
      *
      ** get the first record off LF/FXFWDTLL ignoring deletions
     C           *IN64     DOUEQ'1'                        B1
     C           FPDLTF    OREQ ' '                        *1
     C                     READ FXFWDTLL                 64*1
     C                     END                             E1
      *
      ** call #BA while not end of file
     C           *IN64     DOWEQ'0'                        B1
     C                     EXSR #BB                        *1
      *
      ** exit if data base error has occurred.
     C           *INU7     CABEQ'1'       #B9              *1
     C                     END                             E1
      *
     C           #B9       ENDSR                           #B9 TAG
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #A:                                               *
      *                                                               *
      *     This subroutine will first write a new record to the      *
      *     revaluation control data file LF/FXREVCLL, to signal that *
      *     a revaluation is in progress.                             *
      *                                                               *
      *     It will then read the MIDAS installation control data file*
      ******PF/SDBANKPD*for*the*local*currency,*the*the*DRS***************S01319
      ******installation*control*data*file*LF/FDINSTLL*for*the*base*******S01319
      ******currency*for*dealing.*****************************************S01319
      *     PF/SDBANKPD for the local currency and PF/SDDEALPD for the*   S01319
      *     base currency for dealing.                                *   S01319
      *                                                               *
      *     Called by : Main processing                               *
      *                                                               *
      *     Calls     : None                                          *
      *                                                               *
      *     Uses      : @KEY   data structure used to key MIDAS table *
      *                        files                                  *
      *                                                               *
      *****************************************************************
      *
     C           #A        BEGSR
      *
     C                     MOVEACPY@      BIS@   80                       S01194
      *
      ** set up the program name in *LDA
     C                     MOVEL'FX0590'  DBPGM
      *
      ***set up the key for PF/TABTB10 on LF/FDICDRLL                     S01194
     C*****                MOVE *BLANKS   @KEY                            S01194
     C*****                MOVE '01'      @KEY1                           S01194
     C*****                MOVE '10'      @KEY3                           S01194
      *****                                                               S01194
      ***chain to the file with the key '01        10'                    S01194
     C*****      @KEY      CHAINFDICDRLL             60                   S01194
      *****                                                               S01194
      ***if *IN60 is on, or RECI not equal 'D' then it is a data          S01194
      ***base error                                                       S01194
     C*****      *IN60     IFEQ '1'                        B1             S01194
     C*****      RECI      ORNE 'D'                        *1             S01194
      *                                                                   S01194
      ** Access SDBANKPD                                                  S01194
      *                                                                   S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*MSG   ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
     C           @RTCD     IFNE *BLANKS                                   S01194
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 005*
     C*****                MOVEL'FDICDRLL'DBFILE           *             *S01194
     C*****                MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL'SDBANKPD'DBFILE           *             *S01194
     C                     MOVEL@OPTN     DBKEY            *             *S01194
     C                     MOVE '005'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #A9                        *1
     C                     END                             E1
      *
      ***set up the key for PF/TABTB11 on LF/FDICDRLL                     S01194
     C*****                MOVE *BLANKS   @KEY                            S01194
     C*****                MOVE '01'      @KEY1                           S01194
     C*****                MOVE '11'      @KEY3                           S01194
      *****                                                               S01194
      ***chain to the file with the key '01        11'                    S01194
     C*****      @KEY      CHAINFDICDRLL             61                   S01194
      *****                                                               S01194
      ***if *IN61 is on, or RECI not equal 'D' then it is a data          S01194
      ***base error                                                       S01194
     C*****      *IN61     IFEQ '1'                        B1             S01194
     C*****      RECI      ORNE 'D'                        *1             S01194
     C*****                MOVE '1'       *INU7            ***************S01194
     C*****                MOVE '1'       *INU8            *             *S01194
     C*****                MOVE '1'       *INLR            * DB ERROR 006*S01194
     C*****                MOVEL'FDICDRLL'DBFILE           *             *S01194
     C*****                MOVEL@KEY      DBKEY            ***************S01194
     C*****                MOVE '006'     DBASE            *1             S01194
     C*****                GOTO #A9                        *1             S01194
     C*****                END                             E1             S01194
      *
     C***read*the*first*record*on*LF/FDINSTLL*****************************S01319
     C***********1*********SETLLFDINSTLL**********************************S01319
     C*********************READ*FDINSTLL*****************62***************S01319
     C********************************************************************S01319
     C***if**IN62*is*on,*or*IDDLTF*not*equal*'*'*then*it*is*a*data********S01319
     C***base*error*******************************************************S01319
     C************IN62*****IFEQ*'1'************************B1*************S01319
     C***********IDDLTF****ORNE*'*'*************************1*************S01319
     C**********           CALL 'AODEALR0'                                S01319              CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                           S01319              CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C           @RTCD     IFNE *BLANKS                    B1             S01319
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 007*
     C*********************MOVEL'FDINSTLL'DBFILE************             *S01319
     C                     MOVEL'SDDEALPD'DBFILE           ***************S01319
     C                     MOVEL'1'       DBKEY
     C                     MOVE '007'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #A9                        *1
     C                     END                             E1
      *
     C                     CALL 'AOTRMAR0'                                S01319
     C                     PARM '*MSG   ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C           SDTRMA    PARM SDTRMA    DSFDY                           S01319
     C           @RTCD     IFNE *BLANKS                    B1             S01319
     C                     MOVE '1'       *INU7            ***************S01319
     C                     MOVE '1'       *INU8            *             *S01319
     C                     MOVE '1'       *INLR            * DB ERROR 013*S01319
     C                     MOVEL'SDTRMAPD'DBFILE           *             *S01319
     C                     MOVEL'1'       DBKEY            ***************S01319
     C                     MOVE '013'     DBASE            *1             S01319
     C                     EXSR *PSSR                      *1             S01319
     C                     GOTO #A9                        *1             S01319
     C                     END                             E1             S01319
      *                                                                   S01319
      ** raed the one and only record in LF/FXREVCLL.
     C                     READ FXREVCLL                 65
      *
      ** if the record is not found then it is an error.
     C           *IN65     IFEQ '1'                        B1
     C           FUDLTF    ORNE ' '                        *1
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 008*
     C                     MOVEL'FDREVCLL'DBFILE           *             *
     C                     MOVEL'1'       DBKEY            ***************
     C                     MOVE '008'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #A9                        *1
     C                     END                             E1
      *
      ** set up the fields for output of LF/FXREVCLL record
     C                     TIME           FUTLUP
     C                     MOVE 'A'       FUCHTP
     C*****                MOVE RUNA      @RUNA                           S01194
     C*****                Z-ADDRUND      FULCD                           S01194
     C                     MOVE BJMRDT    @RUNA                           S01194
     C                     Z-ADDBJRDNB    FULCD                           S01194
     C                     MOVEL@USER     FULUID
     C                     MOVE 'Y'       FURIPI
      *
      ** update the revaluation control data record to LF/FXREVCLL.
     C                     UPDATFXREVCP0
      *
      ** get number of decimal places for base currency
     C*****                MOVE *BLANKS   @KEY                            S01194
     C*****                MOVE '20'      @KEY1                           S01194
     C*****                MOVE '1'       @KEY2                           S01194
     C*****                MOVE IDCYDL    @CCYKY                          S01194
      *****                                                               S01194
      ***chain to the currency file to get decimal places                 S01194
     C*****      @KEY      CHAINFDCCYTLL             67                   S01194
      *****                                                               S01194
      ***if *IN67 is on, or RECI not equal 'D' then it is a data          S01194
      ***base error                                                       S01194
     C*****      *IN67     IFEQ '1'                        B1             S01194
     C*****      RECI      ORNE 'D'                        *1             S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*MSG   ' @RTCD                           S01194
     C                     PARM '*KEY   ' @OPTN                           S01194
     C*********************PARM*IDCYDL****@AJCD*********************S01194S01319
     C                     PARM BNCYDL    @AJCD                           S01319
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C           @RTCD     IFNE *BLANKS                    B1             S01194
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 009*
     C*****                MOVEL'FDCCYTLL'DBFILE           *             *S01194
     C*****                MOVEL@KEY      DBKEY            ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           *1             S01194
     C*********************MOVELIDCYDL****DBKEY*************1*******S01194S01319
     C                     MOVELBNCYDL    DBKEY            *1             S01319
     C                     MOVE '009'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #A9                        *1
     C                     END                             E1
      *
     C*****                Z-ADDCDP       @@NDPB                          S01194
     C                     Z-ADDA6NBDP    @@NDPB                          S01194
      *
      ** definitions
     C           @REVKY    KLIST
     C                     KFLD           XPCCY
     C****                 KFLD           XPPRDD                          S01136
     C                     KFLD           XPTPRD                          S01136
     C                     KFLD           XPPRD                           S01136
      *
     C           @REVHK    KLIST                                          S01136
     C                     KFLD           XPCCY                           S01136
     C                     KFLD           XPPRDD                          S01136
      *
     C****       @SPTKY    KLIST                                          S01136
     C****                 KFLD           XPCCY                           S01136
     C****                 KFLD           FXSP                            S01136
     C****                 KFLD           XPTPRD                          S01136
     C****                 KFLD           XPPRD                           S01136
     C           @PTSKY    KLIST
     C*********************KFLD           CCY                             S01194
     C                     KFLD           A6CYCD                          S01194
     C                     KFLD           @TPRD
     C                     KFLD           @PRD
      *
     C*****      *LIKE     DEFN CDP       @@NDPB                          S01194
     C           *LIKE     DEFN A6NBDP    @@NDPB                          S01194
     C                     Z-ADD1         @X      30
     C***********IDPRDE****LOKUP@J,@X********************34***************S01319
     C           ERSPRE    LOKUP@J,@X                    34               S01319
     C                     Z-ADD@PD,@X    @PRD
     C                     MOVE @TP,@X    @TPRD
      *
     C           #A9       ENDSR                           #A9 TAG
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Subroutine #C:                                               *
      *                                                               *
      *     This subroutine will update the revaluation control record*
      *     with the time the revaluation finished.                   *
      *                                                               *
      *     It will then set on LR to terminate the program           *
      *                                                               *
      *     Called by : Main processing                               *
      *                                                               *
      *     Calls     : None                                          *
      *                                                               *
      *     Uses      : None                                          *
      *                                                               *
      *****************************************************************
      *
     C           #C        BEGSR
      *
      ** exit if *INU7 is on.
     C           *INU7     CABEQ'1'       #C9
      *
      ** read the one and only record in LF/FXREVCLL.
     C           1         SETLLFXREVCLL
     C                     READ FXREVCLL                 65
      *
      ** if the record is not found then it is an error.
     C           *IN65     IFEQ '1'                        B1
     C           FUDLTF    ORNE ' '                        *1
     C                     MOVE '1'       *INU7            ***************
     C                     MOVE '1'       *INU8            *             *
     C                     MOVE '1'       *INLR            * DB ERROR 010*
     C                     MOVEL'FDREVCLL'DBFILE           *             *
     C                     MOVEL'1'       DBKEY            ***************
     C                     MOVE '010'     DBASE            *1
     C                     EXSR *PSSR                      *1             S01194
     C                     GOTO #C9                        *1
     C                     END                             E1
      *
      ** change the revalaution in progress flag to 'N'
     C                     MOVE 'N'       FURIPI
      *
      *
      ** set the time of last revaluation
     C                     TIME           FUTLRV
      *
      ** set up the fields for output of LF/FXREVCLL record
     C                     TIME           FUTLUP
     C                     MOVE 'A'       FUCHTP
     C*****                MOVE RUNA      @RUNA                           S01194
     C*****                Z-ADDRUND      FULCD                           S01194
     C                     MOVE BJMRDT    @RUNA                           S01194
     C                     Z-ADDBJRDNB    FULCD                           S01194
     C                     MOVEL@USER     FULUID
      *
      ** update the record
     C                     UPDATFXREVCP0
      *
      ** set on last record indicator
     C                     MOVE '1'       *INLR
      *
     C           #C9       ENDSR                           #C9 TAG
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  This is the exception error subroutine, all file and program *
      *  errors return through here.                                  *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR
      *
     C           @DUMP     IFEQ *BLANKS                                   S01117
     C                     MOVE 'Y'       @DUMP   1                       S01117
     C                     DUMP
     C                     END                                            S01117
      *
     C           PSSR9     ENDSR'*CANCL'
      *
      *****************************************************************
      /EJECT                                                              E12322
      *****************************************************************   E12322
      *                                                               *   E12322
      *  Subroutine #BBB                                              *   E12322
      *                                                               *   E12322
      *     This subroutine will read the the LF/FXEPOSLL file        *   E12322
      *     and zeroize the profit and loss figures                   *   E12322
      *                                                               *   E12322
      *                                                               *   E12322
      *     Called by : #B                                            *   E12322
      *                                                               *   E12322
      *     Calls     :                                               *   E12322
      *                                                               *   E12322
      *     Uses      : None                                          *   E12322
      *                                                               *   E12322
      *****************************************************************   E12322
      *                                                                   E12322
     C           #BBB      BEGSR                                          E12322
      *                                                                   E12322
     C                     MOVE '0'       *IN70                           E12322
     C           *IN70     DOUEQ'1'                        B1             E12322
      *                                                                   E12322
      ** get the first record off LF/FXEPOSLL                             E12322
     C                     READ FXEPOSLL                 70*1             E12322
     C           *IN70     CABEQ'1'       #BBB9            *1             E12322
      *                                                                   E12322
      ** set up fields for update                                         E12322
     C           FODLTF    IFEQ ' '                        B*2            E12322
     C                     TIME           FOTLUP           **2            E12322
     C                     MOVE 'A'       FOCHTP           **2            E12322
     C*****                MOVE RUNA      @RUNA            **2     E12322 S01194
     C*****                Z-ADDRUND      FOLCD            **2     E12322 S01194
     C                     MOVE BJMRDT    @RUNA            **2            S01194
     C                     Z-ADDBJRDNB    FOLCD            **2            S01194
     C                     MOVEL@USER     FOLUID           **2            E12322
     C                     Z-ADD0         FOSHPL           **2            E12322
     C                     Z-ADD0         FOFWPL           **2            E12322
      *                                                                   E12322
      ** update the record                                                E12322
     C                     UPDATFXEPOSP0                   **2            E12322
      *                                                                   E12322
     C                     END                             E*2            E12322
     C                     END                             E1             E12322
      *                                                                   E12322
     C           #BBB9     ENDSR                           TAG #BBB9      E12322
      *****************************************************************
      /EJECT
**
(c) Finastra International Limited 2001
** array of powers of ten from 0 to 8
000000001
000000010
000000100
000001000
000010000
000100000
001000000
010000000
100000000
** @DP USED BY SR. ZA0620 - DECIMAL PLACES CORRECTION ARRAY
1000000010000000100000001000000010000000100000001
** @YD  USED BY SR. ZA0680 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN    S01136
00366007310109601461                                                      S01136
** @MD  USED BY SR. ZA0680 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
** Scaling factors array - @SF
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
** @J
OVR TOMNSPN SP1WSP2WSP3WSP1MSP2MSP3MSP6MSP9MSPYR
** @PD
012123123691
** @TP
DDDWWWMMMMMY
