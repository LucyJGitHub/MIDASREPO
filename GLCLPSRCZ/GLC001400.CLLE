/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas ME MT94x Production Control')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC001400 - MT94x Production Control                        */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. MD061832           Date 20Sep23              */
/*       Prev Amend No. MD051746           Date 03May19              */
/*                      AR740400           Date 03May19              */
/*                      MD046248           Date 27Oct17              */
/*                      MD045731           Date 27Sep17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CSC023             Date 29Jan04              */
/*                      CGL013  *CREATE    Date 17Apr02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD061832 - Added check on IASPInstallation                  */
/*       MD051746 - Added COB Start Date in validating MT941/MT942   */
/*                   requests                                        */
/*       AR740400 - MT94x Message Generation schedules expire due to */
/*                  incorrect COB Start Time retrieved. Fix          */
/*                  Duplicates CBSTAT *DTAARA to be used for         */
/*                  accessing COB Start Time field. (Child: AR740401)*/
/*                - Applied for MD-51746                             */
/*       MD046248 - Finastra Rebranding                              */
/*       MD045731 - Call GLC001435 to update the network status.     */
/*       CSC023 - MidasPlus additional packaging.  SBMJOB change.    */
/*                OUTQ must always be *JOBD.                         */
/*       CGL013 - MT94x Messages Generation                          */
/*                                                                   */
/*********************************************************************/
             PGM

             DCL        VAR(&MEM)     TYPE(*CHAR) LEN(50)
             DCL        VAR(&RTCD)    TYPE(*CHAR) LEN(7)
             DCL        VAR(&WTIME)   TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&SBMFLG)  TYPE(*CHAR) LEN(1)
             DCL        VAR(&DTQNAM)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTQLIB)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTQLEN)  TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&DTQDTA)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTQWAIT) TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&DPLIB)  TYPE(*CHAR) LEN(7)                                 /*AR740400*/
             DCL        VAR(&LIBR)   TYPE(*CHAR) LEN(2)                                 /*AR740400*/
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)                               /*AR740400*/
             DCL        VAR(&COBDTE) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DILIB)  TYPE(*CHAR) LEN(7)
             DCL        VAR(&DMLIB)  TYPE(*CHAR) LEN(7)
             DCL        VAR(&IASP_YN) TYPE(*CHAR) LEN(1)                                /*MD061832*/
/*/COPY GPCPYSRCG,GPSVALDCL  */                                                         /*MD061832*/
             DCLF       FILE(SDBANKPD)


             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')

/* Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             CHGJOB     SWS(00000000)

             CHKOBJ     OBJ(QTEMP/LDA) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(CRTDTAARA +
                          DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256))
/* Create duplicate CBSTAT for access on Cob Start Time */                              /*AR740400*/
             RTVDTAARA  DTAARA(SDSTAT) RTNVAR(&SDSTAT)                                  /*AR740400*/
             CHGVAR     VAR(&LIBR) VALUE(%SST(&SDSTAT 6 2))                             /*AR740400*/
             CHGVAR     VAR(&DPLIB) VALUE(&LIBR *TCAT 'DPLIB')                          /*AR740400*/
             CHGVAR     VAR(&DILIB) VALUE(&LIBR *TCAT 'DILIB')                          /*MD051746*/
             CHGVAR     VAR(&DMLIB) VALUE(&LIBR *TCAT 'DMLIB')                          /*MD051746*/
                                                                                        /*MD061832*/
             CALL       PGM(GPAOSVALR0) PARM(&RSVALRTNC +
                        'IASPinstallation' &SVAL1 +
                        &SVALK2 &SVAL2 &SVALK3 +
                        &SVAL3 &SVALK4 &SVAL4 &SVALK5 &SVAL5 +
                        &SVALK6 &SVAL6 &SVALK7 &SVAL7 &SVALK8 +
                        &SVAL8 &SVALK9 &SVAL9 &SVALK10 &SVAL10)                         /*MD061832*/
                                                                                        /*MD061832*/
/** Check whether system is in IASP environment. */                                     /*MD061832*/
             CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))                           /*MD061832*/
                                                                                        /*MD061832*/
             CHKOBJ     OBJ(&DPLIB/CBSTART) OBJTYPE(*DTAARA)                            /*AR740400*/
             MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(CRTCB))                         /*AR740400*/
             DLTDTAARA  DTAARA(&DPLIB/CBSTART)                                          /*AR740400*/

 CRTCB:      CRTDUPOBJ  OBJ(CBSTAT) FROMLIB(&DPLIB) OBJTYPE(*DTAARA) +
                        TOLIB(&DPLIB) NEWOBJ(CBSTART)                                   /*AR740400*/

             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                 /*MD061832*/
             RSTOBJ     OBJ(SDBANKPD) SAVLIB(&DMLIB) DEV(*SAVF) +
                          SAVF(&DILIB/DBICDM) RSTLIB(QTEMP) RSTASP(1)                   /*MD061832*/
             MONMSG     MSGID(CPF0000)                                                  /*MD061832*/
             ENDDO                                                                      /*MD061832*/
             ELSE       CMD(DO)                                                         /*MD061832*/
             RSTOBJ     OBJ(SDBANKPD) SAVLIB(&DMLIB)  DEV(*SAVF) +
                         SAVF(&DILIB/DBICDM) RSTLIB(QTEMP)                              /*MD051746*/
             MONMSG     MSGID(CPF0000)
             ENDDO                                                                      /*MD061832*/
             OVRDBF     FILE(SDBANKPD) TOFILE(QTEMP/SDBANKPD)
             RCVF       RCDFMT(SDBANKD0)
             CHGVAR     VAR(&COBDTE) VALUE(&BJRDNB)
             CHGDTAARA  DTAARA(&DPLIB/CBSTART (33 5)) VALUE(&COBDTE)

/* The processing does not check if the MT942 are active. The processing should work for */
/* manual request */

/* Re-activate the processing regulary */

 LOOP1:      CHGVAR     VAR(&RTCD) VALUE(' ')
             CHGVAR     VAR(&WTIME) VALUE(99999)
             CHGVAR     VAR(&SBMFLG) VALUE('N')
/**/                                                                                    /*MD045731*/
/* Check if the network need to be de-activated. */                                     /*MD045731*/
/**/                                                                                    /*MD045731*/
             CALL GLC001435                                                             /*MD045731*/

/* Active the request where the request time is reached */

             CALLPRC    PRC(GL001405) PARM(&RTCD &WTIME &SBMFLG)

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                ROLLBACK
                SNDPGMMSG  MSGID(MEM0001) MSGF(GBMIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO

/** If the wait time is less than zeros, re-start the process **/

             IF         COND(&RTCD *EQ '*RSTART') THEN(GOTO +
                          CMDLBL(LOOP1))

/** If a message should be processed, submit the message generation **/

             IF         COND(&SBMFLG *EQ 'Y') THEN(DO)
/************SBMJOB     JOB(GLC001415) JOBD(MT94XJOBD) JOBQ(*JOBD) +                      /*CSC023*/
/************             USER(*JOBD) RTGDTA(*JOBD) RQSDTA('CALL +                        /*CSC023*/
/************             GLC001415') INLLIBL(*JOBD) MSGQ(MOPERQ)                         /*CSC023*/
             SBMJOB     JOB(GLC001415) JOBD(MT94XJOBD) JOBQ(*JOBD) +
                          USER(*JOBD) RTGDTA(*JOBD) RQSDTA('CALL +
                          GLC001415') INLLIBL(*JOBD) MSGQ(MOPERQ) OUTQ(*JOBD)             /*CSC023*/
             ENDDO

/** Put the program in message queue wait, till the next request time **/

             CHGVAR     VAR(&DTQNAM) VALUE('GLM94XDQ')
             CHGVAR     VAR(&DTQLIB) VALUE('*LIBL')
             CHGVAR     VAR(&DTQLEN) VALUE(1)
             CHGVAR     VAR(&DTQDTA) VALUE(' ')
             CHGVAR     VAR(&DTQWAIT) VALUE(&WTIME)

             CALL       PGM(QRCVDTAQ) PARM(&DTQNAM &DTQLIB &DTQLEN +
                          &DTQDTA &DTQWAIT)

/** According the message queue information, re-start or stop it  **/

             IF         COND(&DTQDTA *EQ 'T') THEN(GOTO CMDLBL(ENDMSG))

/** If the data received from DTAQ is ' ' or 'C', restart the processing **/

             GOTO       CMDLBL(LOOP1)

/** Abnormal termination */

 ABNOR:      CHGJOB     SWS(XXXXXX11)
             ROLLBACK
             MONMSG     MSGID(CPF0000 MCH0000)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          GLC001400 ended abnormally - see joblog') +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)

/** End program */

 ENDMSG:     SNDPGMMSG  MSG('GLC001400 - MT94x Production Control is +
                          now terminating') TOMSGQ(MOPERQ)

 END:        RCLRSC
             MONMSG     MSGID(CPF0000 MCH0000)

             ENDPGM
