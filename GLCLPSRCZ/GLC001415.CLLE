/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('Midas GL MT941/MT942 Message Generation')             */
/*********************************************************************/
/*                                                                   */
/*       Midas     - General Ledger Module                           */
/*                                                                   */
/*       GLC001415 - Midas GL MT941/MT942 Message Generation         */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. MD062119           Date 29Jan24              */
/*       Prev Amend No. MD046248           Date 27Oct17              */
/*                      MD037826           Date 13Jul16              */
/*                      CGL146A            Date 10Jul13              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CGL013  *CREATE    Date 31Apr02              */
/*                      Xnnnnn             Date ddmmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD062119 - Use system date when retrieving journal entries  */
/*       MD046248 - Finastra Rebranding                              */
/*       MD037826 - Remove GOTO END command in hook CGL146_121 and   */
/*                  call MEC0810 when CGL146 is off in hook          */
/*                  CGL146_122 (Recompile)                           */
/*                - Applied for MD038974.                            */
/*       CGL0146A - MT940/MT950 Production in Input Cycle            */
/*                  Added hooks: CGL146_116, CGL146_119, CGL146_120  */
/*                               CGL146_121, CGL146_122, CGL146_123  */
/*       CGL013 - MT94x Message Generation                           */
/*                                                                   */
/*********************************************************************/
             PGM

/*/COPY WNCPYSRC,GLC001415A                                          */

             DCL        VAR(&RTNCDE)  TYPE(*CHAR) LEN(7)   VALUE('       ')
             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEM)     TYPE(*CHAR) LEN(50)
             DCL        VAR(&SDATE)   TYPE(*CHAR) LEN(6)
             DCL        VAR(&RDATE)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&RPARM)   TYPE(*CHAR) LEN(100)
             DCL        VAR(&FSTSEQ)  TYPE(*DEC) LEN(6 0)  VALUE(0)
             DCL        VAR(&LSTSEQ)  TYPE(*DEC) LEN(6 0)  VALUE(0)
             DCL        VAR(&SEQ)     TYPE(*CHAR) LEN(6)
             DCL        VAR(&STIME)   TYPE(*CHAR) LEN(6)                                /*MD062119*/
/*/COPY OFCPYSRCZ,CGL146_116                                         */                  /*CGL146A*/

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')

/* Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

/*/COPY OFCPYSRCZ,CGL146_119                                         */                  /*CGL146A*/
             OVRMSGF    MSGF(XXUSRMSG) TOMSGF(GBXXUSRMSG)
             OVRMSGF    MSGF(MEMSG) TOMSGF(GBMEMSG)
             OVRMSGF    MSGF(FTUSRMSG) TOMSGF(GBFTUSRMSG)
/*/COPY OFCPYSRCZ,CGL146_120                                         */                  /*CGL146A*/

/* Check feature CGL013 MT94x Message Generation */

             CHGVAR     VAR(&RTNCDE) VALUE('       ')
             CALL       PGM(AOSARDR0) PARM(&RTNCDE '*VERIFY' 'CGL013')
             IF         COND(&RTNCDE *NE '       ') THEN(GOTO +
                          CMDLBL(END))

             CHKOBJ     OBJ(LDA) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(CRTDTAARA +
                          DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256))

             RTVJOBA    TYPE(&JOBTYPE)
             CHGDTAARA  DTAARA(LDA) VALUE(' ')
             CHGJOB     SWS(XXXXXX00)

/*/COPY WNCPYSRC,GLC001415B                                          */

/* Start commitment control for batch jobs with file updates */

             IF         COND(&JOBTYPE = '0') THEN(DO)
                STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE))
             ENDDO
                                                                                        /*MD062119*/
/*  Retrieve System Date and Time - required to extract journal                         /*MD062119*/
/*  entries for audit report.                                                           /*MD062119*/
             RTVSYSVAL  SYSVAL(QTIME) RTNVAR(&STIME)                                    /*MD062119*/
             RTVSYSVAL  SYSVAL(QDATE) RTNVAR(&SDATE)                                    /*MD062119*/
                                                                                        /*MD062119*/
/* Generate MT941/MT942 Messages */

             CALLPRC    PRC(GL001415)

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                ROLLBACK
                SNDPGMMSG  MSGID(MEM0001) MSGF(GBMIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO

/*/COPY WNCPYSRC,GLC001415C                                          */

/* In the original project, the feature created files MGx94xPD for Meridian Link */
/* But, for some reason, we have to use these files to fill the MG Message files */
/* PF/MGOMSGPF and PF/MGOREFPD                                                   */

/* To list the MT941/MT942 messages generated,                          */
/*  - Retrieve the Last MT941/MT942 sequence before message generation, */
/*  - Load the first message sequence.                                  */

             RTVDTAARA  DTAARA(MGMT94DA (1 6)) RTNVAR(&SEQ)
             IF         COND(&SEQ *NE ' ') THEN(CHGVAR VAR(&FSTSEQ) +
                          VALUE(&SEQ))
             CHGVAR     VAR(&FSTSEQ) VALUE(&FSTSEQ + 1)
/*/COPY OFCPYSRCZ,CGL146_121                                          */                 /*CGL146A*/

/* Generate Balance Report */

             CALLPRC    PRC(MG000941)

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                ROLLBACK
                SNDPGMMSG  MSGID(MEM0001) MSGF(GBMIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO

/* Generate Interim Transaction Report */

             CALLPRC    PRC(MG000942)

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                ROLLBACK
                SNDPGMMSG  MSGID(MEM0001) MSGF(GBMIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO

/* To list the MT941/MT942 messages generated,                         */
/*  - Retrieve the Last MT941/MT942 sequence after message generation, */
/*  - Load the last message sequence.                                  */

             RTVDTAARA  DTAARA(MGMT94DA (1 6)) RTNVAR(&SEQ)
             IF         COND(&SEQ *NE ' ') THEN(CHGVAR VAR(&LSTSEQ) +
                          VALUE(&SEQ))

/*  If no message has been generated the sequence has not be increased */
/*  Do not produce the list.                                           */

             IF         COND(&FSTSEQ > &LSTSEQ) THEN(DO)
             CHGVAR     VAR(&LSTSEQ) VALUE(&LSTSEQ + 1)
             GOTO       CMDLBL(END)
             ENDDO

/* Retrieve the rundate in YYMMDD format.                              */

             RTVDTAARA  DTAARA(RUNDAT (1 7)) RTNVAR(&RDATE)
             IF         COND(%SST(&RDATE 1 1) *EQ ' ') THEN(CHGVAR +
                          VAR(%SST(&RDATE 1 1)) VALUE('0'))
             CALL       PGM(ZM0085) PARM(&RDATE &SDATE)

/* Load parameters */

    /* Module id                  */

             CHGVAR     VAR(%SST(&RPARM  1  2)) VALUE('GL')

    /* Message Status             */

             CHGVAR     VAR(%SST(&RPARM 18  4)) VALUE('1234')

    /* Message Type               */

             CHGVAR     VAR(%SST(&RPARM 15  3)) VALUE('***')

    /* Creation date from         */

             CHGVAR     VAR(%SST(&RPARM 23  6)) VALUE(&SDATE)

    /* Creation date to           */

             CHGVAR     VAR(%SST(&RPARM 29  6)) VALUE(&SDATE)

    /* Transaction reference From */

             CHGVAR     VAR(&SEQ) VALUE(&FSTSEQ)
             CHGVAR     VAR(%SST(&RPARM 35 14)) VALUE('GL' *CAT +
                          &SDATE *CAT &SEQ)

    /* Transaction reference To   */

             CHGVAR     VAR(&SEQ) VALUE(&LSTSEQ)
             CHGVAR     VAR(%SST(&RPARM 51 14)) VALUE('GL' *CAT +
                          &SDATE *CAT &SEQ)

/* Call Message Generation Audit Report                            */

/*/COPY OFCPYSRCZ,CGL146_122                                          */                 /*CGL146A*/
             CALL       PGM(MEC0810) PARM('     ' 'B' 'ALL ' &RPARM)
/*/COPY OFCPYSRCZ,CGL146_123                                          */                 /*CGL146A*/

             GOTO       CMDLBL(END)

ABNOR:
/*/COPY WNCPYSRC,GLC001415D                                          */

             CHGJOB     SWS(XXXXXX11)

             ROLLBACK
             MONMSG     MSGID(CPF0000 MCH0000)

/* Abnormal termination - batch job */

             IF         COND(&JOBTYPE = '0') THEN(DO)
               SNDPGMMSG MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                            GLC001415 ended abnormally - see job log') +
                            TOMSGQ(MOPERQ)
               MONMSG     MSGID(CPF0000 MCH0000)
             ENDDO

/* Abnormal termination - interactive job */

             IF         COND(&JOBTYPE = '1') THEN(DO)
               SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          GLC001415 ended abnormally - see job +
                          log') TOPGMQ(*EXT)
               MONMSG     MSGID(CPF0000 MCH0000)
             ENDDO

END:

/*/COPY WNCPYSRC,GLC001415E                                          */

             ENDPGM
