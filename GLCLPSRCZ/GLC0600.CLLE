/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    DFTACTGRP(*NO) ACTGRP(GLC0600)                              */
/*EXI    TEXT('Midas GL Account Posting Task Split')                 */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC0600 - GL Account Posting Task Split                     */
/*                                                                   */
/*   WARNING - THIS PROGRAM IS RUNNING IN TASK SPLIT MODE.           */
/*             DO NOT ADD ANY NEW PROGRAMS TO THIS CL IF IT IS NOT   */
/*             ABLE TO RUN IN TASK SPLIT.                            */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. MD021261           Date 16Jul13              */
/*                      MD002850           Date 08Apr13              */
/*                      CGL120  *CREATE    Date 06Aug12              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       MD021261 - Incorrect error handling in GLC0600              */
/*       MD002850 - Close and Actual Balances display 0.00 amount on */
/*                  Account Details and Customer Balances Enquiry.   */
/*                  Correct the processing for restart of subtasks   */
/*                  after failure.                                   */
/*       CGL120 - GL COB Components Task Split                       */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&POSTNUM &CNAM &CSEQ)
 
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(50)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&CSEQC) TYPE(*CHAR) LEN(5)
             DCL        VAR(&MEMBER) TYPE(*CHAR) LEN(12)
             DCL        VAR(&DTAQLIBL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGLENGTH) TYPE(*DEC) LEN(5 0) VALUE(50)
             DCL        VAR(&MSGDATA) TYPE(*CHAR) LEN(50)
             DCL        VAR(&SNDDTAQ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RCVDTAQ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RCVWAIT) TYPE(*DEC) LEN(5 0) VALUE(600)
             DCL        VAR(&RESTART) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1)
             DCL        VAR(&SNDMSG) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&POSTNUM) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CURRCD) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
 
             COPYRIGHT  TEXT('(c) Finastra International Limited +
                          Systems Ltd. 2012')
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) +
                             EXEC(GOTO ABNOR)
 
             SNDPGMMSG  MSG('GLC0600 - GL Account Posting +
                          started') TOMSGQ(MRUNQ)
 
             IF         COND(&POSTNUM = '3') THEN(DO)
             RTVMBRD    FILE(GEXBPD) NBRCURRCD(&CURRCD)
             IF         COND(&CURRCD *EQ 0) THEN(DO)
             GOTO       CMDLBL(END)
             ENDDO
             ENDDO
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
 
/* Check if normal run or restart                                  */
 
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
 
/* Check if any problems with COB components file                  */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             CHGVAR     VAR(&RESTART) VALUE(&STAT)
 
/* Set restart status to 'Y'                                       */
 
             CHGVAR     VAR(&STAT) VALUE('Y')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
 
/* Set up call to QSNDDTAQ and override files to their members     */
 
             CHGVAR     VAR(&CSEQC) VALUE(&CSEQ)
             CHGVAR     VAR(&MEMBER) VALUE('GLACP' *CAT &CSEQC)
             CHGVAR     VAR(&DTAQLIBL) VALUE('*LIBL')
             CHGVAR     VAR(&SNDDTAQ) VALUE('GLACPSERVE')
             CHGVAR     VAR(&RCVDTAQ) VALUE(&MEMBER)
 
             OVRDBF     FILE(GLACPOPD) TOFILE(GLACPOPD) MBR(&MEMBER)
 
             STRCMTCTL  LCKLVL(*CHG) CMTSCOPE(*JOB)
 
/* If restart from component failed because of no respond from     */
/* server, so resend message to server and wait.                   */
 
             IF         COND(&RESTART = 'F') THEN(DO)
             GOTO       CMDLBL(LOOP)
             ENDDO
 
/* If restart, not caused by server do not responds,               */
/* do not wait for the data queue entry                            */
/* Clear any old data queue message from server but ensure that an */
/* 'END' message, sent from the end proc job is not lost           */
 
             IF         COND(&RESTART = 'Y') THEN(DO)
             CHGVAR     VAR(&RCVWAIT) VALUE(5)
             CALL       PGM(QRCVDTAQ) PARM(&MEMBER &DTAQLIBL +
                          &MSGLENGTH &MSGDATA &RCVWAIT)
             CHGVAR     VAR(&RCVWAIT) VALUE(600)
             CHGVAR     VAR(&MSGLENGTH) VALUE(50)
             IF         COND(%SST(&MSGDATA 1 3) = 'END') THEN(DO)
             CALL       PGM(QSNDDTAQ) PARM(&MEMBER &DTAQLIBL +
                          &MSGLENGTH &MSGDATA)
             ENDDO
             GOTO       CMDLBL(RESTART)
             ENDDO
 
LOOP:
 
/* Request response from DTAQ whether to run job again or end      */
 
             CHGVAR     VAR(&MSGDATA) VALUE(&MEMBER)
             CHGVAR     VAR(&MSGLENGTH) VALUE(50)                                       /*MD021261*/
             CALL       PGM(QSNDDTAQ) PARM(&SNDDTAQ &DTAQLIBL +
                          &MSGLENGTH &MSGDATA)
/**********  CHGVAR     VAR(&STAT) VALUE('F')                      */                   /*MD002850*/
/**********  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)        */                   /*MD002850*/
 
/* Wait on reply for 5 minutes                                     */
 
             CALL       PGM(QRCVDTAQ) PARM(&RCVDTAQ &DTAQLIBL +
                          &MSGLENGTH &MSGDATA &RCVWAIT)
 
/* If no reply, check if the server is still active.               */
/* If Server is not active then error message and Terminate        */
/* If Server is active, then resend a message to server            */
/* If Server still do not respond after message send, then         */
/* error message and Terminate.                                    */
 
             IF         COND(&MSGLENGTH = 0) THEN(DO)
             ALCOBJ     OBJ((GLACPIPD *FILE *EXCL)) WAIT(0)
             MONMSG     MSGID(CPF1002) EXEC(DO)
             IF         COND(&SNDMSG *EQ 'Y') THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('F')                                           /*MD002850*/
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)                             /*MD002850*/
             SNDPGMMSG  MSG('No response from server for GLC0600') +
                          TOMSGQ(MOPERQ MRUNQ)
             GOTO       CMDLBL(ABNOR)
             ENDDO
             ELSE       CMD(DO)
             CHGVAR     VAR(&SNDMSG) VALUE('Y')
             GOTO       CMDLBL(LOOP)
             ENDDO
             ENDDO
                                                                                        /*MD002850*/
             CHGVAR     VAR(&STAT) VALUE('F')                                           /*MD002850*/
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)                             /*MD002850*/
             SNDPGMMSG  MSG('Server for GLC0600 not active') +
                          TOMSGQ(MOPERQ MRUNQ)
             GOTO       CMDLBL(ABNOR)
 
             ENDDO
 
/* If reply = END, set restart status to 'N' and terminate         */
 
             IF         COND(%SST(&MSGDATA 1 3) = 'END') THEN(DO)
 
             CHGVAR     VAR(&STAT) VALUE('N')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
             GOTO       CMDLBL(END)
             ENDDO
 
 RESTART:
             CALL       PGM(GLC0600A) PARM(&POSTNUM &MEMBER &CNAM +
                          &CSEQ &RESTART)
 
/* Unsuccessful Completion - Remove Changes                        */
 
             IF         COND(*NOT %SWITCH(XXXXXX00)) THEN(DO)
 
/* File out of balance                                             */
 
             IF         COND(%SWITCH(XXXXXXX1)) THEN(DO)
             SNDPGMMSG  MSG('DATABASE ERROR - GLC0600') TOMSGQ(MOPERQ)
             ENDDO
 
/* Database error                                                  */
 
             IF         COND(%SWITCH(XXXXXX1X)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&ERROR)
             SNDPGMMSG  MSGID(MEM0001) MSGF(REUSRMSG) MSGDTA(&ERROR) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             SNDPGMMSG  MSG('DATABASE IN ERROR - GLC0600') +
                          TOMSGQ(MOPERQ)
             ENDDO
 
             ROLLBACK
 
             GOTO       CMDLBL(ABNOR)
 
             ENDDO
 
/* Successful Completion                                           */
 
             COMMIT
             CHGVAR     VAR(&RESTART) VALUE('N')
 
/* Clear physical file member                                      */
 
             CLRPFM     FILE(GLACPOPD) MBR(&MEMBER)
 
             GOTO       CMDLBL(LOOP)
 
ABNOR:
             SNDPGMMSG  MSG('Program GLC0600 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
 
END:
             ENDCMTCTL
             MONMSG     MSGID(CPF0000)
             ENDPGM
