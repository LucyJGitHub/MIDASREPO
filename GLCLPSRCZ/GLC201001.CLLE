/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas GL Today's Transfer Postings Extract')          */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC201001 - Midas GL Today's Transfer Postings Extract      */
/*                                                                   */
/*       (c) Finastra International Limited 2023                     */
/*                                                                   */
/*       Last Amend No. CGL201 *Create     Date 22Sep23              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CGL201 - New Reports for Daily Transfer of Foreign Exchange */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)

             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&BOM) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&RTN) TYPE(*CHAR) LEN(1) VALUE('F')
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited 2023')
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SAR) TYPE(*CHAR) LEN(6)
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)

/* Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             SNDPGMMSG  MSG('GLC201001 - FCCY Income/Expense Posting +
                          Transfer to BCCY Reports') TOMSGQ(MRUNQ)

             CHGJOB     SWS(XXXXXX00)

/* Create data area LDA */

             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)

             CHGVAR     VAR(&RTCD) VALUE('       ')

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')
             CHGVAR     VAR(&SAR) VALUE('CGL201')

/**  Check if CGL201 New Reports for FCCY Transfer is installed.        */

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SAR &SCSARD)
             IF         COND(&RTCD *NE '       ') THEN(GOTO +
                          CMDLBL(END))

             RTVJOBA    TYPE(&JOBTYPE)

/* Setup system prefix variable from SDSTAT data area */

             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)

/* Call program CB0160 to get value of restart indicator */

             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)

/* If it is not a restart */

             IF         COND(&STAT *NE 'Y') THEN(DO)
             DLTF       FILE(XGLMTDBPD)
               MONMSG     MSGID(CPF2105)
             DLTF       FILE(XGLACTPPD)
               MONMSG     MSGID(CPF2105)

             CPYF       FROMFILE(GLMTDBPD) TOFILE(&DPLIB/XGLMTDBPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)

             CPYF       FROMFILE(GLACTPPD) TOFILE(&DPLIB/XGLACTPPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
             ENDDO

/* If it is a restart */

             IF         COND(&STAT *EQ 'Y') THEN(DO)
             CPYF       FROMFILE(XGLMTDBPD) TOFILE(GLMTDBPD) +
                          MBROPT(*REPLACE)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                            EXEC(CLRPFM FILE(GLMTDBPD))

             CPYF       FROMFILE(XGLACTPPD) TOFILE(GLACTPPD) +
                          MBROPT(*REPLACE)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                            EXEC(CLRPFM FILE(GLACTPPD))

             ENDDO

             CHGVAR     VAR(&STAT) VALUE('Y')

/* Call CB0150 to update restart indicator */

             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)

/* Check if Beginning of the month */

             CALL       PGM(CB0812) PARM(&BOM &RTN)

/* If Beginning of the month clear GLACTPPD */

             IF         COND(&BOM *EQ 'Y') THEN(CLRPFM FILE(GLACTPPD))

/* Clear Today's Transfer Posting File */

             CLRPFM     FILE(GLTFRPPD)

/* Call Extract Program*/

             CALL       PGM(GL201001)

/* If no error, extract the base ccy IN/EX postings */
             IF         COND(%SWITCH(XXXXXX00)) THEN(CALL PGM(GL201004))

/* If no error occured in the program */
             IF         COND(%SWITCH(XXXXXX00)) THEN(CALL PGM(GL201005))

             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)

/* Call CB0150 to update restart indicator */

               CHGVAR     VAR(&STAT) VALUE('N')
               CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
               DLTF       FILE(XGLMTDBPD)
               MONMSG     MSGID(CPF2105)
               DLTF       FILE(XGLACTPPD)
               MONMSG     MSGID(CPF2105)
             ENDDO

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO

             GOTO       CMDLBL(END)

/* Abnormal termination - batch job */

ABNOR:
             CHGJOB     SWS(XXXXXX11)
             IF         COND(&JOBTYPE = '0') THEN(DO)
                SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                             GLC201001 ended abnormally - see job log') +
                             TOMSGQ(MOPERQ MRUNQ)
                MONMSG     MSGID(CPF0000 MCH0000)
             ENDDO

END:
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited 2023')

             ENDPGM
