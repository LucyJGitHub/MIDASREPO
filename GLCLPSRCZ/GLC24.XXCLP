/********************************************************************/
/*S*D****CLPBASE******************************************************/                   /*CCB023*/
/********************************************************************/
/*                                                                  */
/*        Midas - General Ledger Module                             */
/*                                                                  */
/*       GLC24 - TEST FOR TERMINATION SUCCESSFUL                    */
/*                                                                  */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                  */
/*       Last Amend No. CCB023 *REDUNDANT  Date 06Aug12             */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Prev Amend No. 192912             Date 06Jun06              */
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.04 ---------------------------------------------------*/
/* Midas DBA 3.03 ---------------------------------------------------*/
/* Midas DBA 3.02 ---------------------------------------------------*/
/*                      166020             DATE  19OCT99            */
/*                      162541             DATE  09JUL99            */
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*                      S01408             DATE  10APR95            */
/*                      CCB001             DATE  16MAR95            */
/*                      E36489             DATE  27FEB92            */
/*                      E36352             DATE  25FEB92            */
/*                      RT0017             DATE  09MAY91            */
/*                      BH1019             DATE  21FEB91            */
/*                      BHF794             DATE  18OCT90            */
/*                      LN0835             DATE  04OCT90            */
/*                      S01229             DATE  04APR90            */
/*                      S01117             DATE  02/03/89           */
/*                      S01154             DATE  24/08/88           */
/*                      E17405             DATE  14/03/89           */
/*                                                                  */
/********************************************************************/
/*                                                                  */
/*       CCB023 - COB Restructure - Input Cycle Termination         */
/*                Restructuring                                     */
/*       192912 -   Call TIC0055 to process last TI posting even if */
/*                  jobs TIJRNENT and TISHDPST are not running. The */
/*                  problem was that TIC0050 was ending the jobs    */
/*                  before TIC0030 had ended the link to TI so      */
/*                  postings could still have come through.         */
/*                  TIC0055 is supposed to look after this problems */
/*                  by calling TI0340 one last time. However if the */
/*                  TIJRNENT and TISHDPST jobs are not running then */
/*                  TIC0055 did not get called. Fix is to call      */
/*                  TIC0055 regardless.                             */
/*       166020  -  I/C Term GL0121P does not include TI            */
/*                  autogenerated entries.                          */
/*       162541  -  Call TIC0055 to close last TI batches.          */
/*       S01408  -  Core hook added GLC24MPE                        */
/*       CCB001  -  CoB enhancements                                */
/*       E36489  -  MAKE TERMINATION FAILURE MESSAGE USER FRIENDLY  */
/*       E36352  -  INCORRECT RCF PARAMETERS PASSED TO GL0121P      */
/*       RT0017  -  REMOVE REFERENCES TO ZZEBH* FILES               */
/*       BH1019  -  ADD CHECKING FOR HELD BATCHES                   */
/*       BHF794  -  ADD REPORTS FOR CURRENCY TOTALS                 */
/*       LN0835  -  RCF ADDED TO GL REPORTS                         */
/*       S01229  -  SYNON program name changes                      */
/*       S01117  -  MULTIBRANCHING                                  */
/*       S01154  -  Insert of RCLRSC to ensure files used by the    */
/*                  Synon program GLCRPFR are closed.               */
/*       S01154  -  Changes for needed for replacement of BTRAN,    */
/*                  call new batch audit print program GLCRPF.      */
/*       E17405  -  Insert of RCLRSC to ensure files used by the    */
/*                  Synon program GLCRPFR are closed.               */
/*                                                                  */
/********************************************************************/
/**********  PGM        PARM(&GLERROR) */                             /*CCB001*/
             PGM                                                      /*CCB001*/
/**/
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2001')
/**********  DCL        VAR(&GLERROR) TYPE(*CHAR) LEN(1) */           /*CCB001*/
/**/
             DCL        VAR(&SWS) TYPE(*CHAR) LEN(8)
             DCL        VAR(&JOB) TYPE(*CHAR) LEN(10)
/*********** DCL        VAR(&GLSTAT) TYPE(*CHAR) LEN(256)*/           /*S01117*/
             DCL        VAR(&MSG) TYPE(*CHAR) LEN(50)                 /*S01117*/
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(7)  /*S01117*/
             DCL        VAR(&BRCA)  TYPE(*CHAR) LEN(3) VALUE('ALL')   /*S01117*/
             DCL        VAR(&SEQ)     TYPE(*CHAR) LEN(5)              /*S01117*/
             DCL        VAR(&TIDONE) TYPE(*CHAR) LEN(1)               /*162541*/
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7) VALUE(' ')      /*166020*/
             DCL       VAR(&OPTN) TYPE(*CHAR) LEN(7) VALUE('*FIRST ') /*166020*/
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)                /*166020*/
/*/COPY WNCPYSRC,GLC24001                                            */
/**/
                                                                      /*CCB001*/
/* Global monitor message */                                          /*CCB001*/
                                                                      /*CCB001*/
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO  +
                          CMDLBL(ABNOR))                              /*CCB001*/
                                                                      /*CCB001*/
/**/
             RTVJOBA    JOB(&JOB)
/*/COPY WNCPYSRC,GLC24006                                            */
/*********** CHGVAR     VAR(&GLERROR) VALUE('N') */                   /*CCB001*/
/**/
/*********** RTVDTAARA  DTAARA(GLSTAT) RTNVAR(&GLSTAT)*/              /*S01117*/
/**/
/*           IF         COND(%SUBSTRING(&GLSTAT 31 10) = +
                           'NNNNNNNNNN') THEN(DO)  */                 /*S01117*/
/**/                                                                  /*S01154*/
/************CALL       PGM(GLCRPFR) PARM('       ')*/    /*S01229*/  /*S01154*/
/*           CALL       PGM(GL0121P) PARM('       ')*/ /*S01229  S01154 LN0835*/
/*           CALL       PGM(GL0121P) PARM('       ' '     ' 'S' '   +
                          ')   */      /*LN0835*/                   /* E36352 */
/**/                                                                  /*166020*/
/*  ONLY PROCESS TIC0055 IF TI MODULE ON                              /*166020*/
             CALL       PGM(AOMMODR0) PARM(&RTCD &OPTN &FMT)          /*166020*/
/**/                                                                  /*166020*/
/** Database error handling                                           /*166020*/
/**/                                                                  /*166020*/
             IF         COND(&RTCD *NE '       ') THEN(DO)            /*166020*/
               SNDPGMMSG  MSG('Error on access to ICD file +
                            AOMMODPD') TOMSGQ(MOPERQ)                 /*166020*/
               GOTO       CMDLBL(ABNOR)                               /*166020*/
             ENDDO                                                    /*166020*/
/**/                                                                  /*166020*/
             IF         COND(%SST(&FMT 103 1) *EQ 'Y') THEN(DO)       /*166020*/
/**/                                                                  /*166020*/
/*********** ALCOBJ     OBJ((*LIBL/TIJRNENT *DTAARA *EXCLRD)) WAIT(5) /*166020*/          /*192912*/
/*********** MONMSG     MSGID(CPF1002) EXEC(DO)                       /*166020*/          /*192912*/
             CALL       PGM(TIC0055)                                  /*166020*/
/*********** CHGVAR     VAR(&TIDONE) VALUE('YES')                     /*166020*/          /*192912*/
/*********** ENDDO                                                    /*166020*/          /*192912*/
/**/                                                                  /*166020*/
/*********** ALCOBJ     OBJ((*LIBL/TISHDPST *DTAARA *EXCLRD)) WAIT(5) /*166020*/          /*192912*/
/*********** MONMSG     MSGID(CPF1002) EXEC(DO)                       /*166020*/          /*192912*/
/*********** IF         COND(&TIDONE *EQ '   ') THEN(DO)              /*166020*/          /*192912*/
/*********** CALL       PGM(TIC0055)                                  /*166020*/          /*192912*/
/*********** ENDDO                                                    /*166020*/          /*192912*/
/*********** ENDDO                                                    /*166020*/          /*192912*/
             ENDDO                                                    /*166020*/
/**/                                                                  /*166020*/
/*/COPY WNCPYSRC,GLC24002                                            */
             CALL       PGM(GL0121P) PARM('       ' '     ' 'B' +
                        'ALL')                                      /* E36352 */
/**/                                                                  /*BHF794*/
             CLRPFM     FILE(GLBBCUPD)                                /*BHF794*/
             CALL       PGM(GL0112U)                                  /*BHF794*/
/**/                                                                  /*BHF794*/
             CALL       PGM(GL0112P) PARM('       ' '     ' 'B' +
                        'ALL')                                        /*BHF794*/
             CALL       PGM(GL0113P) PARM('       ' '     ')          /*BHF794*/
/** RECLAIM RESOURCE INSERTED TO ENSURE ALL SYNON FILES ARE CLOSED */ /*E17405*/
             RCLRSC                                                   /*E17405*/
/**/
/********  OVRDBF     FILE(ZZEBHH) TOFILE(ZZEBHHH) MBR(ZZEBHHHM00)  *  *S01154*/
/********  OVRDBF     FILE(ZZEBHG) TOFILE(ZZEBHBG) MBR(ZZEBHBGM00)  *  *S01154*/
/********  CALL       PGM(GL0020)                                   *  *S01154*/
/********  DLTOVR     FILE(ZZEBHH ZZEBHG)                           *  *S01154*/
/**/
/********  OVRDBF     FILE(TABLE) TOFILE(TABGL)                     *  *S01154*/
/********  OVRDBF     FILE(TABLED) TOFILE(TABGL) SHARE(*NO)         *  *S01154*/
/********  CHGJOB     SWS(1XXXXXXX)                                 *  *S01154*/
/********  CALL       PGM(GL0040)                                   *  *S01154*/
/********  DLTOVR     FILE(TABLE TABLED)                            *  *S01154*/
/*         CHGJOB     SWS(1XXXXXXX)                                */ /*S01117*/
/*         CHGVAR     VAR(&RTNCODE) VALUE('       ')               */ /*S01117*/
/*         CALL       PGM(GLCVPF) PARM(&RTNCODE &BRCA &SEQ) */        /*S01117*/
/**/
/*/COPY WNCPYSRC,GLC24003                                            */
/************                                               */ /*162541 166020*/
/*******ALCOBJ OBJ((*LIBL/TIJRNENT *DTAARA *EXCLRD)) WAIT(5)*/ /*162541 166020*/
/************MONMSG     MSGID(CPF1002) EXEC(DO)             */ /*162541 166020*/
/************CALL       PGM(TIC0055)                        */ /*162541 166020*/
/************CHGVAR     VAR(&TIDONE) VALUE('YES')           */ /*162541 166020*/
/************ENDDO                                          */ /*162541 166020*/
/************                                               */ /*162541 166020*/
/*******ALCOBJ OBJ((*LIBL/TISHDPST *DTAARA *EXCLRD)) WAIT(5)*/ /*162541 166020*/
/************MONMSG     MSGID(CPF1002) EXEC(DO)             */ /*162541 166020*/
/************IF         COND(&TIDONE *EQ '   ') THEN(DO)    */ /*162541 166020*/
/************CALL       PGM(TIC0055)                        */ /*162541 166020*/
/************ENDDO                                          */ /*162541 166020*/
/************ENDDO                                          */ /*162541 166020*/
/************                                               */ /*162541 166020*/
/* CHECK THAT NO BATCHES ARE HELD */                                  /*BH1019*/
                CALL       PGM(GL0024)                                /*BH1019*/
                RTVJOBA    SWS(&SWS)
                IF         COND(%SUBSTRING(&SWS 8 1) = '0') THEN(DO)
                                                                      /*S01408*/
/*/COPY WNCPYSRC,GLC24MPE                                            */
                                                                      /*S01408*/
 
                   SNDPGMMSG  MSG('General Ledger Termination Successful') +
                              TOMSGQ(MRUNQ)
                ENDDO
/**/
                ELSE       CMD(DO)
/**/
/**/                                                                  /*S01117*/
/*              IF         COND(&RTNCODE = 'Y2U0004') THEN(DO)      */
/*              RTVDTAARA  DTAARA(*LDA (134 50)) RTNVAR(&MSG)       */
/*              SNDPGMMSG  MSGID(GLM0001) MSGF(GLUSRMSG) MSGDTA(&MSG)*/
/*                         TOMSGQ(&JOB MRUNQ)                        */
/*              ENDDO                                                */
/**/                                                                  /*S01117*/
/*                 SNDPGMMSG  MSG('General Ledger Termination +   */  /*E36489*/
/*                             Unsuccessful') TOMSGQ(&JOB MRUNQ)  */  /*E36489*/
/**********        SNDPGMMSG  MSG('General Ledger Termination +
/**********                    Unsuccessful - Some Batches Not Yet +
/**********                    Accepted') TOMSGQ(&JOB MRUNQ)*/ /*E36489 CCB001*/
                   SNDPGMMSG  MSG('General Ledger Termination +
                               Unsuccessful - Some Batches Not Yet +
                               Accepted') TOMSGQ(MRUNQ)               /*CCB001*/
/*****             CLRPFM     FILE(ZZEBHHH) MBR(ZZEBHHHM00)    /*S01117 RT0017*/
/*****             CLRPFM     FILE(ZZEBHBG) MBR(ZZEBHBGM00)    /*S01117 RT0017*/
/* CALL DISPLAY BATCHES INPUT - GLEBDFR                         */    /*S01117*/
/**/                                                                  /*S01117*/
/*           CALL       PGM(GLEBDFR) PARM(&RTNCODE)             */    /*S01117*/
 
/**********        CHGVAR     VAR(&GLERROR) VALUE('Y') */             /*CCB001*/
                   GOTO       CMDLBL(ABNOR)                           /*CCB001*/
/******     SNDPGMMSG  MSG('RE-OPENING INPUT CYCLE') TOMSGQ(&JOB) **/ /*CCB001*/
 
/**/
                ENDDO
/*/COPY WNCPYSRC,GLC24004                                            */
/**/
/*           ENDDO                                            */      /*S01117*/
/**/
/*           ELSE       CMD(DO)                               */      /*S01117*/
/**/
/*              CHGVAR     VAR(&GLERROR) VALUE('Y')           */      /*S01117*/
/*              SNDPGMMSG  MSG('Lists being processed. Retry in 5 minutes') +
/*                         TOMSGQ(&JOB)                       */      /*S01117*/
/*              SNDPGMMSG  MSG('RE-OPENING INPUT CYCLE') TOMSGQ(&JOB)   S01117*/
/**/
/*           ENDDO                                            */      /*S01117*/
/**/
/**********  RCLRSC */                                                /*CCB001*/
                                                                      /*CCB001*/
             GOTO       CMDLBL(END)                                   /*CCB001*/
                                                                      /*CCB001*/
 ABNOR:                                                               /*CCB001*/
                                                                      /*CCB001*/
             CHGJOB     SWS(XXXXXX11)                                 /*CCB001*/
             MONMSG     MSGID(CPF0000 MCH0000)                        /*CCB001*/
                                                                      /*CCB001*/
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          GLC24 ended abnormally - see job log') +
                          TOMSGQ(MOPERQ)                              /*CCB001*/
                                                                      /*CCB001*/
 END:                                                                 /*CCB001*/
/*/COPY WNCPYSRC,GLC24005                                            */
                                                                      /*CCB001*/
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
                                                                      /*CCB001*/
             ENDPGM
