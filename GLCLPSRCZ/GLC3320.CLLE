/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas GL Account balances extract')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC3320 - Midas GL Account Balances Extract                 */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. MD024120           Date 19Aug14              */
/*                      MD002850           Date 08Apr13              */
/*                      CGL120 *REWRITE    Date 06Aug12              */
/*                      CLE025             Date 20Oct03              */
/*                      CSC020             Date 31Mar04              */
/*                      187981             Date 22May01              */
/*                      185118             Date 18OCT00              */
/*                      CCB009             Date 01Jun00              */
/*                      S01408             Date 04May95              */
/*                      S01408             Date 11Apr95              */
/*                      076177             Date 20Oct94              */
/*                      S01413 *CREATE     Date 13Apr93              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       MD024120 - GLC3320 Performance Issues                       */
/*       MD002850 - Correct the processing for restart of subtasks   */
/*                  after failure.                                   */
/*       CGL120 - GL COB Components Task Split                       */
/*       CLE025 - Credit Lines                                       */
/*       CSC020 - Journaling changes for MidasPlus.                  */
/*       187981 - Before creation of journal JGLC3320, end all files */
/*                journalled into it and delete the journal and its  */
/*                journal receiver.                                  */
/*       185118 - Real time postings opened today were appearing on  */
/*                the report twice. Pass correct parameter to GL3320.*/
/*                Applied 158002.                                    */
/*       CCB009 - Journal files throughout close of business         */
/*       S01408 -  CORE HOOK ADDED GLC3320MPS                        */
/*       S01408 -  CORE HOOK ADDED GLC3320MP1                        */
/*              -  CORE HOOK ADDED GLC3320MP2                        */
/*              -  CORE HOOK ADDED GLC3320MP3                        */
/*              -  CORE HOOK ADDED GLC3320MP4                        */
/*              -  CORE HOOK ADDED GLC3320MP5                        */
/*       076177 - Add parameter to call of GL3320.                   */
/*       S01413 - Retail 3 incorporation                             */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&POSTNUM &CNAM &CSEQ)
 
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(50)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&CSEQC) TYPE(*CHAR) LEN(5)
             DCL        VAR(&MEMBER) TYPE(*CHAR) LEN(12)
             DCL        VAR(&DTAQLIBL) TYPE(*CHAR) LEN(10)
/**********  DCL        VAR(&MSGLENGTH) TYPE(*DEC) LEN(5 0) VALUE(50) */                /*MD024120*/
/**********  DCL        VAR(&MSGDATA) TYPE(*CHAR) LEN(50)            */                 /*MD024120*/
/**********  DCL        VAR(&SNDDTAQ) TYPE(*CHAR) LEN(10)            */                 /*MD024120*/
/**********  DCL        VAR(&RCVDTAQ) TYPE(*CHAR) LEN(10)            */                 /*MD024120*/
/**********  DCL        VAR(&RCVWAIT) TYPE(*DEC) LEN(5 0) VALUE(600) */                 /*MD024120*/
             DCL        VAR(&RESTART) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1)
/**********  DCL        VAR(&SNDMSG) TYPE(*CHAR) LEN(1) VALUE('N')   */                 /*MD024120*/
             DCL        VAR(&INDEXFL) TYPE(*CHAR) LEN(10) +
                          VALUE('GLACBIPD')
             DCL        VAR(&POSTNUM) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CURRCD) TYPE(*DEC) LEN(10 0)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2012')
 
/* Global Monitor Message */
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                             CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('GLC3320 - GL Account Posting Merge +
                          started') TOMSGQ(MRUNQ)
 
             IF         COND(&POSTNUM = '3') THEN(DO)
             RTVMBRD    FILE(GEXBPD) NBRCURRCD(&CURRCD)
             IF         COND(&CURRCD = 0) THEN(DO)
             GOTO       CMDLBL(END)
             ENDDO
             ENDDO
 
/* Check if normal run or restart                                  */
 
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
 
/* Check if any problems with COB components file                  */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             CHGVAR     VAR(&RESTART) VALUE(&STAT)
 
/* Set restart status to 'Y'                                       */
 
             CHGVAR     VAR(&STAT) VALUE('Y')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
 
/* Set up call to QSNDDTAQ and override files to their members     */
 
             CHGVAR     VAR(&CSEQC) VALUE(&CSEQ)
             CHGVAR     VAR(&MEMBER) VALUE('ACBAL' *CAT &CSEQC)
/**********  CHGVAR     VAR(&DTAQLIBL) VALUE('*LIBL')              */                   /*MD024120*/
/**********  CHGVAR     VAR(&SNDDTAQ) VALUE('ACBALSERVE')          */                   /*MD024120*/
/**********  CHGVAR     VAR(&RCVDTAQ) VALUE(&MEMBER)               */                   /*MD024120*/
 
             OVRDBF     FILE(GLACBAPD) TOFILE(GLACBAPD) MBR(&MEMBER)
 
             STRCMTCTL  LCKLVL(*CHG) CMTSCOPE(*JOB)
 
/**If*restart*from*component*failed*because*of*no*respond*from********/                 /*MD024120*/
/**server,*so*resend*message*to*Server*and*wait.**********************/                 /*MD024120*/
/*********************************************************************/                 /*MD024120*/
/**********  IF         COND(&RESTART = 'F') THEN(DO)                */                 /*MD024120*/
/**********  GOTO       CMDLBL(LOOP)                                 */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
/*********************************************************************/                 /*MD024120*/
/**If*restart,*not*caused*by*server*do*not*responds,******************/                 /*MD024120*/
/**do*not*wait*for*the*data*queue*entry*******************************/                 /*MD024120*/
/**Clear*any*old*data*queue*message*from*server*but*ensure*that*an****/                 /*MD024120*/
/**'END'*message,*sent*from*the*end*proc*job*is*not*lost**************/                 /*MD024120*/
/*********************************************************************/                 /*MD024120*/
             IF         COND(&RESTART = 'Y') THEN(DO)
/**********  CHGVAR     VAR(&RCVWAIT) VALUE(5)                       */                 /*MD024120*/
/**********  CALL       PGM(QRCVDTAQ) PARM(&MEMBER &DTAQLIBL +       */                 /*MD024120*/
/**********               &MSGLENGTH &MSGDATA &RCVWAIT)              */                 /*MD024120*/
/**********  CHGVAR     VAR(&RCVWAIT) VALUE(600)                     */                 /*MD024120*/
/**********  CHGVAR     VAR(&MSGLENGTH) VALUE(50)                    */                 /*MD024120*/
/**********  IF         COND(%SST(&MSGDATA 1 3) = 'END') THEN(DO)    */                 /*MD024120*/
/**********  CALL       PGM(QSNDDTAQ) PARM(&MEMBER &DTAQLIBL +       */                 /*MD024120*/
/**********               &MSGLENGTH &MSGDATA)                       */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
             GOTO       CMDLBL(RESTART)
             ENDDO
 
/***LOOP:***/                                                                           /*MD024120*/
/*******************************************************************/                   /*MD024120*/
/**Request*response*from*DTAQ*whether*to*run*job*again*or*end*******/                   /*MD024120*/
/*******************************************************************/                   /*MD024120*/
/**********  CHGVAR     VAR(&MSGDATA) VALUE(&MEMBER)               */                   /*MD024120*/
/**********  CALL       PGM(QSNDDTAQ) PARM(&SNDDTAQ &DTAQLIBL +    */                   /*MD024120*/
/**********               &MSGLENGTH &MSGDATA)                     */                   /*MD024120*/
/**********  CHGVAR     VAR(&STAT) VALUE('F')                      */                   /*MD002850*/
/**********  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)        */                   /*MD002850*/
/*******************************************************************/                   /*MD024120*/
/**Wait*on*reply*for*5*minutes**************************************/                   /*MD024120*/
/*******************************************************************/                   /*MD024120*/
/**********  CALL       PGM(QRCVDTAQ) PARM(&MEMBER &DTAQLIBL +     */                   /*MD024120*/
/**********               &MSGLENGTH &MSGDATA &RCVWAIT)            */                   /*MD024120*/
/*******************************************************************/                   /*MD024120*/
/**If*no*reply,*check*if*the*server*is*still*active.****************/                   /*MD024120*/
/**If*Server*is*not*active*then*error*message*and*Terminate*********/                   /*MD024120*/
/**If*Server*is*active,*then*resend*a*message*to*server*************/                   /*MD024120*/
/**If*Server*still*do*not*respond*after*message*send,*then**********/                   /*MD024120*/
/**error*message*and*terminate.*************************************/                   /*MD024120*/
/*********************************************************************/                 /*MD024120*/
/**********  IF         COND(&MSGLENGTH = 0) THEN(DO)                */                 /*MD024120*/
/**********  ALCOBJ     OBJ((&INDEXFL *FILE *EXCL)) WAIT(0)          */                 /*MD024120*/
/**********  MONMSG     MSGID(CPF1002) EXEC(DO)                      */                 /*MD024120*/
/**********  IF         COND(&SNDMSG *EQ 'Y') THEN(DO)               */                 /*MD024120*/
/**********  CHGVAR     VAR(&STAT) VALUE('F')                        */        /*MD002850 MD024120*/
/**********  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)          */        /*MD002850 MD024120*/
/**********  SNDPGMMSG  MSG('No response from server for GLC3320') + */                 /*MD024120*/
/**********               TOMSGQ(MOPERQ MRUNQ)                       */                 /*MD024120*/
/**********  GOTO       CMDLBL(ABNOR)                                */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
/**********  ELSE       CMD(DO)                                      */                 /*MD024120*/
/**********  CHGVAR     VAR(&SNDMSG) VALUE('Y')                      */                 /*MD024120*/
/**********  GOTO       CMDLBL(LOOP)                                 */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
/**********                                                          */        /*MD002850 MD024120*/
/**********  CHGVAR     VAR(&STAT) VALUE('F')                        */        /*MD002850 MD024120*/
/**********  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)          */        /*MD002850 MD024120*/
/**********  SNDPGMMSG  MSG('Server for GLC3320 not active') +       */                 /*MD024120*/
/**********               TOMSGQ(MOPERQ MRUNQ)                       */                 /*MD024120*/
/**********  GOTO       CMDLBL(ABNOR)                                */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
/*********************************************************************/                 /*MD024120*/
/**If*reply*=*END,*terminate******************************************/                 /*MD024120*/
/*********************************************************************/                 /*MD024120*/
/**********  IF         COND(%SST(&MSGDATA 1 3) = 'END') THEN(DO)    */                 /*MD024120*/
/**********  CHGVAR     VAR(&STAT) VALUE('N')                        */                 /*MD024120*/
/**********  CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)          */                 /*MD024120*/
/**********  GOTO       CMDLBL(END)                                  */                 /*MD024120*/
/**********  ENDDO                                                   */                 /*MD024120*/
 
RESTART:
 
             CALL       PGM(GLC3320A) PARM(&POSTNUM &MEMBER &CNAM +
                          &CSEQ)
 
/* Sucessful Completion                                            */
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             CHGVAR     VAR(&RESTART) VALUE('N')
             CLRPFM     FILE(GLACBAPD) MBR(&MEMBER)
/**********  GOTO       CMDLBL(LOOP)                                 */                 /*MD024120*/
             GOTO       CMDLBL(END)                                                     /*MD024120*/
             ENDDO
 
/* Unsuccessful Completion - Remove Changes                        */
 
             ELSE       CMD(DO)
             ROLLBACK
             ENDCMTCTL
 
/* File out of Balance                                             */
 
             IF         COND(%SWITCH(XXXXXXX1)) THEN(DO)
             SNDPGMMSG  MSG('DATABASE ERROR - GL3320') TOMSGQ(MOPERQ)
             ENDDO
 
/* Database Error                                                  */
 
             IF         COND(%SWITCH(XXXXXX1X)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&ERROR)
             SNDPGMMSG  MSGID(MEM0001) MSGF(REUSRMSG) MSGDTA(&ERROR) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             SNDPGMMSG  MSG('DATABASE IN ERROR - GL3320') +
                          TOMSGQ(MOPERQ)
             ENDDO
             ENDDO
 
ABNOR:
             SNDPGMMSG  MSG('Program GLC3320 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
 
END:
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('N')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             ENDDO
 
             DLTOVR     FILE(*ALL)
 
             ENDCMTCTL
             MONMSG     MSGID(CPF0000)
             RETURN
             ENDPGM
