/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    DFTACTGRP(*NO) ACTGRP(GLC33202)                             */
/*EXI    TEXT('Midas GL Balance Statements - ABEXAGE')               */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC33202 - GL Account Balance Extract - ABEXAGE             */
/*                                                                   */
/*       (c) Misys Banking Systems Ltd. 2012                         */
/*                                                                   */
/*       Last Amend No. MD037383           Date 25May16              */
/*       Prev Amend No. CGL120  *CREATE    Date 06Aug12              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       MD037383 - ACCNTAB blank after COB component GLC008140 00001*/
/*                  Stamp Tax (CER049) processing.                   */
/*                  Rework that component to make it 'Task Split'    */
/*                  compliant.                                       */
/*       CGL120 - GL COB Components Task Split                       */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&POSTNUM &CNAM &CSEQ)
 
/* Declare file and variables                                      */
 
             DCL        VAR(&POSTNUM) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&WKSEQ) TYPE(*CHAR) LEN(5)
             DCL        VAR(&CURN) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&GLSTAT) TYPE(*CHAR) LEN(257)
             DCL        VAR(&POST) TYPE(*DEC) LEN(2 0)
             DCL        VAR(&ACJND) TYPE(*CHAR) LEN(6)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems +
                          Ltd. 2012')
 
/* Global monitor message                                          */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Send message to MRUNQ                                           */
 
             SNDPGMMSG  MSG('GLC33202 - Balance Statements - ABEXAGE') +
                          TOMSGQ(MRUNQ)
 
/* Set Job switches                                                */
 
             CHGJOB     SWS(00000000)
 
             STRCMTCTL  LCKLVL(*CHG) CMTSCOPE(*JOB)
             MONMSG     MSGID(CPF8351)
 
/* Clear work file                                                 */
 
             CLRPFM     FILE(ABEXAGE)
 
/* Determine sequence number from the task split sequence which    */
/* has 0100x where X is task #                                     */
 
             CHGVAR     VAR(&WKSEQ) VALUE(&CSEQ)
 
             RTVMBRD    FILE(GEXBPD) NBRCURRCD(&CURN)
             IF         COND(&POSTNUM = '3' *AND &CURN = 0) THEN(DO)
             GOTO       CMDLBL(END)
             ENDDO
 
/* Check if post is blank: COB Seq 00001,01000x,02000x             */
/* Daily or Acruals                                                */
 
/**********  IF         COND(&POSTNUM *EQ ' ') THEN(DO) */                              /*MD037383*/
             IF         COND((&POSTNUM *EQ ' ') *OR (&CSEQ = 00010)) THEN(DO)           /*MD037383*/
 
/* COB 00001,01000x,02000x: Daily or Acruals:                      */
/* Check if Sequence is 01 (daily)                                 */
 
                IF         COND((%SST(&WKSEQ 1 2) *EQ '01') *OR (&CSEQ +
                             = 00001) *OR (&CSEQ = 00010)) THEN(DO)                     /*MD037383*/
/**********                  = 00001)) THEN(DO) */                                      /*MD037383*/
 
/* Sequence is 00001 (daily): Call Acc bal GL daily normal day     */
 
                OVRDBF     FILE(ABEXAGE) OVRSCOPE(*JOB) SEQONLY(*YES 100)
                CALL       PGM(GL33202) PARM('1')
                DLTOVR     FILE(ABEXAGE) LVL(*JOB)
                ENDDO
 
                ELSE       CMD(DO)
 
/* Sequence is 00002: Acrruals Next working day is a NWD:          */
/* Call Acc bal GL daily                                           */
 
                OVRDBF     FILE(ABEXAGE) OVRSCOPE(*JOB) SEQONLY(*YES 100)
                OVRDBF     FILE(GLACBTL1) TOFILE(ACBRC) OVRSCOPE(*JOB) +
                             SHARE(*YES) SEQONLY(*YES 500)
                OPNQRYF    FILE((ACBRC)) FORMAT(GLACBTL1) KEYFLD(*FILE)
                CALL       PGM(GL33202) PARM(' ')
                CLOF       OPNID(ACBRC)
                DLTOVR     FILE(GLACBTL1) LVL(*JOB)
                DLTOVR     FILE(ABEXAGE) LVL(*JOB)
                ENDDO
             ENDDO
 
             ELSE       CMD(DO)
 
/* Sequence is 00003,00004,00005,00006,00007:                      */
/* Call Acc bal GL daily with the POST number 1-5                  */
 
                OVRDBF     FILE(ABEXAGE) OVRSCOPE(*JOB) SEQONLY(*YES 100)
                CHGVAR     VAR(&ACJND) VALUE('ACJND' *CAT &POSTNUM)
                OVRDBF     FILE(ACJND4) TOFILE(&ACJND) OVRSCOPE(*JOB) +
                             SHARE(*YES) SEQONLY(*YES 500)
                CALL       PGM(GL33203) PARM(&POSTNUM)
                DLTOVR     FILE(ACJND4) LVL(*JOB)
                DLTOVR     FILE(ABEXAGE) LVL(*JOB)
             ENDDO
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             COMMIT
             GOTO       CMDLBL(END)
             ENDDO
 
             GOTO       CMDLBL(END)
 
 ABNOR:
             ROLLBACK
             SNDPGMMSG  MSG('Program GLC33202 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
 
 END:
             ENDCMTCTL
             MONMSG     MSGID(CPF0000)
             ENDPGM
