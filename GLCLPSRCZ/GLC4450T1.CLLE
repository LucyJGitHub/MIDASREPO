/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas GL A/C Postings Hist Purge -Start Task Split')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger                                      */
/*                                                                   */
/*       GLC4450T1 - Midas GL Account Postings History Purge -       */
/*                   Start Task Split                                */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. MD044909           Date 10Jan17              */
/*                      MD033115           Date 11Sep15              */
/*                      CGL127AY *CREATE   Date 06Aug12              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       MD044909 - Allocate GLACPHL to prevent GLC4450 starting     */
/*                 whilst system is updating access path.            */
/*       MD033115 - GLC4450 fails. preventive fix to avoid using     */
/*                  same record in GLACPHPD.                         */
/*                  Applied for MD038076.                            */
/*       CGL127AY - COB Restructure - GL COB Optimisation Phase 1    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)
 
             DCL        VAR(&CNAME) TYPE(*CHAR) LEN(10) +
                          VALUE('GLC4450   ')
             DCL        VAR(&DRIVER) TYPE(*CHAR) LEN(10) +
                          VALUE(GLACHDPD)
             DCL        VAR(&AUDITFL) TYPE(*CHAR) LEN(10) +
                          VALUE(GLACHPZZ)
             DCL        VAR(&NAME1) TYPE(*CHAR) LEN(5) VALUE('ACPHP')
             DCL        VAR(&RCVDTAQ) TYPE(*CHAR) LEN(10) +
                          VALUE(ACPHPSERVE)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DTAQLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MEMBER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NAME2_C) TYPE(*CHAR) LEN(5) VALUE('00001')
             DCL        VAR(&NAME2_N) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&LOOP) TYPE(*DEC) LEN(3 0) VALUE(1)
             DCL        VAR(&GLCDLY) TYPE(*DEC) LEN(5)                                  /*MD044909*/
             DCL        VAR(&PRTCD) TYPE(*CHAR) LEN(7) VALUE('       +
                          ')                                                            /*MD044909*/
             DCL        VAR(&POP01) TYPE(*CHAR) LEN(20) +
                          VALUE('GlacDelayTime')                                        /*MD044909*/
             DCL        VAR(&POP02) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP03) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP04) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP05) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP06) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP07) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP08) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP09) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&POP10) TYPE(*CHAR) LEN(20)                                 /*MD044909*/
             DCL        VAR(&PVL01) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL02) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL03) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL04) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL05) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL06) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL07) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL08) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL09) TYPE(*CHAR) LEN(200)                                /*MD044909*/
             DCL        VAR(&PVL10) TYPE(*CHAR) LEN(200)                                /*MD044909*/
 
             DCLF       FILE(CBCMPNLC)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2012')
 
/* Global monitor message. */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Send message to MRUNQ. */
 
             SNDPGMMSG  MSG('GLC4450T1 - Midas GL Account Postings +
                          History Purge - Start Task Split') +
                          TOMSGQ(MRUNQ)
 
/* Determine full DTAQLIB library name. */
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(&DTAQLIB) VALUE(&SYSID *CAT 'DPLIB')
 
/* Clear Audit file. */
 
             CLRPFM     FILE(&AUDITFL)
 
/* Build GLACHMPD */
 
/**********  SCRUNSQL   SQL('INSERT INTO GLACHMPD (ACOD, NOHP) +      */                /*MD033115*/
/**********               SELECT DISTINCT ACOD, COUNT (ACOD) FROM +   */                /*MD033115*/
/**********               GLACPHPD GROUP BY ACOD')                    */                /*MD033115*/
 
             SCRUNSQL   SQL('INSERT INTO GLACHMPD (ACOD, NOHP) +
                          SELECT DISTINCT ACOD, COUNT (ACOD) FROM +
                          GLACPHPD GROUP BY ACOD ORDER BY ACOD')                        /*MD033115*/
/* Remove all members from driving file. */
 
             RMVM       FILE(&DRIVER) MBR(*ALL)
             MONMSG     MSGID(CPF7301 CPF7303)
 
/* Clear main data queue. */
 
             CALL       PGM(QCLRDTAQ) PARM(&RCVDTAQ  '*LIBL')
 
/* Retrieve number of sub-tasks. */
 
 CHAIN:
             RCVF
             CHGVAR     VAR(&NAME2_N) VALUE(&DHCSEQ)
             IF         COND((&DHCOTT *NE &CNAME) *OR (&NAME2_N *NE +
                          &CSEQ)) THEN(DO)
                GOTO       CMDLBL(CHAIN)
             ENDDO
 
/* Add all members and create data queues. */
 
             CHGVAR     VAR(&NAME2_C) VALUE(&DHCSEQ)
 LOOP:
             IF         COND(&LOOP *GT &DHTSNO) THEN(DO)
                GOTO       CMDLBL(START)
             ENDDO
 
             CHGVAR     VAR(&MEMBER) VALUE(&NAME1 *CAT &NAME2_C)
             ADDPFM     FILE(&DRIVER) MBR(&MEMBER)
 
/* Create data queue if it doesn't already exist */
/* and set authorities. */
 
             CHKOBJ     OBJ(&DTAQLIB/&MEMBER) OBJTYPE(*DTAQ)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CRTDTAQ    DTAQ(&DTAQLIB/&MEMBER) MAXLEN(50)
             ENDDO
             CALL       PGM(QCLRDTAQ) PARM(&MEMBER &DTAQLIB)
 
             IF         COND(&LOOP *EQ 1) THEN(DO)
                   CHGVAR     VAR(&NAME2_N) VALUE(01000)
                   CHGVAR     VAR(&NAME2_N) VALUE(&NAME2_N * &CSEQ)
             ENDDO
 
             CHGVAR     VAR(&LOOP) VALUE(&LOOP + 1)
             CHGVAR     VAR(&NAME2_N) VALUE(&NAME2_N + 1)
             CHGVAR     VAR(&NAME2_C) VALUE(&NAME2_N)
             GOTO       CMDLBL(LOOP)
 
 START:
 
 
/**/                                                                                    /*MD044909*/
/* Check if the current setting of 'Time Allocation for GLACPHL'             */         /*MD044909*/
/**/                                                                                    /*MD044909*/
             CALL       PGM(AOSVALR0) PARM(&PRTCD &POP01 &PVL01 +
                          &POP02 &PVL02 &POP03 &PVL03 &POP04 &PVL04 +
                          &POP05 &PVL05 &POP06 &PVL06 &POP07 &PVL07 +
                          &POP08 &PVL08 &POP09 &PVL09 &POP10 &PVL10)                    /*MD044909*/
             IF         COND(&PRTCD *EQ '       ') THEN(DO)                             /*MD044909*/
               CHGVAR     VAR(&GLCDLY) VALUE(%SUBSTRING(&PVL01 1 5))                    /*MD044909*/
             ENDDO                                                                      /*MD044909*/
             ELSE       CMD(DO)                                                         /*MD044909*/
               SNDPGMMSG  MSG('Database Error in File SDSVALPD, Key +
                          GlacDelayTime') TOMSGQ(MRUNQ)                                 /*MD044909*/
               GOTO       CMDLBL(END)                                                   /*MD044909*/
             ENDDO                                                                      /*MD044909*/
 
/* Allocate GLACPHL to ensure access paths rebuilt before GLC4450* continues  */        /*MD044909*/
                                                                                        /*MD044909*/
             ALCOBJ     OBJ((GLACPHL *FILE *EXCL)) WAIT(&GLCDLY)                        /*MD044909*/
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ABNOR))                         /*MD044909*/
             DLCOBJ     OBJ((GLACPHL *FILE *EXCL))                                      /*MD044909*/
             MONMSG     MSGID(CPF0000)                                                  /*MD044909*/
                                                                                        /*MD044909*/
             GOTO       CMDLBL(END)
 
 ABNOR:      SNDPGMMSG  MSG('Program GLC4450T1 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
 
 END:
             ENDPGM
