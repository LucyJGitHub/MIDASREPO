/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas GL Stamp Tax REIACD process')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC6623 - Midas GL Stamp Tax REIACD process                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2016           */
/*                                                                   */
/*       Last Amend No. MD040278 *Create   Date 18Aug16              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD040278 - Stamp Tax A/C Keys (GLC008131) is not task split.*/
/*                  Complete rework of the component to allow task   */
/*                  split.                                           */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)

             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(50)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&CSEQC) TYPE(*CHAR) LEN(5)
             DCL        VAR(&MEMBER) TYPE(*CHAR) LEN(12)
             DCL        VAR(&DTAQLIBL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RESTART) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1)
             DCL        VAR(&INDEXFL) TYPE(*CHAR) LEN(10) +
                          VALUE('REIIIXPD')
             DCL        VAR(&CURRCD) TYPE(*DEC) LEN(10 0)

             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2016')

/* Global Monitor Message */

             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                             CMDLBL(ABNOR))

             SNDPGMMSG  MSG('GLC6623 - GL Stamp Tax REIACD    +
                          started') TOMSGQ(MRUNQ)


/* Check if normal run or restart                                  */

             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)

/* Check if any problems with COB components file                  */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             GOTO       CMDLBL(ABNOR)
             ENDDO

             CHGVAR     VAR(&RESTART) VALUE(&STAT)

/* Set restart status to 'Y'                                       */

             CHGVAR     VAR(&STAT) VALUE('Y')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)

/* Set up call to QSNDDTAQ and override files to their members     */

             CHGVAR     VAR(&CSEQC) VALUE(&CSEQ)
             CHGVAR     VAR(&MEMBER) VALUE('REIA' *TCAT &CSEQC)

             OVRDBF     FILE(REIADRPD) TOFILE(REIADRPD) MBR(&MEMBER)

             STRCMTCTL  LCKLVL(*CHG) CMTSCOPE(*JOB)

             GOTO       CMDLBL(RESTART)


RESTART:

             CALL       PGM(GL008131) PARM('3')

/* Sucessful Completion                                            */

             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             CHGVAR     VAR(&RESTART) VALUE('N')
             COMMIT
             CLRPFM     FILE(REIADRPD) MBR(&MEMBER)
             GOTO       CMDLBL(END)
             ENDDO

/* Unsuccessful Completion - Remove Changes                        */

             ELSE       CMD(DO)
             ROLLBACK
             ENDCMTCTL

/* File out of Balance                                             */

             IF         COND(%SWITCH(XXXXXXX1)) THEN(DO)
             SNDPGMMSG  MSG('DATABASE ERROR - GLC6623') TOMSGQ(MOPERQ)
             ENDDO

/* Database Error                                                  */

             IF         COND(%SWITCH(XXXXXX1X)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&ERROR)
             SNDPGMMSG  MSGID(MEM0001) MSGF(REUSRMSG) MSGDTA(&ERROR) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             SNDPGMMSG  MSG('DATABASE IN ERROR - GL6623') +
                          TOMSGQ(MOPERQ)
             ENDDO
             ENDDO

ABNOR:
             SNDPGMMSG  MSG('Program GLC6623 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)

END:
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
             CHGVAR     VAR(&STAT) VALUE('N')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             ENDDO

             DLTOVR     FILE(*ALL)

             ENDCMTCTL
             MONMSG     MSGID(CPF0000)
             RETURN
             ENDPGM
