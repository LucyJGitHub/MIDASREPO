     H            Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas Journal Entries Overall/CCY Totals')
     H/TITLE Midas Journal Entries Overall/CCY Totals
     Z* CRTRPGPGM
     Z* IGNDECERR(*YES)
      *
     H* SYNOPSIS :
     H* - Print report of file contents.
     H* Generated by  : Synon/2  Version:  8646
     H* Function type : Print file  Version:   0.1
      *
     H*  Company :
     H* System     : General Ledger Synon Model
     H* User name  : F7387SY
     H* Date       : 02/01/91 time: 16:48:06
      *  (c) Finastra International Limited 2001                      *
     H*
      *================================================================
     M* Maintenance   :
     F********************************************************************
     F*                                                                  *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 S01340             Date 24Feb92               *
     F*                 LN0959             Date 02JAN91               *
     F*                                                                  *
     F********************************************************************
     F*                                                                  *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
     F*     S01340 - RECOMPILED FOR MIS RELEASE 10                       *
     F*     LN0959 - FCSFNOPD WAS BEING UPDATED INCORRECTLY              *
     F*                                                                  *
     F********************************************************************
     F/COPY WNCPYSRC,GL0113PFPG
     FGLJENSL6IF  E           K        DISK
      * RSQ: Journal Entry Summary     Currency Order
      *
     FGLJENHL1IF  E           K        DISK
      * RTV: Midas GL Journal Entry Header LF Rtv
      *
     FGL0113PMO   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Midas Journal Entries Overall/CCY Totals
      *
     E                    CPY@    1   1 80               Copyright     array
     E/COPY WNCPYSRC,GL0113PEPG
     E                    @CN     1   4 25               Long constants.
     I*   Define MIDAS Rundate from data-area RUNDAT
     I*
     I*
     I*
     I*
     I*
     I*
     I*00/Copy Member GL0113P   Initialise Program
     I/COPY WNCPYSRC,GL0113PIPG
      /EJECT
      * Data structures:-
     IPGMDS     ESDSY2PGDSP
      * Program data structure.
     IJBDTTM      DS
      * Job date/time.
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure.
      *
     I            DS
     I                                        1   30ULVAL2
     I                                        1   99ULVALD
      * Set up parameters :
     IA@CPY       DS
      * Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNO
     I                                       11  11 SUCP
     I                                       12  12 DTFF
     I                                       13  13 MBIN
     I*
     IUUFDY     E DSDSFDY
     I*
     I* 200 Byte Data Structure for Incoming Data from Access Program
     I*
     IUUSDY     E DSDSSDY
     I*
     I* 800 Byte Data Structure for Incoming Data from Access Program
     I*
     ID@BRCH    E DSSDBRCHPD
     I*
     I*  Branch Codes DS for assigning data from Access
     I*  Programs to work fields
     I*
     IP@BJRF    E DSSDBANKPD
     I* @BTREE4 - BANK RECORD FORMAT DATA STRUCTURE
     I*
     ID@CURR    E DSSDCURRPD
     I*
     I*  Currency Codes DS for assigning data from Access
     I*  Programs to work fields
     I*
      /EJECT
      * Parameter declarations.
     IP1PARM      DS
      * I:    RCF Sequence Number
     I                                        1   5 P1RSQN
      /EJECT
      *****************************************************************
     C           *ENTRY    PLIST                           Entry parameter
     C                     PARM           P0RTN   7        Return code
     C           P1RSQN    PARM           WP0001  5        RCF Sequence Nu
      *****************************************************************
      * Initialise
     C                     EXSR ZZINIT
      *
      * Clear overflow indicator.
     C                     SETOF                     97
      * Establish starting position.
     C           *LOVAL    SETLL@JENSCP                    *
      * Read first record with user selection.
     C                     EXSR GARDRC
      * Print null report headings.
     C           W0EOF     IFEQ '1'
     C                     WRITEZZPAGHDR
      * USER: Null report processing
      * 00/Copy Member GL0113PNRP - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Null Report Processing
     C/COPY WNCPYSRC,GL0113PNRP
     C                     WRITEZZENDRPT
     C                     ELSE
      * Request all headings.
     C                     MOVEL'Y'       L0      1        Page headings
     C                     MOVEL'Y'       L1      1        Currency code
      * Initialise final totals.
     C                     MOVEL*BLANK    ZTCON            *CON (Screen co
     C                     MOVEL*BLANK    ZTFMAM           Formatted amoun
     C                     Z-ADD*ZERO     ZTICLP           Items Calculate
     C                     Z-ADD*ZERO     ZTNOIB           No of Items in
      * Print report body.
     C           W0EOF     DOWEQ'0'
      * Print headings.
     C                     EXSR BAPRHD
      * Print report detail line.
     C                     EXSR CAPRDT
      * Hold current values.
     C           *LIKE     DEFN BSCYCD    WZCYCD           Currency code
     C                     MOVELBSCYCD    WZCYCD
      * Read next record with user selection.
     C                     EXSR GARDRC
      * Determine level changes.
     C                     EXSR DALVCH
      * Print totals.
     C                     EXSR EAPRTT
      * Process necessary heading requests
     C                     EXSR FASGHD
     C                     END
     C                     WRITEZZENDRPT
     C                     END
      * Exit program.
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *****************************************************************
      /EJECT
     CSR         BAPRHD    BEGSR
      *================================================================
      * Print report Headers.
      *================================================================
     C           L0        IFEQ 'Y'
     C                     WRITEZZPAGHDR
     C                     END
      *
     C           L1        IFEQ 'Y'
      * Load related total format.
     C                     MOVELBSCYCD    Z2CYCD           Currency code
     C                     MOVEL*BLANK    Z2FMDR           Formatted Debit
     C                     MOVEL*BLANK    Z2FMCR           Formatted Credi
     C                     MOVEL*BLANK    Z2FMDF           Formatted Diffe
     C                     END
      *
     C           L1        IFNE *BLANK
      * User: Process Currency code headings.
      * Access Currency. - Currency Codes  *
     C*
     C*  Access Currency codes file for the following fields
     C*  Currency Name, Number of decimal places, Nostro Shortname
     C*
     C                     MOVELBSCYCD    UUCYCD
     C                     CALL 'AOCURRR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        B:Return Cd
     C                     PARM @CN,01    UUAPOP  7        I:Option
     C                     PARM           UUCYCD  3        I:Currency Code
     C           D@CURR    PARM *BLANK    UUSDY            O:Format
     C*
     C* Assign work field to file field values.
     C*
     C                     MOVELA6CYCD    WUCYCD           Currency Code
     C                     MOVELA6CYNM    WUCYNM           Currency Name
     C                     MOVELA6NBDP    WUNBDP           No. Decimal Places
     C                     MOVELA6NOSN    WUNOSN           Nostro Shortname
     C*
     C                     Z-ADD*ZERO     WUDBTT           Debit total
     C                     Z-ADD*ZERO     WUCRTT           Credit total
      * 00/Copy Member GL0113PLH0 - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Print Level Heading 0
     C/COPY WNCPYSRC,GL0113PLH0
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         CAPRDT    BEGSR
      *================================================================
      * Print report detail line.
      *================================================================
      * Load detail line.
     C                     MOVELBSBTNB    XRBTNB           Batch number
     C                     MOVELBSCYCD    XRCYCD           Currency code
     C                     MOVELBSBRCD    XRBRCD           Branch code
     C                     Z-ADDBSDBTT    XRDBTT           Debit total
     C                     Z-ADDBSCRTT    XRCRTT           Credit total
      * USER: Process detail record
     C                     ADD  BSDBTT    WUDBTT           Debit total
     C                     ADD  BSCRTT    WUCRTT           Credit total
      * 00/Copy Member GL0113PPDR - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Process Detail Record
     C/COPY WNCPYSRC,GL0113PPDR
      * Mention output formats.
     C   99N99             WRITEZZDTLRCD
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DALVCH    BEGSR
      *================================================================
      * Detect level changes.
      *================================================================
      * Clear all level breaks.
     C                     MOVEL*BLANK    L0               Page headings
     C                     MOVEL*BLANK    L1               Currency code
      * Clear heading length to print.
     C                     Z-ADD*ZERO     @$HDL
      *
      * End of file - Signal all level breaks.
     C           W0EOF     IFEQ '1'
     C                     MOVEL'Y'       L1
     C                     ELSE
     C           BSCYCD    IFNE WZCYCD                     Currency code
      * Set on level break indicator.
     C                     MOVEL'Y'       L1
     C                     END
     C                     END
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         EAPRTT    BEGSR
      *================================================================
      * Print report Totals.
      *================================================================
      * Print level break totals as required
     C           L1        IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * User: Process Currency code totals.
     C           WUDBTT    SUB  WUCRTT    WUCDTN           Currency Diff T
      * Format Amount - Standard functions  *
     C                     CALL 'GL0135U'              90  Format Amount
     C                     PARM WUDBTT    WQ0001 150       Value
     C                     PARM WUNBDP    WQ0002  10       Decimal places
     C                     PARM @CN,02    WQ0003  1        Edit code
     C                     PARM *BLANK    WQ0004  1        Cheque protect
     C           Z2FMDR    PARM *BLANK    WQ0005 23        Formatted amoun
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
      * Format Amount - Standard functions  *
     C                     CALL 'GL0135U'              90  Format Amount
     C                     PARM WUCRTT    WQ0006 150       Value
     C                     PARM WUNBDP    WQ0007  10       Decimal places
     C                     PARM @CN,02    WQ0008  1        Edit code
     C                     PARM *BLANK    WQ0009  1        Cheque protect
     C           Z2FMCR    PARM *BLANK    WQ0010 23        Formatted amoun
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
      * Format Amount - Standard functions  *
     C                     CALL 'GL0135U'              90  Format Amount
     C                     PARM WUCDTN    WQ0011 150       Value
     C                     PARM WUNBDP    WQ0012  10       Decimal places
     C                     PARM @CN,02    WQ0013  1        Edit code
     C                     PARM *BLANK    WQ0014  1        Cheque protect
     C           Z2FMDF    PARM *BLANK    WQ0015 23        Formatted amoun
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C                     ADD  WUDBTT    WUCTDF           Currency Total
     C                     ADD  WUCRTT    WUCTDF           Currency Total
      * Is it end of file - Journal Entry Summary  *
     C           W0EOF     IFEQ '1'
     C                     MOVE 'Y'       WUENDF
     C                     ELSE
     C                     MOVE 'N'       WUENDF
     C                     END
      *CASE:     WRK.End of File is End of File
     C           WUENDF    IFEQ @CN,03                     *IF
      * Retrieve all Batches - Journal Entry Header  *
     C                     EXSR SARVGN
      * Hash numeric to character - Standard functions  *
     C                     Z-ADDWUHICC    ULVALI           Integer portion
     C                     Z-ADD*ZERO     ULVALD           Set Decimal
     C                     Z-ADDWUHDCC    ULVAL2           Decimal portion
      *
     C                     CALL 'GL0138U'              90  <FORMAT AMOUNT>
     C                     PARM           ULVALI 150       I:Integer
     C                     PARM ULVALD    ULVAL3  99       I:Decimal
     C                     PARM 3         ULDECP  10       I:Decimal place
     C                     PARM @CN,04    ULEDIT  1        I:IBM Edit code
     C                     PARM *BLANK    ULCHQP  1        I:Cheque prtct.
     C                     PARM           ULRSLT 32        O:Formatted
      *
     C                     MOVE ULRSLT    ZTFMAM           Formatted data
      *
     C                     END                             *FI
      * 00/Copy Member GL0113PLT0 - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Print Level Total 0
     C/COPY WNCPYSRC,GL0113PLT0
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:-
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal artificial overflow.
     C                     SETON                     97
      * Print page headers.
     C                     WRITEZZPAGHDR
     C                     END
      * Print format.
     C                     WRITEZ2KEYTTL
     C                     END
     C                     END
      *
      * End of file - Print final totals.
     C           W0EOF     IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: Process End of Report
      * 00/Copy Member GL0113PPER - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Process End Of Report
     C/COPY WNCPYSRC,GL0113PPER
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:-
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 9
      * Signal artificial overflow.
     C                     SETON                     97
      * Print page headers.
     C                     WRITEZZPAGHDR
     C                     END
      * Print format.
     C                     WRITEZZFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         FASGHD    BEGSR
      *================================================================
      * Signal required header formats.
      *================================================================
      * Cascade skip to new page requests upwards.
      *
      * Overflow detected.
     C           *IN97     IFEQ '1'
      * Request page headings.
     C                     MOVEL'Y'       L0
      * Request all formats which print on overflow.
     C                     SETOF                     97
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GARDRC    BEGSR
      *================================================================
      * Read next record with user selection.
      *================================================================
     C           W0RSL     DOUEQ'Y'
     C                     READ @JENSCP                  90*
     C                     MOVEL*IN90     W0EOF   1
      * Quit if no record read.
     C           W0EOF     CABEQ'1'       GAEXIT
      * Select record unless user action states otherwise.
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * 00/Copy Member GL0113PRSP - Journal Entry Summary  *
     C*00/Copy Member GL0113P   Record Selection Proc.
     C/COPY WNCPYSRC,GL0113PRSP
     C                     END
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Retrieve all Batches - Journal Entry Header  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialise routine
     C                     Z-ADD*ZERO     ZTICLP           Items Calculate
     C                     Z-ADD*ZERO     ZTNOIB           No of Items in
      * Define Keylist.
     C           KPSSA     KLIST
     C                     KFLD           BRBTNB           Batch number
      * Move fields to key list.
     C                     MOVEL*BLANK    BRBTNB           Batch number
     C           KPSSA     SETLL@BRREAH                    *
     C                     READ @BRREAH                  90*
      * DBF Record not found.
     C   90                MOVEL'GLX0172' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process DBF record
     C                     ADD  1         ZTICLP           Items Calculate
     C                     ADD  BRHINC    ZTNOIB           No of Items in
     C                     ADD  BRHDCC    WURTFD           Running Total f
      *CASE:     WRK.Running Total for Decimal is Greater or equal 1000
     C           WURTFD    IFGE 1000                       *IF
     C                     ADD  1         WUHICC           Hash integer ca
     C                     SUB  1000      WURTFD           Running Total f
     C                     END                             *FI
     C                     ADD  BRHICC    WUHICC           Hash integer ca
     C                     READ @BRREAH                  90*
     C                     END
      * USER: Exit processing
     C                     Z-ADDWURTFD    WUHDCC           Hash decimal ca
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct.
      *================================================================
      * Terminate program.
     C                     SETON                     LR
      *
      * Exit program.
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation.
      *================================================================
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
      * Setup job date/time.
     C                     Z-ADDUDATE     ##JDT            Job date.
     C                     TIME           ##JTM            Job time.
     C                     TIME           ##TME   60       Screen time.
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Define work field Currency code
     C                     MOVEL*BLANK    WUCYCD  3
      * Define work field Currency Name
     C                     MOVEL*BLANK    WUCYNM 14
      * Define work field Number of Decimal Places
     C                     Z-ADD*ZERO     WUNBDP  10
      * Define work field Nostro Shortname
     C                     MOVEL*BLANK    WUNOSN 10
      * Define work field Debit total
     C                     Z-ADD*ZERO     WUDBTT 150
      * Define work field Credit total
     C                     Z-ADD*ZERO     WUCRTT 150
      * Define work field Currency Diff Total (GL)
     C                     Z-ADD*ZERO     WUCDTN 150
      * Define work field Currency Total difference
     C                     Z-ADD*ZERO     WUCTDF 150
      * Define work field End of File
     C                     MOVEL*BLANK    WUENDF  1
      * Define work field Hash decimal calculated
     C                     Z-ADD*ZERO     WUHDCC  30
      * Define work field Hash integer calculated
     C                     Z-ADD*ZERO     WUHICC 150
      * Define work field Running Total for Decimal
     C                     Z-ADD*ZERO     WURTFD  40
      * Define work field Midas Rundate
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Runday Number
     C                     Z-ADD*ZERO     WURDNO  50
      * Define work field Setup Complete
     C                     MOVEL*BLANK    WUSUCP  1
      * Define work field Date Format flag
     C                     MOVEL*BLANK    WUDTFF  1
      * Define work field Multibranching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Spool File Name
     C                     MOVEL*BLANK    WUSFNM 10
      * Define work field Spool File Number
     C                     Z-ADD*ZERO     WUSFNB  60
      * Define work field ZSFile Error
     C                     MOVEL*BLANK    WUZSER  1
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
      * Adjust page length and overflow as necessary.
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * USER: Initialise program
      * Standard RPG Creation Par - Standard functions  *
      * Copyright notice - Standard functions  *
      * Access Midas rundate - Standard functions  *
     C*   Access MIDAS Rundate from data-area RUNDAT
     C*
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT
     C                     MOVE RDNO      WURDNO
     C                     MOVE SUCP      WUSUCP
     C                     MOVE DTFF      WUDTFF
     C                     MOVE MBIN      WUMBIN
      * access bank title - Standard functions  *
      *                                                                   S01117
      *****P@BJRF    E DSSDBANKPD                                         S01117
      * @BTREE4 - BANK RECORD FORMAT DATA STRUCTURE                       S01117
      *                                                                   S01117
     C                     CALL 'AOBANKR0'
     C                     PARM           P@RTCD  7        B:Return code
     C*********************PARM '*KEY'    P@OPTN  7        I:Option       S01117
     C                     PARM '*FIRST'  P@OPTN  7        I:Option       S01117
     C*********************PARM 'BANK'    P@BYCD 10        I:Key field    S01117
     C           P@BJRF    PARM *BLANK    UUFDY            O:Format
     C                     MOVELBJURPT    ##URPT
      * Last Amend Box - GL0113P - Journal Entry Summary  *
      * Define 200 Byte Dummy DS - Standard functions  *
      * Define 800 Byte Dummy DS - Standard functions  *
      * Branch Codes DS - Branch Codes  *
      * Declare Bank File DS - Standard functions  *
      * Currency Codes DS - Currency Codes  *
      * Start of Fix BHF959
      * An entity of 'S' was being passed to the ZSFILE program when
      * it should have been blank.
      * ZSFile - Log Spool File - Standard functions  *
     C*
     C* Set up spool file number - Standard Functions  *
     C                     Z-ADD@$FNB     WUSFNB
     C                     MOVE *BLANKS   UUSRSQ  5
     C*
     C* ZSFILE - write report rqs - Standard Functions  *
     C                     CALL 'ZSFILE'               90  ZSFILE - write
     C*********************PARM #IRSQN    UURSQN  5        RCF sequence nuLN0837
     C           UUSRSQ    PARM P1RSQN    UURSQN  5        RCF sequence nuLN0837
     C                     PARM *BLANK    UUENTY  3        Entity
     C                     PARM @$FVN     UUSFNM 10        Spool file name
     C                     PARM WUSFNB    UUSFNB  60       Spool file numb
     C           WUZSER    PARM *BLANK    UUZSER  1        ZSFILE error
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
     C*
     C* CASE: WRK.ZSFILE is error occurred
     C*
     C*          #OZSER    IFEQ 'Y'
     C*                    MOVEL'Y2U0004' P0RTN
     C*                    EXSR ZYEXPG
     C*                    END
      * End of Fix BHF959
      * 00/Copy Member GL0113PIPG - Journal Entry Summary  *
     C/COPY WNCPYSRC,GL0113PCPG
      *================================================================
     CSR         ZZEXIT    ENDSR
     O/COPY WNCPYSRC,GL0113POPG
** CPY@
(c) Finastra International Limited 2001
** @CN Long constants used in program.
*KEY
3
Y
1
