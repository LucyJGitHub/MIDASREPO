     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas GL Branch Trans File Split Trailer Update')
      *****************************************************************
      *                                                               *
      *  Midas - General Ledger Module                                *
      *                                                               *
      *  GL0265 - Batch Transaction File Split Trailer Update         *
      *                                                               *
      *  Function:  This program accumulates details from GLBATHPA    *
      *             trailer file and updates MANPOZZ batch postings   *
      *             trailer file. A record will be written to the     *
      *             header file MANPOHH if no records exists.         *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Last Amend No. CCB003 *Create     Date 15Oct96               *
      *  Prev Amend No. xxxxxx             Date ddmmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CCB003 - COB Performance Enhancements - Task Split           *
      *           Manual Postings trailer and header files update     *
      *                                                               *
      *****************************************************************
     F/EJECT
      *****************************************************************
      *
     FGLBATHPAIF  E                    DISK         KINFSR *PSSR
      *
     FMANPOZZ UF  E                    DISK         KINFSR *PSSR A
     F            APOSTZZF                          KRENAMETRAILF
      *
     FMANPOHH UF  E                    DISK         KINFSR *PSSR A
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Function of indicators                                       *
      *  ----------------------                                       *
      *                                                               *
      *     50 - Indicator for dummy read of MANPOZZ                  *
      *     80 - READ indicator for GLBATHPA                          *
      *     81 - READ indicator for MANPOHH                           *
      *                                                               *
      *     91 - Used in GLZSUM subroutine                            *
      *     92 - Used in GLZSUM subroutine                            *
      *     93 - Used in GLZSUM subroutine                            *
      *     94 - Used in GLZSUM subroutine                            *
      *     95 - Used in GLZSUM subroutine                            *
      *     96 - Used in GLZSUM subroutine                            *
      *     99 - Used in GLZSUM subroutine                            *
      *                                                               *
      *  U7+U8 - Database error                                       *
      *                                                               *
      *****************************************************************
     E/EJECT
      *****************************************************************
      *
     E                    CPY@    1   1 80
      ** Array for Object Copyright Statement
      *
      *****************************************************************
     I/EJECT
      *****************************************************************
      *
     ITRAILF
      ** Rename fields for MANPOZZ format
     I              RECI                            MRECI
     I              NORE1                           MNORE1
     I              HRWN                            MHRWN
     I              HRDC                            MHRDC
      *
     ILDA       E DSLDA                         256
      ** Local data area for database error details
      *
      *****************************************************************
     C/EJECT
      *****************************************************************
      *
      ** Initial Processing
     C                     EXSR INIT
      *
      ** Accumulate total and update file(s)
     C                     EXSR TOTAL
      *
      ** End processing
     C                     EXSR END
      *****************************************************************
      /EJECT
      *****************************************************************
      *  TOTAL - Accumulate totals and update file(s)                 *
      *****************************************************************
     C           TOTAL     BEGSR
      *
     C                     Z-ADD0         NUMREC  50
      *
      ** Access record on new Trailer file
     C                     READ GLBATHPA                 80
      *
      ** If no record on file, then database error
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'GLBATHPA'DBFILE           ************
     C                     MOVEL'*NRF'    DBKEY            * DBERR 01 *
     C                     Z-ADD1         DBASE            ************
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Do while records on file.
     C           *IN80     DOWEQ'0'
      *
      ** Accumulate total number of records
     C                     ADD  NORE1     NUMREC
      *
      ** Accumulate hash total amounts
     C                     Z-ADDHRWN      ZZAMTI
     C                     Z-ADDHRDC      ZZAMTD
     C                     EXSR GLZSUM
      *
     C                     READ GLBATHPA                 80
      *
     C                     ENDDO
      *
      ** Add 2 to total number of records for header and trailer
     C                     ADD  2         NUMREC
      *
      ** Update Trailer MANPOZZ
      *
     C                     MOVE 'T'       MRECI
     C                     Z-ADDNUMREC    MNORE1
     C                     Z-ADDZZTOTI    MHRWN
     C                     Z-ADDZZTOTD    MHRDC
      *
     C                     WRITETRAILF
      *
      ** Access record on Header file
     C                     READ MANPOHH                  81
      *
      ** If no record on file, then write a record
     C           *IN81     IFEQ '1'
     C                     MOVE 'H'       RECI
     C                     WRITEAPOSTHHF
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *  INIT - Initial processing                                    *
      *****************************************************************
     C           INIT      BEGSR
      *
      ** Copyright statement
     C                     MOVEACPY@      MKI@   80
      *
      ** Define LDA
     C           *NAMVAR   DEFN           LDA
      *
      ** Dummy read for compilation purpose.
     C           *IN50     IFEQ '1'
     C                     READ MANPOZZ                  50
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *  END - End processing                                         *
      *****************************************************************
     C           END       BEGSR
      *
     C                     SETON                     LR
     C                     RETRN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *  *PSSR  - Program error                                       *
      *****************************************************************
     C           *PSSR     BEGSR
      *
     C           *LOCK     IN   LDA
     C                     MOVEL'GL0265'  DBPGM     P
     C                     OUT  LDA
      *
     C                     SETON                     U7U8LR
     C                     DUMP
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *  GLZSUM - Calculate hash total of records                     *
      *                                                               *
      *  Input  : ZZAMTI, ZZAMTD                                      *
      *  Output : ZZTOTI, ZZTOTD, ZZNEGD, *IN96, *IN99                *
      *****************************************************************
     C           GLZSUM    BEGSR
      *
     C                     Z-ADDZZTOTI    ZZTOTI 150
     C                     Z-ADDZZTOTD    ZZTOTD  30
     C                     SETOF                     919293
     C                     SETOF                     949599
      *
      ** Determine sign of ZZAMTI and ZZAMTD
     C           ZZAMTI    COMP 0                      9293
     C   93      ZZAMTD    COMP 0                      9293
     C   93                GOTO ZZSEND
      *
      ** Determine sign of ZZTOTI and ZZTOTD
     C           ZZTOTI    COMP 0                      9193
     C   93      ZZTOTD    COMP 0                      9193
      *
      ** If ZZTOTAL is 0, return ZZAMOUNT.
     C   93                Z-ADDZZAMTI    ZZTOTI
     C   93                Z-ADDZZAMTD    ZZTOTD
     C   93                GOTO ZZSEND
      *
      ** If signs differ, bypass overflow checks.
     C   91N92
     CORN91 92             GOTO ZZOFPS
      *
     C           ZZAMTD    ADD  ZZTOTD    ZZWK2   40
     C           ZZWK2     COMP 999                  93
     C  N93      ZZWK2     COMP -999                   93
      *
     C   93N92   ZZAMTI    ADD  1         ZZWK3  150
     C      93 92ZZAMTI    SUB  1         ZZWK3
     C   93      ZZTOTI    ADD  ZZWK3     ZZWK3
     C  N93      ZZTOTI    ADD  ZZAMTI    ZZWK3
      *
      ** If the modulus of ZZWK3 is < modulus of ZZTOTI, then overflow.
      ** If overflow, then *IN99 set ON, fields ZZTOTI and ZZTOTD left
      ** intact and ZZAMT zeroized.
     C  N92      ZZWK3     COMP ZZTOTI                 99
     C   92      ZZWK3     COMP ZZTOTI               99
     C  N99                Z-ADDZZWK2     ZZTOTD
     C  N99                Z-ADDZZWK3     ZZTOTI
      *
     C   99                Z-ADD0         ZZAMT  153
     C                     GOTO ZZSEND
      *
      ** The signs are different
     C           ZZOFPS    TAG
      *
      ** If ZZAMTI or ZZAMTD were negative, make them positive
     C   92                Z-SUBZZAMTI    ZZAMTI 150
     C   92                Z-SUBZZAMTD    ZZAMTD  30
      *
      ** If ZZTOTI or ZZTOTD were negative, make them positive
     C   91                Z-SUBZZTOTI    ZZTOTI
     C   91                Z-SUBZZTOTD    ZZTOTD
      *
      ** All ZZAMTI, ZZAMTD, ZZTOTI and ZZTOTD are now positive.
     C           ZZTOTI    COMP ZZAMTI               93  95
     C   95      ZZTOTD    COMP ZZAMTD               93  95
      *
      ** If ZZTOT = ZZAMT, return 0.
     C   95                Z-ADD0         ZZTOTI
     C   95                Z-ADD0         ZZTOTD
     C   95                GOTO ZZSEND
      *
      ** If ZZTOT > ZZAMT
     C   93      ZZAMTD    COMP ZZTOTD               94
     C   93 94   ZZTOTI    SUB  1         ZZTOTI
     C   93 94   ZZTOTD    ADD  1000      ZZWK2
     C   93      ZZTOTI    SUB  ZZAMTI    ZZTOTI
     C   93 94   ZZWK2     SUB  ZZAMTD    ZZTOTD
     C   93N94   ZZTOTD    SUB  ZZAMTD    ZZTOTD
      *
      ** If ZZTOT < ZZAMT
     C  N93      ZZTOTD    COMP ZZAMTD               94
     C  N93 94   ZZAMTI    SUB  1         ZZWK3  150
     C  N93 94   ZZAMTD    ADD  1000      ZZWK2
     C  N93 94   ZZWK3     SUB  ZZTOTI    ZZTOTI
     C  N93N94   ZZAMTI    SUB  ZZTOTI    ZZTOTI
     C  N93 94   ZZWK2     SUB  ZZTOTD    ZZTOTD
     C  N93N94   ZZAMTD    SUB  ZZTOTD    ZZTOTD
      *
      ** Reverse sign of ZZTOT if larger input fields were negative
     C                     SETOF                     94
     C   93 91
     CORN93 92             SETON                     94
     C   94                Z-SUBZZTOTI    ZZTOTI
     C   94                Z-SUBZZTOTD    ZZTOTD
      *
      ** Restore sign of ZZAMTI & ZZAMTD if it was reversed.
     C   92                Z-SUBZZAMTI    ZZAMTI
     C   92                Z-SUBZZAMTD    ZZAMTD
     C           ZZSEND    TAG
      *
      ** If ZZTOTD = 0 and ZZTOTI < 0, set up ZZNEGD.
     C                     SETOF                     96
     C           ZZTOTD    COMP 0                        91
     C   91      ZZTOTI    COMP 0                      96
     C   96                MOVE '.000-'   ZZNEGD  5
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
** CPY@ - Object copyright
(c) Misys International Banking Systems Ltd. 2001
