     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Fontis Narrative Codes Table Print file')
      *****************************************************************
      *                                                               *
      *  Midas - Midas-Fontis Interface                               *
      *                                                               *
      *  GL2811P - Fontis Narrative Codes Table Print file            *
      *                                                               *
      *  Function - To print report of contents of the Fontis         *
      *             Narrative Codes Table file.                       *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Last Amend No. CGL004 *CREATE     Date 11MAR97               *
      *                                                               *
      ********************************************************************
      *                                                               *
      *  CGL004 - Midas-Fontis Interface                              *
      *                                                               *
      ********************************************************************
     F*
     FGLFNARL1IF  E           K        DISK
      * RTV:                           Retrieval index
      *
     FGL2811P1O   E             97     PRINTER                        UC
     F                                              KINFDS INFDS1
      * PRT: Audit/Request Report      Print file
      *
     FGL2811AUO   E                    PRINTER
     F                                              KINFDS INFDSU
      *
     FSDBANKL1IF  E           K        DISK
      * RTV: Bank Details              Retrieval index
      *
     F*****************************************************************
     F*                                                               *
     F*  F U N C T I O N    O F    I N D I C A T O R S                *
     F*                                                               *
     F*  90 -  End of file/Error                                      *
     F*  97 -  Overflow indicator                                     *
     F*  99 -                                                         *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  S U B R O U T I N E    I N D E X                             *
     F*                                                               *
     F*  BAPRHD - Print Report Headers                                *
     F*  CAPRDT - Print Report Detail line                            *
     F*  DALVCH - Detect level changes                                *
     F*  EAPRTT - Print Report totals                                 *
     F*  FASGHD - Signal required header format                       *
     F*  SCRVGN - Obtain Bank Details                                 *
     F*  ZASNMS - Send Message to program queue                       *
     F*  ZXEXPG - Exit Program                                        *
     F*  ZZINIT - Initialisation                                      *
     F*  *PSSR  -                                                     *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*
     F*
     E                    UAR        53  1
     E                    ULN        53  1
     E                    UARRAY  1   2 26
      *
      ** SAVE INDICATOR *IN 99
      *
     E                    @CN     1   3 25               Long constants.
     E                    CPY@    1   1 80               Copyright array
     E*
     E*
     E*
      /EJECT
      * Data structures:-
     IPGMDS     ESDSY2PGDSP
      * Program data structure.
      *
     IJBDTTM      DS
      * Job date/time.
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
      *
     IINFDS1    E DSY2I$DSP
      * Printer file information data structure.
      *
     IINFDSU      DS
      * Printer file information data structure.
     I                                       83  92 SFILEU
     I                                    B 123 1240SFNUMU
      *
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
      /EJECT
      * Parameter declarations.
     IP1PARM      DS
      * I:    Audit/Request Status Ind
     I                                        1   1 P1ARSI
     IP2PARM      DS
      * I:    RCF sequence number
     I                                        1   5 P2RSQN
     IP3PARM      DS
      * I:    Level
     I                                        1   1 P3LEVL
     IP4PARM      DS
      * I:    Entity
     I                                        1   3 P4ENTY
     I            DS
      * Message data for 'Database Error (ICD)'
      * Filename
     I                                        1 132 ZAMSDA
     I                                        1  10 ZA0001
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
      /EJECT
      *****************************************************************
     C           *ENTRY    PLIST                           Entry parameter
     C                     PARM           P0RTN   7        Return code
     C           P1ARSI    PARM           WP0001  1        Audit/Request S
     C           P2RSQN    PARM           WP0002  5        RCF sequence nu
     C           P3LEVL    PARM           WP0003  1        Level
     C           P4ENTY    PARM           WP0004  3        Entity
      *****************************************************************
      * Initialise
     C                     EXSR ZZINIT
      *
      * Clear overflow indicator.
     C                     SETOF                     97
      *
      * Establish starting position.
     C           *LOVAL    SETLLGLFNARD0                   *
      *
      * Read first record.
     C                     READ GLFNARD0                 90*
     C                     MOVEL*IN90     W0EOF   1
      *
      * Print null report headings.
     C           W0EOF     IFEQ '1'                        B001
     C                     WRITEZZPAGHDU
     C                     WRITEZZNODETL
     C*
     C* ZSFILE - log spool file - Standard Functions  *
     C*
     C                     Z-ADDSFNUMU    WUSFNB
     C*
     C* ZSFILE - write report rqs - Standard Functions  *
     C                     CALL 'ZSFILE'               90  ZSFILE - write
     C           UUSRSQ    PARM P2RSQN    UURSQN  5        RCF sequence nu
     C                     PARM P4ENTY    UUENTY  3        Entity
     C                     PARM SFILEU    UUSFNM 10        Spool file name
     C                     PARM WUSFNB    UUSFNB  60       Spool file numb
     C           WUZSER    PARM *BLANK    UUZSER  1        ZSFILE error
     C*
     C           *IN90     IFEQ '1'                        B002
     C* Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     ENDIF                           E002
      *
      *CASE:     WRK.ZSFILE error is Error Occured
     C           WUZSER    IFEQ @CN,03                     B002
     C                     MOVEL'Y2U0004' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ENDIF                           E002
     C*
     C                     ELSE                            X001
      * Request all headings.
     C                     MOVEL'Y'       L0      1        Page headings
      * Initialise final totals.
     C                     MOVEL*BLANK    ZTCON            *CON (Screen co
     C*
      * Print report body.
     C           W0EOF     DOWEQ'0'                        B002
     C*
      * Print report detail line.
     C                     EXSR CAPRDT
     C*
      * Hold current values.
      * Read next record.
     C                     READ GLFNARD0                 90*
     C                     MOVEL*IN90     W0EOF
     C*
      * Determine level changes.
     C                     EXSR DALVCH
     C*
      * Print totals.
     C                     EXSR EAPRTT
     C*
      * Process necessary heading requests
     C                     EXSR FASGHD
     C                     ENDDO                           E002
     C*
     C           FILOPN    IFEQ 'Y'                        B002
     C                     WRITEZZENDRPT
     C                     ENDIF                           E002
     C*
     C                     ENDIF                           E001
      * Exit program.
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *
      *****************************************************************
      /EJECT
     CSR         BAPRHD    BEGSR
      *================================================================
      * Print report Headers.
      *================================================================
      * Clear column headings control flag.
     C                     MOVEL*BLANK    BAPR    1
      *
     C           L0        IFEQ 'Y'
     C                     WRITEZZPAGHDR
     C                     MOVEL'Y'       BAPR
     C                     ENDIF
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         CAPRDT    BEGSR
      *================================================================
      * Print report detail line.
      *================================================================
      *
      * Load detail line.
     C                     Z-ADDF2LCD     XRLCD            Last Change Dat
     C                     MOVELF2TYLC    XRTYLC           Type of Last Ch
     C                     MOVELF2PMTT    XRPMTT           Transaction Typ
     C                     MOVELF2FTTR    XRFTTR           Funds Transfer
     C                     MOVELF2LANC    XRLANC           Language Code
     C                     MOVELF2NATV    XRNATV           Narrative
     C                     MOVELF2STTI    XRSTTI           SWIFT Trans. Ty
     C                     MOVELF2TRMD    XRTRMD           Midas Module ID
     C                     MOVEL*BLANK    XRACDT           alpha change da
     C                     MOVEL*BLANK    XRALCH           alpha of last c
     C                     MOVEL'Y'       W0PFM
      *
      * USER: Process detail record
     C                     MOVELP1ARSI    WUARSI           Audit/Request S
      *
      * Process Detail Rec PRTFIL
     C                     ADD  1         WUWKNB           work number
      *
      *CASE:     PAR.Audit/Request Status Ind is Audit Mode
     C           WUARSI    IFEQ 'A'                        B001
      *
      *CASE:     PAR.Last Change Date NE WRK.run day number
     C           XRLCD     IFNE WURDNB                     B002
     C                     MOVEL'N'       W0PFM            *Print format
     C                     ENDIF                           E002
      *
     C                     ENDIF                           E001
      *
      *CASE:     PGM.*Print format is Print format
     C           W0PFM     IFEQ 'Y'                        B001
     C                     ADD  1         ZTNCRC           No of Calculate
      *
      *CASE:     PAR.No of Calculated Recs is Equal 1
     C           ZTNCRC    IFEQ 1                          B002
      * Change Print Control to Y - Standing Data Controls  *
     C*
     C* Set Print Control To Y To Enable Column Headers To Be
     C*             Printed On First Record..
     C*
     C                     MOVEL'Y'       BAPR    1
     C                     ENDIF                           E002
     C                     ENDIF                           E001
      *
      * Check File Date - Rundate  *
     C                     CALL 'ZDATE2'               90  Check File Date
     C                     PARM XRLCD     WQ0001  50       Work Midas Date
     C                     PARM WUDFF     WQ0002  1        date format fla
     C           WUWCDT    PARM *ZERO     WQ0003  60       Work Converted
     C           XRACDT    PARM *BLANK    WQ0004  7        Work Alpha Date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     ENDIF
      *
      * PAR.alpha of last change = Condition name of PAR.Type of Last Change
     C                     CALL 'Y2RVCNR'              90  *
     C                     PARM           W0RTN   7        Return code
     C                     PARM 1100584   Y2LSNO  70       List number
     C                     PARM XRTYLC    W0INVL 20        Type of Last Ch
     C                     PARM ' '       W0VLMP  1        Value mapped?
     C           XRALCH    PARM           W0CNNM 25        alpha of last c
      *
     C           W0PFM     IFEQ 'Y'                        B001
     C* OPEN PRINTER FILE IF NOT ALREADY OPEN
     C           FILOPN    IFNE 'Y'                        B002
     C                     OPEN GL2811P1
     C                     Z-ADD0         PAGE
     C                     MOVEL'Y'       FILOPN  1
     C*
     C* ZSFILE - log spool file - Standard Functions  *
     C*
     C* Set up spool file number - Standard Functions  *
     C                     Z-ADD@$FNB     WUSFNB
     C*
     C* ZSFILE - write report rqs - Standard Functions  *
     C                     CALL 'ZSFILE'               90  ZSFILE - write
     C           UUSRSQ    PARM P2RSQN    UURSQN  5        RCF sequence nu
     C                     PARM P4ENTY    UUENTY  3        Entity
     C                     PARM @$FVN     UUSFNM 10        Spool file name
     C                     PARM WUSFNB    UUSFNB  60       Spool file numb
     C           WUZSER    PARM *BLANK    UUZSER  1        ZSFILE error
     C*
     C           *IN90     IFEQ '1'                        B003
     C* Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     ENDIF                           E003
      *
      *CASE:     WRK.ZSFILE error is Error Occured
     C           WUZSER    IFEQ @CN,03                     B003
     C                     MOVEL'Y2U0004' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ENDIF                           E003
     C                     ENDIF                           E002
      *
      * Print headings.
     C                     EXSR BAPRHD
      *
      * Print column headings if required.
     C           BAPR      IFEQ 'Y'                        B002
     C                     WRITEZZCOLHDG
     C                     MOVEL*BLANK    BAPR
     C                     ENDIF                           E002
      *
      * Print detail line.
     C                     WRITEZZDTLRCD
     C                     ENDIF                           E001
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DALVCH    BEGSR
      *================================================================
      * Detect level changes.
      *================================================================
      *
      * Clear all level breaks.
     C                     MOVEL*BLANK    L0               Page headings
      *
      * Clear heading length to print.
     C                     Z-ADD*ZERO     @$HDL
      *
      * End of file - Signal all level breaks.
     C           W0EOF     IFEQ '1'                        B001
     C                     ELSE                            X001
      * Adjust for column headings.
     C           @$HDL     IFGT *ZERO                      B002
     C                     ADD  5         @$HDL
     C                     ENDIF                           E002
      *
     C                     ENDIF                           E001
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         EAPRTT    BEGSR
      *================================================================
      * Print report Totals.
      *================================================================
      *
      * Print level break totals as required
      * End of file - Print final totals.
     C           W0EOF     IFEQ '1'                        B001
     C                     MOVEL'Y'       W0PFM
      *
      * USER: Process End of Report
      *CASE:     CUR.No of Calculated Recs is Compare to Zero
     C           ZTNCRC    IFEQ *ZERO                      B002
     C                     MOVEL'0'       WUALZR           Alpha Zero
     C                     ENDIF                           E002
      *
     C           W0PFM     IFEQ 'Y'                        B002
      * Print format.
     C                     WRITEZZPAGHDU
     C                     WRITEZZFINTTL
     C*
     C* ZSFILE - log spool file - Standard Functions  *
     C*
     C                     Z-ADDSFNUMU    WUSFNB
      *
     C* ZSFILE - write report rqs - Standard Functions  *
     C                     CALL 'ZSFILE'               90  ZSFILE - write
     C           UUSRSQ    PARM P2RSQN    UURSQN  5        RCF sequence nu
     C                     PARM P4ENTY    UUENTY  3        Entity
     C                     PARM SFILEU    UUSFNM 10        Spool file name
     C                     PARM WUSFNB    UUSFNB  60       Spool file numb
     C           WUZSER    PARM *BLANK    UUZSER  1        ZSFILE error
     C*
     C           *IN90     IFEQ '1'                        B003
     C* Call to program ended in error.
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     ENDIF                           E003
      *
      *CASE:     WRK.ZSFILE error is Error Occured
     C           WUZSER    IFEQ @CN,03                     B003
     C                     MOVEL'Y2U0004' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ENDIF                           E003
      *
     C                     ENDIF                           E002
     C                     ENDIF                           E001
      *
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         FASGHD    BEGSR
      *================================================================
      * Signal required header formats.
      *================================================================
      *
      * Cascade skip to new page requests upwards.
      *
     C           *IN97     IFNE '1'                        B001
     C           L0        ANDNE'Y'
      *
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line.
      *
     C           W0OFL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE @$HDL                      B002
     C                     SETON                     97
     C                     ELSE                            X002
      *
      * Signal overflow if requested headings would cause
      * detail format to be printed past end of page
      *
     C                     ADD  2         @$HDL
     C           W0PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE @$HDL                      B003
     C                     SETON                     97
     C                     ENDIF                           E003
     C                     ENDIF                           E002
     C                     ENDIF                           E001
      *
      * Overflow detected.
     C           *IN97     IFEQ '1'
      * Request page headings.
     C                     MOVEL'Y'       L0
      * Request all formats which print on overflow.
     C                     SETOF                     97
     C                     ENDIF
      *
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Get Bank Title - Bank Details  *
      *================================================================
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define Keylist.
     C           KRSSC     KLIST
     C                     KFLD           BJBANK           Bank
      *
      * Move fields to key list.
     C                     MOVEL'BANK'    BJBANK           Bank
     C           KRSSC     CHAIN@BJREEF              90    *
      *
     C           *IN90     IFEQ '1'
      * DBF Record not found.
     C                     MOVEL'USR0197' W0RTN   7
      * USER: Processing if DBF record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * Setup message data for message.
     C                     MOVEL'SDBANKPD'ZA0001           Filename
      * Send message 'Database Error (ICD)'
     C                     MOVEL'USR0377' ZAMSID           Message id.
     C                     EXSR ZASNMS                     Send message
     C                     SETON                     99    *
      *
     C                     GOTO SCEXIT                     *QUIT
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process DBF record
      * PAR = DB1 By name
     C                     MOVELBJURPT    WUURPT           User Report Tit
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue.
      *================================================================
     C           ZAPGM     IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGM
     C                     ENDIF
      *
      * If no message file specified use default.
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     ENDIF
      *
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGM  10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
      *
      * Clear all fields for default mechanism next time.
     C                     MOVEL*BLANK    ZAPGM            Program queue
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSID           Message Id.
     C                     MOVEL*BLANK    ZAMSGF           Message file.
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct.
      *================================================================
      * Terminate program.
     C                     SETON                     LR
      *
      * Exit program.
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation.
      *================================================================
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
      * Setup job date/time.
     C                     Z-ADDUDATE     ##JDT            Job date.
     C                     TIME           ##JTM            Job time.
     C                     TIME           ##TME   60       Screen time.
      * Define work field Audit/Request Status Ind
     C                     MOVEL*BLANK    WUARSI  1
      * Define work field work number
     C                     Z-ADD*ZERO     WUWKNB  50
      * Define work field run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Work Converted Date
     C                     Z-ADD*ZERO     WUWCDT  60
      * Define work field Alpha Zero
     C                     MOVEL*BLANK    WUALZR  1
      * Define work field work flag
     C                     MOVEL*BLANK    WUWFLG  1
      * Define work field Audit/Request Title
     C                     MOVEL*BLANK    WUARTL 53
      * Define work field Underline
     C                     MOVEL*BLANK    WUUNDL 53
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field midas rundate
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field User Report Title
     C                     MOVEL*BLANK    WUURPT 53
      * Obtain default message file.
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Spool file name
     C                     MOVEL*BLANK    WUSFNM 10
      * Define work field Spool file number
     C                     Z-ADD*ZERO     WUSFNB  60
      *
      * Define work field ZSFILE error
     C                     MOVE *BLANKS   UUSRSQ  5
     C                     MOVEL*BLANK    WUZSER  1
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
      *
      * Adjust page length and overflow as necessary.
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     ENDIF
      *
      * USER: Initialise program
      * Standard RPG Creation PAR - Standard Functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB
     C                     MOVE SUC       WUSUC
     C                     MOVE DFF       WUDFF
     C                     MOVE MBIN      WUMBIN
      *
      * Get Title
      * Get Bank Title - Bank Details  *
     C                     EXSR SCRVGN
      *
      * Move title to header - *Standard header/footer  *
     C* Move User Report Title into Header Field in DDS for PRTF
     C*
     C                     MOVE WUURPT    ##URPT
      * Get Narrative Title - Narrative Codes  *
     C           *IN99     IFEQ '1'
     C                     MOVE 1         UIND    10
     C                     SETOF                         99
     C                     ELSE
     C                     MOVE 0         UIND
     C                     ENDIF
      *
      ** CALCULATE END OF TEXT POINT
     C                     Z-ADD1         U       20
     C                     MOVEA@CN,02    UAR,U
     C*
     C           *IN99     DOWEQ'0'
     C           ' '       LOKUPUAR,U                    99
     C                     ADD  1         U
     C           UAR,U     COMP ' '                      99
     C                     ENDDO
      *
     C**
     C*
     C           P1ARSI    IFEQ 'A'
     C                     MOVELUARRAY,1  UTEMP  26
     C                     MOVEAUTEMP     UAR,U
     C                     ADD  26        U
     C                     ELSE
      *
     C                     MOVEAUARRAY,2  UAR,U            * IF A THIRD
     C                     ADD  7         U                OPTION TO ARRAY
     C                     ENDIF                           IS ADDED A
      *                                                    TEMP STORAGE
      *                                                    * IS REQUIRED.
      **  STORE  TEXT IN USTORE FIELD
      *
     C                     MOVEAUAR       USTORE 53
     C                     MOVE *BLANKS   UAR
      *
      *
      *
     C           53        SUB  U         UB      20
     C           UB        DIV  2         UB
     C                     MVR            UR      10
     C           UB        ADD  U         U
     C           U         SUB  1         U
      *
      *
      **  INSERT UNDERLINE TO ARRAY
      **
     C                     MOVEA*ALL'-'   ULN,UB
     C                     MOVEA*BLANKS   ULN,U
      *
      *
     C           UB        IFGT 0
     C                     MOVEAUSTORE    UAR,UB
     C                     ELSE
     C                     MOVEAUSTORE    UAR
     C                     ENDIF
      *
      **  MOVE ARRAY VALUE  TO SCREEN TEXT FIELD
      *
     C*                    MOVEAUAR       ##EYTX
     C                     MOVEAUAR       ##ARTL
     C*                    MOVEAUAR       WUEYTX
     C                     MOVEAUAR       WUARTL
     C*                    MOVEAULN       ##BJNA
     C                     MOVEAULN       ##UNDL
     C                     MOVEAULN       WUUNDL
      *
      *
      ** RESET INDICATOR *IN 99
      *
     C           UIND      IFEQ 1
     C                     SETON                         99
     C                     ELSE
     C                     SETOF                         99
     C                     ENDIF
      *
      *================================================================
     CSR         ZZEXIT    ENDSR
      *================================================================
     C*
     C           *PSSR     BEGSR
      *
     C                     DUMP
     C                     RETRN
      *
     C                     ENDSR
      *================================================================
**   ARRAY ENTRIES FOR REPORT TITLE
MAINTENANCE - AUDIT REPORT
LISTING
** @CN Long constants used in program.
GL2811AU
NARRATIVE CODES
Y
** CPY@     : Copyright notice
(c) Misys International Banking Systems Ltd. 2001
