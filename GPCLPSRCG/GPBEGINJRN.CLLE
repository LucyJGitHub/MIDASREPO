/*********************************************************************/
/*XBI    OVRDBF FILE(GBEGINJRNF) TOFILE(UPOBJDTPD)                   */
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas GP Journal Midas Global layer')                 */
/*********************************************************************/
/*                                                                   */
/*       Midas - Global Processing                                   */
/*                                                                   */
/*       GPBEGINJRN - Journal Midas Global layer                     */
/*                                                                   */
/*       (c) Finastra International Limited 2003                     */
/*                                                                   */
/*       Last Amend No. MD058663           Date 24Aug21              */
/*       Prev Amend No. MD058520           Date 01Aug21              */
/*                      MD046248           Date 27Oct17              */
/*                      CBF012             Date 04Jul11              */
/*                      BUG28037           Date 17Aug10              */
/*                      BUG27911           Date 20Jul10              */
/*                      BUG27134 *REWRITE  Date 01Oct08              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CSC020             Date 31Mar04              */
/*                      CUP025  *CREATE    Date 27Nov03              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD058663 - Files not journalled as work file is cleared     */
/*       MD058520 - Journaling improvement                           */
/*       MD046248 - Finastra Rebranding                              */
/*       CBF012 - BF Infrastructure: Upgradability                   */
/*       BUG28037 - Journal specific library.                        */
/*       BUG27911 - Remove hard-coded library references.            */
/*       BUG27134- Rewrite of GPBEGINJRN because the old version     */
/*                 a) was not efficient                              */
/*                 b) contained errors                               */
/*               - It now runs in 2 modes based on the second        */
/*                 parameter based on whether the journaling is to be*/
/*                 redone completely or merely 'topped up'.          */
/*       CSC020 - MidasPlus journaling                               */
/*       CUP025 - MidasPlus Bridge changes.                          */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&SYSTEMID &ACTION)

             DCL        VAR(&SYSTEMID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ACTION) TYPE(*CHAR) LEN(6)
/**********  DCL        VAR(&GXLIB) TYPE(*CHAR) LEN(10)                              */ /*BUG27911*/
             DCL        VAR(&GMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GTLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RSVALRTNC) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SVAL1) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVAL2) TYPE(*CHAR) LEN(200)
             DCL        VAR(&JRNDA) TYPE(*CHAR) LEN(1)
             DCL        VAR(&JRNDQ) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE(N)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(100)
             DCL        VAR(&BFLIB) TYPE(*CHAR) LEN(10)                                   /*CBF012*/
             DCL        VAR(&CBSLIB) TYPE(*CHAR) LEN(10)                                  /*CBF012*/
             DCL        VAR(&CBALIB) TYPE(*CHAR) LEN(10)                                  /*CBF012*/

             DCLF       FILE(GBEGINJRNF)

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2003')

             MONMSG     MSGID(CPF0000 MCH0000) EXEC(GOTO CMDLBL(ERROR))

             CHGJOB     SWS(00000000)

/* Call new program to list objects not journaled */                                    /*MD058520*/
             IF         COND(&ACTION *EQ '*START') THEN(DO)                             /*MD058520*/
                CALL       PGM(GPBEGJLIST) PARM(&SYSTEMID &ACTION)                      /*MD058520*/
                GOTO       CMDLBL(ENDJRN)                                               /*MD058520*/
             ENDDO                                                                      /*MD058520*/
                                                                                        /*MD058520*/
/*  Get the global journaling system values. */
             CALL       PGM(GPAOSVALR0) PARM(&RSVALRTNC +
                          'GlobalJrnDtaaras' &SVAL1 +
                          'GlobalJrnDtaqueues' &SVAL2 ' ' ' ' ' ' ' +
                          ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' +
                          ' ' ' ')
/* If there is an error finding any system value then end abnormally. */
                IF         COND(&RSVALRTNC *NE '       ') THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO

/* Check whether data area or data queue journaling is required. */
                CHGVAR     VAR(&JRNDA) VALUE(%SST(&SVAL1 1 1))
                CHGVAR     VAR(&JRNDQ) VALUE(%SST(&SVAL2 1 1))

ENDJRN:                                                                                 /*MD058520*/
/*  Set up library names. */
             CHGVAR     VAR(&GMLIB) VALUE(&SYSTEMID *CAT 'GMLIB')
             CHGVAR     VAR(&GPLIB) VALUE(&SYSTEMID *CAT 'GPLIB')
             CHGVAR     VAR(&GTLIB) VALUE(&SYSTEMID *CAT 'GTALIB')
/**********  CHGVAR     VAR(&GXLIB) VALUE(&SYSTEMID *CAT 'GXLIB')                    */ /*BUG27911*/
             CHGVAR     VAR(&BFLIB) VALUE(&SYSTEMID *CAT 'BFLIB')                         /*CBF012*/
             CHGVAR     VAR(&CBSLIB) VALUE(&SYSTEMID *CAT 'CBSLIB')                       /*CBF012*/
             CHGVAR     VAR(&CBALIB) VALUE(&SYSTEMID *CAT 'CBALIB')                       /*CBF012*/

             IF         COND(&ACTION *NE '*START') THEN(DO)                             /*MD058663*/
/* Create file to be used to drive journaling process. */
             DLTF       FILE(QTEMP/GBEGINJRNF)
             MONMSG     MSGID(CPF0000)
             DLTF       FILE(QTEMP/GJRNOBJ)
             MONMSG     MSGID(CPF0000)
             CRTDUPOBJ  OBJ(UPOBJDTPD) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP) NEWOBJ(GBEGINJRNF)
             ENDDO                                                                      /*MD058663*/

/* If the action is to reset or end the journaling then end all journaling. */
             IF         COND(&ACTION *NE '*START') THEN(DO)
/**********     ENDJRNPF   FILE(*ALL) JRN(&GXLIB/GPJRN)                              */ /*BUG27911*/
/**********     ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(&GXLIB/GPJRN)                 */ /*BUG27911*/
                ENDJRNPF   FILE(*ALL) JRN(GPJRN)                                        /*BUG27911*/
                ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(GPJRN)                           /*BUG27911*/
                                                                                          /*CBF012*/
/* End all journaling in BFLIB, CBSLIB and CBALIB from QSQJRN.       */                   /*CBF012*/
/* If QSQJRN exists, delete journal QSQJRN and receivers QSQJRN*     */                   /*CBF012*/
                                                                                          /*CBF012*/
QSQ1:           CHKOBJ     OBJ(&BFLIB/QSQJRN) OBJTYPE(*JRN)                               /*CBF012*/
                MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(QSQ2))                         /*CBF012*/
                                                                                          /*CBF012*/
                ENDJRNPF   FILE(*ALL) JRN(&BFLIB/QSQJRN)                                  /*CBF012*/
                ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(&BFLIB/QSQJRN)                     /*CBF012*/
                                                                                          /*CBF012*/
                DLTJRN     JRN(&BFLIB/QSQJRN)                                             /*CBF012*/
                DLTJRNRCV  JRNRCV(&BFLIB/QSQJRN*) DLTOPT(*IGNINQMSG)                      /*CBF012*/
                                                                                          /*CBF012*/
QSQ2:           CHKOBJ     OBJ(&CBSLIB/QSQJRN) OBJTYPE(*JRN)                              /*CBF012*/
                MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(QSQ3))                         /*CBF012*/
                                                                                          /*CBF012*/
                ENDJRNPF   FILE(*ALL) JRN(&CBSLIB/QSQJRN)                                 /*CBF012*/
                ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(&CBSLIB/QSQJRN)                    /*CBF012*/
                                                                                          /*CBF012*/
                DLTJRN     JRN(&CBSLIB/QSQJRN)                                            /*CBF012*/
                DLTJRNRCV  JRNRCV(&CBSLIB/QSQJRN*) DLTOPT(*IGNINQMSG)                     /*CBF012*/
                                                                                          /*CBF012*/
QSQ3:           CHKOBJ     OBJ(&CBALIB/QSQJRN) OBJTYPE(*JRN)                              /*CBF012*/
                MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(QSQEND))                       /*CBF012*/
                                                                                          /*CBF012*/
                ENDJRNPF   FILE(*ALL) JRN(&CBALIB/QSQJRN)                                 /*CBF012*/
                ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(&CBALIB/QSQJRN)                    /*CBF012*/
                                                                                          /*CBF012*/
                DLTJRN     JRN(&CBALIB/QSQJRN)                                            /*CBF012*/
                DLTJRNRCV  JRNRCV(&CBALIB/QSQJRN*) DLTOPT(*IGNINQMSG)                     /*CBF012*/
                                                                                          /*CBF012*/
             ENDDO
QSQEND:                                                                                   /*CBF012*/
             IF         COND(&ACTION *EQ '*END') THEN(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
/* Call new program to list objects not journaled in case of *RESET*/                   /*MD058520*/
             IF         COND(&ACTION *EQ '*RESET') THEN(DO)                             /*MD058520*/
                CALL       PGM(GPBEGJLIST) PARM(&SYSTEMID &ACTION)                      /*MD058520*/
             ENDDO                                                                      /*MD058520*/
                                                                                        /*MD058520*/
             GOTO       CMDLBL(STRJRN)                                                  /*MD058520*/

/* Build up outfile to control the journaling process. */
             DSPOBJD    OBJ(&GMLIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ)
             MONMSG     MSGID(CPF2123)
             DSPOBJD    OBJ(&GPLIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                          OUTMBR(*FIRST *ADD)
             MONMSG     MSGID(CPF2123)
             DSPOBJD    OBJ(&GTLIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                          OUTMBR(*FIRST *ADD)
             MONMSG     MSGID(CPF2123)
             DSPOBJD    OBJ(&BFLIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                          OUTMBR(*FIRST *ADD)                                             /*CBF012*/
             MONMSG     MSGID(CPF2123)                                                    /*CBF012*/
             DSPOBJD    OBJ(&CBSLIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                          OUTMBR(*FIRST *ADD)                                             /*CBF012*/
             MONMSG     MSGID(CPF2123)                                                    /*CBF012*/
             DSPOBJD    OBJ(&CBALIB/*ALL) OBJTYPE(*FILE) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                          OUTMBR(*FIRST *ADD)                                             /*CBF012*/
             MONMSG     MSGID(CPF2123)                                                    /*CBF012*/

/* If data area or data queue journaling selected then include these objects */
/*  too.                                                                     */
             IF         COND(&JRNDA *EQ 'Y') THEN(DO)
                DSPOBJD    OBJ(&GMLIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&GPLIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&GTLIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&BFLIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
                DSPOBJD    OBJ(&CBSLIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
                DSPOBJD    OBJ(&CBALIB/*ALL) OBJTYPE(*DTAARA) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
             ENDDO
             IF         COND(&JRNDQ *EQ 'Y') THEN(DO)
                DSPOBJD    OBJ(&GMLIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&GPLIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&GTLIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)
                MONMSG     MSGID(CPF2123)
                DSPOBJD    OBJ(&BFLIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
                DSPOBJD    OBJ(&CBSLIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
                DSPOBJD    OBJ(&CBALIB/*ALL) OBJTYPE(*DTAQ) +
                             OUTPUT(*OUTFILE) OUTFILE(QTEMP/GJRNOBJ) +
                             OUTMBR(*FIRST *ADD)                                          /*CBF012*/
                MONMSG     MSGID(CPF2123)                                                 /*CBF012*/
             ENDDO

/* Once the outfile has been completed then copy across to driving file. */
             CHKOBJ     OBJ(QTEMP/GJRNOBJ) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
             CPYF       FROMFILE(QTEMP/GJRNOBJ) +
                          TOFILE(QTEMP/GBEGINJRNF) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)

STRJRN:                                                                                 /*MD058520*/
/* Call program to remove records from the driving file that are not to be */
/*  journaled.                                                             */
             CALL       PGM(GP000001)

/* Start journaling system. */
READNEXT:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO

             IF         COND(&ODOBTP *EQ '*FILE') THEN(DO)
                IF         COND(%SST(&ODOBAT 1 2) *EQ 'PF') THEN(DO)
/**********        STRJRNPF   FILE(&ODOBNM) JRN(&GXLIB/GPJRN) +                      */ /*BUG27911*/
/**********                     IMAGES(*BOTH) OMTJRNE(*OPNCLO)                       */ /*BUG27911*/
/**********        STRJRNPF   FILE(&ODOBNM) JRN(GPJRN) IMAGES(*BOTH) +               */ /*BUG28037*/
/**********                     OMTJRNE(*OPNCLO)                        */ /*BUG27911*/ /*BUG28037*/
                   STRJRNPF   FILE(&ODLBNM/&ODOBNM) JRN(GPJRN) +
                                IMAGES(*BOTH) OMTJRNE(*OPNCLO)                          /*BUG28037*/
                   MONMSG     MSGID(CPF7030)
                ENDDO
             ENDDO
             IF         COND(&ODOBTP *EQ '*DTAARA') THEN(DO)
/**********     STRJRNOBJ  OBJ(&ODOBNM) OBJTYPE(*DTAARA) +                           */ /*BUG27911*/
/**********                  JRN(&GXLIB/GPJRN) IMAGES(*BOTH)                         */ /*BUG27911*/
/**********     STRJRNOBJ  OBJ(&ODOBNM) OBJTYPE(*DTAARA) JRN(GPJRN) +                */ /*BUG28037*/
/**********                  IMAGES(*BOTH)                              */ /*BUG27911*/ /*BUG28037*/
                STRJRNOBJ  OBJ(&ODLBNM/&ODOBNM) OBJTYPE(*DTAARA) +
                             JRN(GPJRN) IMAGES(*BOTH)                                   /*BUG28037*/
                MONMSG     MSGID(CPF700A)
             ENDDO
             IF         COND(&ODOBTP *EQ '*DTAQ') THEN(DO)
/**********     STRJRNOBJ  OBJ(&ODOBNM) OBJTYPE(*DTAQ) JRN(&GXLIB/GPJRN)             */ /*BUG27911*/
/**********     STRJRNOBJ  OBJ(&ODOBNM) OBJTYPE(*DTAQ) JRN(GPJRN)       */ /*BUG27911*/ /*BUG28037*/
                STRJRNOBJ  OBJ(&ODLBNM/&ODOBNM) OBJTYPE(*DTAQ) JRN(GPJRN)               /*BUG28037*/
                MONMSG     MSGID(CPF700A)
             ENDDO

             GOTO       CMDLBL(READNEXT)

             GOTO       CMDLBL(ENDPGM)

ERROR:
             IF         COND(&RECURSIVE *EQ 'N') THEN(DO)
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')
RCVMSG:
                RCVMSG     MSGTYPE(*DIAG) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                             MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                IF         COND(&MSGID *NE ' ') THEN(DO)
                   SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                                MSGDTA(&MSGDTA) MSGTYPE(*DIAG)
                   GOTO       CMDLBL(RCVMSG)
                ENDDO
                RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                             MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                             MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
             ENDDO

ENDPGM:
             ENDPGM
