/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas GP Open Month End System Setup')                */
/*********************************************************************/
/*                                                                   */
/*       Midas     - Global Processing                               */
/*                                                                   */
/*       GPC000103 - Open Month End System Setup                     */
/*                                                                   */
/*       (c) Finastra International Limited 2005                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. CSC043             Date 18Jun10              */
/*                      BUG27134           Date 01Oct08              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      BUG8404            Date 09Sep05              */
/*                      BUG8328 *CREATE    Date 30Aug05              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CSC043 - MidasPlus IASP Enablement                          */
/*       BUG27134 - Rewrite of GPBEGINJRN.                           */
/*       BUG8404 - Acct Code Autho Mnt: Error message CPF4326 when   */
/*               - trying to access 2016 or webfaced screen          */
/*       BUG8328- OME Global Data Replication from Live to OME       */
/*                                                                   */
/*********************************************************************/
 
             PGM        PARM(&PRTCD &PRGL &PRGO &DEV &DBICGSQ +
                          &DBICGTSQ)
 
             DCL        VAR(&PRTCD) TYPE(*CHAR) LEN(7)
 
/** Global system prefix from */
             DCL        VAR(&PRGL) TYPE(*CHAR) LEN(2)
 
/** Global system prefix to */
             DCL        VAR(&PRGO) TYPE(*CHAR) LEN(2)
 
/** Device name */
             DCL        VAR(&DEV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DBICGSQ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DBICGTSQ) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&GMLIBL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GTALIBL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GILIBL) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&GMLIBO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GTALIBO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GPLIBO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GXLIBO) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&DUMGM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DUMGT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DUMGI) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DOWNER) TYPE(*CHAR) LEN(10)                                 /*BUG8404*/
 
             DCL        VAR(&GSBS) TYPE(*CHAR) LEN(7)
             DCL        VAR(&JBNM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GOMESTAT) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RUNDATE) TYPE(*CHAR) LEN(5)
             DCL        VAR(&GLOBDATE) TYPE(*CHAR) LEN(5)
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2005')
             DCL        VAR(&IASP_YN) TYPE(*CHAR) LEN(1)                                  /*CSC043*/
             DCL        VAR(&IASP) TYPE(*CHAR) LEN(18)                                    /*CSC043*/
/*/COPY GPCPYSRCG,GPSVALDCL  */                                                           /*CSC043*/
 
/** Global Monitor Message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(NOCOPY))
/*                                                                                        /*CSC043*/
/** Get the global IASP system values */                                                  /*CSC043*/
/*                                                                                        /*CSC043*/
             CALL       PGM(GPAOSVALR0) PARM(&RSVALRTNC +
                          'IASPinstallation' &SVAL1 'IASPdatabase' +
                          &SVAL2 &SVALK3 &SVAL3 &SVALK4 &SVAL4 +
                          &SVALK5 &SVAL5 &SVALK6 &SVAL6 &SVALK7 +
                          &SVAL7 &SVALK8 &SVAL8 &SVALK9 &SVAL9 +
                          &SVALK10 &SVAL10)                                               /*CSC043*/
/*                                                                                        /*CSC043*/
/** Check whether system is in IASP environment. */                                       /*CSC043*/
/*                                                                                        /*CSC043*/
              CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))                            /*CSC043*/
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
/*                                                                                        /*CSC043*/
/** Get name of IASP. */                                                                  /*CSC043*/
/*                                                                                        /*CSC043*/
              CHGVAR     VAR(&IASP) VALUE(%SST(&SVAL2 1 18))                              /*CSC043*/
                                                                                          /*CSC043*/
             ENDDO                                                                        /*CSC043*/
                                                                                          /*CSC043*/
 
/** Retrieve Job attribute */
 
             RTVJOBA    JOB(&JBNM)
 
/** Check if global data restore is already done for this month */
 
             RTVDTAARA  DTAARA(RUNDAT (3 5)) RTNVAR(&RUNDATE)
             RTVDTAARA  DTAARA(GLOBSTAT (6 5)) RTNVAR(&GLOBDATE)
             IF         COND(&RUNDATE *EQ &GLOBDATE) THEN(GOTO +
                          CMDLBL(ENDP))
 
/** Initialise constant variables */
 
             CHGVAR     VAR(&GSBS) VALUE('M' *CAT &PRGO *CAT +
                          'GSBS')
 
             CHGVAR     VAR(&GMLIBL) VALUE(&PRGL *CAT 'GMLIB')
             CHGVAR     VAR(&GTALIBL) VALUE(&PRGL *CAT 'GTALIB')
             CHGVAR     VAR(&GILIBL) VALUE(&PRGL *CAT 'GILIB')
 
             CHGVAR     VAR(&GMLIBO) VALUE(&PRGO *CAT 'GMLIB')
             CHGVAR     VAR(&GTALIBO) VALUE(&PRGO *CAT 'GTALIB')
             CHGVAR     VAR(&GPLIBO) VALUE(&PRGO *CAT 'GPLIB')
             CHGVAR     VAR(&GXLIBO) VALUE(&PRGO *CAT 'GXLIB')
 
             CHGVAR     VAR(&DUMGM) VALUE(&PRGO *CAT 'DUMGM')
             CHGVAR     VAR(&DUMGT) VALUE(&PRGO *CAT 'DUMGT')
             CHGVAR     VAR(&DUMGI) VALUE(&PRGO *CAT 'DUMGI')
             CHGVAR     VAR(&DOWNER) VALUE(&PRGO *CAT 'OWNER')                           /*BUG8404*/
 
/** Remove all triggers */
 
             TRIGGLOB   FILE(*ALL) ACTION(*RMVTRIG)
 
/** Create the OME status data area */
 
             CRTDTAARA  DTAARA(&GPLIBO/GOMESTAT) TYPE(*CHAR) LEN(1) +
                          VALUE(' ') TEXT('OME System Set-up Status')
             MONMSG     MSGID(CPF1023) EXEC(CHGDTAARA +
                          DTAARA(GOMESTAT) VALUE(' '))
 
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
/*                                                                                        /*CSC043*/
/** Create dummy library to hold data of xxGMLIB */                                       /*CSC043*/
/*                                                                                        /*CSC043*/
                                                                                          /*CSC043*/
             DLTLIB     LIB(&DUMGM) ASPDEV(&IASP)                                         /*CSC043*/
             MONMSG     MSGID(CPF2110)                                                    /*CSC043*/
             CRTLIB     LIB(&DUMGM) TEXT('Dummy library for OME') +
                          AUT(*ALL) ASPDEV(&IASP)                                         /*CSC043*/
                                                                                          /*CSC043*/
/** Create dummy library to hold data of xxGTALIB */                                      /*CSC043*/
                                                                                          /*CSC043*/
             DLTLIB     LIB(&DUMGT) ASPDEV(&IASP)                                         /*CSC043*/
             MONMSG     MSGID(CPF2110)                                                    /*CSC043*/
             CRTLIB     LIB(&DUMGT) TEXT('Dummy library for OME') +
                          AUT(*ALL) ASPDEV(&IASP)                                         /*CSC043*/
                                                                                          /*CSC043*/
/** Create dummy library to hold data of xxGILIB */                                       /*CSC043*/
                                                                                          /*CSC043*/
             DLTLIB     LIB(&DUMGI) ASPDEV(&IASP)                                         /*CSC043*/
             MONMSG     MSGID(CPF2110)                                                    /*CSC043*/
             CRTLIB     LIB(&DUMGI) TEXT('Dummy library for OME') +
                          AUT(*ALL) ASPDEV(&IASP)                                         /*CSC043*/
             ENDDO                                                                        /*CSC043*/
             ELSE       CMD(DO)                                                           /*CSC043*/
/** Create dummy library to hold data of xxGMLIB */
 
             DLTLIB     LIB(&DUMGM)
             MONMSG     MSGID(CPF2110)
             CRTLIB     LIB(&DUMGM) TEXT('Dummy library for OME') +
                          AUT(*ALL)
 
/** Create dummy library to hold data of xxGTALIB */
 
             DLTLIB     LIB(&DUMGT)
             MONMSG     MSGID(CPF2110)
             CRTLIB     LIB(&DUMGT) TEXT('Dummy library for OME') +
                          AUT(*ALL)
 
/** Create dummy library to hold data of xxGILIB */
 
             DLTLIB     LIB(&DUMGI)
             MONMSG     MSGID(CPF2110)
             CRTLIB     LIB(&DUMGI) TEXT('Dummy library for OME') +
                          AUT(*ALL)
             ENDDO                                                                        /*CSC043*/
 
/** Ensure that Global subsytem is active */
 
             STRSBS     SBSD(&GSBS)
             MONMSG     MSGID(CPF1010)
 
/** Restore databse */
 
/**********  SBMJOB     CMD(CALL PGM(GPC000104) PARM(&GMLIBL +     */                     /*CSC043*/
/**********               &GTALIBL &GILIBL &DUMGM &DUMGT &DUMGI +  */                     /*CSC043*/
/**********               &DEV &DBICGSQ &DBICGTSQ &JBNM)) +        */                     /*CSC043*/
/**********               JOB(GPC000104) JOBD(*LIBL/GPBATCH) +     */                     /*CSC043*/
/**********               JOBQ(GPNOMAX) LANGID(ENU) CNTRYID(US) +  */                     /*CSC043*/
/**********               CCSID(37)                                */                     /*CSC043*/
                                                                                          /*CSC043*/
             SBMJOB     CMD(CALL PGM(GPC000104) PARM(&GMLIBL +
                          &GTALIBL &GILIBL &DUMGM &DUMGT &DUMGI +
                          &DEV &DBICGSQ &DBICGTSQ &JBNM &IASP_YN +
                          &IASP)) JOB(GPC000104) +
                          JOBD(*LIBL/GPBATCH) JOBQ(GPNOMAX) +
                          LANGID(ENU) CNTRYID(US) CCSID(37)                               /*CSC043*/
 
 GOMESTAT:   RTVDTAARA  DTAARA(GOMESTAT) RTNVAR(&GOMESTAT)
             IF         COND(&GOMESTAT *EQ ' ') THEN(DO)
             DLYJOB     DLY(30)
             GOTO       GOMESTAT
             ENDDO
 
             IF         COND(&GOMESTAT *EQ 'F') THEN(GOTO +
                          CMDLBL(NOCOPY))
 
/** End global subsystem to make sure no jobs are running */
 
 ENDSBS:     ENDSBS     SBS(&GSBS) OPTION(*IMMED)
             MONMSG     MSGID(CPF1054) EXEC(GOTO CMDLBL(ENDJRN))
             MONMSG     MSGID(CPF1034 CPF1035 CPF1055 CPF1056)
 
             DLYJOB     DLY(30)
             GOTO       CMDLBL(ENDSBS)
 
/** End physical file journaling. */
 
 ENDJRN:     ENDJRNAP   FILE(*ALL) JRN(&GXLIBO/GPJRN)
             MONMSG     MSGID(CPF0000)
             ENDJRNPF   FILE(*ALL) JRN(&GXLIBO/GPJRN)
             MONMSG     MSGID(CPF0000)
             ENDJRNOBJ  OBJ(*ALL) OBJTYPE(*ALL) JRN(&GXLIBO/GPJRN)
             MONMSG     MSGID(CPF0000)
 
/** Delete GPJRN and journal receivers */
 
             DLTJRN     JRN(&GXLIBO/GPJRN)
             MONMSG     MSGID(CPF2105)
             CHGJOB     INQMSGRPY(*DFT)
 
             DLTJRNRCV  JRNRCV(&GXLIBO/GR*)
             MONMSG     MSGID(CPF2105 CPF2125)
             CHGJOB     INQMSGRPY(*RQD)
 
/** Create GPJRN and journal receivers */
 
             CRTJRNRCV  JRNRCV(&GXLIBO/GR00000001) TEXT('GP +
                          Journal Receiver')
             MONMSG     MSGID(CPF0000)
             CRTJRNRCV  JRNRCV(&GXLIBO/GR00000002) TEXT('GP +
                          Journal Receiver')
             MONMSG        MSGID(CPF0000)
             CRTJRN     JRN(&GXLIBO/GPJRN) +
                          JRNRCV(&GXLIBO/GR00000001) TEXT('GP +
                          System Journal')
             MONMSG        MSGID(CPF0000)
             CHGOBJOWN  OBJ(&GXLIBO/GPJRN) OBJTYPE(*JRN) +
                          NEWOWN(&DOWNER)                                                /*BUG8404*/
 
/** Copy data from dummy library to OME library. */
 
             CALL       PGM(GPC000105) PARM(&DUMGM &DUMGT &GMLIBO +
                          &GTALIBO &JBNM)
             RTVDTAARA  DTAARA(GOMESTAT) RTNVAR(&GOMESTAT)
             IF         COND(&GOMESTAT *EQ 'F') THEN(GOTO +
                          CMDLBL(NOCOPY))
 
/** Delete dummy libraries */
 
             DLTLIB     LIB(&DUMGM)
             DLTLIB     LIB(&DUMGT)
             DLTLIB     LIB(&DUMGI)
 
/** Ensure that Global subbsytem is active */
 
             STRSBS     SBSD(&GSBS)
             MONMSG     MSGID(CPF1010)
 
/** Start journaling of the physical files */
 
/**********  CALL       PGM(GPBEGINJRN) PARM(&PRGO)                                  */ /*BUG27134*/
             JRNGLOB    PFX(&PRGO) ACTION(*START)                                       /*BUG27134*/
             MONMSG     MSGID(CPF0000)
 
/** Add all triggers */
 
             TRIGGLOB   FILE(*ALL) ACTION(*ADDTRIG)
 
/** Update GLOBSTAT */
 
             CHGDTAARA  DTAARA(GLOBSTAT (6 5)) VALUE(&RUNDATE)
 
             GOTO       CMDLBL(ENDP)
 
 NOCOPY:     SNDPGMMSG  MSG('No data was restored to OME System') +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000)
 
 ABNOR:      SNDPGMMSG  MSG('Program GPC000103 ended Abnormally') +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000)
             CHGVAR     VAR(&PRTCD) VALUE('*ERROR ')
             CHGJOB     SWS(XXXXXX11)
 
 ENDP:       DLTDTAARA  DTAARA(GOMESTAT)
             MONMSG     MSGID(CPF0000)
 
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited')
 
             ENDPGM
