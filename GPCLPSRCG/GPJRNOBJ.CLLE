/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas GP Journal DTAARAs/DTAQs for Global layer')     */
/*********************************************************************/
/*                                                                   */
/*       Midas - Global Processing                                   */
/*                                                                   */
/*       GPJRNOBJ - Journal DTAARAs and DTAQs for Midas Global layer */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2003           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. CUP025  *CREATE    Date 27Nov03              */
/*       Prev Amend No. xxxxxx             Date ddmmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP025 - MidasPlus Bridge changes.                          */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&LIB &OBJTYPE)
 
             DCL        VAR(&LIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OBJTYPE) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&USERSPACE) TYPE(*CHAR) LEN(20)
             DCL        VAR(&FORMAT) TYPE(*CHAR) LEN(8)
             DCL        VAR(&OBJECTS) TYPE(*CHAR) LEN(20)
             DCL        VAR(&STARTLIST) TYPE(*CHAR) LEN(4)
             DCL        VAR(&STARTLISTN) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&NOOFENT) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&ENTRYLEN) TYPE(*CHAR) LEN(4)
             DCL        VAR(&ENTRYLENN) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&GENHDR) TYPE(*CHAR) LEN(140)
             DCL        VAR(&OBJENT) TYPE(*CHAR) LEN(108)
             DCL        VAR(&OBJ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTAQLEN)  TYPE(*DEC) LEN(5) VALUE(40)
             DCL        VAR(&ERRORDTL) TYPE(*CHAR) LEN(40)
             DCL        VAR(&ERR) TYPE(*CHAR) LEN(1) VALUE('N')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2003')
 
             MONMSG     MSGID(CPF0000 MCH0000) EXEC(GOTO CMDLBL(ERROR))
 
/* Create user space for list of objects. */
             CRTUSRSPC  USRSPC(QTEMP/&LIB) DELETE(*YES) +
                          TEXT('Temporary user space for Global +
                          layer journaling')
 
/* Create list of objects in library. */
             CHGVAR     VAR(&USERSPACE) VALUE(&LIB *CAT 'QTEMP     ')
             CHGVAR     VAR(&FORMAT) VALUE('OBJL0200')
             CHGVAR     VAR(&OBJECTS) VALUE('*ALL      ' *CAT &LIB)
             CALL       PGM(QUSLOBJ) PARM(&USERSPACE &FORMAT +
                          &OBJECTS &OBJTYPE)
 
/* Get generic header from user space using standard retrieval API. */
             CALL       PGM(QUSRTVUS) PARM(&USERSPACE X'00000001' +
                          X'0000008C' &GENHDR)
             MONMSG     MSGID(CPF0000)
 
/* Get the data from the header.  The start position of the actual data, */
/* the number of entries and the length of each entry.                   */
             RTVUSRSPCI USRSPC(QTEMP/&LIB) STRPOS(&STARTLIST) +
                          NBRENT(&NOOFENT) ENTLEN(&ENTRYLEN)
             CHGVAR     VAR(&STARTLISTN) VALUE(%BIN(&STARTLIST))
             CHGVAR     VAR(&ENTRYLENN) VALUE(%BIN(&ENTRYLEN))
 
/* Loop until all objects have been processed. */
 JRN_OBJ:
             IF         COND(&NOOFENT *EQ 0) THEN(DO)
                GOTO       CMDLBL(END_OF_JRN)
             ENDDO
             CALL       PGM(QUSRTVUS) PARM(&USERSPACE &STARTLIST +
                          &ENTRYLEN &OBJENT)
 
/* Get name of object and attribute and jorunal it. */
             CHGVAR     VAR(&OBJ) VALUE(%SST(&OBJENT 1 10))
 
             STRJRNOBJ  OBJ(&OBJ) OBJTYPE(&OBJTYPE) JRN(GPJRN) +
                          IMAGES(*BOTH)
             MONMSG     MSGID(CPF7030)
             MONMSG     MSGID(CPF0000) EXEC(DO)
/* Send error details to data queue. */
                CHGVAR     VAR(&ERR) VALUE(Y)
                CHGVAR     VAR(&ERRORDTL) VALUE(&LIB *CAT &OBJ *CAT +
                             &OBJTYPE *CAT '*STRJRN')
                CALL       PGM(QSNDDTAQ) PARM('GPJRNERR' 'QTEMP' +
                             &DTAQLEN &ERRORDTL)
             ENDDO
 
/* Increase the start position of the list by the length of a list */
/* entry, and convert the new value to binary.                     */
             CHGVAR     VAR(&STARTLISTN) VALUE(&STARTLISTN + &ENTRYLENN)
             CHGVAR     VAR(%BIN(&STARTLIST)) VALUE(&STARTLISTN)
/* Decrease the number of list entries. */
             CHGVAR     VAR(&NOOFENT) VALUE(&NOOFENT - 1)
 
             GOTO       CMDLBL(JRN_OBJ)
 
 END_OF_JRN:
             IF         COND(&ERR *EQ 'Y') THEN(DO)
                CHGJOB     SWS(XXXXXX11)
             ENDDO
 
             GOTO       CMDLBL(END)
 
 ERROR:
             CHGJOB     SWS(XXXXXX11)
 
 END:
             ENDPGM
