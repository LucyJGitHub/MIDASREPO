/*********************************************************************/
/*                                                                   */
/*       Midas - Utilities module                                    */
/*                                                                   */
/*       STDERR    - Standard error processing for the ABNOR section */
/*                   of a CL program.  All diagnostic and exception  */
/*                   messages are received and re-sent to the        */
/*                   calling program.  Finally CPF0001 is sent as an */
/*                   escape message.                                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*       Last Amend No. CAA005             Date 02AUG96              */
/*       Prev Amend No. CAA002  *CREATE    Date 31OCT95              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CAA005 - Delivered as part of the CCSID utilities project.  */
/*                Change is to remove the END: tag from this routine,*/
/*                as it should be coded in the body of the programs  */
/*                for clarity.                                       */
/*       CAA002 - Development of utility to save, edit and restore   */
/*                spooled files.                                     */
/*                                                                   */
/*********************************************************************/
/* This module is to be used by the CL /COPY process.            */
 
/* NOTE THAT ANY CHANGES TO THIS MODULE WILL REQUIRE CHANGES TO  */
/* THE PROGRAMS THAT USE IT.  IT SHOULD NOT BE CHANGED LIGHTLY.  */
 
/* This module is intend to be used for abnormal ending conditions. */
/* It receives all diagnostic and exception messages and re-sends */
/* them to the calling program; it then ends by sending an escape */
/* message of CPF0001, with parameter &MSGDTA.  The name of the */
/* command that is executing the program should be placed in */
/* &MSGDTA before the inclusion of this module.  All of this assumes */
/* that the program using this module is a command processing */
/* program. */
 
/* The parameters is &MSGDTA.  To define the variables used by this */
/* module, include the module STDERR_DCL in the program. */
 
/** Receive all previous diagnostic messages and send them to the   **/
/** caller:                                                         **/
             RCVMSG     MSGTYPE(*DIAG) RMV(*NO) MSGDTA(&ERRDTA) +
                          MSGID(&ERRID)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
             IF         COND(&ERRID *NE ' ') THEN(DO)
                SNDPGMMSG  MSGID(&ERRID) MSGF(QCPFMSG) MSGDTA(&ERRDTA) +
                             MSGTYPE(*DIAG)
                MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
                GOTO       CMDLBL(ABNOR)
             ENDDO
 
/** Receive escape message and send it to the caller:               **/
             RCVMSG     MSGTYPE(*EXCP) RMV(*NO) MSGDTA(&ERRDTA) +
                          MSGID(&ERRID)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
             SNDPGMMSG  MSGID(&ERRID) MSGF(QCPFMSG) MSGDTA(&ERRDTA) +
                          MSGTYPE(*DIAG)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
ESC:         SNDPGMMSG  MSGID(CPF0001) MSGF(QSYS/QCPFMSG) +
                          MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
/*END:*******CHGVAR     VAR(&ACTCPY) VALUE('COPYRIGHT MKI') ********/ /*CAA005*/
