/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas LE Aggregated Facility Amendments Processing')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - Customer Lending Module                             */
/*                                                                   */
/*       LEC000052 - Midas LE Aggregated Facility Amendments         */
/*                   Processing                                      */
/*                                                                   */
/*       (c) Finastra International Limited 2004                     */
/*                                                                   */
/*       Last Amend No. CLE138             Date 02Nov21              */
/*       Prev Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CLE041  *CREATE    Date 11Oct04              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CLE138 - Class Codes for Facilities                         */
/*       MD046248 - Finastra Rebranding                              */
/*       CLE041 - Collateralised Lending Phase 2B                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)

             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2004')

/* Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             SNDPGMMSG  MSG('LEC000052 - Midas LE Aggregated +
                            Facility Amendments Processing') TOMSGQ(MRUNQ)

             CHGJOB     SWS(00000000)

/* Create data area LDA */

             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)

/* Setup system prefix variable from SDSTAT data area. */

             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)

/* Call program CB0160 to get value of restart indicator. */

             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)

/* If it is NOT a restart. */

             IF         COND(&STAT *NE 'Y') THEN(DO)
                DLTF       FILE(XLEAGFMPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFNPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFZPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGAMPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGAMZZ)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGACPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGHSPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFTQD)                                                /*CLE138*/
                MONMSG     MSGID(CPF2105)                                                 /*CLE138*/

                CPYF       FROMFILE(LEAGFMPD) TOFILE(&DPLIB/XLEAGFMPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGFNPD) TOFILE(&DPLIB/XLEAGFNPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGFZPD) TOFILE(&DPLIB/XLEAGFZPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGAMPD) TOFILE(&DPLIB/XLEAGAMPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGAMZZ) TOFILE(&DPLIB/XLEAGAMZZ) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGACPD) TOFILE(&DPLIB/XLEAGACPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGHSPD) TOFILE(&DPLIB/XLEAGHSPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(LEAGFTQD) TOFILE(&DPLIB/XLEAGFTQD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)                               /*CLE138*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                                 /*CLE138*/
             ENDDO

/* If it is a restart. */

             IF         COND(&STAT *EQ 'Y') THEN(DO)
                CPYF       FROMFILE(XLEAGFMPD) TOFILE(LEAGFMPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGFMPD))
                CPYF       FROMFILE(XLEAGFNPD) TOFILE(LEAGFNPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGFNPD))
                CPYF       FROMFILE(XLEAGFZPD) TOFILE(LEAGFZPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGFZPD))
                CPYF       FROMFILE(XLEAGAMPD) TOFILE(LEAGAMPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGAMPD))
                CPYF       FROMFILE(XLEAGAMZZ) TOFILE(LEAGAMZZ) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGAMZZ))
                CPYF       FROMFILE(XLEAGACPD) TOFILE(LEAGACPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGACPD))
                CPYF       FROMFILE(XLEAGHSPD) TOFILE(LEAGHSPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGHSPD))
                CPYF       FROMFILE(XLEAGFTQD) TOFILE(LEAGFTQD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)                               /*CLE138*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) +
                             EXEC(CLRPFM FILE(LEAGFTQD))                                  /*CLE138*/
             ENDDO

             CHGVAR     VAR(&STAT) VALUE('Y')

/* Call CB0150 to update restart indicator */

             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)

/* Call Close of Business Aggregated Facility Amendments Processing */

             CALL       PGM(LE000052)

/* If no error occured in the program */

             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)

/* Call CB0150 to update restart indicator. */

                CHGVAR     VAR(&STAT) VALUE('N')
                CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
                DLTF       FILE(XLEAGFMPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFNPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFZPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGAMPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGAMZZ)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGACPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGHSPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XLEAGFTQD)                                                /*CLE138*/
                MONMSG     MSGID(CPF2105)                                                 /*CLE138*/
             ENDDO

/* Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
             ENDDO

             GOTO       CMDLBL(END)

ABNOR:

             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSG('LEC000052 Close of Business Aggregated +
                          Facility Amendments Processing Ended +
                          Abnormally') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

END:
             ENDPGM
