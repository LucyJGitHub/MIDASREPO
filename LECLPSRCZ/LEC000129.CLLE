/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas LE Request Start COB Listeners')                */
/*********************************************************************/
/*                                                                   */
/*       Midas - Customer Lending Module                             */
/*                                                                   */
/*       LEC000129 - Request start of COB Listeners                  */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. MD025682           Date 19Aug14              */
/*                      MD023899           Date 05May14              */
/*                      MD021278           Date 22Jul13              */
/*                      AR1091575          Date 26Feb13              */
/*                     AR1050650*CREATE    Date 23Jan12              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       MD025682 - Include dump on abnormal termination.            */
/*       MD023899 - BF PRB Multiple JMS listeners auto starting      */
/*                  during COB                                       */
/*       MD021278 - LEC000125 fails with timeout error               */
/*       AR1091575 - LEC000131 PDCL Non calculated fees a/c keys     */
/*       AR1080650 - Checking of Listener should be done before      */
/*                   LEC000456, LEC000131 and LEC000138              */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PACT)
 
/* Declaration of variables */
 
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2012')
 
             DCL        VAR(&PACT)     TYPE(*CHAR) LEN(10)
             DCL        VAR(&DQNME)    TYPE(*CHAR) LEN(10)  VALUE(' ')
             DCL        VAR(&DQLIB)    TYPE(*CHAR) LEN(10)  VALUE('*LIBL')
             DCL        VAR(&DQLEN)    TYPE(*DEC)  LEN(5 0) VALUE(100)
             DCL        VAR(&DQDTA)    TYPE(*CHAR) LEN(100) VALUE(' ')
             DCL        VAR(&DQWAIT)   TYPE(*DEC)  LEN(5 0) VALUE(30)
             DCL        VAR(&DQKEYSLT) TYPE(*CHAR) LEN(2)   VALUE('EQ')
             DCL        VAR(&DQKEYLEN) TYPE(*DEC)  LEN(3 0) VALUE(10)
             DCL        VAR(&DQKEY)    TYPE(*CHAR) LEN(10)  VALUE(' ')
             DCL        VAR(&DQSNDLEN) TYPE(*DEC)  LEN(3 0) VALUE(0)
             DCL        VAR(&DQSND)    TYPE(*CHAR) LEN(8)   VALUE(' ')
 
             DCL        VAR(&PRTCD)    TYPE(*CHAR) LEN(7)   VALUE(' ')
             DCL        VAR(&PERMS)    TYPE(*CHAR) LEN(50)  VALUE(' ')
             DCL        VAR(&PFULLCK)  TYPE(*CHAR) LEN(7)   VALUE('Y')
             DCL        VAR(&PZONE)    TYPE(*CHAR) LEN(10)  VALUE(' ')
             DCL        VAR(&PSHTC)    TYPE(*CHAR) LEN(4)   VALUE(' ')
             DCL        VAR(&PRDNB)    TYPE(*DEC)  LEN(5 0) VALUE(0)
             DCL        VAR(&PDNWD)    TYPE(*DEC)  LEN(5 0) VALUE(0)
             DCL        VAR(&PBCCY)    TYPE(*CHAR) LEN(3)   VALUE(' ')
             DCL        VAR(&PNJOB)    TYPE(*DEC)  LEN(1 0) VALUE(0)
             DCL        VAR(&CLE134) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SARD) TYPE(*CHAR) LEN(6)
             DCL        VAR(&SFMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&PRFL) TYPE(*CHAR) LEN(2)
             DCL        VAR(&COUNT)    TYPE(*DEC)  LEN(1 0) VALUE(1)                    /*MD021278*/
             DCLF       FILE(GPWASCL0) OPNID(THIS1)                                     /*MD023899*/
 
/** Clear data queues */                                                               /*AR1091575*/
/**********  CALL       QCLRDTAQ PARM('GPCOBRQSDQ' *LIBL)                     /*AR1091575 MD023899*/
/**********  CALL       QCLRDTAQ PARM('GPCOBRSPDQ' *LIBL)                     /*AR1091575 MD023899*/
                                                                                       /*AR1091575*/
/** Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGJOB     SWS(XXXXXX00)
 
/** Create data area LDA */
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
/** Check if CLE134 is on */
             CHGVAR     VAR(&RTCD) VALUE('       ')
             CHGVAR     VAR(&SARD) VALUE('CLE134')
             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SFMT)
             IF         COND(&RTCD *EQ '       ') THEN(DO)
                CHGVAR     VAR(&CLE134) VALUE('Y')
             ENDDO
 
             IF         COND(&CLE134 *NE 'Y') THEN(GOTO END)
 
             CALL       PGM(GOGETZONE) PARM(&PRTCD &PERMS &PFULLCK +
                          &PZONE &PSHTC &PRDNB &PDNWD &PBCCY &PNJOB)
 
/** Send request to Listener Port Controller Application via D queue */
 
             CLOF       OPNID(THIS1)                                                    /*MD023899*/
             MONMSG     MSGID(CPF4520)                                                  /*MD023899*/
             OPNDBF     FILE(GPWASCL0) OPTION(*INP) OPNID(THIS1)                        /*MD023899*/
/**********RESEND:                                                             /*MD021278 MD023899*/
LOOP1:                                                                                  /*MD023899*/
             RCVF       OPNID(THIS1)                                                    /*MD023899*/
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(END)) +
                                                                                        /*MD023899*/
             IF         COND(&THIS1_AXCOBL = 'N') THEN(DO)                              /*MD023899*/
                        GOTO LOOP1                                                      /*MD023899*/
             ENDDO                                                                      /*MD023899*/
/**********  CHGVAR     VAR(&DQNME) VALUE('GPCOBRQSDQ')                                 /*MD023899*/
                                                                                        /*MD023899*/
RESEND:                                                                                 /*MD023899*/
             CHGVAR     VAR(&DQNME) VALUE(&THIS1_AXREQD)                                /*MD023899*/
                                                                                        /*MD023899*/
             CALL       PGM(QCLRDTAQ) PARM(&THIS1_AXREQD *LIBL)                         /*MD023899*/
             CALL       PGM(QCLRDTAQ) PARM(&THIS1_AXRSPD *LIBL)                         /*MD023899*/
 
             CHGVAR     VAR(&DQDTA) VALUE(&PZONE || ' ' || &PACT)
 
             CHGVAR     VAR(&DQLEN) VALUE(100)                                          /*MD023899*/
             CALL       PGM(QSNDDTAQ) PARM(&DQNME &DQLIB &DQLEN &DQDTA)
 
/** Receive response from GPCOBRSPDQ */
 
/**********  CHGVAR     VAR(&DQNME) VALUE('GPCOBRSPDQ')                                 /*MD023899*/
             CHGVAR     VAR(&DQNME) VALUE(&THIS1_AXRSPD)                                /*MD023899*/
             CHGVAR     VAR(&DQKEY) VALUE(&PZONE)
             CHGVAR     VAR(&DQDTA) VALUE(' ')
 
             CALL       PGM(QRCVDTAQ) PARM(&DQNME &DQLIB &DQLEN +
                          &DQDTA &DQWAIT &DQKEYSLT &DQKEYLEN &DQKEY +
                          &DQSNDLEN &DQSND)
 
             IF         COND(&DQLEN = 0) THEN(DO)
             IF         COND(&COUNT <= 3) THEN(DO)                                      /*MD021278*/
             CHGVAR     VAR(&COUNT) VALUE(&COUNT + 1)                                   /*MD021278*/
             CHGVAR     VAR(&DQLEN) VALUE(100)                                          /*MD021278*/
             GOTO       RESEND                                                          /*MD021278*/
             ENDDO                                                                      /*MD021278*/
             ELSE       (DO)                                                            /*MD021278*/
               SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          LSNPORCTL failed to receive any response +
                          from Listener Port Controller +
                          application') TOMSGQ(MOPERQ)
               DMPCLPGM                                                                 /*MD025682*/
               GOTO       CMDLBL(ABNOR)
             ENDDO                                                                      /*MD021278*/
             ENDDO
 
/** Normal program termination */
 
             IF         COND(&PACT = 'CBSTART   ' +
                         *AND %SST(&DQDTA 12 10) = 'CBSTARTED ' *OR +
                           &PACT = 'CBSTOP    '  *AND +
                           %SST(&DQDTA 12 10) = 'CBSTOPPED ') THEN(DO)
               GOTO       CMDLBL(END)
             ENDDO
 
/** Incorrect response */
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          LEC000129 failed to receive expected +
                          response from Listener Port Controller +
                          application - ' || &DQDTA) TOMSGQ(MOPERQ)
 
/** Abnormal termination */
 
 ABNOR:      CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          LEC000129 ended abnormally - see joblog +
                          ') TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
/** End program */
 
 END:        CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited +
                          2012.')
 
             ENDPGM
