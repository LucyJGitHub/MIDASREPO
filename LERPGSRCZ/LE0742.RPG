     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas LE Portfolio report extract')                    *
     F*****************************************************************
     F*                                                               *
     F*  Midas - Customer Lending Module                              *
     F*                                                               *
     F*  LE0742 - LE PORTFOLIO REPORT EXTRACT                         *
     F*                                                               *
     F*  Function: This program extracts loan portfolio details to    *
     F*  (COB)     file FPORTFP.                                      *
     F*                                                               *
     F*  Called By: CLP/LEC0802A and CLP/LEC0802B                     *
     F*                                                               *
     F*  Calls: None                                                  *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD041994           Date 28Apr20               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CLE148             Date 23Jul12               *
      *                 CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 CLE042             Date 06Sep05               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 CLE025             Date 20Oct03               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CPK009             Date 13Aug99               *
     F*                 S01473             Date 17Nov94               *
     F*                 S01473             DATE 16NOV94               *
     F*                 S01473             DATE 10NOV94               *
     F*                 S01473             DATE 02AUG94               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD041994 - COB components LEC08 10012 and LEC08 10003 failed *
      *             due to closed customer. Do not process DBERR when *
      *             when customer is closed.                          *
      *           - Applied for MD-55209                              *
      *  MD046248 - Finastra Rebranding                               *
      *  CLE148 - Alpha Loan Reference (Recompile)                    *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CLE042 - Extended Loan Sub Type (Recompile)                  *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  CPK009 - Recompile problems in DBA R3.00 packaging.         *
     F*  S01473 - Z-ADD1 to H for the first use od SETUP              *
     F*           Use the Leo Branch (2A) to access TBBR not the      *
     F*           3A BRCA as set up.                                  *
     F*  S01473 - When setting up the @WRK array, MOVEL was used      *
     F*           instead of MOVEA.                                   *
     F*  S01473 - Branch code used should be alternate code if it is  *
     F*           on the Leo Branch Codes table.                      *
     F*           Furthermore, calls to Leo programs should not       *
     F*           specify *MSG for return code.                       *
     F*  S01473 - NEW PROGRAM CREATED FOR MIDAS/LEO INTEGRATION       *
     F*                                                               *
     F*****************************************************************
     FSDCURRPDIF  E                    DISK
     FFCLTY   IF  E           K        DISK
     F            FCLTYHHF                          KIGNORE
     F            FCLTYFNF                          KIGNORE
     F            FCLTYZZF                          KIGNORE
     FFPORTFP O   E                    DISK
     FFPORTT2 O   E                    DISK
     FLE0742AUO   E                    PRINTER
     F*
     F/EJECT
     F*****************************************************************
     F*                                                               *
     F*  F U N C T I O N   O F   I N D I C A T O R S                  *
     F*                                                               *
     F*    01  - LC RECORD                                            *
     F*    02  - PARTICIPATION RECORD                                 *
     F*    03  - NEGOTIATION RECORD                                   *
     F*    41  - PARENT                                               *
     F*    42  - CHILD                                                *
     F*    43  - LONER                                                *
     F*    44  - WORK INDICATOR                                       *
     F*    45  - WORK INDICATOR                                       *
     F*    61  - CHAIN FAIL ON FCLTY                                  *
     F*  90-99 - STANDARD SUBROUTINES                                 *
     F*  U7+U8 - Database Error                                       *
     F*****************************************************************
      /EJECT
     F*****************************************************************
     F*                                                               *
     F*  S U B R O U T I N E   I N D E X                              *
     F*                                                               *
     F*  INIT   - Program Initialisation                              *
     F*  PROCES - Detail Processing                                   *
     F*  ACCY   - Read Currencies into Array                          *
     F*  CURREN - Look up Currency Array for Decimal Places           *
     F*  HASTOT - Hash Processing                                     *
     F*  *PSSR  - Program Error Processing Subroutine                 *
     F*  AUDIT  - Produce Audit Report and End Program                *
     F*                                                               *
     F*****************************************************************
     E/EJECT
     E                    CPY@    1   1 80               COPYRIGHT
     E                    ACR       150  3               CURRENCY ARRAY
     E                    ADC       150  1 0             DECIMAL PLACES
     E                    @WRK       21  1               Work Array
      *
     I/EJECT
     IFCLTYFMF                                                                                CPK009
     I              LPBR                            XLPBR                                     CPK009
     I*
     ISDBRCH    E DSSDBRCHPD
     I** External DS for Branch Details
     I*
     ISDBANK    E DSSDBANKPD
      **  External DS for Bank Details
     I*
     ISDCUST    E DSSDCUSTPD
     I              QQDFAC                          QQDFA1                                    CGL029
      **  External DS for Customer Details
      *
     ITBBRR       DS                                                      S01473
      **  DS for Leo Branch Code Details                                  S01473
      *                                                                   S01473
     I                                       55  59 T02ALT                S01473
      *                                                                   S01473
     IDSFDY     E DSDSFDY
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE
     I*
     IDSSDY     E DSDSSDY
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE
     I*
     IP@FMT       DS
     I***  Data structure to hold the outgoing rcd format of the file
     I*
     I                                        1 256 W@DS1
     I*
     I** Data structures - Child details
     I*
     I            DS
     I                                        1  14 CDET
     I                                        1   2 ACOCC
     I**********                              3   80CPARC                                     CSD027
     I                                        3   8 CPARC                                     CSD027
     I**********                              9  140CNUMC                                     CSD027
     I                                        9  14 CNUMC                                     CSD027
     I*
     I** Parent details
     I*
     I            DS
     I                                        1   8 PDET
     I                                        1   2 ACOCP
     I*************                           3   80CPARP                                     CSD027
     I                                        3   8 CPARP                                     CSD027
     I*
     I** Data structures for fields from FDRAW
     I*
     I            DS
     I** LC Details
     I                                        1   2 LMBR
     I                                        3  10 LMCRNO
     I                                       11  11 LMTNO
     I                                       12  15 LMPRO
     I                                       14  14 LMTPN
     I                                       16  18 LMCAT
     I                                       19  26 LMCNO
     I                                    P  27  342LMLAMT
     I                                       35  37 LMCCY
     I                                    P  38  410LMEDT
     I                                       42  42 LMSTAT
     I                                       43  480LMFCN
     I                                       49  510LMFTP
     I                                       52  530LMFNO
     I                                        1  53 LMPARM
     I*
     I            DS
     I* Participation Details
     I                                        1   2 LPBR
     I                                        3  10 LPCRNO
     I                                       11  120LPTNO
     I                                       13  16 LPPRO
     I                                       17  24 LPCID
     I                                    P  25  280LPRDT
     I                                    P  29  352LPAMT
     I                                       36  38 LPCCY
     I                                       39  440LPFCN
     I                                       45  470LPFTP
     I                                       48  490LPFNO
     I                                        1  49 LPPARM
     I*
     I            DS
     I* Negotiation Details
     I                                        1   2 LNBR
     I                                        3  10 LNCRNO
     I                                       11  11 LNTNO
     I                                       12  130LNNON
     I                                    P  14  212LNCLAR
     I                                       22  22 LNDST
     I                                       23  25 LNCCY
     I                                       26  33 LNCNO
     I                                       34  36 LNCAT
     I                                       37  40 LNPRO
     I                                    P  41  440LNMDT
     I                                    P  45  480LNVAL
     I                                       49  49 LNPST
     I                                       50  550LNFCN
     I                                       56  580LNFTP
     I                                       59  600LNFNO
     I                                        1  60 LNPARM
     I*
     I** Data structures for fields from LF/CPACRN
     I*
     I                                        1   80CPCNO
     I                                    P   9  120CPUPD
     I                                       13  20 CPUSR
     I                                       21  28 CPACR
     I                                       29  29 CPSTAT
     I                                       30  64 CPNAM
     I                                       65  68 CPBCOD
     I                                       69  73 CPRES
     I                                       74  78 CPRIS
     I                                       79  84 CPRESP
     I                                       85  96 CPACNO
     I                                       97 108 CPTAX
     I                                      109 109 CPBANK
     I                                      110 118 CPFL01
     I                                    P 119 1220CPCD
     I                                      123 126 CPOF1
     I                                      127 130 CPOF2
     I                                      131 142 CPALT
     I                                      143 256 CPFL02
     I                                        1 256 CPPARM
     I*
     ILDA         DS                            256
     I** Local data area for database error identification
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
     I*
     I           UDS
     I                                       51  60 LIB1
     I                                       61  70 LIB2
     I                                       71  80 LIB3                  S01473
     I*
     I            DS
     I** Data structure for facility reference
     I                                        1   6 FCUS
     I                                        7   9 FTYP
     I                                       10  11 FSEQ
     I                                        1   6 LMFACU
     I                                        7   9 LMFACT
     I                                       10  11 LMFACN
     I                                        1   6 LPFACU
     I                                        7   9 LPFACT
     I                                       10  11 LPFACN
     I                                        1   6 LNFACU
     I                                        7   9 LNFACT
     I                                       10  11 LNFACN
      *
     C/TITLE Main Processing
      *================================================================
      *  P R O G R A M   S T A R T                                    *
      *================================================================
      *
      ***  Perform Initialisation.
      *
     C                     EXSR INIT
      *
      ***  Perform Detail Processing.
      *
     C                     EXSR PROCES
      *
      ***  Output Audit Report and End Program.
      *
     C                     EXSR AUDIT
      *
      *****************************************************************
      /TITLE SR/INIT
      *****************************************************************
      *                                                               *
      *  INIT   - SUBROUTINE TO DO PROGRAM INITIALISATION.            *
      *                                                               *
      *  Called By: MAIN PROCESSING                                   *
      *                                                               *
      *  Calls:     AOBANKR0                                          *
      *                                                               *
      *****************************************************************
      *
     C           INIT      BEGSR
     C*
     C***  Set up copyright statement.
     C*
     C                     MOVEACPY@      BIS@   80
     C*
     C** Define LDA
     C*
     C           *NAMVAR   DEFN           LDA
     C*
     C** Set up Key for chain to FCLTY
     C*
     C           @FKEY     KLIST
     C**********           KFLD           @FCNO   60                                          CSD027
     C                     KFLD           @FCNO   6                                           CSD027
     C                     KFLD           @FTYP   30
     C                     KFLD           @FSEQ   20
     C                     KFLD           @FREC   1
     C*
     C*
     C***  Call access program for bank specific details, e.g., title
     C***  local currency, run date & day number.
     C*
     C                     CALL 'AOBANKR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
     C*
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVEL'*READ   'DBKEY
     C                     MOVE 'SDBANKPD'DBFILE           ************
     C                     Z-ADD1         DBASE            * DBERR 01 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C*
     C** Set up Hash Fields
     C*
     C                     Z-ADD1         CONTIN  50
     C                     Z-ADD0         HASHF  150
     C                     Z-ADD0         HASHL   30
     C**
     C                     Z-ADD0         EXTCNT  50
     C                     Z-ADD0         EXTWHN 150
     C                     Z-ADD0         EXTDC   30
     C*
     C** Read Currencies into arrays
     C*
     C                     EXSR ACCY
     C*
     C** Set up the parameters to call the two access programs.
     C*
     C                     EXSR SETUP
     C*
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/PROCES
      *****************************************************************
      *                                                               *
      *  PROCES - SUBROUTINE TO PERFORM DETAIL PROCESSING.            *
      *                                                               *
      *  Called By: MAIN PROCESSING                                   *
      *                                                               *
      *  Calls:  CAOUFD                                               *
      *                                                               *
      *****************************************************************
      *
     C           PROCES    BEGSR
     C*
     C***  Call access program CAOUFD to read LF/FDRAW.
     C*
     C                     CALL VAR1
     C***********          PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*NEXT  ' @OPTN   7
     C                     PARM           P@FMT
     C*
     C           @RTCD     IFEQ '*ERROR'
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVEL'*READ   'DBKEY
     C                     MOVE 'FDRAW   'DBFILE           ************
     C                     Z-ADD3         DBASE            * DBERR 03 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C*
     C           @RTCD     DOWNE'*EOF    '
     C*
     C** Initialise fields
     C*
     C                     MOVE *BLANKS   EXPADV  1
     C**********           MOVE *ZEROS    @FCNO                                               CSD027
     C                     MOVE *BLANKS   @FCNO                                               CSD027
     C                     MOVE *ZEROS    @FTYP
     C                     MOVE *ZEROS    @FSEQ
     C*
     C** If record found on FDRAW process depending on type of
     C** record read.
     C*
     C           @RTCD     IFEQ 'LCMASD '
     C           @RTCD     OREQ 'LCMASS '
     C*
     C** PROCESSING FOR LC RECORD
     C*
     C                     SETON                     01
     C                     MOVELP@FMT     LMPARM
     C*
     C** Look up currency array for decimal places.
     C*
     C                     MOVE LMCCY     XCCY    3
     C                     EXSR CURREN
     C           LMFACU    IFEQ *BLANKS
     C*
     C***  Call access program CAOUCA to read LF/CPACRN
     C*
     C                     CALL VAR2
     C***********          PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM LMCNO     @KEY2   8
     C                     PARM           @KYST   7
     C                     PARM           P@FMT
     C*
     C                     MOVELP@FMT     CPPARM
     C           @RTCD     IFNE '*NRF   '
     C           @RTCD     ANDNE'*ERROR '
     C                     MOVE CPCNO     LMFACU
     C                     END
     C                     ELSE
     C                     MOVE LMFACU    @FCNO
     C                     MOVE LMFACT    @FTYP
     C                     MOVE LMFACN    @FSEQ
     C                     END
     C*
     C                     ELSE
     C           @RTCD     IFEQ 'LCPART '
     C*
     C** PROCESSING FOR PARTICIPATION RECORD
     C*
     C                     SETON                     02
     C                     MOVELP@FMT     LPPARM
     C*
     C** Look up currency array for decimal places.
     C*
     C                     MOVE LPCCY     XCCY
     C                     EXSR CURREN
     C           LPFACU    IFEQ *BLANKS
     C*
     C***  Call access program CAOUCA to read LF/CPACRN
     C*
     C                     CALL VAR2
     C***********          PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM LPCID     @KEY2   8
     C                     PARM           @KYST   7
     C                     PARM           P@FMT
     C*
     C                     MOVELP@FMT     CPPARM
     C           @RTCD     IFNE '*NRF   '
     C           @RTCD     ANDNE'*ERROR '
     C                     MOVE CPCNO     LPFACU
     C                     END
     C                     ELSE
     C                     MOVE LPFACU    @FCNO
     C                     MOVE LPFACT    @FTYP
     C                     MOVE LPFACN    @FSEQ
     C                     END
     C*
     C                     ELSE
     C*
     C** PROCESSING FOR NEGOTIATION RECORD
     C*
     C                     SETON                     03
     C                     MOVELP@FMT     LNPARM
     C*
     C** Look up currency array for decimal places.
     C*
     C                     MOVE LNCCY     XCCY
     C                     EXSR CURREN
     C           LNFACU    IFEQ *BLANKS
     C*
     C***  Call access program CAOUCA to read LF/CPACRN
     C*
     C                     CALL VAR2
     C***********          PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM LNCNO     @KEY2   8
     C                     PARM           @KYST   7
     C                     PARM           P@FMT
     C*
     C                     MOVELP@FMT     CPPARM
     C           @RTCD     IFNE '*NRF   '
     C           @RTCD     ANDNE'*ERROR '
     C                     MOVE CPCNO     LNFACU
     C                     END
     C                     ELSE
     C                     MOVE LNFACU    @FCNO
     C                     MOVE LNFACT    @FTYP
     C                     MOVE LNFACN    @FSEQ
     C                     END
     C*
     C** For Negotiation, set on Expiry Advice flag for PF/FPORTFP
     C** if applicable.
     C*
     C           LNBR      IFEQ LMBR
     C           LNCRNO    ANDEQLMCRNO
     C           LNTNO     ANDEQLMTNO
      *
      ** If the credit is an advised usance, or a sight credit...
     C           LMPRO     IFEQ 'LCAU'
     C           LMPRO     OREQ 'LCAS'
      *
      ** or if this is a third party negotiation ( Pos. 3 of
      ** processihng code is 'X'
     C           LMTPN     OREQ 'X'
     C                     MOVE 'Y'       EXPADV
     C                     END
     C                     END
     C*
     C                     END
     C                     END
     C*
     C**  Do Hash Processing
     C*
     C                     ADD  1         CONTIN
     C                     Z-ADDHASHF     ZZTOTI
     C                     Z-ADDHASHL     ZZTOTD
     C                     MOVE CPAM      ZZAMT
     C                     EXSR HASTOT
     C                     Z-ADDZZTOTI    HASHF
     C                     Z-ADDZZTOTD    HASHL
     C*
     C** Determine Facility Originating Branch
     C*
     C                     MOVE 'A'       @FREC
     C*
     C           @FKEY     CHAINFCLTY                61
     C*
     C** If record found on FCLTY, get company of originating branch
     C*
     C           *IN61     IFEQ '0'
     C*
     C** Find company of Originating Branch
     C*
     C**********           CALL 'AOBRCHR0'                                                    CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM ORBR      @DSNB   3
     C********** SDBRCH    PARM SDBRCH    DSFDY                                               CGL029
     C           SDBRCH    PARM SDBRCH    DSSDY                                               CGL029
     C*
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVEL@DSNB     DBKEY
     C                     MOVE 'SDBRCHPD'DBFILE           ************
     C                     Z-ADD4         DBASE            * DBERR 04 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C*
     C                     MOVE A8CMCD    COOB    3
     C*
     C** Find company of Facility Branch
     C*
     C**********           CALL 'AOBRCHR0'                                                    CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM BRCA      @DSNB   3
     C********** SDBRCH    PARM SDBRCH    DSFDY                                               CGL029
     C           SDBRCH    PARM SDBRCH    DSSDY                                               CGL029
     C*
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVEL@DSNB     DBKEY
     C                     MOVE 'SDBRCHPD'DBFILE           ************
     C                     Z-ADD5         DBASE            * DBERR 05 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C*
     C** Ascertain whether Parent, Loner or Child
     C*
     C                     MOVELFCUS      CKEY
     C*
     C** Call access program for Client details
     C*
     C                     CALL 'AOCUSTR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*KEY   ' @OPTN   7
     C                     PARM           CKEY   10
     C                     PARM '*CNUM  ' KEYSTS  7
     C           SDCUST    PARM SDCUST    DSSDY
     C*
     C           @RTCD     IFNE *BLANKS
     C           @RTCD     ANDNE'*CUSCLS'                                                   MD041994
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVELCKEY      DBKEY
     C                     MOVE 'SDCUSTPD'DBFILE           ************
     C                     Z-ADD2         DBASE            * DBERR 02 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C*
     C** Set up fields for output
     C*
     C                     SETOF                     414243
     C*
     C** Record is a Parent
     C*
     C           BBPAIN    IFEQ 'P'
     C                     SETON                     41
     C                     MOVE FCUS      CPARP
     C                     MOVE ACOF      ACOCP
     C                     END
     C*
     C** Record is a Child
     C           BBPCNB    IFEQ *BLANKS
     C                     SETON                     42
     C                     MOVE ACOF      ACOCC
     C                     MOVE BBPCNB    CPARC
     C                     MOVE FCUS      CNUMC
     C                     MOVE BBPCNB    CPARP
     C                     SETON                     41
     C*
     C** Find Parents Account Officer Code for Child
     C*
     C                     MOVELBBPCNB    CKEY   10
     C                     CALL 'AOCUSTR0'
     C                     PARM '*MSG    '@RTCD
     C                     PARM '*KEY    '@OPTN
     C                     PARM           CKEY
     C                     PARM '*CNUM   'KEYSTS  7
     C           SDCUST    PARM SDCUST    DSSDY
     C*
     C           @RTCD     IFNE *BLANKS
     C           @RTCD     ANDNE'*CUSCLS'                                                   MD041994
     C           *LOCK     IN   LDA
     C                     MOVEL'LE0742  'DBPGM
     C                     MOVE CKEY      DBKEY
     C                     MOVE 'SDCUSTPD'DBFILE           ************
     C                     Z-ADD6         DBASE            * DBERR 06 *
     C                     OUT  LDA                        ************
     C                     EXSR *PSSR
     C                     END
     C**
     C                     MOVE BBACOC    ACOCP
     C                     END
     C*
     C** If 41 off, record is a loner
     C*
     C           *IN41     IFEQ '0'
     C                     SETON                     43
     C                     END
     C*
     C** Perform Hash Totals for records extracted
     C*
     C           EXTCNT    ADD  1         EXTCNT
     C                     Z-ADDEXTWHN    ZZTOTI
     C                     Z-ADDEXTDC     ZZTOTD
     C                     MOVE CPAM      ZZAMT
     C                     EXSR HASTOT
     C                     Z-ADDZZTOTI    EXTWHN
     C                     Z-ADDZZTOTD    EXTDC
     C*
     C** Output FPORTFP record
     C*
     C                     WRITEFPORTFPF
     C*
     C** Else no record found on FCLTY, take branch off record and
     C** end detail calculations
     C*
     C                     ELSE
     C           *IN01     IFEQ '1'
     C                     MOVE LMBR      ORBR
     C                     MOVE LMBR      BRCA
     C                     END
     C*
     C           *IN02     IFEQ '1'
     C                     MOVE LPBR      ORBR
     C                     MOVE LPBR      BRCA
     C                     END
     C*
     C           *IN03     IFEQ '1'
     C                     MOVE LNBR      ORBR
     C                     MOVE LNBR      BRCA
     C                     END
     C                     MOVEL'0'       ORBR
     C                     MOVEL'0'       BRCA
     C*                                                                   S01473
     C***  Call access program CAOUBR to read LEO PF/TBBR                 S01473
     C***  - If there is a Midas branch on the Leo branch alternate       S01473
     C***    code, use that. Otherwise, use the Leo branch, prefixed      S01473
     C***    with a zero to make it 3 long.                               S01473
     C***    Access TBBR with the 2 long Leo branch                       S01473
     C*                                                                   S01473
     C                     MOVE BRCA      LBRC    2                       S01473
     C*                                                                   S01473
     C                     CALL CAOUBR                                    S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*KEY   ' @OPTN   7                       S01473
     C                     PARM LBRC      @KEY    2                       S01473
     C***********          PARM BRCA      @KEY    2                       S01473
     C***********          PARM           @OPTN   7                       S01473
     C                     PARM           @KYST   7                       S01473
     C           TBBRR     PARM TBBRR     DSFDY                           S01473
     C*                                                                   S01473
     C           @RTCD     IFNE *BLANKS                                   S01473
     C           *LOCK     IN   LDA                                       S01473
     C                     MOVEL'LE0742  'DBPGM                           S01473
     C                     MOVELBRCA      DBKEY                           S01473
     C                     MOVE 'TBBR    'DBFILE           ************   S01473
     C                     Z-ADD7         DBASE            * DBERR 07 *   S01473
     C                     OUT  LDA                        ************   S01473
     C                     EXSR *PSSR                                     S01473
     C                     ELSE                                           S01473
     C           T02ALT    IFNE *BLANKS                                   S01473
     C                     MOVELT02ALT    CHKBRC  3                       S01473
     C*                                                                   S01473
     C** Check alternate code is valid Midas branch                       S01473
     C*                                                                   S01473
     C**********           CALL 'AOBRCHR0'                                S01473              CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM '*VERIFY' @OPTN   7                       S01473
     C                     PARM CHKBRC    @DSNB   3                       S01473
     C********** SDBRCH    PARM SDBRCH    DSFDY                           S01473              CGL029
     C           SDBRCH    PARM SDBRCH    DSSDY                                               CGL029
     C*                                                                   S01473
     C           @RTCD     IFEQ *BLANKS                                   S01473
     C                     MOVELT02ALT    ORBR                            S01473
     C                     MOVELT02ALT    BRCA                            S01473
     C                     END                                            S01473
     C*                                                                   S01473
     C                     END                                            S01473
     C                     END                                            S01473
     C*                                                                   S01473
     C                     END
     C*
     C** Read next record on FDRAW via Access Program CAOUFD
     C*
     C                     CALL VAR1
     C***********          PARM '*MSG   ' @RTCD   7                       S01473
     C                     PARM *BLANKS   @RTCD   7                       S01473
     C                     PARM '*NEXT  ' @OPTN   7
     C                     PARM           P@FMT
     C*
     C                     END
     C*
     C                     ENDSR
     C*
     C********************************************************************
      *  SETUP - Set up the parameter to call the Midas Program       *
      *                                                               *
      *  Called by - INIT Initial Processing                          *
      *  Calls     -                                                  *
      *****************************************************************
     C           SETUP     BEGSR
      *
      ** Set up variables to call CAOUFD
     C                     Z-ADD1         H                               S01473
     C***********          MOVELLIB1      @WRK                            S01473
     C                     MOVEALIB1      @WRK                            S01473
      *
     C           *BLANK    LOKUP@WRK,H                   10
     C                     MOVEA'/'       @WRK,H
     C                     ADD  1         H       20
     C                     MOVEA'CAOUFD'  @WRK,H
      *
     C                     MOVEA@WRK      VAR1   21
      *
      ** Set up variables to call CAOUCA
     C                     MOVEA*BLANKS   @WRK
     C                     Z-ADD1         H
     C***********          MOVELLIB2      @WRK                            S01473
     C                     MOVEALIB2      @WRK                            S01473
      *
     C                     MOVE '0'       *IN10                           S01473
     C           *BLANK    LOKUP@WRK,H                   10
     C                     MOVEA'/'       @WRK,H
     C                     ADD  1         H       20
     C                     MOVEA'CAOUCA'  @WRK,H
      *
     C                     MOVEA@WRK      VAR2   21
      *
      ** Set up variables to call CAOUBR                                  S01473
     C                     MOVEA*BLANKS   @WRK                            S01473
     C                     Z-ADD1         H                               S01473
     C***********          MOVELLIB3      @WRK                            S01473
     C                     MOVEALIB3      @WRK                            S01473
      *                                                                   S01473
     C                     MOVE '0'       *IN10                           S01473
     C           *BLANK    LOKUP@WRK,H                   10               S01473
     C                     MOVEA'/'       @WRK,H                          S01473
     C                     ADD  1         H                               S01473
     C                     MOVEA'CAOUBR'  @WRK,H                          S01473
      *                                                                   S01473
     C                     MOVEA@WRK      CAOUBR 21                       S01473
      *                                                                   S01473
     C                     ENDSR
      *****************************************************************
      /TITLE SR/*PSSR
     C********************************************************************
     C*
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *  Called By: VARIOUS                                           *
      *                                                               *
      *  Calls:   AUDIT                                               *
      *                                                               *
      *****************************************************************
     C*
     C           *PSSR     BEGSR
      *
      ***  Check to see that *PSSR has not already been called.
      *
     C           @RUN      IFEQ *BLANKS
     C                     MOVE 'Y'       @RUN    1
     C                     SETON                     U7U8
     C                     DUMP
     C                     EXSR AUDIT
     C                     END
      *
      ***  If *PSSR already run, then just end the program here.
      *
     C                     SETON                     U7U8LR
     C                     RETRN
      *
     C                     ENDSR
     C*
      *****************************************************************
      /TITLE SR/AUDIT
      *****************************************************************
      *                                                               *
      *  AUDIT  - Subroutine to Produce Audit Report and End Program. *
      *                                                               *
      *  Called By: Main Processing, *PSSR                            *
      *                                                               *
      *  Calls:  NOTHING                                              *
      *                                                               *
      *****************************************************************
      *
     C           AUDIT     BEGSR
     C*
     C** Last Record Calcs
     C*
     C           EXTCNT    ADD  1         EXTCNT
     C           CONTIN    ADD  1         CONTIN
      *
      **  Output Trailer Record
      *
     C                     MOVE 'T'       RECI
     C                     Z-ADDEXTCNT    NORE
     C                     Z-ADDEXTWHN    HRWN
     C                     Z-ADDEXTDC     HRDC
     C                     WRITEFPORTT2F
      *
      **  Output Report Header
      *
     C                     WRITELE0742AH
     C*
     C**  Output Audit Report Detail
     C*
     C                     WRITELE0742A1
     C*
     C** Output report if Database Error occured
     C*
     C           *INU7     IFEQ '1'
     C                     WRITEDBFMTAU
     C                     END
     C*
     C***  End Program and Return.
     C*
     C                     SETON                     LR
     C                     RETRN
      *
     C                     ENDSR
      *
     C********************************************************************
      /TITLE SR/ACCY
      *****************************************************************
      *                                                               *
      *  ACCY - SUBROUTINE TO READ CURRENCIES INTO ARRAY              *
      *                                                               *
      *  Called By: INIT                                              *
      *                                                               *
      *  Calls:     NONE                                              *
      *                                                               *
      *****************************************************************
     C*
     C           ACCY      BEGSR                                       ***
     C*
     C                     Z-ADD1         X       30
     C           BACK      TAG                             ** BACK TAG ***
     C                     READ SDCURRPD                 45
     C                     MOVE A6CYCD    ACR,X
     C                     MOVE A6NBDP    ADC,X
     C           X         COMP 150                      44
     C  N44N45   X         ADD  1         X
     C  N44N45             GOTO BACK
     C                     ENDSR
     C********************************************************************
      /TITLE SR/CURREN
     C********************************************************************
     C*                                                               *
     C*  CURREN - SUBROUTINE TO LOKUP CURRENCY ARRAY FOR D.P          *
     C*                                                               *
     C*  Called By: PROCES                                            *
     C*                                                               *
     C*  Calls:     NONE                                              *
     C*                                                               *
     C********************************************************************
     C*
     C           CURREN    BEGSR
     C*
     C                     Z-ADD1         D       30
     C           XCCY      COMP '   '                    80
     C   80                GOTO CUR1
     C           XCCY      LOKUPACR,D                    34
     C  N34                GOTO CUR1
     C                     Z-ADDADC,D     X
     C*
     C** LC Record
     C           *IN01     IFEQ '1'
     C                     Z-ADDLMLAMT    WK     152
     C                     ELSE
     C*
     C** Participation Record
     C           *IN02     IFEQ '1'
     C                     Z-ADDLPAMT     WK
     C                     ELSE
     C*
     C** Negotiation Record
     C                     Z-ADDLNCLAR    WK
     C                     END
     C                     END
     C           X         DOWGT0
     C                     MULT 10        WK
     C                     SUB  1         X                            *
     C                     END                                         *
     C*
     C                     Z-ADDWK        CPAM   130                   *
     C*
     C           CUR1      ENDSR
     C********************************************************************
      /TITLE SR/CURREN
     C********************************************************************
     C*                                                               *
     C*  HASTOT - SUBROUTINE TO PERFORM HASH PROCESSING               *
     C*                                                               *
     C*  Called By: PROCES                                            *
     C*                                                               *
     C*  Calls:     NONE                                              *
     C*                                                               *
     C********************************************************************
     C*
     C           HASTOT    BEGSR
     C*
     C                     Z-ADDZZAMT     ZZAMT  153     91
     C*
     C** Bypass if amount = 0 (91 on)
     C*
     C           *IN91     IFEQ '0'
     C*
     C** Split ZZAMT into integer and decimal fields
     C*
     C                     Z-ADDZZAMT     ZZAMTI 150
     C                     MOVE ZZAMT     ZZAMTD  30
     C*
     C** Define ZZTOTI and ZZTOTD
     C*
     C                     Z-ADDZZTOTI    ZZTOTI 150
     C                     Z-ADDZZTOTD    ZZTOTD  30
     C                     SETOF                     929394
     C                     SETOF                     9599
     C*
     C** Determine sign of ZZAMTI & D, 92 if negative
     C*
     C           ZZAMTI    COMP 0                      9293
     C   93      ZZAMTD    COMP 0                      9293
     C*
     C** Bypass if amount is zero
     C*
     C           *IN93     IFEQ '0'
     C*
     C** Determine sign of ZZTOTI & D. (91 if negative)
     C           ZZTOTI    COMP 0                      9193
     C   93      ZZTOTD    COMP 0                      9193
     C*
     C** If ZZTOTAL is zero, return ZZAMOUNT else continue processing
     C*
     C           *IN93     IFEQ '1'
     C                     Z-ADDZZAMTI    ZZTOTI
     C                     Z-ADDZZAMTD    ZZTOTD
     C                     ELSE
     C*
     C** If signs are the same, perform overflow checks
     C*
     C           *IN91     IFEQ '0'
     C           *IN92     ANDEQ'0'
     C           *IN91     OREQ '1'
     C           *IN92     ANDEQ'1'
     C*
     C           ZZAMTD    ADD  ZZTOTD    ZZWK2   40
     C           ZZWK2     COMP 999                  93    '93' = CARRY
     C  N93      ZZWK2     COMP -999                   93    INTO INTEGER.
     C*
     C   93N92   ZZAMTI    ADD  1         ZZWK3  150       ADD 'CARRY' +VE
     C      93 92ZZAMTI    SUB  1         ZZWK3            SUB 'CARRY' -VE
     C   93      ZZTOTI    ADD  ZZWK3     ZZWK3
     C  N93      ZZTOTI    ADD  ZZAMTI    ZZWK3
     C*
     C* If the modulus of ZZWK3 is LT MOD. ZZTOTI then O/F has occured
     C*
     C  N92      ZZWK3     COMP ZZTOTI                 99  -92 MEANS NOS.
     C   92      ZZWK3     COMP ZZTOTI               99     NEGATIVE
     C  N99                Z-ADDZZWK2     ZZTOTD
     C  N99                Z-ADDZZWK3     ZZTOTI
     C*
     C* If O/F zeroise ZZAMT,IND '99' set and ZZTOT fields left intact
     C*
     C   99                Z-ADD0         ZZAMT  153
     C*
     C** Else signs differ
     C*
     C                     ELSE
     C*
     C* If ZZAMT was negative, make it positive to comp with ZZTOT
     C*
     C           *IN92     IFEQ '1'
     C                     Z-SUBZZAMTI    ZZAMTI 150
     C                     Z-SUBZZAMTD    ZZAMTD  30
     C                     END
     C*
     C* If ZZTOT was negative, make it positive to comp with ZZAMT
     C*
     C           *IN91     IFEQ '1'
     C                     Z-SUBZZTOTI    ZZTOTI
     C                     Z-SUBZZTOTD    ZZTOTD
     C                     END
     C*
     C** Both ZZAMT and ZZTOT are now positive
     C*
     C           ZZTOTI    COMP ZZAMTI               93  95
     C   95      ZZTOTD    COMP ZZAMTD               93  95
     C*
     C* If ZZTOT = ZZAMT return zero
     C*
     C           *IN95     IFEQ '1'
     C                     Z-ADD0         ZZTOTI
     C                     Z-ADD0         ZZTOTD
     C*
     C                     ELSE
     C*
     C** Else ZZTOT NE ZZAMT
     C*
     C** If ZZTOT GT ZZAMT
     C*
     C   93      ZZAMTD    COMP ZZTOTD               94
     C   93 94   ZZTOTI    SUB  1         ZZTOTI
     C   93 94   ZZTOTD    ADD  1000      ZZWK2
     C   93      ZZTOTI    SUB  ZZAMTI    ZZTOTI
     C   93 94   ZZWK2     SUB  ZZAMTD    ZZTOTD
     C   93N94   ZZTOTD    SUB  ZZAMTD    ZZTOTD
     C*
     C** If ZZAMT GT ZZTOT
     C*
     C  N93      ZZTOTD    COMP ZZAMTD               94
     C  N93 94   ZZAMTI    SUB  1         ZZWK3  150
     C  N93 94   ZZAMTD    ADD  1000      ZZWK2
     C  N93 94   ZZWK3     SUB  ZZTOTI    ZZTOTI
     C  N93N94   ZZAMTI    SUB  ZZTOTI    ZZTOTI
     C  N93 94   ZZWK2     SUB  ZZTOTD    ZZTOTD
     C  N93N94   ZZAMTD    SUB  ZZTOTD    ZZTOTD
     C*
     C** Reverse sign of ZZTOT if larger I/P fields were negative
     C*
     C           *IN93     IFEQ '1'
     C           *IN91     ANDEQ'1'
     C           *IN93     OREQ '0'
     C           *IN92     ANDEQ'1'
     C                     Z-SUBZZTOTI    ZZTOTI
     C                     Z-SUBZZTOTD    ZZTOTD
     C                     END
     C*
     C** Restore sign of ZZAMTI & ZZAMTD if it was reversed
     C*
     C           *IN92     IFEQ '1'
     C                     Z-SUBZZAMTI    ZZAMTI
     C                     Z-SUBZZAMTD    ZZAMTD
     C                     END
     C*
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C** If ZZTOTD is zero and ZZTOTI is negative, set up ZZNEGD.
     C*
     C           ZZTOTD    IFEQ 0
     C           ZZTOTI    ANDLT0
     C                     MOVE '.000-'   ZZNEGD  5
     C                     END
     C*
     C                     END
     C*
     C                     ENDSR
     C********************************************************************
** CPY@   **      OBJECT COPYRIGHT
(c) Finastra International Limited 2001
