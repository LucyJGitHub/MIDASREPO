/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas ME Send prompt to MS ME IMM control  *MODULE')  */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Message Management Module                        */
/*                                                                   */
/*       MEC1024M - Send Prompt to MS ME IMM Extraction Job          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*    This source is centrally supported and must ONLY be            */
/*    amended by Core Development Personnel                          */
/*                                                                   */
/*    /COPY, Client or Country amendments must not be                */
/*    applied to this source.                                        */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4.01 -----------------------------------------------*/
/*       Last Amend No. CPK015             Date 18Apr02              */
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*       Prev Amend No. CSW008 *CREATE     Date 29Jul96              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/* This module is a component of service program SP4ME0001.          */
/*                                                                   */
/* This program is responsible for starting the Incoming Message     */
/* Management process, or prompting the process if it is already     */
/* active.                                                           */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CPK015 - 4.01 packaging.  Use DPLIB and not DILIB.          */
/*       CSW008 - Create ILE module based on MEC1024                 */
/*                                                                   */
/*********************************************************************/
 
             PGM        PARM(&RTN_CODE)
 
/* Declare variables */
             DCL        VAR(&RTN_CODE) TYPE(*CHAR) LEN(7)
/************DCL        VAR(&DILIB) TYPE(*CHAR) LEN(10)                                */ /*CPK015*/
             DCL        VAR(&DBPREFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&FLDLEN) TYPE(*DEC) LEN(5 0) VALUE(50)
             DCL        VAR(&DATA) TYPE(*CHAR) LEN(50)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2001')
 
/* Global Monitor Message */
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) +
                           EXEC(GOTO ABNORMAL)
 
/* Send Message to MRUNQ */
             SNDPGMMSG  MSG('MEC1024M - Send Prompt to MS ME IMM +
                          Extraction Control') TOMSGQ(MRUNQ)
 
/**Construct**ILIB**/ /*                                                               */ /*CPK015*/
/************RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&DBPREFIX)                         */ /*CPK015*/
/************CHGVAR     VAR(&DILIB) VALUE(&DBPREFIX *CAT 'DILIB')                      */ /*CPK015*/
             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
 
/* Check if data queue exists */
/************CALLPRC    PRC(MEC1025M)                                                  */ /*CPK015*/
 
/* Allocate data queue *EXCL to see if process active */
/************ALCOBJ     OBJ((&DILIB/MSMEIMM *DTAQ *EXCL)) WAIT(0)                      */ /*CPK015*/
             ALCOBJ     OBJ((MSMEIMM *DTAQ *EXCL)) WAIT(0)                                /*CPK015*/
             MONMSG     MSGID(CPF1002) EXEC(DO)
             GOTO       CMDLBL(SEND)
             ENDDO
 
/* Start process */
             CALLPRC    PRC(MEC1023M) PARM(&RTN_CODE)
             IF         COND((&RTN_CODE *NE '       ')  *AND +
                             (&RTN_CODE *NE 'MIN0123')) THEN(DO)
             GOTO       CMDLBL(ABNORMAL)
             ENDDO
 
/* Deallocate */
/************DLCOBJ     OBJ((&DILIB/MSMEIMM *DTAQ *EXCL))                              */ /*CPK015*/
             DLCOBJ     OBJ((MSMEIMM *DTAQ *EXCL))                                        /*CPK015*/
 
/* Send data queue entry to prompt process */
 SEND:       CHGVAR     VAR(&DATA) VALUE(' ')
             CHGVAR     VAR(&DATA) VALUE('Prompt')
/************CALL       PGM(QSNDDTAQ) PARM('MSMEIMM' &DILIB +                          */ /*CPK015*/
/************             &FLDLEN &DATA)                                               */ /*CPK015*/
             CALL       PGM(QSNDDTAQ) PARM('MSMEIMM' '*LIBL' &FLDLEN +
                          &DATA)                                                          /*CPK015*/
 
             GOTO       CMDLBL(ENDCLPGM)
 
/* Abnormal termination processing */
/* Terminate with escape message   */
ABNORMAL:
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
/************DLCOBJ     OBJ((&DILIB/MSMEIMM *DTAQ *EXCL))                              */ /*CPK015*/
             DLCOBJ     OBJ((MSMEIMM *DTAQ *EXCL))                                        /*CPK015*/
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
/************SNDPGMMSG  MSG('Program MEC102NS (module MEC1023M) +                      */ /*CPK015*/
/************             ended abnormally') TOMSGQ(MOPERQ MRUNQ)                      */ /*CPK015*/
             SNDPGMMSG  MSG('Module MEC1043M ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
/************SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +                 */ /*CPK015*/
/************             MEC102NS ended abnormally') MSGTYPE(*ESCAPE)                 */ /*CPK015*/
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Module +
                          MEC1024M ended abnormally') MSGTYPE(*ESCAPE)                    /*CPK015*/
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
/**/
 ENDCLPGM:
             ENDPGM
