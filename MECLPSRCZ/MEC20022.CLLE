/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas ME Submit MS MX IMM extraction job')            */
/*********************************************************************/
/*                                                                   */
/*       Midas - Message Management Module                           */
/*                                                                   */
/*       MEC20022 - Submit MS MX IMM Extraction job                  */
/*                                                                   */
/*       (c) Finastra International Limited 2021                     */
/*                                                                   */
/*       Last Amend No. CSW122 *CREATE     Date 04Oct21              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CSW122 - SWIFT ISO 20022                                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTN_CODE)

/** Copyright statement defination  */

             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2021')

/** Declare variables */

             DCL        VAR(&RTN_CODE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&TEMP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOB_INFO) TYPE(*CHAR) LEN(512)
             DCL        VAR(&FORMAT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOB) TYPE(*CHAR) LEN(26)
             DCL        VAR(&INT_JOB_ID) TYPE(*CHAR) LEN(16)
             DCL        VAR(&JOB1) TYPE(*CHAR) LEN(10)
             DCL        VAR(&USER1) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBNBR1) TYPE(*CHAR) LEN(6)
             DCL        VAR(&THIS_JOB) TYPE(*CHAR) LEN(26)

/** Global Monitor Message */

             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) +
                           EXEC(GOTO ABNORMAL)

/**           Copyright statement definition - at runtime             */

             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited')

/** Send Message to MRUNQ */

             SNDPGMMSG  MSG('MEC20022 - Submit MS MX IMM Extraction +
                          Job') TOMSGQ(MRUNQ)
             CHGJOB     LOG(4 0 *MSG) SWS(XXXXXX00)
             CHGVAR     VAR(&RTN_CODE) VALUE(' ')

/** Check activity of job submitted */

             RTVJOBA    JOB(&JOB1) USER(&USER1) NBR(&JOBNBR1)
             CHGVAR     VAR(&THIS_JOB) VALUE(&JOB1 *CAT &USER1 *CAT +
                          &JOBNBR1)
             RTVDTAARA  DTAARA(MEMXDTA  (9 10)) RTNVAR(&TEMP)
             CHGVAR     VAR(%SST(&JOB 1 10)) VALUE(&TEMP)
             RTVDTAARA  DTAARA(MEMXDTA  (19 10)) RTNVAR(&TEMP)
             CHGVAR     VAR(%SST(&JOB 11 10)) VALUE(&TEMP)
             RTVDTAARA  DTAARA(MEMXDTA  (29 6)) RTNVAR(&TEMP)
             CHGVAR     VAR(%SST(&JOB 21 6)) VALUE(%SST(&TEMP 1 6))
             CHGVAR     VAR(&FORMAT) VALUE('JOBI0200')
             IF         COND((&JOB *NE ' ')    *AND +
                             (&JOB *NE &THIS_JOB)) THEN(DO)
             CALL       PGM(MEC1026) PARM(&RTN_CODE &JOB_INFO +
                          &FORMAT &JOB &INT_JOB_ID)

/** If active say so or on jobq say so */

             IF         COND(&RTN_CODE *NE 'MIN0125') THEN(DO)
             IF         COND((%SST(&JOB_INFO 51 10) *EQ '*ACTIVE') *OR +
                             (%SST(&JOB_INFO 51 10) *EQ '*JOBQ  ') +
                        ) THEN(DO)
             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0619')
             RETURN
             ENDDO
             ENDDO
             ENDDO

/** Allocate data queue *EXCL to see if process active */

             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
             ALCOBJ     OBJ((MSMXIMM *DTAQ *EXCL)) WAIT(60)
             MONMSG     MSGID(CPF1002) EXEC(DO)

/** Process already active */

             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0618')
             GOTO       CMDLBL(ENDCLPGM)
             ENDDO

/** Change allocation to shared read */

             ALCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD)) WAIT(0)
             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))

/** Remove messages to allow read of completion message */

             RMVMSG     PGMQ(*SAME) CLEAR(*ALL)
             SBMJOB     CMD(CALL PGM(MEC20022C)) JOB(MS_MX_IMM) +
                          JOBD(MEJOBD) JOBQ(MEJOBQ) USER(*JOBD) +
                          RTGDTA(MSMXIMM) INLLIBL(*JOBD) +
                          MSGQ(MOPERQ) OUTQ(*JOBD)
             RCVMSG     PGMQ(*SAME) RMV(*NO) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID)

/** Retrieve job information and store on MEDTA */
/** If no completion message then end in error */

             IF         COND(&MSGID *EQ 'CPC1221') THEN(DO)
             CHGDTAARA  DTAARA(MEMXDTA  (9 10)) VALUE(%SST(&MSGDTA 1 +
                          10))
             CHGDTAARA  DTAARA(MEMXDTA  (19 10)) VALUE(%SST(&MSGDTA 11 +
                          10))
             CHGDTAARA  DTAARA(MEMXDTA  (29 6)) VALUE(%SST(&MSGDTA 21 +
                          6))
             ENDDO
             ELSE       CMD(DO)
             GOTO       CMDLBL(ABNORMAL)
             ENDDO

             GOTO       CMDLBL(ENDCLPGM)

/** Abnormal termination processing                       */
/** Terminate with escape message */

ABNORMAL:
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)

             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)

             SNDPGMMSG  MSG('Program MEC20022 ended abnormally') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          MEC20022 ended abnormally') MSGTYPE(*ESCAPE)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)

 ENDCLPGM:   RCLRSC     LVL(*CALLER)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)

             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
             ENDPGM
