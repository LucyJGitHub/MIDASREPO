000100220214/*********************************************************************/
000200220214/*STD    CLPBASEBND                                                  */
000300220214/*EXI *  TEXT('Midas ME Submit MS_MX_IMM extraction job')            */
000400220214/*********************************************************************/
000500220214/*                                                                   */
000600220214/*       Midas    - Message Management Module                        */
000700220214/*                                                                   */
000800220214/*       MEC20022B - Submit MS_MX_IMM Extraction job                 */
000900220214/*                                                                   */
001000220214/*       (c) Finastra International Limited 2021                     */
001100220214/*                                                                   */
001200220214/*                                                                   */
001300220214/*       Last Amend No. CSW122 *CREATE     Date 04Oct21              */
001400220214/*                                                                   */
001500220214/*-------------------------------------------------------------------*/
001600220214/*                                                                   */
001700220214/*       CSW122 - SWIFT ISO 20022                                    */
001800220214/*                                                                   */
001900220214/*********************************************************************/
002000220214
002100220214             PGM        PARM(&RTN_CODE)
002200220214
002300220214/** Declare variables */
002400220214             DCL        VAR(&RTN_CODE) TYPE(*CHAR) LEN(7)
002500220214             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
002600220214             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(256)
002700220214             DCL        VAR(&TEMP) TYPE(*CHAR) LEN(10)
002800220214             DCL        VAR(&JOB_INFO) TYPE(*CHAR) LEN(512)
002900220214             DCL        VAR(&FORMAT) TYPE(*CHAR) LEN(10)
003000220214             DCL        VAR(&JOB) TYPE(*CHAR) LEN(26)
003100220214             DCL        VAR(&INT_JOB_ID) TYPE(*CHAR) LEN(16)
003200220214             DCL        VAR(&JOB1) TYPE(*CHAR) LEN(10)
003300220214             DCL        VAR(&USER1) TYPE(*CHAR) LEN(10)
003400220214             DCL        VAR(&JOBNBR1) TYPE(*CHAR) LEN(6)
003500220214             DCL        VAR(&THIS_JOB) TYPE(*CHAR) LEN(26)
003600220214
003700220214             COPYRIGHT  TEXT('(c) Finastra International Limited 2021')
003800220214
003900220214/** Global Monitor Message */
004000220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO ABNORMAL)
004100220214
004200220214/** Send Message to MRUNQ */
004300220214             SNDPGMMSG  MSG('MEC20022B - Submit MS_MX_IMM Extraction Job') +
004400220214                          TOMSGQ(MRUNQ)
004500220214             CHGJOB     LOG(4 0 *MSG) SWS(XXXXXX00)
004600220214             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
004700220214
004800220214/** Check activity of job submitted */
004900220214             RTVJOBA    JOB(&JOB1) USER(&USER1) NBR(&JOBNBR1)
005000220214             CHGVAR     VAR(&THIS_JOB) VALUE(&JOB1 *CAT &USER1 *CAT &JOBNBR1)
005100220214             RTVDTAARA  DTAARA(MEMXDTA  (9 10)) RTNVAR(&TEMP)
005200220214             CHGVAR     VAR(%SST(&JOB 1 10)) VALUE(&TEMP)
005300220214             RTVDTAARA  DTAARA(MEMXDTA  (19 10)) RTNVAR(&TEMP)
005400220214             CHGVAR     VAR(%SST(&JOB 11 10)) VALUE(&TEMP)
005500220214             RTVDTAARA  DTAARA(MEMXDTA  (29 6)) RTNVAR(&TEMP)
005600220214             CHGVAR     VAR(%SST(&JOB 21 6)) VALUE(%SST(&TEMP 1 6))
005700220214             CHGVAR     VAR(&FORMAT) VALUE('JOBI0200')
005800220214             IF         COND((&JOB *NE ' ')    *AND (&JOB *NE &THIS_JOB)) THEN(DO)
005900220214                CALL       PGM(MEC1026) PARM(&RTN_CODE &JOB_INFO +
006000220214                          &FORMAT &JOB &INT_JOB_ID)
006100220214
006200220214/** If active say so or on jobq say so */
006300220214                IF         COND(&RTN_CODE *NE 'MIN0125') THEN(DO)
006400220214                   IF         COND((%SST(&JOB_INFO 51 10) *EQ '*ACTIVE') *OR +
006500220214                                (%SST(&JOB_INFO 51 10) *EQ '*JOBQ  ') ) THEN(DO)
006600220214                      CHGVAR     VAR(&RTN_CODE) VALUE('MIN0619')
006700220214                      RETURN
006800220214                   ENDDO
006900220214                ENDDO
007000220214             ENDDO
007100220214
007200220214/** Allocate data queue *EXCL to see if process active */
007300220214             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
007400220214
007500220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *EXCL)) WAIT(60)
007600220214             MONMSG     MSGID(CPF1002) EXEC(DO)
007700220214
007800220214/** Process already active */
007900220214                CHGVAR     VAR(&RTN_CODE) VALUE('MIN0618')
008000220214                GOTO       CMDLBL(ENDCLPGM)
008100220214             ENDDO
008200220214
008300220214/** Change allocation to shared read */
008400220214
008500220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD)) WAIT(0)
008600220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
008700220214
008800220214/** Remove messages to allow read of completion message */
008900220214             RMVMSG     PGMQ(*SAME) CLEAR(*ALL)
009000220214
009100220214             SBMJOB     CMD(CALL PGM(MEC20022C)) JOB(MS_MX_IMM) JOBD(MEJOBD) +
009200220214                          JOBQ(MEJOBQ) USER(*JOBD) RTGDTA(MSMXIMM) INLLIBL(*JOBD) +
009300220214                          MSGQ(MOPERQ) OUTQ(*JOBD) /*CSC023*/
009400220214             RCVMSG     PGMQ(*SAME) RMV(*NO) MSGDTA(&MSGDTA) MSGID(&MSGID)
009500220214
009600220214/** Retrieve job information and store on MEMXDTA */
009700220214/** If no completion message then end in error */
009800220214             IF         COND(&MSGID *EQ 'CPC1221') THEN(DO)
009900220214                CHGDTAARA  DTAARA(MEMXDTA  (9 10)) VALUE(%SST(&MSGDTA 1 10))
010000220214                CHGDTAARA  DTAARA(MEMXDTA  (19 10)) VALUE(%SST(&MSGDTA 11 10))
010100220214                CHGDTAARA  DTAARA(MEMXDTA  (29 6)) VALUE(%SST(&MSGDTA 21 6))
010200220214             ENDDO
010300220214             ELSE       CMD(DO)
010400220214                GOTO       CMDLBL(ABNORMAL)
010500220214             ENDDO
010600220214
010700220214             GOTO       CMDLBL(ENDCLPGM)
010800220214
010900220214/** Abnormal termination processing */
011000220214/** Terminate with escape message */
011100220214 ABNORMAL:
011200220214             CHGJOB     SWS(XXXXXX11)
011300220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
011400220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
011500220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
011600220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
011700220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
011800220214
011900220214             SNDPGMMSG  MSG('Module MEC20022B ended abnormally') TOMSGQ(MOPERQ +
012000220214                          MRUNQ)
012100220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
012200220214
012300220214             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Module MEC20022B ended +
012400220214                          abnormally') MSGTYPE(*ESCAPE)
012500220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
012600220214
012700220214 ENDCLPGM:   RCLRSC     LVL(*CALLER)
012800220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
012900220214
013000220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
013100220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
013200220214             ENDPGM
