000100220214/*********************************************************************/
000200220214/*STD    CLPBASEBND                                                  */
000300220214/*EXI *  TEXT('Midas MS MX IMM Action Test')                         */
000400220214/*********************************************************************/
000500220214/*                                                                   */
000600220214/*       Midas - Message Management Module                           */
000700220214/*                                                                   */
000800220214/*       MEC20022D - MS MX IMM Extraction Control - Batch process    */
000900220214/*                                                                   */
001000220214/*       (c) Finastra International Limited 2021                     */
001100220214/*                                                                   */
001200220214/*       Last Amend No. CSW122 *CREATE     Date 04Oct21              */
001300220214/*                                                                   */
001400220214/*********************************************************************/
001500220214/*                                                                   */
001600220214/*       CSW122 - SWIFT ISO 20022                                    */
001700220214/*                                                                   */
001800220214/*********************************************************************/
001900220214             PGM        PARM(&RTN_CODE &ACTION)
002000220214
002100220214/** Copyright statement defination  */
002200220214
002300220214             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) Finastra +
002400220214                          International Limited 2021')
002500220214
002600220214/** Declare variables */
002700220214
002800220214             DCL        VAR(&RTN_CODE) TYPE(*CHAR) LEN(7)
002900220214             DCL        VAR(&ACTION) TYPE(*CHAR) LEN(10)
003000220214             DCL        VAR(&TYPE) TYPE(*CHAR) LEN(1)
003100220214             DCL        VAR(&JOB) TYPE(*CHAR) LEN(10)
003200220214             DCL        VAR(&USER) TYPE(*CHAR) LEN(10)
003300220214             DCL        VAR(&JOBNBR) TYPE(*CHAR) LEN(6)
003400220214             DCL        VAR(&FLDLEN) TYPE(*DEC) LEN(5 0) VALUE(50)
003500220214             DCL        VAR(&WAIT) TYPE(*DEC) LEN(5 0)
003600220214             DCL        VAR(&DATA) TYPE(*CHAR) LEN(50)
003700220214             DCL        VAR(&DELAY_TIME) TYPE(*DEC) LEN(5 0)
003800220214             DCL        VAR(&TEMP) TYPE(*CHAR) LEN(10)
003900220214             DCL        VAR(&JOB_INFO) TYPE(*CHAR) LEN(512)
004000220214             DCL        VAR(&FORMAT) TYPE(*CHAR) LEN(10)
004100220214             DCL        VAR(&JOB26) TYPE(*CHAR) LEN(26)
004200220214             DCL        VAR(&INT_JOB_ID) TYPE(*CHAR) LEN(16)
004300220214             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(132)
004400220214
004500220214/** Global Monitor Message */
004600220214
004700220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) +
004800220214                           EXEC(GOTO ABNORMAL)
004900220214
005000220214/**           Copyright statement definition - at runtime             */
005100220214
005200220214             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
005300220214                          Finastra International Limited')
005400220214
005500220214/** Send Message to MRUNQ */
005600220214
005700220214             SNDPGMMSG  MSG('MEC20022D - MS ME IMM Extraction Test +
005800220214                          Action') TOMSGQ(MRUNQ)
005900220214             CHGJOB     SWS(XXXXXX00)
006000220214
006100220214             CHGVAR     VAR(&RTN_CODE) VALUE(' ')
006200220214
006300220214
006400220214/** If action is Start */
006500220214
006600220214             IF         COND(&ACTION *EQ 'Start     ') THEN(DO)
006700220214
006800220214/** Allocate data queue *EXCL to see if process active */
006900220214
007000220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *EXCL)) WAIT(60)
007100220214             MONMSG     MSGID(CPF1002) EXEC(DO)
007200220214
007300220214/** Process already active */
007400220214
007500220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0619')
007600220214             GOTO       CMDLBL(ENDCLPGM)
007700220214             ENDDO
007800220214
007900220214/** Change allocation to shared read */
008000220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD)) WAIT(0)
008100220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
008200220214
008300220214/** Process is not active - if interactive submit to batch */
008400220214
008500220214             RTVJOBA    TYPE(&TYPE)
008600220214             IF         COND(&TYPE *EQ '1') THEN(DO)
008700220214             CALL       PGM(MEC20022) PARM(&RTN_CODE)
008800220214             IF         COND((&RTN_CODE *NE '       ')  *AND +
008900220214                             (&RTN_CODE *NE 'MIN0619')) THEN(DO)
009000220214             GOTO       CMDLBL(ABNORMAL)
009100220214             ENDDO
009200220214
009300220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
009400220214             ENDDO
009500220214/** End 'Start' */
009600220214             ENDDO
009700220214
009800220214/** If action is Next */
009900220214
010000220214             IF         COND(&ACTION *EQ 'Next      ') THEN(DO)
010100220214
010200220214/** Set delay time */
010300220214
010400220214             CHGVAR     VAR(&DELAY_TIME) VALUE(10)
010500220214
010600220214/** Read data queue for next prompt for action */
010700220214
010800220214             CHGVAR     VAR(&WAIT) VALUE(1)
010900220214
011000220214 RDTAQ:
011100220214             CALL       PGM(QRCVDTAQ) PARM('MSMXIMM' '*LIBL' &FLDLEN &DATA &WAIT)
011200220214
011300220214/** No information */
011400220214
011500220214             IF         COND(&FLDLEN *EQ 0) THEN(DO)
011600220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0620')
011700220214             ENDDO
011800220214
011900220214/** Information */
012000220214
012100220214             IF         COND(&FLDLEN *GT 0) THEN(DO)
012200220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0621')
012300220214
012400220214/** Close down requested */
012500220214
012600220214             IF         COND(%SST(&DATA 1 3) *EQ 'End') THEN(DO)
012700220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0128')
012800220214             RETURN
012900220214             ENDDO
013000220214             ENDDO
013100220214
013200220214/** Delay job by wait time (first time only) */
013300220214
013400220214             IF         COND(&WAIT *GE 0) THEN(DO)
013500220214             DLYJOB     DLY(&DELAY_TIME)
013600220214             ENDDO
013700220214
013800220214/** If no information from prior read of data queue */
013900220214/** Re-read queue for ever */
014000220214
014100220214             IF         COND(&RTN_CODE *EQ 'MIN0620') THEN(DO)
014200220214             CHGVAR     VAR(&WAIT) VALUE(-1)
014300220214             GOTO       CMDLBL(RDTAQ)
014400220214             ENDDO
014500220214
014600220214/** Else read all information on data queue */
014700220214/** and exit */
014800220214
014900220214             ELSE       CMD(DO)
015000220214             CHGVAR     VAR(&WAIT) VALUE(1)
015100220214
015200220214 ADTAQ:
015300220214             CALL       PGM(QRCVDTAQ) PARM('MSMXIMM' '*LIBL' &FLDLEN &DATA &WAIT)
015400220214
015500220214/** No information */
015600220214
015700220214             IF         COND(&FLDLEN *EQ 0) THEN(DO)
015800220214             RETURN
015900220214             ENDDO
016000220214
016100220214/** Information */
016200220214
016300220214             IF         COND(&FLDLEN *GT 0) THEN(DO)
016400220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0621')
016500220214
016600220214/** Close down requested */
016700220214
016800220214             IF         COND(%SST(&DATA 1 3) *EQ 'End') THEN(DO)
016900220214             CHGVAR     VAR(&RTN_CODE) VALUE('MIN0128')
017000220214             RETURN
017100220214             ENDDO
017200220214             ENDDO
017300220214             GOTO       CMDLBL(ADTAQ)
017400220214             ENDDO
017500220214/** End 'Next' */
017600220214             ENDDO
017700220214
017800220214
017900220214/** If action is Re-submit */
018000220214
018100220214             IF         COND(&ACTION *EQ 'Re-submit ') THEN(DO)
018200220214             CALL       PGM(MEC20022) PARM(&RTN_CODE)
018300220214             IF         COND(&RTN_CODE *NE '       ') THEN(DO)
018400220214             GOTO       CMDLBL(ABNORMAL)
018500220214             ENDDO
018600220214
018700220214             DLCOBJ     OBJ((MSMEIMM *DTAQ *SHRUPD))
018800220214             ENDDO
018900220214
019000220214/** If action is End */
019100220214
019200220214             IF         COND(&ACTION *EQ 'End       ') THEN(DO)
019300220214
019400220214/** Allocate data queue *SHRUPD to see if process active */
019500220214
019600220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD)) WAIT(0)
019700220214             MONMSG     MSGID(CPF1002) EXEC(DO)
019800220214
019900220214/** Process cannot be killed re-try later */
020000220214
020100220214             CHGVAR     VAR(&RTN_CODE) VALUE('RETRY')
020200220214             GOTO       CMDLBL(ENDCLPGM)
020300220214             ENDDO
020400220214
020500220214/** Send data queue entry to End process */
020600220214
020700220214             CHGVAR     VAR(&DATA) VALUE(' ')
020800220214             CHGVAR     VAR(&DATA) VALUE('End')
020900220214
021000220214             CALL       PGM(QSNDDTAQ) PARM('MSMXIMM' '*LIBL' &FLDLEN +
021100220214                          &DATA)
021200220214
021300220214/** If termination is interactive then show info screen */
021400220214
021500220214             RTVJOBA    TYPE(&TYPE)
021600220214             IF         COND(&TYPE *EQ '1') THEN(DO)
021700220214             CHGVAR     VAR(&MSGDTA) VALUE(' ')
021800220214             CALL       PGM(MEC1027) PARM(&RTN_CODE 'MIN0615' +
021900220214                          'GBMEMSG  ' &MSGDTA '          ' ' ' +
022000220214                          'MEC20022D' 'Y')
022100220214             ENDDO
022200220214
022300220214/** Try to allocate data queue *EXCL */
022400220214
022500220214ALCOBJ:
022600220214             ALCOBJ     OBJ((MSMXIMM *DTAQ *EXCL)) WAIT(120)
022700220214             MONMSG     MSGID(CPF1002) EXEC(DO)
022800220214
022900220214/** Check activity of job submitted */
023000220214
023100220214             RTVDTAARA  DTAARA(MEMXDTA (9 10)) RTNVAR(&TEMP)
023200220214             CHGVAR     VAR(%SST(&JOB26 1 10)) VALUE(&TEMP)
023300220214             RTVDTAARA  DTAARA(MEMXDTA (19 10)) RTNVAR(&TEMP)
023400220214             CHGVAR     VAR(%SST(&JOB26 11 10)) VALUE(&TEMP)
023500220214             RTVDTAARA  DTAARA(MEMXDTA (29 6)) RTNVAR(&TEMP)
023600220214             CHGVAR     VAR(%SST(&JOB26 21 6)) VALUE(%SST(&TEMP 1 6))
023700220214             CHGVAR     VAR(&FORMAT) VALUE('JOBI0200')
023800220214             CALL       PGM(MEC1026) PARM(&RTN_CODE &JOB_INFO +
023900220214                          &FORMAT &JOB26 &INT_JOB_ID)
024000220214
024100220214/** If inactive end in error */
024200220214
024300220214             IF         COND((&RTN_CODE *EQ 'MIN0125') *OR +
024400220214                             (%SST(&JOB_INFO 51 10) *EQ '*OUTQ  ') +
024500220214                        ) THEN(DO)
024600220214             GOTO       CMDLBL(ABNORMAL)
024700220214             ENDDO
024800220214
024900220214/** Kill process defined in MEMXDTA */
025000220214
025100220214             RTVDTAARA  DTAARA(MEMXDTA (9 10)) RTNVAR(&JOB)
025200220214             RTVDTAARA  DTAARA(MEMXDTA (19 10)) RTNVAR(&USER)
025300220214             RTVDTAARA  DTAARA(MEMXDTA (29 6)) RTNVAR(&JOBNBR)
025400220214
025500220214/** If termination is interactive then show info screen */
025600220214
025700220214             RTVJOBA    TYPE(&TYPE)
025800220214             IF         COND(&TYPE *EQ '1') THEN(DO)
025900220214             CHGVAR     VAR(&MSGDTA) VALUE(' ')
026000220214             CHGVAR     VAR(&MSGDTA) VALUE(&JOB *CAT &USER *CAT +
026100220214                          &JOBNBR)
026200220214             CALL       PGM(MEC1027) PARM(&RTN_CODE 'MIN0616'+
026300220214                          'GBMEMSG  ' &MSGDTA '          ' ' ' +
026400220214                          'MEC20022D' 'Y')
026500220214             ENDDO
026600220214
026700220214/** If jobq then *IMMED */
026800220214
026900220214             IF         COND((%SST(&JOB_INFO 51 10) *EQ '*JOBQ  ') +
027000220214                        ) THEN(DO)
027100220214             ENDJOB     JOB(&JOBNBR/&USER/&JOB) OPTION(*IMMED)
027200220214             MONMSG     MSGID(CPF1362 CPF1363 CPF1361 CPF1352)
027300220214             GOTO       CMDLBL(ALCOBJ)
027400220214             ENDDO
027500220214
027600220214/** If active then *CNTRLD for 10 minutes */
027700220214
027800220214             IF         COND((%SST(&JOB_INFO 51 10) *EQ '*ACTIVE') +
027900220214                        ) THEN(DO)
028000220214             ENDJOB     JOB(&JOBNBR/&USER/&JOB) OPTION(*CNTRLD) +
028100220214                          DELAY(600)
028200220214             MONMSG     MSGID(CPF1362 CPF1363 CPF1361 CPF1352)
028300220214             GOTO       CMDLBL(ALCOBJ)
028400220214             ENDDO
028500220214
028600220214             ENDDO
028700220214
028800220214/** Check activity of job submitted */
028900220214
029000220214             RTVDTAARA  DTAARA(MEMXDTA (9 10)) RTNVAR(&TEMP)
029100220214             CHGVAR     VAR(%SST(&JOB26 1 10)) VALUE(&TEMP)
029200220214             RTVDTAARA  DTAARA(MEMXDTA (19 10)) RTNVAR(&TEMP)
029300220214             CHGVAR     VAR(%SST(&JOB26 11 10)) VALUE(&TEMP)
029400220214             RTVDTAARA  DTAARA(MEMXDTA (29 6)) RTNVAR(&TEMP)
029500220214             CHGVAR     VAR(%SST(&JOB26 21 6)) VALUE(%SST(&TEMP 1 6))
029600220214             CHGVAR     VAR(&FORMAT) VALUE('JOBI0200')
029700220214
029800220214/** If job specified */
029900220214
030000220214             IF         COND(&JOB26 *NE ' ') THEN(DO)
030100220214             CALL       PGM(MEC1026) PARM(&RTN_CODE &JOB_INFO +
030200220214                          &FORMAT &JOB26 &INT_JOB_ID)
030300220214
030400220214/** If jobq then *IMMED */
030500220214
030600220214             IF         COND((%SST(&JOB_INFO 51 10) *EQ '*JOBQ  ') +
030700220214                        ) THEN(DO)
030800220214             RTVDTAARA  DTAARA(MEMXDTA (9 10)) RTNVAR(&JOB)
030900220214             RTVDTAARA  DTAARA(MEMXDTA (19 10)) RTNVAR(&USER)
031000220214             RTVDTAARA  DTAARA(MEMXDTA (29 6)) RTNVAR(&JOBNBR)
031100220214             ENDJOB     JOB(&JOBNBR/&USER/&JOB) OPTION(*IMMED)
031200220214             MONMSG     MSGID(CPF1362 CPF1363 CPF1361 CPF1352)
031300220214             GOTO       CMDLBL(ALCOBJ)
031400220214             ENDDO
031500220214             ENDDO
031600220214
031700220214/** Clear data queue */
031800220214
031900220214             CALL       PGM(QCLRDTAQ) PARM('MSMXIMM' '*LIBL ')
032000220214
032100220214             CHGDTAARA  DTAARA(MEMXDTA (9 26)) VALUE(' ')
032200220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
032300220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
032400220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
032500220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
032600220214
032700220214             ENDDO
032800220214/** End 'End' */
032900220214             GOTO       CMDLBL(ENDCLPGM)
033000220214
033100220214/** Abnormal termination processing */
033200220214/** Terminate with escape message */
033300220214
033400220214ABNORMAL:
033500220214             RCLRSC     LVL(*CALLER)
033600220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
033700220214             CHGJOB     SWS(XXXXXX11)
033800220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
033900220214
034000220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *EXCL))
034100220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
034200220214
034300220214             DLCOBJ     OBJ((MSMXIMM *DTAQ *SHRUPD))
034400220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
034500220214             ROLLBACK
034600220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
034700220214
034800220214             SNDPGMMSG  MSG('Program MEC20022D ended abnormally') +
034900220214                          TOMSGQ(MOPERQ MRUNQ)
035000220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
035100220214             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
035200220214                          MEC20022D ended abnormally') MSGTYPE(*ESCAPE)
035300220214             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
035400220214
035500220214 ENDCLPGM:
035600220214             ENDPGM
