/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas ME Control access to Mdn Link CAS options')     */
/*********************************************************************/
/*                                                                   */
/*       Midas Message Management                                    */
/*                                                                   */
/*       MEC2200 - Control access to Mdn Link CAS options            */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Prev Amend No. 214798             Date 14Feb03              */
/* Midas Release 4.01 -----------------------------------------------*/
/*                      CSW025  *CREATE    Date 26Mar02              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       214798 - Change Midas to work with MMM version 2 (MLink 3)  */
/*       CSW025 - Midas Message Manager                              */
/*                                                                   */
/*********************************************************************/
 
             PGM        PARM(&CMDPARMSLA &CMDPARMS)
 
/* Parameters */
             DCL        VAR(&CMDPARMSLA) TYPE(*CHAR) LEN(2)
             DCL        VAR(&CMDPARMS) TYPE(*CHAR) LEN(80)
 
/* Command/Parameters length - numeric */
             DCL        VAR(&CMDPARMSLN) TYPE(*DEC) LEN(2 0)
 
/* Managing system flag                */
             DCL        VAR(&MNGSYS) TYPE(*CHAR) LEN(1) VALUE(' ')
 
/**Library*related fields              */                                                 /*214798*/
/*********** DCL        VAR(&MDL2CASLIB) TYPE(*CHAR) LEN(10)                              /*214798*/
/*********** DCL        VAR(&MDL2CASADD) TYPE(*CHAR) LEN(1) VALUE('N')                    /*214798*/
 
/* Midas information screen related fields / Error handling */
             DCL        VAR(&RTN_CODE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(132)
             DCL        VAR(&ERRFOUND) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Initialisation */
             CHGJOB     SWS(XXXXXX00)
 
/* Access MESTAT to determine if this is the managing system       */
             RTVDTAARA  DTAARA(MESTAT (50 1)) RTNVAR(&MNGSYS)
 
/* If this is not the managing system send an appropriate error +
   message */
             IF         COND(&MNGSYS *NE 'Y') THEN(DO)
                CHGVAR     VAR(&MSGDTA) VALUE(' ')
                CALL       PGM(MEC1027) PARM(&RTN_CODE 'MEC2200' +
                             'MEMSG    ' &MSGDTA 'ENTER     ' ' ' +
                             'MEC2200' 'N')
             ENDDO
             ELSE       CMD(DO)
/* This is the managing system so execute the command */
 
/**First*add*in the relevant libraries */                                                 /*214798*/
/*************  RTVDTAARA  DTAARA(MESTAT (61 10)) RTNVAR(&MDL2CASLIB)                     /*214798*/
/*************  IF         COND(&MDL2CASLIB *NE ' ') THEN(DO)                             /*214798*/
/*************     CHGVAR  VAR(&MDL2CASADD) VALUE('Y')                                    /*214798*/
/*************     ADDLIBLE   LIB(&MDL2CASLIB) POSITION(*FIRST)                           /*214798*/
/*************     MONMSG     MSGID(CPF2103) EXEC(DO)                                     /*214798*/
/*************        CHGVAR  VAR(&MDL2CASADD) VALUE('N')                                 /*214798*/
/*************     ENDDO                                                                  /*214798*/
/*************  ENDDO                                                                     /*214798*/
 
/* Extract the relevant data and run the command */
                CHGVAR     VAR(&CMDPARMSLN) VALUE(&CMDPARMSLA)
                CHGVAR     VAR(&CMDPARMS) VALUE(%SST(&CMDPARMS 1 +
                             &CMDPARMSLN))
                CALL       PGM(QCMDEXC) PARM(&CMDPARMS 80)
 
/* Look for an error message from the command executed and, if found, +
   cause the menu to show an error.  */
/* The list below is the errors that can be sent back by WRKMLCASIF. */
                CHGVAR     VAR(&ERRFOUND) VALUE('N')
LOOP:
                RCVMSG     RMV(*NO) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                             MSGF(&MSGF) MSGFLIB(&MSGFLIB)
                IF         COND(&MSGID = ' ') THEN(DO)
                   GOTO       CMDLBL(ENDLOOP)
                ENDDO
                IF         COND(&MSGID = 'CPF3C54' *OR &MSGID = +
                             'MEM6102' *OR &MSGID = 'MEM6103' *OR +
                             &MSGID = 'MEM6104' *OR &MSGID = +
                             'MEM6107') THEN(DO)
                   CHGVAR     VAR(&ERRFOUND) VALUE('Y')
                   GOTO       CMDLBL(ENDLOOP)
                ENDDO
                GOTO       CMDLBL(LOOP)
ENDLOOP:
                IF         COND(&ERRFOUND = 'Y') THEN(DO)
                   SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) TOPGMQ(*PRV) MSGTYPE(*ESCAPE)
                ENDDO
 
/************                                                                             /*214798*/
/**Remove*any libraries that were added */                                                /*214798*/
/************   IF         COND(&MDL2CASADD = 'Y') THEN(DO)                               /*214798*/
/************      RMVLIBLE   LIB(&MDL2CASLIB)                                            /*214798*/
/************      MONMSG     MSGID(CPF0000)                                              /*214798*/
/************   ENDDO                                                                     /*214798*/
 
             ENDDO
 
/* Normal end */
             GOTO       CMDLBL(END)
 
/* Abnormal end */
 ABNOR:
             CHGJOB     SWS(XXXXXX11)
             dmpclpgm
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          MEC2200 ended abnormally - see job log') +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
/* Delete data queue */
 END:
 
             ENDPGM
