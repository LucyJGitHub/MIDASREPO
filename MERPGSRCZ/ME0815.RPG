     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME Outgoing payment messages by nostro')
      *****************************************************************
      *                                                               *
      *  Midas - MESSAGE MANAGEMENT                                   *
      *                                                               *
      *    ME0815 - Outgoing payment messages by nostro report        *
      *             request screen                                    *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD031             Date 10Apr06               *
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CGL029             Date 01Sep03               *
      *                 CGL013             Date 29Mar02               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.05 -----------------------------------------------*
      *                 CSD006             Date 15May01               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                    00000            DATE 00XXX00              *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CGL029 - Increase Account Code to 10 digits (Recompile)      *
      *  CGL013 - MT94x Messages Generation (Recompile over new layout*
      *                                      of SDNWRKPD)             *
      *  CSD006 - Use long DS with SDCURRPD.                          *
      *                                                               *
      *****************************************************************
     FSDMEMOL0IF  E           K        DISK
     FSDNWRKL0IF  E           K        DISK
     FME0815DFCF  E                    WORKSTN
     E                    ZMNM   12  12  3
     E                    CPY@    1   1 80
      *
      * ID C  F  H  L Function of indicaators
      * 01            RUNDAT (DATA AREA) not found indicator
      * 99            Read & Chain fail indicator
      * 98            End of file indicator
      * 31-33         Error indicator
      * 50-53         Testing from/to date
      * U7U8LR        DB error
      *
     ILDA         DS                            256
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      **  Local data area data structure
      *
     IDSRUN       DS
     I                                        1   7 RDAT
     I                                        1   1 @BLK
     I                                        1   2 @DD
     I                                        3   5 @MMM
     I                                        6   7 @YY
     I                                    P   8  100RUND
     I                                       11  11 SSF
     I                                       12  12 DATF
     I                                       13  13 MBIN
      **  RUNDAT data area data structure (date format -ddmmmyy)
      *
     IRDATEC      DS
     I                                        1   4 @WRK4
     I                                        5   6 YY
      **  Data structure used to convert date in RUNDAT from
      ** DDMMMYY into (ddmmyy or mmddyy) format
      *
     IFMDAT       DS
     I                                        1   4 FMDM
     I                                        5   6 FMYY
     I                                        1   60FMDATE
      **  Data structure for FROM date (ddmmyy or mmddyy)
      *
     ITODAT       DS
     I                                        1   4 TODM
     I                                        5   6 TOYY
     I                                        1   60TODATE
      **  Data structure for TO date (ddmmyy or mmddyy)
      *
     I           SDS
     I                                     *PARMS   PGMPRM
     I                                      244 253 PGMDEV
     I                                      254 263 PGMUSR
      **  Program status data structure
      *
     I@RPARM      DS
     I                                        1 100 @@RPRM
     I                                        1   2 @MODID
     I                                        3   5 @CCY
     I                                        6   7 @NOSN
     I                                        8  13 @NTWRK
     I                                       14  190@FMDAT
     I                                       14  15 @@FMYY
     I                                       16  17 @@FMMM
     I                                       18  19 @@FMDD
     I                                       20  250@TODAT
     I                                       20  21 @@TOYY
     I                                       22  23 @@TOMM
     I                                       24  25 @@TODD
      **  Parameters for &RPARM - 100 long string passed to RCF
      *
     ISFMTRN      DS
     I                                        1   2 FMWRK2
     I                                        3  16 FMWK14
      **  From-date data structure
      *
     ISTOTRN      DS
     I                                        1   2 TOWRK2
     I                                        3  16 TOWK14
      **  To-date data structure
      *
     ISDBANK    E DSSDBANKPD
      **  Bank details
      *
     ISDCURR    E DSSDCURRPD
      **  Currency details
      *
     ISDNOST    E DSSDNOSTPD
      **  Nostro details
      *
     IDSFDY     E DSDSFDY
      **  First data structure for access program, Short data structure
     IDSSDY     E DSDSSDY                                                       CSD006
      **  Second data structure for access program, long data structure         CSD006
      *
      /EJECT
      *
      ** Main program
     C           *NAMVAR   DEFN           LDA
      *
      ** Set up copyright statement
     C                     MOVEACPY@      BIS@   80
      *
      **  Access SDBANKPD (via AOBANKR0) & verify date format
     C                     CALL 'AOBANKR0'
     C                     PARM '*MSG    '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVE 'SDBANKPD'DBFILE           ************
     C                     MOVE 'FIRST   'DBKEY            * DBERR 01 *
     C                     MOVE 'ME0815'  DBPGM            ************
     C                     MOVE '01'      DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     END
      *
      **  RCF Parameters
     C           *ENTRY    PLIST
     C                     PARM           @SEQ    5
     C                     PARM           @LVL    1
     C                     PARM           @ENT    1
     C                     PARM           @RPARM100
     C                     PARM           RACT    1
     C                     PARM           RCMD    1
      *
      ** Define ZA0270 variables
     C                     MOVE '0'       FPRM3   1
     C                     MOVE '0'       TPRM3   1
      *
     C                     MOVE *ZEROS    FPRM4   50
     C                     MOVE *ZEROS    TPRM4   50
      *
      **  ZA0270 FROM Date parameters
     C           PLIST1    PLIST
     C                     PARM           PARM1   60
     C                     PARM BJDFIN    PARM2   1
     C           FPRM3     PARM '0'       PARM3   1
     C           FPRM4     PARM *ZERO     PARM4   50
      *
      **  ZA0270 TO Date parameters
     C           PLIST2    PLIST
     C                     PARM           PARM1
     C                     PARM BJDFIN    PARM2
     C           TPRM3     PARM '0'       PARM3
     C           TPRM4     PARM *ZERO     PARM4
      *
      **  ZM1001 ERROR
      *
     C           PLIST3    PLIST
     C                     PARM           @MSGID 10
     C                     PARM           @MSDTA 78
      *
     C                     MOVEL'ME0815'  PGMQ   10                       S01227
     C                     MOVEL*BLANKS   MSGKEY  4
      *
      *****************************************************************
      *                   Index to subroutines                        *
      *   MAIN  - Main process                                        *
      *   INIT  - Initial process                                     *
      *   DETL  - Detail processing                                   *
      *   TERM  - Termination processing                              *
      *   VSEL  - Validation processing                               *
      *   *PSSR - Error handling                                      *
      *****************************************************************
     C/EJECT
      *****************************************************************
      *   MAIN   - Main process                                       *
      *   Calls  - INIT - Init process                                *
      *            DETL - Detail processing                           *
      *            TERM - Termination processing                      *
      *****************************************************************
      *
      **  Perform initial process
     C                     EXSR INIT
      *
      **  Perform detail process
     C                     EXSR DETL
      *
      **  Perform termination process
     C                     EXSR TERM
     C/EJECT
      *****************************************************************
      *   INIT   - Initial process                                    *
      *   Called by main process                                      *
      *****************************************************************
     C           INIT      BEGSR
      *
      **  Access data area RUNDAT to find run-date
     C           *NAMVAR   DEFN RUNDAT    DSRUN
     C           *LOCK     IN   DSRUN
     C                     OUT  DSRUN
      *
      **  Convert RUNDAT into format (ddmmyy or mmddyy)
      *
     C           @BLK      IFEQ *BLANKS
     C                     MOVE '0'       @BLK
     C                     END
      *
     C                     MOVE @YY       YY
     C                     Z-ADD1         X       20
     C           @MMM      LOKUPZMNM,X                   91
      *
     C           BJDFIN    IFEQ 'M'
     C                     MOVELX         @WRK4
     C                     MOVE @DD       @WRK4
     C                     ELSE
     C                     MOVE X         @WRK4
     C                     MOVEL@DD       @WRK4
     C                     END
      *
      **  Display initial screen
     C                     EXFMTINITSCN
      *
     C                     ENDSR
     C/EJECT
      *****************************************************************
      *   DETL   - Detail processing                                  *
      *   Called by main process                                      *
      *   Calls VSEL                                                  *
      *****************************************************************
     C           DETL      BEGSR
      *
     C                     SETON                     30
      *
      **  Do while not F3 / F12 or errors outstanding
     C           *INKC     DOWEQ'0'
     C           *INKL     ANDEQ'0'
     C           *IN30     ANDEQ'1'
      *
      **  Validate input - VSEL
     C                     EXSR VSEL
      *
      **  If errors exist, display initial screen
     C           *IN30     IFEQ '1'
     C                     WRITESFLMSGC
     C                     EXFMTINITSCN
     C                     CALL 'ZM1002'
     C                     END
      *
     C                     END
      *
     C                     ENDSR
     C/EJECT
      *****************************************************************
      *   VSEL   - Validation processing                              *
      *   Called by DETL process                                      *
      *   Calls VDATSR                                                *
      *****************************************************************
     C           VSEL      BEGSR
      *
      **  Blank out error codes
     C                     MOVEA'00000'   *IN,30
     C                     MOVEA'0000'    *IN,40
      *
      **  If module id is not blank, access the module table file
      **  (PF/SDMEMOL0) using the module id entered as key
     C           SMODID    IFNE *BLANKS
      *
     C           SMODID    CHAINSDMEMOL0             9899
      *
     C           *IN99     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE 'SDMEMOL0'DBFILE           ************
     C                     MOVE 'FILE ERR'DBKEY            * DBERR 02 *
     C                     MOVE 'ME0815  'DBPGM            ************
     C                     MOVE '02'      DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     END
      *
      **  If no record found error - Module id not found
     C           *IN98     IFEQ '1'
     C                     MOVEL'MEM1001' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3031
     C                     SETOF                     98
     C                     END
      *
     C                     END
      *
      ** Check nostro currency not blank
     C           SCCY      IFEQ *BLANKS
     C                     MOVEL'MEM1022' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3032
     C                     ELSE
      *
      ** If not blank, check it exists
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM SCCY      P@CCY   3
     C********** SDCURR    PARM SDCURR    DSFDY                                 CSD006
     C           SDCURR    PARM SDCURR    DSSDY                                 CSD006
      *
     C           @RTCD     IFNE *BLANKS                               1
     C                     MOVEL'MEM1023' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3032
     C                     END
      *
      ** Validate complete nostro (if no error in currency)
     C           SNOSN     IFNE *BLANKS
     C           *IN32     ANDEQ'0'
      *
     C                     CALL 'AONOSTR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM *BLANKS   P@CUST  6
     C                     PARM SCCY      P@CYCD  3
     C**********           PARM *BLANKS   P@ACCD  4                                           CGL029
     C                     PARM *BLANKS   P@ACCD 10                                           CGL029
     C                     PARM *BLANKS   P@ACSN  2
     C                     PARM SNOSN     P@NONB  2
     C                     PARM *BLANKS   P@BRCD  3
     C                     PARM *BLANKS   P@CSSN 10
     C                     PARM *BLANKS   P@PNOI  1
     C           SDNOST    PARM SDNOST    DSFDY
      *
     C           @RTCD     IFNE *BLANKS
     C                     MOVEL'MEM1041' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3033
     C                     END
      *
     C                     END
      *
     C                     END
      *
      **  Access ESI table (PF/SDNWRKPD) to check if SNTWRK is valued
     C           SNTWRK    IFNE *BLANK
     C           SNTWRK    CHAINSDNWRKL0             9899
      *
     C           *IN99     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE '04'      DBASE
     C                     MOVE 'FIRST'   DBKEY            * DB ERROR 01 *
     C                     MOVE 'SDNWRKL0'DBFILE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     END
      *
      **  If no record found, display 'Network is not valid'
      *
     C           *IN98     IFEQ '1'
     C                     MOVEL'MEM1014' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3034
     C                     SETOF                     98
      *
     C                     END
      *
     C                     END
      *
      **  Validate FROM & TO dates
     C                     EXSR VDATSR
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *   VDATSR- Date validation process                                      *
      *   Called by VSEL process                                               *
      **************************************************************************
     C           VDATSR    BEGSR
      *
      **  Validation of FROM dates entered
      *
     C                     TESTN          SFMDAT     505152
      *
      **  TESTN :- *in50 = '1' (VALID)
      **           *in52 = '1' (VALID)
      **           *in51 = '0' (INVALID)
      *
     C           *IN51     IFEQ '0'
      *
     C           *IN50     IFEQ '1'
     C                     MOVE SFMDAT    FMDAT
     C                     MOVE FMDATE    PARM1
     C                     SETON                     53
     C                     END
      *
     C           *IN52     IFEQ '1'
     C                     MOVE RDATEC    FMDAT
     C                     MOVE FMDATE    PARM1
     C                     SETON                     53
     C                     END
      *
      **  If FROM date entered is numeric or *blank
      **     call ZA0270 using plist1
      **     ZA0270 does the validation of MONTH AND DAY
      *
     C           *IN53     IFEQ '1'
     C                     CALL 'ZA0270'  PLIST1
      *
     C                     ELSE
     C                     MOVE *BLANKS   FMDAT
      *
     C                     MOVEL'MEM1008' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3041
     C                     END
      *
     C                     ELSE
     C                     MOVE *BLANKS   FMDAT
      *
     C                     MOVEL'MEM1008' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3041
     C                     END
      *
      **  Set *in50,51,52 & 53 off
      *
     C                     MOVEA'0000'    *IN,50
      *
      **  Validation of TO dates entered
      *
     C                     TESTN          STODAT     505152
      *
      **  TESTN :- *in50 = '1' (VALID)
      **           *in52 = '1' (VALID)
      **           *in51 = '0' (INVALID)
      *
     C           *IN51     IFEQ '0'
      *
     C           *IN50     IFEQ '1'
     C                     MOVE STODAT    TODAT
     C                     MOVE TODATE    PARM1
     C                     SETON                     53
     C                     END
      *
     C           *IN52     IFEQ '1'
     C                     MOVE RDATEC    TODAT
     C                     MOVE TODATE    PARM1
     C                     SETON                     53
     C                     END
      *
      **  If TO date entered is numeric or *blank
      **     call ZA0270 using plist2
      **     ZA0270 does the validation of MONTH AND DAY
      *
     C           *IN53     IFEQ '1'
     C                     CALL 'ZA0270'  PLIST2
      *
     C                     ELSE
     C                     MOVE *BLANKS   TODAT
      *
     C                     MOVEL'MEM1009' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3042
     C                     END
      *
     C                     ELSE
     C                     MOVE *BLANKS   TODAT
      *
     C                     MOVEL'MEM1009' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     3042
     C                     END
      *
      **  Set *in50,51,52 & 53 off
      *
     C                     MOVEA'0000'    *IN,50
      *
      **  If no errors from ZA0270
      **  check that FROM date is not greater than TO date
      *
     C           FPRM3     IFEQ '0'
     C           TPRM3     ANDEQ'0'
      *
     C           FPRM4     IFGT TPRM4
     C                     MOVEL'MEM1010' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     4142
     C                     END
      *
     C                     ELSE
      *
     C           FPRM3     IFEQ '1'
     C                     SETON                     41
     C                     END
      *
     C           TPRM3     IFEQ '1'
     C                     SETON                     42
     C                     END
      *
     C                     MOVEL'MEM1010' @MSGID
     C                     CALL 'ZM1001'  PLIST3
     C                     SETON                     30
     C                     END
      *
     C                     ENDSR
     C/EJECT
      **************************************************************************
      *   TERM - Termination  Processing                                       *
      *   Called by MAIN process                                               *
      *   Calls CNVDAT                                                         *
      **************************************************************************
     C           TERM      BEGSR
      *
     C           *INKC     IFEQ '1'
     C                     MOVE 'E'       RCMD
     C                     END
      *
      **  If F12 was pressed send termination code of 'F' back to RCF
      *
     C           *INKL     IFEQ '1'
     C                     MOVE 'F'       RCMD
     C                     END
      *
     C           *INKC     IFEQ '0'
     C           *INKL     ANDEQ'0'
      *
      **  Set up &RPARM with selection criteria parameters
      *
     C                     MOVE SMODID    @MODID
     C                     MOVE SCCY      @CCY
     C                     MOVE SNOSN     @NOSN
     C                     MOVE SNTWRK    @NTWRK
      *
     C                     EXSR CNVDAT
      *
     C                     ELSE
      *
     C                     MOVE *BLANKS   @RPARM
     C                     END
      *
     C                     SETON                     LR
     C                     RETRN
      *
     C                     ENDSR
     C/EJECT
      **************************************************************************
      *   CNVDAT - convert date from (mmddyy or ddmmyy) to yymmdd              *
      *            and move to fields in @RPARM                                *
      *   Called by TERM process                                               *
      **************************************************************************
     C           CNVDAT    BEGSR
      *
     C                     MOVE FMYY      @@FMYY
     C                     MOVE TOYY      @@TOYY
      *
     C           BJDFIN    IFEQ 'M'
     C                     MOVELFMDM      @@FMMM
     C                     MOVE FMDM      @@FMDD
     C                     MOVELTODM      @@TOMM
     C                     MOVE TODM      @@TODD
     C                     ELSE
     C                     MOVELFMDM      @@FMDD
     C                     MOVE FMDM      @@FMMM
     C                     MOVELTODM      @@TODD
     C                     MOVE TODM      @@TOMM
     C                     END
      *
     C                     ENDSR
     C/EJECT
      **************************************************************************
      *   *PSSR - error handling                                               *
      *   Called by - INIT initial process                                     *
      **************************************************************************
      *
     C           *PSSR     BEGSR
      *
     C                     SETON                     U7U8LR
     C                     DUMP
     C                     RETRN
      *
     C                     ENDSR
     C/EJECT
      *****************************************************************
**  ZMNM - used to convert RUNDAT to DDMMYY format
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
** CPY@   **      Object copyright
(c) Misys International Banking Systems Ltd. 2001
