     H DEBUG
      *****************************************************************
/**** *  RPGBASE                                                      *                     MD056752
/*STD *  RPGSQLBND                                                    *                     MD056752
/*EXI *  TEXT('Midas ME FT translation table')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Message Management Module
     F*                                                               *
     F*  ME1150 - Display Message Trans.    Display file              *
     F*                                                               *
     F*  Function:  This program displays selected translation records*
     F*  (phase(s))                                                   *
     F*                                                               *
     F*  Called By: SF0420 - SPF Menu                                 *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD056752           Date 20Sep20               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      *                 BUG24795           Date 07Jul09               *
      *                 CSW209             Date 01Apr09               *
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 069250             Date 03May94               *
      *                 S01435             Date 29Jul93               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD056752 - Deliverable Data Split for MEINFMPD               *
      *  MD046248 - Finastra Rebranding                               *
      *  BUG24795 -  Field Sequence is missing (Recompile)            *
      *  CSW209 - SWIFT 2009 Changes                                  *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
     F*  069250 - Remove dummy OVRDBF command from creation parms.    *
     F*  S01435 - Incoming Message Management                         *
     F*                                                               *
     F*****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
/****F*:*OVRDBF*(File*in*program)*(file*on*system)******************:**   069250
     F*****************************************************************
     F*DSPRCD: Cpysrc Templates Initialise Program F-Spec
     F/COPY WNCPYSRC,ME1150DFPG
     FME1150DF  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
     F                                     INFSR(SRFILE)
      * DSP: Display Message Trans.    Display file
      *
     F*MEINFML1* IF   E           K DISK    USROPN                                          MD056752
     F**********                           INFDS(INFDS1)                                    MD056752
     F**********                           INFSR(SRFILE)                                    MD056752
      * RTV : Incoming Msg Translation  Retrieval index
      *
     F*MEINFML0* IF   E           K DISK    USROPN                                          MD056752
     F**********                           INFSR(SRFILE)                                    MD056752
      * UPD : Incoming Msg Translation  Update index
      *
     D/EJECT
     D CPY@            S             80    DIM(1) CTDATA PERRCD(1)
     D*
     D*  Array containing Copyright statement
     D***************** FIRST COMPILE TIME ARRAY *********************
     D CMD@            S             80    DIM(1) CTDATA PERRCD(1)
      *
      *  Array of QCMDEXC commands
      *
     D EDT             S              1    DIM(80)
      *
      *  Array of QCMDEXC command to edit
      *
     D*
     D*COPY*MECPYSRC,SRERRE                                                                 MD056752
     D/COPY MECPYSRC,SRERRELE                                                               MD056752
     D*
     D*  Copysource for error processing
     D*
     D*DSPRCD: Cpysrc Templates Initialise Program E-Spec
     D/COPY WNCPYSRC,ME1150DEPG
     D*COPY*MECPYSRC,SRERRI                                                                 MD056752
     D/COPY MECPYSRC,SRERRILE                                                               MD056752
     D*
     D*  End of Program Error Processing copysource
     D*
     D*
     D*DSPRCD: Cpysrc Templates Initialise Program I-Spec
     D/COPY WNCPYSRC,ME1150DIPG
      /EJECT
      * Data structures:
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      6  0
     D  ##JYY                  1      2  0
     D  ##JMM                  3      4  0
     D  ##JDD                  5      6  0
     D  ##JTM                  7     12  0
     D  ##JHH                  7      8  0
     D  ##JNN                  9     10  0
     D  ##JSS                 11     12  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
     D RUNDTA        E DS                  EXTNAME(RUNDAT)
     D*
     D* Get Rundate - Rundate  *
     D*
     D MMODDS        E DS                  EXTNAME(SDMMODPD)
     D*
     D* Modules Data Structure *
     D*
     D DSFDY         E DS                  EXTNAME(DSFDY)                       S01194
     D*                                                                   S01194
     D* Data Structures used by Access Programs                           S01194
     D*                                                                   S01194
     D DSSDY         E DS                  EXTNAME(DSSDY)                       S01194
     D*                                                                   S01194
     D* Data Structures used by Access Programs                           S01194
     D*                                                                   S01194
     D MEINFM        E DS                  EXTNAME(MEINFJW0)                                MD056752
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * I : MAP Action Code
     D  P1ACTC                 1      1
     D***P2PARM*     DS                            100                                        CSW209
     D P2PARM          DS           103
      * RCD: Incoming Msg Translation  Retrieval index
      * O : MAP Network
     D  P2NWRK                 1      6
      * O : MAP Message type
     D  P2MTPY                 7      9
      * O : MAP Message Field Sequence                                                        CSW209
     D  P2MSEQ                10     12
      * O : MAP Message Field Tag
     D**********                             10  14 P2MTAG                                    CSW209
     D  P2MTAG                13     17
      * O : MAP FT Field Name
     D**********                             15  24 P2FTFD                                    CSW209
     D  P2FTFD                18     27
      * O : MAP Special Instructions
     D**********                             25  34 P2FTSP                                    CSW209
     D  P2FTSP                28     37
      * O : MAP Narrative
     D**********                             35  64 P2NARR                                    CSW209
     D  P2NARR                38     67
      * O : MAP Record Identifier
     D**********                             65  65 P2RECI                                    CSW209
     D  P2RECI                68     68
      * O : MAP Job name
     D**********                             66  75 P2AJOB                                    CSW209
     D  P2AJOB                69     78
      * O : MAP User name
     D**********                             76  85 P2AUSR                                    CSW209
     D  P2AUSR                79     88
      * O : MAP Action Time
     D**********                          P  86  890P2ATIM                                    CSW209
     D  P2ATIM                89     92P 0
      * O : MAP Action Date
     D**********                             90  96 P2ARDT                                    CSW209
     D  P2ARDT                93     99
      * O : MAP Action Type
     D**********                             97  97 P2AACT                                    CSW209
     D  P2AACT               100    100
      * O : MAP Run day number
     D**********                          P  98 1000P2RDNB                                    CSW209
     D  P2RDNB               101    103P 0
     D***O2PARM*     DS                             24                                        CSW209
     D O2PARM          DS            27
      * KEY: Incoming Msg Translation  Retrieval index
      * I : MAP Network
     D  O2NWRK                 1      6
      * I : MAP Message type
     D  O2MTPY                 7      9
      * I : MAP Message Sequence                                                              CSW209
     D  O2MSEQ                10     12
      * I : MAP Message Field Tag
     D**********                             10  14 O2MTAG                                    CSW209
     D  O2MTAG                13     17
      * I : MAP FT Field Name
     D**********                             15  24 O2FTFD                                    CSW209
     D  O2FTFD                18     27
     D                 DS
     D  OAMSDA                 1    132
      * Message data for 'Invalid Action code (FT1)'
      * *SFLSEL
     D  ZA0001                 1      1
      *
     D W0DATA          DS           256
      *
      *  Define data structure used to pass parameters
      *
     D  B#BRCA                 1      3
     D  O#ACTD                 4      4
     D  O#CPGM                 5     14
      *
     D DSMTR           DS
      *
      *  Define fields for message transalation
      *
     D  #MSDTA                 1    132
     D  #MSTX1               133    264
     D #MSTX2          DS
     D  #MSTXA                 1    256
     D  #MSTXB               257    512
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN             7
     C     P1ACTC        PARM                    WP0001            1            Action Code
     C                   PARM                    P2PARM                         RCD: Incoming M
      *
      *  Set up primary reference
      *
     C                   MOVEL     P2PARM        W0PREF
      *****************************************************************
      * Initialise
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF             1
      * Display screen until reload requested
     C     W0RSF         DOWEQ     'N'
      * Display screen
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
     C   12              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   05              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX            5 081         SETOF 81
      * USER: Initialise subfile control
      * DSPFIL: Init. Subfile Ctl - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Initialise subfile control
     C/COPY WNCPYSRC,ME1150DISC
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    FMNWRK                         Network
     C                   KFLD                    FMMTPY                         Message type
     C                   KFLD                    FMMSEQ                         Message Seq
     C                   KFLD                    FMMTAG                         Message Field T
     C                   KFLD                    FMFTFD                         FT Field Name
      * Setup key
     C                   MOVEL     #2NWRK        FMNWRK                         Network
     C                   MOVEL     #2MTPY        FMMTPY                         Message type
     C                   MOVEL     #2MSEQ        FMMSEQ
     C                   MOVEL     #2MTAG        FMMTAG                         Message Field T
     C                   MOVEL     #2FTFD        FMFTFD                         FT Field Name
     C*****KPOS*         SETLL     @INFML1                                                  MD056752
     C**********         READ      @INFML1                              8782    *82=EOF     MD056752
     C/EXEC SQL                                                                             MD056752
     C+ declare ACursor insensitive scroll cursor for                                       MD056752
     C+ select * from MEINFJW0                                                              MD056752
     C+ where FMNWRK >= :FMNWRK and FMMTPY >= :FMMTPY and FMMSEQ >= :FMMSEQ                 MD056752
     C+   and FMMTAG >= :FMMTAG and FMFTFD >= :FMFTFD and FMRECI = 'D'                      MD056752
     C+ order by FMNWRK, FMMTPY, FMMSEQ, FMMTAG, FMFTFD                                     MD056752
     C/END-EXEC                                                                             MD056752
                                                                                            MD056752
     C/EXEC SQL                                                                             MD056752
     C+ close ACursor                                                                       MD056752
     C/END-EXEC                                                                             MD056752
                                                                                            MD056752
     C/EXEC SQL                                                                             MD056752
     C+ open ACursor                                                                        MD056752
     C/END-EXEC                                                                             MD056752
                                                                                            MD056752
     C/EXEC SQL                                                                             MD056752
     C+ fetch next from ACursor into :MEINFM                                                MD056752
     C/END-EXEC                                                                             MD056752
      * Save previous selector values
     C     *LIKE         DEFINE    #2NWRK        WZNWRK
     C                   MOVEL     #2NWRK        WZNWRK                         Network
     C     *LIKE         DEFINE    #2MTPY        WZMTPY
     C                   MOVEL     #2MTPY        WZMTPY                         Message type
     C     *LIKE         DEFINE    #2MTAG        WZMTAG
     C                   MOVEL     #2MTAG        WZMTAG                         Message Field T
     C     *LIKE         DEFINE    #2FTFD        WZFTFD
     C                   MOVEL     #2FTFD        WZFTFD                         FT Field Name
     C     *LIKE         DEFINE    #2FTSP        WZFTSP
     C                   MOVEL     #2FTSP        WZFTSP                         Special Instruc
      * Load subfile page
     C                   Z-ADD     0             ##RROK            5 0
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C**N82*****         READP     @INFML1                                90    *           MD056752
     C**N82*****         READ      @INFML1                                90    *           MD056752
     C     *IN82         IFEQ      '0'                                                      MD056752
     C/EXEC SQL                                                                             MD056752
     C+ fetch prior from ACursor into :MEINFM                                               MD056752
     C/END-EXEC                                                                             MD056752
     C/EXEC SQL                                                                             MD056752
     C+ fetch next from ACursor into :MEINFM                                                MD056752
     C/END-EXEC                                                                             MD056752
     C                   ENDIF                                                              MD056752
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0            1
     C                   MOVEA     WKIND0        *IN(36)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR              5 0
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD            5 0
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C******IN82         DOWEQ     '0'                                          DO          MD056752
     C     SQLCODE       DOWEQ     0                                            DO          MD056752
     C     ##RROK        ANDLT     ##SFPG
     C     ##RRRD        ANDLT     W0SLM
      * Check selection fields - if fail, read next record
     C     #2NWRK        IFEQ      *BLANK                                       Network
     C     #2MTPY        IFNE      *BLANK                                       Message type
     C     FMMTPY        CABNE     #2MTPY        BB020                          Message type
     C                   END
     C                   END
     C     #2NWRK        IFEQ      *BLANK                                       Network
     C     #2MTPY        OREQ      *BLANK                                       Message type
     C     #2MTAG        IFNE      *BLANK                                       Message Field T
     C     FMMTAG        CABNE     #2MTAG        BB020                          Message Field T
     C                   END
     C                   END
     C     #2NWRK        IFEQ      *BLANK                                       Network
     C     #2MTPY        OREQ      *BLANK                                       Message type
     C     #2MTAG        OREQ      *BLANK                                       Message Field T
     C     #2FTFD        IFNE      *BLANK                                       FT Field Name
     C     FMFTFD        CABNE     #2FTFD        BB020                          FT Field Name
     C                   END
     C                   END
     C     #2FTSP        IFNE      *BLANK                                       Special Instruc
     C     FMFTSP        CABNE     #2FTSP        BB020                          Special Instruc
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
     C                   EXSR      MC#1FN
     C                   MOVEL     'Y'           W0RSL             1
      * USER: Initialise subfile record from DBF record
      * DSPFIL: Init. SF record - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Initialise subfile record
     C/COPY WNCPYSRC,ME1150DISR
      * DBF record not selected
     C     W0RSL         CABNE     'Y'           BB020
      * Output to subfile
     C                   ADD       1             ##RR                 81        *
     C                   ADD       1             ##RROK
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C**********         READ      @INFML1                                82    *82=EOF     MD056752
     C/EXEC SQL                                                                             MD056752
     C+ fetch next from ACursor into :MEINFM                                                MD056752
     C/END-EXEC                                                                             MD056752
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
      * If no DBF records found, display error message
     C     ##RR          IFEQ      *ZERO
     C******IN82         ANDEQ     '1'                                                      MD056752
     C     SQLCODE       ANDEQ     100                                                      MD056752
      * Send message '*No data to display'
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C     ##RR          IFGT      ##RRMX
     C     ##RRMX        ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
     C     ##RRRD        IFGE      W0SLM
      * Send message '*Scan limit reached'
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                   MOVE      *ALL'0'       ##OFF            30
     C                   MOVEA     ##OFF         *IN(1)
      * Update screen time
     C                   TIME                    ##TME
      * PUTOVR unless conditioned fields change
     C                   SETON                                        86
     C     *IN81         IFNE      CAIN81
     C                   SETOFF                                       86
     C                   END
     C                   MOVE      *IN81         CAIN81            1
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C     @#SFRC        IFGT      *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ           10
     C                   PARM      '*SAME'       ZAPGRL            5
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS            1      99    *
     C                   SETOFF                                         8392    *
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF             1
      * CALC: Subfile control function fields
      * DSPFIL: Cal. Control flds - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Calculate Control fields
     C/COPY WNCPYSRC,ME1150DSCF
      * Change of position specified
     C     WZNWRK        CASNE     #2NWRK        FBRQRL
     C     WZMTPY        CASNE     #2MTPY        FBRQRL
     C     WZMTAG        CASNE     #2MTAG        FBRQRL
     C     WZFTFD        CASNE     #2FTFD        FBRQRL
     C     WZFTSP        CASNE     #2FTSP        FBRQRL
     C                   END
      * USER: Process subfile control (Pre-confirm)
      * DSPFIL: Process SF Ctl - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process subfile control
     C/COPY WNCPYSRC,ME1150DPSC
      * Reload subfile requested
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C     *IN81         IFEQ      '1'
      * Process subfile records
     C                   EXSR      DBPRSF
     C                   END
      * USER: Final processing (Pre-confirm)
      * DSPFIL: Final Processing - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Final Processing
     C/COPY WNCPYSRC,ME1150DFPR
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *
      * CASE: CTL.*CMD key is CF09
      *
      *
      * Call add processing
      *
     C     *IN09         IFEQ      '1'                                          *IF
      *
      * Check user has access to add
      *
     C                   MOVEL     'I'           #1SEL
     C                   EXSR      SRMBIN
      *
      * User does not have access
      *
     C     *IN99         IFEQ      '1'                                          *IF
     C                   GOTO      DAEXIT
     C                   END                                                    *FI
      *
      * Set up parameters
      *
     C                   MOVEL     *BLANKS       O2NWRK
     C                   MOVEL     *BLANKS       O2MTPY
     C                   MOVEL     *BLANKS       O2MSEQ
     C                   MOVEL     *BLANKS       O2MTAG
     C                   MOVEL     *BLANKS       O2FTFD
      *
     C                   CALL      'ME1160'                             9090
     C                   PARM                    P0RTN             7
     C                   PARM      'I'           WP0001            1            Action Code
     C                   PARM                    O2PARM                         KEY: Incoming M
      *
      * Option ended in error
      *
     C     *IN90         IFEQ      '1'                                          *IF
     C                   MOVEL     'MIN0019'     P0RTN
     C                   END                                                    *FI
      *
      *  Depending on return code - exit or re-display screen
      *
     C                   SELECT                                                 *SL
      *
      *  F12 pressed - redisplay subfile
      *
     C     P0RTN         WHENEQ    'USR0790'                                    *IF
     C                   MOVEL     *BLANKS       P0RTN                          *Return code
      *
      * Send message 'F12 taken from previous screen'
      *
     C                   MOVEL     'MIN0001'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      DAEXIT
      *
      *  F3 pressed - exit program
      *
     C     P0RTN         WHENEQ    'Y2U9999'                                    *IF
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
      *
      *  If error redisplay
      *
     C     P0RTN         WHENNE    *BLANKS                                      *IF
      *
      * Re-display screen
      *
     C                   MOVEL     'MIN0019'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9836      *
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   GOTO      DAEXIT
      *
      *  New selection - redisplay subfile
      *
     C     P0RTN         WHENEQ    *BLANKS                                      *IF
     C                   MOVEL     'Y'           W0DCF
     C                   GOTO      DAEXIT
     C                   ENDSL                                                  *LS
     C                   ENDIF                                                  *FI
      * USER: Process command keys
      * DSPFIL: Process Cmd keys - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process Command Keys
     C/COPY WNCPYSRC,ME1150DPCK
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   READC     #SFLRCD                                92    *
     C     *IN92         DOWEQ     '0'
      * Process subfile record
     C                   EXSR      DCPRSR
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRACTD - Check Action code                                    *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR   SRACTD        BEGSR
      *
      *  Set up subroutine stack name
      *
     C                   ADD       1             Q
     C                   MOVEL     'SRACTD'      @STK(Q)
      *
      * Check all valid actions
      *
      *
      * CASE: RCD.*SFLSEL is not valid
      *
     C     #1SEL         IFEQ      ' '                                          *IF
     C                   GOTO      EXACTD
     C                   END                                                    *FI
      *
     C     #1SEL         IFNE      'E'                                          *IF
     C     #1SEL         ANDNE     'A'                                          *IF
     C     #1SEL         ANDNE     'D'                                          *IF
     C     #1SEL         ANDNE     '1'                                          *IF
     C     #1SEL         ORNE      '1'                                          *IF
     C     #1SEL         ANDNE     'E'                                          *IF
     C     P1ACTC        ANDEQ     'S'                                          *IF
     C     #1SEL         ORNE      'E'                                          *IF
     C     P1ACTC        ANDEQ     'E'                                          *IF
     C     #1SEL         ORNE      'E'                                          *IF
     C     #1SEL         ANDNE     'A'                                          *IF
     C     #1SEL         ANDNE     'D'                                          *IF
     C     P1ACTC        ANDEQ     'A'                                          *IF
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0001                         *SFLSEL
      * Send message 'Invalid Action code'
     C                   MOVEL     'MIN0008'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9838      *
      *
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   GOTO      EXACTD
     C                   END                                                    *FI
      *
      * Check multi-branch actions
      *
     C                   EXSR      SRMBIN
      *
      *  Unwind subroutine stack name
      *
     C     EXACTD        TAG
     C                   MOVEA     *BLANKS       @STK(Q)
     C                   SUB       1             Q
      *
      *================================================================
     CSR                 ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRMBIN - Check Multi-branch actions                           *
     C*                                                               *
     C*                                                               *
     C* Called by: SRACTD                                             *
     C*                                                               *
      *================================================================
     CSR   SRMBIN        BEGSR
      *
      *  Set up subroutine stack name
      *
     C                   ADD       1             Q
     C                   MOVEL     'SRMBIN'      @STK(Q)
      *
      * Set up parameters
      *
     C                   CLEAR                   W0DATA
     C                   MOVEL     *BLANKS       B#BRCA
     C                   MOVEL     #1SEL         O#ACTD
     C                   MOVEL     ##PGM         O#CPGM
      *
      * Check all valid actions
      *
     C                   CALL      'ME1190'                             9090
     C                   PARM      *BLANKS       P0RTN             7
     C                   PARM      '*ACTCODE'    W0ACT             8
     C                   PARM                    W0DATA
      *
      * Option ended in error
      *
     C     *IN90         IFEQ      '1'                                          *IF
     C                   MOVEL     'MIN0019'     P0RTN
     C                   SETON                                        9836      *
     C                   END                                                    *FI
      *
      * Invalid action
      *
     C     P0RTN         IFNE      *BLANKS                                      *IF
     C     #1SEL         IFNE      'I'
     C                   SETON                                        9836      *
     C                   ELSE                                                   *FI
     C                   SETON                                        99        *
     C                   END                                                    *FI
     C                   END                                                    *FI
      *
      *  Unwind subroutine stack name
      *
     C     EXMBIN        TAG
     C                   MOVEA     *BLANKS       @STK(Q)
     C                   SUB       1             Q
      *
      *================================================================
     CSR                 ENDSR
      /EJECT
      *================================================================
     C*                                                               *
     C* SRRCHG - Record Changed                                       *
     C*                                                               *
     C*                                                               *
     C* Called by: DCPRSR                                             *
     C*                                                               *
      *================================================================
     CSR   SRRCHG        BEGSR
      *
      *  Set up subroutine stack name
      *
     C                   ADD       1             Q
     C                   MOVEL     'SRRCHG'      @STK(Q)
      *
      * Set up key from subfile record and chain to record
      *
     C     KYMFL0        KLIST
     C                   KFLD                    #1NWRK                         Network
     C                   KFLD                    #1MTPY                         Message type
     C                   KFLD                    #1MSEQ                         Message Sequence
     C                   KFLD                    #1MTAG                         Message Field T
     C                   KFLD                    #1FTFD                         FT Field Name
      *
      * Only chain if record if live #1RECI is 'D'
      *
     C     #1RECI        IFEQ      'D'
     C*****KYMFL0        CHAIN     @INFML0                            90        *           MD056752
     C/EXEC SQL                                                                             MD056752
     C+ SELECT *                                                                            MD056752
     C+ into :MEINFM                                                                        MD056752
     C+ from MEINFJW0                                                                       MD056752
     C+ where FMNWRK = :#1NWRK and FMMTPY = :#1MTPY and FMMSEQ = :#1MSEQ                    MD056752
     C+ and FMMTAG = :#1MTAG and FMFTFD = :#1FTFD                                           MD056752
     C/END-EXEC                                                                             MD056752
      *
      * Record not found - database error
      *
     C******IN90         IFEQ      '1'                                                      MD056752
     C     SQLCODE       IFEQ      100                                                      MD056752
     C                   MOVEL     'MEINFML0'    W0FILE
     C                   MOVEL     #1NWRK        ##0009            9            Network
     C                   MOVE      #1MTPY        ##0009                         Message type
     C     ##0009        CAT(P)    #1MTAG        ##0014           14            Message Field T
     C     ##0014        CAT(P)    #1FTFD        W0KEY                          FT Field Name
     C                   Z-ADD     1             W0ERNB
     C                   MOVEL     'MEM5004'     W0MSGD
     C                   MOVEL     'MIDAS  '     W0MSGF
     C                   EXSR      SRERR
     C                   END
     C                   ELSE
     C                   MOVEL     #1RECI        FMRECI
     C                   END
      *
      *  If action code is not blank then send messge record has been
      *  deleted if RECI not equal to 'D'
      *
     C     #1SEL         IFNE      *BLANKS
     C     FMRECI        IFNE      'D'
      * Send message 'Invalid Action code - record deleted'
     C                   MOVEL     'MIN0216'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9836      *
     C                   END
     C                   GOTO      EXRCHG
     C                   END
      *
      *  Reload subfile record
      *
     C                   EXSR      MBFL#1
     C                   EXSR      MC#1FN
      *
      *  Unwind subroutine stack name
      *
     C     EXRCHG        TAG
     C                   MOVEA     *BLANKS       @STK(Q)
     C                   SUB       1             Q
      *
      *================================================================
     CSR                 ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(36)
     C                   MOVEL     *BLANKS       P0RTN
     C                   SETOFF                                       98        *
     C                   EXSR      MC#1FN
      * USER: Process subfile record (Pre-confirm)
      * DSPFIL: Process SF rec - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Process Subfile Record
     C/COPY WNCPYSRC,ME1150DPSR
      *
      * Check action code is valid, if invalid exit.
      *
     C                   EXSR      SRACTD
      *
      * Check record is active
      *
     C                   EXSR      SRRCHG
      *
     C     *IN98         IFEQ      '1'
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   GOTO      DCENDT                                       *QUIT
     C                   END                                                    *FI
      *
      * Call option
      *
     C                   SELECT
      *
      * Amend, Delete and Enquire
      *
     C     #1SEL         WHENEQ    'A'
     C     #1SEL         OREQ      'D'
     C     #1SEL         OREQ      'E'
      *
      * Set up parameters
      *
     C                   MOVEL     #1NWRK        O2NWRK
     C                   MOVEL     #1MTPY        O2MTPY
     C                   MOVEL     #1MSEQ        O2MSEQ
     C                   MOVEL     #1MTAG        O2MTAG
     C                   MOVEL     #1FTFD        O2FTFD
      *
     C                   CALL      'ME1160'                             9090
     C                   PARM                    P0RTN             7
     C                   PARM      #1SEL         WP0001            1            Action Code
     C                   PARM                    O2PARM                         KEY: Incoming M
      *
      * If in error set up return code
      *
     C     *IN90         IFEQ      '1'
     C                   MOVEL     'MIN0019'     P0RTN
     C                   END
      *
      * Select
      *
     C     #1SEL         WHENEQ    '1'
     C                   MOVEL     FMNWRK        P2NWRK
     C                   MOVEL     FMMTPY        P2MTPY
     C                   MOVEL     FMMTAG        P2MTAG
     C                   MOVEL     FMRECI        P2RECI
     C                   MOVEL     FMFTFD        P2FTFD
     C                   MOVEL     FMFTSP        P2FTSP
     C                   MOVEL     FMNARR        P2NARR
     C                   MOVEL     FMAJOB        P2AJOB
     C                   MOVEL     FMAUSR        P2AUSR
     C                   Z-ADD     FMATIM        P2ATIM
     C                   MOVEL     FMARDT        P2ARDT
     C                   MOVEL     FMAACT        P2AACT
     C                   MOVEL     FMRDNB        P2RDNB
     C                   MOVEL     *BLANKS       P0RTN                          *Return code
     C                   EXSR      ZXEXPG
      *
     C                   ENDSL
      *
      * Option ended in error
      *
     C     *IN90         IFEQ      '1'                                          *IF
     C                   MOVEL     'MIN0019'     P0RTN
     C                   END                                                    *FI
      *
      *  Depending on return code - exit or re-display screen
      *
     C                   SELECT                                                 *SL
      *
      *  F12 pressed - redisplay subfile
      *
     C     P0RTN         WHENEQ    'USR0790'                                    *IF
      *
      * Send message 'F12 taken from previous screen'
      *
     C                   MOVEL     'MIN0015'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9836      *
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   GOTO      DCENDT                                       *QUIT
      *
      *  F3 pressed - exit program
      *
     C     P0RTN         WHENEQ    'Y2U9999'                                    *IF
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
      *
      *  If error redisplay
      *
     C     P0RTN         WHENNE    *BLANKS                                      *IF
      *
      * Re-display screen
      *
     C                   MOVEL     'MIN0019'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9836      *
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   GOTO      DCENDT                                       *QUIT
      *
      *  Function completed normally
      *
     C     P0RTN         WHENEQ    *BLANKS                                      *IF
     C                   ENDSL                                                  *LS
      *
     C     DCENDT        TAG
     C     *IN98         IFEQ      '1'
      * SFLRCD invalid
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
      * SFLNXTCHG
     C                   SETON                                        84
     C                   ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                   SETOFF                                       84
     C                   MOVEL     *BLANK        #1SEL
     C                   END                                                    FI *IN98
      *
      *  If option did not end in error, F12 or F3 then update record
      *  with changes
      *
     C     P0RTN         IFEQ      *BLANKS
     C     *IN98         ANDEQ     '0'
     C                   EXSR      SRRCHG
     C                   END
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @INFML1 fields to subfile
      *================================================================
     C                   MOVEL     *BLANK        #1SEL
     C                   MOVEL     FMNARR        #1NARR                         Narrative
     C                   MOVEL     FMRECI        #1RECI                         Record Identifi
     C                   MOVEL     FMAJOB        #1AJOB                         Job name
     C                   MOVEL     FMAUSR        #1AUSR                         User name
     C                   Z-ADD     FMATIM        #1ATIM                         Action Time
     C                   MOVEL     FMARDT        #1ARDT                         Action Date
     C                   MOVEL     FMAACT        #1AACT                         Action Type
     C                   Z-ADD     FMRDNB        #1RDNB                         Run day number
     C                   MOVEL     FMNWRK        #1NWRK                         Network
     C                   MOVEL     FMMTPY        #1MTPY                         Message type
     C                   MOVEL     FMMSEQ        #1MSEQ                         Message Field S
     C                   MOVEL     FMMTAG        #1MTAG                         Message Field T
     C                   MOVEL     FMFTFD        #1FTFD                         FT Field Name
      *
      * If deleted stop subfile selection and place deleted in
      * access point
      *
     C     #1RECI        IFEQ      '*'                                          Record Identifi
     C                   MOVEL     *BLANKS       #1FTFD
     C                   MOVEL     *BLANKS       #1FTSP                         Special Instruc
     C                   MOVEL     U#DELT        #1FTFD
     C                   MOVEL     *BLANK        #1SEL                          *SFLSEL
     C                   GOTO      MBEXIT
     C                   END
      *
     C                   MOVEL     FMFTSP        #1FTSP                         Special Instruc
     C                   MOVEL     *BLANK        #1SEL                          *SFLSEL
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MC#1FN        BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      * DSPFIL: SF rec func flds - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Subfile Record function fields
     C/COPY WNCPYSRC,ME1150DRFF
      *================================================================
     CSR   MCEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
      *
      * Initialise header and footer fields
      *
     C                   MOVEL     *BLANK        ##ONAM                         Option Name
     C                   MOVEL     *BLANK        ##CMD1                         CMD Line 1
     C                   MOVEL     *BLANK        ##CMD2                         CMD Line 2
      *
     C                   MOVEL     P1ACTC        #PACTC                         Action Code
     C                   MOVEL     *BLANK        #2NWRK                         Network
     C                   MOVEL     *BLANK        #2MTPY                         Message type
     C                   MOVEL     *BLANK        #2MTAG                         Message Field T
     C                   MOVEL     *BLANK        #2FTFD                         FT Field Name
     C                   MOVEL     *BLANK        #2FTSP                         Special Instruc
      *
      * Fill Command lines and narrative text from messages
      *
     C                   SELECT
      *
      * Enquiry screen
      *
     C     P1ACTC        WHENEQ    'E'
      *
      * Option Name
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0044'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##ONAM
      *
      * Action codes
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0045'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD1
      *
      * Function keys
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0046'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD2
      *
      * Update screen
      *
     C     P1ACTC        WHENEQ    'A'
      *
      * Option Name
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0047'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##ONAM
      *
      * Action codes
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0048'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD1
      *
      * Function keys
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0049'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD2
      *
      * Allow function key 9
      *
     C                   MOVEL     '1'           *IN77
      *
      * Selection screen
      *
     C     P1ACTC        WHENEQ    'S'
      *
      * Option Name
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0050'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##ONAM
      *
      * Action codes
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0051'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD1
      *
      * Function keys
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0052'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C                   MOVEL     #MSTX1        ##CMD2
      *
      * Allow function key 12
      *
     C                   MOVEL     '1'           *IN78
      *
     C                   ENDSL
      *
      * Get deleted text
      *
     C                   CALL      'MEC1150'                            9090
     C                   PARM      'MIN0214'     #MSGID
     C                   PARM      'MEMSG'       #MSGF
     C                   PARM                    #MSDTA
     C                   PARM      *BLANKS       #MSTX1
     C                   PARM      *BLANKS       #MSTX2
      *
     C     *LIKE         DEFINE    #1FTFD        U#DELT
     C                   MOVEL     #MSTX1        U#DELT
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C     ZAPGMQ        IFEQ      *BLANK
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C     ZAMSGF        IFEQ      *BLANK
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ           10            Program queue
     C                   PARM                    ZAPGRL            5            Rel queue
     C                   PARM                    ZAMSID            7            Message ID
     C                   PARM                    ZAMSGF           10            Message file
     C                   PARM                    ZAMSDA          132            Message data
     C                   PARM                    ZAMSTP            7            Message type
      * Clear all fields for default mechanism next time
     C                   MOVEL     *BLANK        ZAPGMQ
     C                   MOVEL     *BLANK        ZAPGRL
     C                   MOVEL     *BLANK        ZAMSID
     C                   MOVEL     *BLANK        ZAMSGF
     C                   MOVEL     *BLANK        ZAMSDA
     C                   MOVEL     *BLANK        ZAMSTP
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      *
      * CASE: CTL.*CMD key is CF03
     C     *IN03         IFEQ      '1'                                          *IF
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   END                                                    *FI
      * CASE: CTL.*CMD key is CF12
     C     *IN12         IFEQ      '1'                                          *IF
     C                   MOVEL     'USR0790'     P0RTN                          *Return code
     C                   END                                                    *FI
      *
      * DSPFIL: Exit Program Proc - R10 Copy source templates  *
     C*DSPFIL: Cpysrc Templates Exit Program Processing
     C/COPY WNCPYSRC,ME1150DEPP
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                   CALL      'Y2CPMSC'
     C                   PARM                    ##PGM
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   MOVE      *BLANK        P0RTN
     C                   MOVE      *BLANK        W0RTN             7
     C                   MOVEL     *BLANK        W0RSL             1
     C                   MOVEL     *BLANK        W0RSF             1
      * Setup job date/time
      *
     C                   Z-ADD     UDATE         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME             6 0
      * Obtain default message file
     C                   MOVEL     'MEMSG'       ZADFMF           10
     C                   Z-ADD     09            ##SFPG            3 0          SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     500           W0SLM             5 0
      *................................................................
     C                   MOVEL     *BLANK        W0GRP             1
     C                   Z-ADD     0             Q                 5 0
     C                   MOVEA     '00'          *IN(77)
      * USER: Initialise program
      * Retrieve Midas Date - R10 Standard Functions  *
     C*
     C*  Set up copyright parameter
     C*
     C                   MOVEA     CPY@          BIS@             80
     C*
     C* Get Rundate - Rundate  *
     C*
     C     *DTAARA       DEFINE    RUNDAT        RUNDTA
     C                   IN        RUNDTA
     C                   MOVE      AGMRDT        ##MRDT            7            Midas Run date
     C                   MOVE      AGMRDT        WUMRDT            7            Midas Run date
     C                   MOVE      AGRDNB        WURDNB            5 0          Run day number
     C                   MOVE      AGSUC         WUSUC             1            Set up complete
     C                   MOVE      AGDFF         WUDFF             1            Date Format
     C                   MOVE      AGMBIN        WUMBIN            1            Multi Branched
      *                                                                                       CSW209
      ** Check if SWIFT 2009 is installed                                                     CSW209
      *                                                                                       CSW209
     C                   CALL      'SWIF2009'
     C                   PARM                    P@RTCD
     C     P@RTCD        IFEQ      'CSW2009'
     C                   MOVE      'Y'           CSW209            1
     C                   SETOFF                                       37
     C                   ELSE
     C                   MOVE      'N'           CSW209
     C                   SETON                                        37
     C                   ENDIF
     C*
     C* Get modules information
     C*
     C                   CALL      'AOMMODR0'                           9090
     C                   PARM      *BLANKS       P@RTCD            7            B:Return code
     C                   PARM      '*FIRST '     P@OPTN            7            I:Option
     C     MMODDS        PARM      *BLANKS       DSFDY                          O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C     *IN90         IFEQ      '1'
     C     P@RTCD        OREQ      '*ERROR*'
     C                   MOVEL     'AOMMODR0'    W0FILE
     C                   MOVEL     '*CALL'       W0KEY                          ***************
     C                   Z-ADD     2             W0ERNB                         * DB ERROR 01 *
     C                   MOVEL     'MEM5003'     W0MSGD                         ***************
     C                   MOVEL     'MIDAS  '     W0MSGF
     C                   EXSR      SRERR
     C                   END
      *
      * Open file MEINFML1
      *
     C*****FIL001        IFEQ      *BLANKS                                                  MD056752
      **********                                                                            MD056752
      ***Override file MEINFML1 to share(*NO)                                               MD056752
      **********                                                                            MD056752
     C**********         MOVEA     CMD@(1)       EDT                                        MD056752
     C**********         MOVEL     'MEINFML1'    U#FILE           10                        MD056752
     C**********         MOVEA     U#FILE        EDT(17)                                    MD056752
     C**********         MOVEA     EDT           OVRDBF           80                        MD056752
     C**********         Z-ADD     80            CMDLEN           15 5                      MD056752
     C**********         CALL      'QCMDEXC'                              90    90          MD056752
     C**********         PARM                    OVRDBF                                     MD056752
     C**********         PARM                    CMDLEN                                     MD056752
      **********                                                                            MD056752
     C******IN90         IFEQ      '1'                                                      MD056752
     C**********         MOVEL     '*CALL  '     W0FILE                                     MD056752
     C**********         MOVEL     'QCMDEXC'     W0KEY                                      MD056752
     C**********         Z-ADD     3             W0ERNB                                     MD056752
     C**********         MOVEL     'MEM5003'     W0MSGD                                     MD056752
     C**********         MOVEL     'MIDAS  '     W0MSGF                                     MD056752
     C**********         EXSR      SRERR                                                    MD056752
     C**********         END                                                                MD056752
      **********                                                                            MD056752
     C**********         OPEN      MEINFML1                                                 MD056752
     C**********         MOVEL     'Y'           FIL001            1                        MD056752
     C**********         END                                                                MD056752
      *
      * Open file MEINFML0
      *
     C*****FIL002        IFEQ      *BLANKS                                                  MD056752
      **********                                                                            MD056752
      ***Override file MEINMVL0 to share(*NO)                                               MD056752
      **********                                                                            MD056752
     C**********         MOVEA     CMD@(1)       EDT                                        MD056752
     C**********         MOVEL     'MEINFML0'    U#FILE           10                        MD056752
     C**********         MOVEA     U#FILE        EDT(17)                                    MD056752
     C**********         MOVEA     EDT           OVRDBF           80                        MD056752
     C**********         Z-ADD     80            CMDLEN           15 5                      MD056752
     C**********         CALL      'QCMDEXC'                              90    90          MD056752
     C**********         PARM                    OVRDBF                                     MD056752
     C**********         PARM                    CMDLEN                                     MD056752
      **********                                                                            MD056752
     C******IN90         IFEQ      '1'                                                      MD056752
     C**********         MOVEL     '*CALL  '     W0FILE                                     MD056752
     C**********         MOVEL     'QCMDEXC'     W0KEY                                      MD056752
     C**********         Z-ADD     4             W0ERNB                                     MD056752
     C**********         MOVEL     'MEM5003'     W0MSGD                                     MD056752
     C**********         MOVEL     'MIDAS  '     W0MSGF                                     MD056752
     C**********         EXSR      SRERR                                                    MD056752
     C**********         END                                                                MD056752
      **********                                                                            MD056752
     C**********         OPEN      MEINFML0                                                 MD056752
     C**********         MOVEL     'Y'           FIL002            1                        MD056752
     C**********         END                                                                MD056752
      * DSPFIL: Initialise Prog. - R10 Copy source templates  *
     C*DSPRCD: Cpysrc Templates Initialise Program C-Spec
     C/COPY WNCPYSRC,ME1150DCPG
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
     C*
     C* File and Program Error Processing
     C*
     C*COPY*MECPYSRC,SRERRC                                                                 MD056752
     C/COPY MECPYSRC,SRERRCLE                                                               MD056752
     O*DSPRCD: Cpysrc Templates Initialise Program O-Spec
     O/COPY WNCPYSRC,ME1150DOPG
**  CPY@
(c) Finastra International Limited 2001
** Command Array
OVRDBF     FILE(XXXXXXXXXX) SHARE(*NO) SECURE(*YES)
