     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME IMM Test action code is valid')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Message Management Module
     F*                                                               *
     F*  ME1190 - IMM Check action code is valid                      *
     F*                                                               *
     F*  Function:  This program checks the SPF set up for            *
     F*             specified action                                  *
     F*                                                               *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD031             Date 10Apr06               *
      *  Prev Amend No. CSC022             Date 24Feb04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 069250             Date 03May94               *
      *                 S01435             Date 23Jul93               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  069250 - Remove dummy OVRDBF command from creation parms.    *
     F*  S01435 - Incoming Message Management                         *
     F*                                                               *
     F*****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
/******:*OVRDBF*(File*in*program)*(file*on*system)******************:**   069250
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*                                                               *
     F*  50    First cycle                                            *
     F*  90    General work indicator                                 *
     F*                                                               *
     F*  U7/U8 Error Ocurred                                          *
     F*  LR    End program                                            *
     F*                                                               *
     F*****************************************************************
     F/EJECT
     E                    CPY@    1   1 80
      *
      *  Copyright table
      *
     E/COPY MECPYSRC,SRERRE
      *
      *  end of Copysource for error processing
      *
      ** Array of Commitment Job Names                                                        CSC022
     E                    CMTJOB     10 10                                                    CSC022
     E/EJECT
      *
     ICPYR@#      DS
      *
      *  Data structure for compilation  - Copyright insertion
      *
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
      *
     I/COPY MECPYSRC,SRERRI
      *
      *  End of Program Error Processing copysource member
      *
     IRUNDTA    E DSRUNDAT
      *
      *  Define rundat data area
      *
     IZMUSER    E DSZMUSER
      *
      *  Define ZMUSER for default data
      *
     ISDBRCH    E DSSDBRCHPD
      *
      *  Define data for Branch file
      *
     ISDGELR    E DSSDGELRPD
      *
      *  Define data for Branch file
      *
     IW0DATA      DS                            256
      *
      *  Define data structure used to pass parameters
      *
     I                                        1   3 B#BRCA
     I                                        4   4 I#ACTD
     I                                        5  14 I#CPGM
     IDSFDY     E DSDSFDY
     I*
     I* Data Structures used by Access Programs
     I*
     IDSSDY     E DSDSSDY
     I*
     I* Data Structures used by Access Programs
     I*
     ISCCMT       DS                            256                                           CSC022
     I                                        1   30CMTNUM                                    CSC022
     I                                        4 103 CMTARR                                    CSC022
     I/EJECT
      *****************************************************************
      *                 M A I N L I N E
      *****************************************************************
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      *
      *  Define entry parameters
      *
     C           *ENTRY    PLIST
     C                     PARM           W0RTN   7
     C                     PARM           W0ACT   8
     C                     PARM           W0DATA
      *
      *  Set up primary reference
      *
     C                     MOVELW0DATA    W0PREF
      *
      * Initialise program
      *
     C           *IN50     IFEQ '0'
     C                     EXSR SRINIT
     C                     END
      *
      *  Validate depending on action code
      *
     C           W0ACT     CASEQ'*BOOK   'SRBOOK
     C           W0ACT     CASEQ'*ORGN   'SRORGN
     C           W0ACT     CASEQ'*ACTCODE'SRACTD
     C                     CAS            SRACT
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *  Return to calling program
      *
     C                     RETRN
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRBOOK   : Validate that branch is allowed for booking       *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRBOOK    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRBOOK'  @STK,Q
      *
      *  Default branch is not passed
      *
     C           B#BRCA    IFEQ *BLANKS
     C                     MOVELDBRN      B#BRCA
     C                     END
      *
      *  If not multi-branched then no check as only one branch
      *  return default branch.
      *
     C           WUMBIN    IFNE 'Y'
     C                     GOTO EXBOOK
     C                     END
      *
      *  Check branch exists
      *
     C**********           CALL 'AOBRCHR0'                                                    CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*KEY   ' P@OPTN  7        I:Option
     C                     PARM B#BRCA    P@BRCD  3        I:Key field
     C********** SDBRCH    PARM           DSFDY            O:Format                           CGL029
     C           SDBRCH    PARM           DSSDY                                               CGL029
      *
      * Branch not found
      *
     C           P@RTCD    IFNE *BLANKS
     C           P@RTCD    ANDNE'*NOSEL '
     C                     MOVEL'MIN0146' W0RTN
     C                     MOVEL'MIN0146' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXBOOK
     C                     END
      *
      *  If no selection exit with blanks in B#BRCA
      *
     C           P@RTCD    IFEQ '*NOSEL '
     C                     MOVEL'MIN0178' W0RTN
     C                     MOVEL'MIN0178' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   B#BRCA
     C                     GOTO EXBOOK
     C                     ELSE
      *
      *  Move selected branch to output branch
      *
     C           A8BRCD    IFNE B#BRCA
     C                     MOVEL'MIN0179' W0RTN
     C                     MOVEL'MIN0179' ZAMSID
     C                     MOVELA8BRCD    ZAMSDA
     C                     EXSR ZASNMS
     C                     MOVELA8BRCD    B#BRCA
     C                     END
     C                     END
      *
      *  Check user is authorised to booking branch
      *
     C                     CALL 'ZVBBU'
     C                     PARM B#BRCA    ZBRCDX  3        BRANCH CODE 3A
     C                     PARM           ERR     10       ERROR CODE 1S
      *
      * User has no authority to any booking branches
      *
     C           ERR       IFEQ 1
     C                     MOVEL'MIN0152' W0RTN
     C                     MOVEL'MIN0152' ZAMSID
     C                     MOVELB#BRCA    ZAMSDA
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXBOOK
     C                     END
      *
      * User has no authority to this booking branch
      *
     C           ERR       IFEQ 2
     C                     MOVEL'MIN0153' W0RTN
     C                     MOVEL'MIN0153' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     MOVELB#BRCA    ZAMSDA
     C                     EXSR ZASNMS
     C                     GOTO EXBOOK
     C                     END
      *
     C                     MOVEL'MIN0154' ZAMSID
     C                     MOVELB#BRCA    ZAMSDA
     C                     EXSR ZASNMS
      *
      *  Unwind subroutine stack name
      *
     C           EXBOOK    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRORGN   : Validate that branch is allowed for originating   *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRORGN    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRORGN'  @STK,Q
      *
      *  Default branch is not passed
      *
     C           B#BRCA    IFEQ *BLANKS
     C                     MOVELDBRN      B#BRCA
     C                     END
      *
      *  If not multi-branched then no check as only one branch
      *  return default branch.
      *
      *  OR Originating branches not used
      *
     C           WUMBIN    IFNE 'Y'
     C           BKOBUV    ORNE 'Y'
      *
     C                     MOVEL'MIN0155' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO EXORGN
      *
     C                     END
      *
      *  Check branch exists
      *
     C**********           CALL 'AOBRCHR0'                                                    CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*KEY   ' P@OPTN  7        I:Option
     C                     PARM B#BRCA    P@BRCD  3        I:Key field
     C********** SDBRCH    PARM           DSFDY            O:Format                           CGL029
     C           SDBRCH    PARM           DSSDY                                               CGL029
      *
      * Branch not found
      *
     C           P@RTCD    IFNE *BLANKS
     C           P@RTCD    ANDNE'*NOSEL '
     C                     MOVEL'MIN0146' W0RTN
     C                     MOVEL'MIN0146' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXORGN
     C                     END
      *
      *  If no selection exit with blanks in B#BRCA
      *
     C           P@RTCD    IFEQ '*NOSEL '
     C                     MOVEL'MIN0178' W0RTN
     C                     MOVEL'MIN0178' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   B#BRCA
     C                     GOTO EXORGN
     C                     ELSE
      *
      *  Move selected branch to output branch
      *
     C           A8BRCD    IFNE B#BRCA
     C                     MOVEL'MIN0179' W0RTN
     C                     MOVEL'MIN0179' ZAMSID
     C                     MOVELA8BRCD    ZAMSDA
     C                     EXSR ZASNMS
     C                     MOVELA8BRCD    B#BRCA
     C                     END
     C                     END
      *
     C                     CALL 'ZVOBU'
     C                     PARM B#BRCA    ZOBRX   3
     C                     PARM 0         ERR     10
      *
      * User has no authority to any originating branches
      *
     C           ERR       IFEQ 1
     C                     MOVEL'MIN0149' W0RTN
     C                     MOVEL'MIN0149' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     MOVELB#BRCA    ZAMSDA
     C                     EXSR ZASNMS
     C                     GOTO EXORGN
     C                     END
      *
      * User has no authority to this originating branch
      *
     C           ERR       IFEQ 2
     C                     MOVEL'MIN0150' W0RTN
     C                     MOVEL'MIN0150' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     MOVELB#BRCA    ZAMSDA
     C                     EXSR ZASNMS
     C                     GOTO EXORGN
     C                     END
      *
     C                     MOVEL'MIN0151' ZAMSID
     C                     MOVELB#BRCA    ZAMSDA
     C                     EXSR ZASNMS
      *
      *  Unwind subroutine stack name
      *
     C           EXORGN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRACTD   : Validate that user has access to action code      *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRACTD    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRACTD'  @STK,Q
      *
      *  If not multi-branched then no check as only one branch
      *  return default branch.
      *
     C                     SELEC
     C           WUMBIN    WHNE 'Y'
      *
     C                     CALL 'ZVACTU'
     C                     PARM I#ACTD    ZACTN   1
     C                     PARM 0         ERR     10
      *
      * User has no authority to action
      *
     C           ERR       IFEQ 1
     C                     MOVEL'MIN0144' W0RTN
     C                     MOVEL'MIN0144' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXACTD
     C                     END
      *
     C                     MOVEL'MIN0145' ZAMSID
     C                     MOVELI#ACTD    ZAMSDA
     C                     EXSR ZASNMS
      *
     C           B#BRCA    IFEQ *BLANKS
     C                     MOVELDBRN      B#BRCA
     C                     END
      *
      *  Multi-branched environment
      *
     C                     OTHER
      *
      *  Default branch is not passed
      *
     C           B#BRCA    IFEQ *BLANKS
     C                     MOVELDBRN      B#BRCA
     C                     END
      *
      *  Check branch exists
      *
     C**********           CALL 'AOBRCHR0'                                                    CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*KEY   ' P@OPTN  7        I:Option
     C                     PARM B#BRCA    P@BRCD  3        I:Key field
     C********** SDBRCH    PARM           DSFDY            O:Format                           CGL029
     C           SDBRCH    PARM           DSSDY                                               CGL029
      *
      * Branch not found
      *
     C           P@RTCD    IFNE *BLANKS
     C           P@RTCD    ANDNE'*NOSEL '
     C                     MOVEL'MIN0146' W0RTN
     C                     MOVEL'MIN0146' ZAMSID
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXACTD
     C                     END
      *
      *  If no selection exit with blanks in B#BRCA
      *
     C           P@RTCD    IFEQ '*NOSEL '
     C                     MOVEL'MIN0178' W0RTN
     C                     MOVEL'MIN0178' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   B#BRCA
     C                     GOTO EXACTD
     C                     ELSE
      *
      *  Move selected branch to output branch
      *
     C           A8BRCD    IFNE B#BRCA
     C                     MOVEL'MIN0179' W0RTN
     C                     MOVEL'MIN0179' ZAMSID
     C                     MOVELA8BRCD    ZAMSDA
     C                     EXSR ZASNMS
     C                     MOVELA8BRCD    B#BRCA
     C                     END
     C                     END
      *
     C                     CALL 'ZVACTBU'
     C                     PARM I#ACTD    ZACTN   1
     C                     PARM B#BRCA    ZBR     3
     C                     PARM 0         ERR     10
      *
      * User has no authority to any action for branch
      *
     C           ERR       IFEQ 1
     C                     MOVEL'MIN0147' W0RTN
     C                     MOVEL'MIN0147' ZAMSID
     C                     MOVELB#BRCA    ZAMSDA
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXACTD
     C                     END
      *
      * User has no authority to action code for this branch
      *
     C           ERR       IFEQ 2
     C                     MOVEL'MIN0148' W0RTN
     C                     MOVEL'MIN0148' ZAMSID
     C                     MOVELB#BRCA    ZAMSDA
     C                     MOVELI#CPGM    ZAPGMQ
     C                     EXSR ZASNMS
     C                     GOTO EXACTD
     C                     END
      *
     C                     MOVEL'MIN0145' ZAMSID
     C                     MOVELI#ACTD    ZAMSDA
     C                     EXSR ZASNMS
      *
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C           EXACTD    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRACT    : Undefined action - error                          *
      *                                                               *
      *  CALLED BY: Main Processing                                   *
      *                                                               *
      *  CALLS    : SRERR   - report error and close down program     *
      *                                                               *
      *****************************************************************
     CSR         SRACT     BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRACT '  @STK,Q
      *
      *  Database error undefined action
      *
     C                     MOVEL'*ACTION 'W0FILE           ***************
     C                     MOVELW0ACT     W0KEY            * DB ERROR 03 *
     C                     Z-ADD1         W0ERNB           ***************
     C                     MOVEL'MEM5006' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
      *
      *  Unwind subroutine stack name
      *
     C           EXACT     TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
      *
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVEL'MEMSG'   ZAMSGF
     C                     END
      *
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      *
      * Clear all fields for default mechanism next time
      *
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRINIT    BEGSR
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      BIS@   80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *  Indicate that set up is complete
      *
     C                     SETON                     50
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      *  Get ZMUSER information
      *
     C           *NAMVAR   DEFN           ZMUSER
     C                     IN   ZMUSER
      *
      *  Find if originating branches used
      *
     C**********           CALL 'AOGELRR0'             9090                                   CGL029
     C                     CALL 'AOGELRR1'             9090                                   CGL029
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST'  P@OPTN  7        I:Option
     C********** SDGELR    PARM           DSFDY            O:Format                           CGL029
     C           SDGELR    PARM           DSSDY                                               CGL029
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOGELRR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD2         W0ERNB           * DB ERROR 01 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *                                                                                       CSC022
      ** Check if CSC022 is switched *ON.                                                     CSC022
      *                                                                                       CSC022
     C                     CALL 'AOSARDR0'                                                    CSC022
     C                     PARM *BLANKS   @RTCD   7                                           CSC022
     C                     PARM '*VERIFY' @OPTN   7                                           CSC022
     C                     PARM 'CSC022'  @SARD   6                                           CSC022
      *                                                                                       CSC022
     C           @RTCD     IFEQ *BLANKS                                                       CSC022
     C                     MOVE 'Y'       CSC022  1                                           CSC022
     C           *NAMVAR   DEFN SCCMTJOB  SCCMT                                               CSC022
     C                     IN   SCCMT                                                         CSC022
     C                     Z-ADD1         C       30                                          CSC022
     C                     MOVEL*BLANKS   WCMTSK  1                                           CSC022
     C                     MOVEACMTARR    CMTJOB                                              CSC022
     C           CMTNUM    IFGT 0                                                             CSC022
     C           C         DOWLECMTNUM                                                        CSC022
     C           ##JOB     IFEQ CMTJOB,C                                                      CSC022
     C                     MOVEL'Y'       WCMTSK                                              CSC022
     C                     ENDIF                                                              CSC022
     C                     ADD  1         C                                                   CSC022
     C                     ENDDO                                                              CSC022
     C                     ENDIF                                                              CSC022
     C                     ELSE                                                               CSC022
     C                     MOVE 'N'       CSC022                                              CSC022
     C                     ENDIF                                                              CSC022
      *
     CSR                   ENDSR
     C/EJECT
      *
      *  File and Program Error Processing
      *
     C/COPY MECPYSRC,SRERRC
     C/EJECT
**  CPY@ table
(c) Misys International Banking Systems Ltd. 2001
