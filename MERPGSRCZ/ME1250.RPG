     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME Control print selection')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Message Management Module
     F*                                                               *
     F*  ME1250 - I.M.M. Control Print Selection                      *
     F*                                                               *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD058938           Date 28Sep21               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSC022             Date 24Feb04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.03 -----------------------------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 124673             Date 04Jun98               *
      *                 069250             Date 03May94               *
     F*                 S01435             DATE 15Oct93               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD058938 - Recompile due to change in MEINFTPD file.         *
      *  MD046248 - Finastra Rebranding                               *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  124673 - Add Century field for Year 2000.                    *
     F*  069250 - Remove dummy OVRDBF command from creation parms.    *
     F*  S01435 - Incoming Message Management                         *
     F*                                                               *
     F*****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
/******:*OVRDBF*(File*in*program)*(file*on*system)******************:**   069250
     F*****************************************************************
     F*                                                               *
     F*  Indicator usage                                              *
     F*  ~~~~~~~~~~~~~~~                                              *
     F*                                                               *
     F*  50    First cycle                                            *
     F*  60    End of file for MEINFTJ2                               *
     F*  60    End of file for MEINFTJ3                               *
     F*  82    End of file                                            *
     F*  90    General work indicator                                 *
     F*  91    General work indicator                                 *
     F*                                                               *
     F*  U7/U8 Error Ocurred                                          *
     F*  LR    End program                                            *
     F*                                                               *
     F*****************************************************************
     FMEINMPJ1IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      *
      * RSQ : Incoming Message Parts
      *
     FMEINMPJ2IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      *
      * RSQ : Incoming Message Parts
      *
     FMEINFTJ2IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      *
      * RSQ : Incoming FT Transactions
      *
     FMEINFTJ3IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      *
      * RSQ : Outgoing FT Transactions
      *
     FMEINCRJ1IF  E           K        DISK                           UC
     F                                              KINFSR SRFILE
      *
      * RSQ : Incoming Message Control
      *
     F/COPY WNCPYSRC,ME1250DFPG
      *
      *  /Copy point for File Definition
      *
     F/EJECT
     E                    CPY@    1   1 80
      *
      *  Copyright table
      *
     E                    CMD@    1   1 80
      *
      *  Array of QCMDEXC commands
      *
     E                    EDT        80  1
      *
      *  Array of QCMDEXC command to edit
      *
     E                    ABR        20  3
     E                    NBR        20  3
      *
      *  Array of authorised and not authorised branches
      *
     E/COPY WNCPYSRC,ME1250DEPG
      *
      *  /Copy point for Arrays
      *
     E/COPY MECPYSRC,SRERRE
      *
      *  end of Copysource for error processing
      *
     E/EJECT
     I/COPY WNCPYSRC,ME1250DIPG
      *
      *  /Copy point for Input specifications
      *
      *
     ICPYR@#      DS
      *
      *  Data structure for compilation  - Copyright insertion
      *
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
      *
     I/COPY MECPYSRC,SRERRI
      *
      *  End of Program Error Processing copysource member
      *
     IRUNDTA    E DSRUNDAT
      *
      *  Define rundat data area
      *
     IMMODDS    E DSSDMMODPD
     I*
     I* Modules Data Structure *
     I*
     ISDGELR    E DSSDGELRPD
     I*
     I* Define General Ledger ICD Details *
     I*
     IDSFDY     E DSDSFDY
     I*
     I* Data Structures used by Access Programs
     I*
     IDSSDY     E DSDSSDY
     I*
     I* Data Structures used by Access Programs
     I*
     II#DTA       DS                            256
      *
      *  Report parameters data structure for ME1140
      *
      *           Spool file name (if blank, name unchanged).
      *                 N.B. To change name I#SPLR must be Y
      *
     I                                        1  10 I#SPLN
      *
      *           Repeat open and close of spool file
      *                 If Y create new spool file
      *
     I                                       11  11 I#SPLR
      *
      *           Report Reference if Access checking is off
      *
     I                                       12  21 I#REFN
      *
      *           Report Override Flag / Page No.
      *
     I                                       22  22 I#ROVR
     I                                       23  250I#PAGE
      *
      *           Report Title/Underline (uses msg ID on MEMSG)
      *
     I                                       26  32 I#TITL
     I                                       33  39 I#TUL
      *
      *           Report Formats to print
      *           Each character denotes a format option.
      *
     I                                       40  49 I#RFMT
      *
      *           Branch
      *
     I                                       50  52 I#BRCA
      *
      *           Incoming Message Ref./Part No.
      *
     I                                       53  600I#MSGR
     I                                       61  630I#PART
      *
     ID1PARM      DS                            256
      * RCD: Incoming Message Control  Physical file
      * B : MAP Type of selection
     I                                        1   1 D1ACTC
     I                                        2 256 D1BLNK
      * B : MAP Network
     I                                        2   7 D1NWRK
      * B : MAP Sender
     I                                        8  27 D1SNDR
      * B : MAP Original Reference
     I                                       28  55 D1MIR
      * B : MAP Last Reference
     I                                       56  83 D1MOR
      * B : MAP Transaction Reference
     I                                       84 100 D1TRNO
      * B : MAP Message Type
     I                                      101 103 D1MTPY
      * B : MAP Message Priority
     I                                      104 104 D1MPRY
      * B : MAP Original Sent data
     I                                      105 110 D1MODE
      * B : MAP Currency
     I                                      111 113 D1CYCD
      * B : MAP Value date from
     I                                      114 119 D1SVDT
      * B : MAP Value date to
     I                                      120 125 D1TVDT
      * B : MAP Branch
     I                                      126 128 D1BRCA
      * B : MAP Duplication Flag
     I                                      129 131 D1DUPF
      *
     I/COPY WNCPYSRC,ME1250I001
     ID2PARM      DS                            128
      * KEY: Incoming Message Control  Message Control Info.
      * B : MAP Network
     I                                        7  12 D2NWRK
      * B : MAP Sender
     I                                       13  32 D2SNDR
      * B : MAP Currency
     I                                       33  35 D2CYCD
      * B : MAP Transaction Reference
     I                                       36  51 D2TRNO
      * B : MAP FT Transaction
     I                                       52  66 D2PREF
      *
     IW0DATA      DS                            256
      *
      *  Define data structure used to pass parameters
      *
     I                                        1   3 B#BRCA
     I                                        4   4 O#ACTD
     I                                        5  14 O#CPGM
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I : MAP RCF Sequence
     I                                        1   5 P1RSEQ
     IP2PARM      DS
      * I : MAP RCF Level
     I                                        1   1 P2RLVL
     IP3PARM      DS
      * I : MAP RCF Entity
     I                                        1   3 P3RENT
     IP4PARM      DS
      * I : MAP RCF Action
     I                                        1   1 P4RACT
     IP5PARM      DS
      * O : MAP RCF F key pressed
     I                                        1   1 P5RFKY
     IP6PARM      DS
      * O : MAP RCF Selection Parameters
     I                                        1 100 P6RPRM
     I/EJECT
      *****************************************************************
      *                 M A I N L I N E
      *****************************************************************
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      *
      *  Define entry parameters
      *
     C           *ENTRY    PLIST
     C                     PARM           W0RTN   7
     C           P1RSEQ    PARM           WP0001  5        RCF Sequence
     C           P2RLVL    PARM           WP0002  1        RCF Level
     C           P3RENT    PARM           WP0003  3        RCF Entity
     C           P4RACT    PARM           WP0004  1        RCF Action
     C           P5RFKY    PARM P5RFKY    WP0005  1        RCF F key press
     C           P6RPRM    PARM P6RPRM    WP0006100        RCF Selection P
     C                     PARM           D1PARM
     C                     PARM           D2PARM
      *
      * Initialise program
      *
     C           *IN50     IFEQ '0'
     C                     EXSR SRINIT
     C                     END
      *
      *  Print todays messages
      *
     C                     EXSR SRPRT
      *
      *  Unwind subroutine stack name
      *
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
      *  Return to calling program
      *
     C                     RETRN
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRPRT    : Print todays messages                             *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRPRT     BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRPRT '  @STK,Q
      *
      *  Position file
      *
     C                     EXSR SRPOSN
      *
      *  If no records exit
      *
     C           *IN82     IFEQ '1'
     C                     GOTO EXPRT
     C                     END
      *
      *  Get next record
      *
     C                     EXSR SRNXTR
      *
      *  Process until end of file
      *
     C           *IN82     DOWEQ'0'
      *
      *  Check record is to be printed
      *
     C                     MOVEL'Y'       W0RSL   1
     C                     EXSR SRSELT
      *
      *  Call Print process ME1140
      *
     C           W0RSL     IFEQ 'Y'
     C                     EXSR SRCALL
     C                     END
      *
      *  Read next record
      *
     C                     EXSR SRNXTR
     C                     ENDDO
      *
      *  Call Print process ME1140 to close down
      *
     C                     EXSR SREND
      *
      *  Unwind subroutine stack name
      *
     C           EXPRT     TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRCALL   : Call Print Process                                *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRCALL    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRCALL'  @STK,Q
      *
      *  /Copy point for Detail only
      *
     C/COPY WNCPYSRC,ME1250DDET
      *
      *  Close spool file in ME1140
      *
     C                     MOVEL*BLANKS   I#BRCA
      *
     C                     Z-ADD#1MSGR    I#MSGR
     C                     Z-ADD#1KPRT    I#PART
      *
     C                     CALL 'ME1140'               9090
     C                     PARM *BLANKS   W0RTN   7
     C                     PARM '*PRINT  'W0ACT   8
     C                     PARM           I#DTA            Input Data Str.
     C                     PARM P1RSEQ    I#RSQN  5
      *
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     MOVEL'*CALL'   W0FILE
     C                     MOVEL'ME1140'  W0KEY
     C                     Z-ADD1         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXCALL    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SREND    : Call Print Process to close files                 *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SREND     BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SREND '  @STK,Q
      *
      *  /Copy point for End of Report
      *
     C/COPY WNCPYSRC,ME1250DEND
      *
      *  Clear data structure and *CLOSE
      *
     C                     CLEARI#DTA
      *
     C                     CALL 'ME1140'               9090
     C                     PARM *BLANKS   W0RTN   7
     C                     PARM '*CLOSE  'W0ACT   8
     C                     PARM           I#DTA            Input Data Str.
     C                     PARM *BLANKS   I#RSQN  5
      *
     C           W0RTN     IFNE *BLANKS
     C                     MOVEL'*CALL'   W0FILE
     C                     MOVEL'ME1140'  W0KEY
     C                     Z-ADD2         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXEND     TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
      /EJECT
     CSR         SRSELT    BEGSR
      *================================================================
      * Validate branch authority and selection
      *================================================================
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRSELT'  @STK,Q
      *
      * Do selection processing
      *
     C                     EXSR SRRSEL
     C           W0RSL     CABNE'Y'       EXSELT
      *
      * If not multi-branched then a valid booking branch must exist
      * unless screen branch is blank
      *
     C           WUMBIN    CABNE'Y'       EXSELT
     C           #1BRCA    CABEQ*BLANKS   EXSELT
      *
      * If multi-branched check arrays for branch validation
      *
     C                     Z-ADD1         B       50
     C           #1BRCA    LOKUPABR,B                    90
     C           *IN90     CABEQ'1'       EXSELT
      *
     C                     Z-ADD1         B       50
     C           #1BRCA    LOKUPNBR,B                    90
     C           *IN90     IFEQ '1'
     C                     MOVEL'N'       W0RSL
     C                     GOTO EXSELT
     C                     END
      *
      * See if valid booking branch
      *
     C                     CLEARW0DATA
     C                     MOVEL#1BRCA    B#BRCA
     C                     MOVEL*BLANKS   O#ACTD
     C                     MOVEL'ME1190'  O#CPGM
      *
      * Check all valid actions
      *
     C                     CALL 'ME1190'               9090
     C                     PARM *BLANKS   P0RTN   7
     C                     PARM '*BOOK   'W0ACT   8
     C                     PARM           W0DATA
      *
      * Option ended in error
      *
     C           *IN90     IFEQ '1'                        *IF
     C                     MOVEL'*CALL'   W0FILE
     C                     MOVEL'ME1190'  W0KEY
     C                     Z-ADD3         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Invalid action do not show - user has no action codes
      *
     C           P0RTN     IFEQ 'MIN0147'                  *IF
     C                     MOVEL'N'       W0RSL
     C           N         IFLT 21
     C                     MOVEA#1BRCA    NBR,N
     C                     ADD  1         N       30
     C                     END                             *FI
     C                     ELSE
     C           C         IFLT 21
     C                     MOVEA#1BRCA    ABR,N
     C                     ADD  1         C       30
     C                     END                             *FI
     C                     END                             *FI
      *
      *  Unwind subroutine stack name
      *
     C           EXSELT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         SRRSEL    BEGSR
      *================================================================
      * Validate branch authority and selection
      *================================================================
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRRSEL'  @STK,Q
      *
     C           *LIKE     DEFN D1MODE    U#MODE
     C                     MOVEL#1MODE    U#MODE
      * Check fields individually
      *
     C           D1BLNK    IFEQ *BLANKS
     C                     GOTO EXRSEL
     C                     END
      *
      * For Sndr Mir Mor and Trno use contains
      *
     C           D1SNDR    IFNE *BLANKS
     C           D1SNDR    ANDNE#1SNDR
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   20        U#      30
     C           1         SUBSTD1SNDR:U# ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDU#        Z#      30
     C                     END
     C                     ENDDO
      *
      * Scan for string
      *
     C           D1SNDR:Z# SCAN #1SNDR:1                 90
     C           *IN90     IFEQ '0'
     C                     MOVEL'N'       W0RSL
     C                     GOTO EXRSEL
     C                     END
     C                     END
     C/COPY WNCPYSRC,ME1250C001
      *
     C           D1MIR     IFNE *BLANKS
     C           D1MIR     ANDNE#1MIR
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   28        U#      30
     C           1         SUBSTD1MIR:U#  ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDU#        Z#      30
     C                     END
     C                     ENDDO
      *
      * Scan for string
      *
     C           D1MIR:Z#  SCAN #1MIR:1                  90
     C           *IN90     IFEQ '0'
     C                     MOVEL'N'       W0RSL
     C                     GOTO EXRSEL
     C                     END
     C                     END
      *
     C           D1MOR     IFNE *BLANKS
     C           D1MOR     ANDNE#1MOR
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   28        U#      30
     C           1         SUBSTD1MOR:U#  ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDU#        Z#      30
     C                     END
     C                     ENDDO
      *
      * Scan for string
      *
     C           D1MOR:Z#  SCAN #1MOR:1                  90
     C           *IN90     IFEQ '0'
     C                     MOVEL'N'       W0RSL
     C                     GOTO EXRSEL
     C                     END
     C                     END
      *
     C           D1TRNO    IFNE *BLANKS
     C           D1TRNO    ANDNE#1TRNO
      *
      * Get first non-blank character
      *
     C                     MOVEL*BLANKS   ##001   1
     C           1         DO   16        U#      30
     C           1         SUBSTD1TRNO:U# ##001
     C           ##001     IFNE *BLANKS
     C                     Z-ADDU#        Z#      30
     C                     END
     C                     ENDDO
      *
      * Scan for string
      *
     C           D1TRNO:Z# SCAN #1TRNO:1                 90
     C           *IN90     IFEQ '0'
     C                     MOVEL'N'       W0RSL
     C                     GOTO EXRSEL
     C                     END
     C                     END
     C/COPY WNCPYSRC,ME1250C008
      *
      ** Give inputted value dates a century for comparison.              124673
     C           D1SVDT    IFNE *BLANKS                                   124673
     C                     MOVELD1SVDT    CENTFR  2                       124673
     C           CENTFR    IFLT '72'                                      124673
     C                     MOVE '20'      CENTFR                          124673
     C                     ELSE                                           124673
     C                     MOVE '19'      CENTFR                          124673
     C                     ENDIF                                          124673
     C                     ENDIF                                          124673
      *                                                                   124673
     C           D1TVDT    IFNE *BLANKS                                   124673
     C                     MOVELD1TVDT    CENTTO  2                       124673
     C           CENTTO    IFLT '72'                                      124673
     C                     MOVE '20'      CENTTO                          124673
     C                     ELSE                                           124673
     C                     MOVE '19'      CENTTO                          124673
     C                     ENDIF                                          124673
     C                     ENDIF                                          124673
      *                                                                   124673
     C                     SELEC
     C           D1NWRK    WHNE *BLANKS
     C           D1NWRK    ANDNE#1NWRK
     C                     MOVEL'N'       W0RSL
      *
     C           D1MTPY    WHNE *BLANKS
     C           D1MTPY    ANDNE#1MTPY
     C                     MOVEL'N'       W0RSL
      *
     C           D1MPRY    WHNE *BLANKS
     C           D1MPRY    ANDNE#1MPRY
     C                     MOVEL'N'       W0RSL
      *
     C           D1MODE    WHNE *BLANKS
     C           D1MODE    ANDNEU#MODE
     C                     MOVEL'N'       W0RSL
      *
     C           D1CYCD    WHNE *BLANKS
     C           D1CYCD    ANDNE#1CRCY
     C                     MOVEL'N'       W0RSL
      *
     C           D1SVDT    WHNE *BLANKS
     C           D1SVDT    ANDGT#1CRDT
     C           CENTFR    ANDEQ#1CRDC                                    124673
     C           D1SVDT    ORNE *BLANKS                                   124673
     C           CENTFR    ANDGT#1CRDC                                    124673
     C           D1TVDT    ORNE *BLANKS
     C           D1TVDT    ANDLT#1CRDT
     C           CENTTO    ANDEQ#1CRDC                                    124673
     C           D1TVDT    ORNE *BLANKS                                   124673
     C           CENTTO    ANDLT#1CRDC                                    124673
     C                     MOVEL'N'       W0RSL
      *
     C           D1BRCA    WHNE *BLANKS
     C           #1BRCA    ANDNE*BLANKS
     C           D1BRCA    ANDNE#1BRCA
     C                     MOVEL'N'       W0RSL
      *
     C           D1DUPF    WHNE *BLANKS
     C           D1DUPF    ANDNE#1DUPF
     C                     MOVEL'N'       W0RSL
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C           EXRSEL    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         SRPOSN    BEGSR
      *================================================================
      * Position file
      *================================================================
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRPOSN'  @STK,Q
      *
      * Selection screen
      *
     C                     SELEC
     C           D1ACTC    WHEQ 'S'
     C           D1ACTC    OREQ 'A'
     C           *LOVAL    SETLL@INMPJ1
     C                     READ @INMPJ1                8782*82=EOF
      *
      * Selection by Ccy/Trno
      *
     C           D1ACTC    WHEQ 'B'
      *
      * Position DBF file
      *
     C           KPOSA     KLIST
     C                     KFLD           MPCCYP           Currency Code Part
     C                     KFLD           MPTRNO           Transaction Ref
     C                     KFLD           MPMSGR           Msg Unique Refe
     C                     KFLD           MPKPRT           Msg Part
      * Setup key
     C                     MOVELD2CYCD    MPCCYP           Currency Code
     C                     MOVELD2TRNO    MPTRNO           Transaction Ref
     C                     Z-ADD*ZERO     MPMSGR           Msg Unique Refe
     C                     Z-ADD*ZERO     MPKPRT           Msg Part
      *
     C           KPOSA     SETLL@INMPJ2
     C                     READ @INMPJ2                8782*82=EOF
      *
      * Display screen
      *
     C           D1ACTC    WHEQ 'C'
      * Position DBF file
     C           KPOSC     KLIST
     C                     KFLD           CRNWRK           Network
     C                     KFLD           CRSNDR           Sender
     C                     KFLD           CRSVDC           Cent of Val Dat124673
     C                     KFLD           CRCRDT           Value date  YYM
     C                     KFLD           CRCRCY           Currency Code
     C                     KFLD           CRCRPA           Payment Amount
     C                     KFLD           CRMIR            Message Input r
     C                     KFLD           CRMSGR           Msg Unique Refe
      * Setup key
     C                     MOVELD2NWRK    CRNWRK           Network
     C                     MOVELD2SNDR    CRSNDR           Sender
     C                     MOVEL*BLANK    CRSVDC           Cent of Val Dat124673
     C                     MOVEL*BLANK    CRCRDT           Value date  YYM
     C                     MOVEL*BLANK    CRCRCY           Currency Code
     C                     MOVEL*BLANK    CRCRPA           Payment Amount
     C                     MOVEL*BLANK    CRMIR            Message Input r
     C                     Z-ADD*ZERO     CRMSGR           Msg Unique Refe
      *
     C           *LIKE     DEFN CRNWRK    L#NWRK           Network
     C           *LIKE     DEFN CRSNDR    L#SNDR           Sender
      *
     C                     MOVEL*BLANK    L#NWRK           Network
     C                     MOVEL*BLANK    L#SNDR           Sender
      *
     C           KPOSC     SETLL@INCRJ1
     C                     READ @INCRJ1                8782*82=EOF
      *
      * FT selection
      *
     C           D1ACTC    WHEQ 'D'
      * Position DBF file
     C           KPOSD     KLIST
     C                     KFLD           FTPREF           System
      * Setup key
     C           *LIKE     DEFN INIPRF    FTPREF           FT reference
     C                     MOVELD2PREF    FTPREF           FT reference
      *
     C           KPOSD     SETLL@INFTJ2
     C                     READ @INFTJ2                8760*60=EOF
      *
     C           KPOSD     SETLL@OPFTJ3
     C                     READ @OPFTJ3                8761*61=EOF
      *
     C                     MOVEL'0'       *IN82
     C           *IN60     IFEQ '1'
     C           *IN61     ANDEQ'1'
     C                     MOVEL'1'       *IN82
     C                     END
      *
      * Select record to show
      *
     C           *IN82     IFEQ '0'
      *
      *  If Incoming ref less than out then show
      *
     C           INIPRF    IFLE OPOPRF
     C           *IN60     ANDEQ'0'
     C           *IN60     OREQ '0'
     C           *IN61     ANDEQ'1'
     C                     MOVEL'Y'       FTIREC  1
     C                     END
      *
      *  If Outgoing ref less than in then show
      *
     C           OPOPRF    IFLT INIPRF
     C           *IN61     ANDEQ'0'
     C           *IN60     OREQ '1'
     C           *IN61     ANDEQ'0'
     C                     MOVEL'N'       FTIREC  1
     C                     END
     C                     END
      *
     C                     ENDSL
      *
      *  Unwind subroutine stack name
      *
     C           EXPOSN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         SRNXTR    BEGSR
      *================================================================
      * Read next record
      *================================================================
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRNXTR'  @STK,Q
      *
      * Selection screen
      *
     C                     SELEC
     C           D1ACTC    WHEQ 'S'
     C           D1ACTC    OREQ 'A'
     C                     READ @INMPJ1                  82*82=EOF
      *
      * Selection by Ccy/Trno
      *
     C           D1ACTC    WHEQ 'B'
     C                     READ @INMPJ2                  82*82=EOF
      *
      * Display screen
      *
     C           D1ACTC    WHEQ 'C'
     C                     READ @INCRJ1                  82*82=EOF
      *
      * FT selection
      *
     C           D1ACTC    WHEQ 'D'
      *
     C           FTIREC    IFEQ 'Y'
     C           *IN61     OREQ '1'
     C  N60                READ @INFTJ2                  60*EOF
     C                     ELSE
     C           FTIREC    IFEQ 'N'
     C           *IN60     OREQ '1'
     C  N61                READ @OPFTJ3                  61*EOF
     C                     END
     C                     END
      *
     C                     MOVEL'0'       *IN82
     C           *IN60     IFEQ '1'
     C           *IN61     ANDEQ'1'
     C                     MOVEL'1'       *IN82
     C                     END
      *
      * Select record to show
      *
     C           *IN82     IFEQ '0'
      *
      *  If Incoming ref less than out then show
      *
     C           INIPRF    IFLE OPOPRF
     C           *IN60     ANDEQ'0'
     C           *IN60     OREQ '0'
     C           *IN61     ANDEQ'1'
     C                     MOVEL'Y'       FTIREC  1
     C                     END
      *
      *  If Outgoing ref less than in then show
      *
     C           OPOPRF    IFLT INIPRF
     C           *IN61     ANDEQ'0'
     C           *IN60     OREQ '1'
     C           *IN61     ANDEQ'0'
     C                     MOVEL'N'       FTIREC  1
     C                     END
     C                     END
      *
     C                     ENDSL
      *
      *  Move file information
      *
     C                     EXSR SRMOVE
      *
      *  Unwind subroutine stack name
      *
     C           EXNXTR    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *================================================================
     CSR                   ENDSR
      /EJECT
     CSR         SRMOVE    BEGSR
      *================================================================
      * Move data into fields
      *================================================================
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRMOVE'  @STK,Q
      *
     C           *LIKE     DEFN CRMSGR    #1MSGR
     C           *LIKE     DEFN CRKPRT    #1KPRT
     C           *LIKE     DEFN CRBRCA    #1BRCA
     C           *LIKE     DEFN CRCRCY    #1CRCY
     C           *LIKE     DEFN CRCRDT    #1CRDT
     C           *LIKE     DEFN CRDUPF    #1DUPF
     C           *LIKE     DEFN CRMIR     #1MIR
     C           *LIKE     DEFN CRMOR     #1MOR
     C                     MOVEL*BLANKS   #1MODE  6
     C           *LIKE     DEFN CRMTPY    #1MTPY
     C           *LIKE     DEFN CRMPRY    #1MPRY
     C           *LIKE     DEFN CRNWRK    #1NWRK
     C           *LIKE     DEFN CRSNDR    #1SNDR
     C           *LIKE     DEFN CRTRNO    #1TRNO
     C/COPY WNCPYSRC,ME1250C002
      *
     C                     SELEC
      *
      *  Report on Payment Transactions
      *
     C           D1ACTC    WHEQ 'A'
      *
      *  Report by Currency Transaction reference
      *
     C           D1ACTC    OREQ 'B'
     C                     Z-ADDMPMSGR    #1MSGR           Message ref.
     C                     Z-ADDMPKPRT    #1KPRT           Part ref
     C                     MOVELMPBRCA    #1BRCA           Branch Code
     C                     MOVELMPCRCY    #1CRCY           Currency Code
     C                     MOVELMPSVDC    #1CRDC           Cent of Val Dat124673
     C                     MOVELMPCRDT    #1CRDT           Value date  YYM
     C                     MOVELMPDUPF    #1DUPF           Duplication Fla
     C                     MOVELMPMIR     #1MIR            Message Input r
     C                     MOVELMPMOR     #1MOR            Message Output
     C                     MOVELMPMTPY    #1MTPY           Message type
     C                     MOVELMPMPRY    #1MPRY           Message Priorit
     C                     MOVELMPMODE    #1MODE
     C                     MOVELMPNWRK    #1NWRK           Network
     C                     MOVELMPSNDR    #1SNDR           Sender
     C                     MOVELMPTRNO    #1TRNO           Transaction ref
     C/COPY WNCPYSRC,ME1250C003
      *
      *  Report by Network Sender
      *
     C           D1ACTC    WHEQ 'C'
     C                     Z-ADDCRMSGR    #1MSGR           Message ref.
     C                     Z-ADDCRKPRT    #1KPRT           Part ref
     C                     MOVELCRBRCA    #1BRCA           Branch Code
     C                     MOVELCRCRCY    #1CRCY           Currency Code
     C                     MOVELCRSVDC    #1CRDC  2        Cent of Val Dat124673
     C                     MOVELCRCRDT    #1CRDT           Value date  YYM
     C                     MOVELCRDUPF    #1DUPF           Duplication Fla
     C                     MOVELCRMIR     #1MIR            Message Input r
     C                     MOVELCRMOR     #1MOR            Message Output
     C                     MOVELCRMTPY    #1MTPY           Message type
     C                     MOVELCRMPRY    #1MPRY           Message Priorit
     C                     MOVELCRMODE    #1MODE
     C                     MOVELCRNWRK    #1NWRK           Network
     C                     MOVELCRSNDR    #1SNDR           Sender
     C                     MOVELCRTRNO    #1TRNO           Transaction ref
     C/COPY WNCPYSRC,ME1250C004
      *
      *  Report by FT reference
      *
     C           D1ACTC    WHEQ 'D'
      *
      *  Move data from FT record
      *
     C           FTIREC    IFEQ 'Y'
     C                     Z-ADDINMSGR    #1MSGR           Message ref.
     C                     Z-ADDINKPRT    #1KPRT           Part ref
     C                     MOVELINBRCH    #1BRCA           Branch Code
     C                     MOVELINCRCY    #1CRCY           Currency Code
     C                     MOVELINSVDC    #1CRDC           Cent of Val Dat124673
     C                     MOVELINCRDT    #1CRDT           Value date  YYM
     C                     MOVELINDUPF    #1DUPF           Duplication Fla
     C                     MOVELINMIR     #1MIR            Message Input r
     C                     MOVELINMOR     #1MOR            Message Output
     C                     MOVELINMTPY    #1MTPY           Message type
     C                     MOVELINMPRY    #1MPRY           Message Priorit
     C                     MOVELINMODE    #1MODE
     C                     MOVELINNWRK    #1NWRK           Network
     C                     MOVELINSNDR    #1SNDR           Sender
     C                     MOVELINTRNO    #1TRNO           Transaction ref
     C/COPY WNCPYSRC,ME1250C005
     C                     ELSE
     C                     Z-ADDOPMSGR    #1MSGR           Message ref.
     C                     Z-ADDOPKPRT    #1KPRT           Part ref
     C                     MOVELOPBRCH    #1BRCA           Branch Code
     C                     MOVELOPCRCY    #1CRCY           Currency Code
     C                     MOVELOPSVDC    #1CRDC           Cent of Val Dat124673
     C                     MOVELOPCRDT    #1CRDT           Value date  YYM
     C                     MOVELOPDUPF    #1DUPF           Duplication Fla
     C                     MOVELOPMIR     #1MIR            Message Input r
     C                     MOVELOPMOR     #1MOR            Message Output
     C                     MOVELOPMTPY    #1MTPY           Message type
     C                     MOVELOPMPRY    #1MPRY           Message Priorit
     C                     MOVELOPMODE    #1MODE
     C                     MOVELOPNWRK    #1NWRK           Network
     C                     MOVELOPSNDR    #1SNDR           Sender
     C                     MOVELOPTRNO    #1TRNO           Transaction ref
     C/COPY WNCPYSRC,ME1250C006
     C                     END
     C                     ENDSL
     C/COPY WNCPYSRC,ME1250C009
      *
      *  Unwind subroutine stack name
      *
     C           EXMOVE    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *================================================================
     CSR                   ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRINIT    BEGSR
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      BIS@   80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *  Indicate that set up is complete
      *
     C                     SETON                     50
     C                     Z-ADD2         N
     C                     Z-ADD2         C
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      * Set multi-branch indicator
      *
     C           WUMBIN    IFNE 'Y'                        Multi Branched ?
     C                     MOVEL'1'       *IN70
     C                     END
      *
      * Get modules information
      *
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD4         W0ERNB           * DB ERROR 04 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Find if originating branches used
      *
     C**********           CALL 'AOGELRR0'             9090                                   CGL029
     C                     CALL 'AOGELRR1'             9090                                   CGL029
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST'  P@OPTN  7        I:Option
     C********** SDGELR    PARM           DSFDY            O:Format                           CGL029
     C           SDGELR    PARM           DSSDY                                               CGL029
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOGELRR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD5         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Clear data structure and set report printed
      *
     C                     CLEARI#DTA
      *
      * Fill Command lines and narrative text from messages
      *
     C                     SELEC
      *
      * Payments report for FT
      *
     C           D1ACTC    WHEQ 'A'
      *
      * Open file MEINMPJ1
      *
     C           FIL001    IFEQ *BLANKS
      *
      *  Override file MEINMPJ1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'MEINMPJ1'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD6         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN MEINMPJ1
     C                     MOVEL'Y'       FIL001  1
     C                     END
      *
      * Set up report information
      *
     C                     MOVEL'ME1390P1'I#SPLN
     C                     MOVEL*BLANKS   I#SPLR
     C                     MOVEL*BLANKS   I#REFN
     C                     MOVEL'ME1390P1'I#REFN
     C                     MOVEL'MIN0023' I#TITL
     C                     MOVEL'MIN0024' I#TUL
     C                     MOVEL'HFDL'    I#RFMT
      *
      * Report by Ccy/Trno
      *
     C           D1ACTC    WHEQ 'B'
      *
      * Open file MEINMPJ2
      *
     C           FIL003    IFEQ *BLANKS
      *
      *  Override file MEINMPJ1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'MEINMPJ2'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD7         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN MEINMPJ2
     C                     MOVEL'Y'       FIL003  1
     C                     END
      *
      * Set up report information
      *
     C                     MOVEL'ME1380P1'I#SPLN
     C                     MOVEL*BLANKS   I#SPLR
     C                     MOVEL*BLANKS   I#REFN
     C                     MOVEL'ME1380P1'I#REFN
     C                     MOVEL'MIN0023' I#TITL
     C                     MOVEL'MIN0024' I#TUL
     C                     MOVEL'HD'      I#RFMT
      *
      * Report by Network Sender
      *
     C           D1ACTC    WHEQ 'C'
      *
      * Open file MEINCRJ1
      *
     C           FIL002    IFEQ *BLANKS
      *
      *  Override file MEINCRL1 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'MEINCRJ1'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD8         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN MEINCRJ1
     C                     MOVEL'Y'       FIL002  1
     C                     END
      *
      * Set up report information
      *
     C                     MOVEL'ME1360P1'I#SPLN
     C                     MOVEL*BLANKS   I#SPLR
     C                     MOVEL*BLANKS   I#REFN
     C                     MOVEL'ME1360P1'I#REFN
     C                     MOVEL'MIN0023' I#TITL
     C                     MOVEL'MIN0024' I#TUL
     C                     MOVEL'HD'      I#RFMT
      *
      * Report FT related messages
      *
     C           D1ACTC    WHEQ 'D'
      *
      * Open file MEINFTJ2 and J3
      *
     C           FIL004    IFEQ *BLANKS
      *
      *  Override file MEINFTJ2 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'MEINFTJ2'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD9         W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN MEINFTJ2
      *
      *  Override file MEINFTJ3 to share(*NO)
      *
     C                     MOVEACMD@,1    EDT
     C                     MOVEL'MEINFTJ3'U#FILE 10
     C                     MOVEAU#FILE    EDT,17
     C                     MOVEAEDT       OVRDBF 80
     C                     Z-ADD80        CMDLEN 155
     C                     CALL 'QCMDEXC'                9090
     C                     PARM           OVRDBF
     C                     PARM           CMDLEN
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'*CALL  ' W0FILE
     C                     MOVEL'QCMDEXC' W0KEY
     C                     Z-ADD10        W0ERNB
     C                     MOVEL'MEM5003' W0MSGD
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
     C                     OPEN MEINFTJ3
      *
     C                     MOVEL'Y'       FIL004  1
     C                     END
      *
      * Set up report information
      *
     C                     MOVEL'ME1370P1'I#SPLN
     C                     MOVEL*BLANKS   I#SPLR
     C                     MOVEL*BLANKS   I#REFN
     C                     MOVEL'ME1370P1'I#REFN
     C                     MOVEL'MIN0023' I#TITL
     C                     MOVEL'MIN0024' I#TUL
     C                     MOVEL'HFDL'    I#RFMT
      *
     C                     ENDSL
     C/COPY WNCPYSRC,ME1250C007
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
     C/EJECT
     C/COPY WNCPYSRC,ME1250DCPG
      *
      *  /Copy point for Calculations
      *
     C/EJECT
      *
      *  File and Program Error Processing
      *
     C/COPY MECPYSRC,SRERRC
     C/EJECT
     C/COPY WNCPYSRC,ME1250DOPG
      *
      *  /Copy point for Outputs
      *
**  CPY@ table
(c) Finastra International Limited 2001
** Command Array
OVRDBF     FILE(XXXXXXXXXX) SHARE(*NO) SECURE(*YES)
