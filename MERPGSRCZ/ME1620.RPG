     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME BIC ZIP and clearing prefix config. Maint')
/*OVRF*: OVRDBF MEZIPPLR MEZIPPL0                                   : *
      *****************************************************************
      *                                                               *
      *  Midas - Funds Transfer Module                                *
      *                                                               *
      *  ME1620 - BIC ZIP and Clearing Code Configuration Maintenance *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.03 -----------------------------------------------*
      *                 CFT007  *CREATE    Date 18Oct99               *
      *                                                               *
      * Midas DBA 3.00 -----------------------------------------------*
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CFT007 - BIC Database Plus Integration                       *
      *                                                               *
      ********************************************************************
      *
      ********************************************************************
      *
      * FILE SPECS
      *
      ********************************************************************
      *
     FME1620DFCF  E                    WORKSTN
     F                                        RRN   KSFILE #SBFLRCD
     F                                        RRNB  KSFILE #SBFLRCB
     F                                              KINFDS INFDS#
      * DISPLAY FILE
      *
      *
     FMEZIPPLRIF  E           K        DISK
     F                                              KINFSR *PSSR
     F            @ZIPPPD                           KRENAME@ZIPPPR
      *
      *
      * ZIP PLACEMENT AND CLEARING PREFIX READ
      *
     FMEZIPPL0UF  E           K        DISK                      A
     F                                              KCOMIT
     F                                              KINFSR *PSSR
      * ZIP PLACEMENT AND CLEARING PREFIX UPDATE
      *
      *
     FMEZIPPPAUF  E           K        DISK
     F                                              KCOMIT
     F                                              KINFSR *PSSR
      * ZIP PLACEMENT AND CLEARING PREFIX TRAILER RECORD
      *
      *
     FMEBICCL0IF  E           K        DISK
     F                                              KINFSR *PSSR
      * S.W.I.F.T. COUNTRIES
      *
      *
      ********************************************************************
      *
      * E SPECS
      *
      ********************************************************************
      *
     E                    CPY@    1   1 80               Copyright
      *
     E                    MSF@    1   1 10               MESSAGE FILE
      *
      ********************************************************************
      *
      * I SPECS
      *
      ********************************************************************
      *
     ISDBANK    E DSSDBANKPD
      ** Data structure for Bank ICD record.
      *
     IDSFDY     E DSDSFDY
      * Short Data Structure for Access Objects
      *
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IDBERR     E DSLDA                         256
      *
      ** Local data area for database error details
      ** *LOCK IN LDA immediately before and OUT LDA immediately
      ** after each database error handling.
      **
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
     IZMUSER      DS                             17
     I                                       11  13 DBRN
      * User / Branch data area
      *
     IRUNDT     E DSRUNDAT
     I*                                      13  13 AGMBIN
      * Rundate data area for multibranching indicator
      *
     IPGMDS     ESDSY2PGDSP
      * Program data structure
      *
     IWKDBR1    E DSMEZIPPLR
      * Update by other user comparison DS
      *
     IWKDBR2      DS                             89
      * Update by other user comparison DS
      *
     IMSGTX2      DS
     I                                        1 256 MSGTXA
     I                                      257 512 MSGTXB
      * Long message program parm
      *
     I/COPY ZSRSRC,ZTNLU1Z1
      * Next transaction number
      *
      *****************************************************************
      *                                                               *
      * MAIN   - MAIN PROCESSING                                      *
      *                                                               *
      * Calls: INIT                                                   *
      *        INITSF                                                 *
      *        WRITSF                                                 *
      *        DSPSFL                                                 *
      *        INSERT                                                 *
      *        READSF                                                 *
      *        EXIT                                                   *
      *                                                               *
      *****************************************************************
      *
      * Initialization
     C                     EXSR INIT
      *
      * Main F3/F12 loop
      *
     C           *IN03     DOWNE*ON
     C           *IN12     ANDNE*ON
      *
      * Initialise select screen
      *
     C                     EXSR INITSF
      *
      * Write file records to select screen
      *
     C                     EXSR WRITSF
      *
      * Display select screen for user entry
      *
     C                     EXSR DSPSFL
      *
      * Insert processing
      *
     C                     EXSR INSERT
      *
      * Read subfile for Amend, Delete, Enquire processing
      *
     C                     EXSR READSF
      *
      * End of Main F3/F12 loop
      *
     C                     ENDDO
      *
      * Exit routine
      *
     C                     EXSR EXIT
      *
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * INITSF - Initialise select screen subfile                     *
      *                                                               *
      * Called by: Main                                               *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *                                                               *
      *****************************************************************
     C           INITSF    BEGSR
      *
      * Initialise select screen
      *
     C                     Z-ADD0         RRN
     C                     Z-ADD0         @SFREC
     C                     MOVE *OFF      ENDFIL
      *
      * Clear subfile before refilling by writing control record
      * with SFLCLR active
      *
     C                     MOVE *ON       *IN80
     C                     WRITE#SBFLCTL
     C                     MOVE *OFF      *IN80
      *
      * Read a record
      *
     C           *LOVAL    SETLL@ZIPPPR
     C                     READ @ZIPPPR                  96
     C                     MOVE *IN96     ENDFIL
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * WRITSF - Write records to select screen subfile record        *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *                                                               *
      *****************************************************************
     C           WRITSF    BEGSR
      *
      * Initialise count
      *
     C                     Z-ADD0         COUNT
      *
      * Write each record read to subfile until end of file
      *
     C           ENDFIL    DOWNE*ON
      *
      * Increment counters and write to subfile
      *
     C                     ADD  1         RRN
     C                     ADD  1         COUNT
     C                     ADD  1         @SFREC
      *
     C                     MOVE ZICNTY    DDCNTY
     C                     MOVE ZIZLST    DDZLST
     C                     MOVE ZICPFX    DDCPFX
      *
      * Once any error trapped, blank option fields
      *
     C                     MOVE *BLANK    DDOPTN
     C           COUNT     IFEQ @SFSAV
     C           ERROR     ANDEQ*ON
     C                     MOVE ERROPT    DDOPTN
     C                     ENDIF
      *
     C           COUNT     IFGT @SFSAV
     C                     MOVE *BLANK    DDOPTN
     C                     ENDIF
      *
     C                     WRITE#SBFLRCD
      *
      * Read another record
      *
     C                     READ @ZIPPPR                  96
     C                     MOVE *IN96     ENDFIL
      *
     C                     ENDDO
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * DSPSFL - Display select screen subfile                        *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: SRSMSG                                                 *
      *                                                               *
      *****************************************************************
     C           DSPSFL    BEGSR
      *
      * Set up footer text
     C                     CALL 'MEC1150'
     C                     PARM 'MIN0039' MSGID   7
     C                     PARM 'MEMSG   'MSGF   10
     C                     PARM           MSGDTA132
     C                     PARM *BLANKS   MSGTX1132
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR1
      *
     C                     CALL 'MEC1150'
     C                     PARM 'MEM3020' MSGID
     C                     PARM 'MEMSG   'MSGF
     C                     PARM           MSGDTA
     C                     PARM *BLANKS   MSGTX1
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR2
      *
      * Write the control record, message subfile and footer
      *
     C                     WRITE#FOOTER
      *
      * If count is zero, empty file, write sf record with message
      *
     C           COUNT     IFEQ 0
     C                     MOVE *ON       *IN80
     C                     WRITE#SBFLCTL
     C                     MOVE *OFF      *IN80
     C                     Z-ADD1         RRN
     C                     MOVE *ON       *IN83
     C                     WRITE#SBFLRCD
     C                     MOVE *OFF      *IN83
     C                     MOVEL'MEM3008' ZAMSID
     C                     EXSR SRSMSG
     C                     WRITE#MSGCTL
     C                     WRITE#SBFLCTL
      *
      * Otherwise, write subfile record with data
      *
     C                     ELSE
     C                     WRITE#MSGCTL
     C                     WRITE#SBFLCTL
     C                     ENDIF
      *
      * Read screen for user selection, display from last record
      *
     C                     Z-ADD@SFSAV    @SFREC
     C                     MOVE *ON       *IN81
     C                     EXFMT#SBFLCTL
     C                     MOVE *OFF      *IN81
     C                     Z-ADD1         @SFSAV
      *
      * Reset detail screen error indicators
      *
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANK    ERROPT
     C                     MOVEA'000'     *IN,50
      *
      * Clear program message queue
      *
     C                     CALL 'ZA0250'
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * INSERT - F9, Insert a record processing                       *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: DETAIL                                                 *
      *                                                               *
      *                                                               *
      *****************************************************************
     C           INSERT    BEGSR
      *
      * Insert processing
      *
     C           *IN09     IFEQ *ON
      *
     C                     MOVE 'I'       DDOPTN
      *
     C                     EXSR CHKAUT
     C           ERRUSR    IFNE 0
     C                     GOTO ENDINS
     C                     ENDIF
      *
     C                     MOVE 'I'       SCREEN
     C                     MOVE *BLANKS   DDCNTY
     C                     MOVE *BLANKS   DDZLST
     C                     MOVE *BLANKS   DDCPFX
      *
     C                     EXSR DETAIL
      *
     C                     ENDIF
      *
     C           ENDINS    ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * READSF - Read any user selections                             *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: DETAIL                                                 *
      *        SRSMSG                                                 *
      *                                                               *
      *****************************************************************
     C           READSF    BEGSR
      *
      * If previous or exit not selected
      *
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
      *
      * Read next changed record
      *
     C                     READC#SBFLRCD                 96
      *
      * For every changed record on the subfile
      *
     C           *IN96     DOWEQ*OFF
     C           ERROR     ANDEQ*OFF
      *
      * Store subfile position for rebuild
      *
     C           DDOPTN    IFNE *BLANKS
     C                     Z-ADDRRN       @SFSAV  40
     C                     ENDIF
      *
      * If entry is A, D or E, do detail screen processing
      *
     C           DDOPTN    IFEQ 'A'
     C           DDOPTN    OREQ 'E'
     C           DDOPTN    OREQ 'D'
      *
      * Check user authority
      *
     C                     EXSR CHKAUT
     C           ERRUSR    IFNE 0
     C                     GOTO ENDRSF
     C                     ENDIF
      *
     C                     MOVE DDOPTN    SCREEN
      *
     C                     EXSR DETAIL
      *
      * Otherwise, if option entered must be invalid
      *
     C                     ELSE
      *
     C           DDOPTN    IFNE *BLANKS
     C                     MOVEL'MEM3019' ZAMSID
     C                     EXSR SRSMSG
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN99
     C                     MOVE DDOPTN    ERROPT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Read next changed record
      *
     C                     READC#SBFLRCD                 96
      *
      * End of READC loop
     C                     ENDDO
      *
      * Adjust residplay subfile position by number of deletions
      *
     C                     SUB  WKDELC    @SFSAV
     C           @SFSAV    IFLT 1
     C                     Z-ADD1         @SFSAV
     C                     ENDIF
     C                     Z-ADD0         WKDELC
      *
     C                     ENDIF
      *
      * Store error user entry for redisplay
      *
     C           ERROR     IFEQ *OFF
     C                     MOVE *BLANKS   DDOPTN
     C                     ENDIF
      *
     C           ENDRSF    ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * CHKAUT - Check user authority to action code                  *
      *                                                               *
      * Called by: READSF                                             *
      *                                                               *
      * Calls:                                                        *
      *                                                               *
      *                                                               *
      *****************************************************************
     C           CHKAUT    BEGSR
      *
     C           AGMBIN    IFNE 'Y'
     C                     CALL 'ZVACTU'
     C                     PARM DDOPTN    ZACTN   1
     C                     PARM           ERRUSR  10
     C           ERRUSR    IFEQ 1
      *
      * Error:'No authority to any action codes for this menu item'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3018' ZAMSID
     C                     MOVELDDOPTN    ZAMDTA
     C                     EXSR SRSMSG
      *
     C                     ENDIF
     C                     ELSE
     C                     CALL 'ZVACTBU'
     C                     PARM DDOPTN    ZACTN
     C                     PARM DBRN      ABR     3
     C                     PARM           ERRUSR
     C           ERRUSR    IFEQ 1
      *
      * Error:'No authority to any action codes for this menu item and branch'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3025' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ELSE
     C           ERRUSR    IFEQ 2
      *
      * Error:'No authority to this action code for this menu item and branch'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3024' ZAMSID
     C                     MOVELDDOPTN    ZAMDTA
     C                     EXSR SRSMSG
      *
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * DETAIL - Option Selected Processing                           *
      *                                                               *
      * Called by: INSERT                                             *
      *            READSF                                             *
      *                                                               *
      * Calls: SCINDE                                                 *
      *        QRYCTY                                                 *
      *        VALDSR                                                 *
      *        UPDATE                                                 *
      *                                                               *
      *****************************************************************
     C           DETAIL    BEGSR
      *
      * Initialise screen conditions
      *
     C                     EXSR SCINDE
      *
      * Display screen while no user F3/F12 or redisplay required
      *
     C                     MOVE *ON       WKRDSP
      *
     C           *IN03     DOWEQ*OFF
     C           *IN12     ANDEQ*OFF
     C           WKRDSP    ANDEQ*ON
      *
      * Set up footer text
      *
     C                     MOVE *BLANKS   FOOTR1
     C           SCREEN    IFEQ 'D'
     C                     CALL 'MEC1150'
     C                     PARM 'MEM3022' MSGID
     C                     PARM 'MEMSG   'MSGF
     C                     PARM           MSGDTA
     C                     PARM *BLANKS   MSGTX1
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR2
     C                     ELSE
     C                     CALL 'MEC1150'
     C                     PARM 'MEM3021' MSGID
     C                     PARM 'MEMSG   'MSGF
     C                     PARM           MSGDTA
     C                     PARM *BLANKS   MSGTX1
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR2
     C                     ENDIF
      *
     C                     WRITE#FOOTER
     C                     WRITE#MSGCTL
     C                     WRITE#DETAIL
     C                     EXFMT#DETAIL
      *
      * Reset screen error indicators
      *
     C                     MOVE *OFF      ERROR
     C                     MOVEA'000'     *IN,50
      *
      * Clear program message queue
      *
     C                     CALL 'ZA0250'
      *
      * '?' Query entered on Insert screen
      *
     C                     MOVE *BLANKS   WKQRYF
      *
     C           SCREEN    IFEQ 'I'
      *
     C                     MOVELDDCNTY    WKQRYF
     C           WKQRYF    IFEQ '?'
     C                     EXSR QRYCTY
     C                     MOVE WKCNTY    DDCNTY
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Bypass validation and updates if '?' just entered
      *
     C           SCREEN    IFEQ 'I'
     C           WKQRYF    ANDNE'?'
     C                     EXSR VALDSR
     C                     ENDIF
      *
     C           SCREEN    IFEQ 'A'
     C           SCREEN    OREQ 'D'
     C                     EXSR VALDSR
     C                     ENDIF
      *
      * Updates
      *
     C           ERROR     IFEQ *OFF
     C           WKQRYF    ANDNE'?'
     C           SCREEN    IFEQ 'I'
     C           SCREEN    OREQ 'A'
     C           SCREEN    OREQ 'D'
     C                     EXSR UPDATE
     C                     ENDIF
     C                     ENDIF
      *
      * For Enquire, return direct to select screen
      *
     C           SCREEN    IFEQ 'E'
     C                     MOVE *OFF      WKRDSP
     C                     ENDIF
      *
      * Limit of F3/F12/redisplay loop
      *
     C                     ENDDO
      *
      * Clear program message queue
      *
     C                     CALL 'ZA0250'
      *
      * If F12 entered, stay within calling loop
      *
     C           *IN12     IFEQ *ON
     C                     MOVE *OFF      *IN12
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * SCINDE - Set Up Screen Conditions, Detail Screen              *
      *                                                               *
      * Called by: DETAIL                                             *
      *                                                               *
      * Calls: *PSSR                                                  *
      *                                                               *
      *                                                               *
      *****************************************************************
     C           SCINDE    BEGSR
      *
      * Initialise screen condition indicators
      *
     C                     MOVEA'000'     *IN,70
     C                     MOVE *OFF      ERROR
      *
      * Store image of selected record
      *
     C           SCREEN    IFEQ 'A'
     C           SCREEN    OREQ 'D'
     C           DDCNTY    CHAINMEZIPPLR             95
     C           *IN95     IFEQ *ON                        ***************
     C                     MOVEL'MEZIPPL0'DBFILE           *             *
     C                     MOVEL'001'     DBASE            * DBERROR 001 *
     C                     MOVELDDCNTY    DBKEY            *             *
     C                     EXSR *PSSR                      ***************
     C                     ENDIF
     C                     MOVE WKDBR1    WKDBR2
     C                     ENDIF
      *
      * Conditioning of input capable fields
      *
      * Enquire, Delete: All fields are protected
      *
     C           SCREEN    IFEQ 'E'
     C           SCREEN    OREQ 'D'
     C                     MOVE *ON       *IN70
     C                     ENDIF
      *
      * Amend: Country field is protected
      *
     C           SCREEN    IFEQ 'A'
     C                     MOVE *ON       *IN71
     C                     ENDIF
      *
      * Delete: Function key (F10) enabled
      *
     C           SCREEN    IFEQ 'D'
     C                     MOVE *ON       *IN72
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * EXIT - Exit routine                                           *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: *PSSR                                                  *
      *        ZTNLU1                                                 *
      *                                                               *
      *****************************************************************
     C           EXIT      BEGSR
      *
      * Update ZIP placement file trailer record
      *
      ** Get counter record from ZIP placement trailer file
      *
     C                     READ MEZIPPPA                 95
     C           *IN95     IFEQ *ON                        ***************
     C                     MOVEL'MEZIPPPA'DBFILE           *             *
     C                     MOVEL'002'     DBASE            * DBERROR 002 *
     C                     EXSR *PSSR                      *             *
     C                     ENDIF                           ***************
      *
      * Update trailer record
      *
     C                     ADD  WKNORE    ZINORE
     C                     UPDAT@ZIPPPA
     C                     COMIT
      *
      * Return
      *
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * VALDSR - Validation                                           *
      *                                                               *
      * Called by: DETAIL                                             *
      *                                                               *
      * Calls: SRSMSG                                                 *
      *                                                               *
      *****************************************************************
     C           VALDSR    BEGSR
      *
      * Reset error indicators
      *
     C                     MOVE *OFF      ERROR
     C                     MOVEA'000'     *IN,50
      *
      * Insert validation
      *
     C           SCREEN    IFEQ 'I'
      *
     C           DDCNTY    IFEQ *BLANKS
      *
      * Error:'Country may not be blank'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3002' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ELSE
      *
     C           DDCNTY    CHAINMEBICCL0             95
      *
     C           *IN95     IFEQ *ON
      *
      * Error:'Country must reference entry on S.W.I.F.T country table'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3003' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C           DDCNTY    CHAINMEZIPPLR             97
      *
     C           *IN97     IFEQ '0'
      *
      * Error: 'Country must not already exist on file'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN50
     C                     MOVEL'MEM3006' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert and Amend validation
      *
     C           SCREEN    IFEQ 'I'
     C           SCREEN    OREQ 'A'
      *
     C           DDZLST    IFNE 'Y'
     C           DDZLST    ANDNE*BLANKS
      *
      * Error: 'ZIP placement must be Y or blank'
     C                     MOVE *ON       ERROR
     C                     MOVEL'MEM3004' ZAMSID
     C                     MOVE *ON       *IN51
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
      *
     C           DDZLST    IFEQ *BLANKS
     C           DDCPFX    ANDEQ*BLANKS
      *
      * Error: 'Enter ZIP placement Y and/or clearing prefix'
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN51
     C                     MOVE *ON       *IN52
     C                     MOVEL'MEM3005' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Delete validation
      *
     C           SCREEN    IFEQ 'D'
      *
     C           *IN10     IFEQ *OFF
      *
      * Error: 'Enter F10 to confirm delete'
      *
     C                     MOVE *ON       ERROR
     C                     MOVEL'MEM3007' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * UPDATE - Update File                                          *
      *                                                               *
      * Called by: DETAIL                                             *
      *                                                               *
      * Calls: SRSMSG                                                 *
      *        ZTNLU1                                                 *
      *        *PSSR                                                  *
      *                                                               *
      *****************************************************************
     C           UPDATE    BEGSR
      *
      * Check for update by other user
      *
     C           SCREEN    IFEQ 'A'
     C           SCREEN    OREQ 'D'
     C           DDCNTY    CHAINMEZIPPLR             95
     C           WKDBR1    IFNE WKDBR2
     C           *IN95     OREQ *ON
      *
      * Error: 'Function unavailable, record changed by other user'
      *
     C                     MOVE *ON       ERROR
     C                     MOVEL'MEM3009' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Check for record insert by other user
      *
     C           SCREEN    IFEQ 'I'
     C           DDCNTY    CHAINMEZIPPLR             95
     C           *IN95     IFEQ *OFF
      *
      * Error: 'Function unavailable, already added by other user'
      *
     C                     MOVE *ON       ERROR
     C                     MOVEL'MEM3010' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C           ERROR     IFEQ *OFF
      *
      * Insert
      *
     C           SCREEN    IFEQ 'I'
     C                     MOVE DDCNTY    ZICNTY
     C                     MOVE DDZLST    ZIZLST
     C                     MOVE DDCPFX    ZICPFX
     C                     MOVE ##USR     ZIUSER
     C                     MOVE 'I'       ZICHTP
     C                     EXSR ZTNLU1
     C                     MOVE FNATN     ZITNLU
     C                     WRITE@ZIPPPD
     C                     ADD  1         WKNORE
     C                     COMIT
     C                     ENDIF
      *
      * Amend
      *
     C           SCREEN    IFEQ 'A'
     C           DDCNTY    CHAINMEZIPPL0             95
     C           *IN95     IFEQ *ON                        ***************
     C                     MOVEL'MEZIPPL0'DBFILE           *             *
     C                     MOVEL'003'     DBASE            * DBERROR 003 *
     C                     MOVELDDCNTY    DBKEY            *             *
     C                     EXSR *PSSR                      ***************
     C                     ENDIF
     C                     MOVE DDZLST    ZIZLST
     C                     MOVE DDCPFX    ZICPFX
     C                     MOVE ##USR     ZIUSER
     C                     MOVE 'A'       ZICHTP
     C                     EXSR ZTNLU1
     C                     MOVE FNATN     ZITNLU
     C                     UPDAT@ZIPPPD
     C                     COMIT
     C                     ENDIF
      *
      * Delete
      *
     C           SCREEN    IFEQ 'D'
     C           DDCNTY    CHAINMEZIPPL0             95
     C           *IN95     IFEQ *ON                        ***************
     C                     MOVEL'MEZIPPL0'DBFILE           *             *
     C                     MOVEL'004'     DBASE            * DBERROR 004 *
     C                     MOVELDDCNTY    DBKEY            *             *
     C                     EXSR *PSSR                      ***************
     C                     ENDIF
     C                     EXSR ZTNLU1
     C                     DELETMEZIPPL0
     C                     SUB  1         WKNORE
     C                     COMIT
      *
      * Store deletion count to adjust subfile redisplay position
     C                     ADD  1         WKDELC  30
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      * For Amend/Delete if updates OK, return to initial screen
      *
     C           SCREEN    IFEQ 'A'
     C           SCREEN    OREQ 'D'
     C           ERROR     IFEQ *OFF
     C                     MOVE *OFF      WKRDSP
     C                     ENDIF
     C                     ENDIF
      *
      * For Insert, if updates OK, clear screen fields for new data
      *
     C           SCREEN    IFEQ 'I'
     C           ERROR     IFEQ *OFF
     C           WKQRYF    ANDNE'?'
     C                     MOVE *BLANK    DDCNTY
     C                     MOVE *BLANK    DDZLST
     C                     MOVE *BLANK    DDCPFX
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * QRYCTY - Query on Country Input Field                         *
      *                                                               *
      * Called by: DETAIL                                             *
      *                                                               *
      * Calls: SRSMSG                                                 *
      *                                                               *
      *****************************************************************
     C           QRYCTY    BEGSR
      *
     C                     MOVE *BLANKS   WKCNTY
     C                     Z-ADD1         @SFSAB
      *
      * Do while no F3 or F12 or country not yet selected
      *
     C           *IN03     DOWNE*ON
     C           *IN12     ANDNE*ON
     C           WKCNTY    ANDEQ*BLANKS
      *
      * Initialise subfile relative record number
      *
     C                     Z-ADD0         RRNB
     C                     Z-ADD0         @SFREB
      *
      * Clear subfile before refilling by writing control record
      * with SFLCLR active
      *
     C                     MOVE *ON       *IN80
     C                     WRITE#SBFLCTB
     C                     MOVE *OFF      *IN80
      *
      * Read a record
      *
     C           *LOVAL    SETLL@BICCPD
     C                     READ @BICCPD                  96
     C                     MOVE *IN96     ENDFIL
      *
      * Read records from the file into the subfile until end of file
      *
     C                     Z-ADD0         COUNTB
      *
      * Write each record read to subfile
      *
     C           ENDFIL    DOWNE*ON
      *
      * Increment record number and count write to subfile
      *
     C                     ADD  1         RRNB
     C                     ADD  1         COUNTB
     C                     ADD  1         @SFREB
      *
     C                     MOVE BCCNTY    DDCNTY
      *
      * Blank out option fields (unless redisplaying error option)
      *
     C                     MOVE *BLANK    DDSELC
     C           COUNTB    IFEQ @SFSAB
     C           ERROR     ANDEQ*ON
     C                     MOVE ERRSEL    DDSELC
     C                     ENDIF
      *
     C           COUNTB    IFGT @SFSAB
     C                     MOVE *BLANK    DDSELC
     C                     ENDIF
      *
     C                     WRITE#SBFLRCB
      *
      * Read another record
      *
     C                     READ @BICCPD                  96
     C                     MOVE *IN96     ENDFIL
      *
     C                     ENDDO
      *
      * Set up footer text
     C                     CALL 'MEC1150'
     C                     PARM 'MEM3023' MSGID
     C                     PARM 'MEMSG   'MSGF
     C                     PARM           MSGDTA
     C                     PARM *BLANKS   MSGTX1
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR1
     C                     CALL 'MEC1150'
     C                     PARM 'MEM3021' MSGID
     C                     PARM 'MEMSG   'MSGF
     C                     PARM           MSGDTA
     C                     PARM *BLANKS   MSGTX1
     C                     PARM *BLANKS   MSGTX2
     C                     MOVELMSGTX1    FOOTR2
      *
      * Write the control record, message subfile and footer
      *
     C                     WRITE#FOOTER
      *
      *
      * If count is zero, empty file, write sf record with message
      *
     C           COUNTB    IFEQ 0
     C                     MOVE *ON       *IN80
     C                     WRITE#SBFLCTB
     C                     MOVE *OFF      *IN80
     C                     Z-ADD1         RRNB
     C                     MOVE *ON       *IN83
     C                     WRITE#SBFLRCB
     C                     MOVE *OFF      *IN83
     C                     MOVEL'MEM3011' ZAMSID
     C                     EXSR SRSMSG
     C                     WRITE#MSGCTL
     C                     WRITE#SBFLCTB
      *
      * Otherwise, write subfile record with data
      *
     C                     ELSE
     C                     WRITE#MSGCTL
     C                     WRITE#SBFLCTB
     C                     ENDIF
      *
      * Read control record for user selection
      *
     C                     Z-ADD@SFSAB    @SFREB
     C                     MOVE *ON       *IN81
     C                     EXFMT#SBFLCTB
     C                     MOVE *OFF      *IN81
     C                     MOVE *OFF      *IN99
     C                     Z-ADD1         @SFSAB
      *
      * Reset detail screen error indicators
      *
     C                     MOVE *OFF      ERROR
     C                     MOVEA'000'     *IN,50
      *
      * Clear program message queue
      *
     C                     CALL 'ZA0250'
      *
      * Process user response to screen
      *
      * If previous or exit not selected
      *
     C           *IN03     IFEQ *OFF
     C           *IN12     ANDEQ*OFF
      *
      * Get user selection
      *
     C           DDSELC    DOWEQ*BLANKS
     C           *IN99     ANDEQ*OFF
      *
      * Read first changed record
      *
     C                     READC#SBFLRCB                 99
      *
      * Store key to position subfile on rebuild or refresh
      *
     C           DDSELC    IFNE *BLANKS
     C                     Z-ADDRRNB      @SFSAB  40
     C                     ENDIF
      *
      * If entry is 1, return selected value to detail screen
      *
     C           DDSELC    IFEQ '1'
     C                     MOVE DDCNTY    WKCNTY
      *
      * Otherwise, option entered invalid - send message to screen
      *
     C                     ELSE
     C           DDSELC    IFNE *BLANKS
     C                     MOVEL'MEM3001' ZAMSID
     C                     EXSR SRSMSG
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN99
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDIF
      *
      * Store error user entry for redisplay
      *
     C           ERROR     IFEQ *ON
     C                     MOVE DDSELC    ERRSEL
     C                     ENDIF
     C                     MOVE *BLANKS   DDSELC
      *
      * End of F3/F12/Country entered loop
      *
     C                     ENDDO
      *
      * Clear program message queue
      *
     C                     CALL 'ZA0250'
      *
      * In case of F3/F12, don't fall through calling screen loop
      *
     C                     MOVE *OFF      *IN03
     C                     MOVE *OFF      *IN12
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSMSG - Routine to send messages to message subfile.        *
      *                                                               *
      *****************************************************************
      *
     C           SRSMSG    BEGSR
      *
      ** Send specified message from specified message file to program
      ** message queue; then clear message id and message file
      *
     C                     CALL 'ZA0350'
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSID 10
     C                     PARM           ZAMDTA 45
      *
     C                     CLEARZAMSID
     C                     CLEARZAMDTA
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * INIT   - Program initialisation routine                       *
      *                                                               *
      * Called by: MAIN                                               *
      *                                                               *
      * Calls: *PSSR                                                  *
      *                                                               *
      *****************************************************************
     C           INIT      BEGSR
      *
      ** Initialize subfile control fields
      *
     C                     Z-ADD0         RRN     40
     C                     Z-ADD0         RRNB    40
     C                     Z-ADD0         @SFREC
     C                     Z-ADD0         @SFREB
     C                     Z-ADD1         @SFSAV
     C                     Z-ADD1         @SFSAB
     C                     Z-ADD0         COUNT   30
     C                     Z-ADD0         COUNTB  30
     C                     MOVE *OFF      ENDFIL  1
      *
      ** Initialize footers
      *
     C                     MOVE *BLANKS   FOOTR1 50
     C                     MOVE *BLANKS   FOOTR2 50
      *
      ** Initialize screen mode indicator
      *
     C                     MOVE *BLANKS   SCREEN  1
      *
      ** Initialize error indicators
      *
     C                     MOVE *OFF      ERROR   1
     C                     MOVE *OFF      ERROPT  1
     C                     MOVE *OFF      ERRSEL  1
      *
      ** Initialize detail screen redisplay indicator
      *
     C                     MOVE *OFF      WKRDSP  1
      *
      ** Initialize query selected indicator
      *
     C                     MOVE *OFF      WKQRYF  1
      *
      ** Initialize country work field
      *
     C           *LIKE     DEFN ZICNTY    WKCNTY
     C                     MOVE *BLANK    WKCNTY
      *
      * Initialise LDA field.
      *
     C                     MOVEL'ME1620'  DBPGM
      *
      * Get branch
      *
     C           *NAMVAR   DEFN           ZMUSER
     C                     IN   ZMUSER
      *
      * Get multibranch indicator
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDT
     C                     IN   RUNDT
      *
      * Initialise number of records work field
      *
     C           *LIKE     DEFN ZINORE    WKNORE
     C                     Z-ADD0         WKNORE
      *
      * Set up copyright parameter
      *
     C                     MOVEACPY@      BIS@   80
      *
      * Access Bank ICD for the date format.
      *
     C                     CALL 'AOBANKR0'
     C                     PARM           RTNCDE  7
     C                     PARM '*FIRST'  OPTN    7
     C           SDBANK    PARM SDBANK    DSFDY
      *
      * Database error in file SDBANKPD.
      *
     C           RTNCDE    IFNE *BLANK                     ***************
     C                     MOVEL'SDBANKPD'DBFILE           *             *
     C                     MOVEL'005'     DBASE            * DBERROR 005 *
     C                     MOVE *BLANKS   DBKEY            *             *
     C                     MOVEL'BANK'    DBKEY            *             *
     C                     EXSR *PSSR                      ***************
     C                     ENDIF
      *
      * Convert rundate to DDMMMYY format for header output.
      *
     C                     CALL 'ZDATE2'               89  Check File Date
     C                     PARM           BJRDNB  50       Work Midas Date
     C                     PARM           BJDFIN           Date format fla
     C                     PARM *ZERO     WUWCDT  60       Work Converted
     C                     PARM *BLANK    DDMRDT  7        Work Alpha Date
      *
     C                     MOVE MSF@,1    ZAMSGF
      *
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: INIT                                               *
      *            UPDATE                                             *
      *            EXIT                                               *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
     C           *PSSR     BEGSR
      *
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
      *
     C           *NAMVAR   DEFN           LDA   256
     C           *LOCK     IN   LDA
     C                     MOVELDBERR     LDA
     C                     OUT  LDA
      *
     C                     DUMP
     C                     SETON                     U7U8LR
      *
     C                     CALL 'DBERRCTL'
      *
     C                     ROLBK
      *
     C                     END
      *
      * If *PSSR already run, then just end the program here.
      *
     C                     SETON                     U7U8LR
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
     C/EJECT
      *****************************************************************
      * Transaction number subroutine
      *****************************************************************
     C/COPY ZSRSRC,ZTNLU1Z2
      *****************************************************************
     C/EJECT
      *****************************************************************
**  CPY@
(c) Finastra International Limited 2001
**  MSF@
MEMSG
