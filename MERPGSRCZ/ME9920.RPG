     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME Codeword combination check')                  *
      *****************************************************************
      *                                                               *
      *  Midas - Message Management Module                            *
      *                                                               *
      *  ME9920 - Codeword Check                                      *
      *                                                               *
      *  Function:  This program checks whether the combination of    *
      *             Midas module and message type is valid for        *
      *             selection in Codewords Maintetance.               *
      *                                                               *
      *  Called By: SD2501R - SWIFT codewords maintenance             *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD056888           Date 20Sep20               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 CMG003             Date 04Oct12               *
      *                 CSW212             Date 03May12               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CSC022             Date 24Feb04               *
      *                 CSW203             Date 26May03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CSW096 *CREATE     Date 04Jun96               *
      *                                    Date ddmmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD056888 - Deliverable Data Split for SDCODEPD               *
      *  MD046248 - Finastra Rebranding                               *
      *  CMG003 - SWIFT MT600 Message Generation                      *
      *  CSW212 - SWIFT 2012 Changes                                  *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  CSW203 - SWIFT 2003 Standards Update                         *
      *  CSW096 - SWIFT Changes November 1996                         *
      *                                                               *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *   Indicator Usage                                             *
      *   ---------------                                             *
      *                                                               *
      *   90        General use indicator                             *
      *                                                               *
      *****************************************************************
      *                                                               *
      *   Notes                                                       *
      *   -----                                                       *
      *                                                               *
      *   1. If the combination is valid this program acknowledges    *
      *      the fact by sending a message to itself which may be     *
      *      seen in the joblog.                                      *
      *                                                               *
      *   2. If the combination is invalid this program will send an  *
      *      error message to the calling program's message queue,    *
      *      and set up the error status in a return code.            *
      *                                                               *
      *****************************************************************
      /EJECT
      ** Standard F-spec /COPY
     F/COPY WNCPYSRC,ME9920DFPG
      /EJECT
      ** Standard copyright statement
     E                    CPY@    1   1 80
      ** Valid combinations
     E/COPY WNCPYSRC,ME9920E001
     E**********          A@VALD  1  13  5                                                    CSW203
     E**********          A@VALD  1  19  5                                             CSW203 CSW212
     E**********          A@VALD  1  20  5                                             CSW212 CMG003
     E                    A@VALD  1  21  5                                                    CMG003
     E/COPY WNCPYSRC,ME9920E002
      ** Standard error processing E-spec /COPY
     E/COPY MECPYSRC,SRERRE
      ** Standard E-Spec /COPY
     E/COPY WNCPYSRC,ME9920DEPG
      /EJECT
      * Data structures:
     IJBDTTM      DS
      * Job date/time
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
      ** Standard I-spec /COPY
     I/COPY WNCPYSRC,ME9920DIPG
      ** Standard error processing I-spec /COPY
     I/COPY MECPYSRC,SRERRI
      *
     IRUNDTA    E DSRUNDAT
      *
      * Get Rundate - Rundate  *
      *
     IMMODDS    E DSSDMMODPD
      *
      * Modules Data Structure *
      *
     IDSFDY     E DSDSFDY
      *
      * Data Structures used by Access Programs
      *
     IDSSDY     E DSDSSDY
      *
      * Data Structures used by Access Programs
      *
      *
     I*CODEDS*** E DSSDCODEPD                                                               MD056888
     ICODEDS    E DSSDCODCTD                                                                MD056888
      ** Record structure for SWIFT Code words
      *
     ISCSARD    E DSSCSARDPD                                                                  CMG003
      ** External DS for SAR Details                                                          CMG003
      *                                                                                       CMG003
     I              'ABCDEFGHIJKLMNOPQRST-C         W@ALPH
     I              'UVWXYZ'
      ** Set of upper-case alphabetic characters
      *
      *
      *  Define look up of SWIFT Codeword file
      *
     ILKCODE      DS                         20  10
      *
     IL#CODE      DS                             10
     I                                        1   1 L#SWCD
     I                                        2   2 L#MTYP
     I                                        3   3 L#MMOD
     I                                        4   4 L#DSCN
      ** Combination of module and message type
      *
     ID@COMB      DS
     I                                        1   2 D@MMID
     I                                        3   5 D@SMTP
      /EJECT
      *
      *****************************************************************
      *                                                               *
      *  List of Subroutines                                          *
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *  SRCHKF   : Validate Combination                              *
      *                                                               *
      *****************************************************************
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      * Entry parameters
      *
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           W0CPGM 10        I Calling Program
     C***********          PARM           CODEDS115        RCD: I Codewords                 MD056888
     C                     PARM           CODEDX115        RCD: I Codewords                 MD056888
      *                                                                                     MD056888
     C                     MOVELCODEDX    CODEDS                                            MD056888
      *
      *  Set up primary reference
      *
     C                     MOVELCODEDS    W0PREF    P
     C                     MOVEL*BLANKS   P0RTN
      *
      * Initialise program
      *
     C           $FIRST    IFEQ *BLANKS
     C                     EXSR SRINIT
     C                     END
      * Main processing 1
     C/COPY WNCPYSRC,ME9920DMP1
      *
      ** Validate combination for blanks non-blanks
      *
     C                     EXSR SRCHKF
      * Main processing 2
     C/COPY WNCPYSRC,ME9920DMP2
      *
      ** Valid, so send message to ourselves indicating all OK.
     C           P0RTN     IFEQ *BLANKS
     C                     MOVEL'MEM9910' MEMSID
     C                     EXSR MESNMS
     C                     ENDIF
      *
      * Main processing 3
     C/COPY WNCPYSRC,ME9920DMP3
      *
      *
      *  Unwind subroutine stack name
      *
     C           EXMAIN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     RETRN
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRCHKF   : Validate Combination                              *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRCHKF    BEGSR
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'SRCHKF'  @STK,Q
      *
      * Copy point for Valid Combinations
     C/COPY WNCPYSRC,ME9920CHKF
      *
      *  Check that fields represent valid combination
      *
     C                     MOVEL'MEM9912' P0RTN
     C                     CLEARL#CODE
      *
      * Codeword
     C                     SELEC
     C           FYSWCD    WHEQ '*ALL'
     C                     MOVEL'*'       L#SWCD
     C           FYSWCD    WHNE *BLANKS
     C                     MOVEL'Y'       L#SWCD    P
     C                     OTHER
     C                     MOVEL'N'       L#SWCD
     C                     ENDSL
      * Message type
     C                     SELEC
     C           FYSMTP    WHNE *BLANKS
     C                     MOVEL'Y'       L#MTYP
     C                     OTHER
     C                     MOVEL'N'       L#MTYP
     C                     ENDSL
      * Module
     C                     SELEC
     C           FYMMID    WHNE *BLANKS
     C                     MOVEL'Y'       L#MMOD
     C                     OTHER
     C                     MOVEL'N'       L#MMOD
     C                     ENDSL
      * Destination Customer
     C                     SELEC
     C           FYDCUS    WHNE *BLANKS
     C                     MOVEL'Y'       L#DSCN
     C                     OTHER
     C                     MOVEL'N'       L#DSCN
     C                     ENDSL
      *
      *  Loop around occurrance data structure for look ups
      *
     C                     DO   L#NBR     #K      50
      *
      *  Set up key
      *
     C           #K        OCUR LKCODE
      *
      *  /COPY Statement
      *
     C/COPY WNCPYSRC,ME9920EXC1
      *
     C           LKCODE    IFEQ L#CODE
     C                     MOVEL*BLANKS   P0RTN
     C                     LEAVE
     C                     ENDIF
      *
     C                     ENDDO
      *
      *  Unwind subroutine stack name
      *
     C           P0RTN     IFNE *BLANKS
     C                     MOVELP0RTN     MEMSID
     C                     MOVELW0CPGM    MEPGMQ
     C                     EXSR MESNMS
     C                     ENDIF
      *
      ** Validate combination, and issue error message if invalid.
     C                     MOVELFYMMID    D@MMID
     C                     MOVELFYSMTP    D@SMTP
     C           D@COMB    LOKUPA@VALD                   90
     C           *IN90     IFEQ *OFF
     C           CSW203    OREQ 'Y'                                                           CSW203
     C           FYSMTP    ANDEQ'100'                                                         CSW203
     C           CSW212    OREQ 'N'                                                           CSW212
     C           FYSMTP    ANDEQ'300'                                                         CSW212
     C           CMG003    OREQ 'N'                                                           CMG003
     C           FYSMTP    ANDEQ'600'                                                         CMG003
     C                     MOVEL'MEM9911' P0RTN
     C                     MOVEL'MEM9911' MEMSID
     C                     MOVELW0CPGM    MEPGMQ
     C                     EXSR MESNMS
     C                     ENDIF
      *
      *  Unwind subroutine stack name
      *
     C           EXCHKF    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
      ********************************************************************
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRINIT    BEGSR
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      CPY2@  80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *  Indicate that set up is complete
      *
     C                     MOVEL'Y'       $FIRST  1
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      * Get modules information
      *
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD5         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      * Check if SWIFT 96 active
      *
     C                     CALL 'SWIFT96'              9090
     C                     PARM *BLANKS   CSW096  7        B:Return code
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C                     MOVEL'SWIFT96' W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD6         W0ERNB           * DB ERROR 05 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *                                                                                       CSW203
      ** Check if SWIFT Changes 2003 (CSW203) is installed                                    CSW203
      *                                                                                       CSW203
     C                     CALL 'SWIF2003'                                                    CSW203
     C                     PARM *BLANKS   PRTCD   7                                           CSW203
      *                                                                                       CSW203
     C           PRTCD     IFEQ 'CSW2003'                                                     CSW203
     C                     MOVE 'Y'       CSW203  1                                           CSW203
     C                     ELSE                                                               CSW203
     C                     MOVE 'N'       CSW203                                              CSW203
     C                     ENDIF                                                              CSW203
      *
      ** Check if the switchable feature CSW212 is on                                         CSW212
      *                                                                                       CSW212
     C                     CALL 'SWIF2012'                                                    CSW212
     C                     PARM *BLANKS   PRTCD                                               CSW212
      *                                                                                       CSW212
     C           PRTCD     IFEQ 'CSW2012'                                                     CSW212
     C                     MOVE 'Y'       CSW212  1                                           CSW212
     C                     ELSE                                                               CSW212
     C                     MOVE 'N'       CSW212                                              CSW212
     C                     ENDIF                                                              CSW212
      *                                                                                       CSW212
      ** Check if the switchable feature CMG003 is on                                         CMG003
      *                                                                                       CMG003
     C                     MOVEL'N'       CMG003  1                                           CMG003
     C                     CALL 'AOSARDR0'                                                    CMG003
     C                     PARM           P@RTCD                                              CMG003
     C                     PARM '*VERIFY' P@OPTN                                              CMG003
     C                     PARM 'CMG003'  P@SARN  6                                           CMG003
     C           SCSARD    PARM SCSARD    DSFDY                                               CMG003
      *                                                                                       CMG003
     C           P@RTCD    IFEQ *BLANKS                                                       CMG003
     C                     MOVEL'Y'       CMG003                                              CMG003
     C                     ENDIF                                                              CMG003
      *                                                                                       CMG003
     C                     Z-ADD1         L#NBR   50
      * Load Occurrance data structure
     C/COPY MECPYSRC,ME9950LOAD
      *
      * Copy point for Initialisation
     C/COPY WNCPYSRC,ME9920INIT
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
      *****************************************************************
      /EJECT
      * Standard send-program-message routine /COPY
     C/COPY MECPYSRC,SMESNMSC
      * Standard error processing I-spec /COPY
     C/COPY MECPYSRC,SRERRC
      * Standard C-spec /COPY
     C/COPY WNCPYSRC,ME9920DOPG
**  CPY@
(c) Finastra International Limited 2001
**  A@VALD - valid combinations of message module and message type

DL
FT
LE
DL100
DL200
DL202
FT100
FT200
FT202
FT400
LE100
LE202
DL103                                                                                         CSW203
FT103                                                                                         CSW203
LE103                                                                                         CSW203
FT                                                                                            CSW203
FI100                                                                                         CSW203
FI103                                                                                         CSW203
DL300                                                                                         CSW212
DL600                                                                                         CMG003
     X/COPY WNCPYSRC,ME9920X001
