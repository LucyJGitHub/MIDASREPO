     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas ME Check object exists')
      *****************************************************************
      *                                                               *
      *  Midas - Message Management Module                            *
      *                                                               *
      *  ME9930 - Check Object Exists                                 *
      *                                                               *
      *  Function:  This program handles the call to MEC9930.         *
      *             MEC9930 checks if the relevant object exists.     *
      *                                                               *
      *  Called By: SD0380M - Currency Clearing Systems Maintenance   *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CSC022             Date 24Feb04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CSW096             Date 04JUN96               *
      *                                    Date ddmmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSC022 - Commitment Control Changes for MidasPlus            *
      *           (Recompile)                                         *
      *  CSW096 - SWIFT Changes November 1996                         *
      *                                                               *
      *****************************************************************
      /EJECT
      * Initialise Program F-Spec
     F/COPY WNCPYSRC,ME9930DFPG
      /EJECT
     E                    CPY@    1   1 80
      *
      *  Array containing Copyright statement
      ***************** FIRST COMPILE TIME ARRAY *********************
      *
     E/COPY MECPYSRC,SRERRE
      * Initialise Program E-Spec
     E/COPY WNCPYSRC,ME9930DEPG
      /EJECT
      * Initialise Program I-Spec
     I/COPY WNCPYSRC,ME9930DIPG
      * Data structures:
     IJBDTTM      DS
      * Job date/time
     I                                        1   60##JDT
     I                                        1   20##JYY
     I                                        3   40##JMM
     I                                        5   60##JDD
     I                                        7  120##JTM
     I                                        7   80##JHH
     I                                        9  100##JNN
     I                                       11  120##JSS
      *
      *  Copysource for error processing
      *
     I/COPY MECPYSRC,SRERRI
      *
     IRUNDTA    E DSRUNDAT
      *
      * Get Rundate - Rundate  *
      *
     IMMODDS    E DSSDMMODPD
      *
      * Modules Data Structure *
      *
     IDSFDY     E DSDSFDY
      *
      * Data Structures used by Access Programs
      *
     IDSSDY     E DSDSSDY
      *
      * Data Structures used by Access Programs
      *
      *
      /EJECT
      *
      *****************************************************************
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q
     C                     MOVEL'MAIN'    @STK,Q
      * Entry parameters
      *
     C           *ENTRY    PLIST
     C                     PARM P#RTCD    P0RTN   7
     C                     PARM           W0CPGM 10        I Calling Program
     C                     PARM           W0OBJ  10        I Object name
     C                     PARM           W0TYP  10        I Object Type
     C                     PARM P#LIB     O#LIB  10        O Object Library
     C                     PARM P#ATR     O#ATR  10        O Object Attribute
     C                     PARM P#UDF     O#UDF  10        O Object User Attr
     C                     PARM P#TXT     O#TXT  50        O Object Text
     C                     PARM P#OWN     O#OWN  10        O Object Owner
      *
      *  Set up primary reference
      *
     C                     MOVELW0OBJ     W0PREF    P
      *
      * Initialise program
      *
     C           $FIRST    IFEQ *BLANKS
     C                     EXSR SRINIT
     C                     END
      *
      * Initialise return code
      *
     C                     MOVEL*BLANK    P#RTCD
      * Main processing 1
     C/COPY WNCPYSRC,ME9930DMP1
      *
      ** If non-blank, must either be '*NONE' or existing program
      *
     C           W0OBJ     IFNE '*NONE'
      * Main processing 2
     C/COPY WNCPYSRC,ME9930DMP2
      *
     C                     CALL 'MEC9930'
     C                     PARM *BLANK    P#RTCD  7
     C                     PARM W0CPGM    P#PGM  10
     C                     PARM W0OBJ     P#OBJ  10
     C                     PARM W0TYP     P#TYP  10
     C                     PARM *BLANK    P#LIB  10
     C                     PARM *BLANK    P#ATR  10
     C                     PARM *BLANK    P#UDF  10
     C                     PARM *BLANK    P#TXT  50
     C                     PARM *BLANK    P#OWN  10
      * Main processing 2
     C/COPY WNCPYSRC,ME9930DMP2
      *
      ** Return code MEM9931 => found; MEM9932 => not found
     C           P#RTCD    IFEQ 'MEM9931'
     C                     MOVEL*BLANKS   P#RTCD
     C                     ENDIF
      *
     C           P#RTCD    IFEQ 'MEM9932'
     C                     ENDIF
     C                     ELSE
      * Main processing 3
     C/COPY WNCPYSRC,ME9930DMP3
      *
     C                     ENDIF
      *
      *  Unwind subroutine stack name
      *
     C           EXMAIN    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     C                     RETRN
      *
      ********************************************************************
     C/EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT   : Initialise and define fields                      *
      *                                                               *
      *  CALLED BY: Main processing                                   *
      *                                                               *
      *****************************************************************
     CSR         SRINIT    BEGSR
      *
      *  Set up copyright statement
      *
     C                     MOVEACPY@      CPY2@  80
      *
      *  Set up subroutine stack name
      *
     C                     ADD  1         Q       50
     C                     MOVEL'SRINIT'  @STK,Q
      *
      *  Indicate that set up is complete
      *
     C                     MOVEL'Y'       $FIRST  1
      *
      *  Get Rundate information
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDTA
     C                     IN   RUNDTA
     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
     C                     MOVE AGRDNB    WURDNB  50       Run day number
     C                     MOVE AGSUC     WUSUC   1        Set up complete
     C                     MOVE AGDFF     WUDFF   1        Date Format
     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
      *
      * Get modules information
      *
     C                     CALL 'AOMMODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*FIRST ' P@OPTN  7        I:Option
     C           MMODDS    PARM *BLANKS   DSFDY            O:Module Flg
      *
      *  If return with an error (LR seton in called program) then
      *  process for database error.
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    OREQ '*ERROR*'
     C                     MOVEL'AOMMODR0'W0FILE
     C                     MOVEL'*CALL'   W0KEY            ***************
     C                     Z-ADD1         W0ERNB           * DB ERROR 01 *
     C                     MOVEL'MEM5003' W0MSGD           ***************
     C                     MOVEL'MIDAS  ' W0MSGF
     C                     EXSR SRERR
     C                     END
      *
      *  Unwind subroutine stack name
      *
     C           EXINIT    TAG
     C                     MOVEA*BLANKS   @STK,Q
     C                     SUB  1         Q
      *
     CSR                   ENDSR
      *****************************************************************
     C/EJECT
     C/COPY WNCPYSRC,ME9930DCPG
      *
      *  /Copy point for Calculations
      *
     C/EJECT
      *
      *  File and Program Error Processing
      *
     C/COPY MECPYSRC,SRERRC
     C/EJECT
     C/COPY WNCPYSRC,ME9930DOPG
      *
      *  /Copy point for Outputs
      *
**  CPY@
(c) Finastra International Limited 2001
