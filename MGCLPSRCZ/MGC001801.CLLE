/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas MG Populate UUID Data Queue')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - Message Management Module                           */
/*                                                                   */
/*       MGC001801 - Midas MG Populate UUID Data Queue               */
/*                                                                   */
/*       (c) Finastra International Limited 2018                     */
/*                                                                   */
/*       Last Amend No. CSW218 *CREATE     Date 19Mar18              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CSW218 - SWIFT Changes 2018                                 */
/*                                                                   */
/*********************************************************************/

             PGM

/** Variables for retrieve data queue */

             DCL        VAR(&DTAQ)    TYPE(*CHAR) LEN(10) VALUE('MGUUIDQ')
             DCL        VAR(&SYSID)   TYPE(*CHAR) LEN(2)
             DCL        VAR(&DTAQLIB) TYPE(*CHAR) LEN(10)  VALUE('  DPLIB')
             DCL        VAR(&DTAQD)   TYPE(*CHAR) LEN(80)
             DCL        VAR(&PNBRMSG) TYPE(*DEC)  LEN(9)
             DCL        VAR(&LIMIT)   TYPE(*DEC)  LEN(6)
             DCL        VAR(&PAYCNO)  TYPE(*DEC)  LEN(6)
             DCL        VAR(&UUID)    TYPE(*CHAR) LEN(50)
             DCL        VAR(&GENMSG)  TYPE(*DEC)  LEN(6)

/** Variables for retrieving system values */

             DCL        VAR(&RTNCDE)  TYPE(*CHAR) LEN(7)
             DCL        VAR(&SVAL1)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK2)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL2)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK3)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL3)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK4)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL4)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK5)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL5)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK6)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL6)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK7)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL7)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK8)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL8)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK9)  TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL9)   TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK10) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL10)  TYPE(*CHAR) LEN(200)

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2018')

             CHGJOB     SWS(XXXXXX00)

             MONMSG     MSGID(CPF0000 MCH0000) EXEC(GOTO +
                          CMDLBL(DBERR))

/** Get system value for the number of Payment and Cover */
/** Messages expected per day */

             CALL       PGM(AOSVALR0) PARM(&RTNCDE  +
                          'MaximumUUIDGen' &SVAL1 &SVALK2 +
                          &SVAL2 &SVALK3 &SVAL3 &SVALK4 &SVAL4 +
                          &SVALK5 &SVAL5 &SVALK6 &SVAL6 &SVALK7 +
                          &SVAL7 &SVALK8 &SVAL8 &SVALK9 &SVAL9 +
                          &SVALK10 &SVAL10)

             IF         COND(&RTNCDE *NE '       ') THEN(GOTO +
                          CMDLBL(DBERR))

/** Set value with 10 percent limit */

             ELSE       CMD(DO)
                CHGVAR VAR(&PAYCNO) VALUE(&SVAL1)
                CHGVAR VAR(&LIMIT) VALUE(&PAYCNO * 0.1)
             ENDDO

/** Setup system prefix variable from SDSTAT data area */

             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DTAQLIB 1 2)) VALUE(&SYSID)

             ALCOBJ OBJ((&DTAQLIB/&DTAQ *DTAQ *EXCLRD)) WAIT(3)
             MONMSG     MSGID(CPF1002) EXEC(DO)
                SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) +
                             MSGDTA('MGC001801 - Attempt to write +
                             UUID in the data queue did not continue. +
                             Cannot allocate MGUUIDQ data queue. +
                             Run the program again when the object +
                             is available.') TOMSGQ(MOPERQ)
                MONMSG     MSGID(CPF0000 MCH0000)
                GOTO       CMDLBL(END)
             ENDDO

/** Retrieve data queue description */

             RTVDTAQD   DTAQ(&DTAQLIB/&DTAQ) DTAQD(&DTAQD)

             CHGVAR     VAR(&PNBRMSG) VALUE(%BIN(&DTAQD 73 4))

 /** Call Java method to write UUID if data queue is empty or below limit */

             IF         COND(&PNBRMSG *EQ 0 *OR (&PNBRMSG *NE 0 +
                           *AND &PNBRMSG *LT &LIMIT)) THEN(DO)
                IF        COND(&PNBRMSG *EQ 0) THEN(CHGVAR VAR(&GENMSG) +
                             VALUE(&PAYCNO))
                IF        COND(&PNBRMSG *NE 0) THEN(CHGVAR VAR(&GENMSG) +
                             VALUE(&PAYCNO - &PNBRMSG))
                CALL      PGM(MGC001800)  PARM('WRT' &GENMSG &UUID)
             ENDDO

/** Database error processing */

             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                           CMDLBL(DBERR))

             GOTO       CMDLBL(END)

 DBERR:      CHGJOB     SWS(XXXXXX11)
             DLCOBJ OBJ((&DTAQLIB/&DTAQ *DTAQ *EXCLRD))
             SNDPGMMSG  MSGID(CPF9897) MSGF(QCPFMSG) MSGDTA('MGC001801 +
                          ended abnormally.') MSGTYPE(*ESCAPE)
             MONMSG     MSGID(CPF0000 MCH0000)
             RETURN

 END:        DLCOBJ OBJ((&DTAQLIB/&DTAQ *DTAQ *EXCLRD))
             ENDPGM
