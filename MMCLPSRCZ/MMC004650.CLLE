/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas MM Fee & Disc Amort A/C Key Gen (Non-Linear)')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - Money Market Dealing Module                         */
/*                                                                   */
/*       MMC004650 - Midas MM Fee and Discount Amortisation A/C      */
/*                   Key Generation (Non-Linear)                     */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2004           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. 232928             Date 08Apr05              */
/*       Prev Amend No. CAS009  *CREATE    Date 04May04              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       232928 - Amortise all fees non-linearly, EIR calculation,   */
/*                Non-linear amortisation calculation & adjustment   */
/*       CAS009 - Effective Interest Rate/Amortised Cost Accounting  */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)
 
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&ENT) TYPE(*DEC) LEN(3)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2004')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('MMC004650 - MM Fee and Discount +
                          Amortisation A/C Key Generation (Non-Linear)') +
                          TOMSGQ(MRUNQ)
 
             CHGJOB     SWS(00000000)
 
/* Create data area LDA */
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
/* Setup system prefix variable from SDSTAT data area. */
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)
 
/* Call program CB0160 to get value of restart indicator. */
 
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
 
/* If it is NOT a restart. */
 
             IF         COND(&STAT *NE 'Y') THEN(DO)
                DLTF       FILE(XDEALSDC)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDEALSDD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLCHISPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLDHISPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XMMEIRDPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLFEED)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSDP)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSHH)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSZZ)
                MONMSG     MSGID(CPF2105)
 
                CPYF       FROMFILE(DEALSDC) TOFILE(&DPLIB/XDEALSDC) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DEALSDD) TOFILE(&DPLIB/XDEALSDD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DLCHISPD) TOFILE(&DPLIB/XDLCHISPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DLDHISPD) TOFILE(&DPLIB/XDLDHISPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DLFEED) TOFILE(&DPLIB/XDLFEED) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(MMEIRDPD) TOFILE(&DPLIB/XMMEIRDPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DKEYSDP) TOFILE(&DPLIB/XDKEYSDP) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DKEYSHH) TOFILE(&DPLIB/XDKEYSHH) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                CPYF       FROMFILE(DKEYSZZ) TOFILE(&DPLIB/XDKEYSZZ) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
             ENDDO
 
/* If it is a restart */
 
             IF         COND(&STAT *EQ 'Y') THEN(DO)
             CPYF       FROMFILE(XDEALSDC) TOFILE(DEALSDC) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DEALSDC))
             CPYF       FROMFILE(XDEALSDD) TOFILE(DEALSDD) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DEALSDD))
             CPYF       FROMFILE(XDLCHISPD) TOFILE(DLCHISPD) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DLCHISPD))
             CPYF       FROMFILE(XDLDHISPD) TOFILE(DLDHISPD) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DLDHISPD))
             CPYF       FROMFILE(XDLFEED) TOFILE(DLFEED) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DLFEED))
             CPYF       FROMFILE(XMMEIRDPD) TOFILE(MMEIRDPD) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(MMEIRDPD))
             CPYF       FROMFILE(XDKEYSDP) TOFILE(DKEYSDP) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DKEYSDP))
             CPYF       FROMFILE(XDKEYSHH) TOFILE(DKEYSHH) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DKEYSHH))
             CPYF       FROMFILE(XDKEYSZZ) TOFILE(DKEYSZZ) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                          FILE(DKEYSZZ))
             ENDDO
 
             CHGVAR     VAR(&STAT) VALUE('Y')
 
/* Call CB0150 to update restart indicator */
 
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
                                                                                          /*232928*/
/* Clear MMAMRTPD before calling MM004650 */                                              /*232928*/
                                                                                          /*232928*/
             CLRPFM     MMAMRTPD                                                          /*232928*/
 
/* Call Dealing Fee and Discount Amortisation A/C Key Generation Program */
 
             CALL       PGM(MM004650)
 
/* If no error occured in the program */
 
             IF         COND(%SWITCH(XXXXXX00)) THEN(DO)
 
/* Call CB0150 to update restart indicator. */
 
                CHGVAR     VAR(&STAT) VALUE('N')
                CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
                DLTF       FILE(XDEALSDC)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDEALSDD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLCHISPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLDHISPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDLFEED)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XMMEIRDPD)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSDP)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSHH)
                MONMSG     MSGID(CPF2105)
                DLTF       FILE(XDKEYSZZ)
                MONMSG     MSGID(CPF2105)
             ENDDO
 
/* Database error processing */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOMSGQ(MOPERQ MRUNQ)
             ENDDO
 
             GOTO       CMDLBL(END)
 
ABNOR:
 
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSG('MMC004650 Midas DL Fee and Discount +
                          Amortisation A/C Key Generation (Non-Linear) +
                          Control Program Ended +
                          Abnormally') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
END:
             ENDPGM
