/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas MS Start/stop Midas/SWIFT MX: START')           */
/*********************************************************************/
/*                                                                   */
/*       Midas - Midas SWIFT                                         */
/*                                                                   */
/*       MSC200221A - Midas/SWIFT MX communications : START          */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*    This source is centrally supported and must ONLY be            */
/*    amended by Core Development Personnel                          */
/*                                                                   */
/*    /COPY, Client or Country amendments must not be                */
/*    applied to this source.                                        */
/*                                                                   */
/*       Last Amend No. CSW122  *CREATE    Date 04Oct21              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CSW122 - SWIFT ISO 20022 Changes                            */
/*                                                                   */
/*********************************************************************/

             PGM        PARM(&MCID &IO &JNAM &ACCP &JOB &CJOB &CUSR &CNUM &CPFX +
                          &SYS &OPERATION)

             DCL        VAR(&MCID) TYPE(*CHAR) LEN(26)
             DCL        VAR(&IO) TYPE(*CHAR) LEN(1)
             DCL        VAR(&JNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ACCP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOB) TYPE(*CHAR) LEN(26)
             DCL        VAR(&CJOB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CUSR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CNUM) TYPE(*CHAR) LEN(6)
             DCL        VAR(&CPFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SYS) TYPE(*CHAR) LEN(2)
             DCL        VAR(&OPERATION) TYPE(*CHAR) LEN(9)

             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&JNAM1) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RTN_INFO) TYPE(*CHAR) LEN(512)
             DCL        VAR(&ERR_INFO) TYPE(*CHAR) LEN(4) VALUE(X'00000000')
             DCL        VAR(&RTN_BIN) TYPE(*CHAR) LEN(4)
             DCL        VAR(&RETRY) TYPE(*CHAR) LEN(5)
             DCL        VAR(&JSTAT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FORMAT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&INT_JOB_ID) TYPE(*CHAR) LEN(16) VALUE(' ')

             COPYRIGHT  TEXT('(c) Finastra International Limited 2001')

/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO CMDLBL(ABNOR))

/* Check whether session is associated with this Midas system. If */
/* not send message to user and terminate.                        */
             IF         COND(&CPFX *NE &SYS) THEN(DO)
                SNDPGMMSG  MSGID(MEM6005) MSGF(MIDAS) MSGDTA(&SYS *CAT &CPFX) +
                             TOPGMQ(*PRV (MS6130M)) MSGTYPE(*COMP)
                GOTO       CMDLBL(END)
             ENDDO

/* Check if job currently active (if job not found set status */
/* to *OUTQ).                                                 */
             CHGVAR     VAR(&RTN_BIN) VALUE(X'00000200')
             CHGVAR     VAR(&FORMAT) VALUE('JOBI0100')
             CHGVAR     VAR(&RETRY) VALUE('FALSE')
 RETRY:      CALL       PGM(QUSRJOBI) PARM(&RTN_INFO &RTN_BIN &FORMAT &JOB +
                          &INT_JOB_ID)
             MONMSG     MSGID(CPF3C53 CPF3C55 CPF3C54 CPF3C58) EXEC(DO)
                RCVMSG     RMV(*NO) MSGDTA(&MSGDTA) MSGID(&MSGID)
                IF         COND(&MSGID *EQ 'CPF3C54') THEN(DO)
                   IF         COND(&RETRY *EQ 'FALSE') THEN(DO)
                      CHGVAR     VAR(&RETRY) VALUE('TRUE ')
                      DLYJOB     DLY(30)
                      GOTO       CMDLBL(RETRY)
                   ENDDO
                   ELSE       CMD(DO)
                      SNDPGMMSG  MSGID(CPF3C54) MSGF(QCPFMSG) MSGDTA(&MSGDTA) +
                                   TOPGMQ(*PRV (MS6130M))
                      GOTO       CMDLBL(ABNOR)
                   ENDDO
                ENDDO
                CHGVAR     VAR(&JSTAT) VALUE('*OUTQ')
                GOTO       TAG
             ENDDO

/* If job found, get status from API returned data */
             CHGVAR     VAR(&JSTAT) VALUE(%SST(&RTN_INFO 51 10))

/* If status is not *OUTQ, send message to user and terminate */
 TAG:        IF         COND(&JSTAT *NE '*OUTQ') THEN(SNDPGMMSG MSGID(MEM6004) +
                          MSGF(MIDAS) MSGDTA(&CJOB *CAT &JSTAT *CAT &MCID) +
                          TOPGMQ(*PRV (MS6130M)) MSGTYPE(*COMP))
             ELSE       CMD(DO)

/* Otherwise, submit new job and collect details for return */
                CHGVAR     VAR(&JNAM1) VALUE(&JNAM)
                IF         COND(&JNAM1 *EQ ' ') THEN(DO)
                   IF         COND(&IO *EQ 'I') THEN(CHGVAR VAR(&JNAM1) +
                                VALUE('MS_MED2MID'))
                   ELSE       CMD(CHGVAR VAR(&JNAM1) VALUE('MS_MID2MED'))
                ENDDO

                SBMJOB     CMD(CALL PGM(MSC200221B) PARM(&MCID &IO &ACCP +
                             &OPERATION)) JOB(&JNAM1) JOBD(MBATCH) JOBQ(MSJOBQ) +
                             USER(*JOBD) RTGDTA(MULTILANGUAGE) MSGQ(MOPERQ) +
                             OUTQ(*JOBD)
                RCVMSG     PGMQ(*SAME) RMV(*NO) MSGDTA(&MSGDTA) MSGID(&MSGID)

/* If submit successful retrieve job information for return to RPG */
                IF         COND(&MSGID *EQ 'CPC1221') THEN(DO)
                   SNDPGMMSG  MSGID(&MSGID) MSGF(QCPFMSG) MSGDTA(&MSGDTA) +
                                TOPGMQ(*PRV (MS6130M))
                   CHGVAR     VAR(&CJOB) VALUE(%SST(&MSGDTA 1 10))
                   CHGVAR     VAR(&CUSR) VALUE(%SST(&MSGDTA 11 10))
                   CHGVAR     VAR(&CNUM) VALUE(%SST(&MSGDTA 21 6))
                ENDDO
                ELSE       CMD(DO)

/* Else abnormal termination */
                   GOTO       CMDLBL(ABNOR)
                ENDDO
             ENDDO

/* Normal end */
             GOTO       CMDLBL(END)

/* Abnormal end */
 ABNOR:
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('WRKMSMIF ended +
                          abnormally - see job log') TOPGMQ(*PRV (MS6130M)) +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)

 END:

             ENDPGM
