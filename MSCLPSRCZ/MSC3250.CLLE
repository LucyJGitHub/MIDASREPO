/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas MS Alliance Automated Receive')                 */
/*********************************************************************/
/*                                                                   */
/*       Midas/SWIFT Direct Link Module                              */
/*                                                                   */
/*       MSC3250 - Automated Receive                                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/*       Last Amend No. 257515             Date 11Nov08              */
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4.01 -----------------------------------------------*/
/*       Prev Amend No. CSW027             Date 22May02              */
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.02 ---------------------------------------------------*/
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*                      CPK009             Date 09Aug99              */
/*                      CSW009 *CREATE     Date 25FEB97              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       257515 - Swift message can't be found in swift alliance.    */
/*       CSW027 - Midas message manager AFT interface                */
/*       CPK009 - Packaging for DBA3 release. STRCMTCTL values set   */
/*                to CMTSCOPE(*JOB).                                 */
/*       CSW009 - Midas-SWIFT Alliance Automated File Transfer       */
/*                                                                   */
/*********************************************************************/
 
             PGM
 
             DCLF       FILE(SDMGMEPD)
             DCL        VAR(&DELAY) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&RETVAL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&NUM) TYPE(*CHAR) LEN(4)
             DCL        VAR(&TOT) TYPE(*CHAR) LEN(4)
             DCL        VAR(&OPR) TYPE(*CHAR) LEN(80)
             DCL        VAR(&ERR) TYPE(*CHAR) LEN(80)
             DCL        VAR(&OPRERR) TYPE(*CHAR) LEN(160)
             DCL        VAR(&TRACE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&NOFILES) TYPE(*DEC) LEN(3 0)
             DCL        VAR(&MBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PRTCD) TYPE(*CHAR) LEN(7) VALUE(' ')                         /*CSW027*/
             DCL        VAR(&CSW027) TYPE(*CHAR) LEN(1) VALUE(' ')                        /*CSW027*/
/*/COPY WNCPYSRC,MSC3250001                                          */
/*/COPY WNCPYSRC,MSH00013                                            */
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2001')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Set off all switches */
             CHGJOB     SWS(XXXXXX00)
 
/* Start commitment control */
/**********     STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE))         /*CPK009*/
             STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE)) +
                          CMTSCOPE(*JOB)                              /*CPK009*/
 
             CALL (AOSARDR0) PARM(&PRTCD '*VERIFY' 'CSW027')                              /*CSW027*/
             IF (&PRTCD *EQ ' ') (CHGVAR (&CSW027) VALUE('Y'))                            /*CSW027*/
 
/* Lock data area to show job is active */
             ALCOBJ     OBJ((MS_A2M_AFT *DTAARA *EXCL)) WAIT(120)
 
/* Access MG/ME installation Control Data and calculate dataq delay */
             RCVF       RCDFMT(SDMGMED0)
             CHGVAR     VAR(&DELAY) VALUE(&ENSPLI * 60)
 
/* If restart after failure, process existing file members before */
/* getting any more from Alliance */
             RTVMBRD    FILE(MSPCCIPD) RTNMBR(&MBR)
             MONMSG     MSGID(CPF3019) EXEC(GOTO CMDLBL(NORMAL))
             GOTO       CMDLBL(RESTART)
 
/* Wait 10 seconds on entry for outgoing job to complete PING test */
/* before trying it in this job */
 NORMAL:     DLYJOB     DLY(10)
/*/COPY WNCPYSRC,MSC3250002                                          */
 
/* Check whether connection to SWIFT terminal is currently active */
 LOOP:       RTVDTAARA  DTAARA(MSSTAT (21 1)) RTNVAR(&TRACE)
             IF         COND(&TRACE *EQ 'T') THEN(CHGJOB LOG(4 00 +
                          *SECLVL) LOGCLPGM(*YES))
             ELSE       CMD(CHGJOB LOG(0 30 *NOLIST) LOGCLPGM(*NO))
             PING       RMTSYS(&ENSAIP) WAITTIME(10)
             MONMSG     MSGID(CPF0000 TCP0000)
             RCVMSG     MSGTYPE(*LAST) MSGDTA(&MSGDTA) MSGID(&MSGID)
             IF         COND(&MSGID *EQ 'TCP3210') THEN(DO)
             CHGVAR     VAR(&NUM) VALUE(%SST(&MSGDTA 1 4))
             CHGVAR     VAR(&TOT) VALUE(%SST(&MSGDTA 5 4))
             IF         COND(&NUM *EQ &TOT) THEN(GOTO CMDLBL(LINK_UP))
             ENDDO
             SNDPGMMSG  MSGID(MEM7000) MSGF(MIDAS) MSGDTA(&ENSAIP) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(DTQ_PROC)
 
/* If link is active get list of message files on Alliance machine, */
/* transfer each file to Midas and delete it from Alliance */
 LINK_UP:    CLRPFM     FILE(MSFTRIPD)
             CLRPFM     FILE(MSFTROPD)
             RMVM       FILE(MSPCCIPD) MBR(*ALL)
             MONMSG     MSGID(CPF7301)
 
/* Call MS3250 in 'List' mode to create FTP script file for 'list */
/* all incoming message files' */
             CALL       PGM(MS3250) PARM('*LIST' 0)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             ROLLBACK
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(END)
             ENDDO
 
/* Execute FTP script to get get list of files */
             OVRDBF     FILE(INPUT) TOFILE(MSFTRIPD)
             OVRDBF     FILE(OUTPUT) TOFILE(MSFTROPD)
/*/COPY WNCPYSRC,MSH00014                                            */
             FTP        RMTSYS(&ENSAIP)
/*/COPY WNCPYSRC,MSH00015                                            */
 
/* Analyse result of FTP operation */
             CALL       PGM(MS3210) PARM(&OPR &ERR)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             ROLLBACK
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(END)
             ENDDO
 
/* If trace facility is enabled or transfer failed print FTP script */
/* and output files */
             IF         COND((&TRACE *EQ 'T') *OR (&OPR *NE ' ')) +
                          THEN(DO)
             CPYF       FROMFILE(MSFTRIPD) TOFILE(*PRINT) FROMRCD(2)
             CPYF       FROMFILE(MSFTROPD) TOFILE(*PRINT)
             ENDDO
 
/* If error reported by FTP send user message and loop */
             IF         COND(&OPR *NE ' ') THEN(DO)
                                                                                          /*257515*/
/* If lost connection reported then send a warning message to MOPERQ */                   /*257515*/
             IF         COND(&OPR *EQ '*NORESP') THEN(DO)                                 /*257515*/
             SNDPGMMSG  MSGID(MEM7006) MSGF(MIDAS)   +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)                                     /*257515*/
             ENDDO                                                                        /*257515*/
             ELSE       CMD(DO)                                                           /*257515*/
             CHGVAR     VAR(&OPRERR) VALUE(&OPR *CAT &ERR)
             SNDPGMMSG  MSGID(MEM7001) MSGF(MIDAS) MSGDTA(&OPRERR) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
/*/COPY WNCPYSRC,MSC3250004                                          */
             ENDDO                                                                        /*257515*/
             GOTO       CMDLBL(DTQ_PROC)
/*/COPY WNCPYSRC,MSC3250005                                          */
                          ENDDO
 
/* Analyse output from FTP to build file transfer script */
             CLRPFM     FILE(MSFTRIPD)
             CALL       PGM(MS3250) PARM('*TFR ' &NOFILES)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             ROLLBACK
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(END)
             ENDDO
 
/*/COPY WNCPYSRC,MSC3250006                                          */
/* If no messages returned from Alliance go back to wait state */
             IF         COND(&NOFILES *EQ 0) THEN(GOTO +
                          CMDLBL(DTQ_PROC))
/*/COPY WNCPYSRC,MSC3250007                                          */
 
/* If any files found execute FTP script to transfer them to Midas */
/* and delete them from Alliance */
             CLRPFM     FILE(MSFTROPD)
/*/COPY WNCPYSRC,MSH00016                                            */
             FTP        RMTSYS(&ENSAIP)
/*/COPY WNCPYSRC,MSH00017                                            */
 
/* Analyse result of FTP operation */
             CALL       PGM(MS3210) PARM(&OPR &ERR)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             ROLLBACK
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(END)
             ENDDO
 
/* If trace facility is enabled or transfer failed print FTP script */
/* and output files */
             IF         COND((&TRACE *EQ 'T') *OR (&OPR *NE ' ')) +
                          THEN(DO)
             CPYF       FROMFILE(MSFTRIPD) TOFILE(*PRINT) FROMRCD(2)
             CPYF       FROMFILE(MSFTROPD) TOFILE(*PRINT)
             ENDDO
 
/* If error reported on transfer send user message but continue */
/* processing in case some messages received successfully */
             IF         COND(&OPR *NE ' ') THEN(DO)
             CHGVAR     VAR(&OPRERR) VALUE(&OPR *CAT &ERR)
             SNDPGMMSG  MSGID(MEM7001) MSGF(MIDAS) MSGDTA(&OPRERR) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             ENDDO
 
/* Process incoming messages (each file on Alliance is transferred */
/* to a different member of PF/MSPCCIPD) */
 
             IF COND(&CSW027 *NE 'Y') THEN(DO)                                            /*CSW027*/
 NEXT_MBR:   RTVMBRD    FILE(MSPCCIPD) RTNMBR(&MBR)
             MONMSG     MSGID(CPF3019) EXEC(GOTO CMDLBL(LAST))
 RESTART:    OVRDBF     FILE(MSPCCIPD) MBR(&MBR)
             CALL       PGM(MS3260)
             DLTOVR     FILE(MSPCCIPD)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
             ROLLBACK
             SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ)
             GOTO       CMDLBL(END)
             ENDDO
             RMVM       FILE(MSPCCIPD) MBR(&MBR)
             GOTO       CMDLBL(NEXT_MBR)
 
/* Call prompt for Incoming Message Management */
 LAST:       CALL       PGM(MEC1024) PARM('')
             ENDDO                                                                        /*CSW027*/
 
/*/COPY WNCPYSRC,MSC3250003                                          */
 
/* If termination requested on previous iteration, terminate now */
 DTQ_PROC:   IF         COND(&RETVAL *EQ 'T') THEN(GOTO CMDLBL(END))
 
/* Wait on DEQW for time specified on ICD (or until entry received) */
             CALL       PGM(QRCVDTAQ) PARM(MS_A2M_AFT *LIBL +
                          X'00001F' &RETVAL &DELAY)
             GOTO       CMDLBL(LOOP)
 
/* Abnormal termination */
 ABNOR:      CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          MSC3200 ended abnormally - see job log') +
                          TOMSGQ(MOPERQ)
               MONMSG     MSGID(CPF0000 MCH0000)
 
 END:
 
             ENDPGM
             ENDDO
 
             ENDPGM
