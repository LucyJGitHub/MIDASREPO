000100200529     H        1
000200200529      *****************************************************************
000300200529/*STD *  RPGBASE                                                      *
000400200529/*EXI *  TEXT('Midas MS Extract SWIFT messages for I.M.M.')           *
000500200529     F*****************************************************************
000600200529     F*                                                               *
000700200529     F*  Midas - S.W.I.F.T. Direct Link Module
000800200529     F*                                                               *
000900200529     F*  MS1900 - Extract S.W.I.F.T. Messages for I.M.M.              *
001000200529     F*                                                               *
001100200529     F*  Function:  This program extracts messages and calls          *
001200200529     F*  the I.M.M. Add Message Access Object, ME1020                 *
001300200529     F*                                                               *
001400200529     F*  Called By: MSC5030 - Incoming Message Index Extract          *
001500200529     F*                                                               *
001600200529      *  (c) Finastra International Limited 2001                      *
001700200529     F*                                                               *
001800200604     F*  Last Amend No. 253970             Date 22May20               *
001900200529      *  Prev Amend No. CSW218             Date 19Mar18               *
002000200529      *                 MD046248           Date 27Oct17               *
002100200529      *                 CFT135             Date 20Feb13               *
002200200529      *                 AR845802           Date 14Nov12               *
002300200529      *                 CSW212             Date 03May12               *
002400200529      *                 BUG26765           Date 17Nov09               *
002500200529      * Bank Fusion Midas 1.4 Base -----------------------------------*
002600200529      *                 CSW209             Date 01Apr09               *
002700200529      * Midas Plus 1.4 Base 04 ---------------------------------------*
002800200529      * Midas Plus 1.4 Base ------------------------------------------*
002900200529      *                 243149             DATE 29Nov06               *
003000200529      * Midas Plus 1.3 ----------- Base ------------------------------*
003100200529      *                 240754             Date 06Jun06               *
003200200529      *                 225169             Date 06Jun06               *
003300200529      *                 CSD031             Date 10Apr06               *
003400200529      *                 CSD027             Date 09Dec05               *
003500200529      *                 CSC022             Date 24Feb04               *
003600200529      *                 CGL013             Date 14May01               *
003700200529      * Midas Release 4 --------------- Base -------------------------*
003800200529      * Midas DBA 3.05 -----------------------------------------------*
003900200529      *                 188036             Date 26Feb01               *
004000200529     F*                 186724             Date 18Dec00               *
004100200529      * Midas DBA 3.04 -----------------------------------------------*
004200200529      *                 CFT014             Date 25May00               *
004300200529      * Midas DBA 3.03 -----------------------------------------------*
004400200529      *                 176887             Date 29Jun00               *
004500200529      *                 CFT006             Date 24Nov99               *
004600200529      * Midas DBA 3.00 ---------------- Base -------------------------*
004700200529     F*                 149261             Date 15Jun99               *
004800200529     F*                 CFT002             Date 18Nov98               *
004900200529     F*                 140532             Date 11Aug98               *
005000200529     F*                 124673             Date 04Jun98               *
005100200529     F*                 088608             DATE 10OCT95               *
005200200529     F*                 CSW095             DATE 10APR95               *
005300200529     F*                 068251             DATE 16MAR94               *
005400200529     F*                 068104             DATE 18NOV93               *
005500200529     F*                 S01435             DATE 23JUL93               *
005600200529     F*                                                               *
005700200529     F*---------------------------------------------------------------*
005800200529     F*                                                               *
005900200529      *   253970 - If delimiter for block data in block 4 cannot be   *
006000200529      *            found, use an alternative delimiter (CR/LF) format *
006100200529      *            that is sometimes found in iSeries SWIFT messages. *
006200200529      *  CSW218 - SWIFT Changes 2018                                  *
006300200529      *  MD046248 - Finastra Rebranding                               *
006400200529      *  CFT135 - MT100 MultiCash Interface                           *
006500200529      *           Added hooks:                                        *
006600200529      *           OFCPYSRCZ,CFT135_017                                *
006700200529      *           OFCPYSRCZ,CFT135_018                                *
006800200529      *           OFCPYSRCZ,CFT135_019                                *
006900200529      *           OFCPYSRCZ,CFT135_020                                *
007000200529      *  AR845802 - Looping occurs when tag 77T of an MT103 message is*
007100200529      *             processed. (Child: AR845804)                      *
007200200529      *  CSW212 - SWIFT 2012 Changes                                  *
007300200529      *  BUG26765 - Field settlement amount mapped from 33B instead   *
007400200529      *             of 32A                                            *
007500200529      *  CSW209 - SWIFT 2009 Changes                                  *
007600200529     F*   243149 - Database error 017 in SR ZALIGN.  Remove useless   *
007700200529     F*          - coding for CFT006 (field WTFAMT never used.)       *
007800200529     F*          - Applied fix 230505.                                *
007900200529      *  240754 - SQ10n fields are only 1 char and thus only          *
008000200529      *            corrupt values greater than 9 not zeroise them.    *
008100200529      *  225169 - Accept incoming messages using a SWIFT currency     *
008200200529      *            different from the Midas currency.                 *
008300200529      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
008400200529      *  CSD027 - Conversion Of Customer Number to Alpha              *
008500200529      *  CSC022 - Commitment Control Changes for MidasPlus            *
008600200529      *           (Recompile)                                         *
008700200529     F*   CGL013 - MT94x Message Generation                           *
008800200529     F*   188036 - Remove leading zeros before amounts
008900200529     F*   186724 - :34e: incorrectly formatted                        *
009000200529     F*   CFT014 - Addition of MT103 messages                         *
009100200529     F*   176887 - Allow for 8,9,11 or 12 character sender            *
009200200529     F*   CFT006 - Addition of MT101 and MT102 messages               *
009300200529     F*   149261 - Initialise century field for MEINCRPD.             *
009400200529     F*   CFT002 - Straight Through Processing Phase 1                *
009500200529      *   140532 - SWIFT98 fix                                        *
009600200529     F*            Cannot extract TRN no. for certain messages        *
009700200529     F*            e.g. MT515 and MT518 as it holds TRN no. info      *
009800200529     F*            in fld :20C: in the format :20C:cccc//trn no.....  *
009900200529     F*   124673 - Add Century fields for Year 2000.                  *
010000200529     F*   088608 - The pgm does not remove the LT ID from the         *
010100200529     F*            incoming SWIFT msgs and this caused inconsistency  *
010200200529     F*            between MSDL and IMM enquiry.                      *
010300200529     F*            For MSDL enq by sender, the pgm expects BIC+LT ID  *
010400200529     F*            For IMM enq, the pgm expects BIC only.             *
010500200529     F*            For IMM, construct the sender TID according to the *
010600200529     F*            amendment made in MS5030.                          *
010700200529     F*  CSW095 - S.W.I.F.T 1995 Message Changes.                     *
010800200529     F*           Increase arrays to handle a 10,000 character        *
010900200529     F*           message.                                            *
011000200529     F*  068251 - Fill MPPYAM with SWIFT Amount                       *
011100200529     F*  068104 - S: Block is Optinal, no error exit.                 *
011200200529     F*  S01435 - Incoming Message Management                         *
011300200529     F*                                                               *
011400200529     F*****************************************************************
011500200529     F*                                                               *
011600200529     F*  Indicator usage                                              *
011700200529     F*  ~~~~~~~~~~~~~~~                                              *
011800200529     F*                                                               *
011900200529     F*  50    First cycle                                            *
012000200529     F*  60    EOF on MSIXI2PD                                        *
012100200529     F*  61    EOF on MSMSI2PD                                        *
012200200529     F*  62    General work indicator                                 *
012300200529     F*  63    General work indicator                                 *
012400200529     F*  64    Shut down of job requested                             *
012500200529     F*  90    General Work Indicator                                 *
012600200529     F*                                                               *
012700200529     F*  U7/U8 Error Ocurred                                          *
012800200529     F*  LR    End program                                            *
012900200529     F*                                                               *
013000200529     F*****************************************************************
013100200529     FMSIXI2LDUF  E           K        DISK         KINFSR SRFILE     UC
013200200529     F                                              KCOMIT
013300200529      *
013400200529      *  Swift Messages - By Mor, select IMPF EQ ' '
013500200529      *
013600200529     FMSMSI2LAIF  E           K        DISK         KINFSR SRFILE     UC
013700200529      *                                                                                       CSW209
013800200529      ** Starting Message Tag in Sequence                                                     CSW209
013900200529      *                                                                                       CSW209
014000200529     FMESTGSL1IF  E           K        DISK                                                   CSW209
014100200529      *
014200200529      *  Swift Messages - By Mor, select ACNK NE 'A,N'
014300200529      *
014400200529     F/COPY WNCPYSRC,MS1900DFPG
014500200529      *
014600200529      *  /Copy point for File Definition
014700200529      *
014800200529     F***SDCURRLDIF  E           K        DISK                                         225169 230505
014900200529     F/EJECT
015000200529     E                    CPY@    1   1 80
015100200529      *
015200200529      *  Copyright table
015300200529      *
015400200529     E/COPY WNCPYSRC,MS1900DEPG
015500200529      *
015600200529      *  /Copy point for Arrays
015700200529      *
015800200529     E/COPY MECPYSRC,SRERRE
015900200529      *
016000200529      *  Copysource for error processing
016100200529      *
016200200529     E***********         SWD      2560  1                                CSW095
016300200529     E                    SWD      9999  1                                CSW095
016400200529      *
016500200529      *  Swift Data
016600200529      *
016700200529     E                    TTAG   10  60  3   TFMT    1
016800200529      *
016900200529      *  Value Date/Currency/Amount formats for tags 30 to 34
017000200529      *
017100200529     E************        STYP    1  20  3   STAG    3                    CFT002
017200200529     E                    STYP    1  22  3   STAG    3                    CFT002
017300200529      *
017400200529      *  Message Type/Tag no. that denotes start of a new Part No.
017500200529      *
017600200529     E************        RTYP    1   8  3   RTAG    3                    CFT002
017700200529     E                    RTYP    1  10  3   RTAG    3                    CFT002
017800200529      *                                                                   CFT006
017900200529      *  Message Type/Tag No. that denotes source of Transaction Ref.     CFT006
018000200529      *                                                                   CFT006
018100200529     E                    TREX    1   2  9                                CFT006
018200200529      *                                                                   CFT006
018300200529      *  Msg typ/Seq/Tag no. that are not start of new part number        CFT006
018400200529      *                                                                   CFT006
018500200529     E                    RFEX    1   2  9                                CFT006
018600200529      *                                                                   CFT006
018700200529      *  Msg typ/Seq/Tag no. amounts that are not used to fill the        CFT006
018800200529      *  part file                                                        CFT006
018900200529      *                                                                   CFT006
019000200529     E***********         AMEX    1   2  9                         CFT006 CFT014
019100200529     E**********          AMEX    1   3  9                                           CFT014 BUG26765
019200200529     E**********          AMEX    1   4  9                                           BUG26765 CSW212
019300200529     E                    AMEX    1   6  9                                                    CSW212
019400200529      *                                                                   CFT006
019500200529      *  Msg typ/Seq/Tag no. that are not reference  number               CFT006
019600200529      *                                                                   CFT006
019700200529     E                    DTEX    1   1  9                                CFT014
019800200529      *                                                                   CFT014
019900200529      *  Msg typ/Seq/Tag no. that will follow a special extraction        CFT014
020000200529      *  in SRBLK4 and in SRDAT4                                          CFT014
020100200529      *                                                                   CFT014
020200200529     E                    FLA        17  1               format field     068251
020300200529      *                                                                   068251
020400200529      *  Seventeen long field for substitution of "," for ","             068251
020500200529      *                                                                   068251
020600200529     E/EJECT
020700200529     I/COPY WNCPYSRC,MS1900DIPG
020800200529      *
020900200529      *  /Copy point for Input specifications
021000200529      *
021100200529      *
021200200529     ICPYR@#      DS
021300200529      *
021400200529      *  Data structure for compilation  - Copyright insertion
021500200529      *
021600200529     I                                        1  80 CPY@
021700200529     I                                        1  20 CPY@##
021800200529      *
021900200529     I/COPY MECPYSRC,SRERRI
022000200529      *
022100200529      *  End of Program Error Processing copysource
022200200529      *
022300200529     IRUNDTA    E DSRUNDAT
022400200529      *
022500200529      *  Define rundat data area
022600200529      *
022700200529     IINCR      E DSMEINCRPD
022800200529      *
022900200529      *  Define Incoming Message Control data structure
023000200529      *
023100200529     IINDT      E DSMEINDTPD
023200200529      *
023300200529      *  Define Incoming Message Detail data structure
023400200529      *
023500200529     IINMP      E DSMEINMPPD
023600200529      *
023700200529      *  Define Incoming Message Part Detail data structure
023800200529      *
023900200529     IINMC      E DSMEINMCPD
024000200529      *
024100200529      *  Define parameters to be passed for message checking
024200200529      *
024300200529     IIRFT      E DSMEIRFTPD                                                     CFT006
024400200529     I              MTPY                            RFMTPY                       CFT006
024500200529      *                                                                          CFT006
024600200529      *  Msg Management 101 and 102 Totals (amounts and transactions)            CFT006
024700200529      *                                                                          CFT006
024800200529     ISCSARD    E DSSCSARDPD                                                     CFT006
024900200529      *                                                                          CFT006
025000200529      * Switchable Features Descriptions *                                       CFT006
025100200529      *                                                                          CFT006
025200200529     ISDCURR    E DSSDCURRPD                                                     CFT006
025300200529      *                                                                          CFT006
025400200529      * Currency details                                                         CFT006
025500200529      *                                                                          CFT006
025600200529     IDSFDY     E DSDSFDY                                                        CFT006
025700200529     IDSSDY     E DSDSSDY                                                        CFT006
025800200529      *                                                                          CFT006
025900200529      * Data Structures used by Access Programs                                  CFT006
026000200529      *                                                                          CFT006
026100200529     IW1DATA      DS                            512
026200200529      *
026300200529      *  Define data structure used to pass file data structures
026400200529      *
026500200529     IDSSTID      DS
026600200529      *
026700200529      *  Breakdown of Incoming Message Sender field
026800200529      *
026900200529     I                                        1  12 STID
027000200529     I                                        1   8 STID1
027100200529     I                                        9   9 STID2
027200200529     I                                       10  12 STID3
027300200529     IDSSNDR      DS
027400200529      *
027500200529      *  Construct Sender field
027600200529      *
027700200529     I                                        1  20 SNDR
027800200529     I                                        1   8 SNDR1
027900200529     I                                        9  11 SNDR2
028000200529     I                                       12  20 SNDR3
028100200529      *
028200200529     IDSBLK2      DS
028300200529      *
028400200529      *  Breakdown of Block 2 data
028500200529      *
028600200529      *           Input/Output Identifier
028700200529     I                                        1   1 B2IO
028800200529      *           Message Type
028900200529     I                                        2   40B2TYP
029000200529      *           Input Time (sender)
029100200529     I                                        5   80B2INTI
029200200529      *           Mir/Input Date (sender)
029300200529     I                                        9  36 B2MIR
029400200529     I                                        9  14 B2INTD
029500200529      *           Output Date (receiver)
029600200529     I                                       37  420B2OUTD
029700200529      *           Output Time (receiver)
029800200529     I                                       43  460B2OUTT
029900200529      *           Message Priority
030000200529     I                                       47  47 B2PTY
030100200529      *
030200200529     IDSTAG       DS
030300200529      *
030400200529      *  Breakdown Tag details for message part processing
030500200529      *
030600200529     I                                        1   5 WKTAG
030700200529     I                                        1   3 PTAG
030800200529     I                                        2   4 PTAGP
030900200529     IDSCKTG      DS                                                      CFT006
031000200529      *                                                                   CFT006
031100200529      *  Breakdown Tag exception                                          CFT006
031200200529      *                                                                   CFT006
031300200529     I                                        1   9 WCKARG                CFT006
031400200529     I                                        1   3 WCKMTY                CFT006
031500200529     I                                        4   4 WCKSEQ                CFT006
031600200529     I                                        5   9 WCKTAG                CFT006
031700200529      *
031800200529     IDSMSG       DS
031900200529     I                                        1  25 DMSG
032000200529      *
032100200529      *  Breakdown message details for Date/Amount/Currency
032200200529      *  Format 1
032300200529      *
032400200529      *             Tag 30                } Date only
032500200529      *         and Tag 31 (all formats)  }
032600200529      *
032700200529      *             Tag 32 (A,C,D,P,R,S)  }
032800200529      *         and Tag 33 (A,C,D,P,R)    } Date/Currency/Amount
032900200529      *         and Tag 34 (A,C,D,P,R)    }
033000200529      *
033100200529      *             Tag 32 (T)            } Date (ISO form)/Ccy/Amt
033200200529      *
033300200529      *             Tag 32 (K)            } Maturity Period/Ccy/Amt
033400200529      *         and Tag 33 (K)            }
033500200529      *
033600200529     I                                        1   60D1DTE
033700200529     I                                        1   1 D1MTY
033800200529     I                                        2   40D1MNO
033900200529     I                                        5   6 D1MIN
034000200529      *
034100200529     I                                        7   9 D1CCY
034200200529     I                                       10  24 D1AMT
034300200529      *
034400200529      *  Format 2
034500200529      *
034600200529      *             Tag 32 (B,G,M)        }
034700200529      *         and Tag 33 (B,E,F,S,T,V)  }
034800200529      *         and Tag 33 (G)            } Currency/Amount
034900200529      *         and Tag 34 (B)            }
035000200529      *
035100200529      *             Tag 32 (E)            } Currency Only
035200200529      *
035300200529      *             Tag 32 (L)            } Currency/Amount (optional)
035400200529      *
035500200529      *             Tag 32 (F)            } Unit of metal or coin/Qty
035600200529      *
035700200529     I                                        1   3 D2CCY
035800200529     I                                        4  18 D2AMT
035900200529      *
036000200529      *  Format 3
036100200529      *
036200200529      *             Tag 32 (N)            } Negative Ind. (optional)
036300200529      *         and Tag 33 (N)            } plus Date/Currency/Amount.
036400200529      *         and Tag 34 (N)            } If no ind, use format A
036500200529      *
036600200529     I                                        1   1 D3NEG
036700200529     I                                        2   70D3DTE
036800200529     I                                        8  10 D3CCY
036900200529     I                                       11  25 D3AMT
037000200529     I                                        7   7 D3C7
037100200529      *
037200200529      *  Format 4
037300200529      *
037400200529      *             Tag 32 (H)            } Neg Ind. (optional) plus
037500200529      *         and Tag 34 (E)            } plus Currency/Amount
037600200529      *                                   } If no ind, use format B
037700200529      *
037800200529     I                                        1   1 D4NEG
037900200529     I                                        2   4 D4CCY
038000200529     I                                        5  19 D4AMT
038100200529     I                                        4   4 D4C4
038200200529      *
038300200529      *  Format 5
038400200529      *
038500200529      *             Tag 34 (G,H)          } No. of Days/Ccy/Amount
038600200529      *
038700200529     I                                        1   30D5DAY
038800200529     I                                        4   6 D5CCY
038900200529     I                                        7  21 D5AMT
039000200529     I                                        1   1 D5C1
039100200529      *
039200200529      *  Format 6
039300200529      *
039400200529      *             Tag 34 (F)            } Currency/DR,CR/Amount
039500200529      *
039600200529     I                                        1   3 D6CCY
039700200529     I                                        4   4 D6DC
039800200529     I                                        5  19 D6AMT
039900200529      *
040000200529     IDSDLIM      DS
040100200529      *
040200200529      *  To define carriage return delimiters for message scanning
040300200529      *
040400200529      *  Hex value  '  :'  = CRLF: Start of text/Field Separator
040500200529      *              027
040600200529      *              D5A
040700200529      *
040800200529     I                                        1   3 CRLFC
040900200529     I                                        1   1 BTA
041000200529     I                                        2   2 BTB
041100200529     I                                        3   3 CLN
041200200529      *                                                                   CFT006
041300200529      * Data structure used to memorize header and trailer sequence       CFT006
041400200529      *                                                                   CFT006
041500200529     IDSTGSQ      DS                        100                           CFT006
041600200529     I                                        1   1 MTGSQ                 CFT006
041700200529     I                                        2   6 MTGNM                 CFT006
041800200529     I                                        7   7 MFPID                 CFT006
041900200529     I                                        8 107 MTFLD                 CFT006
042000200529      *                                                                   CFT014
042100200529      *  Breakdown of Result retuned back by MS1910                       CFT014
042200200529      *                                                                   CFT014
042300200529     IDSRSLT      DS                                                      CFT014
042400200529     I                                        1 256 WRA256                CFT014
042500200529     I                                        1   50WRN05                 CFT014
042600200529      *                                                                   CSW095
042700200529      * Data structure used in scanning SWIFT message data                CSW095
042800200529      *                                                                   CSW095
042900200529     I***DSSWD*******DS                          12560                    CSW095
043000200529      ***********                                                         CSW095
043100200529      **Data*structure*used*in*scanning*SWIFT*messag**data*************   CSW095
043200200529      ***********                                                         CSW095
043300200529     I***********                             12560 SWD                   CSW095
043400200529     IDSSWD       DS                          19999                       CSW095
043500200529      *                                                                   CSW095
043600200529      * Data structure used in scanning SWIFT message data                CSW095
043700200529      *                                                                   CSW095
043800200529     I                                        19999 SWD                   CSW095
043900200529      *
044000200529      * Named Constant used to determine if a field contains numerics
044100200529      *
044200200529     I              '0123456789'          C         DIGITS
044300200529      *                                                                         CFT006
044400200529      * Relationships between message type, sequence, and part number           CFT006
044500200529      *                                                                         CFT006
044600200529     I              0                     C         SQ101A                      CFT006
044700200529     I              0                     C         SQ102A                      CFT006
044800200529     I              0                     C         SQ102C                      CFT006
044900200529      *                                                                         CFT006
045000200529      * Tags that indicate start of a sequence (other than B)                   CFT006
045100200529      *                                                                         CFT006
045200200529     I              ':20:'                C         BG101A                      CFT006
045300200529     I              ':20:'                C         BG102A                      CFT006
045400200529     I              ':32A:'               C         BG102C                      CFT006
045500200529     I/EJECT
045600200529      *****************************************************************
045700200529      *                 M A I N L I N E
045800200529      *****************************************************************
045900200529      *
046000200529      *  Set up subroutine stack name
046100200529      *
046200200529     C                     ADD  1         Q
046300200529     C                     MOVEL'MAIN'    @STK,Q
046400200529      *
046500200529      *  Define entry parameters
046600200529      *
046700200529     C           *ENTRY    PLIST
046800200529     C                     PARM           W0RTN   7
046900200529      *
047000200529      *  Initialise program
047100200529      *
047200200529     C           *IN50     IFEQ '0'
047300200529     C                     EXSR SRINIT
047400200529     C                     END
047500200529      *
047600200529      * Read available SWIFT messages until EOF
047700200529      *
047800200529     C           *LOVAL    SETLLMSIXI2LD
047900200529     C                     READ MSIXI2LD                 60
048000200529     C                     MOVEL*BLANKS   W0PREF
048100200529     C                     MOVELMOR       W0PREF
048200200529      *
048300200529     C           *IN60     DOWEQ'0'
048400200529      *
048500200529      * Verify SWIFT message
048600200529      *
048700200529     C                     EXSR SRVALD
048800200529      *
048900200529      * If valid message to be used - extract SWIFT data and update
049000200529      * database
049100200529      *
049200200529     C           W1RTN     IFEQ 'MIN0090'
049300200529      *
049400200529     C                     EXSR SRSWFT
049500200529      *
049600200529      * Add Incoming Message Details
049700200529      *
049800200529     C                     EXSR SRDETL
049900200529      *
050000200529      * Add Incoming Message Control
050100200529      *
050200200529     C                     EXSR SRHEAD
050300200529      *
050400200529      * Call MT920 processing                                                                 CGL013
050500200529      *                                                                                       CGL013
050600200529     C           CGL013    IFEQ 'Y'                                                           CGL013
050700200529     C           MTPY      ANDEQ'920'                                                         CGL013
050800200529     C                     EXSR MT920                                                         CGL013
050900200529     C                     ENDIF                                                              CGL013
051000200529      *
051100200529      * Set Incoming Msg Processed Flag to 'P' on MSIXI2LD
051200200529      *
051300200529     C                     MOVEL'P'       IMPF
051400200529     C                     EXCPTMSIXI2
051500200529     C                     COMIT
051600200529      *
051700200529      *  Prompt FT Auto Generation
051800200529      *
051900200529     C                     EXSR SRAUTO
052000200529      *
052100200529     C*******              END                                                                CGL013
052200200529     C                     ELSE                                                               CGL013
052300200529      *                                                                                       CGL013
052400200529      * Call MT920 processing                                                                 CGL013
052500200529      *                                                                                       CGL013
052600200529     C           CGL013    IFEQ 'Y'                                                           CGL013
052700200529     C           MTPY      ANDEQ'920'                                                         CGL013
052800200529     C                     EXSR MT920                                                         CGL013
052900200529      *                                                                                       CGL013
053000200529      * Set Incoming Msg Processed Flag to 'P' on MSIXI2LD                                    CGL013
053100200529      *                                                                                       CGL013
053200200529     C                     MOVEL'P'       IMPF                                                CGL013
053300200529     C                     EXCPTMSIXI2                                                        CGL013
053400200529     C                     COMIT                                                              CGL013
053500200529     C                     ENDIF                                                              CGL013
053600200529     C                     ENDIF                                                              CGL013
053700200529      *
053800200529      * Get next available SWIFT record
053900200529      *
054000200529     C                     READ MSIXI2LD                 60
054100200529     C                     MOVEL*BLANKS   W0PREF
054200200529     C                     MOVELMOR       W0PREF
054300200529      *
054400200529      * Check for shut down / cancellation
054500200529      *
054600200529     C                     SHTDN                     64
054700200529      *
054800200529     C           *IN64     IFEQ '1'
054900200529     C                     MOVEL'1'       *INLR
055000200529     C                     RETRN
055100200529     C                     END
055200200529      *
055300200529     C                     END
055400200529      *
055500200529      *  Unwind subroutine stack name
055600200529      *
055700200529     C                     MOVEA*BLANKS   @STK,Q
055800200529     C                     SUB  1         Q
055900200529      *
056000200529     C                     RETRN
056100200529     C/EJECT
056200200529      *****************************************************************
056300200529      *                                                               *
056400200529      *  SRVALD   : Validate SWIFT Message                            *
056500200529      *                                                               *
056600200529      *  CALLED BY: Main processing section                           *
056700200529      *                                                               *
056800200529      *  CALLS    : SRERR   - report error and close down program     *
056900200529      *                                                               *
057000200529      *****************************************************************
057100200529     CSR         SRVALD    BEGSR
057200200529      *
057300200529      *  Set up subroutine stack name
057400200529      *
057500200529     C                     ADD  1         Q
057600200529     C                     MOVEL'SRVALD'  @STK,Q
057700200529      *
057800200529      * Set up data structure to be passed as a parameter
057900200529      *
058000200529     C                     CLEARINMC
058100200529      *
058200200529     C                     Z-ADD0         MCMSGR
058300200529     C                     MOVELMTPY      MCMTPY
058400200529     C                     MOVELMIR       MCMIR
058500200529     C/COPY WNCPYSRC,MS1900C024
058600200529     C                     MOVEL'SWIFT'   MCNWRK
058700200529     C/COPY WNCPYSRC,MS1900C025
058800200529     C                     MOVELMOR       MCMOR
058900200529     C                     MOVEL'*ENTRY ' MCACPT
059000200529     C                     MOVELSNDR      MCSNDR
059100200529     C                     MOVEL##PGM     MCCPGM
059200200529      *
059300200529     C/COPY WNCPYSRC,MS1900C020
059400200529      * Verify SWIFT message
059500200529      *
059600200529     C                     MOVELINMC      W1DATA
059700200529      *
059800200529     C                     CALL 'ME1020'               90
059900200529     C                     PARM '*ADDMSG 'W1ACT   8
060000200529     C                     PARM           W1DATA
060100200529     C                     PARM *BLANKS   W1RTN   7
060200200529      *
060300200529      *  If return with an error (LR seton in called program) then
060400200529      *  process for database error.
060500200529      *
060600200529     C           *IN90     IFEQ '1'
060700200529     C           W1RTN     OREQ '*ERROR*'
060800200529     C                     MOVEL'ME1020  'W0FILE
060900200529     C                     MOVEL'*CALL'   W0KEY            ***************
061000200529     C                     Z-ADD1         W0ERNB           * DB ERROR 01 *
061100200529     C                     MOVEL'MEM5003' W0MSGD           ***************
061200200529     C                     MOVEL'MIDAS  ' W0MSGF
061300200529     C                     EXSR SRERR
061400200529     C                     END
061500200529      *
061600200529      *  If return with invalid message,
061700200529      *  set Incoming Msg Processed Flag to 'I' Invalid, on MSIXI2LD
061800200529      *
061900200529      *  Or message is S.W.I.F.T. Specific
062000200529      *
062100200529     C           W1RTN     IFEQ 'MIN0091'
062200200529     C           MTPY      ORGE '000'
062300200529     C           MTPY      ANDLT'100'
062400200529     C/COPY WNCPYSRC,MS1900C023
062500200529     C           CGL013    IFEQ 'Y'                                                           CGL013
062600200529     C           MTPY      ANDNE'920'                                                         CGL013
062700200529     C           CGL013    ORNE 'Y'                                                           CGL013
062800200529     C                     MOVEL'MIN0091' W1RTN
062900200529     C                     MOVEL'I'       IMPF
063000200529     C                     EXCPTMSIXI2
063100200529     C                     COMIT
063200200529     C                     ENDIF                                                              CGL013
063300200529      *
063400200529      *  If return with valid message,
063500200529      *  set data structure with returned fields - unique msg ref.
063600200529      *
063700200529     C                     ELSE
063800200529     C                     MOVELW1DATA    INMC
063900200529     C                     END
064000200529      *
064100200529      *  Unwind subroutine stack name
064200200529      *
064300200529     C           EXVALD    TAG
064400200529     C                     MOVEA*BLANKS   @STK,Q
064500200529     C                     SUB  1         Q
064600200529      *
064700200529     CSR                   ENDSR
064800200529     C/EJECT
064900200529      *****************************************************************
065000200529      *                                                               *
065100200529      *  SRSWFT   : Extract Data From SWIFT Message                   *
065200200529      *                                                               *
065300200529      *  CALLED BY: Main processing section                           *
065400200529      *                                                               *
065500200529      *  CALLS    : SRERR   - report error and close down program     *
065600200529      *                                                               *
065700200529      *****************************************************************
065800200529     CSR         SRSWFT    BEGSR
065900200529      *
066000200529      *  Set up subroutine stack name
066100200529      *
066200200529     C                     ADD  1         Q
066300200529     C                     MOVEL'SRSWFT'  @STK,Q
066400200529      *
066500200529      *  Initialise fields
066600200529      *
066700200529     C                     MOVEL*BLANKS   SWD
066800200529     C                     Z-ADD1         D
066900200529     C                     MOVEL'0'       *IN61
067000200529     C           CFT014    IFEQ 'Y'                                       CFT014
067100200529      * Clear big array                                                   CFT014
067200200529     C                     EXSR CLRARR                                    CFT014
067300200529     C                     Z-ADD32767     LENMAX                          CFT014
067400200529     C                     ELSE                                           CFT014
067500200529     C                     Z-ADD9999      LENMAX                          CFT014
067600200529     C                     ENDIF                                          CFT014
067700200529      *
067800200529      * Get all records for SWIFT message and place all associated
067900200529      * records into array. A maximum of 10 records is assumed.
068000200529      *
068100200529     C           MOR       SETLLMSMSI2LA
068200200529     C           MOR       READEMSMSI2LA                 61
068300200529      *
068400200529     C           *IN61     DOWEQ'0'
068500200529      *
068600200529      **IF*more*than*10*lines*of*data,*process*for*database*error******   CSW095
068700200529      * IF more than 9999 characters, process for database error          CSW095
068800200529      * ELSE move data to array
068900200529      *
069000200529     C***********D         IFGT 2560                                      CSW095
069100200529     C***********D         IFGT 9999                               CSW095 CFT014
069200200529     C           D         IFGT LENMAX                                    CFT014
069300200529     C                     MOVEL'ME1020  'W0FILE
069400200529     C                     MOVELWKDATA    W0KEY            ***************
069500200529     C                     Z-ADD2         W0ERNB           * DB ERROR 02 *
069600200529     C**********           MOVEL'MIN0094' W0MSGD           ***************CSW095
069700200529     C                     MOVEL'MIN0251' W0MSGD                          CSW095
069800200529     C                     MOVEL'MEMSG  ' W0MSGF
069900200529     C                     EXSR SRERR
070000200529     C                     ELSE
070100200529     C           CFT014    IFEQ 'Y'                                       CFT014
070200200529      * Fill big array                                                    CFT014
070300200529     C                     MOVELMDTA      P@FCT1                          CFT014
070400200529     C                     Z-ADDD         P@LEN2                          CFT014
070500200529     C                     EXSR FILARR                                    CFT014
070600200529     C                     ELSE                                           CFT014
070700200529     C                     MOVEAMDTA      SWD,D
070800200529     C                     ENDIF                                          CFT014
070900200529     C                     END
071000200529      *
071100200529      *  Get next record. If it is for SWIFT message then determine
071200200529      *  where to fill array.
071300200529      *
071400200529     C           MOR       READEMSMSI2LA                 61
071500200529      *
071600200529     C                     ADD  256       D
071700200529      *
071800200529     C                     END
071900200529      *
072000200529      *  Unwind subroutine stack name
072100200529      *
072200200529     C           EXSWFT    TAG
072300200529     C                     MOVEA*BLANKS   @STK,Q
072400200529     C                     SUB  1         Q
072500200529      *
072600200529     CSR                   ENDSR
072700200529     C/EJECT
072800200529      *****************************************************************
072900200529      *                                                               *
073000200529      *  SRDETL   : Add Incoming Message Details                      *
073100200529      *                                                               *
073200200529      *  CALLED BY: Main processing section                           *
073300200529      *                                                               *
073400200529      *  CALLS    :                                                   *
073500200529      *                                                               *
073600200529      *****************************************************************
073700200529     CSR         SRDETL    BEGSR
073800200529      *
073900200529      *  Set up subroutine stack name
074000200529      *
074100200529     C                     ADD  1         Q
074200200529     C                     MOVEL'SRDETL'  @STK,Q
074300200529      *
074400200529      *  Initialise message fields and work fields
074500200529      *
074600200529     C                     Z-ADD0         WKPART
074700200529     C                     Z-ADD0         WKSEQ
074800200529     C                     MOVEL*BLANKS   WSQANZ                          CFT006
074900200529     C                     MOVEL*BLANKS   WKSVDT
075000200529     C                     MOVEL*BLANKS   WKCYCD
075100200529     C                     MOVEL*BLANKS   WKAMTS
075200200529     C                     MOVEL*BLANKS   WKPDE
075300200529     C                     MOVEL*BLANKS   WKSPD
075400200529     C                     MOVEL*BLANKS   WKTAG
075500200529     C                     MOVEL*BLANKS   WKDATA
075600200529      *
075700200529     C                     MOVEL*BLANKS   L2INBK
075800200529     C                     MOVEL*BLANKS   L2ACIN
075900200529     C                     MOVEL*BLANKS   L2BENF
076000200529      *
076100200529      *  Clear Incoming Message Control file data structure
076200200529      *  (other data structures are cleared more frequently)
076300200529      *
076400200529     C                     CLEARINCR
076500200529      *                                                                   CFT006
076600200529      *  Same thing applies to MT101 MT102 specific control files         CFT006
076700200529     C                     CLEARIRFT                                      CFT006
076800200529      *
076900200529      *  Construct Sender Information from MSIXI2LD
077000200529      ** Move the Sender SWIFT address directly to the output field for   088608
077100200529      ** IMM database update access object                                088608
077200200529      *
077300200529     C***********          MOVELSTID1     SNDR1                           088608
077400200529     C***********          MOVELSTID3     SNDR2                           088608
077500200529     C***********          MOVEL*BLANKS   SNDR3                           088608
077600200529     C                     MOVEL*BLANK    SNDR                            088608
077700200529     C           ' '       SCAN STID      @LEN    20     99               176887
077800200529     C           *IN99     IFEQ '0'                                       176887
077900200529     C           @LEN      OREQ 9                                         176887
078000200529     C           STID1     CAT  STID3     SNDR                            176887
078100200529     C                     ELSE                                           176887
078200200529     C                     MOVELSTID      SNDR                            088608
078300200529     C                     END                                            176887
078400200529      * If MT101 :51A: is optional.                                       CFT006
078500200529      * In order to respect unicity of key in MEIRFTL0                    CFT006
078600200529      * put sender into sending institution                               CFT006
078700200529     C           MTPY      IFEQ '101'                                     CFT006
078800200529     C                     MOVELSNDR      SNDIST                          CFT006
078900200529     C                     ENDIF                                          CFT006
079000200529      *
079100200529      *  Determine which tag no. denotes the start of a new Part No.
079200200529      *  for the message type.
079300200529      *
079400200529      *  Look up a table and if the message type is not found then use
079500200529      *  tag :20 as the default.
079600200529      *
079700200529     C                     Z-ADD1         X
079800200529     C           MTPY      LOKUPSTYP,X                   63
079900200529      *
080000200529     C           *IN63     IFEQ '1'
080100200529     C                     MOVELSTAG,X    PSTAG   3
080200200529     C                     ELSE
080300200529     C                     MOVEL':20'     PSTAG
080400200529     C                     END
080500200529      *
080600200529      *  Determine which tag no. denotes the source of the Transaction
080700200529      *  Reference field for the message type.
080800200529      *
080900200529      *  Look up a table and if the message type is not found then use
081000200529      *  tag :20 as the default.
081100200529      *
081200200529     C                     Z-ADD1         X
081300200529     C           MTPY      LOKUPRTYP,X                   63
081400200529      *
081500200529     C           *IN63     IFEQ '1'
081600200529     C                     MOVELRTAG,X    TRTAG   3
081700200529     C                     ELSE
081800200529     C                     MOVEL':20'     TRTAG
081900200529     C                     END
082000200529      *
082100200529      *  /Copy point for User Specific Translation
082200200529      *
082300200529     C/COPY WNCPYSRC,MS1900DUSP
082400200529      *
082500200529      *  Process Block Identifier 1:
082600200529      *
082700200529     C                     EXSR SRBLK1
082800200529      *
082900200529      *  Process Block Identifier 2:
083000200529      *
083100200529     C                     EXSR SRBLK2
083200200529      *
083300200529      *  Process Block Identifier 3:
083400200529      *
083500200529     C                     EXSR SRBLK3
083600200529      *
083700200529      *  Process Block Identifier 4:
083800200529      *
083900200529     C/COPY WNCPYSRC,MS1900C014
084000200529     C                     EXSR SRBLK4
084100200529     C/COPY WNCPYSRC,MS1900C015
084200200529      *
084300200529      *  Process Block Identifier 5:
084400200529      *
084500200529     C                     EXSR SRBLK5
084600200529      *
084700200529      *  Process Block Identifier S:
084800200529      *
084900200529     C                     EXSR SRBLKS
085000200529      *
085100200529      *  Unwind subroutine stack name
085200200529      *
085300200529     C           EXDETL    TAG
085400200529     C                     MOVEA*BLANKS   @STK,Q
085500200529     C                     SUB  1         Q
085600200529      *
085700200529     CSR                   ENDSR
085800200529     C/EJECT
085900200529      *****************************************************************
086000200529      *                                                               *
086100200529      *  SRBLK1   : Process Block Identifier 1                        *
086200200529      *                                                               *
086300200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
086400200529      *                                                               *
086500200529      *  CALLS    :                                                   *
086600200529      *                                                               *
086700200529      *****************************************************************
086800200529     CSR         SRBLK1    BEGSR
086900200529      *
087000200529      *  Set up subroutine stack name
087100200529      *
087200200529     C                     ADD  1         Q
087300200529     C                     MOVEL'SRBLK1'  @STK,Q
087400200529      *
087500200529      * Extract Block I.D. and place in parameter data structure
087600200529      *
087700200529      * Search starts from the closing bracket of the previous block.
087800200529      * As this is the first block default the start posn to 1
087900200529      *
088000200529     C                     MOVEL'1:'      BLKID   2
088100200529     C                     Z-ADD1         C
088200200529     C                     EXSR SRBLOK
088300200529      *
088400200529      * If no Block 1: found process for database error
088500200529      *
088600200529     C           WKTAG     IFEQ *BLANKS
088700200529     C                     MOVEL'ME1020  'W0FILE
088800200529     C                     MOVELWKDATA    W0KEY            ***************
088900200529     C                     Z-ADD3         W0ERNB           * DB ERROR 03 *
089000200529     C                     MOVEL'MIN0093' W0MSGD           ***************
089100200529     C                     MOVEL'MEMSG  ' W0MSGF
089200200529     C                     EXSR SRERR
089300200529     C                     END
089400200529      *
089500200529      * Extract data string
089600200529      *
089700200529      * Setup start position - will always be the first character after
089800200529      * the end of the Block I.D.
089900200529      *
090000200529     C           E         ADD  1         S                Start Posn
090100200529     C                     EXSR SRDATA
090200200529      *
090300200529      *  Set flag to denote first line of tag
090400200529      *
090500200529     C                     MOVEL'F'       WKFPID
090600200529      *
090700200529      *  Add message line details to database. The block no. is used
090800200529      *  as the message tag.
090900200529      *
091000200529     C                     EXSR SRUPDT
091100200529      *
091200200529      *  Unwind subroutine stack name
091300200529      *
091400200529     C           EXBLK1    TAG
091500200529     C                     MOVEA*BLANKS   @STK,Q
091600200529     C                     SUB  1         Q
091700200529      *
091800200529     CSR                   ENDSR
091900200529     C/EJECT
092000200529      *****************************************************************
092100200529      *                                                               *
092200200529      *  SRBLK2   : Process Block Identifier 2                        *
092300200529      *                                                               *
092400200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
092500200529      *                                                               *
092600200529      *  CALLS    :                                                   *
092700200529      *                                                               *
092800200529      *****************************************************************
092900200529     CSR         SRBLK2    BEGSR
093000200529      *
093100200529      *  Set up subroutine stack name
093200200529      *
093300200529     C                     ADD  1         Q
093400200529     C                     MOVEL'SRBLK2'  @STK,Q
093500200529      *
093600200529      * Extract Block I.D.
093700200529      *
093800200529     C                     MOVEL'2:'      BLKID
093900200529     C                     EXSR SRBLOK
094000200529      *
094100200529      * If no Block 2: found process for database error
094200200529      *
094300200529     C           WKTAG     IFEQ *BLANKS
094400200529     C                     MOVEL'ME1020  'W0FILE
094500200529     C                     MOVELWKDATA    W0KEY            ***************
094600200529     C                     Z-ADD4         W0ERNB           * DB ERROR 04 *
094700200529     C                     MOVEL'MIN0093' W0MSGD           ***************
094800200529     C                     MOVEL'MEMSG  ' W0MSGF
094900200529     C                     EXSR SRERR
095000200529     C                     END
095100200529      *
095200200529      * Extract data string
095300200529      *
095400200529      * Set up start posn - will always be the first character after
095500200529      * the end of the tag no.
095600200529      *
095700200529     C           E         ADD  1         S                Start Posn
095800200529     C                     EXSR SRDATA
095900200529      *
096000200529      *  The first character of the message data denotes whether it is
096100200529      *  an Incoming or Outgoing message.
096200200529      *
096300200529      *  If 'I' for Incoming, results in a database error as Incoming
096400200529      *  message processing is not catered for.
096500200529      *
096600200529      *  If 'O' for Outgoing, Sent date and time will be stored on the
096700200529      *  Incoming Message Control file.
096800200529      *
096900200529     C                     MOVELWKDATA    DSBLK2
097000200529      *
097100200529     C           B2IO      IFEQ 'I'
097200200529     C                     MOVEL'ME1020  'W0FILE
097300200529     C                     MOVELWKDATA    W0KEY            ***************
097400200529     C                     Z-ADD5         W0ERNB           * DB ERROR 05 *
097500200529     C                     MOVEL'MIN0092' W0MSGD           ***************
097600200529     C                     MOVEL'MEMSG  ' W0MSGF
097700200529     C                     EXSR SRERR
097800200529     C                     END
097900200529      *
098000200529      *  Set flag to denote first line of tag
098100200529      *
098200200529     C                     MOVEL'F'       WKFPID
098300200529      *
098400200529      *  Add message line details to database. Block No. is used as the
098500200529      *  tag no.
098600200529      *
098700200529     C                     EXSR SRUPDT
098800200529      *
098900200529      *  Unwind subroutine stack name
099000200529      *
099100200529     C           EXBLK2    TAG
099200200529     C                     MOVEA*BLANKS   @STK,Q
099300200529     C                     SUB  1         Q
099400200529      *
099500200529     CSR                   ENDSR
099600200529     C/EJECT
099700200529      *****************************************************************
099800200529      *                                                               *
099900200529      *  SRBLK3   : Process Block Identifier 3                        *
100000200529      *                                                               *
100100200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
100200200529      *                                                               *
100300200529      *  CALLS    :                                                   *
100400200529      *                                                               *
100500200529      *****************************************************************
100600200529     CSR         SRBLK3    BEGSR
100700200529      *
100800200529      *  Set up subroutine stack name
100900200529      *
101000200529     C           CSW209    IFEQ 'Y'                                                           CSW209
101100200529     C                     MOVEL*BLANKS   WKVALF  8                                           CSW209
101200200529     C                     ENDIF                                                              CSW209
101300200529     C                     ADD  1         Q
101400200529     C                     MOVEL'SRBLK3'  @STK,Q
101500200529     C/COPY WNCPYSRC,MS1900C005
101600200529      *
101700200529      *  Extract Block I.D.
101800200529      *
101900200529     C                     MOVEL'3:'      BLKID
102000200529     C                     EXSR SRBLOK
102100200529      *
102200200529      *  Only process if Block Identifier is found - add header tag
102300200529      *
102400200529     C           WKTAG     IFNE *BLANKS
102500200529     C                     MOVEL*BLANKS   WKDATA
102600200529      *
102700200529      *  Set flag to denote first line of tag
102800200529      *
102900200529     C                     MOVEL'F'       WKFPID
103000200529     C                     EXSR SRUPDT
103100200529     C/COPY WNCPYSRC,MS1900C006
103200200529      *
103300200529      *  Block Identifier 3 may have two different tags. Each tag
103400200529      *  is of the format {nnn:xxxxx}
103500200529      *
103600200529      *  May be in the order of {113: {108: or vice versa. To allow for
103700200529      *  this, commence the search of each tag from the end of the
103800200529      *  Block I.D.
103900200529      *
104000200529     C                     Z-ADDE         B
104100200529     C/COPY WNCPYSRC,MS1900C011
104200200529      *
104300200529      *              *****************************
104400200529      *
104500200529      *  Extract tag '113:'
104600200529      *
104700200529      *
104800200529      *  Clear message tag field
104900200529      *
105000200529      *  Determine Start position of tag - begin search from end of
105100200529      *  block identifier
105200200529      *
105300200529     C                     MOVEL*BLANKS   WKTAG
105400200529      *
105500200529     C                     MOVEL'{113:'   TAGID   5
105600200529      *
105700200529     C           CFT014    IFEQ 'Y'                                       CFT014
105800200529     C                     MOVELTAGID     P@FCT1                          CFT014
105900200529     C                     Z-ADD5         P@LEN1                          CFT014
106000200529     C                     Z-ADDB         P@LEN2                          CFT014
106100200529     C                     EXSR SCNARR                                    CFT014
106200200529     C                     Z-ADDWRN05     S                               CFT014
106300200529     C                     ELSE                                           CFT014
106400200529     C           TAGID:5   SCAN DSSWD:B   S
106500200529     C                     ENDIF                                          CFT014
106600200529      *
106700200529      *  If Tag found, extract data which exists between tag no. and
106800200529      *  next closing bracket
106900200529      *
107000200529      *  Beginning of tag no. is the position after the open bracket
107100200529      *
107200200529      *  End of the tag no. is the next colon, start search after
107300200529      *  start position of the tag reference
107400200529      *
107500200529     C           S         IFNE 0
107600200529     C                     MOVEL'113:'    WKTAG
107700200529      *
107800200529     C           CFT014    IFEQ 'Y'                                       CFT014
107900200529     C                     MOVEL':'       P@FCT1                          CFT014
108000200529     C                     Z-ADD1         P@LEN1                          CFT014
108100200529     C                     Z-ADDS         P@LEN2                          CFT014
108200200529     C                     EXSR SCNARR                                    CFT014
108300200529     C                     Z-ADDWRN05     E                               CFT014
108400200529     C                     ELSE                                           CFT014
108500200529     C           ':':1     SCAN DSSWD:S   E
108600200529     C                     ENDIF                                          CFT014
108700200529      *
108800200529      *  Extract data string starting from position after end of tag
108900200529      *
109000200529     C           E         ADD  1         S
109100200529     C                     EXSR SRDATA
109200200529      *
109300200529      *  Set flag to denote first line of tag
109400200529      *
109500200529     C                     MOVEL'F'       WKFPID
109600200529      *
109700200529      *  Add message line details to database
109800200529      *
109900200529     C                     EXSR SRUPDT
110000200529     C/COPY WNCPYSRC,MS1900C007
110100200529      *
110200200529     C                     END
110300200529      *
110400200529      *              *****************************
110500200529      *
110600200529      *  Extract tag '108:'
110700200529      *
110800200529      *  Clear message tag field
110900200529      *
111000200529      *  Determine Start position of tag - begin search from end of
111100200529      *  block identifier
111200200529      *
111300200529     C                     MOVEL*BLANKS   WKTAG
111400200529      *
111500200529     C                     MOVEL'{108:'   TAGID
111600200529      *
111700200529     C           CFT014    IFEQ 'Y'                                       CFT014
111800200529     C                     MOVELTAGID     P@FCT1                          CFT014
111900200529     C                     Z-ADD5         P@LEN1                          CFT014
112000200529     C                     Z-ADDB         P@LEN2                          CFT014
112100200529     C                     EXSR SCNARR                                    CFT014
112200200529     C                     Z-ADDWRN05     S                               CFT014
112300200529     C                     ELSE                                           CFT014
112400200529     C           TAGID:5   SCAN DSSWD:B   S
112500200529     C                     ENDIF                                          CFT014
112600200529      *
112700200529      *  If Tag found, extract data that exists between end of tag no.
112800200529      *  and next closing bracket
112900200529      *
113000200529      *  Beginning of tag no. is the position after the open bracket
113100200529      *
113200200529      *  End of the tag no. is the next colon, start search after
113300200529      *  start position of the tag reference
113400200529      *
113500200529     C           S         IFNE 0
113600200529     C                     MOVEL'108:'    WKTAG
113700200529      *
113800200529     C           CFT014    IFEQ 'Y'                                       CFT014
113900200529     C                     MOVEL':'       P@FCT1                          CFT014
114000200529     C                     Z-ADD1         P@LEN1                          CFT014
114100200529     C                     Z-ADDS         P@LEN2                          CFT014
114200200529     C                     EXSR SCNARR                                    CFT014
114300200529     C                     Z-ADDWRN05     E                               CFT014
114400200529     C                     ELSE                                           CFT014
114500200529     C           ':':1     SCAN DSSWD:S   E
114600200529     C                     ENDIF                                          CFT014
114700200529      *
114800200529      *  Extract data string starting from position after end of tag
114900200529      *
115000200529     C           E         ADD  1         S
115100200529     C                     EXSR SRDATA
115200200529      *
115300200529      *  Set flag to denote first line of tag
115400200529      *
115500200529     C                     MOVEL'F'       WKFPID
115600200529      *
115700200529      *  Add message line details to database
115800200529      *
115900200529     C                     EXSR SRUPDT
116000200529     C/COPY WNCPYSRC,MS1900C008
116100200529      *
116200200529     C                     END
116300200529     C/COPY WNCPYSRC,MS1900C004
116400200529      *                                                                                       CSW209
116500200529      ** Perform only if CSW209 is switch on                                                  CSW209
116600200529      *                                                                                       CSW209
116700200529     C           CSW209    IFEQ 'Y'                                                           CSW209
116800200529      *                                                                                       CSW209
116900200529      **             *****************************                                            CSW209
117000200529      **                                                                                      CSW209
117100200529      ** Extract tag '103:'                                                                   CSW209
117200200529      **                                                                                      CSW209
117300200529      **                                                                                      CSW209
117400200529      ** Clear message tag field                                                              CSW209
117500200529      **                                                                                      CSW209
117600200529      ** Determine Start position of tag - begin search from end of                           CSW209
117700200529      ** block identifier                                                                     CSW209
117800200529      *                                                                                       CSW209
117900200529     C                     MOVEL*BLANKS   WKTAG                                               CSW209
118000200529      *                                                                                       CSW209
118100200529     C                     MOVEL'{103:'   TAGID   5                                           CSW209
118200200529      *                                                                                       CSW209
118300200529     C           CFT014    IFEQ 'Y'                                                           CSW209
118400200529     C                     MOVELTAGID     P@FCT1                                              CSW209
118500200529     C                     Z-ADD5         P@LEN1                                              CSW209
118600200529     C                     Z-ADDB         P@LEN2                                              CSW209
118700200529     C                     EXSR SCNARR                                                        CSW209
118800200529     C                     Z-ADDWRN05     S                                                   CSW209
118900200529     C                     ELSE                                                               CSW209
119000200529     C           TAGID:5   SCAN DSSWD:B   S                                                   CSW209
119100200529     C                     ENDIF                                                              CSW209
119200200529      *                                                                                       CSW209
119300200529      ** If Tag found, extract data which exists between tag no. and                          CSW209
119400200529      ** next closing bracket                                                                 CSW209
119500200529      **                                                                                      CSW209
119600200529      ** Beginning of tag no. is the position after the open bracket                          CSW209
119700200529      **                                                                                      CSW209
119800200529      ** End of the tag no. is the next colon, start search after                             CSW209
119900200529      ** start position of the tag reference                                                  CSW209
120000200529      *                                                                                       CSW209
120100200529     C           S         IFNE 0                                                             CSW209
120200200529     C                     MOVEL'103:'    WKTAG                                               CSW209
120300200529      *                                                                                       CSW209
120400200529     C           CFT014    IFEQ 'Y'                                                           CSW209
120500200529     C                     MOVEL':'       P@FCT1                                              CSW209
120600200529     C                     Z-ADD1         P@LEN1                                              CSW209
120700200529     C                     Z-ADDS         P@LEN2                                              CSW209
120800200529     C                     EXSR SCNARR                                                        CSW209
120900200529     C                     Z-ADDWRN05     E                                                   CSW209
121000200529     C                     ELSE                                                               CSW209
121100200529     C           ':':1     SCAN DSSWD:S   E                                                   CSW209
121200200529     C                     ENDIF                                                              CSW209
121300200529      *                                                                                       CSW209
121400200529      ** Extract data string starting from position after end of tag                          CSW209
121500200529      *                                                                                       CSW209
121600200529     C           E         ADD  1         S                                                   CSW209
121700200529     C                     EXSR SRDATA                                                        CSW209
121800200529      *                                                                                       CSW209
121900200529      ** Set flag to denote first line of tag                                                 CSW209
122000200529      *                                                                                       CSW209
122100200529     C                     MOVEL'F'       WKFPID                                              CSW209
122200200529      *                                                                                       CSW209
122300200529      ** Add message line details to database                                                 CSW209
122400200529      *                                                                                       CSW209
122500200529     C                     EXSR SRUPDT                                                        CSW209
122600200529      *                                                                                       CSW209
122700200529     C                     END                                                                CSW209
122800200529      *                                                                                       CSW209
122900200529      *                                                                                       CSW209
123000200529      **             *****************************                                            CSW209
123100200529      **                                                                                      CSW209
123200200529      ** Extract tag '115:'                                                                   CSW209
123300200529      **                                                                                      CSW209
123400200529      **                                                                                      CSW209
123500200529      ** Clear message tag field                                                              CSW209
123600200529      **                                                                                      CSW209
123700200529      ** Determine Start position of tag - begin search from end of                           CSW209
123800200529      ** block identifier                                                                     CSW209
123900200529      *                                                                                       CSW209
124000200529     C                     MOVEL*BLANKS   WKTAG                                               CSW209
124100200529      *                                                                                       CSW209
124200200529     C                     MOVEL'{115:'   TAGID   5                                           CSW209
124300200529      *                                                                                       CSW209
124400200529     C           CFT014    IFEQ 'Y'                                                           CSW209
124500200529     C                     MOVELTAGID     P@FCT1                                              CSW209
124600200529     C                     Z-ADD5         P@LEN1                                              CSW209
124700200529     C                     Z-ADDB         P@LEN2                                              CSW209
124800200529     C                     EXSR SCNARR                                                        CSW209
124900200529     C                     Z-ADDWRN05     S                                                   CSW209
125000200529     C                     ELSE                                                               CSW209
125100200529     C           TAGID:5   SCAN DSSWD:B   S                                                   CSW209
125200200529     C                     ENDIF                                                              CSW209
125300200529      *                                                                                       CSW209
125400200529      ** If Tag found, extract data which exists between tag no. and                          CSW209
125500200529      ** next closing bracket                                                                 CSW209
125600200529      **                                                                                      CSW209
125700200529      ** Beginning of tag no. is the position after the open bracket                          CSW209
125800200529      **                                                                                      CSW209
125900200529      ** End of the tag no. is the next colon, start search after                             CSW209
126000200529      ** start position of the tag reference                                                  CSW209
126100200529      *                                                                                       CSW209
126200200529     C           S         IFNE 0                                                             CSW209
126300200529     C                     MOVEL'115:'    WKTAG                                               CSW209
126400200529      *                                                                                       CSW209
126500200529     C           CFT014    IFEQ 'Y'                                                           CSW209
126600200529     C                     MOVEL':'       P@FCT1                                              CSW209
126700200529     C                     Z-ADD1         P@LEN1                                              CSW209
126800200529     C                     Z-ADDS         P@LEN2                                              CSW209
126900200529     C                     EXSR SCNARR                                                        CSW209
127000200529     C                     Z-ADDWRN05     E                                                   CSW209
127100200529     C                     ELSE                                                               CSW209
127200200529     C           ':':1     SCAN DSSWD:S   E                                                   CSW209
127300200529     C                     ENDIF                                                              CSW209
127400200529      *                                                                                       CSW209
127500200529      ** Extract data string starting from position after end of tag                          CSW209
127600200529      *                                                                                       CSW209
127700200529     C           E         ADD  1         S                                                   CSW209
127800200529     C                     EXSR SRDATA                                                        CSW209
127900200529      *                                                                                       CSW209
128000200529      ** Set flag to denote first line of tag                                                 CSW209
128100200529      *                                                                                       CSW209
128200200529     C                     MOVEL'F'       WKFPID                                              CSW209
128300200529      *                                                                                       CSW209
128400200529      ** Add message line details to database                                                 CSW209
128500200529      *                                                                                       CSW209
128600200529     C                     EXSR SRUPDT                                                        CSW209
128700200529      *                                                                                       CSW209
128800200529     C                     END                                                                CSW209
128900200529      *                                                                                       CSW209
129000200529      **             *****************************                                            CSW209
129100200529      **                                                                                      CSW209
129200200529      ** Extract tag '119:'                                                                   CSW209
129300200529      **                                                                                      CSW209
129400200529      **                                                                                      CSW209
129500200529      ** Clear message tag field                                                              CSW209
129600200529      **                                                                                      CSW209
129700200529      ** Determine Start position of tag - begin search from end of                           CSW209
129800200529      ** block identifier                                                                     CSW209
129900200529      *                                                                                       CSW209
130000200529     C                     MOVEL*BLANKS   WKTAG                                               CSW209
130100200529      *                                                                                       CSW209
130200200529     C                     MOVEL'{119:'   TAGID   5                                           CSW209
130300200529      *                                                                                       CSW209
130400200529     C           CFT014    IFEQ 'Y'                                                           CSW209
130500200529     C                     MOVELTAGID     P@FCT1                                              CSW209
130600200529     C                     Z-ADD5         P@LEN1                                              CSW209
130700200529     C                     Z-ADDB         P@LEN2                                              CSW209
130800200529     C                     EXSR SCNARR                                                        CSW209
130900200529     C                     Z-ADDWRN05     S                                                   CSW209
131000200529     C                     ELSE                                                               CSW209
131100200529     C           TAGID:5   SCAN DSSWD:B   S                                                   CSW209
131200200529     C                     ENDIF                                                              CSW209
131300200529      *                                                                                       CSW209
131400200529      ** If Tag found, extract data which exists between tag no. and                          CSW209
131500200529      ** next closing bracket                                                                 CSW209
131600200529      **                                                                                      CSW209
131700200529      ** Beginning of tag no. is the position after the open bracket                          CSW209
131800200529      **                                                                                      CSW209
131900200529      ** End of the tag no. is the next colon, start search after                             CSW209
132000200529      ** start position of the tag reference                                                  CSW209
132100200529      *                                                                                       CSW209
132200200529     C           S         IFNE 0                                                             CSW209
132300200529     C                     MOVEL'119:'    WKTAG                                               CSW209
132400200529      *                                                                                       CSW209
132500200529     C           CFT014    IFEQ 'Y'                                                           CSW209
132600200529     C                     MOVEL':'       P@FCT1                                              CSW209
132700200529     C                     Z-ADD1         P@LEN1                                              CSW209
132800200529     C                     Z-ADDS         P@LEN2                                              CSW209
132900200529     C                     EXSR SCNARR                                                        CSW209
133000200529     C                     Z-ADDWRN05     E                                                   CSW209
133100200529     C                     ELSE                                                               CSW209
133200200529     C           ':':1     SCAN DSSWD:S   E                                                   CSW209
133300200529     C                     ENDIF                                                              CSW209
133400200529      *                                                                                       CSW209
133500200529      ** Extract data string starting from position after end of tag                          CSW209
133600200529      *                                                                                       CSW209
133700200529     C           E         ADD  1         S                                                   CSW209
133800200529     C                     EXSR SRDATA                                                        CSW209
133900200529      *                                                                                       CSW209
134000200529      ** Set flag to denote first line of tag                                                 CSW209
134100200529      *                                                                                       CSW209
134200200529     C                     MOVEL'F'       WKFPID                                              CSW209
134300200529      *                                                                                       CSW209
134400200529      ** Add message line details to database                                                 CSW209
134500200529      *                                                                                       CSW209
134600200529     C                     EXSR SRUPDT                                                        CSW209
134700200529      *                                                                                       CSW209
134800200529     C                     END                                                                CSW209
134900200529      *                                                                                       CSW209
135000200529     C                     MOVELWKDATA    WKVALF                                              CSW209
135100200529     C                     END                                                                CSW209
135200200529      *
135300200529     C           CSW218    IFEQ 'Y'                                                           CSW218
135400200529      *                                                                                       CSW218
135500200529      ** Extract tag '111:'                                                                   CSW218
135600200529      *                                                                                       CSW218
135700200529     C                     MOVEL*BLANKS   WKTAG                                               CSW218
135800200529      *                                                                                       CSW218
135900200529     C                     MOVEL'{111:'   TAGID                                               CSW218
136000200529      *                                                                                       CSW218
136100200529     C           CFT014    IFEQ 'Y'                                                           CSW218
136200200529     C                     MOVELTAGID     P@FCT1                                              CSW218
136300200529     C                     Z-ADD5         P@LEN1                                              CSW218
136400200529     C                     Z-ADDB         P@LEN2                                              CSW218
136500200529     C                     EXSR SCNARR                                                        CSW218
136600200529     C                     Z-ADDWRN05     S                                                   CSW218
136700200529     C                     ELSE                                                               CSW218
136800200529     C           TAGID:5   SCAN DSSWD:B   S                                                   CSW218
136900200529     C                     ENDIF                                                              CSW218
137000200529      *                                                                                       CSW218
137100200529      ** If Tag found, extract data which exists between tag no. and                          CSW218
137200200529      ** next closing bracket                                                                 CSW218
137300200529      *                                                                                       CSW218
137400200529     C           S         IFNE 0                                                             CSW218
137500200529     C                     MOVEL'111:'    WKTAG                                               CSW218
137600200529      *                                                                                       CSW218
137700200529     C           CFT014    IFEQ 'Y'                                                           CSW218
137800200529     C                     MOVEL':'       P@FCT1                                              CSW218
137900200529     C                     Z-ADD1         P@LEN1                                              CSW218
138000200529     C                     Z-ADDS         P@LEN2                                              CSW218
138100200529     C                     EXSR SCNARR                                                        CSW218
138200200529     C                     Z-ADDWRN05     E                                                   CSW218
138300200529     C                     ELSE                                                               CSW218
138400200529     C           ':':1     SCAN DSSWD:S   E                                                   CSW218
138500200529     C                     ENDIF                                                              CSW218
138600200529      *                                                                                       CSW218
138700200529      ** Extract data string starting from position after end of tag                          CSW218
138800200529      *                                                                                       CSW218
138900200529     C           E         ADD  1         S                                                   CSW218
139000200529     C                     EXSR SRDATA                                                        CSW218
139100200529      *                                                                                       CSW218
139200200529      ** Set flag to denote first line of tag                                                 CSW218
139300200529      *                                                                                       CSW218
139400200529     C                     MOVEL'F'       WKFPID                                              CSW218
139500200529      *                                                                                       CSW218
139600200529      ** Add message line details to database                                                 CSW218
139700200529      *                                                                                       CSW218
139800200529     C                     EXSR SRUPDT                                                        CSW218
139900200529      *                                                                                       CSW218
140000200529     C                     ENDIF                                                              CSW218
140100200529      *                                                                                       CSW218
140200200529      ** Extract tag '121:'                                                                   CSW218
140300200529      *                                                                                       CSW218
140400200529     C                     MOVEL*BLANKS   WKTAG                                               CSW218
140500200529      *                                                                                       CSW218
140600200529     C                     MOVEL'{121:'   TAGID                                               CSW218
140700200529      *                                                                                       CSW218
140800200529     C           CFT014    IFEQ 'Y'                                                           CSW218
140900200529     C                     MOVELTAGID     P@FCT1                                              CSW218
141000200529     C                     Z-ADD5         P@LEN1                                              CSW218
141100200529     C                     Z-ADDB         P@LEN2                                              CSW218
141200200529     C                     EXSR SCNARR                                                        CSW218
141300200529     C                     Z-ADDWRN05     S                                                   CSW218
141400200529     C                     ELSE                                                               CSW218
141500200529     C           TAGID:5   SCAN DSSWD:B   S                                                   CSW218
141600200529     C                     ENDIF                                                              CSW218
141700200529      *                                                                                       CSW218
141800200529      ** If Tag found, extract data which exists between tag no. and                          CSW218
141900200529      ** next closing bracket                                                                 CSW218
142000200529      *                                                                                       CSW218
142100200529     C           S         IFNE 0                                                             CSW218
142200200529     C                     MOVEL'121:'    WKTAG                                               CSW218
142300200529      *                                                                                       CSW218
142400200529     C           CFT014    IFEQ 'Y'                                                           CSW218
142500200529     C                     MOVEL':'       P@FCT1                                              CSW218
142600200529     C                     Z-ADD1         P@LEN1                                              CSW218
142700200529     C                     Z-ADDS         P@LEN2                                              CSW218
142800200529     C                     EXSR SCNARR                                                        CSW218
142900200529     C                     Z-ADDWRN05     E                                                   CSW218
143000200529     C                     ELSE                                                               CSW218
143100200529     C           ':':1     SCAN DSSWD:S   E                                                   CSW218
143200200529     C                     ENDIF                                                              CSW218
143300200529      *                                                                                       CSW218
143400200529      ** Extract data string starting from position after end of tag                          CSW218
143500200529      *                                                                                       CSW218
143600200529     C           E         ADD  1         S                                                   CSW218
143700200529     C                     EXSR SRDATA                                                        CSW218
143800200529      *                                                                                       CSW218
143900200529      ** Set flag to denote first line of tag                                                 CSW218
144000200529      *                                                                                       CSW218
144100200529     C                     MOVEL'F'       WKFPID                                              CSW218
144200200529      *                                                                                       CSW218
144300200529      ** Add message line details to database                                                 CSW218
144400200529      *                                                                                       CSW218
144500200529     C                     EXSR SRUPDT                                                        CSW218
144600200529      *                                                                                       CSW218
144700200529     C                     ENDIF                                                              CSW218
144800200529     C                     ENDIF                                                              CSW218
144900200529      *                                                                                       CSW218
145000200529      *              *****************************
145100200529      *
145200200529      *  After all tags are extracted, set E to be the position of the
145300200529      *  tag delimiter '}}' starting search from end of Block I.D
145400200529      *
145500200529     C           CFT014    IFEQ 'Y'                                       CFT014
145600200529     C                     MOVEL'}}'      P@FCT1                          CFT014
145700200529     C                     Z-ADD2         P@LEN1                          CFT014
145800200529     C                     Z-ADDB         P@LEN2                          CFT014
145900200529     C                     EXSR SCNARR                                    CFT014
146000200529     C                     Z-ADDWRN05     E                               CFT014
146100200529     C                     ELSE                                           CFT014
146200200529     C           '}}':2    SCAN DSSWD:B   E
146300200529     C                     ENDIF                                          CFT014
146400200529      *
146500200529     C                     END
146600200529      *
146700200529      *  Unwind subroutine stack name
146800200529      *
146900200529     C           EXBLK3    TAG
147000200529     C                     MOVEA*BLANKS   @STK,Q
147100200529     C                     SUB  1         Q
147200200529      *
147300200529     CSR                   ENDSR
147400200529     C/EJECT
147500200529      *****************************************************************
147600200529      *                                                               *
147700200529      *  SRBLK4   : Process Block Identifier 4                        *
147800200529      *                                                               *
147900200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
148000200529      *                                                               *
148100200529      *  CALLS    : SRC2   - Find start of next line delimiter        *
148200200529      *                                                               *
148300200529      *****************************************************************
148400200529     CSR         SRBLK4    BEGSR
148500200529      *
148600200529      *  Set up subroutine stack name
148700200529      *
148800200529     C                     ADD  1         Q
148900200529     C                     MOVEL'SRBLK4'  @STK,Q
149000200529      *                                                                   CFT002
149100200529      *  Reset 204 flag                                                   CFT002
149200200529      *                                                                   CFT002
149300200529     C                     MOVEL*BLANKS   ##204                           CFT002
149400200529      *
149500200529      *  Extract Block I.D.
149600200529      *
149700200529     C                     MOVEL'4:'      BLKID
149800200529     C                     EXSR SRBLOK
149900200529      *
150000200529      * If no Block 4: found process for database error
150100200529      *
150200200529     C           WKTAG     IFEQ *BLANKS
150300200529     C                     MOVEL'ME1020  'W0FILE
150400200529     C                     MOVELWKDATA    W0KEY            ***************
150500200529     C                     Z-ADD6         W0ERNB           * DB ERROR 06 *
150600200529     C                     MOVEL'MIN0093' W0MSGD           ***************
150700200529     C                     MOVEL'MEMSG  ' W0MSGF
150800200529     C                     EXSR SRERR
150900200529     C                     END
151000200529      *
151100200529      *  Set flag to denote first line of tag
151200200529      *
151300200529     C                     MOVEL'F'       WKFPID
151400200529      *
151500200529      *  Add message detail for header tag
151600200529      *
151700200529     C                     EXSR SRUPDT
151800200529      *                                                                                       CSW209
151900200529     C           CSW209    IFEQ 'Y'                                                           CSW209
152000200529     C           WKVALF    IFEQ 'COV'                                                         CSW209
152100200529     C                     MOVEL'A'       WKMSEQ  3                                           CSW209
152200200529     C                     ELSE                                                               CSW209
152300200529     C                     MOVEL*BLANKS   WKMSEQ                                              CSW209
152400200529     C                     ENDIF                                                              CSW209
152500200529     C                     ENDIF                                                              CSW209
152600200529      *
152700200529      *  Determine initial delimiter positions for the block
152800200529      *
152900200529      *  Search for delimiter FS2/3 - start of tag component
153000200529      *                       CS2   - start of next line for tag
153100200529      *                       FS4   - End of block
153200200529      *
153300200529      *  Begin search after end position of the Block Tag No.
153400200529      *
153500200529     C           CFT014    IFEQ 'Y'                                       CFT014
153600200529     C                     MOVELFS3       P@FCT1                          CFT014
153700200529     C                     Z-ADD3         P@LEN1                          CFT014
153800200529     C                     Z-ADDE         P@LEN2                          CFT014
153900200529     C                     EXSR SCNARR                                    CFT014
154000200529     C                     Z-ADDWRN05     F3                              CFT014
154100200529     C                     MOVELFS4       P@FCT1                          CFT014
154200200529     C                     Z-ADD3         P@LEN1                          CFT014
154300200529     C                     Z-ADDE         P@LEN2                          CFT014
154400200529     C                     EXSR SCNARR                                    CFT014
154500200529     C                     Z-ADDWRN05     F4                              CFT014
154600200529     C                     ELSE                                           CFT014
154700200529     C           FS3:3     SCAN DSSWD:E   F3
154800200529     C           FS4:3     SCAN DSSWD:E   F4
154900200529     C                     ENDIF                                          CFT014
155000200529      *                                                                                       253970
155100200529      * Use alternative delimiter if block delimiter cannot be found.                         253970
155200200529      *                                                                                       253970
155300200529     C           F3        IFEQ 0                                                             253970
155400200529     C           F4        OREQ 0                                                             253970
155500200529      *                                                                                       253970
155600200529      *  Begin search after end position of the Block Tag No.                                 253970
155700200529      *                                                                                       253970
155800200529     C                     MOVE ALTFS3    FS3                                                 253970
155900200529     C                     MOVE ALTFS4    FS4                                                 253970
156000200529     C                     MOVE ALTCS2    CS2                                                 253970
156100200529     C           CFT014    IFEQ 'Y'                                                           253970
156200200529     C                     MOVELFS3       P@FCT1                                              253970
156300200529     C                     Z-ADD3         P@LEN1                                              253970
156400200529     C                     Z-ADDE         P@LEN2                                              253970
156500200529     C                     EXSR SCNARR                                                        253970
156600200529     C                     Z-ADDWRN05     F3                                                  253970
156700200529     C                     MOVELFS4       P@FCT1                                              253970
156800200529     C                     Z-ADD3         P@LEN1                                              253970
156900200529     C                     Z-ADDE         P@LEN2                                              253970
157000200529     C                     EXSR SCNARR                                                        253970
157100200529     C                     Z-ADDWRN05     F4                                                  253970
157200200529     C                     ELSE                                                               253970
157300200529     C           FS3:3     SCAN DSSWD:E   F3                                                  253970
157400200529     C           FS4:3     SCAN DSSWD:E   F4                                                  253970
157500200529     C                     ENDIF                                                              253970
157600200529     C                     ENDIF                                                              253970
157700200529      *
157800200529     C                     Z-ADDE         F
157900200529     C                     EXSR SRC2
158000200529      *
158100200529      *  Set C with end block delimiter as this equates to the other
158200200529      *  block's closing bracket. C is used in SRBLOK as the position
158300200529      *  to commence searching for the start of the next block.
158400200529      *
158500200529     C                     Z-ADDF4        C
158600200529      *
158700200529      *            ***********************************
158800200529      *  WPSUP will be set to 'Y' to suppress output to MEINMPPD          140532
158900200529     C                     MOVEL*BLANKS   WPSUP   1                       140532
159000200529      *
159100200529      *  Extract the Block's data
159200200529      *
159300200529      *  Repeat process while the new tag delimiter FS3 is prior to
159400200529      *  the Block's End of text delimiter FS4
159500200529      *
159600200529     C           F3        DOWLTF4
159700200529      *
159800200529      *
159900200529      *  TAG PROCESSING
160000200529      *
160100200529      *  If new tag delimiter FS3 is less than new line delimiter CS2
160200200529      *  then process for new tag.
160300200529      *
160400200529     C           F3        DOWLTC2
160500200529      *
160600200529      *  Clear message tag field
160700200529      *
160800200529     C                     MOVEL*BLANKS   WKTAG
160900200529      *
161000200529      *  Extract tag no.
161100200529      *
161200200529      *  Beginning of tag no. is the colon of the delimiter so start
161300200529      *  search of tag from start position of delimiter
161400200529      *
161500200529      *  End of the tag no. is the next colon, start search after
161600200529      *  position of the first ':'
161700200529      *
161800200529      *  Determine length of tag - (End - Start + 1)
161900200529      *
162000200529      *  Extract tag no.
162100200529      *
162200200529     C           CFT014    IFEQ 'Y'                                       CFT014
162300200529     C                     MOVEL':'       P@FCT1                          CFT014
162400200529     C                     Z-ADD1         P@LEN1                          CFT014
162500200529     C                     Z-ADDF3        P@LEN2                          CFT014
162600200529     C                     EXSR SCNARR                                    CFT014
162700200529     C                     Z-ADDWRN05     S                               CFT014
162800200529     C                     ELSE                                           CFT014
162900200529     C           ':':1     SCAN DSSWD:F3  S
163000200529     C                     ENDIF                                          CFT014
163100200529      *
163200200529     C           S         ADD  1         T
163300200529     C           CFT014    IFEQ 'Y'                                       CFT014
163400200529     C                     MOVEL':'       P@FCT1                          CFT014
163500200529     C                     Z-ADD1         P@LEN1                          CFT014
163600200529     C                     Z-ADDT         P@LEN2                          CFT014
163700200529     C                     EXSR SCNARR                                    CFT014
163800200529     C                     Z-ADDWRN05     E                               CFT014
163900200529     C                     ELSE                                           CFT014
164000200529     C           ':':1     SCAN DSSWD:T   E
164100200529     C                     ENDIF                                          CFT014
164200200529      *
164300200529     C           E         SUB  S         L
164400200529     C                     ADD  1         L
164500200529      *
164600200529     C           CFT014    IFEQ 'Y'                                       CFT014
164700200529     C                     Z-ADDL         P@LEN1                          CFT014
164800200529     C                     Z-ADDS         P@LEN2                          CFT014
164900200529     C                     EXSR SUBARR                                    CFT014
165000200529     C                     MOVELP@RSLT    WKTAG                           CFT014
165100200529     C                     ELSE                                           CFT014
165200200529     C           L         SUBSTDSSWD:S   WKTAG
165300200529     C                     ENDIF                                          CFT014
165400200529      *                                                                   140532
165500200529      *  If MT515 or MT518, :20C: may occur twice in the message          140532
165600200529      *  so suppress output of part message.                              140532
165700200529     C           MTPY      IFEQ '515'                                     140532
165800200529     C           MTPY      OREQ '518'                                     140532
165900200529     C           MTPY      OREQ '370'                                                         CSW212
166000200529     C           PTAG      IFEQ PSTAG                                     140532
166100200529     C           WKTAG     ANDEQ':20C:'                                   140532
166200200529     C           WKDATA    ANDEQ'GENL'                                    140532
166300200529     C                     MOVEL'Y'       WPSUP                           140532
166400200529     C                     ENDIF                                          140532
166500200529     C                     ENDIF                                          140532
166600200529      *                                                                   CFT006
166700200529      *  Determine which sequence of message is being processed           CFT006
166800200529      *                                                                   CFT006
166900200529     C                     SELEC                                          CFT006
167000200529     C           MTPY      WHEQ '101'                                     CFT006
167100200529     C           WKTAG     ANDEQBG101A                                    CFT006
167200200529     C                     MOVEL'A'       WSQANZ                          CFT006
167300200529     C                     MOVE SQ101A    WKPART                          CFT006
167400200529     C                     Z-ADD0         WKPART                                              240754
167500200529      *                                                                   CFT006
167600200529     C           MTPY      WHEQ '102'                                     CFT006
167700200529     C           WKTAG     ANDEQBG102A                                    CFT006
167800200529     C                     MOVEL'A'       WSQANZ                          CFT006
167900200529     C                     MOVE SQ102A    WKPART                          CFT006
168000200529     C                     Z-ADD0         WKPART                                              240754
168100200529      *                                                                   CFT006
168200200529     C           MTPY      WHEQ '102'                                     CFT006
168300200529     C           WKTAG     ANDEQBG102C                                    CFT006
168400200529     C                     MOVEL'C'       WSQANZ                          CFT006
168500200529      *                                                                   CFT006
168600200529     C                     ENDSL                                          CFT006
168700200529      *
168800200529      *  If Tag No. is ':20:' it signifies a new part of the message.
168900200529      *
169000200529      *  If this is the first part of the msg i.e the current part no.
169100200529      *  is 0, then only increment the part no. and clear the record
169200200529      *  format data structure.
169300200529      *
169400200529      *  If the part no. is greater than 0 it means that a part has
169500200529      *  just been extracted and needs to be added to the database
169600200529      *  before processing for the current part commences.
169700200529      *
169800200529      *  Ensure there are no exceptions before                            CFT006
169900200529     C                     EXSR CKTREX                                    CFT006
170000200529      *                                                                   CFT006
170100200529     C           PTAG      IFEQ PSTAG
170200200529     C           WEXTRN    ANDNE'Y'                                       CFT006
170300200529      **or**02*and*sequence*C                                       CFT002CFT006
170400200529     C***********MTPY      OREQ '102'                               CFT002CFT006
170500200529     C***********WKTAG     ANDEQ':32A:'                             CFT002CFT006
170600200529     C***********MTPY      OREQ '101'                               CFT002CFT006
170700200529      *  If sequence C of MT102 is being analysed we force                CFT006
170800200529      *  the writing of part of the previous sequence B                   CFT006
170900200529      *  Note : no part is written for sequence C of MT102                CFT006
171000200529     C           WSQANZ    OREQ 'C'                                       CFT006
171100200529      *                                                                   CFT002
171200200529      * If 204 and first :20 then ignore and include in part zero         CFT002
171300200529      *
171400200529     C           MTPY      IFEQ '204'                                     CFT002
171500200529     C           WKPART    ANDEQ0                                         CFT002
171600200529     C           ##204     ANDEQ*BLANKS                                   CFT002
171700200529     C                     MOVEL'Y'       ##204   1                       CFT002
171800200529     C                     ELSE                                           CFT002
171900200529      *                                                                   CFT002
172000200529     C           WPSUP     IFNE 'Y'                                       140532
172100200529      *                                                                   140532
172200200529     C           WKPART    IFGT 0
172300200529     C                     EXSR SRPART
172400200529      *                                                                   CFT002
172500200529      * Clear flags relating to Account line analysis                     CFT002
172600200529      *                                                                   CFT002
172700200529     C                     MOVEL*BLANKS   L2BENF                          CFT002
172800200529     C                     MOVEL*BLANKS   L2INBK                          CFT002
172900200529     C                     MOVEL*BLANKS   L2ACIN                          CFT002
173000200529     C                     END
173100200529      *
173200200529     C                     CLEARINMP
173300200529      *                                                                   140532
173400200529     C                     ENDIF                                          140532
173500200529      *                                                                   140532
173600200529     C           WKDATA    IFNE 'LINK'                                    140532
173700200529     C           WKDATA    ANDNE'NETPOS'                                                      CSW212
173800200529     C                     ADD  1         WKPART
173900200529     C                     ENDIF                                          140532
174000200529     C           WSQANZ    IFEQ 'C'                                       CFT006
174100200529     C                     MOVE SQ102C    WKPART                          CFT006
174200200529     C                     Z-ADD0         WKPART                                              240754
174300200529     C                     ENDIF                                          CFT006
174400200529     C                     ENDIF                                          CFT002
174500200529      * Set sequence being processed to 'unknown'                         CFT006
174600200529     C                     MOVEL*BLANK    WSQANZ                          CFT006
174700200529      *                                                                   140532
174800200529     C                     END
174900200529      *                                                                   CFT002
175000200529      **If*102*and*sequence*C,*started*at*tag*:32A**                CFT002CFT006
175100200529      **set*part*to*zero**                                          CFT002CFT006
175200200529      *                                                             CFT002CFT006
175300200529     C***********MTPY      IFEQ '102'                               CFT002CFT006
175400200529     C***********WKTAG     ANDEQ':32A:'                             CFT002CFT006
175500200529     C*********************Z-ADD0         WKPART                    CFT002CFT006
175600200529     C*********************ENDIF                                    CFT002CFT006
175700200529      *
175800200529      *  Search for next FS3 delimiter starting from the tag no.
175900200529      *
176000200529      *  If no more FS3s for the block, the system sets the delimiter
176100200529      *  to '0' - in that case re-set it to the same value as the FS4
176200200529      *  delimiter otherwise the do loop will loop.
176300200529      *
176400200529     C           CFT014    IFEQ 'Y'                                       CFT014
176500200529     C                     MOVELFS3       P@FCT1                          CFT014
176600200529     C                     Z-ADD3         P@LEN1                          CFT014
176700200529     C                     Z-ADDS         P@LEN2                          CFT014
176800200529     C                     EXSR SCNARR                                    CFT014
176900200529     C                     Z-ADDWRN05     F3                              CFT014
177000200529     C                     ELSE                                           CFT014
177100200529     C           FS3:3     SCAN DSSWD:S   F3
177200200529     C                     ENDIF                                          CFT014
177300200529      *
177400200529     C           F3        IFEQ 0
177500200529     C           F3        ORGT F4
177600200529     C                     Z-ADDF4        F3
177700200529     C                     END
177800200529      *
177900200529      *  Determine start position of data string. It will be the
178000200529      *  start position of the tag no. plus the length of the tag no.
178100200529      *
178200200529     C                     ADD  L         S
178300200529      *                                                                   CFT014
178400200529      *  Check wether this tag is to be extracted in a special way        CFT014
178500200529     C                     EXSR CKDTEX                                    CFT014
178600200529      *
178700200529      *  Extract data string
178800200529      *
178900200529     C                     EXSR SRDAT4
179000200529      *
179100200529      *  Set flag to denote first line of tag
179200200529      *
179300200529     C                     MOVEL'F'       WKFPID
179400200529      *                                                                                       CSW209
179500200529      ** Access MESTGSL1                                                                      CSW209
179600200529      *                                                                                       CSW209
179700200529     C           CSW209    IFEQ 'Y'                                                           CSW209
179800200529     C           *LOVAL    SETLLMESTGSL1                                                      CSW209
179900200529     C           KLIST1    CHAINMESTGSL1             35                                       CSW209
180000200529     C           *IN35     IFEQ '0'                                                           CSW209
180100200529     C                     MOVELSTMSQN    WKMSEQ                                              CSW209
180200200529     C                     ENDIF                                                              CSW209
180300200529     C                     ENDIF                                                              CSW209
180400200529      *
180500200529      *  Add message line details to database
180600200529      *
180700200529     C                     EXSR SRUPDT
180800200529      *
180900200529      *  Determine if the tag is one of those that holds data for the
181000200529      *  Incoming Message Part Detail record
181100200529      *
181200200529     C                     EXSR SREXPT
181300200529      *                                                                   CFT006
181400200529      *  Extract for various purposes datas coming from sequence          CFT006
181500200529      *  A, B, C of a message                                             CFT006
181600200529      *                                                                   CFT006
181700200529     C                     EXSR SREXSQ                                    CFT006
181800200529      *                                                                   CFT014
181900200529      *  Extract data from the special tag and leave this loop if         CFT014
182000200529      *  necessary                                                        CFT014
182100200529     C           WEXDAT    IFEQ 'Y'                                       CFT014
182200200529     C                     EXSR EXDTST                                    CFT014
182300200529     C           WEXLV     IFEQ 'Y'                                       CFT014
182400200529     C                     LEAVE                                          CFT014
182500200529     C                     ENDIF                                          CFT014
182600200529     C                     ENDIF                                          CFT014
182700200529      *
182800200529     C                     ENDDO
182900200529      *
183000200529      *
183100200529      *  LINE PROCESSING
183200200529      *
183300200529      *  If new line delimiter is less than new tag delimiter then
183400200529      *  add additional line details for the current tag no.
183500200529      *
183600200529     C           C2        DOWLTF3
183700200529      *
183800200529      *  Determine start position of the next line's data string. It
183900200529      *  will be the start position of the delimiter plus it's length
184000200529      *
184100200529     C           C2        ADD  2         S
184200200529      *
184300200529      *  Search for next CS2 delimiter commencing from start of the
184400200529      *  data string
184500200529      *
184600200529     C                     Z-ADDS         F
184700200529     C                     EXSR SRC2
184800200529      *
184900200529      *  Extract data string
185000200529      *
185100200529     C                     EXSR SRDAT4
185200200529      *
185300200529      *  Set flag to denote multiple line
185400200529      *
185500200529     C                     MOVEL*BLANKS   WKFPID
185600200529      *                                                                                       CSW209
185700200529      ** Access MESTGSL1                                                                      CSW209
185800200529      *                                                                                       CSW209
185900200529     C           CSW209    IFEQ 'Y'                                                           CSW209
186000200529     C           *LOVAL    SETLLMESTGSL1                                                      CSW209
186100200529     C           KLIST1    CHAINMESTGSL1             35                                       CSW209
186200200529     C           *IN35     IFEQ '0'                                                           CSW209
186300200529     C                     MOVELSTMSQN    WKMSEQ                                              CSW209
186400200529     C                     ENDIF                                                              CSW209
186500200529     C                     ENDIF                                                              CSW209
186600200529      *
186700200529      *  Add message line details to database
186800200529      *
186900200529     C                     EXSR SRUPDT
187000200529      *
187100200529      *  If the line is for tag :56:, :57:, :58:, :59: then additional
187200200529      *  processing must be done to ensure that the details stored in
187300200529      *  the message part file for the Intermediary, Acct with Inst,
187400200529      *  and the Beneficiary do not commence with a '/'.
187500200529      *
187600200529      *  The above fields were extracted in subroutine SREXPT while
187700200529      *  processing the tag no. The field must be checked and if the
187800200529      *  first character is a '/' then the contents of the second line
187900200529      *  of the tag must be placed there instead.
188000200529      *
188100200529     C                     EXSR SREXC2
188200200529      *
188300200529     C                     ENDDO
188400200529      *
188500200529     C                     ENDDO
188600200529      *
188700200529      *          ******************************
188800200529      *
188900200529      *  If a message part has been processed, add last processed part
189000200529      *  to database and re-set part no. to 0. Parts only apply to Blk4
189100200529      *
189200200529     C           WKPART    IFGT 0
189300200529     C                     EXSR SRPART
189400200529     C                     Z-ADD0         WKPART
189500200529     C                     CLEARINMP
189600200529      * Set sequence being processed to 'unknown'                         CFT006
189700200529     C                     MOVEL*BLANK    WSQANZ                          CFT006
189800200529     C                     END
189900200529      *
190000200529      *  Unwind subroutine stack name
190100200529      *
190200200529     C           EXBLK4    TAG
190300200529     C                     MOVEA*BLANKS   @STK,Q
190400200529     C                     SUB  1         Q
190500200529      *                                                                                       CSW209
190600200529     C           CSW209    IFEQ 'Y'                                                           CSW209
190700200529     C                     MOVEL*BLANKS   WKMSEQ                                              CSW209
190800200529     C                     ENDIF                                                              CSW209
190900200529      *
191000200529     CSR                   ENDSR
191100200529     C/EJECT
191200200529      *****************************************************************
191300200529      *                                                               *
191400200529      *  SRC2     : Find Start of Next Line delimiter                 *
191500200529      *                                                               *
191600200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *
191700200529      *                                                               *
191800200529      *  CALLS    :                                                   *
191900200529      *                                                               *
192000200529      *****************************************************************
192100200529     CSR         SRC2      BEGSR
192200200529      *
192300200529      *  Set up subroutine stack name
192400200529      *
192500200529     C                     ADD  1         Q
192600200529     C                     MOVEL'SRC2  '  @STK,Q
192700200529      *
192800200529      *  The CS2 delimiter is the same as the first two characters of
192900200529      *  the FS3 and FS4 delimiters. Therefor the character after the
193000200529      *  delimiter must be checked. If it is a ':' then the delimiter
193100200529      *  is really an FS3, and if it is a '-' then the delimiter is FS4
193200200529      *
193300200529      *  Start scan
193400200529      *
193500200529     C                     MOVEL*BLANKS   FND     1
193600200529      *
193700200529     C           FND       DOWEQ*BLANKS
193800200529      *
193900200529     C           CFT014    IFEQ 'Y'                                       CFT014
194000200529     C                     MOVELCS2       P@FCT1                          CFT014
194100200529     C                     Z-ADD2         P@LEN1                          CFT014
194200200529     C                     Z-ADDF         P@LEN2                          CFT014
194300200529     C                     EXSR SCNARR                                    CFT014
194400200529     C                     Z-ADDWRN05     C2                              CFT014
194500200529     C                     ELSE                                           CFT014
194600200529     C           CS2:2     SCAN DSSWD:F   C2
194700200529     C                     ENDIF                                          CFT014
194800200529      *
194900200529      *  If no more CS2s for the block, the system sets the delimiter
195000200529      *  to '0' - in that case re-set it to the same value as the FS4
195100200529      *  delimiter to permit exiting from the SRBLK4 Do loop.
195200200529      *
195300200529     C           C2        IFEQ 0
195400200529     C           C2        ORGT F4
195500200529     C                     Z-ADDF4        C2
195600200529     C                     LEAVE
195700200529      *
195800200529     C                     ELSE
195900200529      *
196000200529      * Check if character after the delimiter denotes an FS3 or FS4.
196100200529      * If not, then a true C2 is found - no more checks
196200200529      *
196300200529     C           C2        ADD  2         F
196400200529      *
196500200529     C           CFT014    IFEQ 'Y'                                       CFT014
196600200529     C                     Z-ADD1         P@LEN1                          CFT014
196700200529     C                     Z-ADDF         P@LEN2                          CFT014
196800200529     C                     EXSR SUBARR                                    CFT014
196900200529     C           P@RSLT    IFNE ':'                                       CFT014
197000200529     C           P@RSLT    ANDNE'-'                                       CFT014
197100200529     C                     MOVEL'Y'       FND                             CFT014
197200200529     C                     ENDIF                                          CFT014
197300200529     C                     ELSE                                           CFT014
197400200529     C           SWD,F     IFNE ':'
197500200529     C           SWD,F     ANDNE'-'
197600200529     C                     MOVEL'Y'       FND
197700200529     C                     END
197800200529     C                     ENDIF                                          CFT014
197900200529      *
198000200529     C                     END
198100200529      *
198200200529     C                     ENDDO
198300200529      *
198400200529      *  Unwind subroutine stack name
198500200529      *
198600200529     C           EXSRC2    TAG
198700200529     C                     MOVEA*BLANKS   @STK,Q
198800200529     C                     SUB  1         Q
198900200529      *
199000200529     CSR                   ENDSR
199100200529     C/EJECT
199200200529      *****************************************************************
199300200529      *                                                               *
199400200529      *  SRBLK5   : Process Block Identifier 5                        *
199500200529      *                                                               *
199600200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
199700200529      *                                                               *
199800200529      *  CALLS    :                                                   *
199900200529      *                                                               *
200000200529      *****************************************************************
200100200529     CSR         SRBLK5    BEGSR
200200200529      *
200300200529      *  Set up subroutine stack name
200400200529      *
200500200529     C                     ADD  1         Q
200600200529     C                     MOVEL'SRBLK5'  @STK,Q
200700200529      *
200800200529      *  Extract Block I.D.
200900200529      *
201000200529     C                     MOVEL'5:'      BLKID
201100200529     C                     EXSR SRBLOK
201200200529      *
201300200529      * If no Block 1: found process for database error
201400200529      *
201500200529     C           WKTAG     IFEQ *BLANKS
201600200529     C                     MOVEL'ME1020  'W0FILE
201700200529     C                     MOVELWKDATA    W0KEY            ***************
201800200529     C                     Z-ADD7         W0ERNB           * DB ERROR 07 *
201900200529     C                     MOVEL'MIN0093' W0MSGD           ***************
202000200529     C                     MOVEL'MEMSG  ' W0MSGF
202100200529     C                     EXSR SRERR
202200200529     C                     END
202300200529      *
202400200529      *  Set flag to denote first line of tag
202500200529      *
202600200529     C                     MOVEL'F'       WKFPID
202700200529      *
202800200529      *  Add message detail for header tag
202900200529      *
203000200529     C                     EXSR SRUPDT
203100200529      *
203200200529      *  Determine initial delimiter positions for the block
203300200529      *
203400200529      *  Search for delimiter OPB - start of tag component '{'
203500200529      *                       ENB - end of block           '}}'
203600200529      *
203700200529      *  Begin search after end position of the Block Tag No.
203800200529      *
203900200529     C           CFT014    IFEQ 'Y'                                       CFT014
204000200529     C                     MOVELOPB       P@FCT1                          CFT014
204100200529     C                     Z-ADD1         P@LEN1                          CFT014
204200200529     C                     Z-ADDE         P@LEN2                          CFT014
204300200529     C                     EXSR SCNARR                                    CFT014
204400200529     C                     Z-ADDWRN05     OP                              CFT014
204500200529     C                     MOVELENB       P@FCT1                          CFT014
204600200529     C                     Z-ADD2         P@LEN1                          CFT014
204700200529     C                     Z-ADDE         P@LEN2                          CFT014
204800200529     C                     EXSR SCNARR                                    CFT014
204900200529     C                     Z-ADDWRN05     EN                              CFT014
205000200529     C                     ELSE                                           CFT014
205100200529     C           OPB:1     SCAN DSSWD:E   OP
205200200529     C           ENB:2     SCAN DSSWD:E   EN
205300200529     C                     ENDIF                                          CFT014
205400200529      *
205500200529      *
205600200529      *  Extract the Block's data
205700200529      *
205800200529      *  Repeat process until the new tag delimiter OPB is after the
205900200529      *  Block's End of text delimiter ENB
206000200529      *
206100200529     C           OP        DOWLTEN
206200200529      *
206300200529      *  Clear message tag field
206400200529      *
206500200529     C                     MOVEL*BLANKS   WKTAG
206600200529      *
206700200529      *  Extract tag no.
206800200529      *
206900200529      *  Beginning of tag no. is position after the open bracket
207000200529      *
207100200529      *  End of the tag no. is the next colon, start search at the
207200200529      *  beginning of the tag
207300200529      *
207400200529      *  Determine length of tag - (End - Start + 1)
207500200529      *
207600200529     C           OP        ADD  1         S
207700200529      *
207800200529     C           CFT014    IFEQ 'Y'                                       CFT014
207900200529     C                     MOVEL':'       P@FCT1                          CFT014
208000200529     C                     Z-ADD1         P@LEN1                          CFT014
208100200529     C                     Z-ADDS         P@LEN2                          CFT014
208200200529     C                     EXSR SCNARR                                    CFT014
208300200529     C                     Z-ADDWRN05     E                               CFT014
208400200529     C                     ELSE                                           CFT014
208500200529     C           ':':1     SCAN DSSWD:S   E
208600200529     C                     ENDIF                                          CFT014
208700200529      *
208800200529     C           E         SUB  S         L
208900200529     C                     ADD  1         L
209000200529      *
209100200529     C           CFT014    IFEQ 'Y'                                       CFT014
209200200529     C                     Z-ADDL         P@LEN1                          CFT014
209300200529     C                     Z-ADDS         P@LEN2                          CFT014
209400200529     C                     EXSR SUBARR                                    CFT014
209500200529     C                     MOVELP@RSLT    WKTAG                           CFT014
209600200529     C                     ELSE                                           CFT014
209700200529     C           L         SUBSTDSSWD:S   WKTAG
209800200529     C                     ENDIF                                          CFT014
209900200529     C/COPY WNCPYSRC,MS1900C001
210000200529     C/COPY OFCPYSRCZ,CFT135_017                                                              CFT135
210100200529      *
210200200529      *  Check if tag denotes a duplicate message
210300200529      *
210400200529     C                     SELEC
210500200529     C*
210600200529     C           WKTAG     WHEQ 'SAI:'
210700200529     C                     MOVEL'SAI'     WKPDE
210800200529     C*
210900200529     C           WKTAG     WHEQ 'PDE:'
211000200529     C                     MOVEL'PDE'     WKPDE
211100200529     C*
211200200529     C           WKTAG     WHEQ 'PDM:'
211300200529     C                     MOVEL'PDM'     WKPDE
211400200529     C*
211500200529     C           WKTAG     WHEQ 'PDI:'
211600200529     C                     MOVEL'PDI'     WKPDE
211700200529     C*
211800200529     C           WKTAG     WHEQ 'PDR:'
211900200529     C                     MOVEL'PDR'     WKPDE
212000200529     C*
212100200529     C           WKTAG     WHEQ 'DUP:'
212200200529     C                     MOVEL'DUP'     WKPDE
212300200529     C*
212400200529     C           WKTAG     WHEQ 'SPD:'
212500200529     C                     MOVEL'SPD'     WKSPD
212600200529     C*
212700200529     C                     ENDSL
212800200529      *
212900200529      *  Extract data string
213000200529      *
213100200529      *  Determine start position of data string. It will be the
213200200529      *  position after the end of the tag no.
213300200529      *
213400200529     C           E         ADD  1         S
213500200529      *
213600200529     C                     EXSR SRDATA
213700200529      *
213800200529      *  Set flag to denote first line of tag
213900200529      *
214000200529     C                     MOVEL'F'       WKFPID
214100200529      *
214200200529      *  Add message line details to database
214300200529      *
214400200529     C                     EXSR SRUPDT
214500200529      *
214600200529      *  Search for next open bracket starting from the end of the
214700200529      *  current data string
214800200529      *
214900200529      *  If no more open brackets, the system sets the delimiter
215000200529      *  to '0' - in that case re-set it to the same value as the end
215100200529      *  of block delimiter otherwise the do loop will loop.
215200200529      *
215300200529     C           CFT014    IFEQ 'Y'                                       CFT014
215400200529     C                     MOVELOPB       P@FCT1                          CFT014
215500200529     C                     Z-ADD1         P@LEN1                          CFT014
215600200529     C                     Z-ADDE         P@LEN2                          CFT014
215700200529     C                     EXSR SCNARR                                    CFT014
215800200529     C                     Z-ADDWRN05     OP                              CFT014
215900200529     C                     ELSE                                           CFT014
216000200529     C           OPB:1     SCAN DSSWD:E   OP
216100200529     C                     ENDIF                                          CFT014
216200200529      *
216300200529     C           OP        IFEQ 0
216400200529     C           OP        ORGT EN
216500200529     C                     Z-ADDEN        OP
216600200529     C                     END
216700200529      *
216800200529     C                     ENDDO
216900200529      *
217000200529      *  Unwind subroutine stack name
217100200529      *
217200200529     C           EXBLK5    TAG
217300200529     C                     MOVEA*BLANKS   @STK,Q
217400200529     C                     SUB  1         Q
217500200529      *
217600200529     CSR                   ENDSR
217700200529     C/EJECT
217800200529      *****************************************************************
217900200529      *                                                               *
218000200529      *  SRBLKS   : Process Block Identifier S                        *
218100200529      *                                                               *
218200200529      *  CALLED BY: SRDETL - Add Incomimg Message Detail Lines        *
218300200529      *                                                               *
218400200529      *  CALLS    :                                                   *
218500200529      *                                                               *
218600200529      *****************************************************************
218700200529     CSR         SRBLKS    BEGSR
218800200529      *
218900200529      *  Set up subroutine stack name
219000200529      *
219100200529     C                     ADD  1         Q
219200200529     C                     MOVEL'SRBLKS'  @STK,Q
219300200529      *
219400200529      *  Extract Block I.D.
219500200529      *
219600200529     C                     MOVEL'S:'      BLKID
219700200529     C                     EXSR SRBLOK
219800200529      *
219900200529      * If no Block 1: found process for database error
220000200529      *
220100200529     C           WKTAG     IFEQ *BLANKS
220200200529      *                                                                   068104
220300200529      * No database error as S: block is optional.                        068104
220400200529      *                                                                   068104
220500200529     C                     GOTO EXBLKS                                    068104
220600200529     C***********          MOVEL'ME1020  'W0FILE                          068104
220700200529     C***********          MOVELWKDATA    W0KEY            ***************068104
220800200529     C***********          Z-ADD8         W0ERNB           * DB ERROR 08 *068104
220900200529     C***********          MOVEL'MIN0093' W0MSGD           ***************068104
221000200529     C***********          MOVEL'MEMSG  ' W0MSGF                          068104
221100200529     C***********          EXSR SRERR                                     068104
221200200529     C                     END
221300200529      *
221400200529      *  Set flag to denote first line of tag
221500200529      *
221600200529     C                     MOVEL'F'       WKFPID
221700200529      *
221800200529      *  Add message detail for header tag
221900200529      *
222000200529     C                     EXSR SRUPDT
222100200529      *
222200200529      *  Determine initial delimiter positions for the block
222300200529      *
222400200529      *  Search for delimiter OPB - start of tag component '{'
222500200529      *                       ENB - end of block           '}}'
222600200529      *
222700200529      *  Begin search after end position of the Block Tag No.
222800200529      *
222900200529     C           CFT014    IFEQ 'Y'                                       CFT014
223000200529     C                     MOVELOPB       P@FCT1                          CFT014
223100200529     C                     Z-ADD1         P@LEN1                          CFT014
223200200529     C                     Z-ADDE         P@LEN2                          CFT014
223300200529     C                     EXSR SCNARR                                    CFT014
223400200529     C                     Z-ADDWRN05     OP                              CFT014
223500200529     C                     MOVELENB       P@FCT1                          CFT014
223600200529     C                     Z-ADD2         P@LEN1                          CFT014
223700200529     C                     Z-ADDE         P@LEN2                          CFT014
223800200529     C                     EXSR SCNARR                                    CFT014
223900200529     C                     Z-ADDWRN05     EN                              CFT014
224000200529     C                     ELSE                                           CFT014
224100200529     C           OPB:1     SCAN DSSWD:E   OP
224200200529     C           ENB:2     SCAN DSSWD:E   EN
224300200529     C                     ENDIF                                          CFT014
224400200529      *
224500200529      *
224600200529      *  Extract the Block's data
224700200529      *
224800200529      *  Repeat process until the new tag delimiter OPB is after the
224900200529      *  Block's End of text delimiter ENB
225000200529      *
225100200529     C           OP        DOWLTEN
225200200529      *
225300200529      *  Clear message tag field
225400200529      *
225500200529     C                     MOVEL*BLANKS   WKTAG
225600200529      *
225700200529      *  Extract tag no.
225800200529      *
225900200529      *  Beginning of tag no. is position after the open bracket
226000200529      *
226100200529      *  End of the tag no. is the next colon, start search at the
226200200529      *  beginning of the tag
226300200529      *
226400200529      *  Determine length of tag - (End - Start + 1)
226500200529      *
226600200529     C           OP        ADD  1         S
226700200529      *
226800200529     C           CFT014    IFEQ 'Y'                                       CFT014
226900200529     C                     MOVEL':'       P@FCT1                          CFT014
227000200529     C                     Z-ADD1         P@LEN1                          CFT014
227100200529     C                     Z-ADDS         P@LEN2                          CFT014
227200200529     C                     EXSR SCNARR                                    CFT014
227300200529     C                     Z-ADDWRN05     E                               CFT014
227400200529     C                     ELSE                                           CFT014
227500200529     C           ':':1     SCAN DSSWD:S   E
227600200529     C                     ENDIF                                          CFT014
227700200529      *
227800200529     C           E         SUB  S         L
227900200529     C                     ADD  1         L
228000200529      *
228100200529     C           CFT014    IFEQ 'Y'                                       CFT014
228200200529     C                     Z-ADDL         P@LEN1                          CFT014
228300200529     C                     Z-ADDS         P@LEN2                          CFT014
228400200529     C                     EXSR SUBARR                                    CFT014
228500200529     C                     MOVELP@RSLT    WKTAG                           CFT014
228600200529     C                     ELSE                                           CFT014
228700200529     C           L         SUBSTDSSWD:S   WKTAG
228800200529     C                     ENDIF                                          CFT014
228900200529      *
229000200529      *  Check if tag denotes a duplicate message
229100200529      *
229200200529     C                     SELEC
229300200529     C*
229400200529     C           WKTAG     WHEQ 'SAI:'
229500200529     C                     MOVEL'SAI'     WKPDE
229600200529     C*
229700200529     C           WKTAG     WHEQ 'PDE:'
229800200529     C                     MOVEL'PDE'     WKPDE
229900200529     C*
230000200529     C           WKTAG     WHEQ 'PDI:'
230100200529     C                     MOVEL'PDI'     WKPDE
230200200529     C*
230300200529     C           WKTAG     WHEQ 'PDR:'
230400200529     C                     MOVEL'PDR'     WKPDE
230500200529     C*
230600200529     C           WKTAG     WHEQ 'DUP:'
230700200529     C                     MOVEL'DUP'     WKPDE
230800200529     C*
230900200529     C           WKTAG     WHEQ 'SPD:'
231000200529     C                     MOVEL'SPD'     WKSPD
231100200529     C*
231200200529     C                     ENDSL
231300200529      *
231400200529      *  Extract data string
231500200529      *
231600200529      *  Determine start position of data string. It will be the
231700200529      *  position after the end of the tag no.
231800200529      *
231900200529     C           E         ADD  1         S
232000200529      *
232100200529     C                     EXSR SRDATA
232200200529      *
232300200529      *  Set flag to denote first line of tag
232400200529      *
232500200529     C                     MOVEL'F'       WKFPID
232600200529      *
232700200529      *  Add message line details to database
232800200529      *
232900200529     C                     EXSR SRUPDT
233000200529      *
233100200529      *  Search for next open bracket starting from the end of the
233200200529      *  current data string
233300200529      *
233400200529      *  If no more open brackets, the system sets the delimiter
233500200529      *  to '0' - in that case re-set it to the same value as the end
233600200529      *  of block delimiter otherwise the do loop will loop.
233700200529      *
233800200529     C           CFT014    IFEQ 'Y'                                       CFT014
233900200529     C                     MOVELOPB       P@FCT1                          CFT014
234000200529     C                     Z-ADD1         P@LEN1                          CFT014
234100200529     C                     Z-ADDE         P@LEN2                          CFT014
234200200529     C                     EXSR SCNARR                                    CFT014
234300200529     C                     Z-ADDWRN05     OP                              CFT014
234400200529     C                     ELSE                                           CFT014
234500200529     C           OPB:1     SCAN DSSWD:E   OP
234600200529     C                     ENDIF                                          CFT014
234700200529      *
234800200529     C           OP        IFEQ 0
234900200529     C           OP        ORGT EN
235000200529     C                     Z-ADDEN        OP
235100200529     C                     END
235200200529      *
235300200529     C                     ENDDO
235400200529      *
235500200529      *  Unwind subroutine stack name
235600200529      *
235700200529     C           EXBLKS    TAG
235800200529     C                     MOVEA*BLANKS   @STK,Q
235900200529     C                     SUB  1         Q
236000200529      *
236100200529     CSR                   ENDSR
236200200529     C/EJECT
236300200529      *****************************************************************
236400200529      *                                                               *
236500200529      *  SRBLOK   : Search for position of next Block I.D             *
236600200529      *                                                               *
236700200529      *  CALLED BY: SRBLK1 - Process Block Identifier 1               *
236800200529      *             SRBLK2 - Process Block Identifier 2               *
236900200529      *             SRBLK3 - Process Block Identifier 3               *
237000200529      *             SRBLK4 - Process Block Identifier 4               *
237100200529      *             SRBLK5 - Process Block Identifier 5               *
237200200529      *                                                               *
237300200529      *  CALLS    :                                                   *
237400200529      *                                                               *
237500200529      *****************************************************************
237600200529     CSR         SRBLOK    BEGSR
237700200529      *
237800200529      *  Set up subroutine stack name
237900200529      *
238000200529     C                     ADD  1         Q
238100200529     C                     MOVEL'SRBLOK'  @STK,Q
238200200529      *
238300200529      *  Clear message tag field and message data field
238400200529      *
238500200529     C                     MOVEL*BLANKS   WKTAG
238600200529     C                     MOVEL*BLANKS   WKDATA
238700200529      *
238800200529      * Extract Block I.D
238900200529      *
239000200529      * Search for Start of Block. Begin search from the closing
239100200529      * bracket of the previous data string, field 'C'
239200200529      *
239300200529      * If substring found :-
239400200529      * Determine End position - start posn plus 2
239500200529      *
239600200529      * Determine Length - always 2
239700200529      *
239800200529      * Move data into parameter data structure
239900200529      *
240000200529     C           CFT014    IFEQ 'Y'                                       CFT014
240100200529     C                     MOVELBLKID     P@FCT1                          CFT014
240200200529     C                     Z-ADD2         P@LEN1                          CFT014
240300200529     C                     Z-ADDC         P@LEN2                          CFT014
240400200529     C                     EXSR SCNARR                                    CFT014
240500200529     C                     Z-ADDWRN05     S                               CFT014
240600200529     C                     ELSE                                           CFT014
240700200529     C           BLKID:2   SCAN DSSWD:C   S                Start Posn
240800200529     C                     ENDIF                                          CFT014
240900200529      *
241000200529     C           S         IFGT 0
241100200529     C           S         ADD  1         E                End Posn
241200200529      *
241300200529     C                     Z-ADD2         L                Strng Lngth
241400200529      *
241500200529     C           CFT014    IFEQ 'Y'                                       CFT014
241600200529     C                     Z-ADDL         P@LEN1                          CFT014
241700200529     C                     Z-ADDS         P@LEN2                          CFT014
241800200529     C                     EXSR SUBARR                                    CFT014
241900200529     C                     MOVELP@RSLT    WKTAG                           CFT014
242000200529     C                     ELSE                                           CFT014
242100200529     C           L         SUBSTDSSWD:S   WKTAG
242200200529     C                     ENDIF                                          CFT014
242300200529     C                     END
242400200529      *
242500200529      *  Unwind subroutine stack name
242600200529      *
242700200529     C           EXBLOK    TAG
242800200529     C                     MOVEA*BLANKS   @STK,Q
242900200529     C                     SUB  1         Q
243000200529      *
243100200529     CSR                   ENDSR
243200200529     C/EJECT
243300200529      *****************************************************************
243400200529      *                                                               *
243500200529      *  SRDATA   : Extract Data String Details                       *
243600200529      *                                                               *
243700200529      *  CALLED BY: SRBLK1 - Process Block Identifier 1               *
243800200529      *             SRBLK2 - Process Block Identifier 2               *
243900200529      *             SRBLK3 - Process Block Identifier 3               *
244000200529      *             SRBLK5 - Process Block Identifier 5               *
244100200529      *                                                               *
244200200529      *  CALLS    :                                                   *
244300200529      *                                                               *
244400200529      *****************************************************************
244500200529     CSR         SRDATA    BEGSR
244600200529      *
244700200529      *  Set up subroutine stack name
244800200529      *
244900200529     C                     ADD  1         Q
245000200529     C                     MOVEL'SRDATA'  @STK,Q
245100200529      *
245200200529      *  Clear message data field
245300200529      *
245400200529     C                     MOVEL*BLANKS   WKDATA
245500200529      *
245600200529      * Start position is set prior to execution of subroutine. It is
245700200529      * calculated as (End of tag no./block I.D. + 1)
245800200529      *
245900200529      * Search for closing bracket of string. As there is only 1 line
246000200529      * for the string it will be the first '}' found. Begin the search
246100200529      * from the End position of the Block I.D.
246200200529      *
246300200529      * Determine End position of the string. It is the character
246400200529      * before the closing bracket of the string.
246500200529      *
246600200529      * Then determine length of data string (End - Start + 1)
246700200529      * May be zero if tag has no data.
246800200529      *
246900200529      * Then move data string into data structure field that will be
247000200529      * passed to the access object ME1020. ('P' in posn 53 indicates
247100200529      * that the result field will be padded on the right with blanks
247200200529      * if factor 1 is shorter than the length of the result field)
247300200529      *
247400200529     C           CFT014    IFEQ 'Y'                                       CFT014
247500200529     C                     MOVEL'}'       P@FCT1                          CFT014
247600200529     C                     Z-ADD1         P@LEN1                          CFT014
247700200529     C                     Z-ADDE         P@LEN2                          CFT014
247800200529     C                     EXSR SCNARR                                    CFT014
247900200529     C                     Z-ADDWRN05     C                               CFT014
248000200529     C                     ELSE                                           CFT014
248100200529     C           '}':1     SCAN DSSWD:E   C                Close bracket
248200200529     C                     ENDIF                                          CFT014
248300200529      *
248400200529      * If no '}' found process for database error
248500200529      *
248600200529     C           C         IFEQ 0
248700200529      *
248800200529     C           Q         SUB  1         R       20
248900200529     C                     MOVEL@STK,R    W0FILE
249000200529     C                     MOVELE         W0KEY            ***************
249100200529     C                     Z-ADD9         W0ERNB           * DB ERROR 09 *
249200200529     C                     MOVEL'MIN0095' W0MSGD           ***************
249300200529     C                     MOVEL'MEMSG  ' W0MSGF
249400200529     C                     EXSR SRERR
249500200529      *
249600200529     C                     ELSE
249700200529      *
249800200529     C           C         SUB  1         E                End of string
249900200529      *
250000200529     C           E         SUB  S         L
250100200529     C                     ADD  1         L                String lngth
250200200529      *
250300200529     C           L         IFGT 0
250400200529     C           CFT014    IFEQ 'Y'                                       CFT014
250500200529     C                     Z-ADDL         P@LEN1                          CFT014
250600200529     C                     Z-ADDS         P@LEN2                          CFT014
250700200529     C                     EXSR SUBARR                                    CFT014
250800200529     C                     MOVELP@RSLT    WKDATA    P                     CFT014
250900200529     C                     ELSE                                           CFT014
251000200529     C           L         SUBSTDSSWD:S   WKDATA    P
251100200529     C                     ENDIF                                          CFT014
251200200529     C                     END
251300200529      *
251400200529     C                     END
251500200529      *
251600200529      *  Unwind subroutine stack name
251700200529      *
251800200529     C           EXDATA    TAG
251900200529     C                     MOVEA*BLANKS   @STK,Q
252000200529     C                     SUB  1         Q
252100200529      *
252200200529     CSR                   ENDSR
252300200529     C/EJECT
252400200529      *****************************************************************
252500200529      *                                                               *
252600200529      *  SRDAT4   : Extract Tag Message Line Data                     *
252700200529      *                                                               *
252800200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *
252900200529      *                                                               *
253000200529      *  CALLS    :                                                   *
253100200529      *                                                               *
253200200529      *****************************************************************
253300200529     CSR         SRDAT4    BEGSR
253400200529      *
253500200529      *  Set up subroutine stack name
253600200529      *
253700200529     C                     ADD  1         Q
253800200529     C                     MOVEL'SRDAT4'  @STK,Q
253900200529      *
254000200529      *  Clear message data field
254100200529      *
254200200529     C                     MOVEL*BLANKS   WKDATA
254300200529      *
254400200529      *  Extract data string
254500200529      *
254600200529      *  Start position was determined in SRBLK4
254700200529      *
254800200529      *  Determine end position of data string. It will be prior to
254900200529      *  the position of the next delimiter.
255000200529      *
255100200529      *  Check which is the next delimiter
255200200529      *
255300200529     C           F3        IFLT C2
255400200529     C                     Z-ADDF3        NXT
255500200529     C                     ELSE
255600200529     C                     Z-ADDC2        NXT
255700200529     C                     END
255800200529      *
255900200529     C           F4        IFLT NXT
256000200529     C                     Z-ADDF4        NXT
256100200529     C                     END
256200200529      *                                                                   CFT014
256300200529      ** If it is a special tag extract the maximum allowed               CFT014
256400200529      ** e.g :77T: is 9000z => extract up to 100 chars                    CFT014
256500200529     C           WEXDAT    IFEQ 'Y'                                       CFT014
256600200529     C           S         ADD  100       LENTAG                          CFT014
256700200529     C           LENTAG    IFLT NXT                                       CFT014
256800200529     C                     Z-ADDLENTAG    NXT                             CFT014
256900200529     C                     ENDIF                                          CFT014
257000200529     C                     ENDIF                                          CFT014
257100200529      *
257200200529     C           NXT       SUB  1         E
257300200529      *
257400200529      * Determine length of data string (End - Start + 1)
257500200529      *
257600200529     C/COPY WNCPYSRC,MS1900C016
257700200529     C           E         SUB  S         L
257800200529     C                     ADD  1         L
257900200529     C/COPY WNCPYSRC,MS1900C017
258000200529      *
258100200529      * Then move data string into parameter data structure.
258200200529      * ('P' in posn 53 indicates that the result field will be padded
258300200529      * on the right with blanks if factor 1 is shorter than the
258400200529      * length of the result field)
258500200529      *
258600200529     C           L         IFGT 0
258700200529     C           CFT014    IFEQ 'Y'                                       CFT014
258800200529     C                     Z-ADDL         P@LEN1                          CFT014
258900200529     C                     Z-ADDS         P@LEN2                          CFT014
259000200529     C                     EXSR SUBARR                                    CFT014
259100200529     C                     MOVELP@RSLT    WKDATA    P                     CFT014
259200200529     C                     ELSE                                           CFT014
259300200529     C           L         SUBSTDSSWD:S   WKDATA    P
259400200529     C                     ENDIF                                          CFT014
259500200529     C                     END
259600200529      *
259700200529      *  Unwind subroutine stack name
259800200529      *
259900200529     C           EXDAT4    TAG
260000200529     C                     MOVEA*BLANKS   @STK,Q
260100200529     C                     SUB  1         Q
260200200529      *
260300200529     CSR                   ENDSR
260400200529     C/EJECT
260500200529      *****************************************************************    CFT006
260600200529      *                                                               *    CFT006
260700200529      *  SREXSQ   : Extract for various purposes data  of a message   *    CFT006
260800200529      *             sequence                                          *    CFT006
260900200529      *                                                               *    CFT006
261000200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *    CFT006
261100200529      *                                                               *    CFT006
261200200529      *  CALLS    :                                                   *    CFT006
261300200529      *                                                               *    CFT006
261400200529      *****************************************************************    CFT006
261500200529     CSR         SREXSQ    BEGSR                                           CFT006
261600200529      *                                                                    CFT006
261700200529      *  Set up subroutine stack name                                      CFT006
261800200529      *                                                                    CFT006
261900200529     C                     ADD  1         Q                                CFT006
262000200529     C                     MOVEL'SREXSQ'  @STK,Q                           CFT006
262100200529      *                                                                    CFT006
262200200529     C           MTPY      IFEQ '101'                                      CFT006
262300200529     C           MTPY      OREQ '102'                                      CFT006
262400200529      *                                                                    CFT006
262500200529     C                     SELEC                                           CFT006
262600200529      *                                                                    CFT006
262700200529      * <-- Put here extraction specific to sequence A                     CFT006
262800200529     C           WSQANZ    WHEQ 'A'                                        CFT006
262900200529      *                                                                    CFT006
263000200529      * Fill the fields of MEIRFTPD                                        CFT006
263100200529      * From sequence A get the sender ref                                 CFT006
263200200529      * If MT102 get the sending institution                               CFT006
263300200529     C           WKTAG     IFEQ ':20:'                                     CFT006
263400200529     C                     MOVELWKDATA    SNDREF                           CFT006
263500200529     C                     ENDIF                                           CFT006
263600200529     C           MTPY      IFEQ '102'                                      CFT006
263700200529     C           WKTAG     IFEQ ':51A:'                                    CFT006
263800200529     C                     MOVELWKDATA    SNDIST                           CFT006
263900200529     C                     ENDIF                                           CFT006
264000200529     C                     ENDIF                                           CFT006
264100200529      *                                                                    CFT006
264200200529      * <-- Put here extraction specific to sequence B(part number)        CFT006
264300200529     C           WSQANZ    WHEQ *BLANK                                     CFT006
264400200529      *                                                                    CFT006
264500200529      * <-- Put here extraction specific to sequence C                     CFT006
264600200529     C           WSQANZ    WHEQ 'C'                                        CFT006
264700200529     C                     ENDSL                                           CFT006
264800200529      *                                                                    CFT006
264900200529     C                     ENDIF                                           CFT006
265000200529      *                                                                    CFT006
265100200529      *  Unwind subroutine stack name                                      CFT006
265200200529      *                                                                    CFT006
265300200529     C           EXEXSQ    TAG                                             CFT006
265400200529     C                     MOVEA*BLANKS   @STK,Q                           CFT006
265500200529     C                     SUB  1         Q                                CFT006
265600200529      *                                                                    CFT006
265700200529     CSR                   ENDSR                                           CFT006
265800200529     C/EJECT                                                               CFT006
265900200529      *****************************************************************
266000200529      *                                                               *
266100200529      *  SREXPT   : Extract Part Details from the message             *
266200200529      *                                                               *
266300200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *
266400200529      *                                                               *
266500200529      *  CALLS    : SREXAM - Extract Value Dtae/Ccy/Amount            *
266600200529      *                                                               *
266700200529      *****************************************************************
266800200529     CSR         SREXPT    BEGSR
266900200529      *
267000200529      *  Set up subroutine stack name
267100200529      *
267200200529     C                     ADD  1         Q
267300200529     C                     MOVEL'SREXPT'  @STK,Q
267400200529      *
267500200529      *  If an 800 series message use field 51 for Beneficiary
267600200529      *  if not already set
267700200529      *
267800200529     C                     MOVELMCMTPY    ##001   1
267900200529     C           PTAG      IFEQ ':51'
268000200529     C           MPBENF    ANDEQ*BLANKS
268100200529     C           ##001     ANDEQ'8'
268200200529     C                     MOVELWKDATA    MPBENF
268300200529     C                     END
268400200529      *
268500200529      *  If a 900 series message use field 25 for Beneficiary
268600200529      *
268700200529     C                     MOVELMCMTPY    ##001   1
268800200529     C           PTAG      IFEQ ':25'
268900200529     C           MPBENF    ANDEQ*BLANKS
269000200529     C           ##001     ANDEQ'9'
269100200529     C                     MOVELWKDATA    MPBENF
269200200529     C                     END
269300200529      *
269400200529      *  Extract data
269500200529      *
269600200529      *  Ensure there are no exceptions before                            CFT006
269700200529     C                     EXSR CKRFEX                                    CFT006
269800200529      *                                                                                       CSW212
269900200529     C           4         SUBSTWKDATA:2  WCODE   4                                           CSW212
270000200529     C                     SELEC
270100200529      *
270200200529      ***If*tag*:19:*extract*Sum*Of*Amounts                               CFT006
270300200529      *  If tag :19: extract Sum Of Amounts (other that MT102)            CFT006
270400200529      *
270500200529      *  This is only done if the tag occurs prior to the first :20:
270600200529      *  tag i.e. when the part no. is still 0.
270700200529      *
270800200529      *  It occurs ONLY on a message with multiple parts.
270900200529      *
271000200529      *  The amount is used for the Incoming Message Control record.
271100200529      *
271200200529     C           PTAG      WHEQ ':19'
271300200529     C           WKPART    ANDEQ0
271400200529     C                     MOVELWKDATA    CRAMTS
271500200529     C/COPY WNCPYSRC,MS1900C018
271600200529      *
271700200529      *  If tag :20: extract Transaction Reference
271800200529      *
271900200529     C           PTAG      WHEQ TRTAG
272000200529     C           WEXREF    ANDNE'Y'                                       CFT006
272100200529     C           4         SUBSTWKDATA:2  WCDWD   4                       140532
272200200529     C           WKTAG     IFEQ ':20C:'                                   140532
272300200529     C           WCDWD     IFEQ 'SEME'                                    140532
272400200529     C           16        SUBSTWKDATA:8  MPTRNO                          140532
272500200529     C                     ENDIF                                          140532
272600200529     C                     ELSE                                           140532
272700200529     C                     MOVELWKDATA    MPTRNO
272800200529     C                     ENDIF                                          140532
272900200529      *
273000200529      *  If tag :56: extract Intermediary
273100200529      *
273200200529     C           PTAG      WHEQ ':56'
273300200529     C                     MOVELWKDATA    MPINBK
273400200529      *                                                                                       CSW212
273500200529      ** If tag :95: and message code is INT1                                                 CSW212
273600200529      *                                                                                       CSW212
273700200529     C           PTAG      WHEQ ':95'                                                         CSW212
273800200529     C           WCODE     ANDEQ'INT1'                                                        CSW212
273900200529     C           35        SUBSTWKDATA:8  MPINBK                                              CSW212
274000200529      *
274100200529      *  If tag :57: extract Account With Institution
274200200529      *
274300200529     C           PTAG      WHEQ ':57'
274400200529     C                     MOVELWKDATA    MPACIN
274500200529      *                                                                                       CSW212
274600200529      ** If tag :95: and message code is ACCW                                                 CSW212
274700200529      *                                                                                       CSW212
274800200529     C           PTAG      WHEQ ':95'                                                         CSW212
274900200529     C           WCODE     ANDEQ'ACCW'                                                        CSW212
275000200529     C           35        SUBSTWKDATA:8  MPACIN                                              CSW212
275100200529      *
275200200529      *  If tag :58: or :59: extract Beneficiary
275300200529      *
275400200529     C           PTAG      WHEQ ':58'
275500200529     C           PTAG      OREQ ':59'
275600200529     C                     MOVELWKDATA    MPBENF
275700200529      *                                                                                       CSW212
275800200529      ** If tag :95: and message code is BENM                                                 CSW212
275900200529      *                                                                                       CSW212
276000200529     C           PTAG      WHEQ ':95'                                                         CSW212
276100200529     C           WCODE     ANDEQ'BENM'                                                        CSW212
276200200529     C           35        SUBSTWKDATA:8  MPBENF                                              CSW212
276300200529      *
276400200529      *  If tag is within the range of :30: to :34: extract Value Date,
276500200529      *  Currency and Amount
276600200529      *
276700200529     C           PTAG      WHEQ ':30'
276800200529     C           PTAG      OREQ ':31'
276900200529     C           PTAG      OREQ ':32'
277000200529     C           PTAG      OREQ ':33'
277100200529     C           PTAG      OREQ ':34'
277200200529      *  Check if the amount can be used to fill the part file            CFT006
277300200529     C                     EXSR CKAMEX                                    CFT006
277400200529     C           WEXAMT    IFNE 'Y'                                       CFT006
277500200529     C                     EXSR SREXAM
277600200529     C                     ENDIF                                          CFT006
277700200529      *
277800200529     C           MTPY      WHEQ '370'                                                         CSW212
277900200529      *                                                                                       CSW212
278000200529     C                     MOVELSVDT      MPSVDT                                              CSW212
278100200529     C                     MOVELSVDTC     MPSVDC                                              CSW212
278200200529     C                     MOVELAMTS      MPAMTS                                              CSW212
278300200529     C                     MOVELCCY       MPCYCD                                              CSW212
278400200529     C                     MOVELSVDT      CRSVDT                                              CSW212
278500200529     C                     MOVELSVDTC     CRSVDC                                              CSW212
278600200529     C                     MOVELAMTS      CRAMTS                                              CSW212
278700200529     C                     MOVELCCY       CRCYCD                                              CSW212
278800200529      *                                                                                       CSW212
278900200529      ** Format amount for Incoming Message Detail File                                       CSW212
279000200529      *                                                                                       CSW212
279100200529     C                     MOVELMPAMTS    ZFIELD                                              CSW212
279200200529     C                     EXSR SRFAMT                                                        CSW212
279300200529      *                                                                                       CSW212
279400200529     C                     ENDSL
279500200529      *
279600200529      *  Unwind subroutine stack name
279700200529      *
279800200529     C           EXEXPT    TAG
279900200529     C                     MOVEA*BLANKS   @STK,Q
280000200529     C                     SUB  1         Q
280100200529      *
280200200529     CSR                   ENDSR
280300200529     C/EJECT
280400200529      *****************************************************************
280500200529      *                                                               *
280600200529      *  SREXAM   : Extract Value Date/Currency/Amount details        *
280700200529      *                                                               *
280800200529      *  CALLED BY: SREXPT - Extract Part Details from message        *
280900200529      *                                                               *
281000200529      *  CALLS    :                                                   *
281100200529      *                                                               *
281200200529      *****************************************************************
281300200529     CSR         SREXAM    BEGSR
281400200529      *
281500200529      *  Set up subroutine stack name
281600200529      *
281700200529     C                     ADD  1         Q
281800200529     C                     MOVEL'SREXAM'  @STK,Q
281900200529      *
282000200529      *  Move data field to data structure for breakdown
282100200529      *
282200200529     C                     MOVELWKDATA    DMSG
282300200529      *
282400200529      *  Lokup table to determine in which format the info. is held.
282500200529      *
282600200529     C                     MOVEL*BLANKS   FMT     1
282700200529      *
282800200529     C                     Z-ADD1         X       30
282900200529     C           PTAGP     LOKUPTTAG,X                   63
283000200529      *
283100200529     C           *IN63     IFEQ '1'
283200200529     C                     MOVELTFMT,X    FMT
283300200529     C                     END
283400200529      *
283500200529      *  If format has an optional field that is not used then another
283600200529      *  format must be set.
283700200529      *
283800200529      *  Format 3
283900200529      *  If :32N:, :33N:, :34N: the negative amt indicator is optional.
284000200529      *
284100200529      *  If ind. is there, posn 7 will be the end of the date and so is
284200200529      *  numeric else it will be the start of the ccy and thus alpha.
284300200529      *
284400200529      *  If indicator is not there, replace with format 1
284500200529      *
284600200529     C                     SELEC
284700200529      *
284800200529     C           PTAGP     WHEQ '32N'
284900200529     C           PTAGP     OREQ '33N'
285000200529     C           PTAGP     OREQ '34N'
285100200529      *
285200200529     C           DIGITS    CHECKD3C7                     62
285300200529      *
285400200529     C           *IN62     IFEQ '1'                         Not numeric
285500200529     C                     MOVEL'1'       FMT
285600200529     C                     END
285700200529      *
285800200529      *  Format 4
285900200529      *  If :32H:, :34E: the negative amount indicator is optional.
286000200529      *
286100200529      *  If ind. is there, posn 4 will be the end of the ccy and so is
286200200529      *  alpha else it will be the start of the amt and thus numeric.
286300200529      *
286400200529      *  If indicator is not there, replace with format 2
286500200529      *
286600200529     C           PTAGP     WHEQ '32H'
286700200529     C           PTAGP     OREQ '34E'
286800200529      *
286900200529     C           DIGITS    CHECKD4C4                     62
287000200529      *
287100200529     C           *IN62     IFEQ '0'                         Numeric
287200200529     C***********          MOVEL'1'       FMT                             186724
287300200529     C                     MOVEL'2'       FMT                             186724
287400200529     C                     END
287500200529      *
287600200529      *  Format 5
287700200529      *  If :34G:, :34H: the No. Of days field is optional.
287800200529      *
287900200529      *  If Days is there, posn 1 will be the start of the days and so
288000200529      *  numeric else it will be the start of the ccy and thus alpha.
288100200529      *
288200200529      *  If indicator is not there, replace with format 2
288300200529      *
288400200529     C           PTAGP     WHEQ '34G'
288500200529     C           PTAGP     OREQ '34H'
288600200529      *
288700200529     C           DIGITS    CHECKD5C1                     62
288800200529      *
288900200529     C           *IN62     IFEQ '1'                         Not numeric
289000200529     C                     MOVEL'2'       FMT
289100200529     C                     END
289200200529      *
289300200529      *  Format 6
289400200529      *  If :34F: the Debit/Credit indicator is optional.
289500200529      *
289600200529      *  If Ind. is there, posn 4 will be the indicator and so alpha
289700200529      *  else it will be the start of the amt and thus numeric.
289800200529      *
289900200529      *  If indicator is not there, replace with format 2
290000200529      *
290100200529     C           PTAGP     WHEQ '34F'
290200200529      *
290300200529     C           D6DC      IFNE 'D'
290400200529     C           D6DC      ANDNE'C'
290500200529     C                     MOVEL'2'       FMT
290600200529     C                     END
290700200529      *
290800200529     C                     ENDSL
290900200529      *
291000200529      *  Move format fields to file fields
291100200529      *
291200200529     C                     SELEC
291300200529      *
291400200529      *  Format 1 - Date/Currency/Amount
291500200529      *
291600200529     C           FMT       WHEQ '1'
291700200529     C                     MOVELD1DTE     MPSVDT
291800200529     C                     MOVELD1CCY     MPCYCD
291900200529     C                     MOVELD1AMT     MPAMTS
292000200529      *
292100200529      *  Format 2 - Currency/Amount
292200200529      *
292300200529     C           FMT       WHEQ '2'
292400200529     C                     MOVELD2CCY     MPCYCD
292500200529     C                     MOVELD2AMT     MPAMTS
292600200529      *
292700200529      *  Format 3 - Negative Indicator/Date/Currency/Amount
292800200529      *
292900200529     C           FMT       WHEQ '3'
293000200529     C                     MOVELD3DTE     MPSVDT
293100200529     C                     MOVELD3CCY     MPCYCD
293200200529     C                     MOVELD3AMT     MPAMTS
293300200529      *
293400200529      *  Format 4 - Negative Indicator/Currency/Amount
293500200529      *
293600200529     C           FMT       WHEQ '4'
293700200529     C                     MOVELD4CCY     MPCYCD
293800200529     C                     MOVELD4AMT     MPAMTS
293900200529      *
294000200529      *  Format 5 - Days/Currency/Amount
294100200529      *
294200200529     C           FMT       WHEQ '5'
294300200529     C                     MOVELD5DAY     MPSVDT
294400200529     C                     MOVELD5CCY     MPCYCD
294500200529     C                     MOVELD5AMT     MPAMTS
294600200529      *
294700200529      *  Format 6 - Currency/DR,CR Indicator/Amount
294800200529      *
294900200529     C           FMT       WHEQ '6'
295000200529     C                     MOVELD6CCY     MPCYCD
295100200529     C                     MOVELD6AMT     MPAMTS
295200200529      *
295300200529      *  Format 7 - Date only
295400200529      *
295500200529     C           FMT       WHEQ '7'
295600200529     C                     MOVELD1DTE     MPSVDT
295700200529      *
295800200529     C                     ENDSL
295900200529      *
296000200529      *  If the currency,value date details are extracted prior to the
296100200529      *  occurrence of :20, i.e. when the part no. is 0, then the data
296200200529      *  must be used for the Incoming Message Control record -
296300200529      *
296400200529      *  BUT, only if the control fields have not yet been set up
296500200529      *  when processing the Tag :19 in subroutine SREXPT
296600200529      *
296700200529      *  This happens ONLY if the message has multiple parts
296800200529      *
296900200529     C           WKPART    IFEQ 0
297000200529      *
297100200529     C           CRSVDT    IFEQ *BLANKS
297200200529     C                     MOVELMPSVDT    CRSVDT
297300200529     C                     END
297400200529      *
297500200529     C           CRCYCD    IFEQ *BLANKS
297600200529     C                     MOVELMPCYCD    CRCYCD
297700200529     C                     END
297800200529      *
297900200529     C           CRAMTS    IFEQ *BLANKS
298000200529     C                     MOVELMPAMTS    CRAMTS
298100200529     C                     END
298200200529      *
298300200529     C                     END
298400200529      *                                                                   068251
298500200529      *  Extract SWIFT Amount into MPPYAM amount field 18,3               068251
298600200529      *                                                                   068251
298700200529     C                     MOVELMPAMTS    ZFIELD                          068251
298800200529      *                                                                   068251
298900200529      *  Replace "," with "." for conversion                              068251
299000200529      *                                                                   068251
299100200529     C                     MOVEAZFIELD    FLA                             068251
299200200529     C                     Z-ADD1         A       50                      068251
299300200529     C           ','       LOKUPFLA,A                    90               068251
299400200529     C           *IN90     IFEQ '1'                                       068251
299500200529     C                     MOVE '.'       FLA,A                           068251
299600200529     C                     END                                            068251
299700200529      *                                                                   188036
299800200529      **  Remove leading zeros before amounts                             188036
299900200529     C                     Z-ADD1         A                               188036
300000200529     C           FLA,A     DOWEQ'0'                                       188036
300100200529     C           FLA,A     OREQ ' '                                       188036
300200200529     C           A         ANDLT17                                        188036
300300200529     C           FLA,A     IFEQ '0'                                       188036
300400200529     C                     MOVE ' '       FLA,A                           188036
300500200529     C                     END                                            188036
300600200529     C                     ADD  1         A                               188036
300700200529     C                     END                                            188036
300800200529      *                                                                   188036
300900200529     C                     MOVEAFLA       ZFIELD                          068251
301000200529     C           *LIKE     DEFN ZFIELD    WTFAMA                          CFT006
301100200529     C                     MOVEAFLA       WTFAMA                          CFT006
301200200529      *                                                                   068251
301300200529     C                     CALL 'ZALIGN'                                  068251
301400200529     C                     PARM *BLANKS   ZRTN    7        B:Return Code  068251
301500200529     C                     PARM           ZFIELD 16        B:Check Field  068251
301600200529     C                     PARM 3         ZADEC   10       I:No Of Decs   068251
301700200529     C                     PARM 12        ZADIG   20       I:No Of Digits 068251
301800200529     C                     PARM           ZAFLD  16        O:Check Field  068251
301900200529      *                                                                   068251
302000200529     C                     Z-ADD0         MPPYAM                          068251
302100200529     C           ZRTN      IFEQ *BLANKS                                   068251
302200200529     C                     MOVE ZAFLD     ZNUM15 150                      068251
302300200529     C           ZNUM15    DIV  1000      MPPYAM                          068251
302400200529     C                     END                                            068251
302500200529      *                                                                   CFT006
302600200529      ***Format*the amount for MEIRFTPD according to the currency         CFT006              230505
302700200529     C***********CFT006    IFEQ 'Y'                                       CFT006              230505
302800200529     C***********MPCYCD    IFNE *BLANK                                    CFT006              230505
302900200529     C***********          Z-ADD0         WTFAMT 150                      CFT006              230505
303000200529      ***********                                                         CFT006              230505
303100200529     C***********          CALL 'AOCURRR0'             9090               CFT006              230505
303200200529     C***********          PARM *BLANKS   P@RTCD                          CFT006              230505
303300200529     C***********          PARM '*KEY   ' P@OPTN                          CFT006              230505
303400200529     C***********          PARM MPCYCD    P@K101  3                       CFT006              230505
303500200529     C***********SDCURR    PARM *BLANKS   DSSDY                           CFT006              230505
303600200529      ***********                                                         CFT006              230505
303700200529     C************IN90     IFEQ '1'                                       CFT006              230505
303800200529     C***********P@RTCD    ORNE *BLANK                                    CFT006              230505
303900200529      ***********                                                                      225169 230505
304000200529      ***Access*SDCURRLD keyed by SWIFT currency code, in case this is                 225169 230505
304100200529      ***different from Midas currency code.                                           225169 230505
304200200529      ***********                                                                      225169 230505
304300200529     C***********MPCYCD    CHAINSDCURRLD             88                                225169 230505
304400200529     C************IN88     IFEQ *ON                                                    225169 230505
304500200529     C***********          MOVEL'AOCURRR0'W0FILE           ***************CFT006              230505
304600200529     C***********          MOVELP@K101    W0KEY            * DB ERROR 16 *CFT006              230505
304700200529     C***********          Z-ADD16        W0ERNB           ***************CFT006              230505
304800200529     C***********          MOVEL'MEM5003' W0MSGD                          CFT006              230505
304900200529     C***********          MOVEL'MIDAS  ' W0MSGF                          CFT006              230505
305000200529     C***********          EXSR SRERR                                     CFT006              230505
305100200529     C***********          ENDIF                                                       225169 230505
305200200529     C***********          ENDIF                                          CFT006              230505
305300200529      ***********                                                         CFT006              230505
305400200529     C***********          MOVELWTFAMA    ZFIELD                          CFT006              230505
305500200529     C***********          Z-ADDA6NBDP    ZADEC                           CFT006              230505
305600200529     C***********15        SUB  A6NBDP    ZADIG                           CFT006              230505
305700200529     C***********          CALL 'ZALIGN'                                  CFT006              230505
305800200529     C***********          PARM *BLANKS   ZRTN    7                       CFT006              230505
305900200529     C***********          PARM           ZFIELD 16                       CFT006              230505
306000200529     C***********          PARM           ZADEC   10                      CFT006              230505
306100200529     C***********          PARM           ZADIG   20                      CFT006              230505
306200200529     C***********          PARM           ZAFLD  16                       CFT006              230505
306300200529      ***********                                                         CFT006              230505
306400200529     C***********ZRTN      IFNE *BLANKS                                   CFT006              230505
306500200529     C***********          MOVEL'ZALIGN  'W0FILE           ***************CFT006              230505
306600200529     C***********          MOVELZFIELD    W0KEY            * DB ERROR 17 *CFT006              230505
306700200529     C***********          Z-ADD17        W0ERNB           ***************CFT006              230505
306800200529     C***********          MOVEL'MEM5001' W0MSGD                          CFT006              230505
306900200529     C***********          MOVEL'MIDAS  ' W0MSGF                          CFT006              230505
307000200529     C***********          EXSR SRERR                                     CFT006              230505
307100200529     C***********          ENDIF                                          CFT006              230505
307200200529      ***********                                                         CFT006              230505
307300200529     C***********          MOVE ZAFLD     WTFAMT 150                      CFT006              230505
307400200529      ***********                                                         CFT006              230505
307500200529     C***********          ENDIF                                          CFT006              230505
307600200529      ***********                                                         CFT006              230505
307700200529     C***********          ENDIF                                          CFT006              230505
307800200529      *
307900200529      *  Unwind subroutine stack name
308000200529      *
308100200529     C           EXEXAM    TAG
308200200529     C                     MOVEA*BLANKS   @STK,Q
308300200529     C                     SUB  1         Q
308400200529      *
308500200529     CSR                   ENDSR
308600200529     C/EJECT
308700200529      *****************************************************************
308800200529      *                                                               *
308900200529      *  SREXC2   : Extract 2nd line of tag details                   *
309000200529      *                                                               *
309100200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *
309200200529      *                                                               *
309300200529      *  CALLS    :                                                   *
309400200529      *                                                               *
309500200529      *****************************************************************
309600200529     CSR         SREXC2    BEGSR
309700200529      *
309800200529      *  Set up subroutine stack name
309900200529      *
310000200529     C                     ADD  1         Q
310100200529     C                     MOVEL'SREXPT'  @STK,Q
310200200529      *
310300200529      *  If the line is for tag :56:, :57:, :58:, :59: then additional
310400200529      *  processing must be done to ensure that the details stored in
310500200529      *  the message part file for the Intermediary, Acct with Inst,
310600200529      *  and the Beneficiary do not commence with a '/'.
310700200529      *
310800200529      *  The above fields were extracted in subroutine SREXPT while
310900200529      *  processing the tag no. The field must be checked and if the
311000200529      *  first character is a '/' then the contents of the second line
311100200529      *  of the tag must be placed there IF the first character of that
311200200529      *  line is NOT '/'.
311300200529      *
311400200529      *  This processing is ONLY performed for the first line after the
311500200529      *  tag no. initial processing. A flag is set to condition the
311600200529      *  processing.
311700200529      *
311800200529      *  If tag :56: extract Intermediary
311900200529      *
312000200529     C                     SELEC
312100200529      *
312200200529     C           PTAG      WHEQ ':56'
312300200529     C           L2INBK    ANDEQ*BLANKS
312400200529     C                     MOVEL'Y'       L2INBK  1
312500200529     C                     MOVELMPINBK    CHAR1   1
312600200529     C                     MOVELWKDATA    CHAR2   1
312700200529      *
312800200529     C           CHAR1     IFEQ '/'
312900200529     C           CHAR2     ANDNE'/'
313000200529     C                     MOVELWKDATA    MPINBK
313100200529     C                     END
313200200529      *
313300200529      *  If tag :57: extract Account With Institution
313400200529      *
313500200529     C           PTAG      WHEQ ':57'
313600200529     C           L2ACIN    ANDEQ*BLANKS
313700200529     C                     MOVEL'Y'       L2ACIN  1
313800200529     C                     MOVELMPACIN    CHAR1
313900200529     C                     MOVELWKDATA    CHAR2   1
314000200529      *
314100200529     C           CHAR1     IFEQ '/'
314200200529     C           CHAR2     ANDNE'/'
314300200529     C                     MOVELWKDATA    MPACIN
314400200529     C                     END
314500200529      *
314600200529      *  If tag :58: or :59: extract Beneficiary
314700200529      *
314800200529     C           PTAG      WHEQ ':58'
314900200529     C           L2BENF    ANDEQ*BLANKS
315000200529      *
315100200529     C           PTAG      OREQ ':59'
315200200529     C           L2BENF    ANDEQ*BLANKS
315300200529     C                     MOVEL'Y'       L2BENF  1
315400200529     C                     MOVELMPBENF    CHAR1
315500200529     C                     MOVELWKDATA    CHAR2   1
315600200529      *
315700200529     C           CHAR1     IFEQ '/'
315800200529     C           CHAR2     ANDNE'/'
315900200529     C                     MOVELWKDATA    MPBENF
316000200529     C                     END
316100200529      *
316200200529     C                     ENDSL
316300200529      *
316400200529      *  Unwind subroutine stack name
316500200529      *
316600200529     C           EXEXC2    TAG
316700200529     C                     MOVEA*BLANKS   @STK,Q
316800200529     C                     SUB  1         Q
316900200529      *
317000200529     CSR                   ENDSR
317100200529     C/EJECT
317200200529      *****************************************************************
317300200529      *                                                               *
317400200529      *  SRUPDT   : Add Incoming Message Detail Line To Database      *
317500200529      *                                                               *
317600200529      *  CALLED BY: SRBLK1 - Process Block Identifier 1               *
317700200529      *             SRBLK2 - Process Block Identifier 2               *
317800200529      *             SRBLK3 - Process Block Identifier 3               *
317900200529      *             SRBLK4 - Process Block Identifier 4               *
318000200529      *             SRBLK5 - Process Block Identifier 5               *
318100200529      *                                                               *
318200200529      *  CALLS    :                                                   *
318300200529      *                                                               *
318400200529      *****************************************************************
318500200529     CSR         SRUPDT    BEGSR
318600200529      *
318700200529      *  Set up subroutine stack name
318800200529      *
318900200529     C                     ADD  1         Q
319000200529     C                     MOVEL'SRUPDT'  @STK,Q
319100200529      *
319200200529      * Increment tag message line sequence no.
319300200529      *
319400200529     C                     ADD  1         WKSEQ
319500200529      *
319600200529      * Move data to record format data structure
319700200529      *
319800200529     C                     CLEARINDT
319900200529     C                     CLEARW1DATA
320000200529      *
320100200529     C                     MOVELMCMSGR    DTMSGR
320200200529     C                     Z-ADDWKSEQ     DTSEQN
320300200529     C                     MOVELWKTAG     DTMTG
320400200529     C                     MOVELWKFPID    DTFPID
320500200529     C                     Z-ADDWKPART    DTPART
320600200529     C                     MOVELWKDATA    DTMFLD
320700200529      *                                                                                       CSW209
320800200529     C           CSW209    IFEQ 'Y'                                                           CSW209
320900200529     C                     MOVELWKMSEQ    DTMSEQ                                              CSW209
321000200529     C                     ENDIF                                                              CSW209
321100200529      *
321200200529      * Add Incoming Message Line
321300200529      *
321400200529     C                     MOVELINDT      W1DATA
321500200529      *
321600200529     C                     CALL 'ME1020'               90
321700200529     C                     PARM '*MSGDATA'W1ACT   8
321800200529     C                     PARM           W1DATA
321900200529     C                     PARM *BLANKS   W1RTN   7
322000200529      *
322100200529      *  If return with an error (LR seton in called program) then
322200200529      *  process for database error.
322300200529      *
322400200529     C           *IN90     IFEQ '1'
322500200529     C           W1RTN     OREQ '*ERROR*'
322600200529     C                     MOVEL'ME1020  'W0FILE
322700200529     C                     MOVEL'*CALL'   W0KEY            ***************
322800200529     C                     Z-ADD10        W0ERNB           * DB ERROR 10 *
322900200529     C                     MOVEL'MEM5003' W0MSGD           ***************
323000200529     C                     MOVEL'MIDAS  ' W0MSGF
323100200529     C                     EXSR SRERR
323200200529     C                     END
323300200529      *
323400200529      *  Set flag to denote one of multiple lines for tag
323500200529      *
323600200529     C                     MOVEL*BLANKS   WKFPID
323700200529      *
323800200529      *  Unwind subroutine stack name
323900200529      *
324000200529     C           EXUPDT    TAG
324100200529     C                     MOVEA*BLANKS   @STK,Q
324200200529     C                     SUB  1         Q
324300200529      *
324400200529     CSR                   ENDSR
324500200529     C/EJECT
324600200529      *****************************************************************
324700200529      *                                                               *
324800200529      *  SRPART   : Add Incoming Message Midas Transaction Control    *
324900200529      *             Record To Database                                *
325000200529      *                                                               *
325100200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *
325200200529      *                                                               *
325300200529      *  CALLS    :                                                   *
325400200529      *                                                               *
325500200529      *****************************************************************
325600200529     CSR         SRPART    BEGSR
325700200529      *
325800200529      *  Set up subroutine stack name
325900200529      *
326000200529     C                     ADD  1         Q
326100200529     C                     MOVEL'SRPART'  @STK,Q
326200200529      *
326300200529      *  Set up Incoming Message Part Detail record
326400200529      *
326500200529      *  The majority of the fields were set in subr SREXPT during the
326600200529      *  extraction of the message tags.
326700200529      *
326800200529      *  The initial clearing of the record format data structure occur
326900200529      *  in subr SRBLK4 when a new part is being processed
327000200529      *
327100200529      *  If the Part's value date field is blank then use the value
327200200529      *  date that has been stored in the Control record date field
327300200529      *  in subroutine SREXAM
327400200529      *
327500200529     C           MPSVDT    IFEQ *BLANKS
327600200529     C                     MOVELCRSVDT    MPSVDT           Value Date
327700200529     C                     END
327800200529      *                                                                   124673
327900200529     C           MPSVDT    IFNE *BLANKS                                   149261
328000200529     C                     MOVELMPSVDT    MPSVDC                          124673
328100200529     C           MPSVDC    IFLT '72'                                      124673
328200200529     C                     MOVE '20'      MPSVDC                          124673
328300200529     C                     ELSE                                           124673
328400200529     C                     MOVE '19'      MPSVDC                          124673
328500200529     C                     ENDIF                                          124673
328600200529     C                     ENDIF                                          149261
328700200529      *
328800200529     C                     Z-ADDMCMSGR    MPMSGR           Uniq Ref.
328900200529     C                     Z-ADDWKPART    MPKPRT           Part No.Key
329000200529      *
329100200529      *  Add Incoming Message Midas Transaction Control
329200200529      *
329300200529     C                     CLEARW1DATA
329400200529     C                     MOVELINMP      W1DATA
329500200529      *
329600200529     C                     CALL 'ME1020'               90
329700200529     C                     PARM '*MSGPART'W1ACT   8
329800200529     C                     PARM           W1DATA
329900200529     C                     PARM *BLANKS   W1RTN   7
330000200529      *
330100200529      *  If return with an error (LR seton in called program) then
330200200529      *  process for database error.
330300200529      *
330400200529     C           *IN90     IFEQ '1'
330500200529     C           W1RTN     OREQ '*ERROR*'
330600200529     C                     MOVEL'ME1020  'W0FILE
330700200529     C                     MOVEL'*CALL'   W0KEY            ***************
330800200529     C                     Z-ADD11        W0ERNB           * DB ERROR 11 *
330900200529     C                     MOVEL'MEM5003' W0MSGD           ***************
331000200529     C                     MOVEL'MIDAS  ' W0MSGF
331100200529     C                     EXSR SRERR
331200200529     C                     END
331300200529      *
331400200529      *  Store last used part no. in control field - used for updating
331500200529      *
331600200529     C                     Z-ADDWKPART    CRNPRT           No. Of Parts
331700200529      *
331800200529      *  Store last used part info that will be used for updating the
331900200529      *  Control file IF only one part exists.
332000200529      *
332100200529     C                     MOVELMPSVDT    WKSVDT           Value date
332200200529     C                     MOVELMPCYCD    WKCYCD           Currency
332300200529     C                     MOVELMPAMTS    WKAMTS           Amount
332400200529      *                                                                   CFT006
332500200529     C           MTPY      IFEQ '101'                                     CFT006
332600200529     C           MTPY      OREQ '102'                                     CFT006
332700200529      * Fill the fields of MEIRFTPD                                       CFT006
332800200529      * From sequence B cumulate amounts and increment total of           CFT006
332900200529      * transactions processed                                            CFT006
333000200529     C                     ADD  1         NUMTRN                          CFT006
333100200529     C                     ADD  MPPYAM    SUMAMT                          CFT006
333200200529      *                                                                   CFT006
333300200529     C                     ENDIF                                          CFT006
333400200529      *
333500200529      *  Unwind subroutine stack name
333600200529      *
333700200529     C           EXPART    TAG
333800200529     C                     MOVEA*BLANKS   @STK,Q
333900200529     C                     SUB  1         Q
334000200529      *
334100200529     CSR                   ENDSR
334200200529     C/EJECT
334300200529      *****************************************************************
334400200529      *                                                               *
334500200529      *  SRHEAD   : Add Incoming Message Control Record               *
334600200529      *                                                               *
334700200529      *  CALLED BY: Main processing section                           *
334800200529      *                                                               *
334900200529      *  CALLS    :                                                   *
335000200529      *                                                               *
335100200529      *****************************************************************
335200200529     CSR         SRHEAD    BEGSR
335300200529      *
335400200529      *  Set up subroutine stack name
335500200529      *
335600200529     C                     ADD  1         Q
335700200529     C                     MOVEL'SRHEAD'  @STK,Q
335800200529      *
335900200529      *  Extract data from the SWIFT message and place in the data
336000200529      *  structure fields of the record format
336100200529      *
336200200529     C                     CLEARW1DATA
336300200529      *
336400200529      *  The Unique Reference No. is accessed from a data area once the
336500200529      *  message is verified.
336600200529      *
336700200529     C                     MOVELMCMSGR    CRMSGR           Unique Ref.
336800200529      *
336900200529      *  The following fields are available on MSIXI2PD
337000200529      *
337100200529     C                     MOVEL*BLANKS   CRSYTM           System
337200200529     C/COPY WNCPYSRC,MS1900C002
337300200529     C/COPY OFCPYSRCZ,CFT135_018                                                              CFT135
337400200529     C                     MOVEL'SWIFT'   CRNWRK           Network
337500200529     C/COPY WNCPYSRC,MS1900C003
337600200529     C/COPY OFCPYSRCZ,CFT135_019                                                              CFT135
337700200529     C                     MOVELSNDR      CRSNDR           Sender
337800200529     C                     MOVELMIR       CRMIR            MIR
337900200529     C                     MOVELMOR       CRMOR            MOR
338000200529     C                     MOVELMTPY      CRMTPY           Msg Type
338100200529     C                     MOVELMPRY      CRMPRY           Priority
338200200529     C                     MOVELMODE      CRMODE           Received Date
338300200529     C                     MOVELMOTM      CRMOTM           Received Time
338400200529     C                     MOVELBRCA      CRBRCA           Branch
338500200529     C/COPY WNCPYSRC,MS1900C009
338600200529      *                                                                   124673
338700200529     C                     MOVELCRMODE    CRMDEC                          124673
338800200529     C           CRMDEC    IFLT '72'                                      124673
338900200529     C                     MOVE '20'      CRMDEC                          124673
339000200529     C                     ELSE                                           124673
339100200529     C                     MOVE '19'      CRMDEC                          124673
339200200529     C                     ENDIF                                          124673
339300200529      *                                                                   124673
339400200529      *
339500200529      *  Check if the Duplication Flag is found in Block Identifier 5
339600200529      *  or Block Identifier S.
339700200529      *
339800200529     C           WKPDE     IFNE *BLANKS
339900200529     C                     MOVELWKPDE     CRDUPF           Duplication
340000200529     C                     ELSE
340100200529      *
340200200529     C           WKSPD     IFNE *BLANKS
340300200529     C                     MOVELWKSPD     CRDUPF
340400200529     C                     END
340500200529      *
340600200529     C                     END
340700200529      *
340800200529      *  The following Sent date/time fields are found within Block 2
340900200529      *  Output record - extract info using a data structure
341000200529      *
341100200529     C                     MOVELB2INTD    CRSNTD           Sent Date
341200200529     C                     MOVELB2INTI    CRSNTT           Sent Time
341300200529      *                                                                   124673
341400200529     C                     MOVELCRSNTD    CRSTDC                          124673
341500200529     C           CRSTDC    IFLT '72'                                      124673
341600200529     C                     MOVE '20'      CRSTDC                          124673
341700200529     C                     ELSE                                           124673
341800200529     C                     MOVE '19'      CRSTDC                          124673
341900200529     C                     ENDIF                                          124673
342000200529      *                                                                   124673
342100200529      *
342200200529      *  The No. of Parts is accumulated in the SRPART subroutine
342300200529      *
342400200529      *  If there is only one part for the message then use the saved
342500200529      *  values from that part to fill the Ccy/Date Amount fields.
342600200529      *
342700200529      *  If a multiple message, the fields were filled in the SREXPT &
342800200529      *  SREXAM subroutines if the relevant tag nos occured prior to
342900200529      *  the message's first Start of Part tag.
343000200529      *
343100200529     C           CRNPRT    IFEQ 1
343200200529     C                     MOVELWKSVDT    CRSVDT           Value date
343300200529     C                     MOVELWKCYCD    CRCYCD           Currency
343400200529     C                     MOVELWKAMTS    CRAMTS           Amount
343500200529     C                     END
343600200529      *                                                                   124673
343700200529     C***********          MOVELCRSVDT    CRSTDC                   124673 149261
343800200529     C***********CRSTDC    IFLT '72'                               124673 149261
343900200529     C***********          MOVE '20'      CRSTDC                   124673 149261
344000200529     C***********          ELSE                                    124673 149261
344100200529     C***********          MOVE '19'      CRSTDC                   124673 149261
344200200529     C***********          ENDIF                                   124673 149261
344300200529      *                                                                   149261
344400200529      ** Initialisation of Value Date century field in MEINCRPD           149261
344500200529      *                                                                   149261
344600200529     C           CRSVDT    IFNE *BLANKS                                   149261
344700200529     C                     MOVELCRSVDT    CRSVDC                          149261
344800200529     C           CRSVDC    IFLT '72'                                      149261
344900200529     C                     MOVE '20'      CRSVDC                          149261
345000200529     C                     ELSE                                           149261
345100200529     C                     MOVE '19'      CRSVDC                          149261
345200200529     C                     ENDIF                                          149261
345300200529     C                     ENDIF                                          149261
345400200529      *                                                                   124673
345500200529      *
345600200529      *  N.B. Audit stamp is setup in access object
345700200529      *
345800200529     C/COPY WNCPYSRC,MS1900C021
345900200529      *  Add Incoming Message Control
346000200529      *
346100200529     C                     MOVELINCR      W1DATA
346200200529      *
346300200529     C                     CALL 'ME1020'               90
346400200529     C                     PARM '*MSGHEAD'W1ACT   8
346500200529     C                     PARM           W1DATA
346600200529     C                     PARM *BLANKS   W1RTN   7
346700200529      *
346800200529      *  If return with an error (LR seton in called program) then
346900200529      *  process for database error.
347000200529      *
347100200529     C           *IN90     IFEQ '1'
347200200529     C           W1RTN     OREQ '*ERROR*'
347300200529     C                     MOVEL'ME1020  'W0FILE
347400200529     C                     MOVEL'*CALL'   W0KEY            ***************
347500200529     C                     Z-ADD12        W0ERNB           * DB ERROR 12 *
347600200529     C                     MOVEL'MEM5003' W0MSGD           ***************
347700200529     C                     MOVEL'MIDAS  ' W0MSGF
347800200529     C                     EXSR SRERR
347900200529     C                     END
348000200529     C/COPY WNCPYSRC,MS1900C012
348100200529      *                                                                   CFT006
348200200529      *  Add MT101/MT102 specific control file                            CFT006
348300200529      *                                                                   CFT006
348400200529     C           CFT006    IFEQ 'Y'                                       CFT006
348500200529     C           MTPY      IFEQ '101'                                     CFT006
348600200529     C           MTPY      OREQ '102'                                     CFT006
348700200529      *                                                                   CFT006
348800200529     C                     CLEARW1DATA                                    CFT006
348900200529     C                     MOVELMTPY      RFMTPY                          CFT006
349000200529     C                     MOVELMIR       SWIFTR                          CFT006
349100200529     C                     MOVELIRFT      W1DATA                          CFT006
349200200529      *                                                                   CFT006
349300200529     C                     CALL 'ME1020'               90                 CFT006
349400200529     C                     PARM '*RFTCTRL'W1ACT   8                       CFT006
349500200529     C                     PARM           W1DATA                          CFT006
349600200529     C                     PARM *BLANKS   W1RTN   7                       CFT006
349700200529      *                                                                   CFT006
349800200529      *  If return with an error (LR seton in called program) then        CFT006
349900200529      *  process for database error.                                      CFT006
350000200529      *                                                                   CFT006
350100200529     C           *IN90     IFEQ '1'                                       CFT006
350200200529     C           W1RTN     OREQ '*ERROR*'                                 CFT006
350300200529     C                     MOVEL'ME1020  'W0FILE                          CFT006
350400200529     C                     MOVEL'*CALL'   W0KEY            ***************CFT006
350500200529     C                     Z-ADD16        W0ERNB           * DB ERROR 16 *CFT006
350600200529     C                     MOVEL'MEM5003' W0MSGD           ***************CFT006
350700200529     C                     MOVEL'MIDAS  ' W0MSGF                          CFT006
350800200529     C                     EXSR SRERR                                     CFT006
350900200529     C                     ENDIF                                          CFT006
351000200529      *                                                                   CFT006
351100200529     C                     ENDIF                                          CFT006
351200200529      *                                                                   CFT006
351300200529     C                     ENDIF                                          CFT006
351400200529      *
351500200529      *  Unwind subroutine stack name
351600200529      *
351700200529     C           EXHEAD    TAG
351800200529     C                     MOVEA*BLANKS   @STK,Q
351900200529     C                     SUB  1         Q
352000200529      *
352100200529     CSR                   ENDSR
352200200529     C/EJECT
352300200529      *****************************************************************   CGL013
352400200529      *                                                               *   CGL013
352500200529      *  MT920    : Call MT920 processing                             *   CGL013
352600200529      *                                                               *   CGL013
352700200529      *  CALLED BY: Main processing section                           *   CGL013
352800200529      *                                                               *   CGL013
352900200529      *  CALLS    :                                                   *   CGL013
353000200529      *                                                               *   CGL013
353100200529      *****************************************************************   CGL013
353200200529     CSR         MT920     BEGSR                                          CGL013
353300200529      *                                                                   CGL013
353400200529      *  Set up subroutine stack name                                     CGL013
353500200529      *                                                                   CGL013
353600200529     C                     ADD  1         Q                               CGL013
353700200529     C                     MOVEL'MT920 '  @STK,Q                          CGL013
353800200529      *                                                                   CGL013
353900200529     C                     CALL 'ME000060'             90                 CGL013
354000200529     C                     PARM *BLANKS   W1RTNC  7                       CGL013
354100200529     C                     PARM TRNO      W1TRNO 16                       CGL013
354200200529      *                                                                   CGL013
354300200529      *  If return with an error (LR seton in called program) then        CGL013
354400200529      *  process for database error.                                      CGL013
354500200529      *                                                                   CGL013
354600200529     C           *IN90     IFEQ '1'                                       CGL013
354700200529     C           W1RTNC    ORNE *BLANKS                                   CGL013
354800200529     C                     MOVEL'ME000060'W0FILE                          CGL013
354900200529     C                     MOVEL'*CALL'   W0KEY            ***************CGL013
355000200529     C                     Z-ADD13        W0ERNB           * DB ERROR 13 *CGL013
355100200529     C                     MOVEL'MEM5003' W0MSGD           ***************CGL013
355200200529     C                     MOVEL'MIDAS  ' W0MSGF                          CGL013
355300200529     C                     EXSR SRERR                                     CGL013
355400200529     C                     END                                            CGL013
355500200529      *                                                                   CGL013
355600200529      *  Unwind subroutine stack name                                     CGL013
355700200529      *                                                                   CGL013
355800200529     C           EXM920    TAG                                            CGL013
355900200529     C                     MOVEA*BLANKS   @STK,Q                          CGL013
356000200529     C                     SUB  1         Q                               CGL013
356100200529      *                                                                   CGL013
356200200529     CSR                   ENDSR                                          CGL013
356300200529     C/EJECT
356400200529      *****************************************************************
356500200529      *                                                               *
356600200529      *  SRAUTO   : Prompt FT Auto Generation                         *
356700200529      *                                                               *
356800200529      *  CALLED BY: Main processing                                   *
356900200529      *                                                               *
357000200529      *****************************************************************
357100200529     CSR         SRAUTO    BEGSR
357200200529      *
357300200529      *  Set up subroutine stack name
357400200529      *
357500200529     C                     ADD  1         Q       50
357600200529     C                     MOVEL'SRAUTO'  @STK,Q
357700200529      *
357800200529      *  /Copy point for Auto Generation
357900200529      *
358000200529     C/COPY WNCPYSRC,MS1900DAUT
358100200529      *
358200200529      *  Set up parameters
358300200529      *
358400200529     C                     CLEARINMC                       Input Data Str.
358500200529      *
358600200529     C                     MOVELCRNWRK    MCNWRK
358700200529     C                     MOVELCRMTPY    MCMTPY
358800200529     C                     MOVELCRSNDR    MCSNDR
358900200529     C                     MOVEL'*AUTO  ' MCACPT
359000200529     C                     MOVEL##PGM     MCCPGM
359100200529      *
359200200529      * Move passed parameter data to relevant data structure
359300200529      * and on to called program's data structure
359400200529      *
359500200529     C                     MOVELINMC      W1DATA
359600200529      *
359700200529      * Verify message
359800200529      *
359900200529     C                     CALL 'ME1030'               90
360000200529     C                     PARM '*AUTO   'W1ACT
360100200529     C                     PARM           W1DATA
360200200529     C                     PARM *BLANKS   W1RTN
360300200529      *
360400200529      *  If return with an error (LR seton in called program) then
360500200529      *  process for database error.
360600200529      *
360700200529     C           *IN90     IFEQ '1'
360800200529     C           W1RTN     OREQ '*ERROR*'
360900200529     C                     MOVEL'ME1030  'W0FILE           ***************
361000200529     C                     MOVEL'*CALL'   W0KEY            * DB ERROR 14 *
361100200529     C                     Z-ADD14        W0ERNB           ***************
361200200529     C                     MOVEL'MEM5003' W0MSGD
361300200529     C                     MOVEL'MIDAS  ' W0MSGF
361400200529     C                     EXSR SRERR
361500200529     C                     END
361600200529      *
361700200529      *  Process for invalid message if return code is 'MIN0091'
361800200529      *
361900200529     C           W1RTN     IFEQ 'MIN0091'
362000200529     C                     GOTO EXAUTO
362100200529     C                     END
362200200529      *
362300200529      *  Set up parameters for prompt
362400200529      *
362500200529     C                     MOVELCRMSGR    O#MSGR
362600200529     C                     MOVEL*BLANKS   O#PRTY
362700200529     C           CRMPRY    IFEQ 'U'
362800200529     C                     MOVEL'HIGH'    O#PRTY
362900200529     C                     ELSE
363000200529     C                     MOVEL'NORMAL'  O#PRTY
363100200529     C                     END
363200200529      *
363300200529      *  Prompt FT Auto Generation
363400200529      *
363500200529     C                     CALL 'MEC1304'              90
363600200529     C                     PARM *BLANKS   W2RTN   7
363700200529     C                     PARM           O#MSGR  8
363800200529     C                     PARM           O#PRTY 10
363900200529      *
364000200529      *  If return with an error (LR seton in called program) then
364100200529      *  process for database error.
364200200529      *
364300200529     C           *IN90     IFEQ '1'
364400200529     C           W2RTN     ORNE *BLANKS
364500200529     C           W2RTN     ANDNE'MIN0222'
364600200529     C                     MOVEL'MEC1304 'W0FILE           ***************
364700200529     C                     MOVEL'*CALL'   W0KEY            * DB ERROR 15 *
364800200529     C                     Z-ADD15        W0ERNB           ***************
364900200529     C                     MOVEL'MEM5003' W0MSGD
365000200529     C                     MOVEL'MIDAS  ' W0MSGF
365100200529     C                     EXSR SRERR
365200200529     C                     END
365300200529      *
365400200529      *  Unwind subroutine stack name
365500200529      *
365600200529     C           EXAUTO    TAG
365700200529     C                     MOVEA*BLANKS   @STK,Q
365800200529     C                     SUB  1         Q
365900200529      *
366000200529     CSR                   ENDSR
366100200529     C/EJECT
366200200529      *****************************************************************
366300200529      *                                                               *
366400200529      *  SRINIT   : Initialise and define fields                      *
366500200529      *                                                               *
366600200529      *  CALLED BY: Main processing                                   *
366700200529      *                                                               *
366800200529      *  CALLS    :                                                   *
366900200529      *                                                               *
367000200529      *****************************************************************
367100200529     CSR         SRINIT    BEGSR
367200200529      *
367300200529      *  Set up subroutine stack name
367400200529      *
367500200529     C                     ADD  1         Q       50
367600200529     C                     MOVEL'SRINIT'  @STK,Q
367700200529      *
367800200529      *  Set up copyright statement
367900200529      *
368000200529     C                     MOVEACPY@      BIS@   80
368100200529      *
368200200529      *  Define fields
368300200529      *
368400200529     C           *LIKE     DEFN DTPART    WKPART
368500200529     C           *LIKE     DEFN DTFPID    WKFPID
368600200529     C           *LIKE     DEFN DTSEQN    WKSEQ
368700200529     C           *LIKE     DEFN DTMFLD    WKDATA
368800200529      *
368900200529     C           *LIKE     DEFN CRSVDT    WKSVDT
369000200529     C           *LIKE     DEFN CRCYCD    WKCYCD
369100200529     C           *LIKE     DEFN CRAMTS    WKAMTS
369200200529     C           *LIKE     DEFN CRDUPF    WKPDE
369300200529     C           *LIKE     DEFN CRDUPF    WKSPD
369400200529      *
369500200529     C                     Z-ADD0         B       50
369600200529     C           *LIKE     DEFN B         C
369700200529     C           *LIKE     DEFN B         D
369800200529     C           *LIKE     DEFN B         E
369900200529     C           *LIKE     DEFN B         F
370000200529     C           *LIKE     DEFN B         L
370100200529     C           *LIKE     DEFN B         S
370200200529     C           *LIKE     DEFN B         T
370300200529     C           *LIKE     DEFN B         F3
370400200529     C           *LIKE     DEFN B         F4
370500200529     C           *LIKE     DEFN B         C2
370600200529     C           *LIKE     DEFN B         OP
370700200529     C           *LIKE     DEFN B         EN
370800200529     C           *LIKE     DEFN B         NXT
370900200529     C           *LIKE     DEFN B         LENMAX                          CFT014
371000200529     C           *LIKE     DEFN B         LENTAG                          CFT014
371100200529      *                                                                   CFT006
371200200529      * To force creation of message part                                 CFT006
371300200529      *                                                                   CFT006
371400200529     C                     MOVEL*BLANK    WSQANZ  1                       CFT006
371500200529      *
371600200529      *  Set up error processing message defaults
371700200529      *
371800200529     C                     MOVEL*BLANKS   W0MSGD
371900200529     C                     MOVEL'MEMSG   'W0MSGF
372000200529      *                                                                   CFT006
372100200529      *  Access SAR details file to see if CFT006 is installed.           CFT006
372200200529      *                                                                   CFT006
372300200529     C                     CALL 'AOSARDR0'             90                 CFT006
372400200529     C                     PARM *BLANKS   P@RTCD  7                       CFT006
372500200529     C                     PARM '*VERIFY' P@OPTN  7                       CFT006
372600200529     C                     PARM 'CFT006'  @SARD   6                       CFT006
372700200529     C           SCSARD    PARM *BLANKS   DSFDY                           CFT006
372800200529      *                                                                   CFT006
372900200529      *  Allow Batch Authorisation processing                             CFT006
373000200529      *                                                                   CFT006
373100200529     C           P@RTCD    IFEQ *BLANKS                                   CFT006
373200200529     C           *IN90     ANDEQ'0'                                       CFT006
373300200529     C                     MOVEL'Y'       CFT006                          CFT006
373400200529     C                     ELSE                                           CFT006
373500200529     C                     MOVEL'N'       CFT006  1                       CFT006
373600200529     C                     ENDIF                                          CFT006
373700200529      *                                                                   CFT014
373800200529      *  Access SAR details file to see if CFT014 is installed.           CFT014
373900200529      *                                                                   CFT014
374000200529     C                     CALL 'AOSARDR0'             90                 CFT014
374100200529     C                     PARM *BLANKS   P@RTCD  7                       CFT014
374200200529     C                     PARM '*VERIFY' P@OPTN  7                       CFT014
374300200529     C                     PARM 'CFT014'  @SARD   6                       CFT014
374400200529     C           SCSARD    PARM *BLANKS   DSFDY                           CFT014
374500200529      *                                                                   CFT014
374600200529      *  Allow MT103 processing                                           CFT014
374700200529      *                                                                   CFT014
374800200529     C           P@RTCD    IFEQ *BLANKS                                   CFT014
374900200529     C           *IN90     ANDEQ'0'                                       CFT014
375000200529     C                     MOVEL'Y'       CFT014                          CFT014
375100200529     C                     ELSE                                           CFT014
375200200529     C                     MOVEL'N'       CFT014  1                       CFT014
375300200529     C                     ENDIF                                          CFT014
375400200529      *                                                                   CGL013
375500200529      *  Access SAR details file to see if CGL013 is installed.           CGL013
375600200529      *                                                                   CGL013
375700200529     C                     CALL 'AOSARDR0'             90                 CGL013
375800200529     C                     PARM *BLANKS   P@RTCD  7                       CGL013
375900200529     C                     PARM '*VERIFY' P@OPTN  7                       CGL013
376000200529     C                     PARM 'CGL013'  @SARD   6                       CGL013
376100200529     C           SCSARD    PARM *BLANKS   DSFDY                           CGL013
376200200529      *                                                                   CGL013
376300200529      *  Allow MT920 processing                                           CGL013
376400200529      *                                                                   CGL013
376500200529     C           P@RTCD    IFEQ *BLANKS                                   CGL013
376600200529     C           *IN90     ANDEQ'0'                                       CGL013
376700200529     C                     MOVEL'Y'       CGL013                          CGL013
376800200529     C                     ELSE                                           CGL013
376900200529     C                     MOVEL'N'       CGL013  1                       CGL013
377000200529     C                     ENDIF                                          CGL013
377100200529      /COPY OFCPYSRCZ,CFT135_020                                                              CFT135
377200200529      *
377300200529      * Open Files
377400200529      *
377500200529     C                     OPEN MSIXI2LD
377600200529     C                     OPEN MSMSI2LA
377700200529      *
377800200529      *  Get Rundate information
377900200529      *
378000200529     C           *NAMVAR   DEFN RUNDAT    RUNDTA
378100200529     C                     IN   RUNDTA
378200200529     C                     MOVE AGMRDT    WUMRDT  7        Midas Run date
378300200529     C                     MOVE AGRDNB    WURDNB  50       Run day number
378400200529     C                     MOVE AGSUC     WUSUC   1        Set up complete
378500200529     C                     MOVE AGDFF     WUDFF   1        Date Format
378600200529     C                     MOVE AGMBIN    WUMBIN  1        Multi Branched
378700200529      *
378800200529     C/COPY WNCPYSRC,MS1900C022
378900200529      * Setup field for 'CRLF', used in SCAN checking to determine
379000200529      * delimiters for Block data strings
379100200529      *
379200200529     C                     BITOF'01236'   BTA
379300200529     C                     BITON'457'     BTA
379400200529     C                     BITOF'01346'   BTB
379500200529     C                     BITON'257'     BTB
379600200529      *
379700200529      * Setup Block 4 delimiters
379800200529      *
379900200529      * Setup delimiter FS2/FS3 - start of tag within message block
380000200529      *
380100200529     C                     MOVE ':'       CLN
380200200529     C                     MOVELCRLFC     FS3     3
380300200529      *
380400200529      * Setup delimiter CS2 - start of new line within tag
380500200529      *
380600200529     C                     MOVELCRLFC     CS2     2
380700200529      *
380800200529      * Setup delimiter FS4 - end of Block 4:
380900200529      *
381000200529     C                     MOVE '-'       CLN
381100200529     C                     MOVELCRLFC     FS4     3
381200200529      *                                                                                       253970
381300200529      * Setup alternative delimiters                                                          253970
381400200529      *                                                                                       253970
381500200529     C                     BITOF'2'       BTB                                                 253970
381600200529     C                     BITON'3'       BTB                                                 253970
381700200529      *                                                                                       253970
381800200529      * Setup delimiter FS2/FS3 - start of tag within message block                           253970
381900200529      *                                                                                       253970
382000200529     C                     MOVE ':'       CLN                                                 253970
382100200529     C                     MOVELCRLFC     ALTFS3  3                                           253970
382200200529      *                                                                                       253970
382300200529      * Setup delimiter CS2 - start of new line within tag                                    253970
382400200529      *                                                                                       253970
382500200529     C                     MOVELCRLFC     ALTCS2  2                                           253970
382600200529      *                                                                                       253970
382700200529      * Setup delimiter FS4 - end of Block 4:                                                 253970
382800200529      *                                                                                       253970
382900200529     C                     MOVE '-'       CLN                                                 253970
383000200529     C                     MOVELCRLFC     ALTFS4  3                                           253970
383100200529      *
383200200529      * Setup Block 5 delimiters
383300200529      *
383400200529     C                     MOVE '{'       OPB     1
383500200529     C                     MOVE '}}'      ENB     2
383600200529     C/COPY WNCPYSRC,MS1900C010
383700200529      *                                                                                       CSW209
383800200529      ** See if SWIFT 2009 Active                                                             CSW209
383900200529      *                                                                                       CSW209
384000200529     C                     CALL 'SWIF2009'                                                    CSW209
384100200529     C                     PARM           P@RTCD                                              CSW209
384200200529     C           P@RTCD    IFEQ 'CSW2009'                                                     CSW209
384300200529     C                     MOVE 'Y'       CSW209  1                                           CSW209
384400200529     C                     ELSE                                                               CSW209
384500200529     C                     MOVE 'N'       CSW209                                              CSW209
384600200529     C                     ENDIF                                                              CSW209
384700200529      *                                                                                       CSW218
384800200529      ** Check if SWIFT 2018 is installed                                                     CSW218
384900200529      *                                                                                       CSW218
385000200529     C                     CALL 'SWIF2018'                                                    CSW218
385100200529     C                     PARM *BLANKS   P@RTCD                                              CSW218
385200200529     C           P@RTCD    IFEQ 'CSW2018'                                                     CSW218
385300200529     C                     MOVE 'Y'       CSW218  1                                           CSW218
385400200529     C                     ELSE                                                               CSW218
385500200529     C                     MOVE 'N'       CSW218                                              CSW218
385600200529     C                     ENDIF                                                              CSW218
385700200529      *                                                                                       CSW209
385800200529      ** Define Key List for MESTGSL1                                                         CSW209
385900200529      *                                                                                       CSW209
386000200529     C           KLIST1    KLIST                                                              CSW209
386100200529     C                     KFLD           MTPY                                                CSW209
386200200529     C                     KFLD           WKTAG                                               CSW209
386300200529     C                     KFLD           WKVALF                                              CSW209
386400200529      *
386500200529      *  Indicate that set up is complete
386600200529      *
386700200529     C                     SETON                     50
386800200529      *
386900200529      *  Unwind subroutine stack name
387000200529      *
387100200529     C           EXINIT    TAG
387200200529     C                     MOVEA*BLANKS   @STK,Q
387300200529     C                     SUB  1         Q
387400200529     C/COPY WNCPYSRC,MS1900C019
387500200529      *
387600200529     CSR                   ENDSR
387700200529     C/EJECT
387800200529      *****************************************************************   CFT006
387900200529      *                                                               *   CFT006
388000200529      *  CKTREX   : Check there are no exceptions                     *   CFT006
388100200529      *                                                               *   CFT006
388200200529      *  CALLED BY: SRBLK4 - Process Block Identifier 4               *   CFT006
388300200529      *                                                               *   CFT006
388400200529      *  CALLS    :                                                   *   CFT006
388500200529      *                                                               *   CFT006
388600200529      *****************************************************************   CFT006
388700200529     CSR         CKTREX    BEGSR                                          CFT006
388800200529      *                                                                   CFT006
388900200529      *  Set up subroutine stack name                                     CFT006
389000200529      *                                                                   CFT006
389100200529     C                     ADD  1         Q       50                      CFT006
389200200529     C                     MOVEL'CKTREX'  @STK,Q                          CFT006
389300200529      *                                                                   CFT006
389400200529     C                     MOVELMTPY      WCKMTY                          CFT006
389500200529     C                     MOVELWKTAG     WCKTAG                          CFT006
389600200529     C                     MOVELWSQANZ    WCKSEQ                          CFT006
389700200529     C           WCKARG    LOKUPTREX                     63               CFT006
389800200529      *                                                                   CFT006
389900200529     C           *IN63     IFEQ '1'                                       CFT006
390000200529     C                     MOVEL'Y'       WEXTRN  1                       CFT006
390100200529     C                     ELSE                                           CFT006
390200200529     C                     MOVEL'N'       WEXTRN                          CFT006
390300200529     C                     ENDIF                                          CFT006
390400200529      *                                                                   CFT006
390500200529      *  Unwind subroutine stack name                                     CFT006
390600200529      *                                                                   CFT006
390700200529     C           EXTREX    TAG                                            CFT006
390800200529     C                     MOVEA*BLANKS   @STK,Q                          CFT006
390900200529     C                     SUB  1         Q                               CFT006
391000200529      *                                                                   CFT006
391100200529     CSR                   ENDSR                                          CFT006
391200200529     C/EJECT                                                              CFT006
391300200529      *****************************************************************   CFT006
391400200529      *                                                               *   CFT006
391500200529      *  CKRFEX   : Check there are no exceptions                     *   CFT006
391600200529      *                                                               *   CFT006
391700200529      *  CALLED BY: SREXPT - Extract Part Details from the message    *   CFT006
391800200529      *                                                               *   CFT006
391900200529      *  CALLS    :                                                   *   CFT006
392000200529      *                                                               *   CFT006
392100200529      *****************************************************************   CFT006
392200200529     CSR         CKRFEX    BEGSR                                          CFT006
392300200529      *                                                                   CFT006
392400200529      *  Set up subroutine stack name                                     CFT006
392500200529      *                                                                   CFT006
392600200529     C                     ADD  1         Q       50                      CFT006
392700200529     C                     MOVEL'CKRFEX'  @STK,Q                          CFT006
392800200529      *                                                                   CFT006
392900200529     C                     MOVELMTPY      WCKMTY                          CFT006
393000200529     C                     MOVELWKTAG     WCKTAG                          CFT006
393100200529     C                     MOVELWSQANZ    WCKSEQ                          CFT006
393200200529     C           WCKARG    LOKUPRFEX                     63               CFT006
393300200529      *                                                                   CFT006
393400200529     C           *IN63     IFEQ '1'                                       CFT006
393500200529     C                     MOVEL'Y'       WEXREF  1                       CFT006
393600200529     C                     ELSE                                           CFT006
393700200529     C                     MOVEL'N'       WEXREF                          CFT006
393800200529     C                     ENDIF                                          CFT006
393900200529      *                                                                   CFT006
394000200529      *  Unwind subroutine stack name                                     CFT006
394100200529      *                                                                   CFT006
394200200529     C           EXRFEX    TAG                                            CFT006
394300200529     C                     MOVEA*BLANKS   @STK,Q                          CFT006
394400200529     C                     SUB  1         Q                               CFT006
394500200529      *                                                                   CFT006
394600200529     CSR                   ENDSR                                          CFT006
394700200529     C/EJECT                                                              CFT006
394800200529      *****************************************************************   CFT006
394900200529      *                                                               *   CFT006
395000200529      *  CKAMEX   : Check there are no exceptions in the amounts      *   CFT006
395100200529      *                                                               *   CFT006
395200200529      *  CALLED BY: SREXPT - Extract Part Details from the message    *   CFT006
395300200529      *                                                               *   CFT006
395400200529      *  CALLS    :                                                   *   CFT006
395500200529      *                                                               *   CFT006
395600200529      *****************************************************************   CFT006
395700200529     CSR         CKAMEX    BEGSR                                          CFT006
395800200529      *                                                                   CFT006
395900200529      *  Set up subroutine stack name                                     CFT006
396000200529      *                                                                   CFT006
396100200529     C                     ADD  1         Q       50                      CFT006
396200200529     C                     MOVEL'CKAMEX'  @STK,Q                          CFT006
396300200529      *                                                                   CFT006
396400200529     C                     MOVELMTPY      WCKMTY                          CFT006
396500200529     C                     MOVELWKTAG     WCKTAG                          CFT006
396600200529     C                     MOVELWSQANZ    WCKSEQ                          CFT006
396700200529     C           WCKARG    LOKUPAMEX                     63               CFT006
396800200529      *                                                                   CFT006
396900200529     C           *IN63     IFEQ '1'                                       CFT006
397000200529     C                     MOVEL'Y'       WEXAMT  1                       CFT006
397100200529     C                     ELSE                                           CFT006
397200200529     C                     MOVEL'N'       WEXAMT                          CFT006
397300200529     C                     ENDIF                                          CFT006
397400200529      *                                                                   CFT006
397500200529      *  Unwind subroutine stack name                                     CFT006
397600200529      *                                                                   CFT006
397700200529     C           EXAMEX    TAG                                            CFT006
397800200529     C                     MOVEA*BLANKS   @STK,Q                          CFT006
397900200529     C                     SUB  1         Q                               CFT006
398000200529      *                                                                   CFT006
398100200529     CSR                   ENDSR                                          CFT006
398200200529      *****************************************************************   CFT014
398300200529      *                                                               *   CFT014
398400200529      *  CKDTEX   : Check there are no exceptions in the tag's data   *   CFT014
398500200529      *                                                               *   CFT014
398600200529      *  CALLED BY: SRBLK4 - Process Block Identifier                 *   CFT014
398700200529      *                                                               *   CFT014
398800200529      *  CALLS    :                                                   *   CFT014
398900200529      *                                                               *   CFT014
399000200529      *****************************************************************   CFT014
399100200529     CSR         CKDTEX    BEGSR                                          CFT014
399200200529      *                                                                   CFT014
399300200529      *  Set up subroutine stack name                                     CFT014
399400200529      *                                                                   CFT014
399500200529     C                     ADD  1         Q       50                      CFT014
399600200529     C                     MOVEL'CKDTEX'  @STK,Q                          CFT014
399700200529      *                                                                   CFT014
399800200529     C                     MOVELMTPY      WCKMTY                          CFT014
399900200529     C                     MOVELWKTAG     WCKTAG                          CFT014
400000200529     C                     MOVELWSQANZ    WCKSEQ                          CFT014
400100200529     C           WCKARG    LOKUPDTEX                     63               CFT014
400200200529      *                                                                   CFT014
400300200529     C           *IN63     IFEQ '1'                                       CFT014
400400200529     C                     MOVEL'Y'       WEXDAT  1                       CFT014
400500200529     C                     ELSE                                           CFT014
400600200529     C                     MOVEL'N'       WEXDAT                          CFT014
400700200529     C                     ENDIF                                          CFT014
400800200529      *                                                                   CFT014
400900200529      *  Unwind subroutine stack name                                     CFT014
401000200529      *                                                                   CFT014
401100200529     C           EXDTEX    TAG                                            CFT014
401200200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
401300200529     C                     SUB  1         Q                               CFT014
401400200529      *                                                                   CFT014
401500200529     CSR                   ENDSR                                          CFT014
401600200529      *****************************************************************   CFT014
401700200529      *                                                               *   CFT014
401800200529      *  EXDTST   : Extract data from special tag                     *   CFT014
401900200529      *                                                               *   CFT014
402000200529      *  CALLED BY: SRBLK4 - Process Block Identifier                 *   CFT014
402100200529      *                                                               *   CFT014
402200200529      *  CALLS    :                                                   *   CFT014
402300200529      *                                                               *   CFT014
402400200529      *****************************************************************   CFT014
402500200529     CSR         EXDTST    BEGSR                                          CFT014
402600200529      *                                                                   CFT014
402700200529      *  Set up subroutine stack name                                     CFT014
402800200529      *                                                                   CFT014
402900200529     C                     ADD  1         Q       50                      CFT014
403000200529     C                     MOVEL'EXDTEX'  @STK,Q                          CFT014
403100200529      *                                                                   CFT014
403200200529      **  Flag to indicate whether we can leave the loop in SRBLK4        CFT014
403300200529     C                     MOVEL'N'       WEXLV   1                       CFT014
403400200529      *                                                                   CFT014
403500200529     C                     SELEC                                          CFT014
403600200529      **  Extract data from tag :77T: of MT103                            CFT014
403700200529     C           WKTAG     WHEQ ':77T:'                                   CFT014
403800200529     C           MTPY      ANDEQ'103'                                     CFT014
403900200529     C                     EXSR TG77T                                     CFT014
404000200529     C                     MOVEL'Y'       WEXLV                           CFT014
404100200529     C                     OTHER                                          CFT014
404200200529     C                     ENDSL                                          CFT014
404300200529      *                                                                   CFT014
404400200529      *  Unwind subroutine stack name                                     CFT014
404500200529      *                                                                   CFT014
404600200529     C           EXEDTS    TAG                                            CFT014
404700200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
404800200529     C                     SUB  1         Q                               CFT014
404900200529      *                                                                   CFT014
405000200529     CSR                   ENDSR                                          CFT014
405100200529      *****************************************************************   CFT014
405200200529      *                                                               *   CFT014
405300200529      *  TG77T    : Extract data from :77T:                           *   CFT014
405400200529      *                                                               *   CFT014
405500200529      *  CALLED BY: EXDTST - Extract data from special tag            *   CFT014
405600200529      *                                                               *   CFT014
405700200529      *  CALLS    :                                                   *   CFT014
405800200529      *                                                               *   CFT014
405900200529      *****************************************************************   CFT014
406000200529     CSR         TG77T     BEGSR                                          CFT014
406100200529      *                                                                   CFT014
406200200529      *  Set up subroutine stack name                                     CFT014
406300200529      *                                                                   CFT014
406400200529     C                     ADD  1         Q       50                      CFT014
406500200529     C                     MOVEL'TG77T '  @STK,Q                          CFT014
406600200529      * Start of extraction = former start + length extracted.            CFT014
406700200529     C                     ADD  L         S                               CFT014
406800200529      *                                                                                     AR845802
406900200529      ** If the new line delimiter is less than the new tag                                 AR845802
407000200529      ** tag delimiter, then extract data only until C2.                                    AR845802
407100200529      ** Else, extract until F3.                                                            AR845802
407200200529      *                                                                                     AR845802
407300200529     C           F3        IFLT C2                                                          AR845802
407400200529      *                                                                                     AR845802
407500200529     C           S         DOWLTF3                                        CFT014
407600200529     C                     EXSR SRDAT4                                    CFT014
407700200529     C                     EXSR SRUPDT                                    CFT014
407800200529     C                     ADD  L         S                               CFT014
407900200529     C                     ENDDO                                          CFT014
408000200529      *                                                                                     AR845802
408100200529     C                     ELSE                                                             AR845802
408200200529      *                                                                                     AR845802
408300200529     C           S         DOWLTC2                                                          AR845802
408400200529     C                     EXSR SRDAT4                                                      AR845802
408500200529     C                     EXSR SRUPDT                                                      AR845802
408600200529     C                     ADD  L         S                                                 AR845802
408700200529     C                     ENDDO                                                            AR845802
408800200529      *                                                                                     AR845802
408900200529     C                     ENDIF                                                            AR845802
409000200529      *                                                                   CFT014
409100200529     C           EXTG77    TAG                                            CFT014
409200200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
409300200529     C                     SUB  1         Q                               CFT014
409400200529      *                                                                   CFT014
409500200529     CSR                   ENDSR                                          CFT014
409600200529      *****************************************************************   CFT014
409700200529      *                                                               *   CFT014
409800200529      *  CLRARR   : Clear the big array                               *   CFT014
409900200529      *                                                               *   CFT014
410000200529      *  CALLED BY: SRSWFT - Extract Data From SWIFT Message          *   CFT014
410100200529      *                                                               *   CFT014
410200200529      *  CALLS    :                                                   *   CFT014
410300200529      *                                                               *   CFT014
410400200529      *****************************************************************   CFT014
410500200529     CSR         CLRARR    BEGSR                                          CFT014
410600200529      *                                                                   CFT014
410700200529      *  Set up subroutine stack name                                     CFT014
410800200529      *                                                                   CFT014
410900200529     C                     ADD  1         Q       50                      CFT014
411000200529     C                     MOVEL'CLRARR'  @STK,Q                          CFT014
411100200529      *                                                                   CFT014
411200200529     C                     CALL 'MS1910'               90                 CFT014
411300200529     C                     PARM *BLANK    P@FCT1256                       CFT014
411400200529     C                     PARM 0         P@LEN1 150                      CFT014
411500200529     C                     PARM '*CLEAR_A'P@OPCD 10                       CFT014
411600200529     C                     PARM *BLANK    P@FCT2256                       CFT014
411700200529     C                     PARM 0         P@LEN2 150                      CFT014
411800200529     C           DSRSLT    PARM *BLANK    P@RSLT256                       CFT014
411900200529     C                     PARM *BLANK    P@RTCD  7                       CFT014
412000200529      *                                                                   CFT014
412100200529     C           *IN90     IFEQ '1'                                       CFT014
412200200529     C           P@RTCD    ORNE *BLANK                                    CFT014
412300200529     C                     MOVEL'MS1910  'W0FILE           ***************CFT014
412400200529     C                     MOVEL'*CLEAR'  W0KEY            * DB ERROR 19 *CFT014
412500200529     C                     Z-ADD19        W0ERNB           ***************CFT014
412600200529     C                     MOVEL'MEM5003' W0MSGD                          CFT014
412700200529     C                     MOVEL'MIDAS  ' W0MSGF                          CFT014
412800200529     C                     EXSR SRERR                                     CFT014
412900200529     C                     ENDIF                                          CFT014
413000200529      *                                                                   CFT014
413100200529      *  Unwind subroutine stack name                                     CFT014
413200200529      *                                                                   CFT014
413300200529     C           EXCLAR    TAG                                            CFT014
413400200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
413500200529     C                     SUB  1         Q                               CFT014
413600200529      *                                                                   CFT014
413700200529     CSR                   ENDSR                                          CFT014
413800200529      *****************************************************************   CFT014
413900200529      *                                                               *   CFT014
414000200529      *  FILARR   : Fill  the big array                               *   CFT014
414100200529      *                                                               *   CFT014
414200200529      *  CALLED BY: SRSWFT - Extract Data From SWIFT Message          *   CFT014
414300200529      *                                                               *   CFT014
414400200529      *  CALLS    :                                                   *   CFT014
414500200529      *                                                               *   CFT014
414600200529      *****************************************************************   CFT014
414700200529     CSR         FILARR    BEGSR                                          CFT014
414800200529      *                                                                   CFT014
414900200529      *  Set up subroutine stack name                                     CFT014
415000200529      *                                                                   CFT014
415100200529     C                     ADD  1         Q       50                      CFT014
415200200529     C                     MOVEL'FILARR'  @STK,Q                          CFT014
415300200529      *                                                                   CFT014
415400200529     C                     CALL 'MS1910'               90                 CFT014
415500200529     C                     PARM           P@FCT1256                       CFT014
415600200529     C                     PARM 0         P@LEN1 150                      CFT014
415700200529     C                     PARM '*FILL   'P@OPCD 10                       CFT014
415800200529     C                     PARM *BLANK    P@FCT2256                       CFT014
415900200529     C                     PARM           P@LEN2 150                      CFT014
416000200529     C           DSRSLT    PARM *BLANK    P@RSLT256                       CFT014
416100200529     C                     PARM *BLANK    P@RTCD  7                       CFT014
416200200529      *                                                                   CFT014
416300200529     C           *IN90     IFEQ '1'                                       CFT014
416400200529     C           P@RTCD    ORNE *BLANK                                    CFT014
416500200529     C                     MOVEL'MS1910  'W0FILE           ***************CFT014
416600200529     C                     MOVEL'*FILL'   W0KEY            * DB ERROR 20 *CFT014
416700200529     C                     Z-ADD20        W0ERNB           ***************CFT014
416800200529     C                     MOVEL'MEM5003' W0MSGD                          CFT014
416900200529     C                     MOVEL'MIDAS  ' W0MSGF                          CFT014
417000200529     C                     EXSR SRERR                                     CFT014
417100200529     C                     ENDIF                                          CFT014
417200200529      *                                                                   CFT014
417300200529      *  Unwind subroutine stack name                                     CFT014
417400200529      *                                                                   CFT014
417500200529     C           EXFIAR    TAG                                            CFT014
417600200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
417700200529     C                     SUB  1         Q                               CFT014
417800200529      *                                                                   CFT014
417900200529     CSR                   ENDSR                                          CFT014
418000200529      *****************************************************************   CFT014
418100200529      *                                                               *   CFT014
418200200529      *  SCNARR   : Scan  the big array                               *   CFT014
418300200529      *                                                               *   CFT014
418400200529      *  CALLED BY: SRSWFT - Extract Data From SWIFT Message          *   CFT014
418500200529      *                                                               *   CFT014
418600200529      *  CALLS    :                                                   *   CFT014
418700200529      *                                                               *   CFT014
418800200529      *****************************************************************   CFT014
418900200529     CSR         SCNARR    BEGSR                                          CFT014
419000200529      *                                                                   CFT014
419100200529      *  Set up subroutine stack name                                     CFT014
419200200529      *                                                                   CFT014
419300200529     C                     ADD  1         Q       50                      CFT014
419400200529     C                     MOVEL'SCNARR'  @STK,Q                          CFT014
419500200529      *                                                                   CFT014
419600200529     C                     CALL 'MS1910'               90                 CFT014
419700200529     C                     PARM           P@FCT1256                       CFT014
419800200529     C                     PARM           P@LEN1 150                      CFT014
419900200529     C                     PARM '*SCAN   'P@OPCD 10                       CFT014
420000200529     C                     PARM *BLANK    P@FCT2256                       CFT014
420100200529     C                     PARM           P@LEN2 150                      CFT014
420200200529     C           DSRSLT    PARM *BLANK    P@RSLT256                       CFT014
420300200529     C                     PARM *BLANK    P@RTCD  7                       CFT014
420400200529      *                                                                   CFT014
420500200529     C           *IN90     IFEQ '1'                                       CFT014
420600200529     C           P@RTCD    ORNE *BLANK                                    CFT014
420700200529     C                     MOVEL'MS1910  'W0FILE           ***************CFT014
420800200529     C                     MOVEL'*SCAN'   W0KEY            * DB ERROR 21 *CFT014
420900200529     C                     Z-ADD21        W0ERNB           ***************CFT014
421000200529     C                     MOVEL'MEM5003' W0MSGD                          CFT014
421100200529     C                     MOVEL'MIDAS  ' W0MSGF                          CFT014
421200200529     C                     EXSR SRERR                                     CFT014
421300200529     C                     ENDIF                                          CFT014
421400200529      *                                                                   CFT014
421500200529      *  Unwind subroutine stack name                                     CFT014
421600200529      *                                                                   CFT014
421700200529     C           EXSCAR    TAG                                            CFT014
421800200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
421900200529     C                     SUB  1         Q                               CFT014
422000200529      *                                                                   CFT014
422100200529     CSR                   ENDSR                                          CFT014
422200200529      *****************************************************************   CFT014
422300200529      *                                                               *   CFT014
422400200529      *  SUBARR   : Extract a string from the big array               *   CFT014
422500200529      *                                                               *   CFT014
422600200529      *  CALLED BY: SRSWFT - Extract Data From SWIFT Message          *   CFT014
422700200529      *                                                               *   CFT014
422800200529      *  CALLS    :                                                   *   CFT014
422900200529      *                                                               *   CFT014
423000200529      *****************************************************************   CFT014
423100200529     CSR         SUBARR    BEGSR                                          CFT014
423200200529      *                                                                   CFT014
423300200529      *  Set up subroutine stack name                                     CFT014
423400200529      *                                                                   CFT014
423500200529     C                     ADD  1         Q       50                      CFT014
423600200529     C                     MOVEL'SUBARR'  @STK,Q                          CFT014
423700200529      *                                                                   CFT014
423800200529     C                     CALL 'MS1910'               90                 CFT014
423900200529     C                     PARM *BLANK    P@FCT1256                       CFT014
424000200529     C                     PARM           P@LEN1 150                      CFT014
424100200529     C                     PARM '*SUBST  'P@OPCD 10                       CFT014
424200200529     C                     PARM *BLANK    P@FCT2256                       CFT014
424300200529     C                     PARM           P@LEN2 150                      CFT014
424400200529     C           DSRSLT    PARM *BLANK    P@RSLT256                       CFT014
424500200529     C                     PARM *BLANK    P@RTCD  7                       CFT014
424600200529      *                                                                   CFT014
424700200529     C           *IN90     IFEQ '1'                                       CFT014
424800200529     C           P@RTCD    ORNE *BLANK                                    CFT014
424900200529     C                     MOVEL'MS1910  'W0FILE           ***************CFT014
425000200529     C                     MOVEL'*SUBST'  W0KEY            * DB ERROR 22 *CFT014
425100200529     C                     Z-ADD22        W0ERNB           ***************CFT014
425200200529     C                     MOVEL'MEM5003' W0MSGD                          CFT014
425300200529     C                     MOVEL'MIDAS  ' W0MSGF                          CFT014
425400200529     C                     EXSR SRERR                                     CFT014
425500200529     C                     ENDIF                                          CFT014
425600200529      *                                                                   CFT014
425700200529      *  Unwind subroutine stack name                                     CFT014
425800200529      *                                                                   CFT014
425900200529     C           EXSUAR    TAG                                            CFT014
426000200529     C                     MOVEA*BLANKS   @STK,Q                          CFT014
426100200529     C                     SUB  1         Q                               CFT014
426200200529      *                                                                   CFT014
426300200529     CSR                   ENDSR                                          CFT014
426400200529     C/EJECT                                                              CFT006
426500200529      *****************************************************************                       CSW212
426600200529      *                                                               *                       CSW212
426700200529      *  SRFAMT   : Format amount for Message Type 370                *                       CSW212
426800200529      *                                                               *                       CSW212
426900200529      *  Called By: SREXPT - Extract Part Details from the message    *                       CSW212
427000200529      *                                                               *                       CSW212
427100200529      *                                                               *                       CSW212
427200200529      *****************************************************************                       CSW212
427300200529     C           SRFAMT    BEGSR                                                              CSW212
427400200529      *                                                                                       CSW212
427500200529      **  Replace "," with "." for conversion                                                 CSW212
427600200529      *                                                                                       CSW212
427700200529     C                     MOVEAZFIELD    FLA                                                 CSW212
427800200529     C                     Z-ADD1         A                                                   CSW212
427900200529     C           ','       LOKUPFLA,A                    90                                   CSW212
428000200529     C           *IN90     IFEQ '1'                                                           CSW212
428100200529     C                     MOVE '.'       FLA,A                                               CSW212
428200200529     C                     ENDIF                                                              CSW212
428300200529      *                                                                                       CSW212
428400200529      **  Remove leading zeros before amounts                                                 CSW212
428500200529      *                                                                                       CSW212
428600200529     C                     Z-ADD1         A                                                   CSW212
428700200529     C           FLA,A     DOWEQ'0'                                                           CSW212
428800200529     C           FLA,A     OREQ ' '                                                           CSW212
428900200529     C           A         ANDLT17                                                            CSW212
429000200529     C           FLA,A     IFEQ '0'                                                           CSW212
429100200529     C                     MOVE ' '       FLA,A                                               CSW212
429200200529     C                     ENDIF                                                              CSW212
429300200529     C                     ADD  1         A                                                   CSW212
429400200529     C                     ENDDO                                                              CSW212
429500200529      *                                                                                       CSW212
429600200529     C                     MOVEAFLA       ZFIELD                                              CSW212
429700200529     C                     MOVEAFLA       WTFAMA                                              CSW212
429800200529      *                                                                                       CSW212
429900200529     C                     CALL 'ZALIGN'                                                      CSW212
430000200529     C                     PARM *BLANKS   ZRTN                                                CSW212
430100200529     C                     PARM           ZFIELD                                              CSW212
430200200529     C                     PARM 3         ZADEC                                               CSW212
430300200529     C                     PARM 12        ZADIG                                               CSW212
430400200529     C                     PARM           ZAFLD                                               CSW212
430500200529      *                                                                                       CSW212
430600200529     C                     Z-ADD0         MPPYAM                                              CSW212
430700200529     C           ZRTN      IFEQ *BLANKS                                                       CSW212
430800200529     C                     MOVE ZAFLD     ZNUM15                                              CSW212
430900200529     C           ZNUM15    DIV  1000      MPPYAM                                              CSW212
431000200529     C                     ENDIF                                                              CSW212
431100200529      *                                                                                       CSW212
431200200529     C                     ENDSR                                                              CSW212
431300200529      *****************************************************************                       CSW212
431400200529     C/EJECT                                                                                  CSW212
431500200529     C/COPY WNCPYSRC,MS1900DCPG
431600200529      *
431700200529      *  /Copy point for Calculations
431800200529      *
431900200529     C/EJECT
432000200529      *
432100200529      * File and Program Error Processing
432200200529     C/COPY MECPYSRC,SRERRC
432300200529     C/EJECT
432400200529     C/COPY WNCPYSRC,MS1900DOPG
432500200529      *
432600200529      *  /Copy point for Outputs
432700200529      *
432800200529     C/EJECT
432900200529      *****************************************************************
433000200529      * Update MSIXI2D0 Swift Messages
433100200529      *****************************************************************
433200200529      *
433300200529     OMSIXI2D0E                MSIXI2
433400200529     O                         IMPF
433500200529      *
433600200529      ** Remove 32F2 from TTAG/TFMT as this will never be related to                          CSW212
433700200529      ** valid currency. Move other tags to complete the table entry.                         CSW212
433800200529      *                                                                                       CSW212
433900200529**  CPY@ table
434000200529(c) Finastra International Limited 2001
434100200529**  TTAG/TFMT Tag no.(3) - Format type (1) for date/ccy/amount
43420020052930:731B731C731D731E731F731G731H731J731L7
43430020052931P731R731S731T731X732A132B232C132D132E2
43440020052932E232G232H432K132L232M232N332P132R132S1                                                      CSW212
43450020052932T133A133B233C133D133E233F233G233K133N3                                                      CSW212
43460020052933P133R133S233T233V234A134B234C134D134E4                                                      CSW212
43470020052934F634G534H534N334P134R1                                                                      CSW212
434800200529**  STYP/STAG Message Type (3) - Tag (3) for start of Part No.
434900200529101:21                                                                    CFT002
435000200529102:21                                                                    CFT002
435100200529210:21
435200200529571:28
435300200529572:28
435400200529573:28
435500200529574:28
435600200529577:28
435700200529579:27
435800200529580:23
435900200529700:27
436000200529701:27
436100200529705:40
436200200529710:27
436300200529711:27
436400200529720:27
436500200529721:27
436600200529760:27
436700200529767:27
436800200529800:23
436900200529801:51
437000200529802:23
437100200529**  RTYP/RTAG Message Type (3) - Tag (3) for Transaction Reference
437200200529101:21                                                                    CFT002
437300200529102:21                                                                    CFT002
437400200529210:21
437500200529710:21
437600200529711:21
437700200529720:21
437800200529721:21
437900200529742:21
438000200529800:23
438100200529802:23
438200200529**  TREX Tag exceptions for those found in STAG                                 CFT006
438300200529101A:21R:                                                                       CFT006
438400200529101 :21F:                                                                       CFT006
438500200529**  RFEX Tag exceptions for those found in RTAG                                 CFT006
438600200529101A:21R:                                                                       CFT006
438700200529101 :21F:                                                                       CFT006
438800200529**  AMEX Tag exceptions for those found in TTAG                                 CFT006
438900200529101 :33B:                                                                       CFT006
439000200529102 :33B:                                                                       CFT006
439100200529103 :33B:                                                                       CFT014
439200200529202 :33B:                                                                                   BUG26765
439300200529600 :30:                                                                                      CSW212
439400200529600 :33G:                                                                                     CSW212
439500200529**  DTEX Tag exceptions for max length used in SRDAT4                           CFT014
439600200529103 :77T:                                                                       CFT014
