/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas OF Forecast Ttl Amt./Avail. Bal. Calculation')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - General Ledger Module                               */
/*                                                                   */
/*       GLC000501 - Midas OF Forecast Total Amount and Available    */
/*                   Balance Calculation                             */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2013           */
/*                                                                   */
/*       Last Amend No. CGL153             Date 05Feb14              */
/*       Prev Amend No. MD024037A          Date 20Dec13              */
/*                      CGL145B  *CREATE   Date 28Oct13              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CGL153 - Bank Position Report                               */
/*       MD024037A - Problem of replication with Global files        */
/*       CGL145B - Subsidiaries Daily Sweeping Forecast (Drop 3)     */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTNMSG &USRPRF &MNITEM &SYSPRFX &INPARM)
 
             DCL        VAR(&RTNMSG) TYPE(*CHAR) LEN(256)
             DCL        VAR(&USRPRF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MNITEM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SYSPRFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&INPARM) TYPE(*CHAR) LEN(500)
             DCL        VAR(&PRTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&POPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PSARD) TYPE(*CHAR) LEN(6)
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(2764)
             DCL        VAR(&INLLIBL) TYPE(*CHAR) LEN(2750)
             DCL        VAR(&LIB) TYPE(*CHAR) LEN(6)
             DCL        VAR(&JOBDNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBD) TYPE(*CHAR) LEN(20)
             DCL        VAR(&LEN) TYPE(*CHAR) LEN(4)
             DCL        VAR(&ERRCDE) TYPE(*CHAR) LEN(4)
             DCL        VAR(&PARM) TYPE(*CHAR) LEN(3193)
             DCL        VAR(&OFFSET) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&LIBCNT) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&OFFLEN) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&ZACTN) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ZBR) TYPE(*CHAR) LEN(3)
             DCL        VAR(&ERR) TYPE(*DEC) LEN(1 0)
             DCL        VAR(&SBS) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ZSTAT) TYPE(*CHAR) LEN(10)                                   /*CGL153*/
             DCL        VAR(&PCUST) TYPE(*CHAR) LEN(6)                                    /*CGL153*/
             DCL        VAR(&PCYCD) TYPE(*CHAR) LEN(3)                                    /*CGL153*/
             DCL        VAR(&PACCD) TYPE(*CHAR) LEN(4)                                    /*CGL153*/
             DCL        VAR(&PACSN) TYPE(*CHAR) LEN(2)                                    /*CGL153*/
             DCL        VAR(&PNONB) TYPE(*CHAR) LEN(2)                                    /*CGL153*/
             DCL        VAR(&PBRCH) TYPE(*CHAR) LEN(3)                                    /*CGL153*/
             DCL        VAR(&PCCSN) TYPE(*CHAR) LEN(10)                                   /*CGL153*/
             DCL        VAR(&PPNOI) TYPE(*CHAR) LEN(1)                                    /*CGL153*/
             DCL        VAR(&SDNOST) TYPE(*CHAR) LEN(300)                                 /*CGL153*/
             DCL        VAR(&CGL153) TYPE(*CHAR) LEN(1)                                   /*CGL153*/
 
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2013')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGVAR     VAR(&SBS) VALUE(&SYSPRFX)
             CHGVAR     VAR(&LIB) VALUE(&SBS *CAT 'XLIB')
 
             CHKOBJ     OBJ(&LIB/MIDASIC) OBJTYPE(*JOBD)
             MONMSG     MSGID(CPF9801 CPF9802 CPF9810 CPF9820 +
                          CPF9830 CPF9899) EXEC(GOTO CMDLBL(ABNOR))
 
/* Set up parameters for call to IBM API. */
             CHGVAR     VAR(&JOBDNAME) VALUE('MIDASIC')
             CHGVAR     VAR(&JOBD) VALUE(&JOBDNAME *CAT &LIB)
             CHGVAR     VAR(%BIN(&LEN 1 4)) VALUE(3193)
             CHGVAR     VAR(%BIN(&ERRCDE 1 4)) VALUE(0)
 
/* Use API to access the job description library list. */
             CALL       PGM(QWDRJOBD) PARM(&PARM &LEN JOBD0100 &JOBD +
                          &ERRCDE)
 
 INLLIBL:    CHGVAR     &OFFSET %BIN(&PARM 361 4)
             CHGVAR     VAR(&OFFSET) VALUE(&OFFSET + 1)
             CHGVAR     VAR(&LIBCNT) VALUE(%BIN(&PARM 365 4))
             CHGVAR     VAR(&OFFLEN) VALUE(11 * &LIBCNT)
             CHGVAR     VAR(&INLLIBL) VALUE(%SST(&PARM &OFFSET +
                          &OFFLEN))
             MONMSG     MSGID(MCH3601)
 
             CHGVAR     VAR(&CMD) VALUE('CHGLIBL LIBL(' *CAT +
                             &INLLIBL *CAT ')')
 
             CALL       PGM(QCMDEXC) PARM(&CMD 2764)
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256) +
                          VALUE(' ')
             MONMSG     MSGID(CPF0000)
             CHGJOB SWS(00000000)
 
/* Validate Action Code for User/Program/Branch */
 
             CHGVAR     VAR(&ZACTN) VALUE(%SST(&INPARM 1 1))
             CHGVAR     VAR(&ZBR) VALUE(%SST(&INPARM 12 3))
                                                                                          /*CGL153*/
/* Check if CGL153 is installed */                                                        /*CGL153*/
                                                                                          /*CGL153*/
             CHGVAR     VAR(&CGL153) VALUE('N')                                           /*CGL153*/
             CHGVAR     VAR(&PRTCD) VALUE('       ')                                      /*CGL153*/
             CHGVAR     VAR(&POPTN) VALUE('*VERIFY')                                      /*CGL153*/
             CHGVAR     VAR(&PSARD) VALUE('CGL153')                                       /*CGL153*/
                                                                                          /*CGL153*/
             CALL       PGM(AOSARDR0) PARM(&PRTCD &POPTN &PSARD &SCSARD)                  /*CGL153*/
                                                                                          /*CGL153*/
             IF         COND(&PRTCD *NE '       ') THEN(DO)                               /*CGL153*/
                GOTO       CMDLBL(END)                                                    /*CGL153*/
             ENDDO                                                                        /*CGL153*/
             CHGVAR     VAR(&CGL153) VALUE('Y')                                           /*CGL153*/
                                                                                          /*CGL153*/
/* If retail branch is blanks, get nostro branch */                                       /*CGL153*/
             IF         COND((%SUBSTRING(&INPARM 36 3) *NE '    ') +
                        *AND (%SUBSTRING(&INPARM 108 2) *NE ' ') +
                        *AND (%SUBSTRING(&INPARM 12 24) *EQ '    ') +
                        *AND (&CGL153 = 'Y'))                        +
                        THEN(DO)                                                          /*CGL153*/
                                                                                          /*CGL153*/
             CHGVAR     VAR(&PRTCD) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&POPTN) VALUE('*KEY  ')                                       /*CGL153*/
             CHGVAR     VAR(&PCYCD) VALUE(%SUBSTRING(&INPARM 36 3))                       /*CGL153*/
             CHGVAR     VAR(&PACCD) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&PACSN) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&PNONB) VALUE(%SUBSTRING(&INPARM 108 2))                      /*CGL153*/
             CHGVAR     VAR(&PBRCH) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&PCCSN) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&PPNOI) VALUE(' ')                                            /*CGL153*/
             CHGVAR     VAR(&SDNOST) VALUE(' ')                                           /*CGL153*/
                                                                                          /*CGL153*/
             CALL       PGM(AONOSTR0) PARM(&PRTCD &POPTN &PCUST &PCYCD +
                        &PACCD &PACSN &PNONB &PBRCH &PCCSN &PPNOI &SDNOST)                /*CGL153*/
                                                                                          /*CGL153*/
             IF         COND(&PRTCD *NE '       ') THEN(DO)                               /*CGL153*/
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Invalid +
                          Nostro Code') TOMSGQ(MOPERQ MRUNQ)                              /*CGL153*/
             MONMSG     MSGID(CPF0000 MCH0000)                                            /*CGL153*/
             CHGVAR     VAR(&RTNMSG) VALUE('Invalid +
                          Nostro Code')                                                   /*CGL153*/
                GOTO       CMDLBL(END)                                                    /*CGL153*/
             ENDDO                                                                        /*CGL153*/
                                                                                          /*CGL153*/
             CHGVAR     VAR(&ZBR) VALUE(%SUBSTRING(&SDNOST 72 3))                         /*CGL153*/
                                                                                          /*CGL153*/
             ENDDO                                                                        /*CGL153*/
 
             CALL       PGM(ZBACTBU) PARM(&ZACTN &ZBR &USRPRF &MNITEM &ERR)
 
             IF         COND(&ERR *EQ 1) THEN(DO)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('No +
                          Actions are Authorised for this +
                          User/Branch/Menu Item.') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGVAR     VAR(&RTNMSG) VALUE('No Actions are +
                          Authorised for this User/Branch/Menu Item.')
                GOTO       CMDLBL(END)
             ENDDO
 
             IF         COND(&ERR *EQ 2) THEN(DO)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('User is +
                          not authorised to this Action Code for +
                          this Menu Item/Branch') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGVAR     VAR(&RTNMSG) VALUE('User is not Authorised +
                          for this Menu Item/Branch.')
                GOTO       CMDLBL(END)
             ENDDO
 
/* Check if CGL145 is installed */
 
             CHGVAR     VAR(&PRTCD) VALUE('       ')
             CHGVAR     VAR(&POPTN) VALUE('*VERIFY')
             CHGVAR     VAR(&PSARD) VALUE('CGL145')
 
             CALL       PGM(AOSARDR0) PARM(&PRTCD &POPTN &PSARD &SCSARD)
 
             IF         COND(&PRTCD *NE '       ') THEN(DO)
                GOTO       CMDLBL(END)
             ENDDO
 
/* If no retail account, go to Forecast Totals for Nostro Codes */                        /*CGL153*/
                                                                                          /*CGL153*/
             IF         COND((%SUBSTRING(&INPARM 36 3) *NE '    ') +
                        *AND (%SUBSTRING(&INPARM 108 2) *NE '  ') +
                        *AND (%SUBSTRING(&INPARM 12 24) *EQ '    ') +
                        *AND (&CGL153 = 'Y'))                        +
                        THEN(DO)                                                          /*CGL153*/
                                                                                          /*CGL153*/
/* Skip retail processing  */                                                             /*CGL153*/
             GOTO       CMDLBL(NOSTRO)
                                                                                          /*CGL153*/
             ENDDO                                                                        /*CGL153*/
 
/* Call program to update Forecast Available Balance for Total List view */
 
             CALL       PGM(GL000501) PARM(&INPARM)
 
             IF COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO CMDLBL(ABNOR)
             ENDDO
 
/* Call program to update Forecast Forward Available Balance */
 
             CALL       PGM(GL000601) PARM(&INPARM)
 
             IF COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO CMDLBL(ABNOR)
             ENDDO
 
/* Call program to update Forecast Credit Line Available Balance */
 
             CALL       PGM(GL000701) PARM(&INPARM)
 
             IF COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO CMDLBL(ABNOR)
             ENDDO
 
 NOSTRO:                                                                                  /*CGL153*/
             IF         COND(&CGL153 *EQ 'Y') THEN(DO)                                    /*CGL153*/
/* Call program to update Forecast Totals for Nostro Codes*/                              /*CGL153*/
                                                                                          /*CGL153*/
             CHGVAR     VAR(&ZSTAT) VALUE(%SST(&INPARM 2 10))                             /*CGL153*/
             IF         COND(&ZSTAT *EQ 'AUTHORISE ') THEN(DO)                            /*CGL153*/
                                                                                          /*CGL153*/
             CALL       PGM(GL000801) PARM(&INPARM)                                       /*CGL153*/
                                                                                          /*CGL153*/
             IF COND(%SWITCH(XXXXXX11)) THEN(DO)                                          /*CGL153*/
                GOTO CMDLBL(ABNOR)                                                        /*CGL153*/
             ENDDO                                                                        /*CGL153*/
                                                                                          /*CGL153*/
             ENDDO                                                                        /*CGL153*/
                                                                                          /*CGL153*/
             ENDDO                                                                        /*CGL153*/
                                                                                          /*CGL153*/
             GOTO       CMDLBL(END)
 
/* Abnormal termination */
 
 ABNOR:      CHGJOB     SWS(XXXXXX11)
             DMPCLPGM
             MONMSG     MSGID(CPF0000 MCH0000)
 
             SNDPGMMSG MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          GLC000501 ended abnormally - see job log') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
/*END:*****    RCLRSC                                                 */       /*MD024037A */
/**********  MONMSG     MSGID(CPF0000 MCH0000)                        */       /*MD024037A */
/**********  RCLRSC     LVL(*CALLER)                                  */       /*MD024037A */
/**********  MONMSG     MSGID(CPF0000 MCH0000)                        */       /*MD024037A */
/**********  RCLACTGRP  ACTGRP(*ELIGIBLE)                             */       /*MD024037A */
/**********  MONMSG     MSGID(CPF0000 MCH0000)                        */       /*MD024037A */
/**********  ENDPGM                                                   */       /*MD024037A */
END:         ENDPGM                                                            /*MD024037A */
