     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas PM Pool Portfolio Definition Maintenance')
/*OVRF*: OVRDBF FILE(PMPPTDXX) TOFILE(PMPPTDPD) SHARE(*NO)          : *
/*OVRF*: OVRDBF FILE(PMPPTMXX) TOFILE(PMPPTMPD) SHARE(*NO)          : *
     F*****************************************************************
     F*                                                               *
     F*  Midas - Portfolio Management                             *
     F*                                                               *
     F*  PM5010 - POOL PORTFOLIO DEFINITION MAINTENANCE               *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 CLE025             Date 20Oct03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CPM005             Date 17Jul96               *
      *                 S01486             Date 05Aug94               *
     F*                 063634             DATE 22NOV93               *
     F*                 056460             DATE 10JUN93               *
     F*                 S01313             DATE 19MAY92               *
     F*                 SA9108             DATE 28JAN93               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CLE025 - Credit Lines (Recompile)                            *
     F*  CPM005 - Private Banking Phase 2                             *
     F*           Focus Group Changes upgraded to DBA                 *
     F*           PBFG/1 - CHANGE CUSTOMER/PORTFOLIO BASE CURRENCY    *
     F*  S01486 - Private Banking upgrade to Release 10               *
     F*  063634 - POOL MUST BE A SAFE CUSTODY/DISCRETIONARY SECURITIES*
     F*           TRADING CUSTOMER                                    *
     F*  056460 - MAY NOT AMEND POOL WITH PERFORMANCE                 *
     F*  S01313 - RECOMPILED FOR PORTFOLIO PERFORMANCE                *
     F*  SA9108 - POOL SECURITIES                                     *
     F*                                                               *
     F*****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*
     F***RECORD*ID*OF*FILE*SDBANKPD*=*'BJ'********************************S01486
     F***SDBANKL1IF**E           K        DISK                            S01486
     F***********                                   KINFSR *PSSR          S01486
     F*
     F***PM5010DDCF**E                    WORKSTN                         S01486
     FPM5010DFCF  E                    WORKSTN                            S01486
     F                                        RRN   KSFILE PM5010S0
     F                                        RRN2  KSFILE PM5010S1
     F*
     F** RECORD ID OF FILE PMPPTDPD = 'OR'
     FPMPPTDPDUF  E           K        DISK         KCOMIT       A
     F                                              KINFDS INFDS
     F                                              KINFSR *PSSR
     F*
     F** RECORD ID OF FILE PMPPTMPD = 'OS'
     FPMPPTMPDUF  E           K        DISK         KCOMIT       A
     F                                              KINFSR *PSSR
     F*
     F** RECORD ID OF FILE PMPPTDXX = 'OR'
     FPMPPTDXXIF  E           K        DISK
     F                                              KINFSR *PSSR
     F            PMPPTDD0                          KRENAMEPMPPTDPX
     F*
     F** RECORD ID OF FILE PMPPTMXX = 'OR'
     FPMPPTDL1IF  E           K        DISK
     F                                              KINFSR *PSSR
     F*
     F** RECORD ID OF FILE PMPPTMXX = 'OS'
     FPMPPTMXXIF  E           K        DISK
     F                                              KINFSR *PSSR
     F            PMPPTMD0                          KRENAMEPMPPTMPX
     F*
     F** RECORD ID OF FILE PMPPTMXX = 'OS'
     FPMPPTML1IF  E           K        DISK
     F                                              KINFSR *PSSR
     F            PMPPTMD0                          KRENAMEPMPPTMLX
     F*
     F***RECORD*ID*OF*FILE*PMPPTDZZ*=*'OR'********************************S01486
     F***PMPPTDZZUF**E                    DISK         KCOMIT             S01486
     F** RECORD ID OF FILE PMPPTDPA = 'OR'                                S01486
     FPMPPTDPAUF  E                    DISK         KCOMIT                S01486
     F                                              KINFSR *PSSR
     F***PMPORTPPIF**E           K        DISK                            S01486
     FPMPORTPDIF  E           K        DISK                               S01486
     F*                                             KINFSR *PSSR
     F***SDPLCSPDIF**E           K        DISK                            S01486
     F*                                             KINFSR *PSSR
     F***SDSECSL0IF**E           K        DISK                            S01486
     F*                                             KINFSR *PSSR
     FTNRAN   IF  E           K        DISK
     F*                                             KINFSR *PSSR
      **  Record ID of file PMPCBCPD = 'FM'                               CPM005
     FPMPCBCL1IF  E           K        DISK                               CPM005
     F                                              KINFSR *PSSR          CPM005
     F*
      /EJECT
     F********************************************************************
     F*
     F*   INDICATOR      FUNCTION OF INDICATOR
     F*
     F*       10         START  SCREEN
     F*       11         REVIEW SCREEN
     F*       12         UPDATE SCREEN
     F*
     F*       25         ROLLUP
     F*       26         ROLLDOWN
     F*
     F*       30         S/PM5010F1  ERROR-DDACTN
     F*       31         S/PM5010F1  ERROR-DDPCNU
     F*       32         S/PM5010F1  ERROR-DDPPTF
     F*       33         S/PM5010F1  PROTECT/NON-DISPLAY KEY FIELDS
     F*       35         S/PM5010S1  ERROR-DDPCNU
     F*       36         S/PM5010S1  REVERSE IMAGE DDPPTF
     F*       38         S/PM5010S1  REVERSE IMAGE DDNOUN
     F*       37         S/PM5010S1  PROTECT/NON-DISPLAY DETAIL FIELDS
     F*       40         S/PM5010C1  POSITION CURSOR
     F*       41         S/PM5010S1  ERROR-DDSTDT
     F*       42         S/PM5010S1  ERROR-DDITDT
     F*       43         S/PM5010S1  ERROR-DDOCIN
     F*       44         S/PM5010S1  ERROR-DDINVL
     F*       46         S/PM5010S1  ERROR-DDTRCD
     F*       47         S/PM5010S0  ERROR-DDACTN
     F*
     F*       45         VLDCMDKY INDICATOR FOR DISPLAY FILE
     F*
     F*       50         S/PM5010C0  SFLDSP
     F*       51         S/PM5010C0  SFLDSPCTL
     F*       52         S/PM5010C0  SFLEND
     F*       53         S/PM5010C0  ROLLDOWN NOT ALLOWED
     F*       54         S/PM5010S1  SFLNXTCHG
     F*       55         S/PM5010C1  SFLCLR
     F*       56         S/PM5010C1  SFLEND
     F*       57         S/PM5010F2  SFLEND AUTOMATIC
     F*
     F*       70         FILE OPERATIONS INDICATOR
     F*       71         FILE OPERATIONS INDICATOR
     F*       72         FILE OPERATIONS INDICATOR
     F*       73         FILE OPERATIONS INDICATOR
     F*
     F*       74         WARNING - DDRANG
     F*       75         ERROR
     F*       76         WARNING - CUSTOMERS IN DIFFERENT BRANCHES        S01486
     F*
     F*       77         DETERMINE FROM WHICH SCREEN (ON=REVIEW,OFF=START)
     F*                  KEY FIELDS VALIDATION IS CALLED
     F*       83         ADD RECORD
     F*       84         CURRENCY DOES NOT EXIST ON CURRENCY CODES TABLE
     F*       85         INDICATOR USED ON WRITE/UPDATE OPS TO CONDITION
     F*                  CALL OF *PSSR
     F*       86         WORK
     F*       87         RECORD UPDATED BY ANOTHER WORKSTATION
     F*
     F*       98         DATF = MMDDYY
     F*       99         WORK (RECORD IN TABTB10 NOT PRESENT OR INCORRECT)
     F*
     F*       U7         DATABASE ERROR
     F*       U8         PROGRAM  ERROR
     F*
     F*       'WWAID' VALUES USED
     F*
     F*       03         CA3
     F*       10         CA10
     F*       12         CA12
     F*       RA         ENTER PRESSED
     F*       UP         ROLLUP
     F*       DN         ROLLDOWN
     F*       HP         HELP PRESSED
     F*
     F*
     F*                     ** INDICATORS NOT USED **
     F*                     -------------------------
     F*
     F*          01   02   03   04   05   06   07   08   09   ..
     F*          ..   ..   13   14   15   16   17   18   19   20
     F*          21   22   23   24   ..   ..   27   28   29   ..
     F*          ..   ..   ..   ..   ..   ..   ..   ..   39   ..
     F*          ..   ..   ..   ..   ..   ..   47   48   49   ..
     F*          ..   ..   ..   ..   ..   ..   ..   58   59   60
     F*          61   62   63   64   65   ..   67   ..   69   ..
     F*          ..   ..   ..   ..   ..   ..   ..   78   79   ..
     F*          ..   ..   ..   ..   ..   ..   ..   ..   89   90
     F*          91   92   93   94   95   96   97   ..   ..
     F*
     F********************************************************************
      /EJECT
     E                    @F         16  1
      * input array for za0840
     E                    @G         16  1
      * output array for za0840
     E                    @H      1  15 15 0
      * array of powers of ten
     E********************************************************************
     E***********         ZS1        15  1 0             ZSEDITZ1 / ZSRSRCS01486
     E***********         ZS2        21  1               ZSEDITZ1 / ZSRSRCS01486
     E***********         ZYDY    4   4  4 0             ZDATE1/2 SR.ARRAYS01486
     E***********         ZMDY   13  13  3 0             ZDATE1/2 SR.ARRAYS01486
     E***********         ZMNM   12  12  3               ZDATE2 SR. ARRAY S01486
     E/COPY ZSRSRC,ZSEDITZ1                                               S01486
     E/COPY ZSRSRC,ZDATE2Z1                                               S01486
     E*
     E                    CPY@    1   1 80
      /EJECT
     I********************************************************************
     IPMPPTDD1
     I              ORPCNU                          RNPCNU
     I              ORPPTF                          RNPPTF
     I*
     I** DATA STRUCTURE FOR INITIALIZING A RECORD
     I*
     IDETREC    E DSPMPPTDPD
     I              ORPCNU                          KEYFX
     I              ORPPTF                          KEYFY
     I*
     I** KEY FIELDS (TAKEN FROM 'KEY' PORTION OF SCREEN)
     I*
     ISCRCTL      DS
     I                                        1   1 WWREVW
     I                                        2   2 DDACTN
     I                                        3   8 DDPCNU
     I                                        9  12 DDPPTF
     I                                       13  18 DDKEY1
     I                                       19  22 DDKEY2
     I                                       23  28 W1PAG1
     I                                       29  32 W2PAG1
     I                                       33  38 W1PAG2
     I                                       39  42 W2PAG2
     I*
     I** DATA STRUCTURE FOR RPG 01021 ERROR HANDLING
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I*
     I** LOCAL DATA AREA FOR DATABASE ERROR DETAILS
     I*
     I***LDA********UDS                            256                    S01486
     ILDA         DS                            256                       S01486
     I                                      132 183 DBLOT
     I                                      132 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
     I*
     I** DATA STRUCTURE FOR ZTNLU1
     I*
     I** MIDAS 'Next Available Transaction No.' Data Area  MNATN .
     IDNATN       DS                              5
     I                                        1   50FNATN
     I*
     I** DATA STRUCTURE FOR SETUP OF COMMIT TEXT
     I*
     ICMTTXT      DS
     I                                        1   50NATN
     I                                        6   7 MDID
     I                                        8  15 PGMN
     I                                       16  18 WSIDX
     I                                       19  240MTIME
     I                                       25  25 ACTNX
     I                                       26  35 USIDX
     I*
     I** PROGRAM STATUS DATA STRUCTURE FOR WS/USER ID'S
     I*
     IPSDS       SDS
     I                                      244 253 WSID
     I                                      254 263 USID
     I*
     I** DATA STRUCTURE FOR LAST UPDATE
     I*
     I            DS
     I                                        1   20WWDLUP
     I                                        3   5 WWMLUP
     I                                        6   70WWYLUP
     I                                        1   7 WWHLUP
     I*
     I** DATA STRUCTURE FOR COMPILATION  - COPYRIGHT INSERTION
     ICPYR@#      DS
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
     I*
     I** COPY ZSRSRC,ZSEDITZ2
     I/COPY ZSRSRC,ZSEDITZ2                                               S01486
     I*********** DS                                                      S01486
     I***********                             1  150WORK15                S01486
     I***********                             1  150ZS1                   S01486
      *
      *  Data structure to strip last character from ZSEDIT output
     I            DS
     I                                        1  21 ZOUT21
     I                                        1  20 ZOUT20
     I*                                                                   S01486
     ISDBANK    E DSSDBANKPD                                              S01486
     I** DUMMY RECORD FORMAT FOR BANK DETAILS                             S01486
     I*                                                                   S01486
     ISDCUST    E DSSDCUSTPD                                              S01486
     I** DUMMY RECORD FORMAT FOR CUSTOMER DETAILS                         S01486
     I*                                                                   S01486
     ISDPLCS    E DSSDPLCSPD                                              S01486
     I** DUMMY RECORD FORMAT FOR PORTFOLIO MANAGEMENT CUSTOMER DETAILS    S01486
     I*                                                                   S01486
     ISDSECS    E DSSDSECSPD                                              S01486
     I** DUMMY RECORD FORMAT FOR SECURITY CUSTOMER DETAILS                S01486
     I*                                                                   S01486
     ISDPORT    E DSSDPORTPD                                              CPM005
      ** Portfolio Management ICD Details                                 CPM005
      *                                                                   CPM005
     IDSFDY     E DSDSFDY                                                 S01486
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE                S01486
     I*                                                                   S01486
     IDSSDY     E DSDSSDY                                                 S01486
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE                S01486
     I*                                                                   S01486
     IRUNDT       DS                                                      S01486
     I**  DATA AREA RUNDAT                                                S01486
     I                                        1   7 RUNA                  S01486
     I                                    P   8  100RUND                  S01486
     I                                       11  11 SSF                   S01486
     I                                       12  12 DATF                  S01486
     I                                       13  13 MBIN                  S01486
     I*                                                                   S01486
     IZMUSER      DS                             17                       S01486
     I** DATA AREA OF MENU USER                                           S01486
     I                                       11  13 DBRN                  S01486
     I*                                                                   S01486
     I********************************************************************
      /EJECT
     C*===================================================================
     C*
     C** CALCULATION SPECIFICATIONS:KEY LISTS
     C*
     C** DEFINE KEY LIST FOR CHAINING TO PMPPTDPD
     C*
     C           K1LIST    KLIST
     C**********           KFLD           K1PCNU  60                                          CSD027
     C                     KFLD           K1PCNU  6                                           CSD027
     C                     KFLD           K1PPTF  4
     C***********                                                         S01486
     C***DEFINE*KEY*LIST*FOR*CHAINING*TO*SDPLCSPD*************************S01486
     C***********                                                         S01486
     C***********PLCSK     KLIST                                          S01486
     C***********          KFLD           KKPCNU  6                       S01486
     C*
     C***DEFINE*KEY*LIST*FOR*CHAINING*TO*PMPORTPP*************************S01486
     C** DEFINE KEY LIST FOR CHAINING TO PMPORTPD                         S01486
     C*
     C           K2LIST    KLIST
     C**********           KFLD           K2CNUM  60                                          CSD027
     C                     KFLD           K2CNUM  6                                           CSD027
     C                     KFLD           K2PTFR  4
     C*
     C** DEFINE KEY LIST FOR CHAINING TO TNRAN
     C*
     C           RANKEY    KLIST
     C                     KFLD           RANK1   20
     C                     KFLD           RANK2   8
     C                     KFLD           RANK3   20
     C*
     C** DEFINE KEY LIST FOR CHAINING TO PMPPTMPX
     C*
     C           KEY       KLIST
     C**********           KFLD           KPCN    60                                          CSD027
     C                     KFLD           KPCN    6                                           CSD027
     C                     KFLD           KPPR    4
     C**********           KFLD           KCCN    60                                          CSD027
     C                     KFLD           KCCN    6                                           CSD027
     C                     KFLD           KCPR    4
     C*===================================================================
      /EJECT
     C*===================================================================
     C*  P R O G R A M     S T A R T
     C*===================================================================
     C*
     C** PERFORM SETUP OF STANDARD FIELDS
     C*
     C                     EXSR #A
     C*
     C** D O    U N T I L   F 3   O R   E R R O R
     C*
     C           WWAID     DOUEQ'03'
     C*
     C           *IN10     CASEQ'1'       #BA
     C*
     C           *IN11     CASEQ'1'       #BB
     C*
     C           *IN12     CASEQ'1'       #C
     C*
     C                     END
     C*
     C                     END
     C*
     C** TERMINATE PROGRAM
     C*
     C                     MOVE '1'       *INLR
     C*
     C*===================================================================
     C*  P R O G R A M     E N D
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      **  I N D E X   O F   S U B R O U T I N E S
      **
      **----------------------------------
      **  #A         S/R TO MAINTAIN PF/PMPPTDPD
      **                  AND ACCESS STANDING DATA
      **------------------------------------------------------------------
      **  #BA        S/R TO PROCESS START SCREEN
      **------------------------------------------------------------------
      **  #BB        S/R TO PROCESS REVIEW SCREEN
      **------------------------------------------------------------------
      **  #C         S/R TO PROCESS UPDATE SCREEN
      **------------------------------------------------------------------
      **  P1005      S/R TO UPDATE PF/PMPPTDPD
      **------------------------------------------------------------------
      **  P1006      S/R TO UPDATE PF/PMPPTMPD
      **------------------------------------------------------------------
      **  U1001      S/R TO DISPLAY PF/PMPPTDPD KEY INPUT
      **------------------------------------------------------------------
      **  U1002      S/R TO DISPLAY PF/PMPPTDPD REVIEW
      **------------------------------------------------------------------
      **  U1003      S/R TO DISPLAY PF/PMPPTDPD DETAIL
      **------------------------------------------------------------------
      **  V1001      S/R TO VALIDATE PF/PMPPTDPD KEY INPUT
      **------------------------------------------------------------------
      **  V1002      S/R TO VALIDATE PF/PMPPTDPD DETAIL
      **------------------------------------------------------------------
      **  V1003      S/R TO VALIDATE PF/PMPPTMPD DETAIL
      **------------------------------------------------------------------
      **  W1001      S/R TO DISPLAY ERRORS & INFORMATIONAL MESSAGES
      **------------------------------------------------------------------
      **  W1002      S/R TO WRITE TO PF/PMPPTDPD
      **------------------------------------------------------------------
      **  W1003      S/R TO WRITE TO PF/PMPPTMPD
      **------------------------------------------------------------------
      ****W1004******S/R*TO*WRITE*TO*PF/PMPPTDZZ**************************S01486
      **  W1004      S/R TO WRITE TO PF/PMPPTDPA                          S01486
      **------------------------------------------------------------------
      **  ZASNMS      S/R TO SEND MESSAGE TO PROGRAM MESSAGE QUEUE
      **------------------------------------------------------------------
      **  *PSSR       S/R TO HANDLE FILE EXEPTION/ERROR
      **------------------------------------------------------------------
      **
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #A    S/R - TO INITIALISE STATIC FIELDS AND ACCESS STANDING DATA
      ** CALLED ONCE AT START OF PROGRAM FROM MAIN LINE
      ** CALLS *PSSR
      **
     C*===================================================================
     C*
     C           #A        BEGSR                           ** #A    BSR **
     C*
     C** INITIALIZE INDICATORS
     C*
     C                     MOVE '0'       *IN
     C*
     C                     MOVEL'*'       DDPGMQ
     C*
     C**   Select the program MSGQ for error msg.
     C                     MOVEL'*'       TOPQ
     C                     MOVEL'*PRV'    TOPRQ
     C*
     C**   Fill in fields for subroutine ZASNMS
     C                     MOVEL*BLANK    ZAPGM  10        Message queue
     C                     MOVEL'PMUSRMSG'ZAMSGF 10        Message file
     C                     MOVEL*BLANK    ZAPGRL  5        Rel queue
     C                     MOVEL*BLANK    ZAMSID  7        Message Id.
     C                     MOVEL*BLANK    ZAMSDA132        Message data.
     C                     MOVEL*BLANK    ZAMSTP  7        Message type.
     C*
     C**  Clear program message queue.
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ   10
     C                     PARM           TOPRQ   5
     C*
     C** PREPARE LDA
     C*
     C           *NAMVAR   DEFN           LDA                             S01486
     C           *LOCK     IN   LDA                                       S01486
     C                     MOVEL*BLANK    DBLOT
     C                     MOVEL'PM5010'  DBPGM
     C                     OUT  LDA                                       S01486
     C           *NAMVAR   DEFN           ZMUSER                          S01486
     C                     IN   ZMUSER                                    S01486
     C           *NAMVAR   DEFN RUNDAT    RUNDT                           S01486
     C                     IN   RUNDT                                     S01486
     C           *LIKE     DEFN BBBRCD    WWBRCD                          S01486
     C           *LIKE     DEFN DDCNUM    WWCNUM                          S01486
     C*
     C** PREPARE COMIT TEXT
     C*
     C                     MOVEL'PM'      MDID
     C                     MOVEL'PM5010'  PGMN
     C                     MOVELWSID      WSIDX
     C                     MOVELUSID      USIDX
     C**
     C**
     C**  SET UP PARAMETER TO RETRIEVE MESSAGE FROM MESSAGE FILE
     C           PLLANG    PLIST
     C                     PARM           MSMBR4  7
     C                     PARM           MSGER  10
     C                     PARM           MSGTXT 80
     C***********          MOVEL'MLGBMSGF'MSGER                           S01486
     C                     MOVEL'PMUSRMSG'MSGER                           S01486
     C*
     C***GET*INSTALLATION*CONTROL*DATA*RECORD*1***************************S01486
     C** ACCESS BANK ICD DETAILS                                          S01486
     C*
     C***********          READ SDBANKL1                 99               S01486
     C************IN99     IFEQ '1'                                       S01486
     C***********          Z-ADD1         DBASE            ***************S01486
     C***********          MOVE 'SDBANKL1'DBFILE           **DB ERROR 01**S01486
     C***********          MOVEL*BLANKS   DBKEY            ***************S01486
     C***********          EXSR *PSSR                                     S01486
     C***********          END                                            S01486
     C                     CALL 'AOBANKR0'                                S01486
     C                     PARM '*DBERR'  RTCD    7                       S01486
     C                     PARM '*FIRST'  OPTN    7                       S01486
     C           SDBANK    PARM SDBANK    DSFDY                           S01486
     C*
     C** PROCEED TO START SCREEN
     C*
     C*
     C                     MOVELBJMRDT    DDRUNA
     C                     MOVE '1'       *IN10
      *                                                                   CPM005
      **  Get Portfolio Management installation details                   CPM005
      *                                                                   CPM005
     C                     CALL 'AOPORTR0'                                CPM005
     C                     PARM *BLANKS   RTCD                            CPM005
     C                     PARM '*FIRST'  OPTN                            CPM005
     C           SDPORT    PARM SDPORT    DSFDY                           CPM005
      *                                                                   CPM005
     C           RTCD      IFNE *BLANKS                                   CPM005
     C           *LOCK     IN   LDA                        ***************CPM005
     C                     Z-ADD5         DBASE            **DB ERROR 05**CPM005
     C                     MOVE 'SDPORTPD'DBFILE           ***************CPM005
     C                     MOVE *BLANKS   DBKEY                           CPM005
     C                     OUT  LDA                                       CPM005
     C                     EXSR *PSSR                                     CPM005
     C                     END                                            CPM005
     C*
     C           XTINIT    ENDSR                           ** #A    ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #BA   S/R TO OUTPUT AND PROCESS KEY FIELDS SCREEN
      ** CALLED FROM MAIN PROCESSING
      ** CALLS: #ZBAA, #ZBAB, #ZBAC, #ZBAD,
      **
     C*===================================================================
     C*
     C           #BA       BEGSR                           ** #BA BSR **
     C*
     C** INITIALISE SCREEN DATA
     C*
     C                     MOVE '0'       *IN10
     C                     MOVE '0'       *IN30
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN34
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN38
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN64
     C                     MOVE '0'       *IN66
     C                     MOVE '0'       *IN68
     C                     MOVE '0'       *IN77
     C                     MOVE '0'       *IN87
     C                     MOVE *BLANKS   DDPCNU
     C                     MOVE *BLANKS   DDPPTF
     C                     MOVE *BLANKS   DDPSTD
     C                     MOVE *BLANKS   DDITDT
     C                     MOVE *BLANKS   DDOPCP
     C                     MOVE *BLANKS   DDINUS
     C                     MOVE *BLANKS   DDRANG
     C                     MOVEL*BLANK    SCRCTL
     C                     MOVE *BLANKS   DDDELT
     C                     MOVEL'PM90001' MSMBR4
     C                     CALL 'SDRTVTXT'PLLANG
     C                     MOVELMSGTXT    DDINFO
     C*
     C** CLEAR WHOLE SCREEN
     C*
     C                     WRITEPM5010F3
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N
     C*
     C           WWAID     DOUEQ'03'
     C           *IN10     OREQ '1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** S T A R T   S C R E E N     O U T P U T
     C*
     C                     WRITEPM5010F2
     C                     EXFMTPM5010F1
     C                     MOVE '0'       *IN75
     C*
     C**   Clear program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ
     C                     PARM           TOPRQ
     C*
     C** Call S/R to move values into WWAID
     C*
     C                     EXSR #ZBAA
     C*
     C** ENTER TAKEN VALIDATE KEY INPUT
     C*
     C           WWAID     IFEQ 'RA'
     C                     EXSR #ZBAB
     C*
     C** IF NO ERRORS, DETERMINE NEXT SCREEN
     C*
     C           *IN75     IFEQ '0'
     C*
     C** IF ACTION CODE IS BLANK, NEXT SCREEN IS REVIEW SCREEN,
     C** OTHERWISE, DISPLAY REQUESTED DETAIL SCREEN AS PER KEY INPUT
     C*
     C           DDACTN    IFEQ *BLANK
     C                     MOVE '1'       *IN11
     C                     ELSE
     C                     MOVE '1'       *IN12
     C**********           MOVEL*BLANKS   WWPCNU  60                                          CSD027
     C                     MOVEL*BLANKS   WWPCNU  6                                           CSD027
     C                     MOVEL*BLANKS   WWPPTF  4
     C                     EXSR #ZBAC
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    SETLLPMPPTMXX
     C                     EXSR #ZBAD
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C           XTSTAR    ENDSR                           **#BA   ESR**
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #ZBAA S/R TO MOVE THE APPROPRIATE VALUES INTO FIELD WWAID,
      ** DEPENDING ON WHICH FUNCTION KEY HAS BEEN PRESSED.
      ** CALLED FROM #BA, #BB, #C
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #ZBAA     BEGSR                           ** #ZBAA BSR **
     C*
     C** If ENTER pressed, the VLDCMDKEY indicator will be off
     C*
     C           *IN45     IFEQ '0'
     C                     MOVE 'RA'      WWAID
     C                     END
     C*
     C** If F3
     C*
     C           *INKC     IFEQ '1'
     C                     MOVE '03'      WWAID
     C                     MOVE '0'       *INKC
     C                     END
     C*
     C** If F10
     C*
     C           *INKJ     IFEQ '1'
     C                     MOVE '10'      WWAID
     C                     MOVE '0'       *INKJ
     C                     END
     C*
     C** If F12
     C*
     C           *INKL     IFEQ '1'
     C                     MOVE '12'      WWAID
     C                     MOVE '0'       *INKL
     C                     END
     C*
     C** If ROLLUP pressed
     C*
     C           *IN25     IFEQ '1'
     C                     MOVE 'UP'      WWAID
     C                     MOVE '0'       *IN25
     C                     END
     C*
     C** If ROLLDOWN pressed
     C*
     C           *IN26     IFEQ '1'
     C                     MOVE 'DN'      WWAID
     C                     MOVE '0'       *IN26
     C                     END
     C*
     C                     ENDSR                           ** #ZBAA ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #ZBAB S/R TO VALIDATE KEY FIELDS
      ** CALLED FROM S/R #BA, #BB
      ** CALLS : ZASNMS  - SENDS MESSAGE TO PROGRAM MESSAGE QUEUE.
      **
     C*===================================================================
     C*
     C           #ZBAB     BEGSR                           ** #ZBAB BSR **
     C*
     C** RESET ERROR INDICATORS
     C** SET ERROR ARRAY COUNTER TO ZERO
     C*
     C                     MOVE '0'       *IN30
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN38
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN64
     C                     MOVE '0'       *IN66
     C                     MOVE '0'       *IN68
     C*
     C** A C T I O N    C O D E    I N P U T - MUST BE BLANK,I,A,E,D
     C*
     C           DDACTN    IFNE *BLANK
     C           DDACTN    ANDNE'I'
     C           DDACTN    ANDNE'A'
     C           DDACTN    ANDNE'E'
     C           DDACTN    ANDNE'D'
     C                     MOVEL'PM06100' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C           DDACTN    IFEQ 'D'
     C           BJSUC     ANDEQ'Y'
     C                     MOVEL'PM51105' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C** C H E C K   K E Y  F I E L D S
     C*
     C** ACTION CODE BLANK BUT KEY INPUT
     C*
     C           DDACTN    IFEQ *BLANK
     C           DDPCNU    ANDNE*BLANK
     C           DDACTN    OREQ *BLANK
     C           DDPPTF    ANDNE*BLANK
     C                     MOVEL'PM51108' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN30
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C** KEY BLANK BUT ACTION CODE INPUT
     C*
     C           DDACTN    IFNE *BLANK
     C           DDPCNU    ANDEQ*BLANK
     C           DDACTN    ORNE *BLANK
     C           DDPPTF    ANDEQ*BLANK
     C                     MOVEL'PM51109' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C** ACTION CODE 'I'
     C*
     C           DDACTN    IFEQ 'I'
     C           DDPCNU    ANDNE*BLANK
     C*
     C***********DDPCNU    CHAINSDPLCSL0             29                   S01486
     C                     MOVELDDPCNU    KEYCN                           S01486
     C                     CALL 'AOPLCSR0'                                S01486
     C                     PARM *BLANKS   RTCD                            S01486
     C                     PARM '*KEY'    OPTN                            S01486
     C                     PARM           KEYCN  10                       S01486
     C           SDPLCS    PARM SDPLCS    DSFDY                           S01486
     C*
     C************IN29     IFEQ '1'                                       S01486
     C           RTCD      IFNE *BLANKS                                   S01486
     C                     MOVEL'PM51102' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C************IN29     IFEQ '0'                                       S01486
     C           RTCD      IFEQ *BLANKS                                   S01486
     C           QBPPCS    ANDNE'Y'
     C                     MOVEL'PM51110' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN75
     C                     END
      *                                                                   CPM005
     C           *IN31     IFEQ '0'                                       CPM005
      *                                                                   CPM005
     C**********           MOVE DDPCNU    KPCNU   60                                   CPM005 CSD027
     C                     MOVE DDPCNU    KPCNU   6                                           CSD027
     C           KPCNU     CHAINPMPCBCL1             29                   CPM005
      *                                                                   CPM005
     C           *IN29     IFEQ '0'                                       CPM005
     C                     MOVEL'PM51118' ZAMSID                          CPM005
     C                     EXSR ZASNMS                                    CPM005
     C                     MOVE '1'       *IN31                           CPM005
     C                     MOVE '1'       *IN75                           CPM005
     C                     END                                            CPM005
     C                     END                                            CPM005
     C*
     C                     END
     C*
     C** ACTION CODE 'I'
     C*
     C           DDACTN    IFEQ 'I'
     C           DDPPTF    ANDNE*BLANK
     C*
     C***********DDPPTF    IFEQ '9997'                                    CPM005
     C***********DDPPTF    OREQ '9998'                                    CPM005
     C***********DDPPTF    OREQ '9999'                                    CPM005
     C           DDPPTF    IFEQ FCR997                                    CPM005
     C           DDPPTF    OREQ FCR998                                    CPM005
     C           DDPPTF    OREQ FCR999                                    CPM005
     C                     MOVEL'PM51112' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C                     END
     C*
     C** ACTION CODE 'I'
     C*
     C           DDACTN    IFEQ 'I'
     C           DDPCNU    ANDNE*BLANK
     C           DDPPTF    ANDNE*BLANK
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C***********K1LIST    CHAINPMPORTPP             29                   S01486
     C           K1LIST    CHAINPMPORTPD             29                   S01486
     C           *IN29     IFEQ '1'
     C           PNDPCL    ORNE *ZEROS
     C                     MOVEL'PM51103' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C* CAN NOT BE A POOL PORTFOLIO
     C           *IN31     IFEQ '0'
     C           *IN32     ANDEQ'0'
     C*
     C           K1LIST    CHAINPMPPTDPX             29
     C*
     C           *IN29     IFEQ '0'
     C                     MOVEL'PM51113' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C                     END
     C*
     C* CAN NOT BE MEMBER OF A POOL PORTFOLIO
     C           *IN31     IFEQ '0'
     C           *IN32     ANDEQ'0'
     C*
     C           K1LIST    CHAINPMPPTMLX             29
     C*
     C           *IN29     IFEQ '0'
     C                     MOVEL'PM51114' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C                     END
     C                     END
     C*
     C** IF ACTION CODE ENTERED REVIEW FROM MUST BE BLANK
     C*
     C           DDACTN    IFNE *BLANK
     C           DDKEY1    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C*
     C           DDACTN    ORNE *BLANK
     C           DDKEY2    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C*
     C           DDPCNU    ORNE *BLANK
     C           DDKEY1    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C*
     C           DDPCNU    ORNE *BLANK
     C           DDKEY2    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C*
     C           DDPPTF    ORNE *BLANK
     C           DDKEY1    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C           DDPPTF    ORNE *BLANK
     C           DDKEY2    ANDNE*BLANK
     C           *IN77     ANDNE'1'
     C                     MOVEL'PM51111' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN34
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C** N O   E R R O R  O N  K E Y  F I E L D S
     C*
     C           *IN75     IFNE '1'
     C*
     C** A C T I O N    C O D E    I
     C*
     C           DDACTN    IFEQ 'I'
     C                     MOVE '0'       *IN61
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN65
     C                     MOVE '0'       *IN67
     C                     MOVE '0'       *IN69
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDXX             73
     C           *IN73     IFEQ '0'
     C           ORRECI    IFEQ '*'
     C                     MOVE '1'       *IN73
     C                     END
     C                     END
     C*
     C           *IN73     IFEQ '0'
     C*          DDPCNU    OREQ *BLANK
     C*          DDPPTF    OREQ *BLANK
     C                     MOVEL'PM51101' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C                     END
     C*
     C** A C T I O N    C O D E    A , D
     C*
     C           DDACTN    IFEQ 'A'
     C           DDACTN    OREQ 'D'
     C                     MOVE '0'       *IN61
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN65
     C                     MOVE '0'       *IN67
     C                     MOVE '0'       *IN69
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDXX             73
     C           *IN73     IFEQ '0'
     C           ORRECI    COMP '*'                      73
     C                     END
     C*
     C           *IN73     IFEQ '1'
     C                     MOVEL'PM51104' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*                                                                   056460
     C** ACCESS PMPORTPP TO OBTAIN POOL PORTFOLIO DEFINITION              056460
     C                     MOVE DDPCNU    K1PCNU                          056460
     C                     MOVE DDPPTF    K1PPTF                          056460
     C***********K1LIST    CHAINPMPORTPP             29             056460S01486
     C           K1LIST    CHAINPMPORTPD             29                   S01486
     C           *IN29     IFEQ '1'                                       056460
     C           *LOCK     IN   LDA                                       S01486
     C                     Z-ADD22        DBASE            ***************056460
     C***********          MOVEL'PMPORTPP'DBFILE     **DB ERROR 02**056460S01486
     C                     MOVEL'PMPORTPD'DBFILE           **DB ERROR 02**S01486
     C                     MOVEL'DDPCNU'  DBKEY            ***************056460
     C                     MOVE DDPPTF    DBKEY                           056460
     C                     OUT  LDA                                       S01486
     C                     EXSR *PSSR                                     056460
     C                     END                                            056460
     C*                                                                   056460
     C** SET FLAG INDICATING WHETHER PERFORMANCE ON PORTFOLIO             056460
     C                     MOVE 'N'       WWPERF  1                       056460
     C           PNPSDT    IFLE BJRDNB                                    056460
     C                     MOVE 'Y'       WWPERF                          056460
     C                     END                                            056460
     C*
     C                     END
     C*
     C** A C T I O N    C O D E    E
     C*
     C           DDACTN    IFEQ 'E'
     C                     MOVE '1'       *IN61
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN67
     C                     MOVE '1'       *IN69
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDXX             73
     C*
     C           *IN73     IFEQ '1'
     C                     MOVEL'PM51104' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN31
     C                     MOVE '1'       *IN32
     C                     MOVE '1'       *IN75
     C                     END
     C*
     C                     END
     C*
     C** VALIDATE USER, ACTION CODE AND BRANCH                            S01486
     C*                                                                   S01486
     C           MBIN      IFEQ 'Y'                                       S01486
     C*                                                                   S01486
     C           DDACTN    IFEQ *BLANKS                                   S01486
     C                     MOVEL'E'       ZACTN                           S01486
     C                     MOVELDBRN      ZBR                             S01486
     C                     ELSE                                           S01486
     C*                                                                   S01486
     C** ACCESS CUSTOMER DETAILS FOR CUSTOMER'S BRANCH                    S01486
     C*                                                                   S01486
     C                     MOVELDDPCNU    KEYCN                           S01486
     C                     CALL 'AOCUSTR0'                                S01486
     C                     PARM *BLANKS   RTCD                            S01486
     C                     PARM '*KEY   ' OPTN                            S01486
     C                     PARM           KEYCN                           S01486
     C                     PARM *BLANKS   KEYST   7                       S01486
     C           SDCUST    PARM SDCUST    DSSDY                           S01486
     C*                                                                   S01486
     C           RTCD      IFNE *BLANKS                                   S01486
     C           *LOCK     IN   LDA                                       S01486
     C                     Z-ADD3         DBASE                           S01486
     C                     MOVEL'SDCUSTPD'DBFILE                          S01486
     C                     MOVELDDPCNU    DBKEY                           S01486
     C                     OUT  LDA                                       S01486
     C                     EXSR *PSSR                                     S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     MOVELDDACTN    ZACTN                           S01486
     C                     MOVELBBBRCD    ZBR                             S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     CALL 'ZVACTBU'                                 S01486
     C                     PARM           ZACTN   1                       S01486
     C                     PARM           ZBR     3                       S01486
     C                     PARM *ZEROS    ERR     10                      S01486
     C*                                                                   S01486
     C           ERR       IFNE *ZEROS                                    S01486
     C           ERR       IFEQ 1                                         S01486
     C                     MOVEL'PM51115' ZAMSID                          S01486
     C                     EXSR ZASNMS                                    S01486
     C                     SETON                     303175               S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C           ERR       IFEQ 2                                         S01486
     C                     MOVEL'PM51116' ZAMSID                          S01486
     C                     EXSR ZASNMS                                    S01486
     C                     SETON                     303175               S01486
     C                     END                                            S01486
     C                     END                                            S01486
     C                     ELSE                                           S01486
     C*                                                                   S01486
     C           DDACTN    IFEQ *BLANKS                                   S01486
     C                     MOVEL'E'       ZACTN                           S01486
     C                     ELSE                                           S01486
     C                     MOVELDDACTN    ZACTN                           S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     CALL 'ZVACTU'                                  S01486
     C                     PARM           ZACTN   1                       S01486
     C                     PARM *ZEROS    ERR     10                      S01486
     C*                                                                   S01486
     C           ERR       IFEQ 1                                         S01486
     C                     MOVEL'PM51117' ZAMSID                          S01486
     C                     EXSR ZASNMS                                    S01486
     C                     SETON                     303175               S01486
     C                     END                                            S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     END
     C                     ENDSR                           ** #ZBAB ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #ZBAC S/R TO INITIALIZE SUBFILE PM5010S1
      ** CALLED BY #BA, #BB
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C**
     C           #ZBAC     BEGSR                           ** #ZBAC BSR **
     C*
     C** CLEAR SUBFILE
     C*
     C                     MOVE '1'       *IN55
     C                     WRITEPM5010C1
     C                     MOVE '0'       *IN55
     C*
     C*
     C** INITIALIZE SUBFILE RECORD NUMBER
     C*
     C*
     C                     MOVE '0'       *IN70
     C                     MOVE '0'       *IN75
     C                     Z-ADD1         RRN2    40
     C                     Z-ADD1         WWSAVR  40
     C                     Z-ADD1         SFLRRN  40
     C                     Z-ADD0         WWZONE  40
     C*
     C                     ENDSR                           ** #ZBAC ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #ZBAD S/R TO READ THE POOL PORTFOLIO MEMBER DEFINITION FILE
      ** FOR THE POOL PORTFOLIO SELECTED AND FILL IN THE SUBFILE PM5010S1
      ** CALLED FROM #BA, #BB, #C, VALIDK
      ** CALLS
      **
     C*===================================================================
     C*
     C           #ZBAD     BEGSR                           ** #ZBAD BSR **
     C*
     C           DDACTN    IFEQ 'E'
     C           DDACTN    OREQ 'D'
     C                     MOVE '1'       *IN37
     C                     ELSE
     C                     MOVE '0'       *IN37
     C                     END
     C*
     C** RESTORE RECORD NUMBER
     C*
     C                     Z-ADDWWSAVR    RRN2
     C*
     C** RESTORE ERROR INDICATORS
     C*
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN38
     C                     MOVE '0'       *IN71
     C*
     C                     Z-ADD0         WWRRN   40
     C                     Z-ADDRRN2      SFLRRN
     C*
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    READEPMPPTMXX                 71
     C*
     C           WWRRN     DOUEQ11
     C*
     C           *IN71     IFEQ '0'
     C*
     C** FIND SAME HEADER KEY
     C*
     C           OSRECI    IFEQ 'D'
     C*
     C** IF ACTION = E SHOW ALSO DELETED RECORDS
     C*
     C           DDACTN    OREQ 'E'
     C           OSRECI    ANDEQ'*'
     C********** OSCNUM    IFNE *ZEROS                                                        CSD027
     C           OSCNUM    IFNE *BLANKS                                                       CSD027
     C                     MOVELOSCNUM    DDCNUM
     C                     MOVELOSCNUM    DDDTTK
     C                     ELSE
     C                     MOVEL*BLANKS   DDCNUM
     C                     MOVEL*BLANKS   DDDTTK
     C                     END
     C                     MOVELOSPTFR    DDPTFR
     C                     MOVELOSPTFR    DDDTTL
     C                     MOVELOSNOUN    DDDTTM
      *
     C           OSNOUN    IFNE *ZEROS
     C                     MOVE OSNOUN    ZFLD15
     C                     Z-ADD0         ZDECS
     C                     EXSR ZSEDIT
     C                     MOVE ZOUT20    DDNOUN
     C                     ELSE
     C                     MOVE *BLANKS   DDNOUN
     C                     END
      *
     C                     ADD  1         WWRRN
     C                     WRITEPM5010S1
     C                     ADD  1         RRN2
     C                     ADD  1         WWZONE
     C                     END
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    READEPMPPTMPX                 71
     C*
     C                     ELSE
     C                     MOVE *BLANK    DDFLAG
     C                     MOVE *BLANKS   DDDTTK
     C                     MOVE *BLANKS   DDDTTL
     C                     MOVE *BLANKS   DDDTTM
     C                     MOVE *BLANKS   DDCNUM
     C                     MOVE *BLANKS   DDPTFR
     C                     MOVE *BLANKS   DDNOUN
     C                     ADD  1         WWRRN
     C                     WRITEPM5010S1
     C                     ADD  1         RRN2
     C                     END
     C*
     C                     END
     C*
     C** SAVE SUBFILE RECORD NUMBER
     C*
     C                     Z-ADDRRN2      WWSAVR
     C*
     C** IF NOT EOF POSITION '+' AT END OF SUBFILE PAGE
     C*
     C           *IN71     IFEQ '0'
     C                     MOVE '0'       *IN56
     C                     MOVE OSPCNU    KPCN
     C                     MOVE OSPPTF    KPPR
     C                     MOVE OSCNUM    KCCN
     C                     MOVE OSPTFR    KCPR
     C           KEY       SETLLPMPPTMXX
     C                     ELSE
     C                     MOVE '1'       *IN56
     C                     END
     C*
     C** ON INSERT OR AMEND '+' SHOULD ALWAYS BE OUTPUT
     C           DDACTN    IFEQ 'I'
     C           DDACTN    OREQ 'A'
     C                     MOVE '0'       *IN56
     C                     END
     C*
     C                     ENDSR                           ** #ZBAD ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #BB   S/R TO PROCESS SUBFILE SELECTION SCREEN
      ** CALLED FROM MAIN PROCESSING
      ** CALLS: #ZBAA, #ZBAB, #ZBAC, #ZBAD
      **
     C*===================================================================
     C*
     C           #BB       BEGSR                           ** #BB   BSR **
     C*
     C                     MOVE '0'       *IN11
     C                     MOVE '1'       *IN77
     C*
     C** SET PROCESSING FLAG TO FORCE SUBFILE REBUILD
     C*
     C                     MOVEL'RA'      WWAID   2
     C                     MOVEL*BLANK    DDPCNU
     C                     MOVEL*BLANK    DDPPTF
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N
     C*
     C           WWAID     DOUEQ'03'
     C           *IN10     OREQ '1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** R E B U I L D   S U B F I L E
     C*
     C           WWAID     IFEQ 'DN'
     C           WWAID     OREQ 'UP'
     C           WWAID     OREQ 'RA'
     C*
     C** WRITE CONTROL RECORD
     C*
     C                     MOVE '0'       *IN50
     C                     MOVE '0'       *IN51
     C                     MOVE '0'       *IN52
     C                     Z-ADD*ZERO     RRN     40
     C                     WRITEPM5010C0
     C                     MOVE '1'       *IN53
     C*
     C** SET FILE POINTER - PAGE BACK
     C*
     C           WWAID     IFEQ 'DN'
     C                     MOVEL*BLANK    DDPCNU
     C                     MOVEL*BLANK    DDPPTF
     C                     MOVEL*BLANK    W1PAG2
     C                     MOVEL*BLANK    W2PAG2
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    SETLLPMPPTDXX
     C*
     C** OTHERWISE        - PAGE FORWARD
     C*
     C                     ELSE
     C           *IN75     IFEQ '0'
     C                     MOVELDDKEY1    DDPCNU
     C                     MOVELDDKEY2    DDPPTF
     C                     MOVELDDKEY1    W1PAG2
     C                     MOVELDDKEY2    W2PAG2
     C                     ELSE
     C                     MOVELW1PAG2    DDPCNU
     C                     MOVELW2PAG2    DDPPTF
     C                     END
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    SETLLPMPPTDXX
     C                     END
     C*
     C** READ IN DETAILS-FILL UP SUBFILE
     C*
     C           RRN       DOUEQ13
     C           *IN70     OREQ '1'
     C*
     C                     MOVE *BLANK    DDACTN
     C                     MOVE '0'       *IN47
     C*
     C** READ DETAILS UNTIL SUBFILE PAGE IS FULL
     C*
     C                     READ PMPPTDXX                 70
     C*
     C           *IN70     IFEQ '0'
     C*
     C** IF RECORD IS DELETED, FLAG IT AS SO ON SCREEN
     C*
     C           ORRECI    IFEQ '*'
     C                     MOVEL'D'       DDSTAT  1
     C                     ELSE
     C                     MOVEL*BLANK    DDSTAT
     C                     END
     C*
     C                     MOVE ORPCNU    DDPCNU
     C                     MOVE ORPPTF    DDPPTF
     C                     ADD  1         RRN            53
     C*
     C           RRN       IFEQ WWSAV
     C                     MOVE WWACTN    DDACTN
     C                     MOVE '1'       *IN47
     C                     END
     C                     WRITEPM5010S0
     C*
     C** RECORD NOW WRITTEN TO SUBFILE
     C*
     C                     END
     C*
     C** PAGE NOW FULL (OR EOF)
     C*
     C                     END
     C*
     C** READ ONE MORE RECORD FOR NEXT SCREEN
     C*
     C           *IN70     IFEQ '0'
     C                     READ PMPPTDXX                 70
     C                     END
     C*
     C** IF NOT EOF SET NEXT 'REVIEW FROM' KEY ELSE SET IT TO BLANK
     C*
     C           *IN70     IFEQ '0'
     C                     MOVELORPCNU    DDKEY1
     C                     MOVE ORPPTF    DDKEY2
     C                     MOVE '0'       *IN52
     C                     ELSE
     C                     MOVEL*BLANKS   DDKEY1
     C                     MOVEL*BLANKS   DDKEY2
     C                     MOVE '1'       *IN52
     C                     END
     C*
     C** FOR SUBFILE CONTROL
     C*
     C           *IN53     IFEQ '1'
     C                     MOVE '0'       *IN50
     C                     MOVE '1'       *IN51
     C                     ELSE
     C                     MOVE '1'       *IN50
     C                     MOVE '1'       *IN51
     C                     END
     C*
     C                     END
     C*
     C** R E V I E W   S C R E E N     O U T P U T
     C*
     C                     MOVEL'PM90002' MSMBR4
     C                     CALL 'SDRTVTXT'PLLANG
     C                     MOVELMSGTXT    DDINFO
     C                     WRITEPM5010F2
     C                     EXFMTPM5010C0
     C                     MOVE '0'       *IN75
     C                     Z-ADD0         WWSAV
     C*
     C**   Clear program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ
     C                     PARM           TOPRQ
     C*
     C** Call S/R to move values into WWAID
     C*
     C                     EXSR #ZBAA
     C*
     C** CK12- INITIAL SCREEN
     C*
     C           WWAID     IFEQ '12'
     C                     MOVE '1'       *IN10
     C                     END
     C*
     C** ENTER PRESSED, PROCESS RECORD SELECTION
     C*
     C           WWAID     IFEQ 'RA'
     C                     MOVE '1'       *IN86
     C*
     C           *IN53     IFEQ '0'
     C                     READCPM5010S0                 86
     C                     END
     C*
     C** R E C O R D   S E L E C T   V A L I D A T I O N
     C*
     C           *IN86     IFEQ '0'
     C                     EXSR #ZBAB
     C*
     C** NO ERRORS, UPDATE SCREEN CAN BE PROCESSED NEXT
     C*
     C           *IN75     IFEQ '0'
     C                     MOVE '1'       *IN12
     C                     MOVEL'Y'       WWREVW
     C                     MOVELDDKEY1    W1PAG1
     C                     MOVELDDKEY2    W2PAG1
     C                     MOVEL*BLANKS   DDKEY1
     C                     MOVEL*BLANKS   DDKEY2
     C                     MOVEL*BLANKS   WWPCNU
     C                     MOVEL*BLANKS   WWPPTF
     C                     EXSR #ZBAC
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    SETLLPMPPTMXX
     C                     EXSR #ZBAD
     C                     ELSE
     C                     Z-ADDRRN       WWSAV   40
     C                     MOVE DDACTN    WWACTN  1
     C                     END
     C**
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C           XTREVI    ENDSR                           ** #BB ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #C    S/R TO PROCESS DETAIL SCREEN AND UPDATE FILES
      ** CALLED FROM MAIN PROCESSING
      ** CALLS: #CA, #CB, #ZBAA, #ZBAD, #CC, #CD
      **
     C*===================================================================
     C*
     C           #C        BEGSR                           ** #C    BSR **
     C*
     C** SET SCREEN INDICATORS - PROTECT KEY, SET OFF ERROR INDS,
     C** POSITION CURSOR
     C*
     C                     MOVE '1'       *IN33
     C                     MOVE '0'       *IN12
     C                     MOVE '0'       *IN38
     C*
     C** ACCESS FILE RECORD FOR OLD TNLU TO CHECK AT UPDATE TIME
     C** IF NO RECORD PRESENTLY ON FILE, ZEROISE STORED TNLU
     C*
     C                     Z-ADD*ZERO     WWTNLU  50
     C*
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDXX             73
     C*
     C           *IN73     IFEQ '0'
     C           *IN87     ANDEQ'0'
     C                     Z-ADDORTNLU    WWTNLU
     C                     END
     C*
     C** IF INSERT (NEW OR OVER DELETED RECORD)
     C** INITIALIZE ALL FIELDS ON THE RECORD (I.E. ZEROIZE/BLANK OUT)
     C*
     C           DDACTN    IFEQ 'I'
     C                     EXSR #CA
     C                     END
     C*
     C** IF DELETED RECORD-ENQUIRY ONLY (RECI IS SET TO BLANK FOR INSERTS)
     C*
     C           OSRECI    IFEQ '*'
     C                     MOVEL'DELETED' DDDELT  7
     C                     ELSE
     C                     MOVEL*BLANK    DDDELT
     C                     END
     C*
     C** TRANSLATE RECORD DETAILS FROM FILE LAYOUT TO SCREEN LAYOUT
     C*
     C           DDACTN    IFNE 'I'
     C                     EXSR #CB
     C                     END
     C*
     C** IF DELETE/ENQUIRY PROTECT FIELD INPUT ON S/PM5010F0
     C*
     C           DDACTN    IFEQ 'D'
     C           DDACTN    OREQ 'E'
     C                     MOVE '1'       *IN61
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN67
     C                     MOVE '1'       *IN69
     C                     END
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N
     C*
     C           WWAID     DOUEQ'03'
     C           *IN10     OREQ '1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** L O A D    U  P    I N F O M E S S A G E S
     C*
     C           DDACTN    IFNE 'D'
     C                     MOVEL'PM90003' MSMBR4
     C                     CALL 'SDRTVTXT'PLLANG
     C                     MOVELMSGTXT    DDINFO
     C                     ELSE
     C                     MOVEL'PM90004' MSMBR4
     C                     CALL 'SDRTVTXT'PLLANG
     C                     MOVELMSGTXT    DDINFO
     C                     END
      *
     C           DDPSTD    IFEQ *BLANKS
     C           DDACTN    ANDEQ'I'
     C                     Z-ADDBJRDNB    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     DDPSTD
     C                     END
     C*
     C           DDOPCP    IFEQ *BLANKS
     C                     MOVE 'O'       DDOPCP
     C                     END
     C*
     C** D E T A I L   S C R E E N     O U T P U T
     C*
     C                     WRITEPM5010F2
     C                     WRITEPM5010F1
     C**
     C** RESTORE SUBFILE CHANGES IF ERROR
     C**
     C           *IN75     IFEQ '1'
     C                     MOVE '0'       *IN70
     C                     END
     C**
     C                     EXFMTPM5010C1
     C                     MOVE '0'       *IN75
     C*
     C**   Clear program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ
     C                     PARM           TOPRQ
     C*
     C** Call S/R to move values into WWAID
     C*
     C                     EXSR #ZBAA
     C*
     C** CK12- INITIAL SCREEN
     C*
     C           WWAID     IFEQ '12'
     C                     MOVE '1'       *IN10
     C                     END
     C*
     C** ROLL UP
     C*
     C           WWAID     IFEQ 'UP'
     C                     EXSR #ZBAD
     C                     END
     C*
     C** V A L I D A T E   D E T A I L   S C R E E N   I N P U T
     C*
     C           WWAID     IFNE '03'
     C           WWAID     ANDNE'12'
     C           WWAID     ANDNE'UP'
     C                     EXSR #CC
     C*
     C** N O    D E T A I L   S C R E E N    E R R O R S
     C*
     C           *IN75     IFEQ '0'
     C           WWAID     ANDEQ'RA'
     C*
     C** DETERMINE WHAT SCREEN TO RETURN TO
     C*
     C           WWREVW    IFEQ 'Y'
     C                     MOVELW1PAG2    DDKEY1
     C                     MOVELW2PAG2    DDKEY2
     C                     MOVE '1'       *IN11
     C                     ELSE
     C                     MOVE '1'       *IN10
     C                     END
     C*
     C**     U  P  D  A  T  E      F  I  L  E  S
     C*
     C           DDACTN    IFEQ 'I'
     C           DDACTN    OREQ 'A'
     C           DDACTN    OREQ 'D'
     C                     EXSR #CD
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C                     MOVE '0'       *IN33
     C*
     C           XTUPDT    ENDSR                           ** #C ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CA S/R TO INITIALISE ALL FILE FIELDS TO ZERO/BLANK
      ** CALLED FROM #C
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #CA       BEGSR                           ** #CA BSR **
     C*
     C** INITIALIZE ALL DATA ON RECORD DEFINED IN DETREC (KEY EXCLUDED)
     C*
     C                     MOVEL*BLANK    DETREC
     C                     Z-ADD*ZERO     ORLCD
     C                     Z-ADD*ZERO     ORTNLU
     C                     MOVE *BLANKS   WWHLUP
     C                     SETOF                     76                   S01486
     C*
     C                     ENDSR                           ** #CA ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CB S/R TO FORMAT RECORD FIELDS FOR SCREEN
      ** CALLED FROM #C
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #CB       BEGSR                           ** #CB BSR **
     C*
     C** TRANSLATE RECORD DETAILS FROM FILE LAYOUT TO SCREEN LAYOUT
     C*
     C** TRANSLATE DDPCNU AND DDPTF
     C*
     C                     MOVELORPCNU    DDPCNU
     C                     MOVELORPPTF    DDPPTF
     C*
     C                     Z-ADDORPSTD    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     DDPSTD
     C*
     C*
     C           ORPMTD    IFEQ *ZEROS
     C                     MOVE *BLANKS   DDITDT
     C                     ELSE
     C                     Z-ADDORPMTD    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     DDITDT
     C                     END
     C*
     C                     MOVELOROPCP    DDOPCP
     C*
     C                     MOVE ORPCNU    K1PCNU
     C                     MOVE ORPPTF    K1PPTF
     C***********K1LIST    CHAINPMPORTPP             29                   S01486
     C           K1LIST    CHAINPMPORTPD             29                   S01486
      *
     C           ORINUS    IFNE *ZEROS
     C                     MOVE ORINUS    ZFLD15
     C                     Z-ADDPNPCDP    ZDECS
     C                     EXSR ZSEDIT
     C                     MOVE ZOUT20    DDINUS
     C                     ELSE
     C                     MOVE *BLANKS   DDINUS
     C                     END
     C*
     C           ORRANG    IFNE *ZEROS
     C                     MOVELORRANG    DDRANG
     C                     ELSE
     C                     MOVEL*BLANKS   DDRANG
     C                     END
     C                     SETOF                     76                   S01486
     C*
     C                     ENDSR
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CD S/R - TO VALIDATE DETAIL SCREEN
      ** CALLED FROM #C
      ** CALLS:  #CCA, ZASNMS
      **
     C*===================================================================
     C*
     C           #CC       BEGSR                           ** #CC BSR **
     C*
     C** RESET SCREEN ERROR INDICATORS
     C*
     C                     MOVE '0'       *IN87
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN75
     C                     MOVE '0'       *IN64
     C                     MOVE '0'       *IN66
     C                     MOVE '0'       *IN68
     C*
     C** ENTER KEY PRESSSED
     C*
     C           WWAID     IFEQ 'RA'                       B1
     C*
     C** ACTION = D NOT ALLOWED WHEN SET UP COMPLETE
     C*
     C           DDACTN    IFEQ 'D'                        B2
     C           BJSUC     ANDEQ'Y'
     C                     MOVEL'PM51105' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN75
     C                     END                             E2
     C*
     C** IF ACTION = D WITH ENTER PRESSED THEN ERROR
     C*
     C           DDACTN    IFEQ 'D'                        B2
     C                     MOVE '1'       *IN75
     C                     MOVEL'PM06300' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN75
     C                     END                             E2
     C*
     C** ACTION = I OR A
     C*
     C           DDACTN    IFEQ 'I'                        B2
     C           DDACTN    OREQ 'A'
     C*
     C** VALIDATION OF FIELDS FOR INSERT/AMEND
     C*
     C** CHECK THAT DDPSTD (START DATE) IS VALID
     C*
     C           DDPSTD    IFNE *BLANKS                    B3
     C           DDACTN    OREQ 'A'
     C                     MOVELDDPSTD    WWNMAT  60
     C                     MOVELWWNMAT    WANMAT  6
      *
     C           DDPSTD    IFNE WANMAT                     B4
     C                     MOVE '1'       *IN60
     C                     MOVE '1'       *IN75
     C                     MOVEL'PM51200' ZAMSID
     C                     EXSR ZASNMS
     C                     END                             E4
     C*
     C           *IN60     IFEQ '0'                        B4
     C                     MOVE DDPSTD    ZDATE
     C                     EXSR ZDATE1
     C           *IN99     IFEQ '1'                        B5
     C                     MOVEL'PM51200' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN60
     C                     MOVE '1'       *IN75
     C                     ELSE                            X5
     C                     Z-ADDZDAYNO    ##PSTD
     C                     END                             E5
     C                     END                             E4
     C                     ELSE                            X3
     C*
     C                     Z-ADDBJRDNB    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     DDPSTD
     C                     Z-ADDZDAYNO    ##PSTD  50
     C                     END                             E3
     C*
     C** CHECK THAT DDITDT (INTERIM DATE) IS VALID
     C*
     C           DDITDT    IFNE *BLANKS                    B3
     C                     MOVELDDITDT    WWNMAT  60
     C                     MOVELWWNMAT    WANMAT  6
      *
     C           DDITDT    IFNE WANMAT                     B4
     C                     MOVE '1'       *IN62
     C                     MOVE '1'       *IN75
     C                     MOVEL'PM51201' ZAMSID
     C                     EXSR ZASNMS
     C                     END                             E4
     C*
     C           *IN62     IFEQ '0'                        B4
     C                     MOVE DDITDT    ZDATE
     C                     EXSR ZDATE1
     C           *IN99     IFEQ '1'                        B5
     C                     MOVEL'PM51201' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN62
     C                     MOVE '1'       *IN75
     C                     ELSE                            X5
     C                     Z-ADDZDAYNO    ##ITDT  50
     C                     END                             E5
     C                     END                             E4
     C                     ELSE                            X3
     C                     Z-ADD*ZEROS    ##ITDT
     C                     END                             E3
     C*
     C           DDITDT    IFNE *BLANKS                    B3
     C           *IN60     ANDEQ'0'
     C           *IN62     ANDEQ'0'
     C           ##ITDT    IFLE ##PSTD                     B4
     C                     MOVEL'PM51202' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN62
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C                     END                             E3
     C*
     C** CHECK THAT DDINUS (INITIAL UNIT VALUE) IS VALID
     C*
     C           DDINUS    IFNE *BLANKS                    B3
     C           DDRANG    ANDEQ*BLANKS
     C                     MOVEL'PM51204' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN66
     C                     MOVE '1'       *IN75
     C                     END                             E3
     C*
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C***********K1LIST    CHAINPMPORTPP             29                   S01486
     C           K1LIST    CHAINPMPORTPD             29                   S01486
     C                     MOVE PNPTCY    WWPTCY  3
     C*
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVE *BLANKS   @@AMT
     C*
     C           DDINUS    IFNE *BLANKS                    B3
     C           *IN66     ANDEQ'0'
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVE DDINUS    @@ALPH
     C                     Z-ADDPNPCDP    @@IDP
     C           15        SUB  PNPCDP    @@IINT
     C                     MOVE *BLANK    @@ERCD
     C                     EXSR ZA0840
     C           @@ERCD    IFNE 0                          B4
     C                     MOVEL'PM51203' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN66
     C                     MOVE '1'       *IN75
     C                     ELSE                            X4
     C                     MOVE @@ALPH    DDINUS
     C                     MOVE @@AMT     WWINUS 110
     C                     END                             E4
     C                     END                             E3
     C*
     C** CHECK THAT DDOPCP IS VALID
     C*
     C           DDOPCP    IFEQ *BLANKS                    B3
     C                     MOVE 'O'       DDOPCP
     C                     ELSE                            X3
     C           DDOPCP    IFNE 'O'                        B4
     C           DDOPCP    ANDNE'C'
     C                     MOVEL'PM51205' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN64
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C*
     C** CHECK THAT DDRANG (TRADE NUMBER RANGE CODE) IS VALID
     C*
     C           DDRANG    IFNE *BLANKS                    B4
     C*
     C                     MOVE '00'      RANK1
     C                     MOVE *BLANK    RANK2
     C                     MOVE DDRANG    RANK3
     C           RANKEY    CHAINTNRAN                83
     C           *IN83     IFEQ '1'                        B5
     C                     MOVEL'PM51206' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN68
     C                     MOVE '1'       *IN75
     C                     END                             E5
     C*
     C** CHECK THAT DDRANG NOT ALREADY USED FOR ANOTHER POOL PORTFOLIO
     C*
     C           *IN68     IFEQ '0'                        B5
     C                     MOVE DDRANG    WWRANG  20
     C           WWRANG    CHAINPMPPTDL1             83
     C           *IN83     IFEQ '0'                        B6
     C                     MOVE RNPCNU    RRPCNU  6
     C                     END                             E6
     C           *IN83     IFEQ '0'                        B6
     C           DDPCNU    ANDNERRPCNU
     C           *IN83     OREQ '0'
     C           DDPPTF    ANDNERNPPTF
     C*
     C           DDRANG    IFNE W1RANG                     B7
     C                     MOVE '0'       *IN74
     C                     MOVE DDRANG    W1RANG  2
     C                     END                             E7
     C*
     C           *IN74     IFEQ '0'                        B7
     C                     MOVEL'PM51207' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN68
     C                     MOVE '1'       *IN74
     C                     MOVE '1'       *IN75
     C                     ELSE                            X7
     C                     MOVE '0'       *IN74
     C                     END                             E7
     C*
     C                     END                             E6
     C                     END                             E5
     C*
     C                     END                             E4
     C*
     C                     END                             E3
     C*
     C                     END                             E2
     C*
     C*
     C** CHECK IF ENTRIES OF SUBFILE VALID
     C*
     C           *IN70     DOWEQ'0'                        B2
     C           DDACTN    ANDNE'D'
     C           DDACTN    ANDNE'E'
     C                     READCPM5010S1                 70
     C*
     C           *IN70     IFEQ '0'                         B3
     C*
     C** CHECK THAT DDCNUM AND DDPTFR ARE VALID
     C*
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C                     MOVE '0'       *IN38
     C*                                                                   056460
     C** IF PERFORMANCE STARTED FOR POOL AND POOL MEMBERS HAS BEEN        056460
     C** CHANGED THEN ERROR                                               056460
     C           WWPERF    IFEQ 'Y'                        B4             056460
     C*                                                                   056460
     C           DDDTTK    IFNE DDCNUM                     B5             056460
     C           DDDTTL    ORNE DDPTFR                                    056460
     C                     MOVEL'PM51312' ZAMSID                          056460
     C                     EXSR ZASNMS                                    056460
     C                     MOVE '1'       *IN35                           056460
     C                     MOVE '1'       *IN36                           056460
     C                     MOVE '1'       *IN75                           056460
     C                     END                             E5             056460
     C*                                                                   056460
     C                     END                             E4             056460
     C*
     C           *IN36     IFEQ '0'                        B4             056460
     C***********DDPTFR    IFEQ '9997'                      B4            CPM005
     C***********DDPTFR    OREQ '9998'                                    CPM005
     C***********DDPTFR    OREQ '9999'                                    CPM005
     C           DDPTFR    IFEQ FCR997                      B4            CPM005
     C           DDPTFR    OREQ FCR998                                    CPM005
     C           DDPTFR    OREQ FCR999                                    CPM005
     C                     MOVEL'PM51310' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C                     END                             E4             056460
     C*
     C           *IN36     IFEQ '0'                        B4
     C           DDCNUM    IFNE *BLANKS                    B5
     C           DDPTFR    ORNE *BLANKS
     C                     MOVE DDCNUM    K2CNUM
     C                     MOVE DDPTFR    K2PTFR
     C***********K2LIST    CHAINPMPORTPP             29                   S01486
     C           K2LIST    CHAINPMPORTPD             29                   S01486
     C*
     C           *IN29     IFEQ '1'                        B6
     C                     MOVEL'PM51301' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E6
     C*
     C** IF POOL BEING CREATED FOR GENERATION OF BULK TRADES CUSTOMER
     C** MUST BE A SAFE CUSTODY / DISCRETIONARY SECURITIES TRADING CUSTOMER
     C           DDRANG    IFNE *BLANKS                    B6
     C***********          MOVE DDCNUM    WWCNUA  6                       S01486
     C***********WWCNUA    CHAINSDPLCSL0             29                   S01486
     C                     MOVELDDCNUM    KEYCU                           S01486
     C                     CALL 'AOSECSR0'                                S01486
     C                     PARM *BLANKS   RTCD                            S01486
     C                     PARM '*KEY'    OPTN                            S01486
     C                     PARM           KEYCU   6                       S01486
     C           SDSECS    PARM SDSECS    DSSDY                           S01486
     C*
     C************IN29     IFEQ '1'                        B7             S01486
     C           RTCD      IFNE *BLANKS                                   S01486
     C           BFCLAS    ORNE 'S'
     C***********BFCLAS****ANDNE'C'                                       063634
     C           BFCLAS    ANDNE'D'                                       063634
     C                     MOVEL'PM51311' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN75
     C                     END                             E7
     C                     END                             E6
     C                     END                             E5
     C                     END                             E4
     C*
     C* CAN NOT BE A POOL PORTFOLIO
     C           *IN35     IFEQ '0'                        B4
     C           *IN36     ANDEQ'0'
     C                     MOVE DDCNUM    K1PCNU
     C                     MOVE DDPTFR    K1PPTF
     C*
     C           K1LIST    CHAINPMPPTDPX             29
     C*
     C           *IN29     IFEQ '0'                        B5
     C                     MOVEL'PM51308' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E5
     C                     END                             E4
     C*
     C* CAN NOT BE MEMBER OF 2 DIFFERENT POOL PORTFOLIOS
     C           *IN35     IFEQ '0'                        B4
     C           *IN36     ANDEQ'0'
     C*
     C           K1LIST    CHAINPMPPTMLX             29
     C*
     C           *IN29     IFEQ '0'                        B5
     C                     MOVE OSPCNU    WWCUST  6
     C           WWCUST    IFNE DDPCNU                     B6
     C           OSPPTF    ORNE DDPPTF
     C                     MOVEL'PM51304' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E6
     C                     END                             E5
     C                     END                             E4
     C*
     C* DATE PORTFOLIO CLOSED MUST BE GREATER THAN INTERIM DATE
     C           *IN35     IFEQ '0'                        B4
     C           *IN36     ANDEQ'0'
     C           *IN62     ANDEQ'0'
     C*
     C           DDITDT    IFNE *BLANKS                    B5
     C           ##ITDT    IFLE PNDPCL                     B6
     C                     MOVEL'PM51302' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E6
     C                     END                             E5
     C                     END                             E4
     C*
     C* PORTFOLIO CURRENCY MUST BE EQUAL TO POOL PORTFOLIO CURRENCY
     C           *IN35     IFEQ '0'                        B4
     C           *IN36     ANDEQ'0'
     C           DDCNUM    ANDNE*BLANKS
     C           DDPTFR    ANDNE*BLANKS
     C*
     C           PNPTCY    IFNE WWPTCY                     B5
     C                     MOVEL'PM51303' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN35
     C                     MOVE '1'       *IN36
     C                     MOVE '1'       *IN75
     C                     END                             E5
     C                     END                             E4
      *                                                                   CPM005
      **  A change of base currency can not exist for the pool customer   CPM005
      *                                                                   CPM005
     C           *IN35     IFEQ '0'                        B4             CPM005
     C           *IN36     ANDEQ'0'                                       CPM005
      *                                                                   CPM005
     C**********           MOVE DDCNUM    KPCNU   60                                   CPM005 CSD027
     C                     MOVE DDCNUM    KPCNU   6                                           CSD027
     C           KPCNU     CHAINPMPCBCL1             29                   CPM005
      *                                                                   CPM005
     C           *IN29     IFEQ '0'                        B5             CPM005
     C                     MOVEL'PM51118' ZAMSID                          CPM005
     C                     EXSR ZASNMS                                    CPM005
     C                     MOVE '1'       *IN35                           CPM005
     C                     MOVE '1'       *IN36                           CPM005
     C                     MOVE '1'       *IN75                           CPM005
     C                     END                             E5             CPM005
     C                     END                             E4             CPM005
     C*
     C** CHECK THAT DDNOUN (NUMBER OF UNITS) IS VALID
     C*
     C           DDRANG    IFEQ *BLANKS                    B4
     C           DDNOUN    ANDNE*BLANKS
     C                     MOVEL'PM51305' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN38
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C*
     C           DDRANG    IFNE *BLANKS                    B4
     C           DDCNUM    ANDNE*BLANKS
     C           DDPTFR    ANDNE*BLANKS
     C           DDNOUN    ANDEQ*BLANKS
     C                     MOVEL'PM51306' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN38
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C*
     C           *IN38     IFEQ '0'                        B4
     C           DDNOUN    ANDNE*BLANKS
     C           DDCNUM    ANDEQ*BLANKS
     C           DDPTFR    ANDEQ*BLANKS
     C                     MOVEL'PM51309' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN38
     C                     MOVE '1'       *IN75
     C                     END                             E4
     C*
      * ...check for numeric field
     C           DDNOUN    IFNE *BLANKS                    B4
     C           *IN38     ANDEQ'0'
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVE DDNOUN    @@ALPH
     C                     Z-ADD0         @@IDP
     C                     Z-ADD7         @@IINT
     C                     MOVE *BLANK    @@ERCD
     C                     EXSR ZA0840
     C           @@ERCD    IFNE 0                          B5
     C                     MOVEL'PM51307' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVE '1'       *IN38
     C                     MOVE '1'       *IN75
     C                     ELSE                            X5
     C                     MOVE @@ALPH    DDNOUN
     C                     END                             E5
     C                     END                             E4
     C*
     C** WARNING ERROR IF CUSTOMERS IN DIFFERENT                          S01486
     C*                                                                   S01486
     C           WWCNUM    IFNE DDCNUM                                    S01486
     C           DDCNUM    ANDNE*BLANKS                                   S01486
     C                     MOVELDDCNUM    KEYCN                           S01486
     C                     CALL 'AOCUSTR0'                                S01486
     C                     PARM *BLANKS   RTCD                            S01486
     C                     PARM '*KEY   ' OPTN                            S01486
     C                     PARM           KEYCN                           S01486
     C                     PARM *BLANKS   KEYST                           S01486
     C           SDCUST    PARM SDCUST    DSSDY                           S01486
     C*                                                                   S01486
     C           RTCD      IFNE *BLANKS                                   S01486
     C           *LOCK     IN   LDA                                       S01486
     C                     Z-ADD4         DBASE                           S01486
     C                     MOVEL'SDCUSTPD'DBFILE                          S01486
     C                     MOVELDDCNUM    DBKEY                           S01486
     C                     OUT  LDA                                       S01486
     C                     EXSR *PSSR                                     S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C           WWBRCD    IFNE *BLANKS                                   S01486
     C           WWBRCD    IFNE BBBRCD                                    S01486
     C           *IN76     ANDEQ'0'                                       S01486
     C                     MOVEL'PM51313' ZAMSID                          S01486
     C                     EXSR ZASNMS                                    S01486
     C                     SETON                     357675               S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     ELSE                                           S01486
     C                     MOVELBBBRCD    WWBRCD                          S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     MOVELDDCNUM    WWCNUM                          S01486
     C                     END                                            S01486
     C*                                                                   S01486
     C                     Z-ADDRRN2      SFLRRN
     C*
     C** IN AMEND MODE CHECK IF NEW DETAILS ENTERED
     C** AND INCREMENT RECORD COUNTER
     C*
     C                     EXSR #CCA
     C*
     C*
     C                     MOVE '1'       *IN54
     C*
     C           DDCNUM    IFNE *BLANK                     B4
     C           DDACTN    ANDEQ'I'
     C                     MOVELDDCNUM    DDDTTK
     C                     END                             E4
     C*
     C                     UPDATPM5010S1
     C*
     C                     END                             E3
     C*
     C                     END                             E2
     C*
     C** ENTER KEY NOT PRESSSED
     C*
     C                     ELSE                            X1
     C*
     C** COMMAND 10 TAKEN CORRECTLY WHEN ACTION IS D-FORCE 'RECORD ADVANCE'
     C** OTHERWISE,COMMAND 10 TAKEN INCORRECTLY WHEN ACTION IS NOT D - ERROR
     C*
     C           WWAID     IFEQ '10'                       B2
     C*
     C           DDACTN    IFEQ 'D'                        B3
     C                     MOVEL'RA'      WWAID
     C                     ELSE                            X3
     C                     MOVE '1'       *IN75
     C                     MOVEL'PM06301' ZAMSID
     C                     EXSR ZASNMS
     C                     END                             E3
     C*
     C                     END                             E2
     C*
     C                     END                             E1
     C*
     C                     ENDSR                           ** #CC ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CCA S/R TO COUNT RECORDS IN AMEND MODE
      ** CALLED BY #CC
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #CCA      BEGSR                           ** #CCA BSR **
     C*
     C           DDACTN    IFEQ 'A'
     C           DDDTTK    IFEQ *BLANKS
     C           DDCNUM    ANDNE*BLANKS
     C*
     C                     ADD  1         WWZONE
     C*
     C                     END
     C*
     C           DDDTTK    IFNE *BLANKS
     C           DDCNUM    ANDNE*BLANKS
     C*
     C                     SUB  1         WWZONE
     C*
     C                     END
     C*
     C                     END
     C*
     C                     ENDSR                           ** #CCA ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CD S/R TO UPDATE FILE RECORDS
      ** CALLED FROM #C
      ** CALLS: #CDA, #CDB, *PSSR, #CDC
      **
     C*===================================================================
     C*
     C           #CD       BEGSR                           ** #CD BSR **
     C*
     C** U P D A T E   F I L E S
     C*
     C** RETRIEVE NEXT TRANSACTION NUMBER
     C*
     C                     EXSR ZTNLU1
     C*
     C**               I  N  S  E  R  T  S
     C*
     C           DDACTN    IFEQ 'I'
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDD0             83
     C*
     C** RECORD UPDATED BY ANOTHER WORKSTATION
     C*
     C           *IN83     IFEQ '0'
     C           ORTNLU    IFNE WWTNLU
     C                     EXSR #CDB
     C                     GOTO XTUPDF
     C                     END
     C                     END
     C*
     C** TRANSLATE RECORD DETAILS FROM SCREEN LAYOUT TO FILE LAYOUT
     C*
     C                     MOVEL'D'       ORRECI
     C                     Z-ADDBJRDNB    ORLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    ORDLUP
     C                     MOVE WWMLUP    ORMLUP
     C                     Z-ADDWWYLUP    ORYLUP
     C                     TIME           ORTLUP
     C                     MOVEL'I'       ORCHTP
     C                     MOVELNATN      ORTNLU
     C                     MOVELDDPCNU    ORPCNU
     C                     MOVELDDPPTF    ORPPTF
     C                     Z-ADD##PSTD    ORPSTD
     C                     Z-ADD##ITDT    ORPMTD
     C                     MOVE WWINUS    ORINUS
     C                     MOVELDDOPCP    OROPCP
     C                     MOVELDDRANG    ORRANG
     C                     Z-ADD*ZEROS    ORNOUN
     C                     Z-ADD*ZEROS    ORNMMB
     C           *IN83     IFEQ '1'
     C                     WRITEPMPPTDD0               85
     C                     END
     C*
     C** TEST FOR UPDATE BY ANOTHER W/S, OR A TERMINAL ERROR
     C*
     C           *IN85     IFEQ '1'
     C           STATUS    ANDEQ01021
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDD0             85
     C*
     C           *IN85     IFEQ '0'
     C                     EXSR #CDB
     C                     GOTO XTUPDF
     C                     END
     C*
     C                     END
     C*
     C           *IN85     IFEQ '1'
     C                     EXSR *PSSR
     C                     END
     C*
     C           *IN83     IFEQ '0'
     C                     UPDATPMPPTDD0
     C                     END
     C*
     C                     END
     C*
     C**               A  M  E  N  D  S
     C*
     C           DDACTN    IFEQ 'A'
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDD0             83
     C*
     C** RECORD UPDATED BY ANOTHER WORKSTATION
     C*
     C           ORTNLU    IFNE WWTNLU
     C                     EXSR #CDB
     C                     GOTO XTUPDF
     C                     END
     C*
     C** TRANSLATE RECORD DETAILS FROM SCREEN LAYOUT TO FILE LAYOUT
     C*
     C           BJRDNB    IFNE ORLCD
     C                     MOVEL'A'       ORCHTP
     C                     END
     C                     Z-ADDBJRDNB    ORLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    ORDLUP
     C                     MOVE WWMLUP    ORMLUP
     C                     Z-ADDWWYLUP    ORYLUP
     C                     TIME           ORTLUP
     C                     MOVELNATN      ORTNLU
     C                     MOVELDDPCNU    ORPCNU
     C                     Z-ADD##PSTD    ORPSTD
     C                     Z-ADD##ITDT    ORPMTD
     C                     MOVE WWINUS    ORINUS
     C                     MOVELDDOPCP    OROPCP
     C                     MOVELDDRANG    ORRANG
     C           *IN83     IFEQ '0'
     C                     UPDATPMPPTDD0
     C                     END
     C*
     C                     END
     C*
     C**               D  E  L  E  T  E  S
     C*
     C           DDACTN    IFEQ 'D'
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDD0             83
     C*
     C** RECORD UPDATED BY ANOTHER WORKSTATION
     C*
     C           ORTNLU    IFNE WWTNLU
     C                     EXSR #CDB
     C                     GOTO XTUPDF
     C                     END
     C*
     C                     MOVEL'*'       ORRECI
     C                     Z-ADDBJRDNB    ORLCD
     C                     MOVELBJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    ORDLUP
     C                     MOVELWWMLUP    ORMLUP
     C                     Z-ADDWWYLUP    ORYLUP
     C                     TIME           ORTLUP
     C                     MOVEL'D'       ORCHTP
     C                     MOVELNATN      ORTNLU
     C           *IN83     IFEQ '0'
     C                     UPDATPMPPTDD0
     C                     END
     C*
     C                     END
     C** PROCESS DETAILS FILE
     C*
     C                     EXSR #CDC
     C*
     C** GET AUDIT RECORD
     C*
     C***********1         CHAINPMPPTDZZ             73                   S01486
     C           1         CHAINPMPPTDPA             73                   S01486
     C*
     C** UPDATE AUDIT RECORD IF FOUND
     C*
     C           *IN73     IFEQ '0'
     C*
     C** FOR INSERT, UPDATE NO. OF LIVE RECORDS
     C*
     C           DDACTN    IFEQ 'I'
     C                     ADD  1         ORNORE
     C                     END
     C*
     C** FOR DELETIONS, UPDATE NO. OF LIVE RECS
     C*
     C           DDACTN    IFEQ 'D'
     C                     SUB  1         ORNORE
     C                     END
     C*
     C** FORMAT COMIT TEXT
     C*
     C                     TIME           MTIME
     C                     MOVELDDACTN    ACTNX
     C*
     C** UPDATE AUDIT RECORD
     C*
     C                     UPDATPMPPTDZ0
     C*
     C** C  O  M  I  T
     C*
     C           CMTTXT    COMIT
     C*
     C** AUDIT RECORD NOT FOUND: DATABASE ERROR
     C*
     C                     ELSE
     C*
     C           *LOCK     IN   LDA                                       S01486
     C                     Z-ADD2         DBASE            ***************
     C***********          MOVEL'PMPPTDZZ'DBFILE           **DB ERROR 02**S01486
     C                     MOVEL'PMPPTDPA'DBFILE           **DB ERROR 02**S01486
     C                     MOVEL'AUDIT'   DBKEY            ***************
     C                     OUT  LDA                                       S01486
     C                     EXSR *PSSR
     C                     END
     C*
     C           XTUPDF    ENDSR                           ** #CD ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CDA S/R - TO LOCK THE TRANSACTION NUMBER DATA AREA
      ** ACCESS THE NEXT AVAILABLE TRANSACTION NUMBER,
      ** THEN UPDATE AND RELEASE THE DATA AREA.
      ** CALLED FROM #CD
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           ZTNLU1    BEGSR                           ** #CDA ESR ##
     C*
     C           *NAMVAR   DEFN MNATN     DNATN
     C           *LOCK     IN   DNATN
     C                     MOVE FNATN     NATN    50
     C                     MOVE FNATN     ZZWK05  50
     C                     ADD  1         ZZWK05
     C                     MOVE ZZWK05    FNATN
     C                     OUT  DNATN
     C*
     C                     ENDSR                           ** #CDA ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CDB S/R TO PROCESS UPDATE BY ANOTHER WORKSTATION
      ** CALLED FROM #CD
      ** CALLS : ZASNMS - SENDS MESSAGE TO PROGRAM MESSAGE QUEUE.
      **
     C*===================================================================
     C*
     C           #CDB      BEGSR                           ** #CDB BSR **
     C*
     C                     ROLBK
     C                     MOVE '1'       *IN10
     C                     MOVE '0'       *IN11
     C                     MOVE '0'       *IN12
     C                     MOVE '1'       *IN87
     C                     MOVE '1'       *IN75
     C                     MOVEL'PM06302' ZAMSID
     C                     EXSR ZASNMS
     C*
     C                     ENDSR                           ** #CDB ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CDC S/R TO SAVE DETAILS ENTERED
      ** CALLED BY #CD
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #CDC      BEGSR                           ** #CDC BSR **
     C*
     C                     Z-ADD*ZEROS    W1NOUN  70
     C                     Z-ADD*ZEROS    W1NMMB  50
     C*
     C           DDACTN    IFEQ 'I'
     C                     READCPM5010S1                 71
     C*
     C           *IN71     DOWEQ'0'
     C*
     C           DDPCNU    IFNE *BLANK
     C                     MOVE DDNOUN    NNNOUN  70
     C                     EXSR #CDCA
     C                     MOVE 'D'       OSRECI
     C                     MOVELDDPCNU    OSPCNU
     C                     MOVELDDPPTF    OSPPTF
     C                     Z-ADDBJRDNB    OSLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    OSDLUP
     C                     MOVE WWMLUP    OSMLUP
     C                     Z-ADDWWYLUP    OSYLUP
     C                     TIME           OSTLUP
     C                     ADD  1         OSTNLU
     C                     MOVEL'I'       OSCHTP
     C                     MOVELNATN      OSTNLU
     C                     MOVELDDCNUM    OSCNUM
     C                     MOVE DDNOUN    OSNOUN
     C                     MOVE DDPTFR    OSPTFR
     C*
     C           *IN70     IFEQ '0'
     C                     UPDATPMPPTMD0
     C*
     C           NNNOUN    IFGT WWNOUN
     C           NNNOUN    SUB  WWNOUN    W2NOUN  70
     C                     ADD  W2NOUN    W1NOUN
     C                     ELSE
     C           WWNOUN    SUB  NNNOUN    W2NOUN
     C                     SUB  W2NOUN    W1NOUN
     C                     END
     C*
     C                     ELSE
     C           DDCNUM    IFNE *BLANKS
     C                     WRITEPMPPTMD0
     C                     ADD  NNNOUN    W1NOUN
     C                     ADD  1         W1NMMB
     C                     END
     C                     END
     C*
     C                     END
     C*
     C                     READCPM5010S1                 71
     C                     END
     C*
     C                     END
     C*
     C** IF NEW KEY INSERTED WAS A DELETED ONE
     C** DELETE ALL DETAILS RECORDS WITH '*' RECORD-ID
     C*
     C                     MOVEL*BLANKS   WWPCNU
     C                     MOVEL*BLANKS   WWPPTF
     C                     MOVE '0'       *IN70
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    SETLLPMPPTMD0
     C*
     C           *IN70     DOWEQ'0'
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    READEPMPPTMD0                 70
     C*
     C           *IN70     IFEQ '0'
     C*
     C           OSRECI    IFEQ '*'
     C                     DELETPMPPTMD0
     C                     SUB  WWNOUN    W1NOUN
     C                     SUB  1         W1NMMB
     C                     END
     C*
     C                     ELSE
     C                     MOVE '1'       *IN70
     C                     END
     C*
     C                     END
     C*
     C** AMEND
     C*
     C           DDACTN    IFEQ 'A'
     C                     MOVE DDPCNU    OSPCNU
     C                     MOVE DDPPTF    OSPPTF
     C                     READCPM5010S1                 71
     C*
     C           *IN71     DOWEQ'0'
     C*
     C           DDDTTK    IFNE *BLANKS
     C           DDDTTL    ANDNE*BLANKS
     C                     MOVELDDDTTK    WWPCNU
     C                     MOVELDDDTTL    WWPPTF
     C                     ELSE
     C                     MOVE DDCNUM    WWPCNU
     C                     MOVE DDPTFR    WWPPTF
     C                     END
     C*
     C                     MOVE DDNOUN    NNNOUN
     C*
     C* SET UP KEY FOR UPDATE OR WRITE
     C                     MOVE DDPCNU    KPCN
     C                     MOVE DDPPTF    KPPR
     C                     MOVE WWPCNU    KCCN
     C                     MOVE WWPPTF    KCPR
     C*
     C                     Z-ADD*ZEROS    WWNOUN
     C           KEY       CHAINPMPPTMD0             70
     C*
     C           *IN70     IFEQ '0'
     C                     Z-ADDOSNOUN    WWNOUN
     C*
     C           DDCNUM    IFEQ *BLANK
     C           DDPTFR    ANDEQ*BLANK
     C                     DELETPMPPTMD0
     C                     SUB  WWNOUN    W1NOUN
     C                     SUB  1         W1NMMB
     C                     ELSE
     C*
     C           BJRDNB    IFNE OSLCD
     C                     MOVE 'A'       OSCHTP
     C                     END
     C*
     C                     MOVELDDCNUM    OSCNUM
     C                     MOVELDDPTFR    OSPTFR
     C                     MOVELDDNOUN    OSNOUN
     C                     Z-ADDBJRDNB    OSLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    OSDLUP
     C                     MOVE WWMLUP    OSMLUP
     C                     Z-ADDWWYLUP    OSYLUP
     C                     TIME           OSTLUP
     C                     MOVELNATN      OSTNLU
     C                     UPDATPMPPTMD0
     C*
     C           NNNOUN    IFGT WWNOUN
     C           NNNOUN    SUB  WWNOUN    W2NOUN
     C                     ADD  W2NOUN    W1NOUN
     C                     ELSE
     C           WWNOUN    SUB  NNNOUN    W2NOUN
     C                     SUB  W2NOUN    W1NOUN
     C                     END
     C*
     C                     END
     C*
     C                     ELSE
     C*
     C           DDCNUM    IFNE *BLANKS
     C                     MOVE 'D'       OSRECI
     C                     MOVE 'I'       OSCHTP
     C                     Z-ADDBJRDNB    OSLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    OSDLUP
     C                     MOVE WWMLUP    OSMLUP
     C                     Z-ADDWWYLUP    OSYLUP
     C                     TIME           OSTLUP
     C                     MOVELNATN      OSTNLU
     C                     MOVE DDCNUM    OSCNUM
     C                     MOVE DDPTFR    OSPTFR
     C                     MOVELDDNOUN    OSNOUN
     C           DDCNUM    IFNE *BLANKS
     C                     WRITEPMPPTMD0
     C                     ADD  NNNOUN    W1NOUN
     C                     ADD  1         W1NMMB
     C                     END
     C                     END
     C*
     C                     END
     C*
     C                     READCPM5010S1                 71
     C                     END
     C*
     C                     END
     C*
     C** DELETE DETAILS FILE
     C*
     C           DDACTN    IFEQ 'D'
     C                     MOVEL*BLANKS   OSPCNU
     C                     MOVEL*BLANKS   OSPPTF
     C                     MOVEL*BLANKS   OSCNUM
     C                     MOVEL*BLANKS   OSPTFR
     C                     MOVE '0'       *IN72
     C*
     C                     MOVE DDPCNU    KPCN
     C                     MOVE DDPPTF    KPPR
     C                     MOVE WWPCNU    KCCN
     C                     MOVE WWPPTF    KCPR
     C           KEY       SETLLPMPPTMD0
     C*
     C           *IN72     DOWEQ'0'
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C                     Z-ADD*ZEROS    WWNOUN
     C           K1LIST    READEPMPPTMD0                 72
     C*
     C           *IN72     IFEQ '0'
     C                     Z-ADDOSNOUN    WWNOUN
     C                     MOVE '*'       OSRECI
     C                     MOVE 'D'       OSCHTP
     C                     Z-ADDBJRDNB    OSLCD
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    OSDLUP
     C                     MOVE WWMLUP    OSMLUP
     C                     Z-ADDWWYLUP    OSYLUP
     C                     TIME           OSTLUP
     C                     MOVELNATN      OSTNLU
     C                     UPDATPMPPTMD0
     C*
     C           NNNOUN    IFGT WWNOUN
     C           NNNOUN    SUB  WWNOUN    W2NOUN
     C                     ADD  W2NOUN    W1NOUN
     C                     ELSE
     C           WWNOUN    SUB  NNNOUN    W2NOUN
     C                     SUB  W2NOUN    W1NOUN
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C                     END
     C*
     C                     MOVE DDPCNU    K1PCNU
     C                     MOVE DDPPTF    K1PPTF
     C           K1LIST    CHAINPMPPTDD0             88
     C           *IN88     IFEQ '0'
     C                     ADD  W1NOUN    ORNOUN
     C                     ADD  W1NMMB    ORNMMB
     C                     UPDATPMPPTDD0
     C                     END
     C*
     C                     ENDSR                           ** #CDC ESR **
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** #CDCA S/R TO INITIALIZE RECORD ON DETAIL FILE TO OVERWRITE
      ** CALLED FROM #CDC
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           #CDCA     BEGSR                           ** #CDCA BSR **
     C*
     C                     Z-ADD*ZEROS    WWNOUN
     C*
     C                     MOVELDDCNUM    WWPCNU
     C                     MOVELDDPTFR    WWPPTF
     C*
     C* SET UP KEY FOR UPDATE OR WRITE
     C                     MOVE DDPCNU    KPCN
     C                     MOVE DDPPTF    KPPR
     C                     MOVE DDCNUM    KCCN
     C                     MOVE DDPTFR    KCPR
     C           KEY       CHAINPMPPTMD0             70
     C*
     C** IF RECORD IS FOUND INITIALIZE IT TO OVERWRITE
     C*
     C           *IN70     IFEQ '0'
     C                     MOVE *BLANKS   OSRECI
     C**********           Z-ADD*ZEROS    OSPCNU                                              CSD027
     C                     MOVE *BLANKS   OSPCNU                                              CSD027
     C                     MOVE *BLANKS   OSPPTF
     C**********           Z-ADD*ZEROS    OSCNUM                                              CSD027
     C                     MOVE *BLANKS   OSCNUM                                              CSD027
     C                     MOVE *BLANKS   OSPTFR
     C                     Z-ADDOSNOUN    WWNOUN  70
     C                     Z-ADD*ZEROS    OSNOUN
     C                     Z-ADD*ZEROS    OSDLUP
     C                     MOVE *BLANKS   OSMLUP
     C                     Z-ADD*ZEROS    OSYLUP
     C                     MOVE *BLANKS   OSCHTP
     C                     Z-ADD*ZEROS    OSLCD
     C                     Z-ADD*ZEROS    OSTNLU
     C                     END
     C*
     C                     ENDSR                           ** #CDCA ESR **
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C* ZASNMS   - Send message to program message queue              *
     C*                                                               *
     C* CALLS    Y2SNMSGC                                             *
     C*                                                               *
     C* CALLED BY  #CDB   - Processes update by another workstation.  *
     C*            #CC    - Validate detail screen.                   *
     C*            #ZBAB  - Validate key screen.                      *
     C*                                                               *
     C*****************************************************************
     C           ZASNMS    BEGSR
     C*
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGM            Program queue
     C                     PARM           ZAPGRL           Rel queue
     C                     PARM           ZAMSID           Message Id.
     C                     PARM           ZAMSGF           Message file.
     C                     PARM           ZAMSDA           Message data.
     C                     PARM           ZAMSTP           Message type.
     C*
     C** Clear all fields for default mechanism next time.
     C                     MOVEL*BLANK    ZAPGM            Message queue
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
     C*
     C           ZASNM9    ENDSR                           ZASNM9 TAG
     C*===================================================================
     C********************************************************************S01486
     C***********                                                         S01486
     C*****ZDATE1*SR.*TO*VALIDATE*DATES*SUBMITTED*AND*********************S01486
     C***********     CONVERT TO A NUMBER OF DAYS.                        S01486
     C***********                                                         S01486
     C*****THE*YEAR*2000,*BEING*DIVISIBLE*BY*400,*IS*A*LEAP*YEAR.*********S01486
     C***********                                                         S01486
     C***********ZDATE1    BEGSR                           *** ZDATE1 *** S01486
     C***********                                                         S01486
     C*****CLEAR*DAY*NUMBER.*RESET*ERROR*INDICATOR************************S01486
     C***********          Z-ADD0         ZDAYNO  50                      S01486
     C***********          SETOF                     99                   S01486
     C***********                                                         S01486
     C*****CALCULATION*TO*DEFINE*INPUT*DATE*FIELD.************************S01486
     C***********          Z-ADDZDATE     ZDATE   60                      S01486
     C***********                                                         S01486
     C*****GET*INDIVIDUAL*DAY,*MONTH*AND*YEAR*FIELDS.*********************S01486
     C***********          MOVE ZDATE     ZYEAR   20                      S01486
     C**N98******          MOVELZDATE     ZDAY    20                      S01486
     C***98******          MOVELZDATE     ZMTH    20                      S01486
     C***********          MOVE ZDATE     ZWRK4   40                      S01486
     C**N98******          MOVELZWRK4     ZMTH                            S01486
     C***98******          MOVELZWRK4     ZDAY                            S01486
     C***********                                                         S01486
     C*****ENSURE*MONTH*IS*VALID.*BYPASS*IF*ERROR*************************S01486
     C***********ZMTH      IFLE 0                                         S01486
     C***********ZMTH      ORGT 12                                        S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****ENSURE*DAY*IS*VALID.*BYPASS*IF*ERROR***************************S01486
     C***********ZDAY      IFLE 0                                         S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****CHECK*FOR*30*DAY*MONTHS.*BYPASS*IF*ERROR***********************S01486
     C***********ZMTH      IFEQ 4                                         S01486
     C***********ZMTH      OREQ 6                                         S01486
     C***********ZMTH      OREQ 9                                         S01486
     C***********ZMTH      OREQ 11                                        S01486
     C***********                                                         S01486
     C***********ZDAY      IFGT 30                                        S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********          ELSE                                           S01486
     C***********                                                         S01486
     C*****CHECK*FOR*31*DAY*MONTHS*(ALL*OTHERS*BUT*FEB).*BYPASS*IF*ERROR**S01486
     C***********ZDAY      IFGT 31                                        S01486
     C***********ZMTH      ANDNE2                                         S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****CHECK*FOR*LEAP*YEAR:*REMAINDER*WILL*BE*ZERO*IF*IT*IS*A*LEAP*YR*S01486
     C***********ZYEAR     ADD  28        ZYEAR                           S01486
     C***********ZYEAR     DIV  4         ZLYR    20                      S01486
     C***********          MVR            ZLY     10                      S01486
     C***********                                                         S01486
     C*****IF*FEBUARY*FURTHER*VALIDATE*DAY.*******************************S01486
     C***********ZMTH      IFEQ 2                                         S01486
     C***********                                                         S01486
     C*****INVALID*IF*GREATER*THAN*28*AND*NOT*A*LEAP*YEAR*****************S01486
     C***********ZLY       IFGT 0                                         S01486
     C***********ZDAY      ANDGT28                                        S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                     BYPASS IF ERRORS01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****INVALID*IF*GREATER*THAN*29*AND*A*LEAP*YEAR*-*BYPASS*IF*ERROR***S01486
     C***********ZLY       IFEQ 0                                         S01486
     C***********ZDAY      ANDGT29                                        S01486
     C***********          SETON                     99                   S01486
     C***********          GOTO ZDEND1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****DETERMINE*NUMBER*OF*DAYS*FROM*31/12/1971.**********************S01486
     C***********                                                         S01486
     C*****MULTIPLY*NO.*OF*FOUR-YEAR*SPANS,*BY*NO.*OF*DAYS*IN*SPAN********S01486
     C***********ZLYR      MULT 1461      ZDAYNO                          S01486
     C***********                                                         S01486
     C*****IF*NOT*A*LEAP*YEAR,*ADD*APPROPRIATE*NO.*OF*DAYS*FOR*EXTRA******S01486
     C*****YEARS*USING*REMAINDER*FIELD*(IE.*1,*2*OR*3*X*356)**************S01486
     C***********ZLY       IFGT 0                                         S01486
     C***********ZDAYNO    ADD  ZYDY,ZLY  ZDAYNO                          S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****IF*IT*IS*A*LEAP*YEAR,*AND*LATER*THAN*FEBRUARY,*ADD*ONE*FOR*****S01486
     C*****29TH*OF*FEB****************************************************S01486
     C***********ZLY       IFEQ 0                                         S01486
     C***********ZMTH      ANDGT2                                         S01486
     C***********ZDAYNO    ADD  1         ZDAYNO                          S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****ADD*APPROPRIATE*NUMBER*OF*DAYS*FOR*THE*MONTH*NUMBER************S01486
     C***********ZDAYNO    ADD  ZMDY,ZMTH ZDAYNO                          S01486
     C***********                                                         S01486
     C*****ADD*NUMBER*OF*DAYS*IN*MONTH************************************S01486
     C***********ZDAYNO    ADD  ZDAY      ZDAYNO                          S01486
     C***********                                                         S01486
     C***********ZDEND1    ENDSR                           * ZDEND1 ENDSR*S01486
     C***********                                                         S01486
     C***********                                                         S01486
     C********************************************************************S01486
     C********************************************************************S01486
     C***********                                                         S01486
     C*****ZDATE2*SR.*TO*CONVERT*A*DAY*NUMBER*TO*DATE*FORMATS.************S01486
     C***********                                                         S01486
     C*****THE*YEAR*2000,*BEING*DIVISIBLE*BY*400,*IS*A*LEAP*YEAR.*********S01486
     C***********                                                         S01486
     C***********ZDATE2    BEGSR                           *** ZDATE2 *** S01486
     C***********                                                         S01486
     C*****CLEAR*LEAP*YEAR*WORK*FIELD.************************************S01486
     C***********          MOVE 'N'       ZLEAP   1                       S01486
     C***********                                                         S01486
     C*****CLEAR*DATE*FIELDS.*********************************************S01486
     C***********          Z-ADD0         ZDATE   60                      S01486
     C***********          MOVEL'       ' ZADATE  7                       S01486
     C***********                                                         S01486
     C*****CALCULATION*TO*DEFINE*INPUT*DAY*NUMBER.************************S01486
     C***********          Z-ADDZDAYNO    ZDAYNO  50                      S01486
     C***********                                                         S01486
     C*****DETERMINE*YEAR*NUMBER.*****************************************S01486
     C***********                                                         S01486
     C*****ADJUST*DAY*NUMBER*IN*CASE*LAST*DAY*OF*YEAR.********************S01486
     C***********ZDAYNO    SUB  1         ZDAYN1  50                      S01486
     C***********ZDAYN1    IFLT 0                                         S01486
     C***********          GOTO ZDEND2                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****CALCULATE*NUMBER*OF*4*YEAR*SPANS*SINCE*31/12/1971.*************S01486
     C***********ZDAYN1    DIV  1461      ZLYR    20                      S01486
     C***********          MVR            ZDAYN1           SAVE REMAINING S01486
     C***********                                          DAYS           S01486
     C*****CALCULATE*NUMBER*OF*REMAINING*YEARS.***************************S01486
     C***********          Z-ADD1         ZWRK2   20                      S01486
     C***********ZDTAG1    TAG                             ** ZDTAG1 TAG *S01486
     C***********ZDAYN1    IFGE ZYDY,ZWRK2                                S01486
     C***********ZWRK2     ADD  1         ZWRK2                           S01486
     C***********          GOTO ZDTAG1                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********ZWRK2     SUB  1         ZWRK2                           S01486
     C***********                                                         S01486
     C*****DECREMENT*DAY*NO.*BY*DAYS*IN*REMAINING*YEARS.******************S01486
     C***********ZWRK2     IFNE 0                                         S01486
     C***********ZDAYN1    SUB  ZYDY,ZWRK2ZDAYN1                          S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****CALCULATE*ACTUAL*YEAR*NUMBER.**********************************S01486
     C***********ZLYR      MULT 4         ZWRK3   30                      S01486
     C***********ZWRK3     ADD  72        ZWRK3            BASE IS 1972   S01486
     C***********          Z-ADDZWRK3     ZYEAR   20                      S01486
     C***********ZYEAR     ADD  ZWRK2     ZYEAR            YEAR           S01486
     C***********                                                         S01486
     C*****DETERMINE*MONTH*NUMBER.****************************************S01486
     C***********                                                         S01486
     C*****ADJUST*DAY*NO.*IN*CASE*LAST*DAY*OF*LEAP*YEAR*FEBRUARY.*********S01486
     C***********ZWRK2     IFEQ 0                                         S01486
     C***********ZDAYN1    IFEQ 59                                        S01486
     C***********          MOVE 'Y'       ZLEAP                           S01486
     C***********          END                                            S01486
     C***********ZDAYN1    IFGE 59                                        S01486
     C***********ZDAYN1    SUB  1         ZDAYN1                          S01486
     C***********          END                                            S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****CALCULATE*MONTH*NUMBER.****************************************S01486
     C***********          Z-ADD2         ZWRK2                           S01486
     C***********ZDTAG2    TAG                             ** ZDTAG2 TAG *S01486
     C***********ZDAYN1    IFGE ZMDY,ZWRK2                                S01486
     C***********ZWRK2     ADD  1         ZWRK2                           S01486
     C***********          GOTO ZDTAG2                                    S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********ZWRK2     SUB  1         ZWRK2                           S01486
     C***********                                                         S01486
     C***********          Z-ADDZWRK2     ZMTH    20       MONTH          S01486
     C***********                                                         S01486
     C*****DETERMINE*DAY*OF*MONTH.****************************************S01486
     C***********                                                         S01486
     C*****ADD*BACK*LAST*DAY*OF*YEAR*ADJUSTMENT.**************************S01486
     C***********ZDAYN1    ADD  1         ZDAYN1                          S01486
     C***********                                                         S01486
     C*****CALCULATE*DAY*OF*MONTH.****************************************S01486
     C***********ZDAYN1    SUB  ZMDY,ZWRK2ZDAY    20       DAY            S01486
     C***********                                                         S01486
     C*****ADD*BACK*LEAP*YEAR*29TH*FEBUARY*ADJUSTMENT,*IF*REQUIRED.*******S01486
     C***********ZLEAP     IFEQ 'Y'                                       S01486
     C***********ZDAY      ADD  1         ZDAY                            S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C*****FORMAT*DATE,*DDMMYY*OR*MMDDYY.*********************************S01486
     C**N98******          MOVELZDAY      ZWRK4   40                      S01486
     C***98******          MOVE ZDAY      ZWRK4                           S01486
     C**N98******          MOVE ZMTH      ZWRK4                           S01486
     C***98******          MOVELZMTH      ZWRK4                           S01486
     C***********          MOVELZWRK4     ZDATE                           S01486
     C***********          MOVE ZYEAR     ZDATE                           S01486
     C***********                                                         S01486
     C*****FORMAT*ALPHA*DATE,*DDMMMYY.************************************S01486
     C***********          MOVELZDAY      ZWRK5   5                       S01486
     C***********ZDAY      IFLT 10                                        S01486
     C***********          MOVEL' '       ZWRK5                           S01486
     C***********          END                                            S01486
     C***********          MOVE ZMNM,ZMTH ZWRK5                           S01486
     C***********          MOVELZWRK5     ZADATE                          S01486
     C***********          MOVE ZYEAR     ZADATE                          S01486
     C***********                                                         S01486
     C***********ZDEND2    ENDSR                           * ZDEND2 ENDSR*S01486
     C***********                                                         S01486
     C***********                                                         S01486
     C********************************************************************S01486
     C***********                                                        *S01486
     C***ZSEDIT*subroutine*to*insert*a*decimal*point*and*sign*into*a******S01486
     C***numeric*field*and*to*blank*out*leading*zeros*(optionaly**********S01486
     C***inserting*commas).***********************************************S01486
     C*******Input*fields:***ZFLD15*15/0**********************************S01486
     C***********************ZDECS**1/0***********************************S01486
     C***********************ZECODE*1/**('J',*'L'*or*blank)***************S01486
     C***********                                                        *S01486
     C*******Arrays:*********ZS1****15/1/0********************************S01486
     C***********************ZS2****21/1/*********************************S01486
     C***********                                                        *S01486
     C*******Output*fields:**ZOUT21*21************************************S01486
     C***********                                                        *S01486
     C***********ZSEDIT    BEGSR                           **  ZSEDIT   * S01486
     C***********                                                         S01486
     C**Define/Clear*fields***********************************************S01486
     C***********                                                         S01486
     C***********          Z-ADDZFLD15    ZFLD15 150                      S01486
     C***********          Z-ADDZDECS     ZDECS   10                      S01486
     C***********          MOVE ZECODE    ZECODE  1                       S01486
     C***********          MOVE *BLANKS   ZOUT21 21                       S01486
     C***********                                                         S01486
     C********SET*UP*WORK*FIELDS******************************************S01486
     C***********                                                         S01486
     C***********          Z-ADD0         ZS1                             S01486
     C***********          MOVE ' '       ZS2                             S01486
     C***********                                                         S01486
     C***********          Z-ADD15        Z1      20                      S01486
     C***********          Z-ADD20        Z2      20                      S01486
     C***********                                                         S01486
     C***********15        SUB  ZDECS     ZINTS   20                      S01486
     C***********                                                         S01486
     C**Check*if*numeric*field*is*negative********************************S01486
     C***********                                                         S01486
     C***********ZFLD15    IFLT *ZEROS                                    S01486
     C***********          MOVE '-'       ZS2,21                          S01486
     C***********          Z-SUBZFLD15    ZFLD15                          S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********          Z-ADDZFLD15    WORK15                          S01486
     C***********                                                         S01486
     C********CHECK*TO*SEE*IF*THERE*ARE*ANY*DECIMAL*PLACES****************S01486
     C***********                                                         S01486
     C***********ZDECS     CABEQ0         ZS10                            S01486
     C***********                                                         S01486
     C********SET*UP*DECIMALS*********************************************S01486
     C***********                                                         S01486
     C***********          Z-ADD*ZEROS    ZCNT    10                      S01486
     C***********ZCNT      DOUEQZDECS                                     S01486
     C***********          MOVE ZS1,Z1    ZS2,Z2                          S01486
     C***********          SUB  1         Z2                              S01486
     C***********          ADD  1         ZCNT                            S01486
     C***********          SUB  1         Z1                              S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C********PUT*IN*DECIMAL*PLACE****************************************S01486
     C***********                                                         S01486
     C***********          MOVE '.'       ZS2,Z2                          S01486
     C***********          SUB  1         Z2                              S01486
     C***********                                                         S01486
     C***********ZS10      TAG                             ** ZS10 TAG ** S01486
     C***********                                                         S01486
     C********SET*UP*INTEGERS*********************************************S01486
     C***********                                                         S01486
     C***********          Z-ADD*ZEROS    CNT3    10                      S01486
     C***********Z1        DOUEQ*ZEROS                                    S01486
     C***********          MOVE ZS1,Z1    ZS2,Z2                          S01486
     C***********          SUB  1         Z1                              S01486
     C***********          SUB  1         Z2                              S01486
     C***********                                                         S01486
     C**If*edit*code*is*'J',*insert*a*','*before*each*group*of*three******S01486
     C**digits*-*not*if*beginning*of*array*reached.***********************S01486
     C***********                                                         S01486
     C***********Z2        IFGT *ZEROS                                    S01486
     C***********ZECODE    ANDEQ'J'                                       S01486
     C***********          ADD  1         CNT3                            S01486
     C***********CNT3      IFEQ 3                                         S01486
     C***********          MOVE ','       ZS2,Z2                          S01486
     C***********          SUB  1         Z2                              S01486
     C***********          Z-ADD*ZEROS    CNT3                            S01486
     C***********          END                                            S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C********PUT*IN*LEADING*BLANKS***************************************S01486
     C***********                                                         S01486
     C***********          Z-ADD1         Z2                              S01486
     C***********ZS2,Z2    DOWEQ'0'                                       S01486
     C***********ZS2,Z2    OREQ ' '                                       S01486
     C***********ZS2,Z2    OREQ ','                                       S01486
     C***********          MOVE ' '       ZS2,Z2                          S01486
     C***********          ADD  1         Z2                              S01486
     C***********Z2        CABEQ22        ZS20                            S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C********IF*NO*INTEGERS*PUT*IN*LEADING*ZERO**************************S01486
     C***********                                                         S01486
     C***********ZS20      TAG                             ** ZS20 TAG ** S01486
     C***********                                                         S01486
     C***********Z2        IFEQ 22                                        S01486
     C***********          SUB  2         Z2                              S01486
     C***********          MOVE '0'       ZS2,Z2                          S01486
     C***********          ELSE                                           S01486
     C***********                                                         S01486
     C***********ZS2,Z2    IFEQ '.'                                       S01486
     C***********          SUB  1         Z2                              S01486
     C***********          MOVE '0'       ZS2,Z2                          S01486
     C***********          END                                            S01486
     C***********          END                                            S01486
     C***********                                                         S01486
     C********SET*UP*OUTPUT*FIELD*****************************************S01486
     C***********                                                         S01486
     C***********          MOVEAZS2       ZOUT21                          S01486
     C***********                                                         S01486
     C***********          ENDSR                                          S01486
     C*****************************************************************   S01486
     F*****************************************************************
     F*                                                               *
     F*                                                               *
     F*           This subroutine will take as input a 16A field      *
     F*           a 1N number of integers and a 1N number of decimal  *
     F*           places. Ignoring the leading and trailing blanks    *
     F*           it will ensure that the field contains only numeric *
     F*           characters and a decimal point, and that it has no  *
     F*           embedded blanks, or more than one decimal point.    *
     F*           It will also check that the number of figures before*
     F*           and after the decimal point do not exceed the input *
     F*           parameters. The subroutine will output the number as*
     F*           a 16A field and a 15N field, along with an error    *
     F*           code. The alpha field will be right aligned with    *
     F*           the leading zeros blanked, and trailing blanks zero *
     F*           filled. The number returned will be 15 long with 0  *
     F*           decimal places. The error code will contain 0 if    *
     F*           there was no error, 1 if there was a non-numeric    *
     F*           character found, and 2 if the number of decimal     *
     F*           places are wrong.                                   *
     F*                                                               *
     F*  Input  : @@ALPH - 16A field containing the field to validate *
     F*           @@IDP  - number of decimal places                   *
     F*           @@IINT - number of integers                         *
     F*                                                               *
     F*  Output : @@ALPH - 16A field for display                      *
     F*           @@AMT  - 15N field for calculation                  *
     F*           @@ERCD - 1N error code                              *
     F*                                                               *
     F*  Uses   : @F     - array of 16 elements 1 character long      *
     F*           @G     - array of 16 elements 1 character long      *
     F*           @@CADP - calculated number of decimal places        *
     F*           @@CINT - calculated number of integers              *
     F*           @@PIDP - position of dp in input array              *
     F*           @@PODP - position of dp in output array             *
     F*           @@C    - index for array @F                         *
     F*           @@D    - index for array @G                         *
     F*           @@WK7  - workfield used for converting array element*
     F*                    to a 1N number.                            *
     F*           @H     - array containing powers of 10              *
     F*           @@E    - index to array @H                          *
     F*           @@WK5  - work field                                 *
     F*           @@ALP1 - feild used to right align 0 decimal places *
     F*           @@MIEA - maximum input elements allowed             *
     F*           @@FEL  - first integer element of array @F          *
     F*           @@MTF  - millions or thousands (M or T) flag        *
     F*           @@S    - counter                                    *
     F*           @@S1   - number of decimals after the decimal place *
     F*           @@S2   - counter                                    *
     F*           @@MRTS - tests decimal elements for M or T          *
     F*                                                              *
      *****************************************************************
      *
     C           ZA0840    BEGSR
      *
      **   initialize the fields and the arrays
     C                     MOVE '0'       *IN81
     C                     MOVE '0'       *IN82
     C                     Z-ADD0         @@ERCD  10
     C                     Z-ADD0         @@AMT  150
     C                     MOVEA*BLANKS   @G
     C                     MOVEA@@ALPH    @F
     C                     MOVE *BLANKS   @@ALPH 16
     C                     Z-ADD0         @@WK7   10
     C                     Z-ADD0         @@CADP  30
     C                     Z-ADD0         @@CINT  30
     C                     Z-ADD0         @@PIDP  30
     C                     Z-ADD0         @@PODP  30
     C                     Z-ADD0         @@C     20
     C                     Z-ADD0         @@D     20
     C                     Z-ADD0         @@E     20
      *
      **   define the input fields
     C           *LIKE     DEFN @@CADP    @@IDP
     C           *LIKE     DEFN @@CINT    @@IINT
      *
      ** first check that the number input will not produce a number
      ** output with more than 15 figures.
     C           @@IDP     ADD  @@IINT    @@WK2   20
     C           @@WK2     IFGT 15                         B1
     C                     Z-ADD2         @@ERCD           *1
     C                     GOTO ZA0849                     *1
     C                     END                             E1
      *
      ** work through input array, ignoring leading zeros and blanks,
      ** also blanking the leading zeros in the input array.
     C                     MOVE '0'       *IN83
     C                     ADD  1         @@C
     C           @@C       DOWLE16                         B1
     C           *IN83     ANDEQ'0'                        *1
     C           @F,@@C    IFNE ' '                        B*2
     C           @F,@@C    ANDNE'0'                        **2
     C                     MOVE '1'       *IN83            **2
     C                     SUB  1         @@C              **2
     C                     END                             E*2
     C                     ADD  1         @@C              **2
     C                     END                             E1
      *
      ** check the integer part of the number for valid characters.
     C           @@C       DOWLE16                         B1
     C           @F,@@C    ANDNE'.'                        *1
     C           @F,@@C    ANDNE' '                        *1
      *
      ** check for non numeric characters
     C           @F,@@C    IFGT '9'                        B*2
     C           @F,@@C    ORLT '0'                        **2
     C                     Z-ADD0         @@AMT            **2
     C                     Z-ADD1         @@ERCD           **2
     C                     GOTO ZA0849                     **2
      *
     C                     ELSE                            X*2
      *
     C                     ADD  1         @@CINT           **2
      *
      ** check number of integers is not greater than that required
     C           @@CINT    IFGT @@IINT                     B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD2         @@ERCD           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
      ** multiply the output amount by 10 then add the number in
      ** the input array element being processed.
     C           @@AMT     MULT 10        @@AMT            **2
     C                     MOVE @F,@@C    @@WK7            **2
     C           @@AMT     ADD  @@WK7     @@AMT            **2
     C                     END                             E*2
      *
      ** increase array index
     C                     ADD  1         @@C              *1
     C                     END                             E1
      *
      ** set up position of decimal point in input array
     C                     Z-ADD@@C       @@PIDP
      *
      ** if the character pointed to is a decimal point add 1 to the
      ** index
     C           @@C       IFLE 16                         B1
     C           @F,@@C    ANDEQ'.'                        *1
     C                     ADD  1         @@C              *1
     C                     MOVE '1'       *IN82            *1
     C                     END                             E1
      *
      ** now validate the decimal part of the number
     C           @@C       DOWLE16                         B1
      *
      ** if a blank is found set on the blank input indicator
     C           @F,@@C    IFEQ ' '                        B*2
     C                     MOVE '1'       *IN81            **2
     C                     END                             E*2
      *
      ** if the figure is numeric, check that the number of decimal
      ** places does not exceed that specified, and that no blanks
      ** have been entered.
     C           @F,@@C    IFGE '0'                        B*2
     C           @F,@@C    ANDLE'9'                        **2
     C                     ADD  1         @@CADP           **2
      *
     C           @@CADP    IFGT @@IDP                      B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD2         @@ERCD           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
     C           *IN81     IFEQ '1'                        B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD1         @@ERCD           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
      ** update output amount
     C           @@AMT     MULT 10        @@AMT            **2
     C                     MOVE @F,@@C    @@WK7            **2
     C                     ADD  @@WK7     @@AMT            **2
      *
     C                     ELSE                            X*2
      *
      ** if the character is not numeric and not a blank then it is
      ** invalid
     C           @F,@@C    IFNE ' '                        B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD1         @@ERCD           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
     C                     END                             E*2
      *
      ** increase index
     C                     ADD  1         @@C              *1
      *
     C                     END                             E1
      *
      ** correct the output number for any decimal places not input
      ** in the alpha field.
     C           @@IDP     SUB  @@CADP    @@E
      *
      ** increase the index by one to get correct array entry
     C                     ADD  1         @@E
     C           @@AMT     MULT @H,@@E    @@AMT
      *
      ** now format the output alpha field, first calculate where
      ** the decimal point goes
     C           16        SUB  @@IDP     @@PODP
     C           @@PODP    SUB  1         @@PIDP
      *
      ** if there are no decimal points set the position to 17
     C           @@IDP     IFEQ 0                          B1
     C                     Z-ADD17        @@PODP           *1
     C                     END                             E1
      *
      ** move the output number into the input array
     C                     MOVEA*BLANKS   @F
     C                     MOVE @@AMT     @@AMTA 15
     C                     MOVEA@@AMTA    @F
      *
      ** set up indexes
     C                     Z-ADD1         @@C
     C                     Z-ADD1         @@D
     C                     MOVE '0'       *IN80
      *
      ** now fill up the output array
     C           @@D       DOWLE16                         B1
      *
      ** insert decimal point if the position is found
     C           @@D       IFEQ @@PODP                     B*2
     C                     MOVE '.'       @G,@@D           **2
     C                     ADD  1         @@D              **2
     C                     END                             E*2
      *
      ** insert the zero before the decimal point
     C           *IN80     IFEQ '0'                        B*2
     C           @@D       ANDEQ@@PIDP                     **2
     C           @F,@@C    ANDEQ'0'                        **2
     C                     MOVE '1'       *IN80            **2
     C                     MOVE '0'       @G,@@D           **2
     C                     END                             E*2
      *
      ** blank leading zeros
     C           *IN80     IFEQ '0'                        B*2
     C           @F,@@C    ANDEQ'0'                        **2
     C                     MOVE ' '       @G,@@D           **2
     C                     END                             E*2
      *
      ** move a normal character
     C           @F,@@C    IFGE '1'                        B*2
     C           @F,@@C    ANDLE'9'                        **2
     C                     MOVE @F,@@C    @G,@@D           **2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
      *
      ** non blanked zero
     C           @F,@@C    IFEQ '0'                        B*2
     C           *IN80     ANDEQ'1'                        **2
     C                     MOVE '0'       @G,@@D           **2
     C                     END                             E*2
      *
     C                     ADD  1         @@C              *1
     C                     ADD  1         @@D              *1
     C                     END                             E1
      *
      *
      ** put output array into output amount
     C                     MOVEA@G        @@ALPH
      *
      ** align figure with zero decimal places.
     C           @@IDP     IFEQ 0                          B1
     C                     MOVE *BLANKS   @@ALP1 17        *1
     C                     MOVE @@ALPH    @@ALP1           *1
     C                     MOVEL@@ALP1    @@ALPH           *1
     C                     END                             E1
      *
     C           ZA0849    ENDSR                           ZA0849 TAG
      *
     C*
     C*===================================================================
      /EJECT
     C*===================================================================
      **
      ** *PSSR S/R TO HANDLE FILE EXEPTION/ERROR
      ** CALLED FROM #A, #CD
      ** CALLS NO OTHER S/R'S
      **
     C*===================================================================
     C*
     C           *PSSR     BEGSR                           ** *PSSR BSR **
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *INLR
     C*
     C** ROLL BACK CHANGES
     C*
     C                     ROLBK
     C*
     C                     DUMP
     C                     CALL 'DBERRCTL'                                S01486
     C*
     C                     RETRN
     C*
     C                     ENDSR                           ** *PSSR ESR **
     C*
      /EJECT
     C********************************************************************
     C/COPY ZSRSRC,ZDATE1Z2                                               S01486
     C/COPY ZSRSRC,ZDATE2Z2                                               S01486
     C/COPY ZSRSRC,ZSEDITZ3                                               S01486
** array of powers of 10 from 0 to 8
000000000000001
000000000000010
000000000000100
000000000001000
000000000010000
000000000100000
000000001000000
000000010000000
000000100000000
000001000000000
000010000000000
000100000000000
001000000000000
010000000000000
100000000000000
**   ZYDY - YEARS IN DAYS CUMULATIVE, FOUR YEAR SPAN
0366073110961461
**   ZMDY - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
000031059090120151181212243273304334365
**   ZMNM - MONTHS SHORT NAMES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
**  CPY@
(c) Finastra International Limited 2001
