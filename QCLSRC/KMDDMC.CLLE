/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*********************************************************************/
/*                                                                   */
/*       Meridian Replication                                        */
/*                                                                   */
/*       KMDDMC - Prepare for file download                          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*       Last Amend No. MD058809           Date 16Dec21              */
/*       Prev Amend No. 195756             Date 23Jul02              */
/*                      195031             Date 29Jun01              */
/*                      182618             Date 15Aug00              */
/*                      173472   *CREATE   Date 11Jan00              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD058809 - After installation of MQ9 compatibility patch and*/
/*                  restart of the Meridian Replication subsystem    */
/*                  REPMIDASPT, the job MPT1PBSIN ended in MSGW.     */
/*       195756 - If running in batch, do not send error messages to */
/*                a workstation message queue.                       */
/*       195031 - The ENDCMTCTL commands were not monitored          */
/*                completely.                                        */
/*       182618 - Cater for commitment control already being active. */
/*       173472 - Correct the extract of products from X1PF.         */
/*                Program currently extracts using CPYF, which       */
/*                will cause a partial match to be treated as a      */
/*                match (eg PLAT or PL would be equal to PLATO).     */
/*                Solution is to replace the CPYF with OPNQRYF and   */
/*                CPYFRMQRYF.                                        */
/*                                                                   */
/*********************************************************************/
/*                                                                       */
/*-----------------------------------------------------------------------*/
/*          Program Name  - KMDDMC                                       */
/*          Program Title - Download data for a particular product       */
/*          Creation Date - 21/10/1998                                   */
/*    Last Amendment Date -   /  /                                       */
/*-----------------------------------------------------------------------*/
/*  Purpose                                                              */
/*  ~~~~~~~                                                              */
/*  Download data for a particular product.                              */
/*-----------------------------------------------------------------------*/
/*  Change Control                                                       */
/*  ~~~~~~~~~~~~~~                                                       */
/*  Date            Initials      Amendment                              */
/*  ~~~~            ~~~~~~~~      ~~~~~~~~~                              */
/*-----------------------------------------------------------------------*/
             PGM        PARM(&PRODUCT &DEPT &TYPE &TABLES)

             DCL        VAR(&PRODUCT) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DEPT) TYPE(*CHAR) LEN(4)
             DCL        VAR(&TYPE) TYPE(*CHAR) LEN(6)
             DCL        VAR(&TABLES) TYPE(*CHAR) LEN(542)

             DCL        VAR(&DEP) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BASEE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UNIT) TYPE(*CHAR) LEN(3)
             DCL        VAR(&PROPRSP) TYPE(*CHAR) LEN(80)
             DCL        VAR(&RSPL) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&WORKSTN) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NUMRCDS) TYPE(*DEC) LEN(10 0)

             DCL        VAR(&QRYSLT) TYPE(*CHAR) LEN(512) /* Query +
                          selection parameter for OPNQRYF */
                                                                      /*182618*/
             DCL        VAR(&CMTCTLACT) TYPE(*CHAR) LEN(1) VALUE('N') /*182618*/
                                                                      /*195756*/
             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1)              /*195756*/

             DCLF       FILE(X1PF)

             CALL       PGM(KMDLOC) PARM(&BASEE)

             /*  Get environment mnemonic                              */

             CALL       PGM(KMDICI) PARM('INITBO' '   ')
             CALL       PGM(KMDICI) PARM('GETUNIT' &UNIT)

             /*  Delete temp X1PF file    */
             DLTF       FILE(QTEMP/X1PF)
             MONMSG     MSGID(CPF2105)
                                                                      /*195756*/
/************RTVJOBA    JOB(&WORKSTN) **/                             /*195756*/
             RTVJOBA    JOB(&WORKSTN) TYPE(&JOBTYPE)                  /*195756*/

             DLTF       FILE(QTEMP/X4PF)
             MONMSG     MSGID(CPF0000)

             IF         COND(&DEPT *EQ '*ALL') THEN(DO)
                CPYF       FROMFILE(&BASEE/X4PF) TOFILE(QTEMP/X4PF) +
                             CRTFILE(*YES) INCREL((*IF X4PRDN *EQ +
                             &PRODUCT) (*AND X4UNIT *EQ &UNIT))
                ENDDO
             ELSE       CMD(DO)
             CPYF       FROMFILE(&BASEE/X4PF) TOFILE(QTEMP/X4PF) +
                          CRTFILE(*YES) INCREL((*IF X4PRDN *EQ +
                          &PRODUCT) (*AND X4UNIT *EQ &UNIT) (*AND +
                          X4DSMN *EQ &DEPT))
                ENDDO
                                                                      /*195756*/
             RTVMBRD    FILE(QTEMP/X4PF) NBRCURRCD(&NUMRCDS)
/************IF         COND(&NUMRCDS *EQ 0) THEN(DO)                 /*195756*/
/************   SNDBRKMSG  MSG('Combination of product/server and +   /*195756*/
/************                environment is not valid') TOMSGQ(&WORKSTN)195756*/
/************   GOTO       CMDLBL(END)                                /*195756*/
/************   ENDDO                                                 /*195756*/
             IF         COND(&NUMRCDS *EQ 0) THEN(DO)                 /*195756*/
                IF         COND(&JOBTYPE = '1') THEN(DO)              /*195756*/
                   SNDBRKMSG  MSG('Combination of product/server +
                                  and environment is not valid') +
                              TOMSGQ(&WORKSTN)                        /*195756*/
                   GOTO       CMDLBL(END)                             /*195756*/
                ENDDO                                                 /*195756*/
                IF         COND(&JOBTYPE = '0') THEN(DO)              /*195756*/
                   SNDPGMMSG  MSGID(KCM6600) MSGF(KCMMSG) +
                              TOPGMQ(*PRV) MSGTYPE(*ESCAPE)
                ENDDO                                                 /*195756*/
             ENDDO                                                    /*195756*/
             DLTF       FILE(QTEMP/X4PF)
             MONMSG     MSGID(CPF0000)

/*                                                                */  /* 173472 */
/* Use OPNQRYF to extract the data from X1PF, because it handles  */  /* 173472 */
/* *EQ correctly, unlike CPYF, which treats it as LIKE            */  /* 173472 */
                                                                      /* 173472 */
/************CPYF*******FROMFILE(&BASEE/X1PF) TOFILE(QTEMP/X1PF) +*/  /* 173472 */
/***********************  CRTFILE(*YES) INCREL((*IF X1PRDN *EQ +  */  /* 173472 */
/***********************  &PRODUCT))                              */  /* 173472 */
                                                                      /* 173472 */
             OVRDBF     FILE(X1PF) SHARE(*YES)                        /* 173472 */
                                                                      /* 173472 */
             CHGVAR     VAR(&QRYSLT) VALUE(X1PRDN *BCAT '*EQ' *BCAT +
                          '"' *CAT &PRODUCT *CAT '"')                 /* 173472 */
                                                                      /* 173472 */
             OPNQRYF    FILE((&BASEE/X1PF)) QRYSLT(&QRYSLT)           /* 173472 */
                                                                      /* 173472 */
             CPYFRMQRYF FROMOPNID(X1PF) TOFILE(QTEMP/X1PF) +
                          CRTFILE(*YES)                               /* 173472 */
             CLOF       OPNID(X1PF)                                   /* 173472 */
             DLTOVR     FILE(X1PF)                                    /* 173472 */

             OVRDBF     FILE(X1PF) TOFILE(QTEMP/X1PF) +
                          OVRSCOPE(*ACTGRPDFN) SHARE(*NO)
             RCVF
/************MONMSG     MSGID(CPF0864) EXEC(DO)                        *195756*/
/************   SNDBRKMSG  MSG('Product not defined') TOMSGQ(&WORKSTN) *195756*/
/************   GOTO       CMDLBL(END)                                 *195756*/
/************   ENDDO                                                  *195756*/
             MONMSG     MSGID(CPF0864) EXEC(DO)                       /*195756*/
                IF         COND(&JOBTYPE = '1') THEN(DO)              /*195756*/
                   SNDBRKMSG  MSG('Product not defined') +
                              TOMSGQ(&WORKSTN)                        /*195756*/
                   GOTO       CMDLBL(END)                             /*195756*/
                ENDDO                                                 /*195756*/
                IF         COND(&JOBTYPE = '0') THEN(DO)              /*195756*/
                   SNDPGMMSG  MSGID(KCM6601) MSGF(KCMMSG) +
                              TOPGMQ(*PRV) MSGTYPE(*ESCAPE)           /*195756*/
                ENDDO                                                 /*195756*/
             ENDDO                                                    /*195756*/
                                                                      /*195756*/
FLUSH:       RCVF
             MONMSG CPF0000 EXEC(GOTO FILEEND)
             GOTO FLUSH
FILEEND:
             RCLRSC
             DLTOVR     FILE(X1PF)
             DLTF       FILE(QTEMP/X1PF)
                                                                      /*182618*/
/************                                                      */ /*182618*/
/************IF         COND(&X1RREQ *EQ 'Y') THEN(DO)             */ /*182618*/
/************   STRCMTCTL  LCKLVL(*CS) CMTSCOPE(*JOB)              */ /*182618*/
/************CALL       PGM(KMQDMI) PARM(&PRODUCT &DEPT &TYPE &TABLE/ /*182618*/
/************   ENDCMTCTL                                          */ /*182618*/
/************   MONMSG     MSGID(CPF0000) EXEC(DO)                 */ /*182618*/
/************      ROLLBACK                                        */ /*182618*/
/************      ENDCMTCTL                                       */ /*182618*/
/************      ENDDO                                           */ /*182618*/
/************   ENDDO                                              */ /*182618*/
                                                                      /*182618*/
             IF         COND(&X1RREQ *EQ 'Y') THEN(DO)
                                                                      /*182618*/
/*  Start commitment control, monitoring for it already being active  /*182618*/
/*   and noting it it was already active.                             /*182618*/
                STRCMTCTL  LCKLVL(*CS) CMTSCOPE(*JOB)                 /*182618*/
                MONMSG     MSGID(CPF8351) EXEC(DO)                    /*182618*/
                   CHGVAR     VAR(&CMTCTLACT) VALUE('Y')              /*182618*/
                ENDDO                                                 /*182618*/
                                                                      /*182618*/
                CALL       PGM(KMQDMI) PARM(&PRODUCT &DEPT &TYPE +
                                &TABLES)                              /*182618*/
                                                                      /*182618*/
/*  End commitment control if it was started in this routine.         /*182618*/
                IF         COND(&CMTCTLACT = 'N') THEN(DO)            /*182618*/
                   ENDCMTCTL                                          /*182618*/
                   MONMSG     MSGID(CPF8350)                          /*182618*/
                   MONMSG     MSGID(CPF0000) EXEC(DO)                 /*182618*/
                      ROLLBACK                                        /*182618*/
                      ENDCMTCTL                                       /*182618*/
/******************** MONMSG     MSGID(CPF8350)  ********* /*182618*/ /*195031*/
                      MONMSG     MSGID(CPF0000)                       /*195031*/
                   ENDDO                                              /*182618*/
                ENDDO                                                 /*182618*/
                                                                      /*182618*/
             ENDDO                                                    /*182618*/
                                                                      /*182618*/
             IF         COND(&X1RREQ *EQ 'N') THEN(DO)
                ENDDO

             RCLACTGRP  ACTGRP(KCMBASE)
             MONMSG     MSGID(CPF0000)

             RCLRSC
             MONMSG     MSGID(CPF0000)
 END:        ENDPGM
