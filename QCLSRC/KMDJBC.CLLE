/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*********************************************************************/
/*                                                                   */
/*       Meridian Replication                                        */
/*                                                                   */
/*       KMDJBC - Call restart jobs program                          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*       Last Amend No. MD058809           Date 16Dec21              */
/*       Prev Amend No. 188007             Date 08Jan01              */
/*                      188285   *CREATE   Date 04Jan01              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD058809 - After installation of MQ9 compatibility patch and*/
/*                  restart of the Meridian Replication subsystem    */
/*                  REPMIDASPT, the job MPT1PBSIN ended in MSGW.     */
/*       188007 - Stop libraries being removed from list if they     */
/*                were in it before this function was called.        */
/*       188295 - Prevent the program sending end messages if no     */
/*                MDBALAUNCH job is active.                          */
/*                This CL changed to an ILE CL module and a matching */
/*                program source created, to allow for procedure     */
/*                calls to be included here.                         */
/*                Additionally added check for whether job is        */
/*                running in batch or interactive mode, and          */
/*                changed sending of error messages accordingly.     */
/*                                                                   */
/*********************************************************************/
/*                                                                       */
/*-----------------------------------------------------------------------*/
/*          Program Name  - KMDJBC                                       */
/*          Program Title - Call restart jobs program                    */
/*          Creation Date - 21/10/1998                                   */
/*    Last Amendment Date -   /  /                                       */
/*-----------------------------------------------------------------------*/
/*  Purpose                                                              */
/*  ~~~~~~~                                                              */
/*  Initiate a request to restart feeder jobs                            */
/*-----------------------------------------------------------------------*/
/*  Change Control                                                       */
/*  ~~~~~~~~~~~~~~                                                       */
/*  Date            Initials      Amendment                              */
/*  ~~~~            ~~~~~~~~      ~~~~~~~~~                              */
/*-----------------------------------------------------------------------*/
             PGM

             DCL        VAR(&ERR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ADDED) TYPE(*CHAR) LEN(1) VALUE('Y')
             DCL        VAR(&BASEE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SBS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&WORKSTN) TYPE(*CHAR) LEN(10)

             DCL        VAR(&ACTIVE) TYPE(*CHAR) LEN(2) /* Flag to +
                          indicate whether the subsystem or a +
                          launch job is active; this value is +
                          returned from an RPG procedure, so it has +
                          to be declared as two bytes rather than +
                          one, because of an aberration in such +
                          functions. */                               /*188295*/

             DCL        VAR(&USER) TYPE(*CHAR) LEN(10) /* The user +
                          running the job */                          /*188295*/

             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1) /* '0' = +
                          batch, '1' = interactive */                 /*188295*/

             DCL        VAR(&BATCH) TYPE(*CHAR) LEN(1) VALUE('0') /* +
                          "Named constant" for job type of batch */   /*188295*/

             DCL        VAR(&INTER) TYPE(*CHAR) LEN(1) VALUE('1') /* +
                          "Named constant" for job type of interactive *188295*/

             DCL        VAR(&SBSLIBADD) TYPE(*CHAR) LEN(1) +
                          VALUE('Y') /* Flag to indicate whether or +
                          not the subsystem library was added to +
                          the library list. */                        /*188007*/

/*********** RTVJOBA    JOB(&WORKSTN)  ***/                           /*188295*/
             RTVJOBA    JOB(&WORKSTN) USER(&USER) TYPE(&JOBTYPE)      /*188295*/

             RTVDTAARA  DTAARA(KMDBASE) RTNVAR(&BASEE)
             MONMSG     MSGID(CPF0000)
             ADDLIBLE   LIB(&BASEE) POSITION(*LAST)
             MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&ADDED) +
                          VALUE('N'))
             RTVDTAARA  DTAARA(KMDSBS) RTNVAR(&SBS)
             MONMSG     MSGID(CPF0000)
             ADDLIBLE   LIB(&SBS)
/*********** MONMSG     MSGID(CPF0000) ***********/                   /*188007*/
             MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&SBSLIBADD) +
                          VALUE('N'))                                 /*188007*/

/* +
   ------------------------------------------------------------------ +
   Check for the subsystem and MDBALAUNCH jobs being active. +
   ------------------------------------------------------------------ +
*/                                                                    /*188295*/

/* +
   &SBS contains the name of the Replication subsystem. +
   Call a procedure to check whether the subsytem is active. +
*/                                                                    /*188295*/
             CALLPRC    PRC(IsSbsActive) PARM(&SBS) RTNVAL(&ACTIVE)   /*188295*/

/* If it is not active, send a suitable message and end procesing */  /*188295*/
             IF         COND(&ACTIVE = 'N') THEN(DO)                  /*188295*/
                IF         COND(&JOBTYPE = &INTER) THEN(SNDBRKMSG +
                             MSG('Subsystem is not active -- can''t +
                             restart') TOMSGQ(&WORKSTN))              /*188295*/
                ELSE       CMD(SNDMSG MSG('Subsystem is not active -- +
                             can''t restart') TOMSGQ(&USER))          /*188295*/
                GOTO       CMDLBL(ENDING)                             /*188295*/
             ENDDO                                                    /*188295*/

/* If it is active, check whether the launch job is active */         /*188295*/
             IF         COND(&ACTIVE = 'Y') THEN(CALLPRC +
                          PRC(IsLaunchJobActive) PARM(&SBS) +
                          RTNVAL(&ACTIVE))                            /*188295*/

/* If it is not active, send a suitable message and end procesing */  /*188295*/
             IF         COND(&ACTIVE = 'N') THEN(DO)                  /*188295*/
                IF         COND(&JOBTYPE = &INTER) THEN(SNDBRKMSG +
                             MSG('MDBALAUNCH job is not active -- +
                             can''t restart') TOMSGQ(&WORKSTN))       /*188295*/
                ELSE       CMD(SNDMSG MSG('MDBALAUNCH job is not        +
                             active -- can''t restart') TOMSGQ(&USER)) +
                                                                      /*188295*/
                GOTO       CMDLBL(ENDING)                             /*188295*/
             ENDDO                                                    /*188295*/


             CALL       PGM(KMDJSC) PARM('MDBAFEED  ' &ERR)
             IF         COND(&ERR *EQ 'B') THEN(DO)
                SNDBRKMSG  MSG('Launch process is busy') TOMSGQ(&WORKSTN)
                ENDDO
             IF         COND(&ERR *EQ 'T') THEN(DO)
                SNDBRKMSG  MSG('Timed out waiting for response from +
                             launch process') TOMSGQ(&WORKSTN)
                ENDDO

  ENDING:                                                             /*188295*/
/*********** RMVLIBLE   LIB(&SBS) ***********/                        /*188007*/
/*********** MONMSG     MSGID(CPF0000) ******/                        /*188007*/
             IF         COND(&SBSLIBADD = 'Y') THEN(RMVLIBLE +
                          LIB(&SBS))                                  /*188007*/
             IF         COND(&ADDED *EQ 'Y') THEN(DO)
                RMVLIBLE   LIB(&BASEE)
                MONMSG     MSGID(CPF0000)
                ENDDO
             RCLRSC
             MONMSG     MSGID(CPF0000)
 END:        ENDPGM
