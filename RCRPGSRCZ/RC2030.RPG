     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas RC II - Statements Download')
      *****************************************************************
      *                                                               *
      *  Midas - Automatic Reconciliations II module                  *
      *                                                               *
      *  RC2030 - Statement Download                                  *
      *                                                               *
      *  Function:  Download incoming SWIFT statements to PC          *
      *             component. This program is evoked by the remote   *
      *             PC using the PC/support command RMTCMD. The PC    *
      *             should pass its subsystem id as a parameter. This *
      *             program will process all statements for branches  *
      *             linked to the subsystem id.                       *
      *                                                               *
      *  Input Cycle                                                  *
      *                                                               *
      *  Called By: RCC2030 - Statement Download                      *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.02 -----------------------------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 105223             Date 04Jul96               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  105223 - Array index error on line 22600.  There are dup.    *
      *           messages which system unable to trap, treating all  *
      *           these messages as single message (not enough for    *
      *           array DT1 to accomodate).                           *
      *                                                               *
      *****************************************************************
     FSDBRCHL6IF  E           K        DISK
     FRCIXI2L3UF  E           K        DISK
     F                                              KCOMIT
     FMSMSI2LAIF  E           K        DISK
     FRCSINTPDO   E                    DISK
     F                                              KCOMIT
     FRC2030P1O   E             20     PRINTER      KINFDS SPOOLP
      /EJECT
      *****************************************************************
      *                                                               *
      *   Indicator Usage                                             *
      *   ---------------                                             *
      *                                                               *
      *                                                               *
      *   10        EoF SDBRCHL6                                      *
      *   11        EoF RCIXI2L3                                      *
      *   12        EoF MSMSI2LA                                      *
      *                                                               *
      *   15        Work                                              *
      *                                                               *
      *   20        Overflow/RC2030P1                                 *
      *                                                               *
      *   30        Print branch code on headings                     *
      *                                                               *
      *   U7 & U8   Database error                                    *
      *                                                               *
      *****************************************************************
      /EJECT
     E                    TABMM   1  12  2   TABMON  3                 format
     E                    CPY@    1   1 80
      *
     E                    DT1        10256
     E                    DT2      2560  1
      **  Message data arrays
      *
     IMSIXI2D0
     I              BRCA                            @BRCAI
      **  Ensure branch on index record not corrupted
      *
     ISPOOLP      DS
     I                                       83  92 PFILE
     I                                    B 123 1240PFNUM
     I                                    B 367 3680PLINE
      ** Spool file data structure (used for RCF processing)
      *
     ILDA       E DSLDA                         256
      ** LDA for database error reporting
      *
     I            DS
     I                                        1 256 @DRCD
     I                                        1   4 @TAG4
     I                                        1   5 @TAG5
     I                                        4   4 @COL4
     I                                        5   5 @COL5
     I                                        5 256 @DAT4
     I                                        6 256 @DAT5
      **  DS to break up data record
      *
     I            DS
     I                                        1   60MODE
     I                                        1   2 @YY
     I                                        3   4 @MM
     I                                        5   6 @DD
     I            DS
     I                                        1   7 @HADAT
     I                                        1   2 @SD
     I                                        3   5 @SM
     I                                        6   7 @SY
      **  Reformat SWIFT format dates
      *
     IDTDS        DS
     I                                        12560 DT2
      **  Message data
      *
     I@CRLF       DS
     I                                        1   1 @CR
     I                                        2   2 @LF
      **  Carriage Return/Line Feed
      *
     I/COPY WNCPYSRC,RC2030I001
     I            DS
     I                                        1   60@TIMEN
     I                                        1   6 @TIME
     IPSDS       SDS
     I                                      244 253 @JOB
     I                                      254 263 @USER
     I                                      264 269 @NUM
      ** Program Status Data Structure - gives Job name, user and
      ** number
     ISDBANK    E DSSDBANKPD
      **  Data structure for bank details table
     I/COPY WNCPYSRC,RC2030I002
      *
      /EJECT
      *****************************************************************
      *                                                               *
      *   Index to subroutines                                        *
      *   --------------------                                        *
      *                                                               *
      *   INIT      Initial process                                   *
      *   DETL      Process details for branch                        *
      *   *PSSR     Process errors                                    *
      *                                                               *
      *****************************************************************
      /EJECT
      *
      ** Parameter list - PC component subsystem i/d
     C           *ENTRY    PLIST
     C                     PARM           @PCID  10
     C                     PARM           @ERR    1
      *
      ** Execute initial process
     C                     EXSR INIT
      *
      ** Access first branch for this PC component subsystem
     C           @PCID     CHAINSDBRCHL6             10
      *
      ** If no record found output appropriate report format
     C           *IN10     IFEQ '1'
     C                     WRITERC2030F1
     C                     WRITERC2030F3
     C                     ELSE
     C                     SETON                     30
     C                     END
      *
      ** For each branch linked to the PC subsystem, process messages
     C           *IN10     DOWEQ'0'
      *
     C                     EXSR DETL
      *
      ** Read next branch
     C           @PCID     READESDBRCHL6                 10
      *
     C                     ENDDO
      *
      ** Write end-of-report and terminate RPG program (perform
      ** overflow processing if required)
     C           *IN20     IFEQ '1'
     C                     SETOF                     20
     C                     WRITERC2030F1
     C                     ENDIF
     C                     WRITERC2030F8
     C                     SETON                     LR
      /EJECT
      *****************************************************************
      * Subroutine  :  DETL                                           *
      * Function    :  Perform detail processing for branch           *
      *                                                               *
      * Called by   :  Main process                                   *
      * Calls       :                                                 *
      *****************************************************************
      *
     C           DETL      BEGSR
      *
      ** Access first statement for this branch
     C           A8BRCD    CHAINRCIXI2L3             11
      *
      ** If no record found, output appropriate report format
     C           *IN11     IFEQ '1'
     C                     WRITERC2030F1
     C                     WRITERC2030F4
     C                     END
      *
      ** Process all statements
     C           *IN11     DOWEQ'0'
     C/COPY WNCPYSRC,RC2030C003
      *
      ** Write statement heading information
     C                     MOVEL@YY       @SY
     C                     MOVEL@DD       @SD
     C           @MM       LOKUPTABMM     TABMON         50
     C                     MOVELTABMON    @SM
     C           R3DSEQ    ADD  1         @DSEQ
     C                     WRITERC2030F1
     C                     WRITERC2030F5
      *
      ** Access first data record for statement
     C           MOR       CHAINMSMSI2LA             12
      *
      **  If no record found, perform database error processing
     C           *IN12     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE '003'     DBASE            * * * * * * * *
     C                     MOVELMOR       DBKEY            *  DBERR 003  *
     C                     MOVEL'MSMSI2LA'DBFILE           * * * * * * * *
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      **  Read message into array DT1
     C                     CLEARDT1
     C                     Z-ADD1         Q       50
     C           *IN12     DOWEQ'0'
      *                                                                   105223
      **  If "{1:" has been repeated, it's a duplicate message            105223
     C                     MOVELMDTA      WSTRT   3                       105223
     C           WSTRT     IFEQ '{1:'                                     105223
     C           Q         ANDNE1                                         105223
     C                     LEAVE                                          105223
     C                     ENDIF                                          105223
      *                                                                   105223
     C                     MOVE MDTA      DT1,Q
     C                     ADD  1         Q
     C           MOR       READEMSMSI2LA                 12
     C                     ENDDO
      *
      **  Move to array DT2 for processing
     C                     MOVEADT1       DT2
     C/COPY WNCPYSRC,RC2030C004
      *
      **  Find start of message text (block {4:})
     C           '{4:'     SCAN DTDS      Q              15
      *
      **  For all fields/subfields
     C           *IN15     DOUEQ'0'
      *
      **  Extract field/subfield (delimited by CrLf)
     C           @CRLF     SCAN DTDS:Q    Q
     C           Q         ADD  2         S       50
     C           @CRLF     SCAN DTDS:S    Q              15
     C           Q         SUB  S         @LEN    50
      *
      ** If field/subfield found...
     C           *IN15     IFEQ '1'
      *
      ** Extract field details
     C                     CLEAR@DRCD
     C           @LEN      SUBSTDTDS:S    @DRCD
      *
      ** Write to intermediary file
     C                     CLEARR5DATA
     C                     MOVEL@DRCD     R5DATA
     C                     WRITERCSINTD0
      *
      ** Format details for report
     C                     CLEAR@DTAG
     C                     CLEAR@DDAT
     C           @COL5     IFEQ ':'
     C                     MOVEL@TAG5     @DTAG
     C                     MOVEL@DAT5     @DDAT
     C                     ELSE
     C           @COL4     IFEQ ':'
     C                     MOVEL@TAG4     @DTAG
     C                     MOVEL@DAT4     @DDAT
     C                     ELSE
     C                     MOVEL*BLANKS   @DTAG
     C                     MOVEL@DRCD     @DDAT
     C                     ENDIF
     C                     ENDIF
      *
      ** Write to report (perform overflow processing if required)
     C           *IN20     IFEQ '1'
     C                     SETOF                     20
     C                     WRITERC2030F1
     C                     ENDIF
     C                     WRITERC2030F6
      *
     C                     ENDIF
      *
     C                     ENDDO
     C/COPY WNCPYSRC,RC2030C001
      *
      ** Set up download details on index record to prevent this
      ** message being processed again.
     C                     MOVEL'D'       R3RPTS
     C                     MOVELBJRDNB    R3SDAT
     C                     MOVEL@TIME     R3STIM
     C                     ADD  1         R3DSEQ
     C                     MOVELBJRDNB    R3RDAT
     C                     MOVEL@TIME     R3RTIM
     C                     MOVEL@JOB      R3LJOB
     C                     MOVEL@USER     R3LUSR
     C                     MOVEL@NUM      R3LJNO
     C                     UPDATMSIXI2D0
      *
      ** Commit these changes
     C                     COMIT
     C/COPY WNCPYSRC,RC2030C005
      *
      ** Read again (index)
     C           A8BRCD    READERCIXI2L3                 11
      *
     C                     ENDDO
      *
      ** Write End of Report for Branch (perform overflow processing if
      ** required)
     C           *IN20     IFEQ '1'
     C                     SETOF                     20
     C                     WRITERC2030F1
     C                     ENDIF
     C                     WRITERC2030F7
      *
     C                     ENDSR                           DETL
      /EJECT
      *****************************************************************
      * Subroutine  :  INIT                                           *
      * Function    :  Perform initial processing                     *
      *                                                               *
      * Called by   :  Main process                                   *
      * Calls       :  AOBANKR0                                       *
      *****************************************************************
      *
     C           INIT      BEGSR
      *
      ** Initialise object copyright statement
     C                     MOVEACPY@      BIS@   80
      *
      ** Initialise LDA
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C                     MOVE *BLANKS   DBFILE
     C                     MOVE *BLANKS   DBKEY
     C                     MOVEL'RC2030'  DBPGM
     C                     MOVE *BLANKS   DBASE
     C                     OUT  LDA
      *
      ** Access SDBANKPD for bank ICD
     C                     CALL 'AOBANKR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C                     PARM           SDBANK
      *
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVE '001'     DBASE            * * * * * * * *
     C                     MOVEL'FIRST'   DBKEY            *  DBERR 001  *
     C                     MOVEL'SDBANKPD'DBFILE           * * * * * * * *
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      **  Initialise constant fields:
      **   - CarriageReturn
     C                     BITOF'01234567'@CR     1
     C                     BITON'457'     @CR
      **   - LineFeed
     C                     BITOF'01234567'@LF     1
     C                     BITON'257'     @LF
      **   - Report time
     C                     TIME           @TIMEN
     C/COPY WNCPYSRC,RC2030C002
      *
      ** Identify report to RCF and write headings
     C                     CALL 'ZSFILE'
     C                     PARM *BLANKS   @SEQ    5
     C                     PARM *BLANKS   @ENT    3
     C                     PARM PFILE     @SFL   10
     C                     PARM PFNUM     @NMR    60
     C                     PARM *BLANKS   @ZSE    1
      *
     C           @ZSE      IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVE '002'     DBASE            * * * * * * * *
     C                     MOVEL'ERROR'   DBKEY            *  DBERR 002  *
     C                     MOVEL'ZSFILE  'DBFILE           * * * * * * * *
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
     C                     WRITERC2030F1
     C                     WRITERC2030F2
     C/COPY WNCPYSRC,RC2030C006
      *
     C                     ENDSR                           INIT
      /EJECT
      *****************************************************************
      * Subroutine  :  *PSSR                                          *
      * Function    :  Called automatically if a program error occurs *
      *                or directly in case of database errors.        *
      *                This program DUMPs the program just once.      *
      *                                                               *
      * Called by   :  Automatically                                  *
      *                INIT                                           *
      *                                                               *
      * Calls       :  -                                              *
      *****************************************************************
      *
     C           *PSSR     BEGSR
      *
     C           @ERR      IFEQ *BLANK
     C                     MOVE 'Y'       @ERR
      *
      ** Write database error report and DUMP
     C                     WRITERC2030F1
     C                     WRITERC2030F9
     C                     DUMP
     C                     ENDIF
      *
     C                     SETON                     U7U8LR
      *
     C                     RETRN
      *
     C                     ENDSR                           *PSSR
      *
      ********************************************************************
**  Months MM/MMM format
01JAN
02FEB
03MAR
04APR
05MAY
06JUN
07JUL
08AUG
09SEP
10OCT
11NOV
12DEC
**  CPY@
(c) Finastra International Limited 2001
