/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas RE RTS Teller Sign On')                         */
/*********************************************************************/
/*                                                                   */
/*       Midas - Retail Module                                       */
/*                                                                   */
/*       REC004132 - RTS Teller Sign On                              */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2004           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. BUG2560            Date 18May04              */
/*       Prev Amend No. TDA035  *CREATE    Date 01Apr04              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       TDA035 - RTS Signon changes for MidasPlus.                  */
/*                This program can be run with the following param:  */
/*                NOTE: The Auto-SignOn will use the Teller-ID       */
/*                      defined on the user profile (MUSERDD).       */
/*                                                                   */
/*              #1-Old style RE4110          --> ('  ' 'N' 'N' 'N')  */
/*              #2-WEB user/ Manual SignOn   --> ('  ' 'Y' 'Y' 'N')  */
/*              #3-WEB user/ Auto SignOn/                            */
/*                   Display Error message   --> ('  ' 'Y' 'N' 'Y')  */
/*              #4-WEB user/ Auto SignOn/                            */
/*                   No Error message on scr --> ('  ' 'Y' 'N' 'N')  */
/*              #5-WEB user/ Always SignOn/                          */
/*                   No Error message on scr --> ('  ' 'Y' 'A' 'N')  */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       BUG2560- Do not send error msg USR0700 to MOPERQ and MRUNQ. */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PRTCD &PWEBUSR &PSIGNON &PDSPERR)
 
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2004')
 
             DCL        VAR(&PRTCD)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&PWEBUSR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&PSIGNON) TYPE(*CHAR) LEN(1)
             DCL        VAR(&PDSPERR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&PMSGID)  TYPE(*CHAR) LEN(7)
             DCL        VAR(&PUSER)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&PTLID)   TYPE(*CHAR) LEN(3)
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&MSGDTA)  TYPE(*CHAR) LEN(20) VALUE(' ')
             DCL        VAR(&MSG80)   TYPE(*CHAR) LEN(80)
 
/**  Global Monitor Message */
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                          CMDLBL(ABNORMAL))
 
/**  Initialise job switches and fields */
 
             CHGJOB     SWS(XXXXXX00)
             CHGVAR     VAR(&PRTCD) VALUE('       ')
 
/**  Send info to message queue */
 
             IF         COND((&PWEBUSR *NE 'Y') *AND (&PSIGNON *NE 'Y') +
                          *AND (&PDSPERR *NE 'Y')) THEN(DO)
                SNDPGMMSG MSGID(USR0703) MSGF(RTSMSGF) MSGDTA('REC004132ON') +
                          TOMSGQ(MRUNQ)
                GOTO      CMDLBL(TAGSCR)
             ENDDO
 
             IF         COND((&PWEBUSR *EQ 'Y') *AND (&PSIGNON *EQ 'Y')) +
                          THEN(DO)
                SNDPGMMSG MSGID(USR0704) MSGF(RTSMSGF) MSGDTA('REC004132ON') +
                          TOMSGQ(MRUNQ)
                GOTO      CMDLBL(TAGSCR)
             ENDDO
 
             IF         COND((&PWEBUSR *EQ 'Y') *AND (&PSIGNON *EQ 'N') +
                          *AND (&PDSPERR *EQ 'N')) THEN( +
             SNDPGMMSG MSGID(USR0705) MSGF(RTSMSGF) MSGDTA('REC004132ON') +
                          TOMSGQ(MRUNQ))
 
             IF         COND((&PWEBUSR *EQ 'Y') *AND (&PSIGNON *EQ 'N') +
                          *AND (&PDSPERR *EQ 'Y')) THEN( +
             SNDPGMMSG MSGID(USR0706) MSGF(RTSMSGF) MSGDTA('REC004132ON') +
                          TOMSGQ(MRUNQ))
 
             IF         COND((&PWEBUSR *EQ 'Y') *AND (&PSIGNON *EQ 'A') +
                          *AND (&PDSPERR *EQ 'N')) THEN( +
             SNDPGMMSG MSGID(USR0710) MSGF(RTSMSGF) MSGDTA('REC004132ON') +
                          TOMSGQ(MRUNQ))
 
/**  Get the current user profile */
 
             CALL       PGM(SFC000026) PARM(&PUSER)
             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                          CMDLBL(ABNORMAL))
 
/**  End program if the user profile (ZMUSER) has not yet been setup */
 
             IF         COND(&PUSER *EQ '          ') THEN(GOTO +
                          CMDLBL(ENDPGM))
 
/**  Get Teller-ID from current user profile */
 
             CALL       PGM(RE004136) PARM(&PRTCD &PUSER &PTLID &PMSGID)
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                          CMDLBL(ABNORMAL))
 
/**  Display the error message received from program */
 
             IF         COND(&PMSGID *NE '       ') THEN(GOTO +
                          CMDLBL(PROCMSG))
 
/**  Try to allocate xxDPLIB/RTxxx Teller-ID dataarea */
 
             CALL       PGM(REC004151) PARM(&PRTCD &PTLID)
             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                          CMDLBL(ABNORMAL))
 
/**  Teller-ID is already signed on to another workstation        */
 
             IF         COND(&PRTCD *EQ '*NO_ALC') THEN(DO)
 
                CHGVAR     VAR(&PMSGID) VALUE('USR0702')
                CHGVAR     VAR(&MSGDTA) VALUE(&PTLID *CAT &PUSER)
 
/**  Continue signon when value of &PSIGNON = 'A' (Always Signon) */
 
                IF         COND(&PSIGNON *NE 'A') THEN(GOTO +
                             CMDLBL(PROCMSG))
             ENDDO
 
/**  Setup the dataarea RTSDTA and TTRNTM2 based from the Teller-ID */
 
             CALL       PGM(REC004134) PARM(&PRTCD 'ON ' &PTLID)
             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                          CMDLBL(ABNORMAL))
 
/**  Send message that the teller has signed on successfully */
 
             CHGVAR     VAR(&MSG80) VALUE('REC004132 - The +
                          Teller-ID' *BCAT &PTLID *BCAT 'has signed +
                          on successfully.')
             SNDPGMMSG  MSG(&MSG80) TOMSGQ(MRUNQ)
             GOTO       CMDLBL(ENDPGM)
 
/**  Call the old RTS Sign On program */
 
TAGSCR:
             CALL       PGM(REC4130) PARM(&PRTCD &PWEBUSR)
             IF         COND(%SWITCH(XXXXXX11)) THEN(GOTO +
                          CMDLBL(ABNORMAL))
 
             GOTO       CMDLBL(ENDPGM)
 
PROCMSG:
             CHGVAR     VAR(&PRTCD) VALUE('*ERROR')
 
/** Setup error message */
 
             CHGVAR     VAR(&MSGDTA) VALUE(&PTLID *CAT &PUSER)
             RTVMSG     MSGID(&PMSGID) MSGF(RTSMSGF) MSGDTA(&MSGDTA) MSG(&MSG80)
 
             CHGVAR     VAR(&MESSAGE) VALUE(&MSG80)
             IF         COND(&PMSGID *NE 'USR0700') THEN(DO)                             /*BUG2560*/
             SNDPGMMSG  MSG('REC004132 -' *BCAT &MSG80) TOMSGQ(MRUNQ MOPERQ)
             ENDDO                                                                       /*BUG2560*/
 
/** Exit if not to display error message on screen */
 
             IF         COND((&PSIGNON *EQ 'Y') *OR (&PDSPERR *EQ 'N')) +
                          THEN(GOTO CMDLBL(ENDPGM))
 
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE('TELLER SIGN ON')
             CHGDTAARA  DTAARA(MIDASMSG (251 50)) VALUE(&MESSAGE)
 
/** Teller-ID not defined on user profile */
 
             IF         COND(&PMSGID *EQ 'USR0701') THEN(DO)
 
             RTVMSG     MSGID(USR0707) MSGF(RTSMSGF) MSGDTA(&MSGDTA) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (251 50)) VALUE(&MESSAGE)
 
             RTVMSG     MSGID(USR0708) MSGF(RTSMSGF) MSGDTA(&MSGDTA) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (301 50)) VALUE(&MESSAGE)
 
             ENDDO
 
/** Teller-ID signed on to another workstation */
 
             IF         COND(&PMSGID *EQ 'USR0702') THEN(DO)
 
             RTVMSG     MSGID(USR0707) MSGF(RTSMSGF) MSGDTA(&MSGDTA) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (251 50)) VALUE(&MESSAGE)
 
             RTVMSG     MSGID(USR0709) MSGF(RTSMSGF) MSGDTA(&MSGDTA) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (301 50)) VALUE(&MESSAGE)
 
             ENDDO
 
             CALL       PGM(SCC0010) PARM('REC004132' 'ENTER' ' ')
 
             GOTO       CMDLBL(ENDPGM)
 
ABNORMAL:
             CHGVAR     VAR(&PRTCD) VALUE('*ABNOR')
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          REC004132 ended abnormally - see job +
                          log') TOMSGQ(MRUNQ MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             DMPCLPGM
             MONMSG     MSGID(CPF0000 MCH0000)
 
ENDPGM:
             CHGVAR     VAR(&CPYFLD) VALUE('(c) Misys International +
                          Banking Systems Ltd.')
             ENDPGM
 
