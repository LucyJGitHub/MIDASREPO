/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas RE Shadow Post Update Start TS')                */
/*********************************************************************/
/*                                                                   */
/*       Midas - Midas Retail                                        */
/*                                                                   */
/*       REC0672T1 - Midas RE Shadow post update Start TS            */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. CSC056  *CREATE    Date 06Aug12              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CSC056 - COB Restructure - SC COB Optimisation Phase 1      */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ)
 
             DCL        VAR(&CNAME) TYPE(*CHAR) LEN(10) +
                           VALUE('REC0672   ')
             DCL        VAR(&DRIVERFL) TYPE(*CHAR) LEN(10) +
                           VALUE(RESPODPD)
             DCL        VAR(&INDEXFL) TYPE(*CHAR) LEN(10) +
                           VALUE(RESPOIPD)
             DCL        VAR(&CONTROLFL) TYPE(*CHAR) LEN(10) +
                           VALUE(RESPOCPD)
             DCL        VAR(&AUDITFL) TYPE(*CHAR) LEN(10) +
                           VALUE(RESPOAPD)
             DCL        VAR(&NAME1) TYPE(*CHAR) LEN(5) VALUE('SHPOS')
             DCL        VAR(&RCVDTAQ) TYPE(*CHAR) LEN(10) +
                           VALUE('RESPOSSVDQ')
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&ANWD) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DTAQLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MEMBER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NAME2_C) TYPE(*CHAR) LEN(5) VALUE('00001')
             DCL        VAR(&NAME2_N) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&LOOP) TYPE(*DEC) LEN(3 0) VALUE(1)
             DCL        VAR(&CURRCD) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&DLTRCD) TYPE(*DEC) LEN(10 0)
 
             DCLF       FILE(CBCMPNLC)
 
             COPYRIGHT  TEXT('(c) Finastra International Limited +
                           2012')
 
/* Global monitor message. */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                           CMDLBL(ABNOR))
 
/* Send message to MRUNQ. */
 
             SNDPGMMSG  MSG(&CNAM *TCAT '- Midas RE Shadow post +
                           update - Start Task Split') TOMSGQ(MRUNQ)
 
/* Determine full DTAQLIB library name. */
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(&DTAQLIB) VALUE(&SYSID *CAT 'DPLIB')
 
/* Clear index, control, and audit file. */
 
             CLRPFM     FILE(&INDEXFL)
             CLRPFM     FILE(&CONTROLFL)
             CLRPFM     FILE(&AUDITFL)
 
/* Remove all members from driving file and output files. */
 
             RMVM       FILE(&DRIVERFL) MBR(*ALL)
             MONMSG     MSGID(CPF7301 CPF7303)
 
             RMVM       FILE(GLACCMPD) MBR(*ALL)
             MONMSG     MSGID(CPF7303 CPF7301)
 
             RMVM       FILE(REMEMOPD) MBR(*ALL)
             MONMSG     MSGID(CPF7303 CPF7301)
 
             RMVM       FILE(REOUTCPD) MBR(*ALL)
             MONMSG     MSGID(CPF7303 CPF7301)
 
/* Clear main data queue. */
 
             CALL       PGM(QCLRDTAQ) PARM(&RCVDTAQ  '*LIBL')
 
/* Retrieve number of sub-tasks. */
 
CHAIN:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(ABNOR))
 
             CHGVAR     VAR(&NAME2_N) VALUE(&DHCSEQ)
             IF         COND((&DHCOTT *NE &CNAME) *OR (&NAME2_N *NE +
                           &CSEQ)) THEN(DO)
                GOTO       CMDLBL(CHAIN)
             ENDDO
 
/* Add all members and create data queues. */
 
             CHGVAR     VAR(&NAME2_C) VALUE(&DHCSEQ)
LOOP:
             IF         COND(&LOOP *GT &DHTSNO) THEN(DO)
                GOTO       CMDLBL(ENDLOOP)
             ENDDO
 
             CHGVAR     VAR(&MEMBER) VALUE(&NAME1 *CAT &NAME2_C)
             ADDPFM     FILE(&DRIVERFL) MBR(&MEMBER)
             ADDPFM     FILE(GLACCMPD) MBR(&MEMBER)
             ADDPFM     FILE(REMEMOPD) MBR(&MEMBER)
             ADDPFM     FILE(REOUTCPD) MBR(&MEMBER)
 
/* Create data queue if it doesn't already exist and set           */
/* authorities.                                                    */
 
             CHKOBJ     OBJ(&DTAQLIB/&MEMBER) OBJTYPE(*DTAQ)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CRTDTAQ    DTAQ(&DTAQLIB/&MEMBER) MAXLEN(50)
             ENDDO
             CALL       PGM(QCLRDTAQ) PARM(&MEMBER &DTAQLIB)
 
             IF         COND(&LOOP *EQ 1) THEN(DO)
                   CHGVAR     VAR(&NAME2_N) VALUE(01000)
                   CHGVAR     VAR(&NAME2_N) VALUE(&NAME2_N * &CSEQ)
             ENDDO
 
             CHGVAR     VAR(&LOOP) VALUE(&LOOP + 1)
             CHGVAR     VAR(&NAME2_N) VALUE(&NAME2_N + 1)
             CHGVAR     VAR(&NAME2_C) VALUE(&NAME2_N)
             GOTO       CMDLBL(LOOP)
 
ENDLOOP:
 
/* Retrieve the current number of records to be processed */
 
             RTVMBRD    FILE(ACCNTAB) NBRCURRCD(&CURRCD) +
                           NBRDLTRCD(&DLTRCD)
             CHGVAR     VAR(&CURRCD) VALUE(&CURRCD + &DLTRCD)
             CALL       PGM(RE0672T1) PARM(&DHTSNO &CURRCD)
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ABNOR)
             ENDDO
 
             GOTO       CMDLBL(END)
ABNOR:
             SNDPGMMSG  MSG('Program ' *BCAT &CNAM *TCAT +
                           ' ended abnormally') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
 
END:
             ENDPGM
