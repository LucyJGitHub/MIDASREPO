/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas RE COB Zero Balancing/Sweeping & Group A/C')    */
/*********************************************************************/
/*                                                                   */
/*       Midas - Retail module                                       */
/*                                                                   */
/*       REC100816 - COB Zero Balancing/Sweeping                     */
/*                   & Group A/C Replication                         */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. LUC140               Date 03Mar21            */
/*       Prev Amend No. AR1001994            Date 06Aug12            */
/*                      MD046248             Date 27Oct17            */
/*                      260134               Date 01May09            */
/*                      BUG27417A          Date 19May10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/*                      CAP204               Date 03Mar10            */
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      217570             Date 12May03              */
/*                      CRE008 *CREATE       Date 19Feb02            */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       LUC140 - Upgrade MMI013 to FM2.1                            */
/*                (MMI013 - Midas Italy RE Stamp Duty and Account)   */
/*                Addition of hook LUC140_002                        */
/*                Addition of hook LUC140_003                        */
/*                Addition of hook LUC140_009                        */
/*    AR1001994 - Duplication of entries on cash management on ANWD  */
/*                processing. Override ACPO1 to ACPO5.               */
/*                (Child:AR1001996)                                  */
/*       MD046248 - Finastra Rebranding                              */
/*       260134 - Upgrade recovery to Midas Plus standard            */
/*       BUG27417A - Initialise merged posting files before merging. */
/*       CAP204 - Retail Account Transfer                            */
/*       217570 - Postings output on wrong file if '5' or '5PC'      */
/*       CRE008 - Cash Management                                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&CNAM &CSEQ &MODE)

             DCL        VAR(&CNAM)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&CSEQ)   TYPE(*DEC)  LEN(5 0)
             DCL        VAR(&MODE)   TYPE(*CHAR) LEN(3)

             DCL        VAR(&MEM)    TYPE(*CHAR) LEN(70)
             DCL        VAR(&CMXMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JRNID) TYPE(*CHAR) LEN(10) +
                          VALUE('JREC100816')
             DCL        VAR(&FILE01) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE02) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE03) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE04) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE05) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE06) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE07) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE08) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE09) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE10) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERROR)  TYPE(*CHAR) LEN(1)
             DCL        VAR(&STAT)   TYPE(*CHAR) LEN(1)
             DCL        VAR(&CSEQA) TYPE(*CHAR) LEN(5)                                    /*260134*/
             DCL        VAR(&STEXT) TYPE(*CHAR) LEN(50)                                   /*260134*/

/*/COPY WNCPYSRC,LUC140_002                 */                                            /*LUC140*/

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')

/* Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             CHGJOB     SWS(00000000)

             SNDPGMMSG  MSG('REC100816 - COB Zero Balancing/Sweeping +
                          & Group A/C Replication') TOMSGQ(MRUNQ)

/*                                                                                        /*260134*/
/* Write current journal sequence number to file SCJSEQPD, using command SCWRTJREG.       /*260134*/
/*                                                                                        /*260134*/
             CHGVAR     VAR(&CSEQA) VALUE(&CSEQ)                                          /*260134*/
             CHGVAR     VAR(&STEXT) VALUE('Start of ' *CAT &CNAM +
                          *CAT &CSEQA)                                                    /*260134*/
             SCWRTJREG  COMP(&CNAM) CMPSEQ(&CSEQ) FLAG('S') +
                          TEXT(&STEXT)                                                    /*260134*/
             CHGVAR     VAR(&CMXMBR) VALUE('M' *CAT &MODE)

/* Files updated */

             CHGVAR     VAR(&FILE01) VALUE('GECXPD')
             IF         COND(&MODE = '5  ' *OR &MODE = '5PC') +
             THEN(CHGVAR     VAR(&FILE01) VALUE('GECX2PD'))                               /*217570*/
             CHGVAR     VAR(&FILE02) VALUE('GLAPSTGA')
             CHGVAR     VAR(&FILE03) VALUE('GLAPSTZS')
             CHGVAR     VAR(&FILE04) VALUE('RECMHLPD')
             CHGVAR     VAR(&FILE05) VALUE('REZSHLPD')
             CHGVAR     VAR(&FILE06) VALUE('RECMEXPD')
/*/COPY WNCPYSRC,REC1008161                                          */

/* If restart */
/* Component Journalling End */

             CHGVAR     VAR(&STAT) VALUE(' ')
             CALL       PGM(CB0160) PARM(&CNAM &CSEQ &STAT)
             IF         COND(&STAT *EQ 'Y') THEN(DO)
/**********     CALL       PGM(REC100999) PARM(&JRNID 'Y' 'P' &FILE01 +
                             &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                             &FILE07 &FILE08 &FILE09 &FILE10 &ERROR)   */                 /*260134*/
             CALL       PGM(REC100999) PARM(&JRNID 'Y' 'P' &FILE01 +
                          &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                          &FILE07 &FILE08 &FILE09 &FILE10 &ERROR +
                          &CNAM &CSEQ)                                                    /*260134*/
                IF         COND(&ERROR = 'Y') THEN(GOTO CMDLBL(ABNOR))
             ENDDO

/* Component Journalling Start */

             CALL       PGM(REC100998) PARM(&JRNID &FILE01 &FILE02 +
                          &FILE03 &FILE04 &FILE05 &FILE06 &FILE07 +
                          &FILE08 &FILE09 &FILE10 &ERROR)
             IF         COND(&ERROR = 'Y') THEN(GOTO CMDLBL(ABNOR))

/* Flag as run */
             CHGVAR     VAR(&STAT) VALUE('Y')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)

/* Start commitment control */

             STRCMTCTL  LCKLVL(*CHG) CMTSCOPE(*JOB)
             MONMSG     MSGID(CPF0000)

/* Clear files */

             CLRPFM     FILE(RECMEXPD) MBR(&CMXMBR)

/** Merge all postings from ACPO1 and GLACPOL0 to single file GLACPML0 */                 /*CAP204*/
                                                                                          /*CAP204*/
             CLRPFM     FILE(GLACPMPD)                                                 /*BUG27417A*/
             CLRPFM     FILE(GLACRMPD)                                                 /*BUG27417A*/
             CPYF       FROMFILE(ACPO1) TOFILE(GLACPMPD) +
                          MBROPT(*REPLACE) RCDFMT(APOSTPDF)                               /*CAP204*/
             MONMSG    (CPF2817) CMPDTA(CPF2869)                                          /*CAP204*/
                                                                                          /*CAP204*/

/*/COPY WNCPYSRC,LUC140_003                 */                                            /*LUC140*/
             CPYF       FROMFILE(GLACPOL0) TOFILE(GLACPMPD) +
                          MBROPT(*ADD) RCDFMT(APOSTPDF)                                   /*CAP204*/
             MONMSG    (CPF2817) CMPDTA(CPF2869)                                          /*CAP204*/

/*/COPY WNCPYSRC,LUC140_009                 */                                            /*LUC140*/
                                                                                          /*CAP204*/
             CPYF       FROMFILE(ACPO1) TOFILE(GLACRMPD) +
                          MBROPT(*REPLACE) RCDFMT(APOSTRAF)                               /*CAP204*/
             MONMSG    (CPF2817) CMPDTA(CPF2869)                                          /*CAP204*/
                                                                                          /*CAP204*/
/* Overrides */

             IF         COND(&MODE = 'ASC') THEN(DO)
                OVRDBF     FILE(RECMHDL3) TOFILE(RECMHDL4)
/**********     OVRDBF     FILE(ACPO1) TOFILE(GECXL4)                          */         /*CAP204*/
/**********     OVRDBF     FILE(GLACPML0) TOFILE(GECXL4)             */         /*CAP204 AR1001994*/
                OVRDBF     FILE(ACPO1) TOFILE(GECXL4)                                  /*AR1001994*/
             ENDDO
             IF         COND(&MODE = '5  ' *OR &MODE = '5PC') THEN(DO)
/**********     OVRDBF     FILE(ACPO1) TOFILE(ACPO5)                           */         /*CAP204*/
/**********     OVRDBF     FILE(GLACPML0) TOFILE(ACPO5)              */         /*CAP204 AR1001994*/
                OVRDBF     FILE(ACPO1) TOFILE(ACPO5)                                   /*AR1001994*/
                OVRDBF     FILE(GECXPD) TOFILE(GECX2PD) SEQONLY(*YES 100)                 /*217570*/
             ENDDO

             OVRDBF     FILE(RECMEXPD) MBR(&CMXMBR)

             OVRDBF     FILE(GLAPNAPD) SHARE(*NO)

             IF         COND(&MODE *NE '5  ' *AND &MODE *NE '5PC') THEN(DO)               /*217570*/
                OVRDBF     FILE(GECXPD) SEQONLY(*YES 100)
             ENDDO                                                                        /*217570*/
             OVRDBF     FILE(GLAPSTGA) SEQONLY(*YES 100)
             OVRDBF     FILE(GLAPSTZS) SEQONLY(*YES 100)

/* COB Zero Balancing/Sweeping & Group A/C Replication */
/*=====================================================*/

             CALL       PGM(RE100713) PARM(&MODE)

/* Abnormal ending: */

             IF         COND(%SWITCH(XXXXXXX1)) THEN(DO)
                GOTO       CMDLBL(ABNOR)
             ENDDO

             RCLACTGRP  ACTGRP(*ELIGIBLE)

/* Normal ending: */
/*================*/

NORMAL:
/* End commitment control */
             ENDCMTCTL

/* Component Journalling End */

/**********  CALL       PGM(REC100999) PARM(&JRNID 'N' ' ' &FILE01 +
                          &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                          &FILE07 &FILE08 &FILE09 &FILE10 &ERROR)      */                 /*260134*/
             CALL       PGM(REC100999) PARM(&JRNID 'N' ' ' &FILE01 +
                          &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                          &FILE07 &FILE08 &FILE09 &FILE10 &ERROR +
                          &CNAM &CSEQ)                                                    /*260134*/
             IF         COND(&ERROR = 'Y') THEN(GOTO CMDLBL(ABNOR))

/* Flag as completed */
             CHGVAR     VAR(&STAT) VALUE('N')
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)
/*                                                                                        /*260134*/
/* Write current journal sequence number to file SCJSEQPD, using command SCWRTJREG.       /*260134*/
/*                                                                                        /*260134*/
             CHGVAR     VAR(&STEXT) VALUE(' ')                                            /*260134*/
             CHGVAR     VAR(&STEXT) VALUE('End of ' *CAT &CNAM +
                          *CAT &CSEQA)                                                    /*260134*/
             SCWRTJREG  COMP(&CNAM) CMPSEQ(&CSEQ) FLAG('E') +
                          TEXT(&STEXT)                                                    /*260134*/

             GOTO       CMDLBL(ENDPGM)

/* Abnormal ending: */
/*==================*/

ABNOR:
             ROLLBACK
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

             CHGJOB     SWS(XXXXXX11)

             RCLACTGRP  ACTGRP(*ELIGIBLE)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)


/* End commitment control */

             ENDCMTCTL
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

/* Component Journalling End */

/**********  CALL       PGM(REC100999) PARM(&JRNID 'Y' 'C' &FILE01 +
                          &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                          &FILE07 &FILE08 &FILE09 &FILE10 &ERROR)      */                 /*260134*/
             CALL       PGM(REC100999) PARM(&JRNID 'Y' 'C' &FILE01 +
                          &FILE02 &FILE03 &FILE04 &FILE05 &FILE06 +
                          &FILE07 &FILE08 &FILE09 &FILE10 &ERROR +
                          &CNAM &CSEQ)                                                    /*260134*/
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
             IF         COND(&ERROR *NE 'Y') THEN(DO)                                     /*260134*/
/* Flag as completed                                                                      /*260134*/
             CHGVAR     VAR(&STAT) VALUE('N')                                             /*260134*/
             CALL       PGM(CB0150) PARM(&CNAM &CSEQ &STAT)                               /*260134*/
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)                                    /*260134*/
                                                                                          /*260134*/
/*                                                                                        /*260134*/
/* Write current journal sequence number to file SCJSEQPD, using command SCWRTJREG.       /*260134*/
/*                                                                                        /*260134*/
             CHGVAR     VAR(&STEXT) VALUE(' ')                                            /*260134*/
             CHGVAR     VAR(&STEXT) VALUE('End of ' *CAT &CNAM +
                          *CAT &CSEQA)                                                    /*260134*/
             SCWRTJREG  COMP(&CNAM) CMPSEQ(&CSEQ) FLAG('E') +
                          TEXT(&STEXT)                                                    /*260134*/
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)                                    /*260134*/
             ENDDO                                                                        /*260134*/

/* Report an error */

             CHGVAR     VAR(&MEM) VALUE('REC100816 - COB Zero +
                          Balancing/Sweeping & Group A/c +
                          Replication FAILED')
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

             SNDPGMMSG  MSGID(MEM5052) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

ENDPGM:
             ENDPGM
