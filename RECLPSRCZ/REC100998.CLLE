/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas RE CM COB Component Journalling Start')         */
/*********************************************************************/
/*                                                                   */
/*       Midas - Retail module                                       */
/*                                                                   */
/*       REC100998 - CM COB Component Journalling Start              */
/*                                                                   */
/*       (c) Finastra International Limited 2002                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. BG18886            Date 28May08              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CRE008 *C *CREATE  Date 19Feb02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       BG18886 - Amend non-standard codes.                         */
/*       CRE008 - Cash Management                                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&JRNID &FILE01 &FILE02 &FILE03 &FILE04 +
                          &FILE05 &FILE06 &FILE07 &FILE08 &FILE09 +
                          &FILE10 &ERROR)
 
             DCL        VAR(&JRNID)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE01) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE02) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE03) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE04) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE05) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE06) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE07) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE08) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE09) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE10) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERROR)  TYPE(*CHAR) LEN(1)
 
             DCL        VAR(&CCB009) TYPE(*CHAR) LEN(7)
             DCL        VAR(&AOFMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&MEM)    TYPE(*CHAR) LEN(70)
             DCL        VAR(&PRE)    TYPE(*CHAR) LEN(2)
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)
             DCL        VAR(&JLIB)   TYPE(*CHAR) LEN(6)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Check if CCB009 is 'on' (close of business journaling) */
/* If so, nothing further need be done */
 
             CALL       PGM(AOSARDR0) PARM(&CCB009 '*VERIFY' +
                          'CCB009' &AOFMT)
             IF         COND(&CCB009 = '       ') THEN(DO)
                GOTO       CMDLBL(NORMAL)
             ENDDO
 
/* Determine journal library */
 
             RTVDTAARA  DTAARA(SDSTAT *ALL) RTNVAR(&SDSTAT)
             CHGVAR     VAR(&PRE) VALUE(%SST(&SDSTAT 6 2))
             CHGVAR     VAR(&JLIB) VALUE(&PRE *TCAT 'JLIB')
 
/* End journalling to journal */
 
             ENDJRNPF   FILE(*ALL) JRN(&JRNID)
             MONMSG     MSGID(CPF0000)
 
/* Delete the journals and receivers */
 
             DLTJRN     JRN(&JRNID)
             MONMSG     MSGID(CPF0000)
 
             CHGJOB     INQMSGRPY(*DFT)
             MONMSG     MSGID(CPF0000)
 
             DLTJRNRCV  JRNRCV(&JRNID)
             MONMSG     MSGID(CPF0000)
 
             CHGJOB     INQMSGRPY(*RQD)
             MONMSG     MSGID(CPF0000)
 
/* Create the journals and receivers */
/* associated with this component */
 
             CRTJRNRCV  JRNRCV(&JLIB/&JRNID)
 
             CRTJRN     JRN(&JLIB/&JRNID) JRNRCV(&JLIB/&JRNID)
 
/* Start journaling files */
 
/************IF         COND(&FILE01**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE01 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE01) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE02**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE02 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE02) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE03**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE03 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE03) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE04**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE04 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE04) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE05**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE05 *NE '          ') THEN(DO)
                STRJRNPF   FILE(&FILE05) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE06**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE06 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE06) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE07**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE07 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE07) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE08**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE08 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE08) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE09**='          ') THEN(DO)                         */ /*BG18886*/
             IF         COND(&FILE09 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE09) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
/************IF         COND(&FILE10**= '          ') THEN(DO)                        */ /*BG18886*/
             IF         COND(&FILE10 *NE '          ') THEN(DO)                          /*BG18886*/
                STRJRNPF   FILE(&FILE10) JRN(&JRNID) IMAGES(*BOTH)
             ENDDO
 
/* Normal ending: */
/*================*/
 
NORMAL:
             GOTO       CMDLBL(ENDPGM)
 
/* Abnormal ending: */
/*==================*/
 
ABNOR:
             CHGVAR     VAR(&ERROR) VALUE('Y')
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
/* Report an error */
 
             CHGVAR     VAR(&MEM) VALUE('CM COB Component +
                          Journalling Start FAILED')
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
             SNDPGMMSG  MSGID(MEM5052) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
 
ENDPGM:
             ENDPGM
