     H DEBUG
     H COPYRIGHT('(c) Finastra International Limited 2002')
      *****************************************************************
/*STD *  RPGBASEMOD                                                   *
/*EXI *  TEXT('Midas RE MT101/MT103 Generation by Sweep Enquiry')
      *****************************************************************
      *                                                               *
      *  Midas - Retail Module                                        *
      *                                                               *
      *  RE102005 - MT101/MT103 Generation by Sweep Enquiry           *
      *                                                               *
      *  Function: This module displays the overview of the MT101s    *
      *            and MT103s generated by Sweep.                     *
      *                                                               *
      *  (c) Finastra International Limited 2002                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CGL029             Date 01Sep03               *
      *                 211210             Date 11Dec02               *
      *                 CRE008  *CREATE    Date 19Feb02               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  211210 - Various action code errors                          *
      *  CRE008 - Cash Management                                     *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  Use of indicators.                                           *
      *                                                               *
      *    01         SFLCLR indicator                                *
      *    02         SFLDSP indicator                                *
      *    03         SFLDSPCTL indicator                             *
      *    04         Rollup indicator                                *
      *    05         Subfile Change indicator                        *
      *    06         Show 'Enquire' and 'Rollup/Rolldown' in screen  *
      *    07         End of File REICSDL4                            *
      *    08         Lookup in TABCOD found                          *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E  I N D E X                               *
      *                                                               *
      *  SRBldSubf    - Build subfile record                          *
      *  SRFmtScrFlds - Format screen fields                          *
      *  SRDspScrn    - Display records on screen                     *
      *  SRChkActn    - Check action made after display of screen     *
      *  SRChkIn      - Check input fields                            *
      *  SRChkRec     - Check record if the same with selection       *
      *  SREnquire    - Process enquiry on records                    *
      *  *INZSR       - Initialise                                    *
      *  *PSSR        - Error processing                              *
      *                                                               *
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
 
      ** Midas RE I/C Zero Balancing/Sweeping Details
     FREICSDL4  IF   E           K DISK    INFSR(*PSSR)
 
      ** Midas MG Msg Management File by Reference
     FMGOREFA   IF   E           K DISK    INFSR(*PSSR)
 
      ** Browse screen
     FRE102005DFCF   E             WORKSTN
     F                                     SFILE(RE102005S0:WRRN)
     F                                     INFSR(*PSSR)
 
      *****************************************************************
      /EJECT
      *****************************************************************
 
      ** +--------------------------------------+
      ** ¦ Automatically included D-specs       ¦
      ** ¦ ==============================       ¦
      ** +--------------------------------------+
 
      **--------------------------------------------------------------------------------------------
      * Standard D Specifications
     D/COPY ZACPYSRC,RECMSTDD
      **--------------------------------------------------------------------------------------------
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes all the defined fields in the
      ** Program Status Data Structures.  They have meaningful
      ** names, prefixed by 'PS'.
     D/COPY ZACPYSRC,PSDS
      **--------------------------------------------------------------------------------------------
 
      ** +--------------------------------------+
      ** ¦ End of automatically included D-specs¦
      ** ¦ =====================================¦
      ** +--------------------------------------+
 
      *****************************************************************
      /EJECT
      *****************************************************************
 
      ** +--------------------------------------+
      ** ¦ Manually included D-specs            ¦
      ** ¦ =========================            ¦
      ** +--------------------------------------+
 
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
 
     D Up              C                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D Lo              C                   'abcdefghijklmnopqrstuvwxyz'
 
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
 
     D TABCOD          S              4    DIM(49) CTDATA PERRCD(1)
     D TABNAR          S             13    DIM(49) ALT(TABCOD)
     D MONTHS          S              3    DIM(12) CTDATA PERRCD(12)
     D WArTrn          S             16    DIM(400)
 
      ** Externally described DS for bank details
     D SDBANK        E DS                  EXTNAME(SDBANKPD)
 
      ** Externally described DS for Midas Modules
     D SDMMOD        E DS                  EXTNAME(SDMMODPD)
 
      ** DS for access programs - short data structure
     D DSFDY         E DS                  EXTNAME(DSFDY)
 
     D DSTOPA          DS
     D  WCBRC                  1      3
     D  WDAS1                  4      4
     D  WCCUS                  5     10
     D  WDAS2                 11     11
     D  WCCCY                 12     14
     D  WDAS3                 15     15
     D**WCACD***              16     19                                                       CGL029
     D**WDAS4***              20     20                                                       CGL029
     D**WCASN***              21     22                                                       CGL029
     D  WCACD                 16     25                                                       CGL029
     D  WDAS4                 26     26                                                       CGL029
     D  WCASN                 27     28                                                       CGL029
 
     D DSINPUT         DS
     D  WPIMSR                 1     16
     D  WPIMST                17     19
     D  WPIDES                20     39
     D  WPIDAT                40     45
     D  WPITIM                46     53
     D  WPIMSS                54     66
 
     D DSTIME          DS
     D  WHour                  1      2
     D  WColon1                3      3
     D  WMin                   4      5
     D  WColon2                6      6
     D  WSec                   7      8
 
      ** +--------------------------------------+
      ** ¦ D-specs: Declared variables          ¦
      ** ¦ =======  ==================          ¦
      ** +--------------------------------------+
 
      ** Parameters for access object programs
     D PRTCD           S              7A
     D POPTN           S              7A
 
      ** Parameters for ZSEDIT
     D PINAMT          S             15  0
     D PDECPL          S              1  0
     D PCODE           S              1A
     D POUTAMT         S             21A
 
      ** Parameters for MEC0600
     D PTRNO           S             16A
     D PCFMT           S              1A
     D PACTN           S              1A
     D PFILA           S              1A
     D PRCODE          S              2A
     D PERROR          S              1A
 
      ** Other fields used
     D WRrn            S              5P 0
     D WCnt            S              3  0
     D WRecOk          S              1A
     D WSIMST          S              1A
     D WSIDES          S              1A
     D WSIDAT          S              1A
     D WSITIM          S              1A
     D WSIMSS          S              1A
     D WPInput         S             66A
     D WX1             S              3  0
     D WX2             S              3  0
     D WTime           S              6A
     D WOTime          S              8A
     D WIMSS           S             13A
     D WMSGS           S             13A
     D WDate           S              6A
     D WYear           S              2A
     D WMon            S              2A
     D WDay            S              2A
     D WMonth          S              3A
     D WMDate          S              7A
     D WLast           S              1A
     D X               S              2  0
 
      ** +--------------------------------------+
      ** ¦ End of D-specs                       ¦
      ** ¦ ==============                       ¦
      ** +--------------------------------------+
 
      *****************************************************************
      /EJECT
      *****************************************************************
 
      ** +--- Start of Main processing -------------------------------+
      ** ¦                                                            ¦
      ** ¦ *INZSR is executed at program activation.                  ¦
      ** ¦                                                            ¦
      ** +------------------------------------------------------------+
 
      *****************************************************************
      * MAIN PROCEDURE                                                *
      *****************************************************************
 
      ** Build record subfile
 
     C                   EXSR      SRBldSubf
 
      ** Display records on screen
 
     C                   EXSR      SRDspScrn
 
      ** End program when F3 is pressed
 
     C                   EVAL      *INLR = *ON
 
      *****************************************************************
      *  P R O G R A M   E N D                                        *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRBldSubf - Build record subfile                             *
      *                                                               *
      *  Called by: Main Processing, SRChkActn                        *
      *                                                               *
      *  Calls: SRFmtScrFlds, SRChkRec                                *
      *                                                               *
      *****************************************************************
     C     SRBldSubf     BEGSR
 
      ** Initialise subfile relative record number
 
     C                   EVAL      WRrn  = *ZERO
 
      **  Clear subfile before refilling by writing control record
      **  with SFLCLR active
 
     C                   EVAL      *IN01 = *ON
     C                   WRITE     RE102005C0
     C                   EVAL      *IN01 = *OFF
 
      ** Read record
 
     C     #0IMSR        SETLL     REICSDL4
     C                   READ      REICSDL4                               07
 
      ** Enable SFLDSP and seton ROLLUP indicator to drive intial loop
 
     C                   EVAL      *IN02 = *ON
     C                   EVAL      *IN04 = *ON
 
      ** Loop 1: Read records from the file until end of file or
      **         ROLLUP has not been entered
 
     C                   DOW       NOT %EOF(REICSDL4) AND
     C                             *IN04 = *ON
 
 
      ** Initialise/Reset count of records written to subfile page
 
     C                   EVAL      WCnt = *ZERO
 
      ** Loop 2: Write each record read to subfile until end of file
      **         or subfile page is full
 
     C                   DOW       NOT %EOF(REICSDL4) AND
     C                             WCnt < 5
 
      ** Format screen fields for display
 
     C                   EXSR      SRFmtScrFlds
 
     C                   EXSR      SRChkRec
 
     C                   IF        WRecOk = 'Y'
 
      ** Increment the subfile record no. and records written fields
 
     C                   ADD       1             WRrn
     C                   ADD       1             WCnt
 
      ** Write the record to subfile
 
     C                   WRITE     RE102005S0
 
     C                   ENDIF
 
      ** Read next record
 
     C                   READ      REICSDL4                               07
 
      ** End of Loop 2
 
     C                   ENDDO
 
      ** End of Loop 1
 
     C                   ENDDO
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRFmtScrFlds - Format screen fields for output               *
      *                                                               *
      *  Called by: SRBldSubf                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     SRFmtScrFlds  BEGSR
 
      ** Write details to corresponding screen fields
 
     C                   EVAL      #0OMSR = IDOMSR
 
     C                   IF        IDTPSW = 'T'
     C                   EVAL      #0MSGT = '101'
     C                   ELSE
     C                   EVAL      #0MSGT = '103'
     C                   ENDIF
 
     C     IDOMSR        CHAIN     MGOREFA
     C                   IF        NOT %FOUND(MGOREFA)
     C     *LOCK         IN        LDA
     C                   EVAL      DBKey = POPTN
     C                   EVAL      DBFile = 'SDBANKPD'
     C                   EVAL      DBase = 004
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ELSE
     C                   EVAL      #0DEST = NWDS
 
      ** Format Date
 
     C                   MOVE      MGDE          WDate
     C                   EVAL      WYear = %SUBST(WDate:1:2)
     C                   EVAL      WMon = %SUBST(WDate:3:2)
     C                   EVAL      WDay = %SUBST(WDate:5:2)
 
     C                   MOVE      WMon          X
     C                   MOVE      MONTHS(X)     WMonth
 
     C                   IF        BJDFIN = 'M'
     C                   EVAL      #0DATE = WMonth + WDay + WYear
     C                   ELSE
     C                   EVAL      #0DATE = WDay + WMonth + WYear
     C                   ENDIF
 
     C                   EVAL      #0TIME = MGTM
     C                   MOVE      #0TIME        WTime
     C                   EVAL      WHour = %SUBST(WTime:1:2)
     C                   EVAL      WMin = %SUBST(WTime:3:2)
     C                   EVAL      WSec = %SUBST(WTime:5:2)
     C                   EVAL      WOTime = DSTIME
 
     C     MGST          LOOKUP    TABCOD        TABNAR                   08
     C     *IN08         IFEQ      '1'
     C                   MOVEL     TABNAR        #0MSGS
     C                   ENDIF
     C                   ENDIF
 
     C                   MOVE      IDCBRC        WCBRC
     C                   MOVE      IDCCUS        WCCUS
     C                   MOVE      IDCCCY        WCCCY
     C                   MOVE      IDCACD        WCACD
     C                   MOVE      IDCASN        WCASN
     C                   EVAL      #0TOPA = DSTOPA
 
     C                   EVAL      PINAMT = IDSWFA
     C                   EVAL      PDECPL = 2
     C                   EVAL      PCODE = *BLANKS
     C                   EVAL      POUTAMT = *BLANKS
     C                   CALLB     'ZSEDIT'
     C                   PARM                    PINAMT
     C                   PARM                    PDECPL
     C                   PARM                    PCODE
     C                   PARM                    POUTAMT
     C                   EVAL      #0AMNT = POUTAMT
 
     C                   If        IDDSTT = 'R' or
     C                             IDDSTT = 'N'
     C                   Movel     IDDEST        #0SETA
     C                   Else
     C                   Movel     IDSNDC        #0SETA
     C                   Endif
     C                   EVAL      #0EXTA = IDEXA1
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDspScrn - Display output                                   *
      *                                                               *
      *  Called by: Main Processing                                   *
      *                                                               *
      *  Calls: SrChkActn                                             *
      *                                                               *
      *****************************************************************
     C     SRDspScrn     BEGSR
 
      ** Display screen until F3 is pressed
 
     C                   DOW       *INKC = *OFF
 
     C                   EVAL      WPIMSR = #0IMSR
     C                   EVAL      WPIMST = #0IMST
     C                   EVAL      WPIDES = #0IDES
     C                   EVAL      WPIDAT = #0IDAT
     C                   EVAL      WPITIM = #0ITIM
     C                   EVAL      WPIMSS = #0IMSS
     C                   MOVE      DSINPUT       WPInput
 
      ** If no record read, disable SFLDSP and write 'No Details'
      ** record format
 
     C                   IF        WRrn = *ZERO And
     C                             WCnt = *ZERO
 
     C                   EVAL      *IN02 = *OFF
     C                   EVAL      *IN06 = *OFF
     C                   WRITE     RE102005F0
     C                   WRITE     RE102005F1
     C                   WRITE     RE102005F2
     C                   EXFMT     RE102005C0
 
     C                   EXSR      SrChkActn
 
     C                   ELSE
 
      ** Display subfile record
 
     C                   EVAL      *IN06 = *ON
     C                   WRITE     RE102005F0
     C                   WRITE     RE102005F1
     C                   EXFMT     RE102005C0
 
     C                   EXSR      SrChkActn
 
     C                   ENDIF
 
      ** If F3 is pressed, end the program
 
     C                   ENDDO
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRChkActn - Check action made after display of screen        *
      *                                                               *
      *  Called by: SRDspScrn                                         *
      *                                                               *
      *  Calls: SrChkIn, SrBldSubf, SREnquire                         *
      *                                                               *
      *****************************************************************
     C     SRChkActn     BEGSR
 
     C                   EVAL      WPIMSR = #0IMSR
     C                   EVAL      WPIMST = #0IMST
     C                   EVAL      WPIDES = #0IDES
     C                   EVAL      WPIDAT = #0IDAT
     C                   EVAL      WPITIM = #0ITIM
     C                   EVAL      WPIMSS = #0IMSS
 
      ** Check if positioning required or selection made
 
     C                   IF        DSINPUT <> WPInput
 
      ** Check input fields
 
     C                   EXSR      SRChkIn
 
      ** Rebuild subfile
 
     C                   EXSR      SRBldSubf
 
     C                   ELSE
 
      ** Process if there is an enquiry
 
     C                   IF        WRrn <> *ZERO
     C                   EXSR      SREnquire
     C                   ENDIF
 
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRChkIn - Check Input fields                                 *
      *                                                               *
      *  Called by: SRChkActn                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     SRChkIn       BEGSR
 
     C                   EVAL      WSIMST = 'N'
     C                   EVAL      WSIDES = 'N'
     C                   EVAL      WSIDAT = 'N'
     C                   EVAL      WSITIM = 'N'
     C                   EVAL      WSIMSS = 'N'
 
     C                   IF        #0IMST <> *BLANKS
     C                   EVAL      WSIMST = 'Y'
     C                   ENDIF
 
     C                   IF        #0IDES <> *BLANKS
     C                   EVAL      WSIDES = 'Y'
     C                   ENDIF
 
     C                   IF        #0IDAT <> *BLANKS
     C                   EVAL      WSIDAT = 'Y'
     C                   EVAL      WMDate = #0IDAT
     C                   MOVE      WMDate        WLast
     C                   IF        WLast = *BLANKS
     C                   EVAL      WDate = WMDate
     C                   EVAL      WMDate = *ZEROS
     C                   MOVE      WDate         WMDate
     C                   EVAL      #0IDAT = WMDate
     C                   ENDIF
     C                   ENDIF
 
     C                   IF        #0ITIM <> *BLANKS
     C                   EVAL      WSITIM = 'Y'
     C                   ENDIF
 
     C                   IF        #0IMSS <> *BLANKS
     C                   EVAL      WSIMSS = 'Y'
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRChkRec - Check Record if the same with selection           *
      *                                                               *
      *  Called by: SRBldSubf                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     SRChkRec      BEGSR
 
     C                   EVAL      WRecOk = 'Y'
 
     C     Lo:Up         XLATE     #0IMSS        WIMSS
     C     Lo:Up         XLATE     #0MSGS        WMSGS
 
     C                   IF        WSIMST = 'Y' AND
     C                             #0MSGT <> #0IMST OR
     C                             WSIDES = 'Y' AND
     C                             #0IDES <> #0DEST OR
     C                             WSIDAT = 'Y' AND
     C                             #0IDAT <> #0DATE OR
     C                             WSITIM = 'Y' AND
     C                             #0ITIM <> WOTime  OR
     C                             WSIMSS = 'Y' AND
     C                             WIMSS <> WMSGS
     C                   EVAL      WRecOk = 'N'
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SREnquire - Process enquiry on records                       *
      *                                                               *
      *  Called by: SRChkActn                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     SREnquire     BEGSR
 
     C                   EVAL      PRCODE = *BLANKS
     C                   EVAL      WArTrn = *BLANKS
     C                   Z-ADD     0             WX1
 
     C                   DOU       *IN05 = *ON
     C                   READC     RE102005S0                             05
 
     C                   DOW       *IN05 = *OFF AND
     C                             #0ACTN = *BLANK
     C
     C                   UPDATE    RE102005S0
     C                   READC     RE102005S0                             05
     C                   ENDDO
 
     C                   IF        *IN05 = *OFF
     C                   EVAL      WX1 = WX1 + 1
     C                   EVAL      WArTrn(WX1) = #0OMSR
     C                   EVAL      #0ACTN = *BLANKS
     C                   UPDATE    RE102005S0
     C                   ENDIF
 
     C                   ENDDO
 
     C                   IF        WX1 > 0
     C                   Z-ADD     WX1           WX2
     C                   Z-ADD     1             WX1
 
     C                   DOW       WX1 <= WX2 AND
     C                             PRCODE <> '12'
 
     C                   EVAL      PFILA = *BLANKS
 
      ** If F8 pressed process next selection
 
     C                   IF        PRCODE = '08'
     C                   EVAL      WX1 = WX1 + 1
     C                   ENDIF
 
      ** If F9 pressed process previous selection
 
     C                   IF        PRCODE = '09'
     C                   EVAL      WX1 = WX1 - 1
     C                   ENDIF
 
      ** If single selection suppress F8 and F9
 
     C                   IF        WX2 = 1
     C                   EVAL      PFILA = 'S'
     C                   ENDIF
 
      ** If first selection suppress F9
 
     C                   IF        WX1 = 1 AND
     C                             PFILA <> 'S'
     C                   EVAL      PFILA = 'F'
     C                   ENDIF
 
      ** If last selection suppress F8
 
     C                   IF        WX1 = WX2 AND
     C                             PFILA <> 'S'
     C                   EVAL      PFILA = 'L'
     C                   ENDIF
 
     C                   EVAL      PTRNO = WArTrn(WX1)
 
     C                   CALL      'MEC0600'
     C                   PARM                    PTRNO
     C                   PARM                    PCFMT
     C                   PARM      'E'           PACTN
     C                   PARM                    PFILA
     C                   PARM                    PRCODE
     C                   PARM      '0'           PERROR
 
     C                   IF        PERROR <> '0'
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   ENDDO
 
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  *INZSR - Program Initialisation routine                      *
      *                                                               *
      *  Called by: Implicitly on program activation                  *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     *INZSR        BEGSR
 
      ** Access Bank Details
 
     C                   CALL      'AOBANKR0'
     C                   PARM      *BLANKS       PRTCD
     C                   PARM      '*FIRST '     POPTN
     C     SDBANK        PARM      SDBANK        DSFDY
 
      ** Database error
 
     C                   IF        PRTCD <> *BLANKS
     C     *LOCK         IN        LDA
     C                   EVAL      DBKEY = POPTN
     C                   EVAL      DBFILE = 'SDBANKPD'
     C                   EVAL      DBASE = 001
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
 
     C                   CALL      'AOMMODR0'
     C                   PARM      *BLANKS       PRTCD
     C                   PARM      '*FIRST '     POPTN
     C     SDMMOD        PARM      SDMMOD        DSFDY
 
      ** Database error
 
     C                   IF        PRTCD <> *BLANKS
     C     *LOCK         IN        LDA
     C                   EVAL      DBKEY = POPTN
     C                   EVAL      DBFILE = 'SDMMODPD'
     C                   EVAL      DBASE = 002
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ELSE
     C                   EVAL      PCFMT = BGCFMT
     C                   ENDIF
 
     C                   EVAL      #0USER = PSUSER
     C                   EVAL      #0RUND = BJMRDT
     C                   EVAL      #0WSID = PSJOBNAME
     C                   EVAL      #0SLSH = '/'
     C                   EVAL      #0CSLH = '/'
     C                   EVAL      WDAS1 = '-'
     C                   EVAL      WDAS2 = '-'
     C                   EVAL      WDAS3 = '-'
     C                   EVAL      WDAS4 = '-'
     C                   EVAL      WColon1 = ':'
     C                   EVAL      WColon2 = ':'
 
     C                   EVAL      *IN03 = *ON
 
     C                   ENDSR
      **********************************************************************
      /COPY ZACPYSRC,RECMPSSR
      **********************************************************************
** TABCOD/TABNAR - Table of Status/Narrative.
CRTDCreated
AMNDAmended
DLTDDeleted
RSNDRdy to send
PENDPending Trans
TRANTransmitted
EFMT#Format err¢
ELAU#Lgl Aut err¢
ESEQ#Inp seq err¢
ETID#Term ID err¢
ELEN#Length err¢
EAUT#SW auth err¢
QRDQ#RDYQ error¢
QVRQ#VRYQ error¢
LACKLogical ack
NACK#Neg ack¢
EBL1#Err bas hd¢
EBL2#Err app hd¢
EBL4#Err text¢
EBL5#Err trlr¢
PRTDPrinted
RRTDRe-routed
TSNTSent
TOUTPending Tx
TCANCancelled
TRTYIn retry
TACTActive
TSENSent
THLEHeld - error
THLOHeld/Oper.
TBOXAt Telex box
TCNRCancel req.
TRELHeld on TlxQ
TWTGWaiting
TRTSRdy to send
TDESIn despatch
TONQOn Tlx queue
TCMPComplete
TUNKUnknown
TRRTRe-route Q
TDLTDeleted
TSPVSupervisor
THORHeld Origntr
THTCHeld Time C.
THLOHeld by Oper
TCARAt Carrier
THOPHeld by Oper
TIRSItem Reset
TCNANot accountd
** MONTHS - Months Short Names
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
