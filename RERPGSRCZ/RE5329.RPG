     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas RE Fixed A/c Charges Task Split Copy records')   *
      *****************************************************************
      *                                                               *
      *  Midas - Retail Module                                        *
      *                                                               *
      *  RE5329 - RE Fixed Account Charges Gen Task Split Copy        *
      *           records.                                            *
      *                                                               *
      *  Function:  This program will copy a block of records from    *
      *             the old driver LF/REFXAJL0 to a member in the     *
      *             new driver PF/REFACGPD.                           *
      *                                                               *
      *  Called By: REC5329 - Fixed Account Charges Gen Split Task    *
      *                       Split Server.                           *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. CER050             Date 16Jun19               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 CGL165             Date 17Feb15               *
      *                 MD026036           Date 28Mar14               *
      *                 CRE083BC           Date 06Aug12               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      *                 CDE002             Date 21Dec99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CCB003 *Create     Date 10Oct96               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CER050 - Annualised Percentage Rate (Recompile)              *
      *  MD046248 - Finastra Rebranding                               *
      *  CGL165 - Dual Withholding Tax (Recompile)                    *
      *  MD026036 - Component REC5330 failed during COB               *
      *  CRE083BC - COB Restructure - RE COB Optimisation Phase 1     *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  CDE002 - Revenue Analysis - Recompiled due to changes in     *
      *           PF/REFXAJL0.                                        *
      *  CCB003 - COB Performance Enhancements - Task Split           *
      *           Copy records from old driver to new driver file.    *
      *                                                               *
      *****************************************************************
      *
     FTABTREXCIF  E                    DISK         KINFSR *PSSR
      *
     FREFXAJL0IF  E           K        DISK         KINFSR *PSSR
      *
     F***REFACGPDUF  E                    DISK         KINFSR *PSSR A                       CRE083BC
     FREFACGPDUF  E                    DISK         KINFSR *PSSR A    UC                    CRE083BC
     F                                              KCOMIT
      *
     FREFACIPDUF  E                    DISK         KINFSR *PSSR A
     F            REFACGD0                          KRENAMEINDEXF
     F                                              KCOMIT
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  Function of indicators                                       *
      *  ----------------------                                       *
      *                                                               *
      *     50 - Indicator for dummy read of GEFAPD                   *
      *     80 - READ indicator for REFACIPD                          *
      *     81 - READ indicator for REFXAJL0                          *
      *     89 - CHAIN indicator for TABTREXC                         *
      *                                                               *
      *  U7+U8 - Database error                                       *
      *                                                               *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *
     E                    CPY@    1   1 80
      ** Array containing Copyright statement
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *
     IINDEXF
      ** Rename fields for REFACIPD format
     I**********    RECI                            WRECI                                   CRE083BC
     I              RECID                           WRECI                                   CRE083BC
     I              BRCA                            WBRCA                                   CRE083BC
     I              CNUM                            WCNUM
     I              CCY                             WCCY
     I              ACOD                            WACOD
     I              ACSQ                            WACSQ
     I              PROT                            WPROT                                   CRE083BC
     I              TMST                            WTMST                                   CRE083BC
     I**********    BRCA                            WBRCA                                   CRE083BC
     I**********    ATYP                            WATYP                                   CRE083BC
     I**********    GLBT                            WGLBT                                   CRE083BC
     I**********    ACNO                            WACNO                                   CRE083BC
     I**********    ATCHIN                          WATCHN                                  CRE083BC
     I**********    ATCHAM                          WATCHM                                  CRE083BC
     I**********    ATCNUM                          WATCNM                                  CRE083BC
     I**********    RYACCH                          WRYACH                                  CRE083BC
     I**********    CHAC                            WCHAC                                   CRE083BC
     I**********    CHBR                            WCHBR                                   CRE083BC
      *
     ILDA       E DSLDA                         256
      ** Local data area for database error details
      *
     IPSDS       SDS
      ** Program Status Data Structure
     I                                     *PROGRAM PGM
     I                                      244 253 WSID
     I                                      254 263 USER
      *
     ISDBANK    E DSSDBANKPD
      ** Data Structure for Bank ICD Information
      *
     ISDGELR    E DSSDGELRPD
      ** Data Structure for General Ledger Details
      *
     IDSFDY     E DSDSFDY
      * First DS for Access Programs, Short Data Structure
      *                                                                                       CGL029
     IDSSDY     E DSDSSDY                                                                     CGL029
      ** Second DS for Access Programs, Long Data Structure                                   CGL029
      *
      *****************************************************************
      /EJECT
      *****************************************************************
     C           *ENTRY    PLIST
     C                     PARM           RECTOT  70
     C                     PARM           RTCODE  3
      *                                                                                     CRE083BC
     C                     OPEN REFACGPD                                                    CRE083BC
      *
      ** Initial processing
     C           @FIRST    IFEQ ' '                                                         CRE083BC
     C                     EXSR INIT
     C                     MOVE 'Y'       @FIRST  1                                         CRE083BC
     C                     ENDIF                                                            CRE083BC
      *
      ** Split records into new file
     C                     EXSR TSPLIT
      *
      ** End processing
     C                     EXSR END
      *****************************************************************
      /EJECT
      *****************************************************************
      * TSPLIT - Split records into new driver and index files.       *
      *                                                               *
      * Called by: MAIN PROCESSING                                    *
      * Calls    : None                                               *
      *****************************************************************
     C           TSPLIT    BEGSR
      *
      **   Perform detail processing if account charge date is less
      **   then the event control date.
      *
     C           REACCD    IFLE WWECD
      *
     C                     Z-ADD0         TOT     70
      *
      ** Check the Index file and set the file pointer to the next
      ** driver record to be copied accordingly.
      *
     C           1         SETLLREFACIPD                 80                                 CRE083BC
     C                     READ REFACIPD                 80
      *
     C           *IN80     IFEQ '1'
     C           *LOVAL    SETLLREFXAJL0
     C                     ELSE
     C                     MOVE WBRCA     KBRCA
     C**********           Z-ADDWCNUM     KCNUM                                               CSD027
     C                     MOVE WCNUM     KCNUM                                               CSD027
     C                     MOVE WCCY      KCCY
     C                     Z-ADDWACOD     KACOD
     C                     Z-ADDWACSQ     KACSQ
     C           KEY       SETGTREFXAJL0
     C                     ENDIF
      *
      ** Copy records to the new driver file until the limit
      ** specified in the input parameter (RECTOT) is reached.
      *
     C           TOT       DOUEQRECTOT
     C           *IN81     OREQ '1'
      *
     C                     READ REFXAJL0                 81
     C           *IN81     IFEQ '0'
      *                                                                                     CRE083BC
      ** Write first record, if there is one.                                               CRE083BC
     C           TOT       IFEQ 0                                                           CRE083BC
     C                     MOVE 'A'       RECID                                             CRE083BC
     C                     MOVE ' '       PROT                                              CRE083BC
      *                                                                                     CRE083BC
      ** Output Timestamp                                                                   CRE083BC
     C                     CALL 'ZAGENTS'                                                   CRE083BC
     C                     PARM           TMST   26                                         CRE083BC
     C                     WRITEREFACGD0
     C                     ENDIF                                                            CRE083BC
      *                                                                                     CRE083BC
     C                     ADD  1         TOT
     C                     ENDIF
      *
     C                     ENDDO
      *                                                                                     CRE083BC
      ** Write last record, if there is one.                                                CRE083BC
     C           TOT       IFGT 0                                                           CRE083BC
     C                     MOVE 'Z'       RECID                                             CRE083BC
     C                     MOVE ' '       PROT                                              CRE083BC
      *                                                                                     CRE083BC
      ** Output Timestamp                                                                   CRE083BC
     C                     CALL 'ZAGENTS'                                                   CRE083BC
     C                     PARM           TMST                                              CRE083BC
     C                     WRITEREFACGD0                                                    CRE083BC
     C                     ENDIF                                                            CRE083BC
      *                                                                                     MD026036
      ** If main file is empty, update timestamp for index file                             MD026036
      *                                                                                     MD026036
     C           TOT       IFEQ 0                                                           MD026036
     C                     CALL 'ZAGENTS'                                                   MD026036
     C                     PARM           TMST                                              MD026036
     C                     ENDIF                                                            MD026036
      *
      ** Set up fields for Index file with data from last record
      ** written to PF/REFACGPD.
      *
     C**********           MOVE RECI      WRECI                                             CRE083BC
     C                     MOVE RECID     WRECI                                             CRE083BC
     C                     MOVE CNUM      WCNUM
     C                     MOVE CCY       WCCY
     C                     MOVE ACOD      WACOD
     C                     MOVE ACSQ      WACSQ
     C                     MOVE BRCA      WBRCA
     C                     MOVE PROT      WPROT                                             CRE083BC
     C                     MOVE TMST      WTMST                                             CRE083BC
     C**********           MOVE ATYP      WATYP                                             CRE083BC
     C**********           MOVE GLBT      WGLBT                                             CRE083BC
     C**********           MOVE ACNO      WACNO                                             CRE083BC
     C**********           MOVE ATCHIN    WATCHN                                            CRE083BC
     C**********           MOVE ATCHAM    WATCHM                                            CRE083BC
     C**********           MOVE ATCNUM    WATCNM                                            CRE083BC
     C**********           MOVE RYACCH    WRYACH                                            CRE083BC
     C**********           MOVE CHAC      WCHAC                                             CRE083BC
     C**********           MOVE CHBR      WCHBR                                             CRE083BC
      *
      ** If Index file is empty write new record to it, else update
      ** with details of last record written to PF/REFACGPD.
      *
     C           *IN80     IFEQ '1'
     C                     WRITEINDEXF
     C                     ELSE
     C                     UPDATINDEXF
     C                     ENDIF
      *
     C                     COMIT
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * END - Exit program and return to calling program.             *
      *                                                               *
      * Called by: MAIN PROCESSING                                    *
      * Calls    : None                                               *
      *****************************************************************
     C           END       BEGSR
      *
      ** If end of file on REFXAJL0 or not on processing date
      ** set return code to notify server to end
      *
     C           *IN81     IFEQ '1'
     C           REACCD    ORGT WWECD
     C           TOT       IFEQ 0                                                           CRE083BC
     C                     MOVE 'NRF'     RTCODE                                            CRE083BC
     C                     ELSE                                                             CRE083BC
     C                     MOVE 'EOF'     RTCODE
     C                     ENDIF                                                            CRE083BC
     C                     ENDIF
      *
     C                     CLOSEREFACGPD                                                    CRE083BC
     C**********           SETON                     LR                                     CRE083BC
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * INIT - Initial processing.                                    *
      *                                                               *
      * Called by: MAIN PROCESSING                                    *
      * Calls    : None                                               *
      *****************************************************************
     C           INIT      BEGSR
      *
      ** KLIST for setting file pointer to next record to be copied
     C           KEY       KLIST
     C                     KFLD           KBRCA   3
     C**********           KFLD           KCNUM   60                                          CSD027
     C                     KFLD           KCNUM   6                                           CSD027
     C                     KFLD           KCCY    3
     C**********           KFLD           KACOD   40                                          CGL029
     C                     KFLD           KACOD  100                                          CGL029
     C                     KFLD           KACSQ   20
      *
      ** Set up copyright parameter
     C                     MOVEACPY@      CPY2@  80
      *
      ** Define LDA
     C           *NAMVAR   DEFN           LDA
      *
      ** Dummy READ to REFACGPD for compilation purpose
     C           *IN50     IFEQ '1'
     C                     READ REFACGPD                 50
     C                     ENDIF
      *
      ** Access Bank details
     C                     CALL 'AOBANKR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDBANKPD'DBFILE           ************
     C                     MOVEL@OPTN     DBKEY            * DBERR 01 *
     C                     Z-ADD1         DBASE            ************
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Access General Ledger Details
     C**********           CALL 'AOGELRR0'                                                    CGL029
     C                     CALL 'AOGELRR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*FIRST ' @OPTN
     C********** SDGELR    PARM SDGELR    DSFDY                                               CGL029
     C           SDGELR    PARM SDGELR    DSSDY                                               CGL029
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDGELRPD'DBFILE           ************
     C                     MOVEL@OPTN     DBKEY            * DBERR 02 *
     C                     Z-ADD2         DBASE            ************
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Access PF/TABTREXC
     C           1         CHAINTABTREXC             89
     C           *IN89     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'TABTREXC'DBFILE           ************
     C                     MOVEL'1'       DBKEY            * DBERR 03 *
     C                     Z-ADD3         DBASE            ************
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Calculate the event control date using Standard SR/ZEVCD
     C                     Z-ADDBKAPDT    ZZAPDT
     C                     Z-ADDBJDNWD    ZZDNWD
     C                     EXSR ZEVCD
     C                     Z-ADDECD       WWECD   50
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: (**calling routines**)                             *
      * Calls: None                                                   *
      *****************************************************************
     C           *PSSR     BEGSR
      *
     C           *LOCK     IN   LDA
     C                     MOVEL'RE5338'  DBPGM     P
     C                     OUT  LDA
      *
     C                     SETON                     U7U8LR
     C                     DUMP
     C                     ROLBK
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
     C/COPY ZSRSRC,ZEVCDZ1
      *****************************************************************
** CPY@ - Object copyright
(c) Finastra International Limited 2001
