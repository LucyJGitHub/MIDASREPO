/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas RP PB Triggering Control module.')              */
/*********************************************************************/
/*                                                                   */
/*       Midas - Private Banking Module                              */
/*                                                                   */
/*       RPC1500 - Control of triggering                             */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. 256330             Date 08Sep08              */
/*                      BG18886            Date 27May08              */
/*                      BUG16705A          Date 01Apr08              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.05 ---------------------------------------------------*/
/*                      CPB002  *CREATE    Date 01Jun99              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       256330 - API - LEFAMD message transaction causes the        */
/*                APISERVER to dump. Reverse fix BUG16705A.          */
/*                Partially applied BG18886 fix.                     */
/*       BG18886 - Amend non-standard codes.                         */
/*       BUG16705A - The system should automatically generate        */
/*                   customer number if field is blank               */
/*       CPB002 - Meridian DBA Middleware Replication Customization. */
/*                Midas/TOF Interface.                               */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&InQueue &OutQueue &CommitCtl &ReturnCode)
 
/*-------------------------------------------------------------------*/
/*  Parameters declaration.                                          */
/*-------------------------------------------------------------------*/
 
             DCL        VAR(&InQueue)    TYPE(*CHAR) LEN(48) +
                 /* MQSeries transmission queue that is to be read.  */
             DCL        VAR(&OutQueue)   TYPE(*CHAR) LEN(48) +
                 /* MQSeries remote queue that is to be written to.  */
             DCL        VAR(&CommitCtl)  TYPE(*CHAR) LEN(1) +
                 /* Flag saying whether commitment control is used.  */
             DCL        VAR(&ReturnCode) TYPE(*CHAR) LEN(10) +
                 /* Return code from call to standard read function. */
 
/*-------------------------------------------------------------------*/
/*  Variables declaration.                                           */
/*-------------------------------------------------------------------*/
 
             DCL        VAR(&Mem)        TYPE(*CHAR) LEN(50)
                 /* Message text sent to MOPERQ.  */
             DCL        VAR(&Msgdta)     TYPE(*CHAR) LEN(128) +
                 /* Message text sent to MRUNQ MOPERQ.  */
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2001')
 
/*-------------------------------------------------------------------*/
/*  Global monitor message.                                          */
/*-------------------------------------------------------------------*/
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/*-------------------------------*/
/*  Create LDA, if not present.  */
/*-------------------------------*/
 
             CHKOBJ     OBJ(QTEMP/LDA) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                   CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256) +
                                AUT(*EXCLUDE)
             ENDDO
             CHGDTAARA  DTAARA(LDA) VALUE(' ')
 
/*-------------------------------------------------------------------*/
/*  Create APDUMP, if not present, but in library QTEMP, to avoid    */
/*  retrieving Dump informations from xxDMLIB/APDUMP.                */
/*  This data area is used by module ZAGETSETAC, which is called by  */
/*  trigger programs to retrieve full Settlement Account.            */
/*  It is needed to check if any unmonitored error (return code not  */
/*  set up) occurred in called module.                               */
/*-------------------------------------------------------------------*/
 
             CHKOBJ     OBJ(QTEMP/APDUMP) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(DO)
/**********        CRTDTAARA  DTAARA(QTEMP/APDUMP) TYPE(*CHAR) LEN(256) +              /*BUG16705A*/
/**********                     AUT(*EXCLUDE)                                          /*BUG16705A*/
/**********        CRTDTAARA  DTAARA(QTEMP/APDUMP) TYPE(*CHAR) LEN(274) +
/**********                     AUT(*EXCLUDE)                               /*BUG16705A*/ /*256330*/
                   CRTDTAARA  DTAARA(QTEMP/APDUMP) TYPE(*CHAR) LEN(256) +
                                AUT(*EXCLUDE)                                             /*256330*/
             ENDDO
             CHGDTAARA  DTAARA(APDUMP) VALUE(' ')
 
/*-------------------------------------------------------------------*/
/*  Call the standard read function, passing in the names of the     */
/*  MQSeries queues to read from and write to.                       */
/*-------------------------------------------------------------------*/
 
             CHGVAR     VAR(&ReturnCode) VALUE(' ')
             CALL       RPPRCMSGS PARM(&InQueue &OutQueue +
                          &CommitCtl &ReturnCode)
 
/*-------------------------------------------------------------------*/
/*  If error occured while processing message from Initiation Queue. */
/*-------------------------------------------------------------------*/
 
/************IF         COND(%SWITCH(XXXXXX11) *OR &ReturnCode *= ' ') THEN(DO)       */ /*BG18886*/
             IF         COND(%SWITCH(XXXXXX11) *OR &ReturnCode *NE ' ') THEN(DO)         /*BG18886*/
                   ROLLBACK
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&Mem)
/******************IF         COND(%SST(&Mem 1 29)**= ' ') THEN(DO)                   */ /*BG18886*/
                   IF         COND(%SST(&Mem 1 29) *NE ' ') THEN(DO)                     /*BG18886*/
                        SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&Mem) +
                                     TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                   ENDDO
/******************IF         COND(&ReturnCode**= ' ') THEN(DO)                       */ /*BG18886*/
                   IF         COND(&ReturnCode *NE ' ') THEN(DO)                         /*BG18886*/
                        CHGVAR     VAR(&MSGDTA) VALUE('Message processing function +
                                                       ended abnormally with return +
                                                       code "' *CAT &ReturnCode *TCAT '"')
                        SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(&Msgdta) +
                                     TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                        GOTO       CMDLBL(ENDPGM)
                   ENDDO
                   GOTO       CMDLBL(ABNOR)
 
             ENDDO
 
             GOTO       CMDLBL(ENDPGM)
 
/*-------------------------------------------------------------------*/
/*  Abnormal Termination.                                            */
/*-------------------------------------------------------------------*/
 
 ABNOR:
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 MCH0000)
 
             DMPCLPGM
             MONMSG     MSGID(CPF0000 MCH0000)
 
             CHGVAR     VAR(&Msgdta) +
                          VALUE('RPC1500 - Control of triggering +
                                 - ended abnormally. See job log')
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(&Msgdta) +
                          TOMSGQ(MRUNQ MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
             CHGVAR     VAR(&ReturnCode) VALUE('AbnormlEnd')
 
/*-------------------------------------------------------------------*/
/*  End processing.                                                  */
/*-------------------------------------------------------------------*/
 
 ENDPGM:
             ENDPGM
