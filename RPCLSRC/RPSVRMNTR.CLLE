/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*********************************************************************/
/*                                                                   */
/*       Meridian Replication                                        */
/*                                                                   */
/*       RPSVRMNTR - Replication Server Job Monitor                  */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2016           */
/*                                                                   */
/*       Last Amend No. MD058809           Date 16Dec21              */
/*       Prev Amend No. MD041939           Date 10Oct16              */
/*                      MD039701 *CREATE   Date 18Sep16              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD058809 - After installation of MQ9 compatibility patch and*/
/*                  restart of the Meridian Replication subsystem    */
/*                  REPMIDASPT, the job MPT1PBSIN ended in MSGW.     */
/*       MD041939 - Replication Server Job ends in error (Additional */
/*                  processing for MD-39701)                         */
/*       MD039701 - Replication Server Job ends in error             */
/*                                                                   */
/*********************************************************************/
/*===================================================================*/
/*  START OF PROGRAM                                                 */
/*===================================================================*/
             PGM

             DCL        VAR(&SBS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SVRJOB) TYPE(*CHAR) LEN(11)
             DCL        VAR(&U)      TYPE(*CHAR) LEN(3)
             DCL        VAR(&P)      TYPE(*CHAR) LEN(8)
             DCL        VAR(&WAIT)   type(*CHAR) LEN(5)
             DCL        VAR(&MPHAS)  type(*CHAR) LEN(1)
             DCL        VAR(&PGM)    type(*CHAR) LEN(10)
             DCL        VAR(&ACTIVE) TYPE(*CHAR) LEN(4)
             DCL        VAR(&USER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LOOP) TYPE(*CHAR) LEN(1)                                   /*MD041939*/

             DCL        VAR(&INITBOSYS) TYPE(*DEC) LEN(3 0) VALUE(7) +
             /* A symbolic 'constant' that tells the +
             called program to initialise the +
             environment for the BO system. */

             DCLF       FILE(X9PF) OPNID(A)
             DCLF       FILE(X4PF) OPNID(B)

/* Global monitor message */

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ABNOR))

/*===================================================================*/
/*  Setup environment                                                */
/*===================================================================*/
             CALL       PGM(RPBOIF02) PARM(&INITBOSYS ' ')

/*===================================================================*/
/*  Get parameter information in X4PF                                */
/*===================================================================*/
             RCVF       OPNID(B)
             CHGVAR     VAR(&U) VALUE(&B_X4UNIT)
             CHGVAR     VAR(&P) VALUE(&B_X4PRDN)

/*===================================================================*/
/*  Read X9PF to get the Replication Job Program                     */
/*===================================================================*/
READNEXT:
             RCVF       OPNID(A)
             IF         COND(&A_X9JBID *NE 'MDBAREP') THEN(DO)
                 GOTO       CMDLBL(READNEXT)
             ENDDO
             ELSE       CMD(DO)
                 CHGVAR     VAR(&PGM) VALUE(&A_X9PGM)
                 CHGVAR     VAR(&SVRJOB) VALUE('M' *CAT &U *CAT &P)
             ENDDO

/*===================================================================*/
/*  Retrieve wait time                                               */
/*===================================================================*/
             RTVDTAARA  DTAARA(MONJOBWAIT (1 5)) RTNVAR(&WAIT)

             CHGDTAARA  DTAARA(MONJOBWAIT (6 1)) VALUE('Y')                             /*MD041939*/

/*===================================================================*/
/*  Loop to monitor server job                                       */
/*===================================================================*/
 LOOP:
             DLYJOB     DLY(&WAIT)
             RTVDTAARA  DTAARA(MONJOBWAIT (6 1)) RTNVAR(&LOOP)                          /*MD041939*/
             IF         COND(&LOOP *EQ 'N') THEN(DO)                                    /*MD041939*/
                 GOTO       CMDLBL(END)                                                 /*MD041939*/
             ENDDO                                                                      /*MD041939*/
/*===================================================================*/
/*  If not in COB check if the job server job is active              */
/*===================================================================*/
             RTVDTAARA  DTAARA(MPHAS) RTNVAR(&MPHAS)
             IF         COND(&MPHAS *EQ 'A' *OR &MPHAS *EQ 'F') THEN(DO)                /*MD041939*/
              CHGVAR     VAR(&ACTIVE) VALUE(' ')
              RTVDTAARA  DTAARA(RPLIBNAMES (01 10)) RTNVAR(&SBS)
              CALL       PGM(RPCHECKJOB) PARM(&ACTIVE &SBS &SVRJOB)

/*===================================================================*/
/* If replication job is not active, submit server job               */
/*===================================================================*/
             IF         COND(&ACTIVE *NE '*YES') THEN(DO)
               RTVJOBA USER(&USER)
               SBMJOB     CMD(CALL PGM(&PGM) PARM(&U &P)) JOB(&SVRJOB) +
                             JOBD(&SBS/&SBS) JOBQ(&SBS) +
                             OUTQ(*JOBD) USER(&USER) INLLIBL(*CURRENT)
             ENDDO
             ENDDO

             GOTO       CMDLBL(LOOP)

 ABNOR:
             SNDPGMMSG  MSG('Program RPSVRMNTR ended abnormally') +
                        TOPGMQ(*PRV) MSGTYPE(*DIAG)
             MONMSG     MSGID(CPF0000)

 END:        ENDPGM
