/*********************************************************************/
/*S*D****CLPBASEMOD***************************************************/                 /*AR917384*/
/*STD    CLPBASEBND                                                  */                 /*AR917384*/
/*EXI    TEXT('Midas SC Backup Schemas/Libraries Monitor')           */
/*********************************************************************/
/*                                                                   */
/*       Midas - System Control Module                               */
/*                                                                   */
/*       SCC000303 - Backup Schemas/Libraries Monitor                */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2011           */
/*                                                                   */
/*       Last Amend No. MD041080           Date 05Sep16              */
/*       Prev Amend No. MD035665           Date 03Sep15              */
/*                      MD032041           Date 23Jul15              */
/*                      AR1013927          Date 15Oct12              */
/*                      CCB020             Date 06Aug12              */
/*                      AR917384           Date 21Feb12              */
/*                      AR892136           Date 11Jan12              */
/*                      CBF002  *CREATE    Date 04Jul11              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD041080 - User defined libraries not saved by SCC1711      */
/*                  00003. Save is only done if SCC1711 00001 is     */
/*                  complete. If status is 'P', wait for the job to  */
/*                  complete instead.                                */
/*       MD035665 - COB component SCC1711 00003 Failed.              */
/*                  Reverse MD-32041.                                */
/*       MD032041 - Wait for SCC1711 00001 to be 'Complete'.         */
/*       AR1013927 - Change submitted job to MIDASJOBQ               */
/*                   (Child:AR1013928)                               */
/*       CCB020 - COB Restructure - Secondary COB Infrastructure     */
/*       AR917384 - SCC1711 Error on Backup                          */
/*                - Changed to *PGM to be included as adoption       */
/*       AR892136 - COB failed to backup Global Library              */
/*       CBF002 - BF Infrastructure: Backup and Recovery             */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTCD &PFKY)

             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&RTNCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PFKY) TYPE(*CHAR) LEN(3)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PFMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&RFMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&FAILIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ZONGLO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ZOGL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CNTR) TYPE(*DEC) LEN(3 0) VALUE(0)
             DCL        VAR(&CNTR2) TYPE(*CHAR) LEN(3)
             DCL        VAR(&SBMJOBCNT) TYPE(*CHAR) LEN(3)
             DCL        VAR(&FINJOBCNT) TYPE(*CHAR) LEN(3)
             DCL        VAR(&DSAV) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)
/**********  DCL        VAR(&MPHASVAL) TYPE(*CHAR) LEN(1)          */            /*AR892136 CCB020*/
             DCL        VAR(&SAVDUR) TYPE(*CHAR) LEN(10)                                /*AR892136*/
             DCL        VAR(&CSBOB) TYPE(*CHAR) LEN(4)                                    /*CCB020*/
             DCL        VAR(&CSTAT) TYPE(*CHAR) LEN(4)                                    /*CCB020*/

             COPYRIGHT  TEXT('(c) Misys International Banking +
                          Systems Ltd. 2011')

/** Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

/***Retrieve*MPHAS*Value**/                                                      /*AR892136 CCB020*/

/**********  RTVDTAARA  DTAARA(MPHAS (1 1)) RTNVAR(&MPHASVAL)      */            /*AR892136 CCB020*/
                                                                                          /*CCB020*/
/********** SCC1711:                                                       /*MD032041*/ /*MD035665*/
             CHGVAR     VAR(&CSTAT) VALUE('    ')                                         /*CCB020*/
             CHGVAR     VAR(&CSBOB) VALUE('    ')                                         /*CCB020*/
             CALL       PGM(AOCOMSR0) PARM('SCC1711' '00001' &CSTAT)                      /*CCB020*/
             CALL       PGM(AOCOMSR0) PARM('SCC0410' '00001' &CSBOB)                      /*CCB020*/
                                                                                          /*CCB020*/
/**********  IF         COND(&CSTAT *NE 'C   ') THEN(DO)           */      /*MD032041*/ /*MD035665*/
/**********  DLYJOB     DLY(5)                                     */      /*MD032041*/ /*MD035665*/
/**********  GOTO       CMDLBL(SCC1711)                            */      /*MD032041*/ /*MD035665*/
/**********  ENDDO                                                 */      /*MD032041*/ /*MD035665*/
                                                                           /*MD032041*/ /*MD035665*/
/** Check if Zonal/Global */

             CHGVAR     VAR(&RTCD) VALUE(' ')
             CHGVAR     VAR(&RTNCD) VALUE(' ')
             CHGVAR     VAR(&OPTN) VALUE('*KEY   ')
             CALL       PGM(AOSVPRMR0) PARM(&RTNCD &OPTN &PFKY &RFMT)
             IF         COND(&RTNCD *NE ' ') THEN(GOTO CMDLBL(ABNOR))
             CHGVAR     VAR(&ZONGLO) VALUE(%SST(&RFMT 44 10))

/** Retrieve first library/schema record */

             CHGVAR     VAR(&RTNCD) VALUE(' ')
             CHGVAR     VAR(&OPTN) VALUE('*FIRST ')

             CALL       PGM(AOBKLBR0) PARM(&RTNCD &OPTN &PFMT)

             IF         COND(&RTNCD *EQ '*EMPTY') THEN(DO)
                CALL       PGM(AOBKLBR0) PARM(&RTNCD '*FREE' &PFMT)
                GOTO       CMDLBL(ENDPGM)
             ENDDO

/** Create DTAARA to monitor job status */

             RTVDTAARA  DTAARA(SDSTAT) RTNVAR(&SDSTAT)
             CHGVAR     VAR(%SST(&DSAV 1 2)) VALUE(%SST(&SDSTAT 6 2))
             CHGDTAARA  DTAARA(&DSAV/SCBKSTAT (1 6)) VALUE('000000')

/** Call Backup Schemas/Libraries for every library in file */

LOOP:

/** Retrieve Save During Value - ICT/BOB */                                             /*AR892136*/

             CHGVAR     VAR(&SAVDUR) VALUE(%SST(&PFMT 99 10))                           /*AR892136*/

             IF         COND(&RTNCD *NE ' ') THEN(GOTO CMDLBL(ABNOR))

/** Backup ICT/BOB */                                                                   /*AR892136*/

/**********  IF         COND((&MPHASVAL *EQ 'B') *AND (&SAVDUR *EQ +                      /*CCB020*/
/**********               'ICT       ')) THEN(GOTO CMDLBL(PROC))   */            /*AR892136 CCB020*/
             IF         COND((&CSTAT *EQ 'C   ' *AND &CSBOB *NE 'C   +
                          ') *AND (&SAVDUR *EQ 'ICT       ')) +
                          THEN(DO)                                                        /*CCB020*/
             GOTO       CMDLBL(PROC)                                                      /*CCB020*/
             ENDDO                                                                        /*CCB020*/
             IF         COND((&CSTAT *EQ 'P   ' *AND &CSBOB *NE 'C   +
                          ') *AND (&SAVDUR *EQ 'ICT       ')) +
                          THEN(DO)                                                      /*MD041080*/
             GOTO       CMDLBL(PROC)                                                    /*MD041080*/
             ENDDO                                                                      /*MD041080*/
             ELSE       CMD(DO)                                                           /*CCB020*/
             IF         COND((&CSBOB *EQ 'C   ') *AND (&SAVDUR *EQ +
                          'BOB       ')) THEN(GOTO CMDLBL(PROC))                          /*CCB020*/
             ELSE       CMD(GOTO CMDLBL(RTRV))                                            /*CCB020*/
             ENDDO                                                                        /*CCB020*/

/**********  IF         COND((&MPHASVAL *EQ 'F') *AND (&SAVDUR *EQ +                      /*CCB020*/
/**********               'BOB       ')) THEN(GOTO CMDLBL(PROC))                 /*AR892136 CCB020*/
                                                                                        /*AR892136*/
/**********  ELSE       CMD(GOTO CMDLBL(RTRV))                                   /*AR892136 CCB020*/

/** Process Zonal/Global */

PROC:                                                                                   /*AR892136*/
             CHGVAR     VAR(&ZOGL) VALUE(%SST(&PFMT 111 10))
             IF         COND(&ZONGLO *EQ &ZOGL) THEN(DO)
/**********     SBMJOB     CMD(CALL PGM(SCC000313) PARM(&PFKY &PFMT)) +
                             JOB(SCC000313) JOBD(*USRPRF) JOBQ(QBATCH) */              /*AR1013927*/
                SBMJOB     CMD(CALL PGM(SCC000313) +
                              PARM(&PFKY &PFMT)) JOB(SCC000313) +
                              JOBD(*USRPRF) JOBQ(MIDASJOBQ)                            /*AR1013927*/
                CHGVAR     VAR(&CNTR) VALUE(&CNTR + 1)
                CHGVAR     VAR(&CNTR2) VALUE(&CNTR)
                CHGDTAARA  DTAARA(&DSAV/SCBKSTAT (1 3)) VALUE(&CNTR2)
             ENDDO

/** Retrieve next record */

RTRV:                                                                                   /*AR892136*/
             CALL       PGM(AOBKLBR0) PARM(&RTNCD &OPTN &PFMT)
             IF         COND(&RTNCD *NE '*EOF   ') THEN(GOTO +
                          CMDLBL(LOOP))

             CHGVAR     VAR(&OPTN) VALUE('*FREE  ')
             CALL       PGM(AOBKLBR0) PARM(&RTNCD &OPTN &PFMT)
             IF         COND(&RTNCD *EQ '*CLOSE ') THEN(GOTO +
                          CMDLBL(ABNOR))

/** Check if all submitted jobs are finished */

             RTVDTAARA  DTAARA(&DSAV/SCBKSTAT (1 3)) RTNVAR(&SBMJOBCNT)
CHECK:
             DLYJOB     DLY(15)
             RTVDTAARA  DTAARA(&DSAV/SCBKSTAT (4 3)) RTNVAR(&FINJOBCNT)
             IF         COND(&SBMJOBCNT *NE &FINJOBCNT) THEN(GOTO +
                          CMDLBL(CHECK))

/** Check if any of the Backup jobs have failed */

             CHGVAR     VAR(&OPTN) VALUE('*FIRST ')

LOOPCHK:
             CALL       PGM(AOBKLBR0) PARM(&RTNCD &OPTN &PFMT)

             CHGVAR     VAR(&SAVDUR) VALUE(%SST(&PFMT 99 10))                           /*AR892136*/
/**********  IF         COND((&MPHASVAL *EQ 'B') *AND (&SAVDUR *EQ +                      /*CCB020*/
/**********               'ICT       ')) THEN(GOTO CMDLBL(CHKFAIL))              /*AR892136 CCB020*/
             IF         COND((&CSTAT *EQ 'C   ' *AND &CSBOB *NE 'C   +
                          ') *AND (&SAVDUR *EQ 'ICT       ')) +
                          THEN(DO)                                                        /*CCB020*/
             GOTO       CMDLBL(CHKFAIL)
             ENDDO
             ELSE       CMD(DO)                                                           /*CCB020*/
             IF         COND((&CSBOB *EQ 'C   ') *AND (&SAVDUR *EQ +
                          'BOB       ')) THEN(GOTO CMDLBL(CHKFAIL))                       /*CCB020*/
             ELSE       CMD(GOTO CMDLBL(CONT))                                            /*CCB020*/
             ENDDO                                                                        /*CCB020*/

/**********  IF         COND((&MPHASVAL *EQ 'F') *AND (&SAVDUR *EQ +                      /*CCB020*/
/**********               'BOB       ')) THEN(GOTO CMDLBL(CHKFAIL))              /*AR892136 CCB020*/
                                                                                        /*AR892136*/
/**********  ELSE       CMD(GOTO CMDLBL(CONT))                                   /*AR892136 CCB020*/

CHKFAIL:                                                                                /*AR892136*/
             IF         COND((%SST(&PFMT 84 1) *NE ' ') *OR +
                          (%SST(&PFMT 98 1) *NE ' ')) THEN(DO)
                CHGVAR     VAR(&FAILIB) VALUE(%SST(&PFMT 1 10))
                CHGVAR     VAR(&RTNCD) VALUE('*ERROR')
                SNDPGMMSG  MSG('Library' *BCAT &FAILIB *BCAT 'not +
                             saved.') TOMSGQ(MOPERQ MRUNQ)
                GOTO       CMDLBL(ABNOR)
             ENDDO

CONT:                                                                                   /*AR892136*/
             IF         COND(&RTNCD *NE '*EOF   ') THEN(GOTO +
                          CMDLBL(LOOPCHK))

             GOTO       CMDLBL(ENDPGM)

/** Abnormal Termination */

ABNOR:
             CHGVAR     VAR(&RTCD) VALUE('*ERROR')
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          SCC000303 ended abnormally - see job +
                          log') TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)

ENDPGM:
             CHGVAR     VAR(&OPTN) VALUE('*FREE  ')
             CALL       PGM(AOBKLBR0) PARM(&RTNCD &OPTN &PFMT)
             ENDPGM

