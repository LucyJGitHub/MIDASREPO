/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('Midas SC 24x7 API Layer Setup')                       */
/*********************************************************************/
/*                                                                   */
/*       Midas - System Control Module                               */
/*                                                                   */
/*       SCC000357 - Midas SC 24x7 API Layer setup                   */
/*                                                                   */
/*       (c) Finastra International Limited 2020                     */
/*                                                                   */
/*       Last Amend No. CAP735             Date 12May20              */
/*       Prev Amend No. CAP734             Date 12May20              */
/*                      CAP702  *CREATE    Date 12May20              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CAP735 - 24x7 APIs - GL Accounts API                        */
/*       CAP734 - 24x7 APIs - SD Customer Details API                */
/*       CAP702 - 24x7 APIs - Common Processing                      */
/*                                                                   */
/*********************************************************************/
             PGM

             DCL        VAR(&PRE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&PREGG) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)

/* Variables for zone libs  */
             DCL        VAR(&DMLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DVLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&JLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DTLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&XLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&INVLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&XPLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&CILLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&ALLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DDLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DZLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DBLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&BANKLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&RZLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&IRLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DDBFLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&DILIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&HFLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&INT2) TYPE(*CHAR) LEN(6)
             DCL        VAR(&RBALIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&EXTLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&NGTLB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&NDBLB) TYPE(*CHAR) LEN(8)

/* Variables for global libs  */
             DCL        VAR(&GMLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GINVLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GXLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GXPLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GCILLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GALLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GDLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GVLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GPLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GXPLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GTALIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GALLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GBLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GBANKLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GNCLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GFCLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GIRLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GJLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&CBSLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&CBALIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&BFLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GZLIB) TYPE(*CHAR) LEN(8)

             DCL        VAR(&LNGTEN) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DVALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DPALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GVALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GMALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GPALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GTALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SARD) TYPE(*CHAR) LEN(6)
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7) VALUE(' ')
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)
             DCL        VAR(&CAP702) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&CAP734) TYPE(*CHAR) LEN(1) VALUE('N')  /*CAP734*/
             DCL        VAR(&CAP735) TYPE(*CHAR) LEN(1) VALUE('N')  /*CAP735*/
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2020')

/* Declare files for Loop1 to Loop4 */
             DCLF       FILE(SCSRACTD) OPNID(SCC)
             DCLF       FILE(SCSRABTD) OPNID(SCB)
             DCLF       FILE(GPSRACTD) OPNID(GPC)
             DCLF       FILE(GPSRABTD) OPNID(GPB)

/* Retrieve Zone prefix                */
             RTVDTAARA  DTAARA(SDSTAT *ALL) RTNVAR(&SDSTAT)
/**/
             CHGVAR     VAR(&PRE) VALUE(%SST(&SDSTAT 6 2))
             CHGVAR     VAR(&DMLIB) VALUE(&PRE *TCAT 'DMLIB')
             CHGVAR     VAR(&DPLIB) VALUE(&PRE *TCAT 'DPLIB')
             CHGVAR     VAR(&DVLIB) VALUE(&PRE *TCAT 'DVLIB')
             CHGVAR     VAR(&DTLIB) VALUE(&PRE *TCAT 'DTALIB')
             CHGVAR     VAR(&XLIB) VALUE(&PRE *TCAT 'XLIB')
             CHGVAR     VAR(&JLIB) VALUE(&PRE *TCAT 'JLIB')

             CHGVAR     VAR(&INVLIB) VALUE(&PRE *TCAT 'INVLIB')
             CHGVAR     VAR(&XPLIB) VALUE(&PRE *TCAT 'XPLIB')
             CHGVAR     VAR(&CILLIB) VALUE(&PRE *TCAT 'CILLIB')
             CHGVAR     VAR(&ALLIB) VALUE(&PRE *TCAT 'ALLIB')
             CHGVAR     VAR(&DDLIB) VALUE(&PRE *TCAT 'DDLIB')
             CHGVAR     VAR(&DZLIB) VALUE(&PRE *TCAT 'DZLIB')
             CHGVAR     VAR(&DBLIB) VALUE(&PRE *TCAT 'DBLIB')
             CHGVAR     VAR(&BANKLIB) VALUE(&PRE *TCAT 'BANKLIB')
             CHGVAR     VAR(&RZLIB) VALUE(&PRE *TCAT 'RZLIB')
             CHGVAR     VAR(&IRLIB) VALUE(&PRE *TCAT 'IRLIB')
             CHGVAR     VAR(&DDBFLIB) VALUE(&PRE *TCAT 'DDBFLIB')
             CHGVAR     VAR(&DILIB) VALUE(&PRE *TCAT 'DILIB')
             CHGVAR     VAR(&HFLIB) VALUE(&PRE *TCAT 'HFLIB')
             CHGVAR     VAR(&INT2) VALUE(&PRE *TCAT 'INT2')
             CHGVAR     VAR(&RBALIB) VALUE(&PRE *TCAT 'RBALIB')
             CHGVAR     VAR(&EXTLIB) VALUE(&PRE *TCAT 'EXTLIB')

             CHGVAR     VAR(&NDBLB) VALUE(&PRE *TCAT 'X24LIB')
             CHGVAR     VAR(&LNGTEN) VALUE(&PRE *TCAT 'BFMNGTEN')
             CHGVAR     VAR(&DVALLS) VALUE(&PRE *TCAT 'SAVDVALL')
             CHGVAR     VAR(&DMALLS) VALUE(&PRE *TCAT 'SAVDMALL')
             CHGVAR     VAR(&DPALLS) VALUE(&PRE *TCAT 'SAVDPALL')
             CHGVAR     VAR(&DTALLS) VALUE(&PRE *TCAT 'SAVDTALL')
             CHGVAR     VAR(&GVALLS) VALUE(&PRE *TCAT 'SAVGVALL')
             CHGVAR     VAR(&GMALLS) VALUE(&PRE *TCAT 'SAVGMALL')
             CHGVAR     VAR(&GPALLS) VALUE(&PRE *TCAT 'SAVGPALL')
             CHGVAR     VAR(&GTALLS) VALUE(&PRE *TCAT 'SAVGTALL')

/* Retrieve Global prefix              */
             CALL       PGM(GPRTVLIB) PARM(&PREGG)
             CHGVAR     VAR(&GMLIB) VALUE(&PREGG *TCAT 'GMLIB')

             CHGVAR     VAR(&GINVLIB) VALUE(&PREGG *TCAT 'GINVLIB')
             CHGVAR     VAR(&GXLIB) VALUE(&PREGG *TCAT 'GXLIB')
             CHGVAR     VAR(&GXPLIB) VALUE(&PREGG *TCAT 'GXPLIB')
             CHGVAR     VAR(&GCILLIB) VALUE(&PREGG *TCAT 'GCILLIB')
             CHGVAR     VAR(&GALLIB) VALUE(&PREGG *TCAT 'GALLIB')
             CHGVAR     VAR(&GDLIB) VALUE(&PREGG *TCAT 'GDLIB')
             CHGVAR     VAR(&GVLIB) VALUE(&PREGG *TCAT 'GVLIB')
             CHGVAR     VAR(&GPLIB) VALUE(&PREGG *TCAT 'GPLIB')
             CHGVAR     VAR(&GXPLIB) VALUE(&PREGG *TCAT 'GXPLIB')
             CHGVAR     VAR(&GTALIB) VALUE(&PREGG *TCAT 'GTALIB')
             CHGVAR     VAR(&GALLIB) VALUE(&PREGG *TCAT 'GALLIB')
             CHGVAR     VAR(&GBLIB) VALUE(&PREGG *TCAT 'GBLIB')
             CHGVAR     VAR(&GBANKLIB) VALUE(&PREGG *TCAT 'GBANKLIB')
             CHGVAR     VAR(&GNCLIB) VALUE(&PREGG *TCAT 'GNCLIB')
             CHGVAR     VAR(&GFCLIB) VALUE(&PREGG *TCAT 'GFCLIB')
             CHGVAR     VAR(&GIRLIB) VALUE(&PREGG *TCAT 'GIRLIB')
             CHGVAR     VAR(&GJLIB) VALUE(&PREGG *TCAT 'GJLIB')
             CHGVAR     VAR(&CBSLIB) VALUE(&PREGG *TCAT 'CBSLIB')
             CHGVAR     VAR(&CBALIB) VALUE(&PREGG *TCAT 'CBALIB')
             CHGVAR     VAR(&BFLIB) VALUE(&PREGG *TCAT 'BFLIB')
             CHGVAR     VAR(&GZLIB) VALUE(&PREGG *TCAT 'GZLIB')

/**   CHECK FOR SWITCHABLE FEATURE CAP702     */

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')
             CHGVAR     VAR(&SARD) VALUE('CAP702')

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)

             IF         COND(&RTCD *EQ '       ') THEN(DO)
                CHGVAR     VAR(&CAP702) VALUE('Y')
             ENDDO

/**   CHECK FOR SWITCHABLE FEATURE CAP734     */     /*CAP734*/

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')  /*CAP734*/
             CHGVAR     VAR(&SARD) VALUE('CAP734')   /*CAP734*/

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)  /*CAP734*/

             IF         COND(&RTCD = '       ') THEN(CHGVAR +
                          VAR(&CAP734) VALUE('Y'))   /*CAP734*/

/**   CHECK FOR SWITCHABLE FEATURE CAP735     */     /*CAP735*/

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')  /*CAP735*/
             CHGVAR     VAR(&SARD) VALUE('CAP735')   /*CAP735*/

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)  /*CAP735*/

             IF         COND(&RTCD = '       ') THEN(CHGVAR +
                          VAR(&CAP735) VALUE('Y'))   /*CAP735*/

             IF         COND(&CAP702 *EQ 'Y') THEN(DO)

/* 1a. Create 24x7 zone Library (i.e. zzDZLIB)   */
             CRTLIB     LIB(&DZLIB) TYPE(*TEST) TEXT('BF MIDAS 24x7 Zone +
                          Library') ASP(1)
             MONMSG     MSGID(CPF2111)

/*           CLRLIB     LIB(&DZLIB)    */

/* 1b. Create 24x7 global Library (i.e. ggGZLIB)   */
             CRTLIB     LIB(&GZLIB) TYPE(*TEST) TEXT('BF MIDAS 24x7 Global +
                          Library') ASP(1)
             MONMSG     MSGID(CPF2111)
             CLRLIB     LIB(&GZLIB)

/* 1c. Create 24x7 Library for journal and jobd (i.e. zzX24LIB)   */
             CRTLIB     LIB(&NDBLB) TYPE(*TEST) TEXT('BF MIDAS 24x7 X +
                          Library') ASP(1)
             MONMSG     MSGID(CPF2111)
             CLRLIB     LIB(&NDBLB)

/* 1d. Create 24x7 Library for backup libs (i.e. zzBFMNGTEN) */
             CRTLIB     LIB(&LNGTEN) TYPE(*TEST) TEXT('BF MIDAS 24x7 +
                          Backup library') ASP(1)
             MONMSG     MSGID(CPF2111)
/*           CLRLIB     LIB(&LNGTEN)   */

/* 2a. Create Backup of LF from LF library (i.e. zzDVLIB)   */
             CRTSAVF    FILE(&LNGTEN/&DVALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&DVALLS)
             SAVLIB     LIB(&DVLIB) DEV(*SAVF) SAVF(&LNGTEN/&DVALLS)

/* 2b. Create Backup of LF from LF global library (i.e. ggGVLIB)   */
             CRTSAVF    FILE(&LNGTEN/&GVALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&GVALLS)
             SAVLIB     LIB(&GVLIB) DEV(*SAVF) SAVF(&LNGTEN/&GVALLS)

/* 3a. Move SET of LF from zzDVLIB into zzDMLIB, zzDPLIB and zzDTALIB   */

LOOP1:       RCVF       OPNID(SCC)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT1))
             IF         COND(&SCC_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP1))

             IF COND(((&SCC_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                ((&SCC_SASARN = 'CAP735') *AND (&CAP735 = 'Y')) *OR +
                ((&SCC_SASARN = 'CAP702') *AND (&CAP702 = 'Y'))) THEN(DO)

             IF         COND((&SCC_SATYPE *EQ 'LF') *AND +
                          (&SCC_SADEPN *EQ 'DM')) THEN(DO)
                MOVOBJ     OBJ(&DVLIB/&SCC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DMLIB)
                          GOTO LOOP1
             ENDDO

             IF         COND((&SCC_SATYPE *EQ 'LF') *AND +
                          (&SCC_SADEPN *EQ 'DP')) THEN(DO)
                MOVOBJ     OBJ(&DVLIB/&SCC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DPLIB)
                          GOTO LOOP1
             ENDDO

             IF         COND((&SCC_SATYPE *EQ 'LF') *AND (&SCC_SADEPN +
                          *EQ 'DT')) THEN(DO)
             MOVOBJ     OBJ(&DVLIB/&SCC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DTLIB)
                          GOTO LOOP1
             ENDDO
                ENDDO       /*CAP734*/
EXIT1:

/* 4a. Move SET of LF from ggGVLIB into ggGMLIB, ggGPLIB and ggGTALIB   */

LOOP2:       RCVF       OPNID(GPC)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT2))
             IF         COND(&GPC_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP2))

             IF COND(((&GPC_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                 ((&GPC_SASARN = 'CAP735') *AND (&CAP735 = 'Y')) *OR +
                 ((&GPC_SASARN = 'CAP702') *AND (&CAP702 = 'Y'))) THEN(DO)

             IF         COND((&GPC_SATYPE *EQ 'LF') *AND +
                          (&GPC_SADEPN *EQ 'GM')) THEN(DO)
                MOVOBJ     OBJ(&GVLIB/&GPC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GMLIB)
                          GOTO LOOP2
             ENDDO

             IF         COND((&GPC_SATYPE *EQ 'LF') *AND +
                          (&GPC_SADEPN *EQ 'GP')) THEN(DO)
                MOVOBJ     OBJ(&GVLIB/&GPC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GPLIB)
                          GOTO LOOP2
             ENDDO

             IF         COND((&GPC_SATYPE *EQ 'LF') *AND +
                          (&GPC_SADEPN *EQ 'GT')) THEN(DO)
             MOVOBJ     OBJ(&GVLIB/&GPC_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GTALIB)
                          GOTO LOOP2
             ENDDO
                ENDDO       /*CAP734*/

EXIT2:

/* 5a. Move SET of LF from zzDVLIB into zzDMLIB, zzDPLIB and zzDTALIB   */

LOOP3:       RCVF       OPNID(SCB)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT3))
             IF         COND(&SCB_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP3))

             IF COND(((&SCB_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                    ((&SCB_SASARN = 'CAP735') *AND (&CAP735 = 'Y'))) THEN(DO)

             IF         COND((&SCB_SATYPE *EQ 'LF') *AND +
                          (&SCB_SADEPN *EQ 'DM')) THEN(DO)
                MOVOBJ     OBJ(&DVLIB/&SCB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DMLIB)
                          GOTO LOOP3
             ENDDO

             IF         COND((&SCB_SATYPE *EQ 'LF') *AND +
                          (&SCB_SADEPN *EQ 'DP')) THEN(DO)
                MOVOBJ     OBJ(&DVLIB/&SCB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DPLIB)
                          GOTO LOOP3
             ENDDO

             IF         COND((&SCB_SATYPE *EQ 'LF') *AND +
                          (&SCB_SADEPN *EQ 'DT')) THEN(DO)
             MOVOBJ     OBJ(&DVLIB/&SCB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&DTLIB)
                          GOTO LOOP3
             ENDDO
                ENDDO       /*CAP734*/
EXIT3:

/* 6a. Move SET of LF from ggGVLIB into ggGMLIB, ggGPLIB and ggGTALIB   */

LOOP4:       RCVF       OPNID(GPB)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT4))
             IF         COND(&GPB_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP4))

             IF COND(((&GPB_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                 ((&GPB_SASARN = 'CAP735') *AND (&CAP735 = 'Y'))) THEN(DO)

                   IF         COND(&GPB_SATYPE *EQ 'LF' *AND &GPB_SADEPN *EQ +
                                'GM') THEN(DO)
                MOVOBJ     OBJ(&GVLIB/&GPB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GMLIB)
                          GOTO LOOP4
             ENDDO

             IF         COND((&GPB_SATYPE *EQ 'LF') *AND +
                          (&GPB_SADEPN *EQ 'GP')) THEN(DO)
                MOVOBJ     OBJ(&GVLIB/&GPB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GPLIB)
                          GOTO LOOP4
             ENDDO

             IF         COND((&GPB_SATYPE *EQ 'LF') *AND +
                          (&GPB_SADEPN *EQ 'GT')) THEN(DO)
             MOVOBJ     OBJ(&GVLIB/&GPB_SAOBJ) OBJTYPE(*FILE) +
                             TOLIB(&GTALIB)
                          GOTO LOOP4
             ENDDO
                ENDDO       /*CAP734*/

EXIT4:

/* 7a. Save all objects from zzDMLIB                       */
             CRTSAVF    FILE(&LNGTEN/&DMALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&DMALLS)
             SAVLIB     LIB(&DMLIB) DEV(*SAVF) SAVF(&LNGTEN/&DMALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 7b. Save all objects from zzDPLIB                       */
             CRTSAVF    FILE(&LNGTEN/&DPALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&DPALLS)
             SAVLIB     LIB(&DPLIB) DEV(*SAVF) SAVF(&LNGTEN/&DPALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 7c. Save all objects from ggGMLIB                       */
             CRTSAVF    FILE(&LNGTEN/&GMALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&GMALLS)
             SAVLIB     LIB(&GMLIB) DEV(*SAVF) SAVF(&LNGTEN/&GMALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 7d. Save all objects from ggGPLIB                       */
             CRTSAVF    FILE(&LNGTEN/&GPALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&GPALLS)
             SAVLIB     LIB(&GPLIB) DEV(*SAVF) SAVF(&LNGTEN/&GPALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 7e. SAVE ALL OBJECTS FROM zzDTALIB                      */
             CRTSAVF    FILE(&LNGTEN/&DTALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&DTALLS)
             SAVLIB     LIB(&DTLIB) DEV(*SAVF) SAVF(&LNGTEN/&DTALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 7f. SAVE ALL OBJECTS FROM ggGTALIB    */
             CRTSAVF    FILE(&LNGTEN/&GTALLS)
             MONMSG     MSGID(CPF5813 CPF7302)
             CLRSAVF    FILE(&LNGTEN/&GTALLS)
             SAVLIB     LIB(&GTALIB) DEV(*SAVF) SAVF(&LNGTEN/&GTALLS) ACCPTH(*YES) +
                          PVTAUT(*YES)

/* 8a. Move Back SET of LF from zzDMLIB, zzDPLIB and zzDTALIB into zzDVLIB    */
             CALL       PGM(SCC000358)

/* 12a. Restore SET of PF from zzDMLIB, zzDPLIB and zzDTALIB to zzDZLIB   */
             CALL       PGM(SCC000359)

/* 16a. Restore SET of LF from zzDMLIB, zzDPLIB and zzDTALIB to zzDZLIB    */
             CALL       PGM(SCC000360)

/* 20. Create New Journal in zzX24LIB                      */
             CRTJRNRCV  JRNRCV(&NDBLB/IR00000001)
             CRTJRN     JRN(&NDBLB/ICJRN24X7)  JRNRCV(&NDBLB/IR00000001) +
                          MNGRCV(*SYSTEM) DLTRCV(*YES)

/* 21. End Journaling at zzDZLIB                           */
             CALL       PGM(SCC000361)

/* 22. Start Journaling at zzDZLIB                         */
/*           STRJRNPF FILE(&DZLIB/*ALL) JRN(&NDBLB/ICJRN24X7) IMAGES(*BOTH) +
             OMTJRNE(*OPNCLO) */
/*           MONMSG     MSGID(CPF7030) */
             CALL       PGM(SCC000362)

/* 23. Start Object (DTAARA) Journaling at zzDZLIB         */
             CRTDUPOBJ  OBJ(MNATN) FROMLIB(&DMLIB) OBJTYPE(*DTAARA) +
                          TOLIB(&DZLIB) NEWOBJ(MNATN)
             ENDJRNOBJ  OBJ(&DZLIB/MNATN)    OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPC7002)
             STRJRNOBJ  OBJ(&DZLIB/MNATN)    OBJTYPE(*DTAARA) JRN(&NDBLB/ICJRN24X7)

             CRTDUPOBJ  OBJ(MPHAS) FROMLIB(&DMLIB) OBJTYPE(*DTAARA) +
                          TOLIB(&DZLIB) NEWOBJ(MPHAS)
             ENDJRNOBJ  OBJ(&DZLIB/MPHAS)    OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPC7002)
             STRJRNOBJ  OBJ(&DZLIB/MPHAS)    OBJTYPE(*DTAARA) JRN(&NDBLB/ICJRN24X7)

             CRTDUPOBJ  OBJ(RUNDAT) FROMLIB(&DMLIB) OBJTYPE(*DTAARA) +
                          TOLIB(&DZLIB) NEWOBJ(RUNDAT)
             ENDJRNOBJ  OBJ(&DZLIB/RUNDAT)   OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPC7002)
             STRJRNOBJ  OBJ(&DZLIB/RUNDAT)   OBJTYPE(*DTAARA) JRN(&NDBLB/ICJRN24X7)

             CRTDUPOBJ  OBJ(SCCMTJOB) FROMLIB(&DMLIB) OBJTYPE(*DTAARA) +
                          TOLIB(&DZLIB) NEWOBJ(SCCMTJOB)
             ENDJRNOBJ  OBJ(&DZLIB/SCCMTJOB) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPC7002)
             STRJRNOBJ  OBJ(&DZLIB/SCCMTJOB) OBJTYPE(*DTAARA) JRN(&NDBLB/ICJRN24X7)

             CRTDUPOBJ  OBJ(SDSTAT) FROMLIB(&DMLIB) OBJTYPE(*DTAARA) +
                          TOLIB(&DZLIB) NEWOBJ(SDSTAT)
             ENDJRNOBJ  OBJ(&DZLIB/SDSTAT)   OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPC7002)
             STRJRNOBJ  OBJ(&DZLIB/SDSTAT)   OBJTYPE(*DTAARA) JRN(&NDBLB/ICJRN24X7)

/* 24. Start zzDZLIB Library Journaling                   */
             STRJRNLIB  LIB(&DZLIB) JRN(&NDBLB/ICJRN24X7) INHRULES((*ALL *ALLOPR +
                          *INCLUDE *AFTER *OPNCLO))

/* 25. Create JNSTAT DTAARA in zzDZLIB Library            */
             CRTDUPOBJ  OBJ(JNSTAT) FROMLIB(&JLIB) OBJTYPE(*DTAARA) TOLIB(&DZLIB) +
                          NEWOBJ(JNSTAT)
             ENDJRNOBJ  OBJ(&DZLIB/JNSTAT) OBJTYPE(*DTAARA)
             CHGDTAARA  DTAARA(&DZLIB/JNSTAT *ALL) VALUE(' ')

/* 26. Copy MIDASIC from zzXLIB to zzX24LIB               */
             CRTDUPOBJ  OBJ(MIDASIC) FROMLIB(&XLIB) OBJTYPE(*JOBD) TOLIB(&NDBLB) +
             NEWOBJ(MIDAS24X7)
             MONMSG     MSGID(CPD2104)

/* 27. Change zzX24LIB/MIDAS24X7-Add First Lib zzX24LIB, zzDZLIB to LIBL*/
             CHGJOBD    JOBD(&NDBLB/MIDAS24X7) INLLIBL(&NDBLB &DZLIB +
                          &INVLIB &XLIB &XPLIB &CILLIB &ALLIB &DDLIB +
                          &DVLIB &DPLIB &DBLIB +
                          &BANKLIB &RZLIB RZ_BF_LIB NC_DD_LIB +
                          FC_DD_LIB &IRLIB B21_RZ B20_R1203Z +
                          B14_R1106Z B14CBASZ &JLIB &DDBFLIB &DILIB +
                          &HFLIB &INT2 &RBALIB &EXTLIB &GINVLIB +
                          &GXLIB &GXPLIB &GCILLIB &GALLIB &GDLIB +
                          &GVLIB &GPLIB &GMLIB &GTALIB &GBLIB +
                          &GBANKLIB &GNCLIB &GFCLIB &GIRLIB B21_RG +
                          B20_R1203G B14_R1106G B14CBASG &GJLIB +
                          &CBSLIB &CBALIB &BFLIB LIBHTTP123 QGPL +
                          QTEMP QMQM)
             ENDDO
             GOTO       CMDLBL(END)

ERROR:

             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSG('Program SCC000357 - 24x7 API Layer +
                          setup ENDED ABNORMALLY') TOPGMQ(*EXT) +
                          TOMSGQ(*SYSOPR)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)

END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited 2020')
             ENDPGM

