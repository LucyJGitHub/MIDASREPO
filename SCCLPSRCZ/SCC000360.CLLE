/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('Midas SC 24x7 API Layer Setup')                       */
/*********************************************************************/
/*                                                                   */
/*       Midas - System Control Module                               */
/*                                                                   */
/*       SCC000360 - Midas SC 24x7 API Layer setup                   */
/*                   Restore LFs to DZLIB                            */
/*                                                                   */
/*       (c) Finastra International Limited 2020                     */
/*                                                                   */
/*       Last Amend No. CAP735             Date 12May20              */
/*       Prev Amend No. CAP734             Date 12May20              */
/*                      CAP702  *CREATE    Date 12May20              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CAP735 - 24x7 APIs - GL Accounts API.                       */
/*       CAP734 - 24x7 APIs - SD Customer Details API                */
/*       CAP702 - 24x7 APIs - Common Processing                      */
/*                                                                   */
/*********************************************************************/
             PGM

             DCL        VAR(&PRE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&PREGG) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)

/* Variables for zone libs  */
             DCL        VAR(&DMLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DVLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DTLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&DZLIB) TYPE(*CHAR) LEN(8)

/* Variables for global libs  */
             DCL        VAR(&GMLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GVLIB) TYPE(*CHAR) LEN(8)
             DCL        VAR(&GPLIB) TYPE(*CHAR) LEN(9)
             DCL        VAR(&GTALIB) TYPE(*CHAR) LEN(9)

             DCL        VAR(&LNGTEN) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DVALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DPALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GVALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GMALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GPALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GTALLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&SARD) TYPE(*CHAR) LEN(6)
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7) VALUE(' ')
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)
             DCL        VAR(&CAP702) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&CAP734) TYPE(*CHAR) LEN(1) VALUE('N')  /*CAP734*/
             DCL        VAR(&CAP735) TYPE(*CHAR) LEN(1) VALUE('N')  /*CAP735*/
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2020')

/* Declare files for Loop13 to Loop16 */
             DCLF       FILE(SCSRACTD) OPNID(S4C)
             DCLF       FILE(SCSRABTD) OPNID(S4B)
             DCLF       FILE(GPSRACTD) OPNID(G4C)
             DCLF       FILE(GPSRABTD) OPNID(G4B)

/* Retrieve Zone prefix                */
             RTVDTAARA  DTAARA(SDSTAT *ALL) RTNVAR(&SDSTAT)
/**/
             CHGVAR     VAR(&PRE) VALUE(%SST(&SDSTAT 6 2))
             CHGVAR     VAR(&DMLIB) VALUE(&PRE *TCAT 'DMLIB')
             CHGVAR     VAR(&DPLIB) VALUE(&PRE *TCAT 'DPLIB')
             CHGVAR     VAR(&DVLIB) VALUE(&PRE *TCAT 'DVLIB')
             CHGVAR     VAR(&DTLIB) VALUE(&PRE *TCAT 'DTALIB')
             CHGVAR     VAR(&DZLIB) VALUE(&PRE *TCAT 'DZLIB')

             CHGVAR     VAR(&LNGTEN) VALUE(&PRE *TCAT 'BFMNGTEN')
             CHGVAR     VAR(&DVALLS) VALUE(&PRE *TCAT 'SAVDVALL')
             CHGVAR     VAR(&DMALLS) VALUE(&PRE *TCAT 'SAVDMALL')
             CHGVAR     VAR(&DPALLS) VALUE(&PRE *TCAT 'SAVDPALL')
             CHGVAR     VAR(&DTALLS) VALUE(&PRE *TCAT 'SAVDTALL')
             CHGVAR     VAR(&GVALLS) VALUE(&PRE *TCAT 'SAVGVALL')
             CHGVAR     VAR(&GMALLS) VALUE(&PRE *TCAT 'SAVGMALL')
             CHGVAR     VAR(&GPALLS) VALUE(&PRE *TCAT 'SAVGPALL')
             CHGVAR     VAR(&GTALLS) VALUE(&PRE *TCAT 'SAVGTALL')

/* Retrieve Global prefix              */
             CALL       PGM(GPRTVLIB) PARM(&PREGG)
             CHGVAR     VAR(&GMLIB) VALUE(&PREGG *TCAT 'GMLIB')
             CHGVAR     VAR(&GVLIB) VALUE(&PREGG *TCAT 'GVLIB')
             CHGVAR     VAR(&GPLIB) VALUE(&PREGG *TCAT 'GPLIB')
             CHGVAR     VAR(&GTALIB) VALUE(&PREGG *TCAT 'GTALIB')

/**   CHECK FOR SWITCHABLE FEATURE CAP702     */

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')
             CHGVAR     VAR(&SARD) VALUE('CAP702')

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)

             IF         COND(&RTCD *EQ '       ') THEN(DO)
                CHGVAR     VAR(&CAP702) VALUE('Y')
             ENDDO

/**   CHECK FOR SWITCHABLE FEATURE CAP734     */     /*CAP734*/

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')  /*CAP734*/
             CHGVAR     VAR(&SARD) VALUE('CAP734')   /*CAP734*/

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)  /*CAP734*/

             IF         COND(&RTCD = '       ') THEN(CHGVAR +
                          VAR(&CAP734) VALUE('Y'))   /*CAP734*/

/**   CHECK FOR SWITCHABLE FEATURE CAP735     */     /*CAP735*/

             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')  /*CAP735*/
             CHGVAR     VAR(&SARD) VALUE('CAP735')   /*CAP735*/

             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &SCSARD)  /*CAP735*/

             IF         COND(&RTCD = '       ') THEN(CHGVAR +
                          VAR(&CAP735) VALUE('Y'))   /*CAP735*/

/* 16a. Restore SET of LF from zzDMLIB, zzDPLIB and zzDTALIB to zzDZLIB    */

LOOP13:      RCVF       OPNID(S4C)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT13))
             IF         COND(&S4C_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP13))

             IF COND(((&S4C_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                    ((&S4C_SASARN = 'CAP735') *AND (&CAP735 = 'Y')) *OR +
                    ((&S4C_SASARN = 'CAP702') *AND (&CAP702 = 'Y'))) THEN(DO)

             IF         COND((&S4C_SATYPE *EQ 'LF') *AND +
                          (&S4C_SADEPN *EQ 'DM')) THEN(DO)
             RSTOBJ     OBJ(&S4C_SAOBJ) SAVLIB(&DMLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DMALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP13
             ENDDO

             IF         COND((&S4C_SATYPE *EQ 'LF') *AND +
                          (&S4C_SADEPN *EQ 'DP')) THEN(DO)
             RSTOBJ     OBJ(&S4C_SAOBJ) SAVLIB(&DPLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DPALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP13
             ENDDO

             IF         COND((&S4C_SATYPE *EQ 'LF') *AND +
                          (&S4C_SADEPN *EQ 'DT')) THEN(DO)
             RSTOBJ     OBJ(&S4C_SAOBJ) SAVLIB(&DTLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DTALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP13
             ENDDO
                          GOTO LOOP13
                ENDDO       /*CAP734*/
                          GOTO LOOP13
EXIT13:

/* 17a. Restore SET of LF from zzDMLIB, zzDPLIB and zzDTALIB to zzDZLIB    */

LOOP14:      RCVF       OPNID(S4B)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT14))
             IF         COND(&S4B_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP14))

             IF         COND(((&S4B_SASARN = 'CAP734') *AND (&CAP734 +
                          = 'Y')) *OR ((&S4B_SASARN = 'CAP735') +
                          *AND (&CAP735 = 'Y'))) THEN(DO) /*CAP734*/

             IF         COND((&S4B_SATYPE *EQ 'LF') *AND +
                          (&S4B_SADEPN *EQ 'DM')) THEN(DO)
             RSTOBJ     OBJ(&S4B_SAOBJ) SAVLIB(&DMLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DMALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP14
             ENDDO

             IF         COND((&S4B_SATYPE *EQ 'LF') *AND +
                          (&S4B_SADEPN *EQ 'DP')) THEN(DO)
             RSTOBJ     OBJ(&S4B_SAOBJ) SAVLIB(&DPLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DPALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP14
             ENDDO

             IF         COND((&S4B_SATYPE *EQ 'LF') *AND +
                          (&S4B_SADEPN *EQ 'DT')) THEN(DO)
             RSTOBJ     OBJ(&S4B_SAOBJ) SAVLIB(&DTLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&DTALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP14
             ENDDO
                          GOTO LOOP14
                ENDDO       /*CAP734*/
                          GOTO LOOP14
EXIT14:

/* 18a. Restore SET of LF from ggGMLIB, ggGPLIB and ggGTALIB to ggDZLIB    */

LOOP15:      RCVF       OPNID(G4C)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT15))
             IF         COND(&G4C_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP15))

             IF COND(((&G4C_SASARN = 'CAP734') *AND (&CAP734 = 'Y')) *OR +
                    ((&G4C_SASARN = 'CAP735') *AND (&CAP735 = 'Y')) *OR +
                    ((&G4C_SASARN = 'CAP702') *AND (&CAP702 = 'Y'))) THEN(DO)

             IF         COND((&G4C_SATYPE *EQ 'LF') *AND (&G4C_SADEPN +
                          *EQ 'GM')) THEN(DO)
             RSTOBJ     OBJ(&G4C_SAOBJ) SAVLIB(&GMLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GMALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP15
             ENDDO

             IF         COND((&G4C_SATYPE *EQ 'LF') *AND +
                          (&G4C_SADEPN *EQ 'GP')) THEN(DO)
             RSTOBJ     OBJ(&G4C_SAOBJ) SAVLIB(&GPLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GPALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP15
             ENDDO

             IF         COND((&G4C_SATYPE *EQ 'LF') *AND +
                          (&G4C_SADEPN *EQ 'GT')) THEN(DO)
             RSTOBJ     OBJ(&G4C_SAOBJ) SAVLIB(&GTALIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GTALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP15
             ENDDO
                          GOTO LOOP15
                ENDDO       /*CAP734*/
                          GOTO LOOP15
EXIT15:

/* 19a. Restore SET of LF from ggGMLIB, ggGPLIB and ggGTALIB to ggDZLIB    */

LOOP16:      RCVF       OPNID(G4B)
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXIT16))
             IF         COND(&G4B_SATYPE *NE 'LF') THEN(GOTO CMDLBL(LOOP16))

             IF         COND(((&G4B_SASARN = 'CAP734') *AND (&CAP734 +
                          = 'Y')) *OR ((&G4B_SASARN = 'CAP735') +
                          *AND (&CAP735 = 'Y'))) THEN(DO) /*CAP734*/

             IF         COND((&G4B_SATYPE *EQ 'LF') *AND (&G4B_SADEPN *EQ 'GM')) THEN(DO)
             RSTOBJ     OBJ(&G4B_SAOBJ) SAVLIB(&GMLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GMALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP16
             ENDDO

             IF         COND((&G4B_SATYPE *EQ 'LF') *AND (&G4B_SADEPN *EQ 'GP')) THEN(DO)
             RSTOBJ     OBJ(&G4B_SAOBJ) SAVLIB(&GPLIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GPALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP16
             ENDDO

             IF         COND((&G4B_SATYPE *EQ 'LF') *AND +
                          (&G4B_SADEPN *EQ 'GT')) THEN(DO)
             RSTOBJ     OBJ(&G4B_SAOBJ) SAVLIB(&GTALIB) DEV(*SAVF) +
                          SAVF(&LNGTEN/&GTALLS) PVTAUT(*YES) RSTLIB(&DZLIB)
                          GOTO LOOP16
             ENDDO
                          GOTO LOOP16
                ENDDO       /*CAP734*/
                          GOTO LOOP16
EXIT16:


             GOTO       CMDLBL(END)

END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited 2020')
             ENDPGM

