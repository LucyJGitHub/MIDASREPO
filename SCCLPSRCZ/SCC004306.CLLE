/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas SC Journal drain phase processing')             */
/*********************************************************************/
/*                                                                   */
/*       Midas - System Control Module                               */
/*                                                                   */
/*       SCC004306- 'Journal Drain' Phase Processing                 */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Prev Amend No. BUG9619            Date 01Feb06              */
/* Midas Release 4.01 -----------------------------------------------*/
/*                      CSC011  *CREATE    Date 18Sep01              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       BUG9619 - Close of business components run long if journal  */
/*                 cache is enabled                                  */
/*       CSC011 - 24x7 Midas Availability                            */
/*                                                                   */
/*********************************************************************/
             PGM
 
/** Declare variables */
 
             DCL        VAR(&SCDRSTAT) TYPE(*CHAR) LEN(256)
             DCL        VAR(&MPRFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SBCH) TYPE(*CHAR) LEN(1)
             DCL        VAR(&SPRFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SXLIB) TYPE(*CHAR) LEN(6)
             DCL        VAR(&S2JRNE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CHGLIB) TYPE(*CHAR) LEN(1)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2002')
 
/** Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             RTVDTAARA  DTAARA(SCMAIN (4 1)) RTNVAR(&S2JRNE)
             RTVDTAARA  DTAARA(SC24X7 (1 2)) RTNVAR(&MPRFX)
             RTVDTAARA  DTAARA(SC24X7 (3 2)) RTNVAR(&SPRFX)
             RTVDTAARA  DTAARA(SCDRSTAT (4 1)) RTNVAR(&SBCH)
             RTVDTAARA  DTAARA(SCDRSTAT) RTNVAR(&SCDRSTAT)
             CHGVAR     VAR(&SXLIB) VALUE(&SPRFX *CAT 'XLIB')
 
             IF         COND(&S2JRNE *EQ ' ') THEN(DO)
/**********     SNDJRNE    JRN(ICJRN) TYPE('EG') ENTDTA('SCC004306') +
                             FILE(SDBANKPD) */                                           /*BUG9619*/
                SNDJRNE    JRN(ICJRN) TYPE('EG') ENTDTA('SCC004306') +
                             FILE(SDBANKPD) FORCE(*YES)                                  /*BUG9619*/
                SNDPGMMSG  MSG('SCC004306 - Journal entry ''EG'' sent +
                             to file SDBANKPD.') TOMSGQ(MOPERQ SC24X7Q)
                CHGDTAARA  DTAARA(SCMAIN (4 1)) VALUE('S')
             ENDDO
 
             RTVDTAARA  DTAARA(SCMAIN (4 1)) RTNVAR(&S2JRNE)
 
             IF         COND(&S2JRNE *EQ 'S') THEN(DO)
 REPEAT:        DLYJOB     DLY(120)
                RTVDTAARA  DTAARA(SCDRSTAT) RTNVAR(&SCDRSTAT)
 
/** Setup library list from 'MIDASIC' to Support System. */
 
                CALL       PGM(UPC0014) PARM(&SPRFX)
 
                CHGVAR     VAR(&CHGLIB) VALUE('Y')
                SBMJOB     CMD(CALL PGM(SCC000606)) JOB(DRMONITOR) +
                             JOBD(&SXLIB/DRJOBD) JOBQ(&SXLIB/DRJOBQ) +
                             PRTDEV(*JOBD) OUTQ(*JOBD) USER(*JOBD) +
                             INLLIBL(*JOBD) LOG(4 0 *SECLVL) +
                             LOGCLPGM(*YES)
 
 /** Single batch replication */
 
                IF         COND((&SBCH *EQ 'Y') *AND (%SST(&SCDRSTAT 15 +
                                 1) *NE 'E')) THEN(GOTO CMDLBL(REPEAT))
 
 /** Multiple batch replication */
 
 /** Batch 0 */
 
                IF         COND((%SST(&SCDRSTAT 5 1) *EQ 'Y') *AND +
                               (%SST(&SCDRSTAT 15 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 1 */
 
                IF         COND((%SST(&SCDRSTAT 6 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 16 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 2 */
 
                IF         COND((%SST(&SCDRSTAT 7 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 17 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 3 */
 
                IF         COND((%SST(&SCDRSTAT 8 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 18 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 4 */
 
                IF         COND((%SST(&SCDRSTAT 9 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 19 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 5 */
 
                IF         COND((%SST(&SCDRSTAT 10 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 20 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 6 */
 
                IF         COND((%SST(&SCDRSTAT 11 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 21 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 7 */
 
                IF         COND((%SST(&SCDRSTAT 12 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 22 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 8 */
 
                IF         COND((%SST(&SCDRSTAT 13 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 23 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
 
 /** Batch 9 */
 
                IF         COND((%SST(&SCDRSTAT 14 1) *EQ 'Y') *AND +
                                (%SST(&SCDRSTAT 24 1) *NE 'E')) THEN(GOTO +
                                      CMDLBL(REPEAT))
             ENDDO
 
             GOTO       CMDLBL(END)
 
/** Abnormal termination */
 
 ABNOR:      CHGJOB SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          SCC004306 ended abnormally - see job +
                          log') TOMSGQ(MOPERQ SC24X7Q)
             MONMSG       MSGID(CPF0000 MCH0000)
 
/** Setup library list from 'MIDASIC' to Main System. */
 
 END:        IF         COND(&CHGLIB *EQ 'Y') THEN(CALL PGM(UPC0014) +
                          PARM(&MPRFX))
             ENDPGM
