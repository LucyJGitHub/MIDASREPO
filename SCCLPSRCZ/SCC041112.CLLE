/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SC Input cycle initiation - G DL')              */
/*********************************************************************/
/*                                                                   */
/*       Midas - System Control Module                               */
/*                                                                   */
/*       SCC041112 - Input Cycle Initiation DL                       */
/*                                                                   */
/*       (c) Finastra International Limited 2012                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. CSC056  *CREATE    Date 06Aug12              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CSC056 - COB Restructure - SC COB Optimisation Phase 1      */
/*                                                                   */
/*********************************************************************/
             PGM
 
             DCL        VAR(&MMOD) TYPE(*CHAR) LEN(256)
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&PRE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&SDSTAT) TYPE(*CHAR) LEN(256)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(10)
 
/* Journalling variables */
 
             DCL        VAR(&CSEQA) TYPE(*CHAR) LEN(5)
             DCL        VAR(&CNAM) TYPE(*CHAR) LEN(10) VALUE( +
                        'SCC041112')
             DCL        VAR(&CSEQ) TYPE(*DEC) LEN(5 0) VALUE(00001)
             DCL        VAR(&STEXT) TYPE(*CHAR) LEN(25)
             DCL        VAR(&SEVENT) TYPE(*CHAR) LEN(15)
             DCL        VAR(&JOB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&USR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NBR) TYPE(*CHAR) LEN(6)
             DCL        VAR(&START) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&FINISH) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&SJRNRCVR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FJRNRCVR) TYPE(*CHAR) LEN(10)
 
             COPYRIGHT  TEXT('(c) Finastra International Limited +
                          2012')
 
/* Global Monitor Message */
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Start Journalling */
 
             CHGVAR     VAR(&CSEQA) VALUE(&CSEQ)
             CHGVAR     VAR(&STEXT) VALUE('Start of ' *CAT &CNAM +
                           *CAT &CSEQA)
             CHGVAR     VAR(&SEVENT) VALUE(&CNAM *TCAT &CSEQA)
             SCWRTJREG  EVENT(&SEVENT) COMP(&CNAM) CMPSEQ(&CSEQ) +
                           FLAG('S') TEXT(&STEXT)
 
/* Get Modules Installed */
 
             RTVDTAARA  DTAARA(MMOD) RTNVAR(&MMOD)
 
/* Retail */
 
             IF         (%SST(&MMOD 16 1) = 'Y') THEN(DO)
 
/* Shadow post - DL */
 
                 CALL       PGM(DLC10)
                 IF         COND(*NOT %SWITCH(XXXXXX00)) THEN(GOTO +
                              CMDLBL(DBETAG))
             ENDDO
 
/* Successful completion */
 
             GOTO       CMDLBL(ENDPGM)
 
/* Database error processing */
 
DBETAG:
 
/* Retrieve database error information from LDA */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
               RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
               SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOMSGQ(MOPERQ)
             ENDDO
 
/* Abnormal error processing */
 
ABNOR:
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
             SNDPGMMSG  MSG('Program SCC041112 ended abnormally.') +
                          TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000)
 
/* Retrieve attributes of current job */
 
             RTVJOBA    JOB(&JOB) USER(&USR) NBR(&NBR)
 
/* Retrieve the most recent journal entry sequence number for the */
/* specific job. */
 
             RTVJRNE    JRN(ICJRN) RCVRNG(*CURCHAIN) +
                          SEARCH(*DESCEND) JOB(&NBR/&USR/&JOB) +
                          FROMENT(*LAST) TOENT(*FIRST) +
                          RTNRCV(&SJRNRCVR) RTNSEQNBR(&START)
             MONMSG     MSGID(CPF0000 MCH0000) EXEC(DO)
                  CHGVAR     VAR(&START) VALUE(0)
             ENDDO
 
/* Determine starting journal sequence number of current job. */
 
             SCRTVJEVT  EVENT(&SEVENT) FLAG('S') RECEIVER( +
                        &FJRNRCVR) SEQ(&FINISH)
 
/* Remove journal changes. */
 
             IF         COND((&START *NE 0) *AND (&FINISH *NE 0)) +
                           THEN(DO)
                RMVJRNCHG  JRN(ICJRN) FILE((DLOPOSPD)) +
                       RCVRNG(&SJRNRCVR &FJRNRCVR) FROMENT(&START) +
                       TOENT(&FINISH)
                  MONMSG MSGID(CPF7049 CPF7042 CPF9801 CPF7041)
             ENDDO
 
ENDPGM:
 
/* Write current journal sequence number to file SCJSEQPD */
 
             CHGVAR     VAR(&STEXT) VALUE(' ')
             CHGVAR     VAR(&STEXT) VALUE('End of ' *CAT &CNAM +
                          *CAT &CSEQA)
             SCWRTJREG  EVENT(&SEVENT) COMP(&CNAM) CMPSEQ(&CSEQ) +
                           FLAG('E') TEXT(&STEXT)
 
             ENDPGM
