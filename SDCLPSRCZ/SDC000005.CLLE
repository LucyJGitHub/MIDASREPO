/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Initialisation Program for CSW203')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - Standing Data Module                                */
/*                                                                   */
/*       SDC000005 - Initialisation Program for CSW203 Control       */
/*                                                                   */
/*       (c) Finastra International Limited 2003                     */
/*                                                                   */
/*       Last Amend No. MD056888           Date 20Sep20              */
/*       Prev Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CSW203  *CREATE    Date 26May03              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD056888 - Deliverable Data Split for SDCODEPD             */
/*       MD046248 - Finastra Rebranding                              */
/*       CSW203 - SWIFT 2003 Standards Update                        */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PRTCD &PMODE)

             COPYRIGHT  TEXT('(c) Finastra International Limited +
                          2003')

             DCL        VAR(&PRTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PMODE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&LDA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&MEM)  TYPE(*CHAR) LEN(50)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')

/* Declare the variables to check the enhancements file */

             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7) +
                          VALUE('*VERIFY')
             DCL        VAR(&SARD) TYPE(*CHAR) LEN(6)
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)

/* Declare the work indicator of enhancements file */

             DCL        VAR(&CFT13) TYPE(*CHAR) LEN(1) +
                          VALUE('N')
             DCL        VAR(&CFT14) TYPE(*CHAR) LEN(1) +
                          VALUE('N')

/* Monitor for any errors and send appropriate message to MOPERQ */

             MONMSG     MSGID(RPG0000 CPF0000 MCH0000) EXEC(GOTO +
                          CMDLBL(ERROR))

/* Send Pgm Message */

             CHGVAR     VAR(&MEM) VALUE('SDC000005 - Initialisation +
                          Program for CSW203')
             SNDPGMMSG  MSG(&MEM) TOMSGQ(MRUNQ)

/* Clear switches */

             CHGJOB     SWS(00000000)

/** Mode 1 (First call) or Mode 2 (Second call) */

             IF         COND((&PMODE *EQ '1') *OR (&PMODE *EQ '2')) +
                          THEN(DO)

/* Check if enhancement CFT013 in installed */

             CHGVAR     VAR(&SARD) VALUE('CFT013')
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &FMT)
             IF         COND(&RTCD *EQ '       ') THEN(DO)
             CHGVAR     VAR(&CFT13) VALUE('Y')
             ENDDO

/* Check if enhancement CFT014 in installed */

             CHGVAR     VAR(&SARD) VALUE('CFT014')
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD &FMT)
             IF         COND(&RTCD *EQ '       ') THEN(DO)
             CHGVAR     VAR(&CFT14) VALUE('Y')
             ENDDO

/* If CFT013 or CFT014 is installed */

             IF         COND((&CFT13 *EQ 'Y') *OR (&CFT14 *EQ 'Y')) +
                          THEN(DO)

/* Get system prefix */

             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)

/* Determine the library to where to put the backup file */

/**********       CPYF       FROMFILE(SDCODEPD) TOFILE(&DPLIB/XSDCODEPD) +
                             CRTFILE(*YES) */                                           /*MD056888*/
                  CPYF       FROMFILE(SDCODCTD) TOFILE(&DPLIB/XSDCODCTD) +
                             CRTFILE(*YES)                                              /*MD056888*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
                  CPYF       FROMFILE(SDCODBTD) TOFILE(&DPLIB/XSDCODBTD) +
                             CRTFILE(*YES)                                              /*MD056888*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                             /*MD056888*/
                  CPYF       FROMFILE(SDCODXTD) TOFILE(&DPLIB/XSDCODXTD) +
                             CRTFILE(*YES)                                              /*MD056888*/
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)                             /*MD056888*/

/* Call initialization program SD000005 */

                  CALL       PGM(SD000005)

/* If error is encountered in SD000005 */

                  IF         COND(%SWITCH(XXXXXX11)) THEN(DO)

/* Copy back data from backup file to SDCODEPD */

/**********          CPYF       FROMFILE(XSDCODEPD) TOFILE(SDCODEPD) +
                                MBROPT(*REPLACE) */                                     /*MD056888*/
                     CPYF       FROMFILE(XSDCODCTD) TOFILE(SDCODCTD) +
                                MBROPT(*REPLACE)                                        /*MD056888*/
                     CPYF       FROMFILE(XSDCODBTD) TOFILE(SDCODBTD) +
                                MBROPT(*REPLACE)                                        /*MD056888*/
                     CPYF       FROMFILE(XSDCODXTD) TOFILE(SDCODXTD) +
                                MBROPT(*REPLACE)                                        /*MD056888*/

/* Recover data from LDA for database error */

                     RTVDTAARA  DTAARA(LDA) RTNVAR(&LDA)
                     CHGVAR     VAR(&MEM) VALUE(%SUBSTRING(&LDA 134 50))
                     SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM)-
                                TOMSGQ(MOPERQ MRUNQ)
                     CHGVAR     VAR(&MEM) VALUE('SDC000005 - Job Terminated, +
                                  Database in Error')
                     SNDPGMMSG  MSG(&MEM) TOMSGQ(MRUNQ MOPERQ)

                  ENDDO

/* Delete backup file XSDCODEPD */

/*********        DLTF       FILE(XSDCODEPD) */                                         /*MD056888*/
                  DLTF       FILE(XSDCODCTD)                                            /*MD056888*/
                  DLTF       FILE(XSDCODBTD)                                            /*MD056888*/
                  DLTF       FILE(XSDCODXTD)                                            /*MD056888*/

             ENDDO
             ENDDO

/** Mode 3 - Deletion */

             IF         COND(&PMODE *EQ '3') THEN(DO)
             ENDDO

             GOTO       CMDLBL(END)

ERROR:
             SNDMSG     MSG('Initialisation Program for CSW203 Control has +
                          terminated abnormally.') TOMSGQ(MOPERQ MRUNQ)

END:
             ENDPGM
