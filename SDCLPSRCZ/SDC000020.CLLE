/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas SD Export Customer Details Control')            */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Standing Data Module                             */
/*                                                                   */
/*       SDC000020 - Export Customer Details Into AML                */
/*                   Database Control                                */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2002           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. CSD017  *CREATE    Date 08Nov02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CSD017 - Midas Compliance Watch - Anti-Money Laundering     */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PCOMPNM &PSEQ)
 
             DCL        VAR(&PCOMPNM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PSEQ) TYPE(*DEC) LEN(5)
             DCL        VAR(&PSTAT) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STAT) TYPE(*CHAR) LEN(1) VALUE(' ')
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2002')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('SDC000020 - Export Customer Details +
                        into AML Database') TOMSGQ(MRUNQ) MSGTYPE(*INFO)
 
             CHGJOB     SWS(XXXXXX00)
 
 /* Create data area LDA */
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)
 
/* Call CB0160 to check if this run is a restart (&PSTAT = 'Y') */
 
             CALL       PGM(CB0160) PARM(&PCOMPNM &PSEQ &PSTAT)
 
/* Copy back SDCORIPD from XSDCORIPD and SDCUSIPD from XSDCUSIPD */
/* if this is a restart */
 
             IF         COND(&PSTAT *EQ 'Y') THEN(DO)
 
               CPYF       FROMFILE(&DPLIB/XSDCORIPD) TOFILE(SDCORIPD) +
                            MBROPT(*REPLACE)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                            FILE(SDCORIPD))
               CPYF       FROMFILE(&DPLIB/XSDCUSIPD) TOFILE(SDCUSIPD) +
                            MBROPT(*REPLACE)
               MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(CLRPFM +
                            FILE(SDCUSIPD))
             ENDDO
 
/* If this is not a restart */
 
             IF         COND(&PSTAT *NE 'Y') THEN(DO)
 
/* Create backup copy of SDCORIPD and SDCUSIPD */
 
             CPYF       FROMFILE(SDCORIPD) TOFILE(&DPLIB/XSDCORIPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
             CPYF       FROMFILE(SDCUSIPD) TOFILE(&DPLIB/XSDCUSIPD) +
                          MBROPT(*REPLACE) CRTFILE(*YES)
                  MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
 
                  CHGVAR     VAR(&STAT) VALUE('Y')
 
/* Call CB0150 with Status Parameter set to 'Y' */
 
             CALL       PGM(CB0150) PARM(&PCOMPNM &PSEQ &STAT)
 
             ENDDO
 
/* Call SD000020 passing a mode parameter = 'C' */
 
             CALL       PGM(SD000020) PARM('C')
 
/* Report error message necessary if U7 and U8 are swithed on */
 
             IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
 
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
 
             ENDDO
 
/* If no error occured in the program */
 
             IF            COND(%SWITCH(XXXXXX00)) THEN(DO)
 
/* Call CB0150 to update restart indicator */
 
                  CHGVAR     VAR(&STAT) VALUE('N')
                  CALL       PGM(CB0150) PARM(&PCOMPNM &PSEQ &STAT)
                  DLTF       FILE(XSDCORIPD)
                  MONMSG     MSGID(CPF2105)
                  DLTF       FILE(XSDCUSIPD)
                  MONMSG     MSGID(CPF2105)
             ENDDO
 
             GOTO       CMDLBL(END)
 
/* Abnormal termination */
 
ABNOR:
             CHGJOB     SWS(XXXXXX11)
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          SDC000020 ended abnormally - see job +
                          log') TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
END:
             ENDPGM
