/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas SD Initialisation control prog for CSD017')     */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Standing Data Module                             */
/*                                                                   */
/*       SDC000027 - Initialisation Control Program for CSD017       */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2002           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. BUG3260            Date 28Jun04              */
/*       Prev Amend No. BUG3261            Date 23Jun04              */
/*                      CSD017  *Create    Date 08Nov02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       BUG3260 - Include call to SDC000033.                        */
/*       BUG3261 - If error occurs in any one of the called          */
/*                 programs, go to ABNOR.                            */
/*       CSD017 - Midas Compliance Watch - Anti-Money Laundering     */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTCD &PMODE)
 
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PMODE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&SYSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(7) VALUE('  DPLIB')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2002')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             SNDPGMMSG  MSG('SDC000027 - SD Initialisation Control +
                        Program for CSD017') TOMSGQ(MRUNQ) MSGTYPE(*INFO)
 
             CHGJOB     SWS(XXXXXX00)
             CHGVAR     VAR(&RTCD) VALUE('       ')                                      /*BUG3261*/
 
 /* Create data area LDA */
 
             CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
             MONMSG     MSGID(CPF1023)
 
             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&SYSID)
             CHGVAR     VAR(%SUBSTRING(&DPLIB 1 2)) VALUE(&SYSID)
 
/* If &PMODE = '1' call SD000027 to initialise the amended file */
 
             IF         COND(&PMODE *EQ '1') THEN(DO)
 
                CALL       PGM(SDC000033) PARM(&RTCD &PMODE)                             /*BUG3260*/
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)                           /*BUG3260*/
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)                           /*BUG3260*/
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)                           /*BUG3260*/
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3260*/
                ENDDO                                                                    /*BUG3260*/
                                                                                         /*BUG3260*/
                CALL       PGM(SD000027)
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
             ENDDO
 
/*  If &PMODE = '1' or '2' */
 
             IF         COND((&PMODE *EQ '1') *OR (&PMODE = '2')) +
                           THEN(DO)
 
/* Clear all import tables - SDBRAIPD, SDCORIPD, SDCUSIPD, */
/* SDAHOLPD, SDACCTPD, and SDAHISPD */
 
                CLRPFM     FILE(SDBRAIPD)
                MONMSG     MSGID(CPF0000)
                CLRPFM     FILE(SDCORIPD)
                MONMSG     MSGID(CPF0000)
                CLRPFM     FILE(SDCUSIPD)
                MONMSG     MSGID(CPF0000)
                CLRPFM     FILE(SDAHOLPD)
                MONMSG     MSGID(CPF0000)
                CLRPFM     FILE(SDACCTPD)
                MONMSG     MSGID(CPF0000)
                CLRPFM     FILE(SDAHISPD)
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869)
 
/* Call SD000018 passing a mode parameter = 'A' */
 
                CALL       PGM(SD000018) PARM('A')
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                   SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                                TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
/* Call SD000020 passing a mode parameter = 'A' */
 
                CALL       PGM(SD000020) PARM('A')
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                   SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                                TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
/* Call SD000023 passing a mode parameter = 'A' */
 
                CALL       PGM(SD000023) PARM('A')
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                   SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                                TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
/* Call SD000026 passing a mode parameter = 'A' */
 
                CALL       PGM(SD000026) PARM('A')
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                   SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                                TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
/* Call SDC000028 to call AML FTP program */
 
                CALL       PGM(SDC000028)
 
/* Database error processing */
/* Report error message necessary if U7 and U8 are switched on */
 
                IF            COND(%SWITCH(XXXXXX11)) THEN(DO)
                   RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                   SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                                TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
                  GOTO       CMDLBL(ABNOR)                                               /*BUG3261*/
                ENDDO
 
             ENDDO
 
             GOTO       CMDLBL(END)
 
/* Abnormal termination */
 
ABNOR:
             CHGVAR     VAR(&RTCD) VALUE('*ERROR ')                                      /*BUG3261*/
             CHGJOB     SWS(XXXXXX11)
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          SDC000027 ended abnormally - see job +
                          log') TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)
 
END:
             ENDPGM
