/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('UPD Equation with Cons.Banking SD Details Control')   */
/*********************************************************************/
/*                                                                   */
/*       Midas - Standing Data Module                                */
/*                                                                   */
/*       CLLE/SDC000081 - Update Equation with Consumer Banking      */
/*                        Standing Data Details Control              */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2006           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Last Amend No. CRE026  *CREATE    Date 24May06              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CRE026 - Consumer Banking                                   */
/*                                                                   */
/*********************************************************************/
             PGM
 
             DCL        VAR(&DTAQ1) TYPE(*CHAR) LEN(12) VALUE('SDCOBKDTQ')
             DCL        VAR(&LEN1) TYPE(*DEC) LEN(5 0) VALUE(10121)
             DCL        VAR(&DATA1) TYPE(*CHAR) LEN(10121)
             DCL        VAR(&DTAQ2) TYPE(*CHAR) LEN(12) VALUE('SDCBTRDTQ')
             DCL        VAR(&LEN2) TYPE(*DEC) LEN(5 0) VALUE(10)
             DCL        VAR(&DATA2) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBL) TYPE(*CHAR) LEN(10) VALUE('*LIBL')
             DCL        VAR(&WAIT) TYPE(*DEC) LEN(5 0) VALUE(15)
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2006')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Check Lock on PF/SDCBTRPD */
             ALCOBJ     OBJ((SDCBTRPD *FILE *EXCL)) WAIT(0)
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(DO)
                GOTO       CMDLBL(END)
             ENDDO
 
/** Create LDA for job in QTEMP if it does not already exist **/
 
             CHKOBJ     OBJ(QTEMP/LDA) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                        CRTDTAARA  DTAARA(QTEMP/LDA) TYPE(*CHAR) LEN(256)
                        ENDDO
 
             SNDPGMMSG  MSG('SDC000081 - Update Equation with Consumer +
                            Banking Standing Data Details Control +
                            Program') TOMSGQ(MRUNQ)
 
             CHGDTAARA  DTAARA(LDA) VALUE(' ')
             CHGJOB     SWS(XXXXXX00)
START:
 
/* Read Message from DATAQ */
 
             CHGVAR     VAR(&DATA1) VALUE(' ')
             CALL       PGM(QRCVDTAQ) PARM(&DTAQ1 &LIBL &LEN1 +
                                      &DATA1 &WAIT)
 
/* Call Programs */
 
            IF         COND((%SST(&DATA1 1 4)) = 'CURR') THEN(CALL +
                         PGM(SD000088) PARM(&DATA1))
            IF         COND((%SST(&DATA1 1 4)) = 'LOCN') THEN(CALL +
                         PGM(SD000090) PARM(&DATA1))
 
            IF         COND((%SST(&DATA1 1 4)) = 'HOLD') THEN(CALL +
                         PGM(SD000056) PARM(&DATA1))
 
            IF         COND((%SST(&DATA1 1 4)) = 'SPRT') THEN(CALL +
                         PGM(SD000082) PARM(&DATA1))
 
            IF         COND((%SST(&DATA1 1 4)) = 'INDS') THEN(CALL +
                         PGM(SD000084) PARM(&DATA1))
 
            IF         COND((%SST(&DATA1 1 4)) = 'COLO') THEN(CALL +
                         PGM(SD000086) PARM(&DATA1))
 
/* Read Message from DATAQ */
 
             CHGVAR     VAR(&DATA2) VALUE(' ')
             CALL       PGM(QRCVDTAQ) PARM(&DTAQ2 &LIBL &LEN2 +
                                      &DATA2 &WAIT)
/* Check for Termination */
 
             IF         COND(%SST(&DATA2 1 3) = 'END') THEN(DO)
             GOTO       CMDLBL(END)
             ENDDO
 
             GOTO       CMDLBL(START)
 
ABNOR:
/* Database error processing */
 
               IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                  RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
                  SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                             TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ)
               ENDDO
 
/* Abnormal termination  */
 
               CHGJOB     SWS(XXXXXX11)
               DMPCLPGM
 
               SNDPGMMSG MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                            SDC000081 ended abnormally - see job log') +
                            TOMSGQ(MOPERQ MRUNQ)
               MONMSG     MSGID(CPF0000 MCH0000)
 
 
END:
             DLCOBJ     OBJ((SDCBTRPD *FILE *EXCL))
             MONMSG     MSGID(CPF0000)
 
             CHGVAR     VAR(&CPYFLD) VALUE('(c) Misys International +
                          Banking Systems Ltd. 2006')
 
             ENDPGM
