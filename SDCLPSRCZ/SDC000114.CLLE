/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SD ARR Calculator Batch Job')                   */
/*********************************************************************/
/*                                                                   */
/*       Midas - Standing Data Module                                */
/*                                                                   */
/*       SDC000114 - ARR Calculator Batch Job                        */
/*                                                                   */
/*       (c) Finastra International Limited 2020                     */
/*                                                                   */
/*       Last Amend No. MD058517           Date 17Oct22              */
/*       Prev Amend No. MD060020           Date 21Jun22              */
/*                      CIR020             Date 02Aug21              */
/*                      MD058673           Date 10Sep21              */
/*                      MD058331           Date 05Jul21              */
/*                      CDL102             Date 01Jun21              */
/*                      CLE172             Date 01Oct20              */
/*                      CSD103  *CREATE    Date 10Aug20              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD058517 - CLE172 LIBOR Lending- Change Control CC3.1       */
/*                  Interest Projection Using Known Rates            */
/*                  CC10 CLE172 Spool File Correspondence (MD059817) */
/*       MD060020 - Fusion Midas ARR Adapter: Expired Token          */
/*                  prevents ARR requests. Add checking to U1 job    */
/*                  switch to capture if there are exceptions and    */
/*                  fail component during *COB.                      */
/*       CIR020 - LIBOR Deregulation - FRA/IRS                       */
/*       MD058673 - Only benchmark rate is applied on deal on day1   */
/*                  of its valuation. For deal with FLID = Y, call a */
/*                  new program to recompute deal's one day interest */
/*       MD058331 - CSD103 LIBOR General Section - Change Control    */
/*       CDL102 - LIBOR Deregulation - Dealing                       */
/*       CLE172 - LIBOR Deregulation - Lending                       */
/*       CSD103 - LIBOR Deregulation - Common Layer/Standing Data    */
/*                                                                   */
/*********************************************************************/
/**********  PGM                                                     */                 /*MD058331*/
             PGM        PARM(&MODE)                                                     /*MD058331*/

             DCL        VAR(&MPHAS) TYPE(*CHAR) LEN(1)
             DCL        VAR(&PREFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&RUNDATE) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)                                     /*CLE172*/
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)                                     /*CLE172*/
             DCL        VAR(&SARD) TYPE(*CHAR) LEN(6)                                     /*CLE172*/
             DCL        VAR(&SCSARD) TYPE(*CHAR) LEN(200)                                 /*CLE172*/
             DCL        VAR(&CLE172) TYPE(*CHAR) LEN(1) VALUE('N')                        /*CLE172*/
             DCL        VAR(&CDL102) TYPE(*CHAR) LEN(1) VALUE('N')                        /*CDL102*/
             DCL        VAR(&CIR020) TYPE(*CHAR) LEN(1) VALUE('N')                        /*CIR020*/
             DCL        VAR(&MODE) TYPE(*CHAR) LEN(6)                                   /*MD058331*/
             DCL        VAR(&COUNT) TYPE(*DEC) LEN(1) VALUE(0)                          /*MD058331*/

             DCLF       FILE(SDCSTSTD) OPNID(STAT)
             DCLF       FILE(SDBANKPD) OPNID(BANK)

             COPYRIGHT  TEXT('(c) Finastra International Limited +
                          2020')

             CHGJOB     SWS(0XXXXXXX)                                                   /*MD060020*/
                                                                                        /*MD060020*/
/** Global monitor message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))

             SNDPGMMSG  MSG('SDC000114 - ARR Calculator Batch Job') +
                          TOMSGQ(MRUNQ)

/** Start commitment control */

             STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE)) +
                          CMTSCOPE(*JOB)
             MONMSG     MSGID(CPF8351)

/** Retrieve Midas phase */

             RTVDTAARA  DTAARA(MPHAS) RTNVAR(&MPHAS)         

/** If the program is called from the Menu or Scheduler */                              /*MD058331*/
/** and system is in COB, end the job processing */                                     /*MD058331*/
                                                                                        /*MD058331*/
             IF         COND(&MODE *NE '*COB' +
                          *AND &MPHAS *NE 'A') THEN(DO)                                 /*MD058331*/
                SNDPGMMSG  MSG('SDC000114 - This job cannot be run +
                             since Midas is not in Input Cycle.') +
                             TOMSGQ(MOPERQ MRUNQ)                                       /*MD058331*/
                GOTO CMDLBL(END)                                                        /*MD058331*/
             ENDDO                                                                      /*MD058331*/
                                                                                        /*MD058331*/
/** If called from COB and the batch job process is still running */                    /*MD058331*/
/** (i.e. DTAARA/SDARRCLCK is allocated), wait for it complete. */                      /*MD058331*/
                                                                                        /*MD058331*/
             IF         COND(&MODE *EQ '*COB') THEN(DO)                                 /*MD058331*/
WAIT:                                                                                   /*MD058331*/
                ALCOBJ     OBJ((SDARRCLCK *DTAARA *EXCL)) WAIT(0)                       /*MD058331*/
                MONMSG     MSGID(CPF1002) EXEC(DO)                                      /*MD058331*/
                   IF  COND(&COUNT *LE 5) THEN(DO)                                      /*MD058331*/
                      DLYJOB     DLY(60)                                                /*MD058331*/
                      CHGVAR     VAR(&COUNT) VALUE(&COUNT + 1)                          /*MD058331*/
                      GOTO       CMDLBL(WAIT)                                           /*MD058331*/
                   ENDDO                                                                /*MD058331*/
                   ELSE       CMD(DO)                                                   /*MD058331*/
                      SNDPGMMSG  MSG('ARR Calculator Batch Job is still +
                         running. This job has been terminated since it +
                         has reached the maximum amount of time to +
                         wait.') TOMSGQ(MOPERQ MRUNQ)                                   /*MD058331*/
                      GOTO       CMDLBL(ABNOR)                                          /*MD058331*/
                   ENDDO                                                                /*MD058331*/
                ENDDO                                                                   /*MD058331*/
                                                                                        /*MD058331*/
             ENDDO                                                                      /*MD058331*/
                                                                                        /*MD058331*/
/** Read Status File */
READ:
             RCVF       OPNID(STAT)
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO CMDLBL(CONTINUE)
             ENDDO

/** If called in COB, run program if Status is not yet completed */

             IF         COND(&MPHAS *EQ 'C') THEN(DO)

/** Retrieve Midas rundate */

                RCVF       OPNID(BANK)
                CHGVAR     VAR(&RUNDATE) VALUE(&BANK_BJRDNB)

                IF         COND((&STAT_SDSTAT *EQ 'C') *AND +
                          (&STAT_SDSTDT *EQ &RUNDATE)) THEN(DO)
                   GOTO CMDLBL(END)
                ENDDO

             ENDDO

/** Allocate data area to be used in checking if job is running */
CONTINUE:
             ALCOBJ     OBJ((SDARRCLCK *DTAARA *EXCL)) WAIT(0)
             MONMSG     MSGID(CPF1002) EXEC(DO)
                SNDPGMMSG  MSG('ARR Calculator Batch Job is already +
                             running') TOMSGQ(MOPERQ MRUNQ)
                GOTO CMDLBL(END)
             ENDDO

/** Update Status File to Running */

             CALL       PGM(SD000118) PARM('R')
             MONMSG     MSGID(CPF0000 MCH0000)

/** Check if the CLE172 feature is on */                                                  /*CLE172*/
                                                                                          /*CLE172*/
             CHGVAR     VAR(&RTCD) VALUE('       ')                                       /*CLE172*/
             CHGVAR     VAR(&SARD) VALUE('CLE172')                                        /*CLE172*/
             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')                                       /*CLE172*/
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD +
                          &SCSARD)                                                        /*CLE172*/
                                                                                          /*CLE172*/
/** If error occured in AOSARDR0, perform abnormal termination */                         /*CLE172*/
                                                                                          /*CLE172*/
             IF         COND(&RTCD *NE '       ' *AND +
                          &RTCD *NE '*NRF   ') THEN(DO)                                   /*CLE172*/
                SNDPGMMSG  MSG('Program error in AOSARDR0') +
                           TOMSGQ(MOPERQ)                                                 /*CLE172*/
                GOTO       CMDLBL(ERROR)                                                  /*CLE172*/
             ENDDO                                                                        /*CLE172*/
                                                                                          /*CLE172*/
             IF         COND(&RTCD *EQ '       ') THEN(DO)                                /*CLE172*/
                CHGVAR     VAR(&CLE172) VALUE('Y')                                        /*CLE172*/
             ENDDO                                                                        /*CLE172*/
                                                                                          /*CDL102*/
/** Check if the CDL102 feature is on */                                                  /*CDL102*/
                                                                                          /*CDL102*/
             CHGVAR     VAR(&RTCD) VALUE('       ')                                       /*CDL102*/
             CHGVAR     VAR(&SARD) VALUE('CDL102')                                        /*CDL102*/
             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')                                       /*CDL102*/
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD +
                          &SCSARD)                                                        /*CDL102*/
                                                                                          /*CDL102*/
/** If error occured in AOSARDR0, perform abnormal termination */                         /*CDL102*/
                                                                                          /*CDL102*/
             IF         COND(&RTCD *NE '       ' *AND +
                          &RTCD *NE '*NRF   ') THEN(DO)                                   /*CDL102*/
                SNDPGMMSG  MSG('Program error in AOSARDR0') +
                           TOMSGQ(MOPERQ)                                                 /*CDL102*/
                GOTO       CMDLBL(ERROR)                                                  /*CDL102*/
             ENDDO                                                                        /*CDL102*/
                                                                                          /*CDL102*/
             IF         COND(&RTCD *EQ '       ') THEN(DO)                                /*CDL102*/
                CHGVAR     VAR(&CDL102) VALUE('Y')                                        /*CDL102*/
             ENDDO                                                                        /*CDL102*/
                                                                                          /*CIR020*/
/** Check if the CIR020 feature is on */                                                  /*CIR020*/
                                                                                          /*CIR020*/
             CHGVAR     VAR(&RTCD) VALUE('       ')                                       /*CIR020*/
             CHGVAR     VAR(&SARD) VALUE('CIR020')                                        /*CIR020*/
             CHGVAR     VAR(&OPTN) VALUE('*VERIFY')                                       /*CIR020*/
             CALL       PGM(AOSARDR0) PARM(&RTCD &OPTN &SARD +
                          &SCSARD)                                                        /*CIR020*/
                                                                                          /*CIR020*/
/** If error occured in AOSARDR0, perform abnormal termination */                         /*CIR020*/
                                                                                          /*CIR020*/
             IF         COND(&RTCD *NE '       ' *AND +
                          &RTCD *NE '*NRF   ') THEN(DO)                                   /*CIR020*/
                SNDPGMMSG  MSG('Program error in AOSARDR0') +
                           TOMSGQ(MOPERQ)                                                 /*CIR020*/
                GOTO       CMDLBL(ERROR)                                                  /*CIR020*/
             ENDDO                                                                        /*CIR020*/
                                                                                          /*CIR020*/
             IF         COND(&RTCD *EQ '       ') THEN(DO)                                /*CIR020*/
                CHGVAR     VAR(&CIR020) VALUE('Y')                                        /*CIR020*/
             ENDDO                                                                        /*CIR020*/

/** Retrieve zone system prefix */

             RTVDTAARA  DTAARA(SDSTAT (6 2)) RTNVAR(&PREFIX)

/** If CLE172 is ON, call program to create an extract file for */                        /*CLE172*/
/** Rollover that uses a backward-looking rate */                                         /*CLE172*/
                                                                                          /*CLE172*/
             IF         COND(&CLE172 *EQ 'Y') THEN(DO)                                    /*CLE172*/
                CLRPFM     FILE(LEROBLPD)                                                 /*CLE172*/
                CALL       PGM(LE001112)                                                  /*CLE172*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CLE172*/
                   GOTO       CMDLBL(ERROR)                                               /*CLE172*/
                ENDDO                                                                     /*CLE172*/
             ENDDO                                                                        /*CLE172*/
                                                                                          /*CLE172*/
/** Call ARR Calculator Batch Job Pogram */

             CLRPFM     FILE(LELIBEPD)
             CLRPFM     FILE(DLLIBEPD)                                                    /*CDL102*/
             CLRPFM     FILE(IRLIBEPD)                                                    /*CIR020*/
             CLRPFM     FILE(DLBCAMPD)                                                    /*CDL102*/
             CLRPFM     FILE(SDBJEXPD)
             CLRPFM     FILE(SDFWDRTD)                                                  /*MD058517*/
             CLRPFM     FILE(SDRTKNTD)                                                  /*MD058517*/
             CLRPFM     FILE(LEFWBRPD)                                                  /*MD058517*/
                                                             /*CDL102*/
                                                                                          /*CDL102*/
             IF         COND(&CLE172 *EQ 'Y' *OR +
                           &CDL102 *EQ 'Y' *OR &CIR020 *EQ 'Y') THEN(DO)
/**********                &CDL102 *EQ 'Y') THEN(DO)       */                      /*CDL102 CIR020*/

             CALL       PGM(SD000114)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO

/** If CLE172 is ON, call program to create an extract file for */                      /*MD058517*/
/** future ARR rates BR events*/                                                        /*MD058517*/
                                                                                        /*MD058517*/
             IF         COND(&CLE172 *EQ 'Y') THEN(DO)                                  /*MD058517*/
                CALL       PGM(LE001114)                                                /*MD058517*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                             /*MD058517*/
                   GOTO       CMDLBL(ERROR)                                             /*MD058517*/
                ENDDO                                                                   /*MD058517*/
             ENDDO                                                                      /*MD058517*/
                                                                                          /*CLE172*/

/** Call program to produce Daily Rates Report */

             CALL       PGM(SD001110P)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO

/** Call program to produce Exception Error Report */

             CALL       PGM(SD001112)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO

             IF         COND(&CDL102 *EQ 'Y') THEN(DO)                                    /*CDL102*/

                CALL       PGM(SD001110P2)                                                /*CDL102*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CDL102*/
                   GOTO       CMDLBL(ERROR)                                               /*CDL102*/
                ENDDO                                                                     /*CDL102*/

                CALL       PGM(SD001112P2)                                                /*CDL102*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CDL102*/
                   GOTO       CMDLBL(ERROR)                                               /*CDL102*/
                ENDDO                                                                     /*CDL102*/

                CALL       PGM(DL000114)                                                /*MD058673*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                             /*MD058673*/
                   GOTO       CMDLBL(ERROR)                                             /*MD058673*/
                ENDDO                                                                   /*MD058673*/
                                                                                        /*MD058673*/
             ENDDO                                                                        /*CDL102*/
                                                                                          /*CIR020*/
             IF         COND(&CIR020 *EQ 'Y') THEN(DO)                                    /*CIR020*/
                                                                                          /*CIR020*/
                CALL       PGM(SD001110P3)                                                /*CIR020*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CIR020*/
                   GOTO       CMDLBL(ERROR)                                               /*CIR020*/
                ENDDO                                                                     /*CIR020*/
                                                                                          /*CIR020*/
                CALL       PGM(SD001112P3)                                                /*CIR020*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CIR020*/
                   GOTO       CMDLBL(ERROR)                                               /*CIR020*/
                ENDDO                                                                     /*CIR020*/
                                                                                          /*CIR020*/
             ENDDO                                                                        /*CIR020*/
                                                                                          /*CIR020*/
             ENDDO                                                                        /*CDL102*/
                                                                                          /*CDL102*/
/** Error when Exceptions reported */                                                   /*MD060020*/
             IF         COND(&MODE *EQ '*COB') THEN(DO)                                 /*MD060020*/
             IF         COND(%SWITCH(1XXXXXXX)) THEN(DO)                                /*MD060020*/
                GOTO       CMDLBL(ERROR)                                                /*MD060020*/
             ENDDO                                                                      /*MD060020*/
             ENDDO                                                                      /*MD060020*/
                                                                                        /*MD060020*/
/** If sucessful completion, update status file to Completed */

             CALL       PGM(SD000118) PARM('C')
             MONMSG     MSGID(CPF0000 MCH0000)

             GOTO       CMDLBL(END)

/** Update Status File to Failed in case an unexpected error occurs */
ERROR:
             CALL       PGM(SD000118) PARM('F')
             MONMSG     MSGID(CPF0000 MCH0000)

/** Abnormal termination */
ABNOR:
             ROLLBACK
             MONMSG     MSGID(CPF0000 MCH0000)
             CHGJOB     SWS(XXXXXX11)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                          SDC000114 ended abnormally - see job log') +
                          TOMSGQ(MOPERQ MRUNQ)
             MONMSG     MSGID(CPF0000 MCH0000)

END:
             ENDCMTCTL
             MONMSG     MSGID(CPF0000)
             ENDPGM
