/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI    TEXT('Midas SD Annual Tax Deducted Statement Report')       */
/*********************************************************************/
/*                                                                   */
/*       Midas - Standing Data Module                                */
/*                                                                   */
/*       CLP/SDC000769 - Midas SD Annual Tax Deducted Statement      */
/*                       Report                                      */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2004           */
/*                                                                   */
/*       Last Amend No. CER059             Date 19Jul10              */
/*       Prev Amend No. BUG25542           Date 19Aug09              */
/*                      BUG24935           Date 14Jul09              */
/*                      BUG24574           Date 07Jul09              */
/*                      BUG24767           Date 07Jul09              */
/*                      BUG24280A          Date 19Jun09              */
/*                      BUG23789           Date 21Apr09              */
/*                      BUG23518           Date 30Mar09              */
/*                      BUG23553           Date 25Mar09              */
/*                      BUG23293           Date 09Mar09              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      234291             Date 27Jun05              */
/*                      232543             Date 11Mar05              */
/* Midas Release 4.04 -----------------------------------------------*/
/*                      CGL032  *CREATE    Date 05Jul04              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CER059 - German Feature Upgrade to Delhi                    */
/*       BUG25542 - In case the customer is a Joint Account cust,    */
/*                  the statement will include the identity of       */
/*                  all joint members.                               */
/*       BUG24935 - Limit Utilisation Report shows a minus           */
/*                  figure/incorrect Threshold Excess                */
/*       BUG24574 - Withholding Tax - R4 vs M+                       */
/*       BUG24767 - Cannot request annual tax deducted statement     */
/*       BUG24280A - Value of Current Threshold is incorrect         */
/*       BUG23789 - Pointer not set for location referenced          */
/*       BUG23518 - Produce Annual Tax Deducted Statement upon       */
/*                  Customer Closure                                 */
/*       BUG23553 - Component did not fail though encountered error  */
/*       BUG23293 - SDC000769 continued despite an error on CG006110 */
/*       234291 - Incorrect ROLLBACK processing.                     */
/*       232543 - Fix to CGL031                                      */
/*       CGL032 - Automatic Exchange of Information                  */
/*                                                                   */
/*********************************************************************/
/**********  PGM        PARM(&RSEQ &RLEV &RENT &RPARM)                                  /*BUG23518*/
/**********  PGM        PARM(&RCLOSE &RSEQ &RLEV &RENT &RPARM)                 /*BUG23518 BUG23789*/
             PGM        PARM(&RSEQ &RLEV &RENT &RPARM)                                  /*BUG23789*/
 
/* Declare variables */
 
             DCL        VAR(&JOBTYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEM) TYPE(*CHAR) LEN(50)
             DCL        VAR(&MODE) TYPE(*CHAR) LEN(1)
/**********  DCL        VAR(&RCLOSE) TYPE(*CHAR) LEN(1)                        /*BUG23518 BUG23789*/
             DCL        VAR(&RSEQ) TYPE(*CHAR) LEN(5)
             DCL        VAR(&RLEV) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RENT) TYPE(*CHAR) LEN(3)
             DCL        VAR(&RTCD) TYPE(*CHAR) LEN(7)
/**********  DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7)                                     /*232543*/
             DCL        VAR(&OPTN) TYPE(*CHAR) LEN(7) VALUE('*FIRST ')                    /*232543*/
             DCL        VAR(&FMT)  TYPE(*CHAR) LEN(200)
             DCL        VAR(&W0RTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&W0CMT) TYPE(*CHAR) LEN(3) VALUE('YES')
             DCL        VAR(&ACTION)     TYPE(*CHAR) LEN(8)
             DCL        VAR(&MSG) TYPE(*CHAR) LEN(50)
             DCL        VAR(&RPARM) TYPE(*CHAR) LEN(100)
             DCL        VAR(&FILE1) TYPE(*CHAR) LEN(08) +
                          VALUE('SDINPHL1')                                            /*BUG24280A*/
             DCL        VAR(&FILE) TYPE(*CHAR) LEN(10)                                 /*BUG24280A*/
             DCL        VAR(&SYEAR) TYPE(*CHAR) LEN(2)                                 /*BUG24280A*/
             DCL        VAR(&BYEAR) TYPE(*CHAR) LEN(2)                                 /*BUG24280A*/
/**********  DCL        VAR(&DTFMT) TYPE(*CHAR) LEN(1)                */  /*BUG24280A*/ /*BUG24767*/
/**********  DCL        VAR(&PZADATE) TYPE(*CHAR) LEN(7)              */  /*BUG24280A*/ /*BUG24767*/
/**********  DCL        VAR(&NUM) TYPE(*DEC) LEN(5 0)                 */  /*BUG24280A*/ /*BUG24767*/
/**********  DCL        VAR(&PZDATE) TYPE(*DEC) LEN(6 0)              */  /*BUG24280A*/ /*BUG24767*/
             DCL        VAR(&FDYEAR) TYPE(*DEC) LEN(4 0) VALUE(0)                      /*BUG24280A*/
             DCL        VAR(&FYEAR) TYPE(*CHAR) LEN(4) VALUE('0000')                   /*BUG24280A*/
             DCL        VAR(&TDYEAR) TYPE(*DEC) LEN(4 0) VALUE(0)                      /*BUG24280A*/
             DCL        VAR(&TYEAR) TYPE(*CHAR) LEN(4) VALUE('0000')                   /*BUG24280A*/
             DCL        VAR(&WOVRF) TYPE(*CHAR) LEN(1) VALUE('N')                      /*BUG24280A*/
             DCL        VAR(&MBRNAME) TYPE(*CHAR) LEN(10)                               /*BUG24574*/
/**********  DCLF       FILE(SDBANKPD) RCDFMT(SDBANKD0)               */  /*BUG24280A*/ /*BUG24767*/
 
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2004')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             RTVJOBA    TYPE(&JOBTYPE)
             CHGDTAARA  DTAARA(LDA) VALUE(' ')
             CHGJOB     SWS(XXXXXX00)
 
             SNDPGMMSG  MSG('Midas SD Annual Tax Deducted Statement +
                          Report') TOPGMQ(*EXT) TOMSGQ(MRUNQ)
 
/* Access PF/SDMMODPD to determine whether UDC module is on */
 
             CALL       PGM(AOMMODR0) PARM(&RTCD &OPTN &FMT)
 
             IF         COND(&RTCD *NE '       ') THEN(DO)
             SNDPGMMSG  MSG('Error on access to ICD file SDMMODPD') +
                          TOPGMQ(*EXT) TOMSGQ(MOPERQ MRUNQ) +
                          MSGTYPE(*INFO)
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE)) +
                          CMTSCOPE(*JOB)                                                  /*232543*/
                                                                                       /*BUG24280A*/
/**********  RCVF       RCDFMT(SDBANKD0)                               */ /*BUG24280A*/ /*BUG24767*/
/**********  CHGVAR     VAR(&NUM) VALUE(&BJEYD)                        */ /*BUG24280A*/ /*BUG24767*/
/**********  CHGVAR     VAR(&DTFMT) VALUE(&BJDFIN)                     */ /*BUG24280A*/ /*BUG24767*/
                                                                                       /*BUG24280A*/
/**********  CHGVAR     VAR(&PZADate) VALUE(' ')                       */ /*BUG24280A*/ /*BUG24767*/
/**********  CHGVAR     VAR(&PZDate) VALUE(0)                          */ /*BUG24280A*/ /*BUG24767*/
/**********  CALL       PGM(ZDATE2) PARM(&NUM &DTFMT &PZDate &PZADate) */ /*BUG24280A*/ /*BUG24767*/
/**********  CHGVAR     VAR(&BYEAR) VALUE(%SST(&PZADate 6 2))          */ /*BUG24280A*/ /*BUG24767*/
             CHGVAR     VAR(&BYEAR) VALUE(%SST(&RPARM 31 2))                            /*BUG24767*/
                                                                                       /*BUG24280A*/
             IF         COND(%SST(&RPARM 1 1) *EQ 'Y') THEN(GOTO +
                          CMDLBL(NOVRF))                                               /*BUG24280A*/
                                                                                       /*BUG24280A*/
             IF         COND(%SST(&RPARM 1 4) *NE ' ') THEN(DO)                        /*BUG24280A*/
             CHGVAR     VAR(&SYEAR) VALUE(%SST(&RPARM 3 2))                            /*BUG24280A*/
             CHGVAR     VAR(%SST(&RPARM 31 2)) VALUE(&SYEAR)                            /*BUG24935*/
             GOTO       CMDLBL(OVRF)                                                   /*BUG24280A*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
             IF         COND(%SST(&RPARM 5 8) *NE ' ') THEN(DO)                        /*BUG24280A*/
             CHGVAR     VAR(&FYEAR) VALUE(%SST(&RPARM 5 4))                            /*BUG24280A*/
             CHGVAR     VAR(&TYEAR) VALUE(%SST(&RPARM 9 4))                            /*BUG24280A*/
             CHGVAR     VAR(&FDYEAR) VALUE(&FYEAR)                                     /*BUG24280A*/
             CHGVAR     VAR(&TDYEAR) VALUE(&TYEAR)                                     /*BUG24280A*/
             CHGVAR     VAR(%SST(&RPARM 5 8)) VALUE(' ')                               /*BUG24280A*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
 LOOP:       CHGVAR     VAR(&WOVRF) VALUE('N')                                         /*BUG24280A*/
             IF         COND(&FDYEAR *LE &TDYEAR) THEN(DO)                             /*BUG24280A*/
             CHGVAR     VAR(&SYEAR) VALUE(%SST(&FYEAR 3 2))                            /*BUG24280A*/
             CHGVAR     VAR(%SST(&RPARM 1 4)) VALUE(&FYEAR)                            /*BUG24280A*/
             CHGVAR     VAR(%SST(&RPARM 31 2)) VALUE(&SYEAR)                            /*BUG24935*/
             GOTO       CMDLBL(OVRF)                                                   /*BUG24280A*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
             ENDCMTCTL                                                                 /*BUG24280A*/
             GOTO       CMDLBL(END)                                                    /*BUG24280A*/
                                                                                       /*BUG24280A*/
 OVRF:       IF         COND(&BYEAR *NE &SYEAR) THEN(DO)                               /*BUG24280A*/
/**********  CHGVAR     VAR(&FILE) VALUE(&FILE1 *CAT &SYEAR)         */       /*BUG24280A BUG24574*/
/**********  OVRDBF     FILE(SDINPHL1) TOFILE(&FILE) SHARE(*YES)     */       /*BUG24280A BUG24574*/
/**********  CHGVAR     VAR(&MBRNAME) VALUE('SDINPHPD' *CAT &SYEAR)  */        /*BUG24574 BUG24935*/
/**********  OVRDBF     FILE(SDINPHPD) MBR(&MBRNAME) SHARE(*YES)     */        /*BUG24574 BUG24935*/
             CHGVAR     VAR(&MBRNAME) VALUE('SDINPHL1' *CAT &SYEAR)                     /*BUG24935*/
             OVRDBF     FILE(SDINPHL1) MBR(&MBRNAME) SHARE(*YES)                        /*BUG24935*/
             CHGVAR     VAR(&MBRNAME) VALUE('SDINPHL3' *CAT &SYEAR)                     /*BUG25542*/
             OVRDBF     FILE(SDINPHL3) MBR(&MBRNAME) SHARE(*YES)                        /*BUG25542*/
             CHGVAR     VAR(&WOVRF) VALUE('Y')                                         /*BUG24280A*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
 NOVRF:                                                                                /*BUG24280A*/
 
             IF         COND(%SST(&FMT 101 1) *EQ 'Y') THEN(DO)
 
/* If Correspondence manager is switched on, override files */
 
             CHGVAR     VAR(&ACTION) VALUE('*PREPARE')
             CALL       PGM(CGC3605) PARM(&ACTION)
 
/**********  CALL       PGM(CG0006100) PARM(&W0RTN &W0CMT &RPARM)                         /*232543*/
             CALL       PGM(CG006100) PARM(&W0RTN &W0CMT &RPARM)                          /*232543*/
 
             RCLRSC
 
/**********  IF         COND(&W0RTN *NE '       ') THEN(DO)  */                         /*BUG23293*/
             IF         COND((&W0RTN *NE '       ') *OR +
                          (%SWITCH(XXXXXX11))) THEN(DO)                                 /*BUG23293*/
             CHGVAR     VAR(&MSG) VALUE('User Defined Correspondence +
                          Extract failure')
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
/* If Correspondence manager is switched on, call custom defined extract program */
 
             CALL       PGM(CGC3604)
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
             CHGVAR     VAR(&MSG) VALUE('Correspondence Manager +
                        Custom-Defined Data Extract failed')
             GOTO       CMDLBL(ABNOR)
             ENDDO
 
             ENDDO
 
             ENDCMTCTL                                                                    /*232543*/
 
/**********  CALL       PGM(SD000769P) PARM(&RSEQ &RLEV &RENT &RPARM)                   /*BUG23518*/
/**********  CALL       PGM(SD000769P) PARM(&RCLOSE &RSEQ &RLEV +
                          &RENT &RPARM)                                        /*BUG23518 BUG23789*/
             CALL       PGM(SD000769P) PARM(&RSEQ &RLEV &RENT &RPARM)                   /*BUG23789*/
 
/* Database error processing */
 
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
 
                RTVDTAARA  DTAARA(LDA (134 50)) RTNVAR(&MEM)
/**********     ROLLBACK  */                                                              /*234291*/
                SNDPGMMSG  MSGID(MEM0001) MSGF(MIDAS) MSGDTA(&MEM) +
                           TOPGMQ(*EXT) TOMSGQ(MOPERQ)
                GOTO       CMDLBL(END)
             ENDDO
 
             IF         COND(&WOVRF *EQ 'Y') THEN(DO)                                  /*BUG24280A*/
/**********  DLTOVR     FILE(SDINPHL1)                                        /*BUG24280A BUG24574*/
/**********  DLTOVR     FILE(SDINPHPD)                                         /*BUG24574 BUG24935*/
             DLTOVR     FILE(SDINPHL1)                                                  /*BUG24935*/
             DLTOVR     FILE(SDINPHL3)                                                  /*BUG25542*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
             IF         COND(&FDYEAR *NE 0) THEN(DO)                                   /*BUG24280A*/
             CHGVAR     VAR(&FDYEAR) VALUE(&FDYEAR + 1)                                /*BUG24280A*/
             CHGVAR     VAR(%SST(&RPARM 1 4)) VALUE(' ')                               /*BUG24280A*/
             CHGVAR     VAR(&FYEAR) VALUE(&FDYEAR)                                     /*BUG24280A*/
             RCLRSC                                                                    /*BUG24280A*/
             STRCMTCTL  LCKLVL(*CHG) NFYOBJ(MNTYF (*FILE)) +
                          CMTSCOPE(*JOB)                                               /*BUG24280A*/
             GOTO       CMDLBL(LOOP)                                                   /*BUG24280A*/
             ENDDO                                                                     /*BUG24280A*/
                                                                                       /*BUG24280A*/
             GOTO       CMDLBL(END)
 
 ABNOR:
/**********  CHGJOB     SWS(XXXXXX11)                                                   /*BUG23553*/
 
/* Abnormal termination - batch job */
 
             IF         COND(&JOBTYPE = '0') THEN(DO)
                SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program +
                             SD000769P ended abnormally - see job log') +
                             TOMSGQ(MOPERQ)
                MONMSG     MSGID(CPF0000 MCH0000)
             ENDDO
 
             IF         COND(%SST(&FMT 101 1) *EQ 'Y') THEN(DO)
 
/* If Correspondence manager is switched on, delete overrides. */
 
                CHGVAR     VAR(&ACTION) VALUE('*CLEAR  ')
                CALL       PGM(CGC3605) PARM(&ACTION)
                SNDPGMMSG  MSG(&MSG) TOPGMQ(*EXT) TOMSGQ(MOPERQ)
 
             ENDDO
                                                                                        /*BUG23553*/
             CHGJOB     SWS(XXXXXX11)                                                   /*BUG23553*/
 
 END:
             RCLRSC
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
 
             ENDPGM
