     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2007')
      *****************************************************************
/*S*D****RPGBASEMOD****************************************************                       CFT050
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module - Customer Details Validation   *
      *                                                               *
      *  SDVIBEI - Validate International Business Entity Identifier  *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2007            *
      *                                                               *
      *    This source is centrally supported and must ONLY be        *
      *    amended by Core Development Personnel                      *
      *                                                               *
      *    /COPY, Client or Country amendments must not be            *
      *    applied to this source.                                    *
      *                                                               *
      *  Last Amend No. CFT050  *REDUNDANT Date 03Jun13               *
      *  Prev Amend No. AR917747           Date 27Feb12               *
      *                 AR855391           Date 27Oct11               *
      *                 CER059             Date 19Jul10               *
      *                 CER045             Date 20Jul09               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *                 256564             Date 17Sep08               *
      *                 CSW207  *CREATE    Date 29Jun07               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CFT050 - SWIFTRef Directories upload                         *
      *  AR917747 - CUSD returning multiple warning message for the   *
      *             same error in IBEI.                               *
      *  AR855391 - CUSD Overridable Errors not found in EN System    *
      *             (CSD091 - Overrideable Errors Configurability     *
      *             Enabler Phase 2)                                  *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER045 - German Features - Reporting Bundesbank (Recompile)  *
      *  256564 - Recompile due to PF changes done by fix 256330      *
      *  CSW207 - SWIFT 2007 Standard Changes                         *
      *                                                               *
      *****************************************************************
 
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
 
      ** Midas SD Country codes File
     FSDCTRYL3  IF   E           K DISK    INFSR(*PSSR)
 
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ Automatically included D-specs       ¦
      ** ¦ ==============================       ¦
      ** +--------------------------------------+
      **
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes (among others) the LDA layout
      ** and the copyright array definition:
     D/COPY ZACPYSRC,STD_D_SPEC
      **--------------------------------------------------------------------------------------------
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY includes the MM standard declares:
     D/COPY ZACPYSRC,STDDECLARE
      **--------------------------------------------------------------------------------------------
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes all the defined fields in the
      ** Program Status Data Structures.  They have meaningful
      ** names, prefixed by 'PS'.
     D/COPY ZACPYSRC,PSDS
      **--------------------------------------------------------------------------------------------
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes all the definitions of the
      ** appended error arrays, including the named constant giving the size
      ** of the arrays.
     D/COPY ZACPYSRC,ERR_XARRYS
      **--------------------------------------------------------------------------------------------
 
      ** +--------------------------------------+
      ** ¦ End of automatically included D-specs¦
      ** ¦ =====================================¦
      ** +--------------------------------------+
 
      *****************************************************************
      /EJECT
      *****************************************************************
 
      ** +--------------------------------------+
      ** ¦ Manually included D-specs            ¦
      ** ¦ =========================            ¦
      ** +--------------------------------------+
 
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
 
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
 
      ** Valid Alpha Numeric Codes
     D AlpNumChar      S              1    DIM(62) CTDATA PERRCD(62)
 
      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
 
      ** Work Variables
     D WCtry           S              2A
     D WAlpNum         S              7A
     D WWrk            S              1A
     D WNum            S              1A
     D I               S              3P 0
 
      ** Index for arrays of error message ids etc
     D Idx             S              3P 0
     D WIx             S              3P 0                                                  AR855391
 
      ** +--------------------------------------+
      ** ¦ End of D-specs                       ¦
      ** ¦ ==============                       ¦
      ** +--------------------------------------+
      *****************************************************************
      /EJECT
      *****************************************************************
 
      ** +--- Start of Main processing -----------------------------------+
      ** ¦                                                                ¦
      ** ¦ Initial processing is performed automatically: the *INZSR is   ¦
      ** ¦ executed at program activation.                                ¦
      ** ¦                                                                ¦
      ** +----------------------------------------------------------------+
 
      ** Initialization
 
     C                   MOVE      *BLANK        RetCodeIn
 
     C                   MOVE      *BLANK        FldNamXAr
     C                   MOVE      *BLANK        MsgIDXAr
     C                   MOVE      *BLANK        MsgDtaXAr
     C                   MOVE      *BLANK        WFldNmXAr                                  AR855391
     C                   MOVE      *BLANK        WMsgIDXAr                                  AR855391
     C                   MOVE      *BLANK        WMsgDtXAr                                  AR855391
     C                   Z-ADD     0             Idx
     C                   Z-ADD     0             WIx                                        AR855391
 
      *
      ** VALIDATION
      *
     C                   EXSR      SRIBEI
      *
      ** If an error was found, set the return code appropriately
      *
     C     OKDDIBEI      IFEQ      'N'
     C                   EVAL      RetCodeIn = 'Error'
     C                   ENDIF
     C     OKDDIBEI      IFEQ      'W'                                                      AR855391
     C                   EVAL      RetCodeIn = 'Warning'                                    AR855391
     C                   ENDIF                                                              AR855391
      *
      *  RETURN
      *
     C                   RETURN
      *****************************************************************
     C/EJECT
      *****************************************************************
      ** SRIBEI - Validate International Business Entity Identifier
      *****************************************************************
     C     SRIBEI        BEGSR
 
     C                   IF        DDIBEI <> *BLANKS
 
      ** Check WCtry is a valid ISO Country code
     C                   EVAL      WCtry = %SUBST(DDIBEI:1:2)
     C     WCTRY         CHAIN     SDCTRYL3
     C                   IF        NOT%FOUND(SDCTRYL3)
     C**********         EVAL      OKDDIBEI = 'N'                                           AR855391
     C**********         EVAL      Idx = Idx + 1                                            AR855391
     C**********         MOVEL     'DDIBEI'      FldNamXAr(Idx)                             AR855391
     C**********         MOVEL     'USR9904'     MsgIDXAr(Idx)                              AR855391
     C                   EVAL      OKDDIBEI = 'W'                                           AR855391
     C                   EVAL      WIx = WIx + 1                                            AR855391
     C                   MOVEL     'DDIBEI'      WFldNmXAr(WIx)                             AR855391
     C                   MOVEL     'USR9904'     WMsgIDXAr(WIx)                             AR855391
     C**********         GOTO      ENDIBEI                                                  AR855391
     C                   ENDIF
 
      ** Check WAlpNum for alphanumeric codes and no embedded blanks
     C                   Z-ADD     1             I
     C                   EVAL      WAlpNum = %SUBST(DDIBEI:3:7)
     C                   DOW       I <= 7
     C                   EVAL      WWrk = %SUBST(WAlpNum:I:1)
     C                   If        %LOOKUP(WWrk:AlpNumChar) = 0
     C**********         EVAL      OKDDIBEI = 'N'                                           AR855391
     C**********         EVAL      Idx = Idx + 1                                            AR855391
     C**********         MOVEL     'DDIBEI'      FldNamXAr(Idx)                             AR855391
     C**********         MOVEL     'USR9905'     MsgIDXAr(Idx)                              AR855391
     C                   EVAL      OKDDIBEI = 'W'                                           AR855391
     C                   EVAL      WIx = WIx + 1                                            AR855391
     C                   MOVEL     'DDIBEI'      WFldNmXAr(WIx)                             AR855391
     C                   MOVEL     'USR9905'     WMsgIDXAr(WIx)                             AR855391
     C**********         GOTO      ENDIBEI                                                  AR855391
     C                   EVAL      I = 8                                                    AR917747
     C                   ENDIF
     C                   EVAL      I = I + 1
     C                   ENDDO
 
      ** Check Last digit is Numeric
     C                   EVAL      WNum = %SUBST(DDIBEI:10:1)
     C                   IF        %CHECK('0123456789':WNum) <> 0
     C**********         EVAL      OKDDIBEI = 'N'                                           AR855391
     C**********         EVAL      Idx = Idx + 1                                            AR855391
     C**********         MOVEL     'DDIBEI'      FldNamXAr(Idx)                             AR855391
     C**********         MOVEL     'USR9906'     MsgIDXAr(Idx)                              AR855391
     C                   EVAL      OKDDIBEI = 'W'                                           AR855391
     C                   EVAL      WIx = WIx + 1                                            AR855391
     C                   MOVEL     'DDIBEI'      WFldNmXAr(WIx)                             AR855391
     C                   MOVEL     'USR9906'     WMsgIDXAr(WIx)                             AR855391
     C**********         GOTO      ENDIBEI                                                  AR855391
     C                   ENDIF
     C                   ENDIF
 
     C     ENDIBEI       ENDSR
 
      *****************************************************************
     C/EJECT
      *****************************************************************
      * *INZSR - Program Initialisation routine                       *
      *****************************************************************
     C     *INZSR        BEGSR
 
     C     *ENTRY        PLIST
      *
      * INPUTS
      *
      ** Return Code
     C                   PARM                    RetCodeIn
      *
      ** Other parms
      *
      ** International Business Entity Identifier (10A)
     C                   PARM                    DDIBEI           10
      *
      * OUTPUTS
      *
      * Error fields/message IDs/message data (arrays) from/to caller
     C                   PARM                    FldNamXAr
     C                   PARM                    MsgIDXAr
     C                   PARM                    MsgDtaXAr
     C                   PARM                    WFldNmXAr                                  AR855391
     C                   PARM                    WMsgIDXAr                                  AR855391
     C                   PARM                    WMsgDtXAr                                  AR855391
      *
      ** Other parms
      *
      ** Party Capacity Indicator - OK
     C                   PARM                    OKDDIBEI          1
      *
      ** Program, module and procedure names for database error processing.
      ** =================================================================
      ** The following /COPY sets these values, and also defines LDA as
      ** an external data area
 
     C/COPY ZACPYSRC,DBFIELDS
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      ********************************************************************
      /COPY ZACPYSRC,PSSR_ILE
      ********************************************************************
**  CPY@
(c) Misys International Banking Systems Ltd. 2007
**  AlpNumChar
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
