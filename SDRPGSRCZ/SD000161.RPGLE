     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2013')
      *****************************************************************
/*STD *  RPGBASEMOD                                                   *
/*EXI *  TEXT('Midas SD FATCA High Value A/C Iden Report & Update')   *
      *****************************************************************
      *  Includes MD024763, MD025027, MD024916C, MD024916B ,MD024916, *
      *           MD024754A, MD024805, MD024815, MD024754, MD024728,  *
      *           MD024559, MD024618                                  *
      *                                                               *
      *  Midas - Standing Data module                                 *
      *                                                               *
      *  SD000161 - Midas SD FATCA High Value Account Identification  *
      *             Report & Update                                   *
      *                                                               *
      *  Function:  This prints a list of customers matching defined  *
      *             criteria and their current overall value of assets*
      *             If the program is called in update mode, it also  *
      *             updates the high value indicator and              *
      *             classification for the customer.                  *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2013            *
      *                                                               *
      *  Last Amend No. CDL096             Date 22Sep14               *
      *  Prev Amend No. CDL094             Date 01Sep14               *
      *                 MD027624           Date 26Jun14               *
      *                 MD026854           Date 29May14               *
      *                 MD026766           Date 29May14               *
      *                 MD026770           Date 09May14               *
      *                 MD026502           Date 01May14               *
      *                 CGL132  *CREATE    Date 01May13               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CDL096 - Business Day Conventions on MM Deals                *
      *           (Recompile)                                         *
      *  CDL094 - Enhance  Receive Settlement Instructions            *
      *           (Recompiled)                                        *
      *  MD027624 - High Value Account Review generated by the FHVT   *
      *             copies details of a previous existing Account     *
      *             Review. Applied fix MD027263                      *
      *  MD026854 - Alternative country of citizenship is missing in  *
      *             history of customer information                   *
      *  MD026766 - Error on ACRV SOAP transactions                   *
      *  MD026770 - Deleted NAHO is displayed in Information Mode and *
      *             Update Mode of FHVT (Recompile)                   *
      *  MD026502 - Account review generated when a customer is       *
      *             tagged as high value account have incorrect       *
      *             scheduled date                                    *
      *  CGL132 - FATCA Phase 1 - Customers' Identification and       *
      *           Classification - Master                             *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  Use of indicators.                                           *
      *                                                               *
      *    U7         Control Indicator                               *
      *    U8         Control Indicator                               *
      *    98         Date Format                                     *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E  I N D E X                               *
      *                                                               *
      *  SRHeader - Header Subroutine                                 *
      *  SRCustDet - Customer Details Subroutine                      *
      *  SRNahoDet - Non Account Holder Details Subroutine            *
      *  SRUpdCust - Update FATCA Customer Subroutine                 *
      *  SRUpdNaho - Update FATCA Non Account Holder Subroutine       *
      *  SRUpdFile - Update Enquiry File Subroutine                   *
      *  SRUpdAmtFile - Update Amount File Subroutine                 *
      *  SRCalcAst - Calculate Assets Subroutine                      *
      *  SRRtvCurr - Retrieve Currency Details                        *
      *  SRCvtAmount - Convert amount                                 *
      *  *PSSR - Error Processing                                     *
      *  *INZSR - Initialise                                          *
      *                                                               *
      *    The *INZSR subroutine will only get called automatically   *
      *    on entry to the module the first time it is run            *
      *    (unless you end the program with LR on).  Similarly        *
      *    D-spec initialisation only happens the first time.  Use    *
      *    RESET for subsequent passes.                               *
      *                                                               *
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
      *
      ** Live Customers
     FSDCUSTL5  IF   E           K DISK    INFSR(*PSSR)
      *
      ** Non Account Holders
     FSDNAHOL1  IF   E           K DISK    INFSR(*PSSR)
      *
      ** Joint Accounts by Customer
     FSDJACCL4  IF   E           K DISK    INFSR(*PSSR)
      *
      ** Joint Accounts by Non Account Holder
     FSDJACCL7  IF   E           K DISK    INFSR(*PSSR)
     F                                     RENAME(SDJACCD0:SDJACCD1)
      *
      ** Retail Accounts by Customer
     FACCNTLC   IF   E           K DISK    INFSR(*PSSR)
      *
      ** Customer Deals
     FCUSDE     IF   E           K DISK    INFSR(*PSSR)
     F                                     IGNORE(DEALSDAF)
     F                                     IGNORE(DEALSDDF)
     F                                     IGNORE(DEALSDEF)
     F                                     IGNORE(DEALSDFF)
      *
      ** Loans by Customer
     FLELOANLA  IF   E           K DISK    INFSR(*PSSR)
      *
      ** Security Customer Positions
     FSESEPSLL  IF   E           K DISK    INFSR(*PSSR)
      *
      ** Security Details
     FSECTY     IF   E           K DISK    INFSR(*PSSR)
      *
      ** FF transactions by customer
     FTRANSC    IF   E           K DISK    INFSR(*PSSR)
      *
      ** Instrument Types File
     FINTYP     IF   E           K DISK    INFSR(*PSSR)
      *
      ** FF Market Price File
     FPRICS     IF   E           K DISK    INFSR(*PSSR)
      *
      ** FATCA High Value Account Identification File
     FSDFTHVL1  IF   E           K DISK    INFSR(*PSSR)
      *
      ** FATCA Customer Details File
     FSDFTCSL0  UF   E           K DISK    INFSR(*PSSR)
     F                                     COMMIT
     FSDFTCSL1  IF   E           K DISK    INFSR(*PSSR)
     F                                     PREFIX(A)
     F                                     RENAME(SDFTCSD0:SDFTCSD1)
      *
      ** FATCA Non Account Holder Details File
     FSDFTNHL0  UF   E           K DISK    INFSR(*PSSR)
     F                                     COMMIT
      *
      ** FATCA High Value Account Identification List File
     FSDFTHLPD  UF A E             DISK    INFSR(*PSSR)
     F                                     COMMIT
      *
      ** FATCA High Value Account Amounts File
     FSDFTHAPD  UF A E             DISK    INFSR(*PSSR)
     F                                     COMMIT
      *
      ** Account Review Details File
     FSDACRVL0  UF A E           K DISK    INFSR(*PSSR)
     F                                     COMMIT
     FSDACEXL0  O    E             DISK    INFSR(*PSSR)                                     MD026766
     F                                     COMMIT                                           MD026766
      *
      ** Midas SD FATCA High Value Account Identification Report
     FSD000161P1O    E             PRINTER INFSR(*PSSR)
     F                                     INFDS(SPOOL1)
     F                                     USROPN
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ D-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
      *
      ** Data Area giving Installation Control Details
     D RUNDAT        E DS                  EXTNAME(RUNDAT)
      *
      ** The following /COPY line includes (among others) the LDA
      ** layout and the copyright array definition:
     D/COPY ZACPYSRC,STD_D_SPEC
      *
      ** The following /COPY line includes all the defined fields in
      ** the PSDS.  They have meaningful names, prefixed by 'PS'.
     D/COPY ZACPYSRC,PSDS
      *
      ** Array Used In Currency Amount Conversion For ZAPNUM
     D POWER8          S              8  4 DIM(8) CTDATA PERRCD(1)
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
      *
      ** System value High Value Currency
     D SysVal1         C                   'FATCAHighValueCcy'
      ** System value Low Value Depository Account
     D SysVal2         C                   'FATCALowValDepAcc'
      ** System value Low Value Account (Individual)
     D SysVal3         C                   'FATCALowValAccIndiv'
      ** System value Low Value Account (Entity)
     D SysVal4         C                   'FATCALowValAccEntity'
      ** System value High Value Account
     D SysVal5         C                   'FATCAHighValAcc'
     D SysVvl1         C                   'AcRevDftFreq'
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
      *
      ** Change Descriptions for the History of Customer Information
      *
      ** External DS for Bank Details ICD retrieval
     D SDBANK        E DS                  EXTNAME(SDBANKPD)
      *
      ** External DS Based On SDFATCPD
     D SDFATC        E DS                  EXTNAME(SDFATCPD)
      *
      ** External DS Based On SDACUSPD
     D SDACUS        E DS                  EXTNAME(SDACUSPD)
      *
      ** External DS Based On SDFTCSPD
     D SDFTCS        E DS                  EXTNAME(SDFTCSPD)
      *
      ** External DS Based On SCSARDPD
     D SCSARD        E DS                  EXTNAME(SCSARDPD)
      *
      ** External DS Based On SDCURRPD
     D SDCURR        E DS                  EXTNAME(SDCURRPD)
                                                                                            MD027624
      ** Account Review details                                                             MD027624
     D SDACRVDF      E DS                  EXTNAME(SDACRVPD)                                MD027624
      *
      ** Long Data Structure
     D DSSDY         E DS                  EXTNAME(DSSDY)
      *
      ** Short Data Structure
     D DSFDY         E DS                  EXTNAME(DSFDY)
      *
      ** Extra Long Data Structure
     D DSLDY         E DS                  EXTNAME(DSLDY)
 
      ** File Information Data Structure for SD000161P1
     D SPOOL1          DS
     D  SFILE                 83     92
     D  SFNUM                123    124B 0
     D   OFLLN1              188    189B 0
     D   PRTLN1              367    368B 0
 
      ** Data structure for GPAOSVALR0 string
     D SVal1           DS           200
     D  SVal13                 1      3
     D SVal2           DS           200
     D SVal3           DS           200
     D  SVal313                1     13
     D SVal4           DS           200
     D  SVal413                1     13
     D SVal5           DS           200
     D  SVal513                1     13
      *
      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
      *
     D PRtcd           S              7A
     D PRetcd          S              7A
     D POptn           S              7A
     D PMode           S              1A
     D PClas           S              5A
     D PDate           S              5  0
     D PCurr           S              3A
     D PSard           S              6A
     D CSD092          S              1A
     D WRun            S              1A
     D RqdLn1          S              3  0
     D DifLn1          S              4  0
     D PCustNo         S              6A
     D WChange         S              1A
     D WChgHv          S              1A
     D WHvAm           S             15  0
     D WCust           S              6A
     D WLdbl           S             15  0
     D WHvIn           S              1A
     D PBefCUST        S           5000A
     D PAftCUST        S           5000A
     D PBefACUS        S           5000A
     D PAftACUS        S           5000A
     D PBefFTCS        S           5000A
     D PAftFTCS        S           5000A
     D PBefJACC        S           5000A
     D PAftJACC        S           5000A
     D PBefCUAH        S           5000A
     D PAftCUAH        S           5000A
     D PBefCUXC        S           5000A                                                    MD026854
     D PAftCUXC        S           5000A                                                    MD026854
     D PACRV           S              1A
     D PELEC           S              1A
     D LowValInd       S             13  0
     D LowValEnt       S             13  0
     D HighValue       S             13  0
     D KCCLC           S              5A
     D KCUTP           S              1A
     D KHVIN           S              1A
     D KCUST           S              6A
     D KSCDT           S              5  0
     D KSEQN           S              3  0
     D KISTT           S              5A
     D KYRNO           S              2  0
     D KMTHN           S              2  0
     D KPCAL           S              1A
     D KSTRP           S             15  8
     D PLOWI           S             18A
     D PLOWE           S             18A
     D PHIGT           S             18A
     D PHVCY           S              3A
     D WWCSCN          S              6A
     D WWCSSV          S             10A
     D WWCSSC          S             10A
     D WWCSBA          S              3A
     D WWTVDN          S             15  0
     D WWAMT           S             19  3
     D WWQOTC          S              1  0
     D WWSEQN          S              3S 0                                                  MD027624
 
      ** Parameter variables for GPAOSVALR0 string
     D SValK1          S             20
     D SValK2          S             20
     D SValK3          S             20
     D SValK4          S             20
     D SValK5          S             20
     D SValK6          S             20
     D SVal6           S            200
     D SValK7          S             20
     D SVal7           S            200
     D SValK8          S             20
     D SVal8           S            200
     D SValK9          S             20
     D SVal9           S            200
     D SValK0          S             20
     D SVal10          S            200
 
     D SVvlK1          S             20
     D SVvl1           S            200
     D SVvlK2          S             20
     D SVvl2           S            200
     D SVvlK3          S             20
     D SVvl3           S            200
     D SVvlK4          S             20
     D SVvl4           S            200
     D SVvlK5          S             20
     D SVvl5           S            200
     D SVvlK6          S             20
     D SVvl6           S            200
     D SVvlK7          S             20
     D SVvl7           S            200
     D SVvlK8          S             20
     D SVvl8           S            200
     D SVvlK9          S             20
     D SVvl9           S            200
     D SVvlK0          S             20
     D SVvl10          S            200
 
      ** Parameters for ZCONVZ1
     D ZAMTCI          S             15  0
     D ZEXCH           S             13P 8
     D ZMD             S              1
     D ZCCYI           S              3
     D ZCCYO           S              3
     D ZCDPI           S              1  0
     D ZCDPO           S              1  0
     D ZAMTCO          S             15  0
 
      ** Parameters for ZXRATE
     D ZRATE1          S             13P 8
     D ZMDI1           S              1
     D ZRATE2          S             13P 8
     D ZMDI2           S              1
     D ZRATEX          S             13P 8
     D ZMDIX           S              1
 
      ** Parameters for ZSEDIT
     D ZFLD15          S             15  0
     D ZDECS           S              1  0
     D ZECODE          S              1
     D ZOUT21          S             21
 
      ** Parameters for ZALIGN
     D ZALIGNOK        S              1
     D ZFIELD          S             16
     D ZADEC           S              1P 0
     D ZADIG           S              2P 0
 
      ** Parameters for ZAPNUM
     D ZNOML           S             11  0
     D ZAVPR           S             15  8
     D ZNMDP           S              1  0
     D ZNMCD           S              1  0
     D ZPRCB           S              1
     D ZVALU           S             15  0
     D ZVAL0           S             15  0
     D ZVAL1           S             15  1
     D ZVAL2           S             15  2
     D ZVAL3           S             15  3
     D ZI              S              1  0
 
      ** Parameters for FFTVCL
     D FFNOC           S              5  0
     D FFTKDM          S              3  0
     D FFMNPF          S             15  8
     D FFNOT1          S             16  3
     D FFTNVL          S             13  0
     D FFNOTK          S             13  0
 
     D FFFP            DS            15
     D  FFPRIC                 1     15  8
     D  FFINTG                 1      7  0
     D  FFIN                   1      7
     D  FFDCN1                 8      8  0
     D  FFDCN2                 8      9  0
     D  FFDCN3                 8     10  0
     D  FFDECN                 8     10  0
     D  FFDECD                 8     15  0
     D  FFDECA                 8     15
     D  FFDCN4                 9     11  3
     D  FFDCN5                10     12  3
     D  FFDCN6                11     13  3
 
      ** ZSFILE Parameters
     D ZSEQ            S              5
     D ZENTY           S              3
     D ZSERR           S              1
     D ZSNUM           S              6  0
 
      *****************************************************************
      /EJECT
      *****************************************************************
      * MAIN - Processing                                             *
      *****************************************************************
      *
      ** Read in Installation Data
     C     *DTAARA       DEFINE                  RUNDAT
     C                   IN        RUNDAT
      *
      ** Set Date Format Indicator *IN98  on if date format is MMDDYY
     C                   IF        AGDFF = 'M'
     C                   EVAL      *IN98 = *ON
     C                   ENDIF
      *
      ** Report title
     C                   IF        PMode = 'U'
     C                   EVAL      *IN40 = *ON
     C                   ELSE
     C                   EVAL      *IN40 = *OFF
     C                   ENDIF
      *
     C                   READ      SDCUSTL5
     C                   READ      SDNAHOL1
      *
     C                   IF        PMode <> 'F'
     C                   OPEN      SD000161P1
 
     C                   Z-ADD     SFNUM         ZSNUM
     C                   CALL      'ZSFILE'
     C                   PARM      *BLANKS       ZSEQ
     C                   PARM      *BLANKS       ZENTY
     C                   PARM                    SFILE
     C                   PARM                    ZSNUM
     C                   PARM                    ZSERR
 
      ** error during ZSFILE processing, return to calling program
 
     C                   IF        ZSERR = 'Y'
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
     C                   RETURN
     C                   ENDIF
     C                   EXSR      SRHeader
     C                   ENDIF
      *
     C                   IF        %EOF(SDCUSTL5) AND %EOF(SDNAHOL1)
     C                             AND PMode <> 'F'
     C                   WRITE     SD000161R2
     C                   ENDIF
      *
     C                   EXSR      SRCust
     C                   EXSR      SRNaho
      *
     C                   COMMIT
     C                   EVAL      *INLR = *ON
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRHeader - Header subroutine                                 *
      *                                                               *
      *  Called by: SRCust, SRNaho                                    *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRHeader      BEGSR
      *
     C                   WRITE     SD000161R0
      *
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCust   - Customer Details Subroutine                       *
      *                                                               *
      *  Called by: MAIN Processing                                   *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRCust        BEGSR
      *
     C                   DOW       NOT %EOF(SDCUSTL5)
      *
      ** Retrieve FATCA Customer Details
     C     BBCUST        CHAIN     SDFTCSL0
      *
     C                   IF        %FOUND(SDFTCSL0) AND
     C                             FAHVAC <> 'N'
      *
     C                   EVAL      WHvAm = 0
     C                   EVAL      WHvIn = *BLANKS
     C                   MOVE      BBCUST        WCust
      *
      ** Calculate assets
     C                   EXSR      SRCalcAst
      *
      * Check whether customer has any joint accounts
      * If so, add the assets from the joint accounts
     C     BBCUST        SETLL     SDJACCL4
     C     BBCUST        READE     SDJACCL4
      *
     C                   DOW       NOT %EOF(SDJACCL4)
     C     JCJANO        CHAIN     SDFTCSL1
     C                   IF        %FOUND(SDFTCSL1) AND
     C                             AFACSTY = 'J' AND
     C                             AFAHVAC <> 'N'
     C                   MOVE      JCJANO        WCust
      *
      ** Calculate assets
     C                   EXSR      SRCalcAst
     C                   ENDIF
     C     BBCUST        READE     SDJACCL4
     C                   ENDDO
      *
      ** Allocate high value indicator
      *
     C                   SELECT
     C                   WHEN      WHvAM >=HighValue
     C                   EVAL      WHvIn = 'H'
     C                   WHEN      FACSTY = 'P' AND WHvAM < HighValue
     C                             AND WHvAm >= LowValInd
     C                   EVAL      WHvIn = 'M'
     C                   WHEN      FACSTY <> 'P' AND WHvAM <HighValue
     C                             AND WHvAm >= LowValEnt
     C                   EVAL      WHvIn = 'M'
     C                   OTHER
     C                   EVAL      WHvIn = 'L'
     C                   ENDSL
      *
      ** Check whether record exists on decision table
     C                   EXSR      SRCustDet
      *
     C                   IF        PMode <> 'R' AND WChange = 'Y'
     C                   EXSR      SRUpdFile
     C                   ENDIF
      *
      ** If called in update mode, update FATCA customer file with
      ** the High Value Indicator and classification for the
      ** customer.
     C                   IF        PMode = 'U' AND WChange = 'Y'
     C                   EXSR      SRUpdCust
     C                   EXSR      SRUpdAmtFile
     C                   ENDIF
      *
     C                   ENDIF
      *
      ** Check whether new page is required
     C                   IF        PMode <> 'F' AND WChange = 'Y'
     C                   EVAL      RqdLn1 = 2
     C                   EVAL      DifLn1 = OFLLN1 - PRTLN1
 
     C                   IF        DifLn1 <= RqdLn1
     C                   EXSR      SRHeader
     C                   ENDIF
     C                   ENDIF
      *
     C                   READ      SDCUSTL5
      *
     C                   ENDDO
      *
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRNaho - Non Account Holder Detail Subroutine                *
      *                                                               *
      *  Called by: MAIN Processing                                   *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRNaho        BEGSR
      *
     C                   DOW       NOT %EOF(SDNAHOL1)
      ** Skip logically deleted records                                                     MD026770
     C                   IF        NHCHTP <> 'D'                                            MD026770
      *
      ** Retrieve FATCA Non Account Holder Details
     C     NHNAHO        CHAIN     SDFTNHL0
      *
     C                   IF        %FOUND(SDFTNHL0) AND
     C                             FNHVAC <> 'N'
      *
     C                   EVAL      WHvAm = 0
     C                   EVAL      WHvIn = *BLANKS
      *
      * Check whether non account holder is part of a joint account
      * If so, add the assets from the joint accounts
     C     NHNAHO        SETLL     SDJACCL7
     C     NHNAHO        READE     SDJACCL7
      *
     C                   DOW       NOT %EOF(SDJACCL7)
     C     JCJANO        CHAIN     SDFTCSL1
     C                   IF        %FOUND(SDFTCSL1) AND
     C                             AFACSTY = 'J' AND
     C                             AFAHVAC <> 'N'
     C                   MOVE      JCJANO        WCust
      *
      ** Calculate assets
     C                   EXSR      SRCalcAst
     C                   ENDIF
     C     NHNAHO        READE     SDJACCL7
     C                   ENDDO
      *
      ** Allocate high value indicator
      *
     C                   SELECT
     C                   WHEN      WHvAM >=HighValue
     C                   EVAL      WHvIn = 'H'
     C                   WHEN      FNNHTY = 'P' AND WHvAM < HighValue
     C                             AND WHvAm >= LowValInd
     C                   EVAL      WHvIn = 'M'
     C                   WHEN      FNNHTY <> 'P' AND WHvAM <HighValue
     C                             AND WHvAm >= LowValEnt
     C                   EVAL      WHvIn = 'M'
     C                   OTHER
     C                   EVAL      WHvIn = 'L'
     C                   ENDSL
      *
      ** Check whether record exists on decision table
     C                   EXSR      SRNahoDet
      *
     C                   IF        PMode <> 'R' AND WChange = 'Y'
     C                   EXSR      SRUpdFile
     C                   ENDIF
      *
      ** If called in update mode, update FATCA Non Account Holder
      ** file with the High Value Indicator and Classification for
      ** the Non Account Holder.
     C                   IF        PMode = 'U' AND WChange = 'Y'
     C                   EXSR      SRUpdNaho
     C                   ENDIF
      *
     C                   ENDIF
      *
      ** Check whether new page is required
     C                   IF        PMode <> 'F' AND WChange = 'Y'
     C                   EVAL      RqdLn1 = 2
     C                   EVAL      DifLn1 = OFLLN1 - PRTLN1
 
     C                   IF        DifLn1 <= RqdLn1
     C                   EXSR      SRHeader
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDIF                                                              MD026770
                                                                                            MD026770
     C                   READ      SDNAHOL1
      *
     C                   ENDDO
      *
      *
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCalcAst - Calculate Assets Subroutine                      *
      *                                                               *
      *  Called by: SRCust, SRNaho                                    *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRCalcAst     BEGSR
      *
      ** Retail and Saving Accounts
     C     WCust         SETLL     ACCNTLC
     C     WCust         READE     ACCNTLC
     C                   DOW       NOT %EOF(ACCNTLC)
      *
      ** Saving accounts
     C                   IF        STYP = 'S' AND LDBL < 0
      ** Convert to high value currency
     C                   EVAL      PCurr = CCY
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = LDBL * -1
     C                   EXSR      SRCvtAmount
     C                   ADD       ZAMTCO        WHvAm
      *
     C                   ENDIF
     C     WCust         READE     ACCNTLC
     C                   ENDDO
      *
      ** Money market and Fiduciary Deposits
     C     WCust         SETLL     DEALSDCF
     C     WCust         READE     DEALSDCF                               80
     C                   DOW       *IN80 = *OFF
      *
     C                   IF        RECI = 'D' AND (DTYP = 'TD' OR
     C                             DTYP = 'IT' OR DTYP = 'CD' OR
     C                             DTYP = 'CI' OR DTYP = 'FT' OR
     C                             DTYP = 'DT' OR DTYP = 'LT')
      ** Convert to high value currency
     C                   EVAL      PCurr = CCY
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = PCPL
     C                   EXSR      SRCvtAmount
     C                   ADD       ZAMTCO        WHvAm
 
     C                   ENDIF
     C     WCust         READE     DEALSDCF                               80
     C                   ENDDO
      *
      ** Customer Lending Participations Sold
     C     WCust         SETLL     LELOANLA
     C     WCust         READE     LELOANLA
     C                   DOW       NOT %EOF(LELOANLA)
      *
     C                   IF        PTYP = 66 OR PTYP = 67 OR
     C                             PTYP = 69 OR PTYP = 72
      ** Convert to high value currency
     C                   EVAL      PCurr = CCY
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = CPAM
     C                   EXSR      SRCvtAmount
      *
     C                   ADD       ZAMTCO        WHvAm
     C                   ENDIF
     C     WCust         READE     LELOANLA
     C                   ENDDO
      *
      ** Foreign Exchange Deals
     C     WCust         SETLL     DEALSDBF
     C     WCust         READE     DEALSDBF                               80
     C                   DOW       *IN80 = *OFF
      *
     C                   IF        RECI = 'D' AND (DTYP = 'FS' OR
     C                             DTYP = 'FP' OR DTYP = 'CX' OR
     C                             DTYP = 'SW' OR DTYP = 'OP' OR
     C                             DTYP = 'OT' OR DTYP = 'SI' OR
     C                             DTYP = 'PI')
      ** Convert to high value currency
     C                   EVAL      PCurr = SLCY
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = SLAM
     C                   EXSR      SRCvtAmount
      *
     C                   ADD       ZAMTCO        WHvAm
     C                   ENDIF
      *
     C     WCust         READE     DEALSDBF                               80
     C                   ENDDO
      *
      ** Forward Rate Agreements
     C     WCust         SETLL     DEALSDGF
     C     WCust         READE     DEALSDGF                               80
     C                   DOW       *IN80 = *OFF
      *
     C                   IF        RECI = 'D' AND (DTYP = 'FR' OR
     C                             DTYP = 'RS' OR DTYP = 'RX' OR
     C                             (DTYP = 'RP' and BYSL = 'B') OR
     C                             (DTYP = 'RR' and BYSL = 'B') OR
     C                             (DTYP = 'RF' and BYSL = 'S'))
      ** Convert to high value currency
     C                   IF        DTYP = 'RX'
     C                   EVAL      PCurr = TCUCY
     C                   EVAL      ZAMTCI = TPAMT
     C                   ELSE
     C                   EVAL      PCurr = UCUCY
     C                   EVAL      ZAMTCI = UPAMT
     C                   ENDIF
      *
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EXSR      SRCvtAmount
      *
     C                   ADD       ZAMTCO        WHvAm
     C                   ENDIF
      *
     C     WCust         READE     DEALSDGF                               80
     C                   ENDDO
      *
      ** Securities Customer Positions
     C                   MOVE      BBCUST        WWCSCN
     C                   MOVE      *LOVAL        WWCSSV
     C     KSCSEP        SETLL     SESEPSLL
     C                   READ      SESEPSLL                               47
      *
     C                   DOW       *IN47 = *OFF AND WWCSCN = CSCN
     C                   EVAL      WWCSSC = CSSC
     C                   EVAL      WWCSBA = CSBA
     C                   EVAL      WWTVDN = 0
     C                   DOW       WWCSSC = CSSC  AND WWCSBA = CSBA
     C                             AND *IN47 = *OFF
     C                   ADD       CSNV          WWTVDN
     C                   READ      SESEPSLL                               47
     C                   ENDDO
      *
     C     WWCSSC        CHAIN     SECTY                              48
     C                   IF        *IN48 = *ON OR CHTP = 'D'
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SECTY'
     C                   EVAL      DBKEY  = WWCSSC
     C                   EVAL      DBASE  = 5
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   EVAL      PCurr = NMCY
     C                   EXSR      SRRtvCurr
      *
      ** Calculate 'Market Value Of Security' In Nominal Ccy Using
      **  Standard Subroutine ZAPNUM
     C                   EVAL      ZNOML =  WWTVDN
     C                   EVAL      ZAVPR = MKPR
     C                   EVAL      ZNMDP = NMDP
     C                   EVAL      ZNMCD = A6NBDP
     C                   EVAL      ZPRCB = SPBS
     C                   EXSR      ZAPNUM
      ** Convert to high value currency
     C                   IF        ZVALU > 0
     C                   EVAL      PCurr = NMCY
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = ZVALU
     C                   EXSR      SRCvtAmount
     C                   ADD       ZAMTCO        WHvAm
     C                   ENDIF
      *
     C                   ENDDO
      *
      ** Futures and Options
     C                   MOVE      BBCUST        WWCSCN
      *
      ** Read the FF Transactions File
     C     WWCSCN        SETLL     TRANSC
     C                   READ      TRANSC                                 49
      *
     C                   DOW       *IN49 = *OFF AND WWCSCN = CUSC
     C                   EVAL      WWAMT = 0
      *
      ** Only trades with a Transaction Type 'S' (Sold) must be reported
     C                   IF        TRTY = 'S'
      *
      ** Get FF Instrument Types record
     C     ISTT          CHAIN     INTYP
      *
     C                   IF        NOT %FOUND(INTYP)
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'INTYP'
     C                   EVAL      DBKEY  = BBCUST
     C                   EVAL      DBASE  = 6
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** Futures with the Instrument Processing Type equal to 7
      ** (Australian) and Options with the Instrument Processing Type
      ** equal to 8 (Australian) must be ignored
     C                   IF        ISPT <> 7 AND ISPT <> 8
      *
     C                   IF        ISPT = 5
     C                   MOVE      OTHC          PCurr
     C                   ELSE
     C                   MOVE      ISCY          PCurr
     C                   ENDIF
      *
     C                   EXSR      SRRtvCurr
      *
      ** Get FF Market Prices record
     C                   IF        ISPT <> 5
     C                   EVAL      KISTT = ISTT
     C                   EVAL      KYRNO = YRNO
     C                   EVAL      KMTHN = MTHN
     C                   EVAL      KPCAL = PCAL
     C                   EVAL      KSTRP = STRP
     C     KPRIC         CHAIN     PRICS
      *
     C                   IF        %FOUND(PRICS)
      *
     C                   IF        ISPT = 1 OR ISPT = 4
     C                   EVAL      NEWP = 100 - NEWP
     C                   ENDIF
      *
     C                   EVAL      FFNOC = NOCO
     C                   EVAL      FFPRIC = NEWP
     C                   EVAL      FFTKDM = TKDM
     C                   EVAL      FFMNPF = MNPF
     C                   EXSR      FFTVCL
     C                   EVAL      WWAMT = FFTNVL * TKVL
     C                   EVAL      WWAMT = WWAMT * 1000
      *
     C                   ENDIF
      *
      ** Instrument processing type = 5
     C                   ELSE
     C                   EVAL      WWAMT = NOCO * CCAM
     C                   EVAL      WWAMT = WWAMT * 1000
     C                   ENDIF
      *
     C                   IF        WWAMT > 0
      *
     C                   IF        QOTC < 0
     C                   Z-SUB     QOTC          WWQOTC
     C                   DO        WWQOTC
     C                   EVAL      WWAMT = WWAMT / 10
     C                   ENDDO
     C                   ENDIF
      *
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE1 = A6SPRT
     C                   EVAL      ZMDI1 = A6MDIN
     C                   EVAL      ZCCYI = PCurr
     C                   EVAL      ZCDPI = A6NBDP
     C                   EVAL      ZAMTCI = WWAMT
     C                   EXSR      SRCvtAmount
     C                   ADD       ZAMTCO        WHvAm
     C                   ENDIF
      *
     C                   ENDIF
     C                   ENDIF
     C                   READ      TRANSC                                 49
     C                   ENDDO
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCustDet - Customer Details subroutine                      *
      *                                                               *
      *  Called by: SRCust                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRCustDet     BEGSR
      *
      ** Customer Details
     C                   EVAL      XRCUST = BBCUST
     C                   EVAL      XRCSSN = BBCSSN
     C                   EVAL      XRRPNM = BBCRNM
     C                   EVAL      XRRPTN = BBCRTN
      *
      ** Retrieve US TIN
     C                   CALL      'AOACUSR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      '*KEY'        POptn
     C                   PARM      BBCUST        PCustNo
     C     SDACUS        PARM      SDACUS        DSLDY
      *
     C                   IF        PRtcd = *BLANKS
     C                   EVAL      XRUTIN = E5TINO
     C                   ELSE
     C                   EVAL      XRUTIN = *BLANKS
     C                   ENDIF
      *
      ** FATCA Customer Type
     C                   EVAL      XRCUTP = FACSTY
      *
      ** Current FATCA Classification
     C                   EVAL      XRCCLC = FACLAC
      *
      ** Check decision table
     C                   EVAL      KCCLC = '*ALL'
     C                   EVAL      KCUTP = '*'
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
      *
     C                   EVAL      KCCLC = '*ALL'
     C                   EVAL      KCUTP = FACSTY
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      KCCLC = FACLAC
     C                   EVAL      KCUTP = '*'
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      KCCLC = FACLAC
     C                   EVAL      KCUTP = FACSTY
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      XRNCLC = FACLAC
     C                   EVAL      HVSUBJ = *BLANKS
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      ** Retrieve description for New FATCA Classification Code
     C                   CALL      'AOFATCR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      '*KEY'        POptn
     C                   PARM      XRNCLC        PClas
     C     SDFATC        PARM      SDFATC        DSFDY
      *
     C                   IF        PRtcd = *BLANKS
     C                   EVAL      XRNCLD = FCDESC
     C                   ELSE
     C                   EVAL      XRNCLD = *BLANKS
     C                   ENDIF
      *
      ** High Value Calculated
     C                   EVAL      ZFLD15 = WHvAm
     C                   EVAL      ZDECS = ZCDPO
     C                   EXSR      SRFmtAmount
     C                   MOVE      ZOUT21        XRHVAM
      *
      ** Check whether High Value Indicator can be changed
     C                   IF        (FAHVAC = *BLANKS AND WHvIn <>
     C                             *BLANKS) OR
     C                             (FAHVAC = 'L' AND WHvIn = 'M') OR
     C                             (FAHVAC = 'L' AND WHvIn = 'H') OR
     C                             (FAHVAC = 'M' AND WHvIn = 'H')
     C                   EVAL      XRHVIN = WHvIn
     C                   EVAL      WChgHV = 'Y'
     C                   ELSE
     C                   EVAL      XRHVIN = FAHVAC
     C                   EVAL      WChgHV = 'N'
     C                   ENDIF
      *
      ** Subject to Reporting
     C                   IF        WHvIn = 'L' AND HVSUBJ = 'N'
     C                   EVAL      XRSUBJ = 'N'
     C                   ELSE
     C                   EVAL      XRSUBJ = FAREPT
     C                   ENDIF
      *
      ** Check whether record has changed
     C                   IF        XRHVIN <> FAHVAC OR
     C                             XRNCLC <> FACLAC OR
     C                             XRSUBJ <> FAREPT
     C                   EVAL      WChange = 'Y'
     C                   ELSE
     C                   EVAL      WChange = 'N'
     C                   ENDIF
      *
     C                   IF        PMode <> 'F' AND WChange = 'Y'
     C                   WRITE     SD000161R1
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRNahoDet - Non Account Holder Details subroutine            *
      *                                                               *
      *  Called by: SRNaho                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRNahoDet     BEGSR
      *
      ** Non Account Holder Details
     C                   EVAL      XRCUST = NHNAHO
     C                   EVAL      XRCSSN = *BLANKS
     C                   EVAL      XRRPNM = NHNARN
     C                   EVAL      XRRPTN = NHNATW
     C                   EVAL      XRUTIN = *BLANKS
      *
      ** FATCA NAHO Type
     C                   EVAL      XRCUTP = FNNHTY
      *
      ** Current FATCA Classification
     C                   EVAL      XRCCLC = FNCLAC
      *
      ** Check decision table
     C                   EVAL      KCCLC = '*ALL'
     C                   EVAL      KCUTP = '*'
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
      *
     C                   EVAL      KCCLC = '*ALL'
     C                   EVAL      KCUTP = FNNHTY
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      KCCLC = FNCLAC
     C                   EVAL      KCUTP = '*'
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      KCCLC = FNCLAC
     C                   EVAL      KCUTP = FNNHTY
     C                   EVAL      KHVIN = WHvIn
     C     KFTHVF        CHAIN     SDFTHVL1
     C                   IF        %FOUND(SDFTHVL1)
      ** New FATCA Classification
     C                   EVAL      XRNCLC = HVNCLC
      *
     C                   ELSE
     C                   EVAL      XRNCLC = FNCLAC
     C                   EVAL      HVSUBJ = *BLANKS
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      ** Retrieve description for New FATCA Classification Code
     C                   CALL      'AOFATCR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      '*KEY'        POptn
     C                   PARM      XRNCLC        PClas
     C     SDFATC        PARM      SDFATC        DSFDY
      *
     C                   IF        PRtcd = *BLANKS
     C                   EVAL      XRNCLD = FCDESC
     C                   ELSE
     C                   EVAL      XRNCLD = *BLANKS
     C                   ENDIF
      *
      ** High Value Calculated
     C                   EVAL      ZFLD15 = WHvAm
     C                   EVAL      ZDECS = ZCDPO
     C                   EXSR      SRFmtAmount
     C                   MOVE      ZOUT21        XRHVAM
      *
      ** Check whether High Value Indicator can be changed
     C                   IF        (FNHVAC = *BLANKS AND WHvIn <>
     C                             *BLANKS) OR
     C                             (FNHVAC = 'L' AND WHvIn = 'M') OR
     C                             (FNHVAC = 'L' AND WHvIn = 'H') OR
     C                             (FNHVAC = 'M' AND WHvIn = 'H')
     C                   EVAL      XRHVIN = WHvIn
     C                   EVAL      WChgHV = 'Y'
     C                   ELSE
     C                   EVAL      XRHVIN = FNHVAC
     C                   EVAL      WChgHV = 'N'
     C                   ENDIF
      *
      ** Subject to Reporting
     C                   IF        WHvIn = 'L' AND HVSUBJ = 'N'
     C                   EVAL      XRSUBJ = 'N'
     C                   ELSE
     C                   EVAL      XRSUBJ = FNREPT
     C                   ENDIF
      *
      ** Check whether record has changed
     C                   IF        XRHVIN <> FNHVAC OR
     C                             XRNCLC <> FNCLAC OR
     C                             XRSUBJ <> FNREPT
     C                   EVAL      WChange = 'Y'
     C                   ELSE
     C                   EVAL      WChange = 'N'
     C                   ENDIF
      *
     C                   IF        PMode <> 'F' AND WChange = 'Y'
     C                   WRITE     SD000161R1
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdCust - Update FATCA Customer Subroutine                 *
      *                                                               *
      *  Called by: SRCust                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRUpdCust     BEGSR
      *
      ** Save before image of SDFTCSPD
     C                   EVAL      PBefFTCS = SDFTCS
      *
      ** High Value Indicator
     C                   EVAL      FAHVAC = XRHVIN
      ** Subject to Reporting
     C                   EVAL      FAREPT = XRSUBJ
      ** If classification has changed
     C                   IF        XRNCLC <> FACLAC
      ** Previous FATCA Classification
     C                   EVAL      FAPCLA = FACLAC
      ** FATCA Classification
     C                   EVAL      FACLAC = XRNCLC
      ** FATCA Classification Date
     C                   EVAL      FACLAD = BJRDNB
     C                   ENDIF
      ** Last Change Date
     C                   EVAL      FALDAT = BJRDNB
      ** Last Change Type
     C                   EVAL      FALCTP = 'A'
      ** Last Change User Profile
     C                   EVAL      FALUSR = PSUser
      ** Save after image of SDFTCSPD
     C                   EVAL      PAftFTCS = SDFTCS
      *
      ** Update FATCA customer details
     C                   UPDATE    SDFTCSD0
      *
      ** Write to the History of Customer Information
     C                   IF        CSD092 = 'Y'
      *
     C                   CALL      'SD009696'
     C                   PARM      BBCUST        PCustNo
     C                   PARM      *BLANKS       PBefCUST
     C                   PARM      *BLANKS       PAftCUST
     C                   PARM      *BLANKS       PBefACUS
     C                   PARM      *BLANKS       PAftACUS
     C                   PARM                    PBefFTCS
     C                   PARM                    PAftFTCS
     C                   PARM      *BLANKS       PBefJACC
     C                   PARM      *BLANKS       PAftJACC
     C                   PARM      *BLANKS       PBefCUAH
     C                   PARM      *BLANKS       PAftCUAH
     C                   PARM      *BLANKS       PBefCUXC                                   MD026854
     C                   PARM      *BLANKS       PAftCUXC                                   MD026854
     C                   PARM      *BLANKS       PACRV
     C                   PARM      *BLANKS       PELEC
      *
      ** Generate an account review if the high value indicator is
      ** changed to high
     C                   IF        WChgHv = 'Y' and  XRHVIN = 'H'
      *
     C                   EVAL      KCUST = XRCUST
     C                   EVAL      KSCDT = BJRDNB
     C                   EVAL      KSEQN = 999
     C     KACRV         SETGT     SDACRVL0
     C                   READP     SDACRVL0
      *
     C                   IF        ARCUST = KCUST AND
     C                             ARSCDT = KSCDT
     C**********         EVAL      ARSEQN = ARSEQN + 1                                      MD027624
     C                   EVAL      WWSEQN = ARSEQN + 1                                      MD027624
     C                   ELSE
     C**********         EVAL      ARSEQN = 1                                               MD027624
     C                   EVAL      WWSEQN = 1                                               MD027624
     C                   ENDIF
      *
     C                   CLEAR                   SDACRVDF                                   MD027624
     C                   EVAL      ARSEQN = WWSEQN                                          MD027624
     C                   EVAL      ARCUST = XRCUST
     C                   EVAL      ARPURP = 'FATCA High Value +
     C                                      Account Review'
     C**********         EVAL      ARSCDT = BJRDNB                                          MD027624
     C                   EVAL      ARACRF = SVvl1
     C                   EVAL      ARMAGE = 'G'
     C                   EVAL      ARLTYP = 'I'
     C                   EVAL      ARLUSR = PSUser
                                                                                            MD026502
      ** Calculate for Schedule Date                                                        MD026502
     C                   CALL      'SD000164'                                               MD026502
     C                   PARM      *BLANKS       RtCdScDt          7                        MD026502
     C                   PARM      ARACRF        AcRvFreq          1                        MD026502
     C                   PARM      'N'           AcRvComp          1                        MD026502
     C                   PARM                    BJDFIN                                     MD026502
     C                   PARM                    BJCYCD                                     MD026502
     C                   PARM                    BJLCCY                                     MD026502
     C                   PARM                    BJSLCD                                     MD026502
     C                   PARM                    BJRDNB                                     MD026502
     C                   PARM      0             AcRvScDt          5 0                      MD026502
      ** Account Review Schedule Date                                                       MD026502
     C                   EVAL      ARSCDT = AcRvScDt                                        MD026502
      *
     C                   CALLB     'ZAGENTMSTM'
     C                   PARM                    ARTMST
      *
     C                   WRITE     SDACRVD0
                                                                                            MD026766
     C                   EVAL      DDCUST = ARCUST                                          MD026766
     C                   EVAL      DDSCDF = *BLANKS                                         MD026766
     C                   MOVEL     ARSCDT        DDSCDF                                     MD026766
     C                   EVAL      DDSEQN = %TRIML(%CHAR(ARSEQN):'0')                       MD026766
     C                   EVAL      DDFOID = ARFOID                                          MD026766
     C                   WRITE     TSDACRVD0                                                MD026766
                                                                                            MD026766
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdNaho - Update FATCA Non Account Holder Subroutine       *
      *                                                               *
      *  Called by: SRNaho                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRUpdNaho     BEGSR
      *
      ** High Value Indicator
     C                   EVAL      FNHVAC = XRHVIN
      ** Subject to Reporting
     C                   EVAL      FNREPT = XRSUBJ
      ** If classification has changed
     C                   IF        XRNCLC <> FNCLAC
      ** Previous FATCA Classification
     C                   EVAL      FNPCLA = FNCLAC
      ** FATCA Classification
     C                   EVAL      FNCLAC = XRNCLC
      ** FATCA Classification Date
     C                   EVAL      FNCLAD = BJRDNB
     C                   ENDIF
      ** Last Change Date
     C                   EVAL      FNLDAT = BJRDNB
      ** Last Change Type
     C                   EVAL      FNLCTP = 'A'
      ** Last Change User Profile
     C                   EVAL      FNLUSR = PSUser
      *
      ** Update FATCA customer details
     C                   UPDATE    SDFTNHD0
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdFile - Update Enquiry File Subroutine                   *
      *                                                               *
      *  Called by: SRCust, SRNaho                                    *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRUpdFile     BEGSR
      *
      ** FATCA Customer/Non Account Holder
     C                   EVAL      HLCUST = XRCUST
      ** US TIN
     C                   EVAL      HLUTIN = XRUTIN
      ** Current FATCA Classification Code
     C                   EVAL      HLCCLC = XRCCLC
      ** New FATCA Classification Code
     C                   EVAL      HLNCLC = XRNCLC
      ** FATCA Customer Type
     C                   EVAL      HLCUTP = XRCUTP
      ** High Value Indicator
     C                   EVAL      HLHVIN = XRHVIN
      ** High Value Calculated
     C                   EVAL      HLHVAM = XRHVAM
      ** Subject to Reporting
     C                   EVAL      HLSUBJ = XRSUBJ
      *
     C                   WRITE     SDFTHLD0
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdAmtFile - Update Amount File Subroutine                 *
      *                                                               *
      *  Called by: SRCust                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRUpdAmtFile  BEGSR
      *
     C                   CLEAR                   SDFTHAD0
      ** FATCA Customer
     C                   EVAL      HACUST = XRCUST
      ** Branch
     C                   EVAL      HABRCA = BBBRCD
      ** FATCA Customer Type
     C                   EVAL      HACUTP = XRCUTP
      ** High Value Indicator
     C                   EVAL      HAHVIN = XRHVIN
      ** High Value Calculated
     C                   EVAL      HAHVAM = WHVAM
     C                   EVAL      HAUTIN = FAUTIN
     C                   EVAL      HAUTNC = BBCOLC
     C                   IF        XRUTIN <> *BLANKS
     C                   EVAL      HATIN2 = E5TIN2
     C                   EVAL      HATNC2 = E5TNC2
     C                   EVAL      HATIN3 = E5TIN3
     C                   EVAL      HATNC3 = E5TNC3
     C                   EVAL      HATIN4 = E5TIN4
     C                   EVAL      HATNC4 = E5TNC4
     C                   EVAL      HATIN5 = E5TIN5
     C                   EVAL      HATNC5 = E5TNC5
     C                   ENDIF
     C                   EVAL      HATIND = *BLANK
      *
     C                   WRITE     SDFTHAD0
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRRtvCurr - Retrieve Currency Details                        *
      *                                                               *
      *  Called by: SRCalcAst, *INZSR                                 *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRRtvCurr     BEGSR
      *
      ** Retrieve currency information
     C                   CALL      'AOCURRR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      '*KEY'        POptn
     C                   PARM                    PCurr
     C     SDCURR        PARM      SDCURR        DSSDY
      *
     C                   IF        PRtcd <> *BLANKS
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SDCURRPD'
     C                   EVAL      DBKEY  = PCurr
     C                   EVAL      DBASE  = 3
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCvtAmount - Convert amount                                 *
      *                                                               *
      *  Called by: SRCalcAst                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRCvtAmount   BEGSR
      *
      * Calculate cross exchange rate
     C                   CALLB     'ZXRATE'
     C                   PARM                    ZRATE1
     C                   PARM                    ZMDI1
     C                   PARM                    ZRATE2
     C                   PARM                    ZMDI2
      ** Outputs
     C                   PARM      *ZEROS        ZRATEX
     C                   PARM      *BLANKS       ZMDIX
      *
      * Convert amount
     C                   CALL      'ZCONVZ1'
      ** Inputs
     C                   PARM                    ZAMTCI
     C                   PARM      ZRATEX        ZEXCH
     C                   PARM      ZMDIX         ZMD
     C                   PARM                    ZCCYI
     C                   PARM                    ZCCYO
     C                   PARM                    ZCDPI
     C                   PARM                    ZCDPO
      ** Output
     C                   PARM      *ZEROS        ZAMTCO
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRFmtAmount - Format amount                                  *
      *                                                               *
      *  Called by: SRCustDet, SRNahoDet, *INZSR                      *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRFmtAmount   BEGSR
      *
      * Format amount
     C                   CALLB     'ZSEDIT'
     C                   PARM                    ZFLD15
     C                   PARM                    ZDECS
     C                   PARM      'J'           ZECODE
     C                   PARM                    ZOUT21
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRAlgAmount - Align amount                                   *
      *                                                               *
      *  Called by: *INZSR                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     SRAlgAmount   BEGSR
      *
      * Align amount
     C                   CALLB     'ZALIGN'
     C                   PARM                    ZALIGNOK
     C                   PARM                    ZFIELD
     C                   PARM                    ZADEC
     C                   PARM                    ZADIG
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  ZAPNUM - Calculate AP Numerator                              *
      *                                                               *
      *  Called by: SRCalcAst                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     ZAPNUM        BEGSR
      *
      ** If number of currency decimal places I = 0
     C                   IF        ZNMCD = 0
     C     ZNOML         MULT(H)   ZAVPR         ZVAL0
     C                   EVAL      ZVALU =  ZVAL0
     C                   ENDIF
      *
      ** If number of currency decimal places I = 1
     C                   IF        ZNMCD = 1
     C     ZNOML         MULT(H)   ZAVPR         ZVAL1
     C                   EVAL      ZVALU =  ZVAL1
     C                   ENDIF
      *
      ** If number of currency decimal places I = 2
     C                   IF        ZNMCD = 2
     C     ZNOML         MULT(H)   ZAVPR         ZVAL2
     C                   EVAL      ZVALU =  ZVAL2
     C                   ENDIF
      *
      ** If number of currency decimal places I = 3
     C                   IF        ZNMCD = 3
     C     ZNOML         MULT(H)   ZAVPR         ZVAL3
     C                   EVAL      ZVALU =  ZVAL3
     C                   ENDIF
      *
      ** Set Index ZI equal to 5 - Nominal Decimal Places
     C     5             SUB       ZNMDP         ZI
      *
      ** Multiply ZVALU by POWER8,ZI to get amount with Nominal Decimal Places
     C     ZVALU         MULT      POWER8(ZI)    ZVALU
      *
      ** Price Basis IF = Percentage
     C                   IF        ZPRCB = 'P'
     C     ZVALU         DIV(H)    100           ZVALU
     C                   ENDIF
      *
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  FFTVCL - Calculates transaction value for a given number of  *
      *           contracts at a given price in units of the          *
      *           appropriate ticks denominator or minimum price      *
      *           fluctuation (depending on whether the ticks         *
      *           denominator is 100)                                 *
      *                                                               *
      *  Called by: SRCalcAst                                         *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
     C     FFTVCL        BEGSR
      *
      **  If the Ticks Denominator is equal to 100
     C                   IF        FFTKDM = 100
      *
      ** Divide Price by Min Price Fluctuation
     C                   EVAL      FFNOTK = FFPRIC / FFMNPF
     C                   ELSE
      ** Multiply integer of Price by the Ticks Denominator
     C                   EVAL      FFNOTK = FFINTG * FFTKDM
      ** The remaining fraction of the Price should be added to the
      ** result of Price integer X Ticks Denominator
      *
      ** If Ticks Denominator is between 1 & 10 use 1st dec place
     C                   IF        FFTKDM <= 10
     C                   ADD       FFDCN1        FFNOTK
      *
     C                   IF        FFMNPF <> 0
     C                   EVAL      FFNOT1 = FFNOTK + FFDCN4
     C                   EVAL      FFNOTK = FFNOT1 / FFMNPF
     C                   ENDIF
      *
     C                   ELSE
      *
      ** If Ticks Denominator is between 11 & 99 use 1-2nd dec places
     C                   IF        FFTKDM <= 99
     C                   ADD       FFDCN2        FFNOTK
      *
     C                   IF        FFMNPF <> 0
     C                   EVAL      FFNOT1 = FFNOTK + FFDCN5
     C                   EVAL      FFNOTK = FFNOT1 / FFMNPF
     C                   ENDIF
      *
     C                   ELSE
      ** If Ticks Denominator is between 101 & 999 use 1-3rd dec places
     C                   ADD       FFDCN3        FFNOTK
      *
     C                   IF        FFMNPF <> 0
     C                   EVAL      FFNOT1 = FFNOTK + FFDCN6
     C                   EVAL      FFNOTK = FFNOT1 / FFMNPF
     C                   ENDIF
      *
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      ** Multiply the number of ticks by the number of contracts
     C                   EVAL      FFTNVL = FFNOTK * FFNOC
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      *  *INZSR - Program Initialisation routine                      *
      *                                                               *
      *  Called by: Implicitly on program activation                  *
      *                                                               *
      *  Calls: *PSSR                                                 *
      *                                                               *
      *****************************************************************
      *
     C     *INZSR        BEGSR
      *
     C     *ENTRY        PLIST
     C                   PARM                    PRetcd
     C                   PARM                    PMode
     C                   PARM                    PLOWI
     C                   PARM                    PLOWE
     C                   PARM                    PHIGT
     C                   PARM                    PHVCY
      *
      ** Access installation control data
     C                   CALL      'AOBANKR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      '*FIRST'      POptn
     C     SDBANK        PARM      SDBANK        DSFDY
      *
     C                   IF        PRtcd <> *BLANKS
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SDBANKPD'
     C                   EVAL      DBKEY  = '*FIRST'
     C                   EVAL      DBASE  = 1
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** Setup Header fields
     C                   EVAL      RRRUNA = BJMRDT
     C                   EVAL      RRTITL = BJURPT
 
      ** Check whether CSD092 is available
     C                   CALL      'AOSARDR0'
     C                   PARM      *Blanks       PRtcd
     C                   PARM      '*VERIFY'     POptn
     C                   PARM      'CSD092'      PSard
     C     SCSARD        PARM      SCSARD        DSFDY
 
     C                   IF        PRtcd <> *Blanks
     C                   IF        PRtcd <> '*NRF'
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SCSARDPD'
     C                   EVAL      DBKEY  = PSard
     C                   EVAL      DBASE  = 2
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
     C                   EVAL      CSD092 = 'N'
     C                   ELSE
     C                   EVAL      CSD092 = 'Y'
     C                   ENDIF
 
     C                   CALL      'AOSVALR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      SysVvl1       SVvlK1
     C                   PARM                    SVvl1
     C                   PARM                    SVvlK2
     C                   PARM                    SVvl2
     C                   PARM                    SVvlK3
     C                   PARM                    SVvl3
     C                   PARM                    SVvlK4
     C                   PARM                    SVvl4
     C                   PARM                    SVvlK5
     C                   PARM                    SVvl5
     C                   PARM                    SVvlK6
     C                   PARM                    SVvl6
     C                   PARM                    SVvlK7
     C                   PARM                    SVvl7
     C                   PARM                    SVvlK8
     C                   PARM                    SVvl8
     C                   PARM                    SVvlK9
     C                   PARM                    SVvl9
     C                   PARM                    SVvlK0
     C                   PARM                    SVvl10
 
     C                   IF        PRtcd <> *Blanks  AND
     C                             PRtcd <> '*NRF   '
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SDSVALPD'
     C                   EVAL      DBKEY = SVvlK1
     C                   EVAL      DBASE = 5
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** Check system value high/low account information
     C                   CALL      'GPAOSVALR0'
     C                   PARM      *BLANKS       PRtcd
     C                   PARM      SysVal1       SValK1
     C                   PARM                    SVal1
     C                   PARM      SysVal2       SValK2
     C                   PARM                    SVal2
     C                   PARM      SysVal3       SValK3
     C                   PARM                    SVal3
     C                   PARM      SysVal4       SValK4
     C                   PARM                    SVal4
     C                   PARM      SysVal5       SValK5
     C                   PARM                    SVal5
     C                   PARM                    SValK6
     C                   PARM                    SVal6
     C                   PARM                    SValK7
     C                   PARM                    SVal7
     C                   PARM                    SValK8
     C                   PARM                    SVal8
     C                   PARM                    SValK9
     C                   PARM                    SVal9
     C                   PARM                    SValK0
     C                   PARM                    SVal10
 
     C                   IF        PRtcd <> *Blanks  AND
     C                             PRtcd <> '*NRF   '
     C     *LOCK         IN        LDA
     C                   EVAL      DBFILE = 'SDSVALPD'
     C                   EVAL      DBKEY = SValK1
     C                   EVAL      DBASE = 4
     C                   EVAL      DBPGM = 'SD000161'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   EVAL      PCurr = SVal13
     C                   EXSR      SRRtvCurr
 
     C                   EVAL      ZADEC = A6NBDP
     C                   EVAL      ZADIG = 13
      *
     C                   EVAL      ZFIELD = SVal313
     C                   EXSR      SRAlgAmount
     C                   MOVE      ZFIELD        LowValInd
      *
     C                   EVAL      ZFIELD = SVal413
     C                   EXSR      SRAlgAmount
     C                   MOVE      ZFIELD        LowValEnt
      *
     C                   EVAL      ZFIELD = SVal513
     C                   EXSR      SRAlgAmount
     C                   MOVE      ZFIELD        HighValue
      *
      ** Retrieve high value currency rate
     C                   EVAL      PCurr = SVal13
     C                   EXSR      SRRtvCurr
     C                   EVAL      ZRATE2 = A6SPRT
     C                   EVAL      ZMDI2 = A6MDIN
     C                   EVAL      ZCCYO = PCurr
     C                   EVAL      ZCDPO = A6NBDP
      *
      ** Format system values for report
      *
      ** Low Value Threshold (Individual)
     C                   EVAL      ZFLD15 = LowValInd
     C                   EVAL      ZDECS = A6NBDP
     C                   EXSR      SRFmtAmount
     C                   MOVE      ZOUT21        XRLOWI
 
      ** Trim all spaces on the left to left adjust the value
      ** on display
 
     C                   EVAL      XRLOWI = %TRIML(XRLOWI)
 
     C                   MOVE      ZOUT21        PLOWI
      *
      ** Low Value Threshold (Entity)
     C                   EVAL      ZFLD15 = LowValEnt
     C                   EVAL      ZDECS = A6NBDP
     C                   EXSR      SRFmtAmount
     C                   MOVE      ZOUT21        XRLOWE
 
      ** Trim all spaces on the left to left adjust the value
      ** on display
 
     C                   EVAL      XRLOWE = %TRIML(XRLOWE)
 
     C                   MOVE      ZOUT21        PLOWE
      *
      ** High Value Threshold
     C                   EVAL      ZFLD15 = HighValue
     C                   EVAL      ZDECS = A6NBDP
     C                   EXSR      SRFmtAmount
     C                   MOVE      ZOUT21        XRHIGT
 
      ** Trim all spaces on the left to left adjust the value
      ** on display
 
     C                   EVAL      XRHIGT = %TRIML(XRHIGT)
 
     C                   MOVE      ZOUT21        PHIGT
      *
      ** High Value Currency
     C                   EVAL      XRHVCY = SVal13
     C                   EVAL      PHVCY = SVal13
      *
     C     KFTHVF        KLIST
     C                   KFLD                    KCCLC
     C                   KFLD                    KCUTP
     C                   KFLD                    KHVIN
      *
     C     KACRV         KLIST
     C                   KFLD                    KCUST
     C                   KFLD                    KSCDT
     C                   KFLD                    KSEQN
      *
     C     KSCSEP        KLIST
     C                   KFLD                    WWCSCN
     C                   KFLD                    WWCSSV
 
     C     KPRIC         KLIST
     C                   KFLD                    KISTT
     C                   KFLD                    KYRNO
     C                   KFLD                    KMTHN
     C                   KFLD                    KPCAL
     C                   KFLD                    KSTRP
 
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  *PSSR  - Program exception error routine                     *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *  Called by: *INZSR                                            *
      *                                                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C     *PSSR         BEGSR
      *
     C                   IF        WRun = *BLANKS
     C                   EVAL      WRun = 'Y'
     C                   EVAL      DBPGM = 'SD000161'
     C                   DUMP
     C                   CALL      'DBERRCTL'
      *
     C                   ENDIF
      *
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
      *
     C                   RETURN
      *
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
** CPY@
(c) Misys International Banking Systems Ltd. 2013
**  POWER8 - ARRAY OF POWERS FOR CURRENCY CONVERSION
00000001
00000010
00000100
00001000
00010000
00100000
01000000
10000000
