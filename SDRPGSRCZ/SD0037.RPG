     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas - ER Account codes Maitenance - LU')
      *****************************************************************
      *                                                               *
      *  MIDAS/ABS- EUROPEAN REPORTING - LUXEMBOURG                   *
      *                                                               *
      *  SD0037 - Account Codes Maintenance                           *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *  Prev Amend No. BUG14199A          Date 30Jun07               *
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 BUG11881           Date 13Aug06               *
      *                 CER001  *Create    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  BUG14199A - The field QQACOD has been initialised            *
      *  BUG11881 - Job error upon amendment in zonal listview        *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
      *   (Main processing)
      *   SRINS
      *   SRAMD
      *   SRDEL
      *   SRENQ
      *   SRSMSG       (EXCEPT FOR MESSAGE FILE)
      *   SRCMSG
      *   SRRTRN
      *   SRDBER
      *   SRSCRN
      *   SRREC
      *   SRUPD
      *   SRWRT
      *   SRDELR
      *   SRALOC
      *   SRCOMP
      *
      *   The following routines can be changed :
      *   =====================================
      *
      *   SRINIT for specific initialization
      *   SRVAL  to initialize error indicators and control validation
      *          of more/less fields
      *   SRINZ  to setup fields with defaults
      *   SRFTOS to move additional fields to the screen fields
      *   SRSTOF to move additional fields to the file fields
      *   SRSTOB to move blanks or zeroes to the file fields
      *
      * - The data structure used to save the before image of the
      *   record is called SVRCD.
      *   Only the length should be changed
      *
      * - The data structure used to access the current record
      *   via the DS name is called NWRCD.
      *   Only the file name should be changed
      *
      * - The files must have their record formats renamed to
      *      RTVIDX for the retrieve index
      *      UPDIDX for the update index
      *      SCREEN for the screen format
      *   Any file/screen access will be done thru the renamed format
      *   so that these routines remain unchanged
      *
      *-------------------------------------------------------------------------
      *  Use of indicators:
      *
      *  (Screen field error indicators should start with 20 in
      *   ascending order)
      *
      *  *IN10  -  On=Delete/Enquiry, Protect field.
      *            Off=Insert/Amdend, Underline field.
      *  *IN11  -  On=Delete - Display 'F10= Delete'
      *  *IN20  -  ????
      *  *IN75  -  General error indicator. Used to condition output
      *            of error messages and redisplay screen.
      *  *IN80  -  Unable to allocate extension record
      *  *IN81  -  Call to DBERRCTL ended in error
      *  *IN88  -  Error in Chain operation
      *  *IN89  -  Extension record not found via retrieval index
      *  *IN70  -  Extension record not found via update index
      *  *IN71  -  Unable to allocate record via update index
      *  *IN85  -  Error occured during DBF update
      *  *INKJ  -  F10 pressed, enable delete
      *  *INKL  -  F12 pressed, exit
      *  *INLR  -  End processing
      *-------------------------------------------------------------------------
     FSDACX2PDIF  E           K        DISK
     F            SDACODF6                          KRENAMERTVIDX
      *                                Retreival index
     FSDACX2L0UF  E           K        DISK         KCOMIT       A    UC
     F            SDACODF6                          KRENAMEUPDIDX
      *                                Retreival index
     FSD0037DFCF  E                    WORKSTN
     F            SD0037F6                          KRENAMESCREEN
      *                                Display file
      /EJECT
      *-------------------------------------------------------------------
     I           SDS
      *
      ** Get program name from PSDS
      *
     I                                     *PROGRAM WWPGM
     I                                      254 263 USER
     I                                      244 253 JOB
      /EJECT
     I*
      *
      ** Message file
      *
     I**********    'SDUSRMSG'            C         MSGFIL                                  BUG11881
     I              'GBSDUSRMSG'          C         MSGFIL                                  BUG11881
      *
      *-------------------------------------------------------------------
     IDSFDY     E DSDSFDY
      *
      ** FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE
      *
     I@MMOD     E DSSDMMODPD
      *
      ** DUMMY RECORD FORMATS FOR ACCESS TO MIDAS MODULES DETAILS
      *
     INWRCD     E DSSDACX2PD
     ISDBANK    E DSSDBANKPD
      *
      ** Current/previous master file fields
      *
      /EJECT
      *-------------------------------------------------------------------
     ISVRCD       DS                             16
      *
      /EJECT
      *-------------------------------------------------------------------
      *
      ** Get the data structure passed from calling program
      *
     IDATALX      DS                           1024
     I                                        1  10 #1ACCD
     I                                       11  17 #1RTRN
     I                                       18  18 #1TOIN
     I                                       19  19 #1ACTY
     I*
      /EJECT
      *-------------------------------------------------------------------
      * Main processing
      *-------------------------------------------------------------------
      *
      ** Convert to numeric
      *
     C                     MOVE #1ACCD    #1ACCN
     C                     MOVE #1ACCD    #1ACCT  40
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Execute specific routine depending on action
      *
     C           ACTION    CASEQ'I'       SRINS
     C           ACTION    CASEQ'A'       SRAMD
     C           ACTION    CASEQ'E'       SRENQ
     C           ACTION    CASEQ'D'       SRDEL
     C                     ENDCS
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *-------------------------------------------------------------------
      * SRINS - Routine to handle 'INSERT' action
      *-------------------------------------------------------------------
      *
     C           SRINS     BEGSR
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record found,
      *
     C           *IN89     IFEQ *OFF
      *
      ** In case of 'Insert over Deleted Record'
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
      ** Initialize fields with file values for display
      *
     C                     EXSR SRFTOS
      *
      ** Protect fields for display
      *
     C                     MOVE *ON       *IN10
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
     C                     ELSE
      *
      ** Record not found, initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Display and handle screen until no more errors or F12
      *
     C           *IN75     DOUEQ*OFF
     C           *INKL     OREQ *ON
      *
     C                     EXSR SRSCRN
      *
      ** Bypass any further validation if previous DB error or F12
      *
     C           *IN87     IFEQ *OFF
     C           *INKL     ANDEQ*OFF
      *
      ** Clear messages for redisplay
      *
     C                     EXSR SRCMSG
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** No errors
      *
     C           *IN75     IFEQ *OFF
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write new record
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRAMD - Routine to handle 'AMEND' action
      *-------------------------------------------------------------------
      *
     C           SRAMD     BEGSR
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ *ON
      *
     C                     MOVE *ON       *IN87
     C                     MOVEL'ER99920' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Protect fields for display
      *
     C                     MOVE *ON       *IN10
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
      ** Execute DB error routine
      *
     C                     EXSR SRDBER
      *
     C                     ELSE
      *
      ** Record found,
      ** set file fields to screen fields and save before image
      *
     C                     EXSR SRFTOS
     C                     EXSR SRSAVE
      *
      ** Display and handle screen until record can be allocated and
      ** record on file and no errors left or F12 pressed
      *
     C           *IN71     DOUEQ*OFF
     C           *IN70     ANDEQ*OFF
     C           *IN75     ANDEQ*OFF
     C           *INKL     OREQ *ON
      *
     C                     EXSR SRSCRN
      *
      ** Bypass any further validation if previous DB error or F12
      *
     C           *IN87     IFEQ *OFF
     C           *INKL     ANDEQ*OFF
      *
      ** Clear messages for redisplay
      *
     C                     EXSR SRCMSG
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** No errors
      *
     C           *IN75     IFEQ *OFF
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN70     IFEQ *OFF
     C           *IN71     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDEL - Routine to handle 'DELETE' action
      *-------------------------------------------------------------------
      *
     C           SRDEL     BEGSR
      *
      ** Set indicators on for 'DELETE' mode to protect fields
      *
     C                     MOVE *ON       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ *ON
      *
     C                     MOVE *ON       *IN87
     C                     MOVEL'ER99916' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Disable F10 key
      *
     C                     MOVE *OFF      *IN11
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
      ** Execute DB error routine
      *
     C                     EXSR SRDBER
      *
     C                     ELSE
      *
      ** Record found,
      ** set file fields to screen fields and save before image
      *
     C                     EXSR SRSAVE
      *
      ** Enable F10 key
      *
      ** Display and handle screen until record can be allocated and
      ** record on file and F10 pressed or F12 pressed
      *
      ** F12 not pressed, F10 pressed
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN70     IFEQ *OFF
     C           *IN71     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, delete record
      *
     C                     EXSR SRDELR
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRENQ - Routine to handle 'ENQUIRY' action
      *-------------------------------------------------------------------
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE *ON       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ *ON
      *
     C                     MOVE *ON       *IN87
     C                     MOVEL'ER99917' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Protect fields
      *
     C                     MOVE *ON       *IN10
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
      ** Execute DB error routine
      *
     C                     EXSR SRDBER
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSMSG - Routine to send messages to message subfile.
      *-------------------------------------------------------------------
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVE MSGFIL    ZAMSGF
     C                     ENDIF
      *
     C                     CALL 'SNDERMSG'
     C                     PARM WWPGM     ZAPGM  10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRCMSG - Routine to clear program's message queue.
      *-------------------------------------------------------------------
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM WWPGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRREC - Routine to access file via retrieve index
      *-------------------------------------------------------------------
      *
     C           SRREC     BEGSR
      *
     C           KACCK     CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRALOC - Routine to access record via update index
      *-------------------------------------------------------------------
      *
     C           SRALOC    BEGSR
      *
     C           KACCK     CHAINUPDIDX               7071
      *
      ** If record not on file, setup message 'Record deleted'
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRUPD - Routine to update file.
      *-------------------------------------------------------------------
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 85
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRWRT - Routine to write a new record to the file.
      *-------------------------------------------------------------------
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 85
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDELR - Routine to delete a record
      *-------------------------------------------------------------------
      *
     C           SRDELR    BEGSR
      *
     C                     DELETUPDIDX
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRCOMP - Routine to compare before/after image of records
      *-------------------------------------------------------------------
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'ER99919' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KACCK     SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE *ON       *IN70
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSAVE - Routine to save before image of record via DS
      *-------------------------------------------------------------------
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRRTRN - Routine to set up return code for calling program
      *-------------------------------------------------------------------
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN85     IFEQ *ON
     C                     MOVE 'USR0563' WWRTRN
     C                     ELSE
      *
      ** Database error
      *
     C           *IN87     IFEQ *ON
     C                     MOVE 'Y2U0004' WWRTRN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ *ON
     C                     MOVE 'USR0790' WWRTRN
     C                     MOVE 'USR0790' #1RTRN
     C                     ELSE
      *
      ** No errors
      *
     C                     MOVE *BLANKS   WWRTRN
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     CLOSESDACX2PD               99
      *
      ** Exit program
      *
     C                     MOVE *ON       *INLR
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDBER - Routine to handle database errors
      *-------------------------------------------------------------------
      *
     C           SRDBER    BEGSR
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSCRN - Routine to handle screen and validation
      *-------------------------------------------------------------------
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * The routines that can be changed start here...
      *-------------------------------------------------------------------
      * SRVAL - Routine to control validation of each field.
      *-------------------------------------------------------------------
      *
     C           SRVAL     BEGSR
      *
     C                     MOVEA'0000'    *IN,29
     C                     MOVE *OFF      *IN75
      *
     C                     EXSR SRSHAT
     C                     EXSR SRIM93
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSHAT - Routine to validate SDSHAT
      *-------------------------------------------------------------------
      *
     C           SRSHAT    BEGSR
      *
     C           #0SHAT    IFLT 0
     C           #0SHAT    ORGT 5
     C                     MOVE 'ERM4006' ZAMSID
     C                     MOVE *ON       *IN75
     C                     MOVE *ON       *IN32
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRIM93 - Routine to validate SDIM93
      *-------------------------------------------------------------------
      *
     C           SRIM93    BEGSR
      *
     C           #0IM93    IFLT 0
     C           #0IM93    ORGT 8
     C                     MOVE 'ER32014' ZAMSID
     C                     MOVE *ON       *IN75
     C                     MOVE *ON       *IN29
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRINZ - Routine to initialize screen fields with defaults
      *-------------------------------------------------------------------
      *
     C           SRINZ     BEGSR
      *
     C                     Z-ADD0         #0IM93
     C                     Z-ADD0         #0SHAT
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRFTOS - Routine to move file fields to screen fields
      *-------------------------------------------------------------------
      *
     C           SRFTOS    BEGSR
      *
     C                     Z-ADDSDSHAT    #0SHAT
     C                     Z-ADDSDIM93    #0IM93
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSTOF - Routine to move screen fields to file fields
      *-------------------------------------------------------------------
      *
     C           SRSTOF    BEGSR
      *
      ** Move key fields to file fields
      *
     C                     Z-ADD*ZEROS    QQACOD                                           BUG14199A
     C                     MOVE #1ACCD    SDACOD
      *
      ** Move data fields to file fields
      *
     C                     Z-ADD#0SHAT    SDSHAT
     C                     Z-ADD#0IM93    SDIM93
      *
     C                     ENDSR
      *
      /EJECT
      *-------------------------------------------------------------------
      * SRINIT - Routine to handle initial processing
      *-------------------------------------------------------------------
      *
     C           SRINIT    BEGSR
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           RTCODE  1
     C                     PARM           ACTION  1
     C                     PARM           DATALX
     C                     PARM           WWRTRN  7
      *
      ** Select the program MSGQ for error msg.
      *
      ** Setup key values using transaction data passed from caller
      *
     C           KACCK     KLIST
     C                     KFLD           #1ACCN
      *
     C           *LIKE     DEFN SDACOD    #1ACCN
      *
     C                     MOVE *OFF      *IN75
      *
      ** Call access program for midad modules details
      *
     C                     CALL 'AOMMODR0'
     C                     PARM '*MSG    '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           @MMOD     PARM @MMOD     DSFDY
      *
     C           BGLRIN    IFNE 'Y'
     C                     MOVE *BLANKS   WWRTRN
     C                     MOVE *ON       *INLR
     C                     RETRN
     C                     ELSE
     C                     OPEN SDACX2L0
     C                     ENDIF
      *
      ** Call access program for bank details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR'  @RTCD
     C                     PARM '*FIRST'  @OPTN
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C                     MOVE USER      SUSER
     C                     MOVE JOB       SJOB
     C                     MOVE WWPGM     SPGM
      *
     C                     ENDSR
      *-------------------------------------------------------------------
      * SRSTOB - Routine to move blanks or zeroes to file fields
      *-------------------------------------------------------------------
      *
     C           SRSTOB    BEGSR
      *
      ** Move key field to file field
      *
     C                     MOVE #1ACCD    SDACOD
      *
      ** Move blanks or zeroes to file fields
      *
     C                     Z-ADD*ZEROS    SDSHAT
     C                     Z-ADD*ZEROS    SDIM93
      *
     C                     ENDSR
      /EJECT
     C*****************************************************************
     C**  *PSSR -  ERROR PROCESSING                                   *
     C*****************************************************************
     C           *PSSR     BEGSR
      *
     C                     DUMP
      *
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      ********************************************************************
