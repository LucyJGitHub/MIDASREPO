     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas IBLC 2002 Account Codes - Window controller')
      *****************************************************************
      *                                                               *
      *  Midas - IBLC 2002 Module                                     *
      *                                                               *
      *  SD0040 - IBLC Account  Codes Window Controler                *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
     FSDACX1L0IF  E           K        DISK
     F            SDACODDL                          KRENAMERTVIDX
      *
      **  Extended Account  codes     Retrieval index     Prefix AC
      *
     FSDACX1PDUF  E           K        DISK         KCOMIT       A    UC
     F            SDACODDL                          KRENAMEUPDIDX
      *
      **  Extended Account  codes     Update index        Prefix AC
      *
     FSDMMODPDIF  E                    DISK
      *
      **  ICD modules                 Retrieval index     Prefix BG
      *
     FSD0040DFCF  E                    WORKSTN
     F            SD0040X0                          KRENAMESCREEN
     F                                              KINFDS FILEDS
      *                                Display file        Prefix #0
      /EJECT
      *-------------------------------------------------------------------
     E                    CPY@    1   1 80               COPYRIGHT  ARRAY
      /EJECT
      *-------------------------------------------------------------------
     IFILEDS      DS
      *
      ** File feedback data structure used to determine cursor location
      *
     I                                      370 370 BINROW
     I                                      371 371 BINCOL
     IBINARY      DS
      *
      ** Data structure used to determine cursor location
      *
     I                                    B   1   20BINVAL
      /EJECT
      *-------------------------------------------------------------------
     I           SDS
      *
      ** Get program name from PSDS
      *
     I                                     *PROGRAM ##PGM
     I                                      254 263 USER
     I                                      244 253 JOB
      /EJECT
      *-------------------------------------------------------------------
     IDLDA        DS                            256
      *
      ** Data structure for data-base processing
      *
     I                                      132 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      /EJECT
      *-------------------------------------------------------------------
     IDSFDY     E DSDSFDY
     INWRCD     E DSSDACX1PD
     ISDBANK    E DSSDBANKPD
      *
      ** Current/previous master file fields
      *
      /EJECT
      *-------------------------------------------------------------------
     ISVRCD       DS                             15
      *
      ** Stored master file fields
      *
      /EJECT
      *-------------------------------------------------------------------
      *
      ** Get the data structure passed from calling program
      *
     IDATALX      DS                           1024
     I                                        1  10 #1ACCD
     I                                       11  17 #1RTRN
     I                                       18  18 #1TOIN
     I                                       19  19 #1ACTY
      /EJECT
      *-------------------------------------------------------------------
      * Main processing
      *-------------------------------------------------------------------
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Test if Window needed
      *
     C           *IN12     IFEQ *ON
      *
      ** Execute specific routine depending on action
      *
     C                     SELEC
      *
     C           ACTION    WHEQ 'E'
     C                     EXSR SRENQ
      *
     C           ACTION    WHEQ 'D'
     C                     EXSR SRDEL
      *
     C           ACTION    WHEQ 'I'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *ON
     C                     EXSR SRINS
     C                     ELSE
     C                     EXSR SRAMD
     C                     ENDIF
      *
     C           ACTION    WHEQ 'A'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *OFF
     C                     EXSR SRAMD
     C                     ELSE
     C                     EXSR SRINS
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     ENDIF
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *-------------------------------------------------------------------
      * SRINS - Routine to handle 'INSERT' action
      *-------------------------------------------------------------------
      *
     C           SRINS     BEGSR
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Initialize error condition indicators
      *
     C                     MOVE *OFF      *IN75
     C                     MOVE *OFF      *IN21
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKC     IFEQ *ON
     C           *INKL     OREQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write a new record to the file
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRAMD - Routine to handle 'AMEND' action
      *-------------------------------------------------------------------
      *
     C           SRAMD     BEGSR
      *
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Initialize error condition indicators
      *
     C                     MOVE *OFF      *IN75
     C                     MOVE *OFF      *IN21
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKC     IFEQ *ON
     C           *INKL     OREQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ *OFF
     C           *IN61     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDEL - Routine to handle 'DELETE' action
      *-------------------------------------------------------------------
      *
     C           SRDEL     BEGSR
      *
      ***  Set indicators on for 'DELETE' mode to protect fields
      *
     C                     MOVE *ON       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ *ON
      *
     C                     ELSE
      *
      ** Record found,
      ** save before image
      *
     C                     EXSR SRSAVE
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ *OFF
     C           *IN61     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, delete record
      *
     C                     EXSR SRDELR
      *
     C                     END
      *
     C                     END
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRENQ - Routine to handle 'ENQUIRY' action
      *-------------------------------------------------------------------
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE *ON       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ *ON
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSMSG - Routine to send messages to message subfile.
      *-------------------------------------------------------------------
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     END
     C                     CALL 'SNDERMSG'
     C                     PARM ##PGM     ZAPGM  10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
     C                     MOVEL*BLANK    ZAMSGF
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRCMSG - Routine to clear program's message queue.
      *-------------------------------------------------------------------
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRREC - Routine to access file via retrieve index
      *-------------------------------------------------------------------
      *
     C           SRREC     BEGSR
      *
     C           KACOD     CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRALOC - Routine to access record via update index
      *-------------------------------------------------------------------
      *
     C           SRALOC    BEGSR
      *
     C           KACOD     CHAINUPDIDX               6061
      *
      ** If record not on file, setup message 'Record deleted'
      *
     C           *IN60     IFEQ *ON
     C                     MOVEL'IL00018' ZAMSID
     C                     EXSR SRSMSG
     C                     END
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRUPD - Routine to update file.
      *-------------------------------------------------------------------
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRWRT - Routine to write a new record to the file.
      *-------------------------------------------------------------------
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDELR - Routine to delete a record
      *-------------------------------------------------------------------
      *
     C           SRDELR    BEGSR
      *
     C                     DELETUPDIDX                 68
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRCOMP - Routine to compare before/after image of records
      *-------------------------------------------------------------------
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'IL00019' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KACOD     SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE *ON       *IN60
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSAVE - Routine to save before image of record via DS
      *-------------------------------------------------------------------
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRRTRN - Routine to set up return code for calling program
      *-------------------------------------------------------------------
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN69     IFEQ *ON
     C                     MOVE 'Y2U0004' WWRTRN
     C                     ELSE
      *
      ** Database / Window error
      *
     C           *IN68     IFEQ *ON
     C                     MOVE 'USR0563' WWRTRN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ *ON
     C                     MOVE 'USR0790' WWRTRN
     C                     ELSE
      *
      ** F3 pressed
      *
     C           *INKC     IFEQ *ON
     C                     MOVE 'Y2U9999' WWRTRN
     C                     ELSE
      *
      ** No errors
      *
     C                     MOVE *BLANKS   WWRTRN
     C                     END
      *
     C                     END
      *
     C                     END
      *
     C                     END
      *
     C                     CLOSESDACX1PD               99
      *
      ** Exit program
      *
     C                     MOVE *ON       *INLR
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDBER - Routine to handle database errors
      *-------------------------------------------------------------------
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN LDA       DLDA
     C           *LOCK     IN   DLDA
     C                     MOVEL'SD0040'  DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  DLDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSCRN - Routine to handle screen and validation
      *-------------------------------------------------------------------
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRCLOC - Routine to determine cursor location
      *-------------------------------------------------------------------
      *
     C           SRCLOC    BEGSR
      *
     C                     MOVELZHEX      ZHEX    1
     C                     Z-ADDZHDEC     ZHDEC   30
      *
     C                     BITOF'01234567'HEX00   1
     C                     MOVELHEX00     WWBIN   2
     C                     MOVE ZHEX      WWBIN
     C                     MOVE WWBIN     BINARY
     C                     Z-ADDBINVAL    ZHDEC
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * The routines that can be changed start here...
      *-------------------------------------------------------------------
      * SRVAL - Routine to control validation of each field.
      *-------------------------------------------------------------------
      *
     C           SRVAL     BEGSR
      *
      ** Initialize error condition indicators
      *
     C                     MOVE *OFF      *IN75
     C                     MOVE *OFF      *IN21
      *
      ** Validate field
      *
     C                     EXSR SRDRPT
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRDRPT - Routine to validate ACDRPT
      *-------------------------------------------------------------------
      *
     C           SRDRPT    BEGSR
      *
      ** Validate field
      *
     C           #0DRPT    IFNE *BLANK
     C           #0DRPT    ANDNE'Y'
     C           #0DRPT    ANDNE'N'
     C                     MOVEL'IL03101' ZAMSID
     C                     MOVE *ON       *IN75
     C                     MOVE *ON       *IN21
     C                     EXSR SRSMSG
      *
     C                     ELSE
      *
     C           #0DRPT    IFEQ *BLANK
     C                     MOVE 'N'       #0DRPT
     C                     END
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRINZ - Routine to initialize screen field with default
      *-------------------------------------------------------------------
      *
     C           SRINZ     BEGSR
      *
     C                     MOVEL'N'       #0DRPT
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRFTOS - Routine to move file field to screen field
      *-------------------------------------------------------------------
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVELACDRPT    #0DRPT
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRSTOF - Routine to move screen field to file field
      *-------------------------------------------------------------------
      *
     C           SRSTOF    BEGSR
      *
      ** Move key field to file field
      *
     C                     MOVELKACOD     ACACOD
      *
      ** Move data fields to file fields
      *
     C                     MOVEL#0DRPT    ACDRPT
      *
     C                     ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * SRINIT - Routine to handle initial processing
      *-------------------------------------------------------------------
      *
     C           SRINIT    BEGSR
      *
      ** Set up copyright parameter
      *
     C                     MOVEACPY@      CPY2@  80
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           RTCODE  1
     C                     PARM           ACTION  1
     C                     PARM           DATALX
     C                     PARM           WWRTRN  7
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN ACACOD    KACOD
     C                     MOVE #1ACCD    KACOD
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Setup file value used in database error during access to
      ** retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'SDACX1PD'WWEXTF
      *
      ** Initialise non-display indicators
      *
     C                     MOVEL*OFF      *IN12
      *
      ** Initialise display mode indicators
      *
     C           ACTION    IFEQ 'I'
     C           ACTION    OREQ 'A'
     C                     MOVEL*ON       *IN31
     C                     ELSE
     C                     MOVEL*OFF      *IN31
     C                     ENDIF
      *
      ** Initialise error indicators
      *
     C                     MOVE *OFF      *IN21
     C                     MOVEL*OFF      *IN75
      *
      ** Access ICD Modules
      *
     C           1         SETLLSDMMODPD
     C                     READ SDMMODPD                 76
      *
     C           *IN76     IFEQ *OFF
      *
      ** Check if IBLC Returns module installed
      *
     C           BGNWST    IFEQ 'Y'
     C           #1TOIN    ANDNE'Y'
     C                     OPEN SDACX1PD               99
     C                     MOVE *ON       *IN12
      *
     C                     MOVELSPARE     SP246 246
     C                     MOVE SP246     F12     1
      *
     C                     MOVE *BLANK    F12
     C                     MOVE F12       SP246
     C                     MOVELSP246     SPARE 256
      *
     C                     ELSE
      *
     C                     MOVEL*OFF      *IN12
      *
     C                     MOVELSPARE     SP246 246
     C                     MOVE SP246     F12     1
      *
     C           F12       IFEQ 'R'
     C                     MOVE 'USR0790' WWRTRN
     C                     MOVE *BLANK    F12
     C                     MOVE F12       SP246
     C                     MOVELSP246     SPARE
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ELSE
     C                     MOVEL'SDMMODPD'WWBFIL
     C                     MOVEL'1'       WWBKEY
     C                     Z-ADD5         WWBASE
     C                     EXSR SRDBER
     C                     ENDIF
      *
      ** Call access program for bank details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR'  @RTCD   7
     C                     PARM '*FIRST'  @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C                     MOVE USER      SUSER
     C                     MOVE JOB       SJOB
     C                     MOVE ##PGM     SPGM
      *
     C                     ENDSR
      /EJECT
**  CPY@
(c) Finastra International Limited 2005
