     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Branch Codes details - BOI')                  *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0061W0 - Branch Codes details - BOI                        *
      *                                                               *
      *  Function:  This program prompts a new window on the          *
      *             Branch Codes to input new values.                 *
      *                                                               *
      *  Called By: SD0061E - MIDAS SD Branch Codes Enquiry           *
      *             SD0061R - MIDAS SD Branch Codes Maintenance       *
      *                                                               *
      *  (C) Finastra International Systems Ltd. 2021                 *
      *                                                               *
      *  Last Amend No. LUC139   *Create   Date 11Jan21               *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  LUC139 - UCI Italian returns upgrade to FM2.1                *
      *                                                               *
      *****************************************************************
      *
      *   The following routines CANNOT be changed :
      *   ========================================
      *
      *   (Main processing)
      *   SRINS
      *   SRAMD
      *   SRDEL
      *   SRENQ
      *   SRSMSG
      *   SRCMSG
      *   SRRTRN
      *   SRSCRN
      *   SRREC
      *   SRUPD
      *   SRWRT
      *   SRDELR
      *   SRALOC
      *   SRCOMP
      *   ZALIGN
      *   ZSEDIT
      *
      *   The following routines can be changed :
      *   =====================================
      *
      *
      *   SRINIT for specific initialization
      *   SRDBER to handle database errors
      *   SRVAL  to initialize error indicators and control validation
      *          of more/less fields
      *   SRINZ  to setup fields with defaults
      *   SRFTOS to move additional fields to the screen fields
      *   SRSTOF to move additional fields to the file fields
      *
      * - Changes to the existing code should be reduced to a minimum,
      *   using separate subroutines in order to preserve the program
      *   structure as defined in the skeleton, thus reducing
      *   maintenance efforts.
      *
      * - Moreover, no functionality should be added unless specifically
      *   required. In this case, it should be very well documented
      *   in the header box.
      *
      * - The data structure used to save the before image of the
      *   record is called SVRCD.
      *   Only the length should be changed.
      *
      * - The data structure used to access the current record
      *   via the DS name is called NWRCD.
      *   Only the file name should be changed.
      *
      * - The files must have their record formats renamed to:
      *      RTVIDX for the retrieve index
      *      UPDIDX for the update index
      *      SCREEN for the screen format
      *   Any file/screen access will be done through the renamed format
      *   so that these routines remain unchanged.
      *
      *-------------------------------------------------------------------------
      *
      *   Naming conventions
      *   ==================
      *
      * - Work fields used in the program should start with WW or WU
      *   i.e. WWCUCO or WUCUCO
      *
      * - Screen fields should start with #0 (for 1st screen format),
      *   i.e. #0XXXX
      *
      * - Key fields should start with K ,i.e. KXXXX
      *   (Also for fields used in KLIST's)
      *
      * - Subroutines should start with SR, i.e. SRVAL for validation,
      *   SRINIT for initial routine , etc...
      *
      *-------------------------------------------------------------------------
      *
      *? Use of indicators:
      *
      *  (Screen field error indicators should start with 31 in
      *   ascending order)
      *
      *  *INKC  -  F3  pressed, exit program.
      *  *INKD  -  F4  pressed, display invite          *** not used ***
      *  *INKE  -  F5  pressed, redisplay the screen
      *  *INKJ  -  F10 pressed, confirm suppression     *** not used ***
      *  *INKL  -  F12 pressed, goto previous screen
      *  *INLR  -  End processing
      *
      *  *IN10  -  Use of function key F10                    (*ON)
      *
      *  *IN20  -  Protect attribut of screen fields          (*OFF)
      *  *IN25  -  SFLEND on message subfile                  (*OFF)
      *
      *  *IN30  -  One field error at least                   (*ON)
      *  *IN31  -  Include data in error                      (*ON)
      *  *IN32  -  Origin of info (sportello) in error        (*ON)
      *  *IN35  -  Official number (sportello) in error       (*ON)
      *  *IN33  -  Origin of info (provincia) in error        (*ON)
      *  *IN34  -  Origin of info 8paese) in error            (*ON)
      *
      *  *IN50  -  Display window                             (*ON)
      *  *IN60  -  Chain on extension file SDBRCHXP fails     (*ON)
      *  *IN61  -  Extension file SDBRCHXP record locked      (*ON)
      *  *IN68  -  Write, Updat or Delet on extension file
      *            SDBRCHXP fails                             (*ON)
      *  *IN69  -  Database error                             (*ON)
      *
      *  *IN70  -  Display window again when error occurs.    (*ON)
      *  *IN77  -  SCAN succeeds or CHECK fails               (*ON)
      *
      *  *IN88  -  Standard DB error handler fails            (*ON)
      *  *IN89  -  Database error                             (*ON)
      *
      *  *IN99  -  Open on SDBRCHXP fails                     (*ON)
      *
      *  *INU7
      *  *INU8  -  External indicators for Database errors    (*ON)
      *
      *****************************************************************
      *
      ***  Branch Codes Extended file       - Update index -  Prefix PA
      *
     FSDBRT1PDUF  E           K        DISK         KCOMIT       A    UC
     F            SDBRT1D0                          KRENAMEUPDIDX
      *
      ***  Branch Codes Index file       - Retrieval index -  Prefix PA
      *
     FSDBCT1L0IF  E           K        DISK
     F            SDBRT1D0                          KRENAMERTVIDX
      *
      ***  Display file.                                      Prefix #0
      *
     FSD0061#ICF  E                    WORKSTN
     F            SD0061X0                          KRENAMESCREEN
     F                                              KINFDS FILEDS
      /EJECT
     E                    CPY@    1   1 80               Copyright array
      *
     E/COPY ZSRSRC,ZALIGNZ1
      /EJECT
      *
      ***  Copyright array
      *
     IA@CPY       DS
     I                                        1  80 CPY@
      *
      *
      ***  File feedback data structure used to determine cursor location
      *
     IFILEDS      DS
     I                                      370 370 BINROW
     I                                      371 371 BINCOL
      *
      ***  Data structure used to determine cursor location
      *
     IBINARY      DS
     I                                    B   1   20BINVAL
      *
      ***  Program Status Data Structure - gives Job/Workstation name and
      ***  User ID
      *
     IPSDS       SDS
     I                                     *PROGRAM ##PGM
     I                                      244 253 JOB
     I                                      244 246 WSID
     I                                      254 263 USER
      *
      ***  Data structure for data-base processing.
      *
     ILDA       E DSLDA                         256
     I              SPARE                           W24
      *
      ***  Local data area for database error details
      ***  *LOCK IN LDA immediately before and OUT LDA immediately
      ***  after each database error handling.
      *
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
      ***  Current/previous extension file record.
      *
     INWRCD     E DSSDBRT1PD
      *
      ***  Stored extension file record.
      *
     ISVRCD       DS                             26
      *
      ***  Get the data structure passed from calling program.
      *
      /COPY QWINDSRC,SD0060GDTA
      /EJECT
      *****************************************************************
      *
      *  M A I N   P R O C E S S I N G
      *
      *****************************************************************
      *
      ***  Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ***  Test if Window needed
      *
     C           *IN50     IFEQ '1'                        *B1
      *
      ***  Execute specific routine depending on action
      *
     C                     SELEC                           *B2
      *
     C           ACTION    WHEQ 'E'
     C                     EXSR SRENQ
      *
     C           ACTION    WHEQ 'D'
     C                     EXSR SRDEL
      *
     C           ACTION    WHEQ 'I'
      *
      ***  Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *ON                        *B3
     C                     EXSR SRINS
      *
     C                     ELSE                            *X3
     C                     EXSR SRAMD
      *
     C                     ENDIF                           *E3
      *
     C           ACTION    WHEQ 'A'
      *
      ***  Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *OFF                       *B3
     C                     EXSR SRAMD
      *
     C                     ELSE                            *X3
     C                     EXSR SRINS
      *
     C                     ENDIF                           *E3
      *
     C                     ENDSL                           *E2
      *
     C                     ENDIF                           *E1
      *
      ***  Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      /EJECT
      **************************************************************************
      *  SRINS - Routine to handle 'INSERT' action
      **************************************************************************
      *
     C           SRINS     BEGSR
      *
    ? ***  Initialize fields
    ? *
     C                     EXSR SRINZ
      *
     C           *IN68     DOWEQ*OFF                       *B1
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ***  Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ***  Clear messages
      *
     C                     EXSR SRCMSG
      *
      ***  Invite
      *
     C           *INKD     IFEQ *ON                        *B2
      *
    ? ***  Display invite
    ? *
     C                     EXSR SRINV
      *
     C                     ITER
      *
     C                     ENDIF                           *E2
      *
      ***  Refresh
      *
     C           *INKE     IFEQ *ON                        *B2
      *
    ? ***  Initialize fields
    ? *
     C                     EXSR SRINZ
      *
      ***  Initialize error condition indicators
      *
     C                     MOVEA'000000'  *IN,30
      *
     C                     ITER
      *
     C                     ENDIF                           *E2
      *
      ***  Previous or exit
      *
     C           *INKC     IFEQ *ON                        *B2
     C           *INKL     OREQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF                           *E2
      *
      ***  Validate input
      *
     C                     EXSR SRVAL
      *
      ***  If no errors,
      *
     C           *IN30     IFEQ *OFF                       *B2
      *
      ***  Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ***  Write a new record to the file
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF                           *E2
      *
     C                     ENDDO                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRAMD - Routine to handle 'AMEND' action
      **************************************************************************
      *
     C           SRAMD     BEGSR
      *
      ***  Save before image
      *
     C                     EXSR SRSAVE
      *
      ***  Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
     C           *IN68     DOWEQ*OFF                       *B1
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ***  Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ***  Clear messages
      *
     C                     EXSR SRCMSG
      *
      ***  Invite
      *
     C           *INKD     IFEQ *ON                        *B2
      *
    ? ***  Display invite
    ? *
     C                     EXSR SRINV
      *
     C                     ITER
      *
     C                     ENDIF                           *E2
      *
      ***  Refresh
      *
     C           *INKE     IFEQ *ON                        *B2
      *
      ***  Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ***  Initialize error condition indicators
      *
     C                     MOVEA'000000'  *IN,30
      *
     C                     ITER
      *
     C                     ENDIF                           *E2
      *
      ***  Previous or exit
      *
     C           *INKC     IFEQ *ON                        *B2
     C           *INKL     OREQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF                           *E2
      *
      ***  Validate input
      *
     C                     EXSR SRVAL
      *
      ***  If no errors,
      *
     C           *IN30     IFEQ *OFF                       *B2
      *
      ***  Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ***  If record on file and allocated, compare record images,
      ***  else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'                        *B3
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ***  If images do not match, screen will be redisplayed with
      ***  relevant message
      *
     C           WWMTCH    IFEQ 'Y'                        *B4
      *
      ***  Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ***  Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF                           *E4
      *
     C                     ENDIF                           *E3
      *
     C                     ENDIF                           *E2
      *
     C                     ENDDO                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRDEL - Routine to handle 'DELETE' action
      **************************************************************************
      *
     C           SRDEL     BEGSR
      *
      ***  Set indicators on for 'DELETE' mode to protect fields
      *
     C******               MOVE *ON       *IN10            *** Not active ***
      *
      ***  Check whether record exists
      *
     C                     EXSR SRREC
      *
      ***  If record not found,
      ***  set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'                        *B1
      *
      ***  NO DATABASE ERROR PERFORMED
      *
     C******               MOVE *ON       *IN69            *** Not active ***
     C******               MOVEL'ITX0004' ZAMSID           NO DETAIL TO DELETE
     C******               EXSR SRSMSG                     *** Not active ***
      *
      ***  Execute DB error routine
      *
     C******               MOVELWWEXTF    WWBFIL           ***************
     C******               Z-ADD1         WWBASE           * DB ERROR 01 *
     C******               MOVELKBRCD     WWBKEY           ***************
     C******               EXSR SRDBER
      *
      ***  Display and handle screen
      *
     C******               EXSR SRSCRN                     *** Not active ***
      *
     C                     ELSE                            *X1
      *
      ***  If record found, save image before.
      *
     C                     EXSR SRSAVE
      *
      ******  Set file fields to screen fields             *** Not active ***
      ******                                               *** Not active ***
     C******               EXSR SRFTOS                     *** Not active ***
      ******                                               *** Not active ***
     C******     *IN68     DOWEQ*OFF                       *** Not active ***
     C******     *IN69     ANDEQ*OFF                       *** Not active ***
     C******     *IN70     ANDEQ*OFF                       *** Not active ***
      ******                                               *** Not active ***
      ******  Display and handle screen.                   *** Not active ***
      ******                                               *** Not active ***
     C******               EXSR SRSCRN                     *** Not active ***
      ******                                               *** Not active ***
      ******  Clear messages                               *** Not active ***
      ******                                               *** Not active ***
     C******               EXSR SRCMSG                     *** Not active ***
      ******                                               *** Not active ***
      ******  Confirmation pressed.                        *** Not active ***
      ******                                               *** Not active ***
     C******     *INKJ     IFEQ *ON                        *** Not active ***
      *
      ***  Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ***  If record on file and allocated, compare record images,
      ***  else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'                        *B2
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ***  If images do not match, screen will be redisplayed with
      ***  relevant message
      *
     C           WWMTCH    IFEQ 'Y'                        *B3
      *
      ***  Images match, delete record
      *
     C                     EXSR SRDELR
     C******               LEAVE                           *** Not active ***
      *
     C                     END                             *E3
      *
     C                     END                             *E2
      *
     C                     END                             *E1
      ******                                               *** Not active ***
      ******   revious or exit                             *** Not active ***
      ******                                               *** Not active ***
     C******     *INKC     IFEQ *ON                        *** Not active ***
     C******     *INKL     OREQ *ON                        *** Not active ***
      ******                                               *** Not active ***
     C******               LEAVE                           *** Not active ***
      ******                                               *** Not active ***
     C******               ENDIF                           *** Not active ***
      ******                                               *** Not active ***
      ******  Send message 'Press F10 to delete.'          *** Not active ***
      ******                                               *** Not active ***
     C******               MOVE 'ITX0005' ZAMSID           *** Not active ***
    ?C******               EXSR SRSMSG                     *** Not active ***
      ******                                               *** Not active ***
      ******  End Alloction for Delete                     *** Not active ***
      ******                                               *** Not active ***
     C******               ENDDO                           *** Not active ***
      ******                                               *** Not active ***
     C******               ENDIF                           *** Not active ***
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRENQ - Routine to handle 'ENQUIRY' action
      **************************************************************************
      *
     C           SRENQ     BEGSR
      *
      ***  Check whether record exists
      *
     C                     EXSR SRREC
      *
      ***  If record not found,
      ***  set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'                        *B1
      *
      ***  NO DB ERROR
      *
     C******               MOVE *ON       *IN69
     C******               MOVEL'.......' ZAMSID           EXTENSION NOT FOUND
     C******               EXSR SRSMSG
      *
      ***  Display and handle screen
      *
     C******               EXSR SRSCRN
      *
      ***  Execute DB error routine
      *
     C******               MOVELWWEXTF    WWBFIL           ***************
     C******               Z-ADD2         WWBASE           * DB ERROR 02 *
     C******               MOVELKBRCD     WWBKEY           ***************
     C******               EXSR SRDBER
      *
     C                     ELSE                            *X1
      *
      ***  Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ***  Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     END                             *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRSMSG - Routine to send messages to message subfile.
      **************************************************************************
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS                    *B1
     C                     MOVEL'ERUSRMSG'ZAMSGF
      *
     C                     END                             *E1
      *
     C                     CALL 'SNDERMSG'
     C                     PARM ##PGM     ZAPGM  10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
      *
      ***  Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSID           Message Id.
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
     C                     MOVEL*BLANK    ZAMSGF           Message file.
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRCMSG - Routine to clear program's message queue.
      **************************************************************************
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRREC - Routine to access file via retrieve index
      **************************************************************************
      *
     C           SRREC     BEGSR
      *
     C           KBRCD     CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRALOC - Routine to access record via update index
      **************************************************************************
      *
     C           SRALOC    BEGSR
      *
     C           KBRCD     CHAINUPDIDX               6061
      *
      *** If record not on file, setup message 'Record deleted'
      *
     C           *IN60     IFEQ '1'                        *B1
     C                     MOVEL'ITX0001' ZAMSID
     C                     EXSR SRSMSG
      *
     C                     END                             *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRUPD - Routine to update file.
      **************************************************************************
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRWRT - Routine to write a new record to the file.
      **************************************************************************
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRDELR - Routine to delete a record
      **************************************************************************
      *
     C           SRDELR    BEGSR
      *
     C                     DELETUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRCOMP - Routine to compare before/after image of records
      **************************************************************************
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD                      *B1
     C                     MOVE 'Y'       WWMTCH  1
      *
     C                     ELSE                            *X1
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'ITX0002' ZAMSID
     C                     EXSR SRSMSG
      *
      ***  Use SETLL to release record lock
      *
     C           KBRCD     SETLLUPDIDX
      *
      ***  Set condition to redisplay screen
      *
     C                     MOVE *ON       *IN60
      *
     C                     END                             *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRSAVE - Routine to save before image of record via DS
      **************************************************************************
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRRTRN - Routine to set up return code for calling program
      **************************************************************************
      *
     C           SRRTRN    BEGSR
      *
      ***  DBF update error.
      *
     C           *IN69     IFEQ '1'                        *B1
     C                     MOVE 'Y2U0004' WWRTRN
      *
     C                     ELSE                            *X1
      *
      ***  Database / Window error.
      *
     C           *IN68     IFEQ '1'                        *B2
     C                     MOVE 'USR0563' WWRTRN
      *
     C                     ELSE                            *X2
      *
      ***  F12 pressed
      *
     C           *INKL     IFEQ '1'                        *B3
     C                     MOVE 'USR0790' WWRTRN
      *
     C                     ELSE                            *X3
      ***  F3 pressed
     C           *INKC     IFEQ '1'                        *B4
     C                     MOVE 'Y2U9999' WWRTRN
      *
     C                     ELSE                            *X4
      ***  No errors
      *
     C                     MOVE *BLANKS   WWRTRN
      *
     C                     END                             *E4
      *
     C                     END                             *E3
      *
     C                     END                             *E2
      *
     C                     END                             *E1
      *
     C                     CLOSESDBRT1PD               99
      *
      ***  Exit program
      *
     C                     MOVE *ON       *INLR
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRDBER - Routine to handle database errors
      **************************************************************************
      *
     C           SRDBER    BEGSR
      *
      ***  Update data area LDA
      *
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C                     MOVEL##PGM     DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  LDA
      *
      ***  Set on data-base error indicators
      *
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *IN69
      *
      ***  Dump program
      *
     C                     DUMP
      *
      ***  Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             88
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRSCRN - Routine to handle screen and validation
      **************************************************************************
      *
     C           SRSCRN    BEGSR
      *
      ***  Display messages
      *
     C                     WRITE#MSGCTL
      *
      ***  Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRCLOC - Routine to determine cursor location
      **************************************************************************
      *
     C           SRCLOC    BEGSR
      *
     C                     MOVELZHEX      ZHEX    1
     C                     Z-ADDZHDEC     ZHDEC   30
      *
     C                     BITOF'01234567'HEX00   1
     C                     MOVELHEX00     WWBIN   2
     C                     MOVE ZHEX      WWBIN
     C                     MOVE WWBIN     BINARY
     C                     Z-ADDBINVAL    ZHDEC
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      * ----------- the routines that can be changed start here... ----------- *
      **************************************************************************
      **************************************************************************
      *  SRVAL - Routine to validate screen fields.
      **************************************************************************
      *
     C           SRVAL     BEGSR
      *
      ***  Initialize error condition indicators.
     C                     MOVEA'000000'  *IN,30
      *
      ***  Validate 'Include' data field
     C                     EXSR SRINCL
      *
      ***  Validate 'Origin of info (sportello)' field
     C                     EXSR SRORSP
      *
      ***  Validate 'Official number (sportello)' field
     C                     EXSR SRONSP
      *
      ***  Validate 'Origin of info (provincia)' field
     C                     EXSR SRORPR
      *
      ***  Validate 'Origin of info (paese)' field
     C                     EXSR SRORPA
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRINCL - Routine to validate PAINCL : Include data.
      **************************************************************************
      *
     C           SRINCL    BEGSR
      *
      ***  If field 'Include data' is blank, initialise field with default
      ***  value 'N'
     C           #0INCL    IFEQ *BLANK                     *B1
     C                     MOVE 'N'       #0INCL
     C                     ENDIF                           *E1
      *
      ***  If field 'Include data' is different from allowed values 'Y' and 'N'.
     C           #0INCL    IFNE 'Y'                        *B1
     C           #0INCL    ANDNE'N'
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN31
     C                     MOVE *ON       *IN25
    ?C                     MOVEL'ITS6102' ZAMSID
    ?C                     EXSR SRSMSG
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRORSP - Routine to validate PAORSP : Origin of info (sportello).
      **************************************************************************
      *
     C           SRORSP    BEGSR
      *
      ***  The field 'Origin of info (sportello)' is optional. So, if it isn't
      ***  blank.
     C           #0ORSP    IFNE *BLANKS                    *B1
      *
     C                     MOVE *BLANK    ZFIELD
     C                     MOVE #0ORSP    ZFIELD
     C                     Z-ADD5         ZADIG
     C                     EXSR ZALIGN
      *
     C           *IN99     IFEQ *ON                        *B2
      *
      ***  If the field isn't numeric.
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN32
     C                     MOVE *ON       *IN25
    ?C                     MOVEL'ITS6103' ZAMSID
    ?C                     EXSR SRSMSG
      *
     C                     ELSE                            *X2
      *
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORSP
      *
     C                     ENDIF                           *E2
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRONSP - Routine to validate PAONSP : Official number (sportello).
      **************************************************************************
      *
     C           SRONSP    BEGSR
      *
      ***  The field 'Official number(sportello)' is optional. So, if it isn't
      ***  blank.
     C           #0ONSP    IFNE *BLANKS                    *B1
      *
     C                     MOVE *BLANK    ZFIELD
     C                     MOVE #0ONSP    ZFIELD
     C                     Z-ADD9         ZADIG
     C                     EXSR ZALIGN
      *
     C           *IN99     IFEQ *ON                        *B2
      *
      ***  If the field isn't numeric.
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN35
     C                     MOVE *ON       *IN25
    ?C                     MOVEL'ITS6106' ZAMSID
    ?C                     EXSR SRSMSG
      *
     C                     ELSE                            *X2
      *
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ONSP
      *
     C                     ENDIF                           *E2
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRORPR - Routine to validate PAORPR : Origin of info (provincia).
      **************************************************************************
      *
     C           SRORPR    BEGSR
      *
      ***  The field 'Origin of info (provincia)' is optional. So, if it isn't
      ***  blank.
     C           #0ORPR    IFNE *BLANKS                    *B1
      *
     C                     MOVE *BLANK    ZFIELD
     C                     MOVE #0ORPR    ZFIELD
     C                     Z-ADD5         ZADIG
     C                     EXSR ZALIGN
      *
     C           *IN99     IFEQ *ON                        *B2
      *
      ***  If the field isn't numeric.
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN33
     C                     MOVE *ON       *IN25
    ?C                     MOVEL'ITS6104' ZAMSID
    ?C                     EXSR SRSMSG
      *
     C                     ELSE                            *X2
      *
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORPR
      *
     C                     ENDIF                           *E2
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRORPA - Routine to validate PAORPA : Origin of info (paese).
      **************************************************************************
      *
     C           SRORPA    BEGSR
      *
      ***  The field 'Origin of info (paese)' is optional. So, if it isn't
      ***  blank.
     C           #0ORPA    IFNE *BLANKS                    *B1
      *
     C                     MOVE *BLANK    ZFIELD
     C                     MOVE #0ORPA    ZFIELD
     C                     Z-ADD3         ZADIG
     C                     EXSR ZALIGN
      *
     C           *IN99     IFEQ *ON                        *B2
      *
      ***  If the field isn't numeric.
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN34
     C                     MOVE *ON       *IN25
    ?C                     MOVEL'ITS6105' ZAMSID
    ?C                     EXSR SRSMSG
      *
     C                     ELSE                            *X2
      *
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORPA
      *
     C                     ENDIF                           *E2
      *
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRINZ - Routine to initialize screen fields with defaults
      **************************************************************************
      *
     C           SRINZ     BEGSR
      *
      ***  #0INCL defaulted to 'N' and other fields are blank by default
      *
     C                     MOVE 'N'       #0INCL
     C                     MOVEL*BLANKS   #0ORSP
     C                     MOVEL*BLANKS   #0ONSP
     C                     MOVEL*BLANKS   #0ORPR
     C                     MOVEL*BLANKS   #0ORPA
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRFTOS - Routine to move file fields to screen fields
      **************************************************************************
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVELPAINCL    #0INCL
      *
     C           PAORSP    IFNE *ZEROS                     *B1
     C                     MOVEL*BLANK    ZFIELD
     C                     MOVE PAORSP    ZFIELD
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORSP
     C                     ELSE                            *X1
     C                     MOVEL*BLANKS   #0ORSP
     C                     ENDIF                           *E1
      *
     C           PAONSP    IFNE *ZEROS                     *B1
     C                     MOVEL*BLANK    ZFIELD
     C                     MOVE PAONSP    ZFIELD
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ONSP
     C                     ELSE                            *X1
     C                     MOVEL*BLANKS   #0ONSP
     C                     ENDIF                           *E1
      *
     C           PAORPR    IFNE *ZEROS                     *B1
     C                     MOVEL*BLANK    ZFIELD
     C                     MOVE PAORPR    ZFIELD
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORPR
     C                     ELSE                            *X1
     C                     MOVEL*BLANKS   #0ORPR
     C                     ENDIF                           *E1
      *
     C           PAORPA    IFNE *ZEROS                     *B1
     C                     MOVEL*BLANK    ZFIELD
     C                     MOVE PAORPA    ZFIELD
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    #0ORPA
     C                     ELSE                            *X1
     C                     MOVEL*BLANKS   #0ORPA
     C                     ENDIF                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRSTOF - Routine to move screen fields to file fields
      **************************************************************************
      *
     C           SRSTOF    BEGSR
      *
      ***  Move key field to file field.
      *
     C                     MOVELKBRCD     PABRCD
      *
      ***  Move screen fields to file fields.
      *
     C                     MOVE #0INCL    PAINCL
     C                     MOVE #0ORSP    PAORSP
     C                     MOVE #0ONSP    PAONSP
     C                     MOVE #0ORPR    PAORPR
     C                     MOVE #0ORPA    PAORPA
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRINV - Routine to display invite (When F4)
      **************************************************************************
      *
     C           SRINV     BEGSR
      *
      ***  Determine cursor location in screen
      *
     C                     MOVE BINROW    ZHEX
     C                     EXSR SRCLOC
     C                     Z-ADDZHDEC     LINROW  30
      *
     C                     MOVE BINCOL    ZHEX
     C                     EXSR SRCLOC
     C                     Z-ADDZHDEC     LINCOL  30
      *
      ***  Determine cursor location in window
      *
     C           LINROW    SUB  WWROW     LINROW
     C           LINCOL    SUB  WWCOL     LINCOL
     C                     SUB  1         LINCOL
      *
      ***  Select Invite depending cursor location
      *
     C                     SELEC                           *B1
      *
      ***  No invite displayable
      *
     C******     LINROW    WHEQ 3
     C******     LINCOL    ANDGT45
     C******     LINCOL    ANDLT47
      *
     C******               MOVEL*BLANKS   WW256
     C******               CALL '......'               45  INVITE PGM TO CREATE
     C******               PARM           WW256 256
     C******               PARM           WWLEN
     C******               PARM           WWID
     C******               PARM           WWROW
     C******               PARM           WWCOL
     C******               PARM *BLANKS   WWSEL   1
     C******               PARM *BLANKS   WWERR   1
      *
     C******               Z-ADDLINROW    CSRROW
     C******               Z-ADD45        CSRCOL
      *
     C******     WWSEL     IFNE '1'                        *B2
     C******               MOVEL'.......' ZAMSID
     C******               EXSR SRSMSG
     C******
     C******               ENDIF                           *E2
      *
     C                     OTHER
     C                     Z-ADDLINROW    CSRROW
     C                     Z-ADDLINCOL    CSRCOL
     C                     MOVEL'ITX0003' ZAMSID           No invite
     C                     EXSR SRSMSG
      *
     C                     ENDSL                           *E1
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRINIT - Routine to handle initial processing
      **************************************************************************
      *
     C           SRINIT    BEGSR
      *
      ***  Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           ACTION  1
     C                     PARM           DATA
     C                     PARM           WWRTRN  7
     C                     PARM           WWLEN   30
     C                     PARM           WWID    30
     C                     PARM           WWROW   30
     C                     PARM           WWCOL   30
     C                     PARM           DUMMY5 10
      *
      ***  The following parameter is needed from PTF16 on.
      ***  Every PTF level below should omit this parameter
      *
     C                     PARM           SPARE 256
      *
      ***  Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN PABRCD    KBRCD
     C                     MOVE #1BRCD    KBRCD            From DATA DS
      *
      ***  Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ***  Setup file value used in database error during access to
      ***  retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'SDBRT1PD'WWEXTF
      *
      ***  Initialise non-display indicators
      *
     C                     MOVEL*OFF      *IN50
      *
      ***  Initialise display mode indicators
      *
     C           ACTION    IFEQ 'I'                        *B1
     C           ACTION    OREQ 'A'
     C                     MOVEL*ON       *IN20            Not protect
      *
     C                     ELSE                            *X1
     C                     MOVEL*OFF      *IN20            Protect
      *
     C                     ENDIF                           *E1
      *
      ***  Initialise window positions
     C                     Z-ADDWWROW     SWROW
     C                     Z-ADDWWCOL     SWCOL
      *
      ***  Initialise error indicators
     C                     MOVEA'00000'   *IN,30
      *
      ***  Check feature 'LUC139' existence.
      *
     C                     MOVE 'N'       LUC139  1
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD   7        B:Return Cd
     C                     PARM '*VERIFY' @OPTN   7        I:Option
     C                     PARM 'LUC139'  @SARD   6        I:Key field
      *
      ***  If feature 'LUC139' is installed.
      *
     C           @RTCD     IFEQ *BLANKS                    *B1
     C                     MOVE 'Y'       LUC139
      *
     C                     ENDIF                           *E1
      *
      ***  LUC139 must be present to display the window.
      *
     C           LUC139    IFEQ 'N'                        *B1     Don't display
     C                     MOVE *OFF      *IN50
      *
     C                     MOVE SPARE     F12     1                F12
      *
     C           F12       IFEQ 'R'                        *B2     F12
     C                     MOVE 'USR0790' WWRTRN
     C                     MOVE *BLANK    F12                      F12
     C                     MOVE F12       SPARE
      *
     C                     ENDIF                           *E2
      *
     C                     ELSE                            *X1
      *
     C                     MOVE *ON       *IN50
      *
      ***  Open Branch code extended file.
      *
     C                     OPEN SDBRT1PD               99
      *
     C                     MOVE SPARE     F12     1
     C                     MOVE *BLANK    F12
     C                     MOVE F12       SPARE
      *
     C                     ENDIF                           *E1
     C                     SETON                     25
      *
      ***  Initialise number of decimale to ZALIGN and ZEDIT
      *
     C                     Z-ADD0         ZADEC
      *
     C                     ENDSR
      /EJECT
      **************************************************************************
      *  SRBTOF - Routine to move blanks to file fields
      **************************************************************************
      *
     C           SRBTOF    BEGSR
      *
      ***  Move blanks to file fields
      *
     C*********************MOVEL*BLANKS***XXXXXX
      *
     C                     ENDSR
      /EJECT
     C/COPY ZSRSRC,ZALIGNZ2
     C/COPY ZSRSRC,ZEDITZ2
      /EJECT
      *
**  CPY@
(C) Copyright Finastra International Systems Ltd. 2021
