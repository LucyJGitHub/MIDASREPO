     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Limits types maintenance')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0140M - Midas SD Limits types maintenance.                 *
      *                                                               *
      *  Function:  This sub-file program allows the user to maintain *
      *             from a list of limits types.                      *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      *  Prev Amend No. CAAA03             Date 28Mar04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CSD003             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 122096             DATE 10SEP97               *
      *                 084122             DATE 28MAR95               *
      *                 S01408             DATE 23AUG94               *
      *                 S01459             DATE 01JUL94               *
      *                 BHF734             Date 23OCT90               *
      *                 S01117             Date 27JUL90               *
      *                 LN0168             Date 26JUN90               *
      *                 E18889             Date 10FEB90               *
      *                 E20161             Date 10FEB90               *
      *                 S01117             Date 10FEB90               *
      *                 S01212             Date 10FEB90               *
      *****************************************************************
      *                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CAAA03 - Webfacing Changes (recompile).                      *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  122096 - Addition of call to SD0520X to save deleted         *
      *           records for audit during COB.                       *
      *  084122 - Out of the six periods, only the first should be    *
      *           Mandatory.                                          *
      *  S01408 - Addition of core hooks and standard /Copys.         *
      *  S01459 - Addition of headerbox and PSSR processing.          *
      *  BHF734 - ENSURE THAT POSITIONER WORKS                        *
      *  LN0168 - SET SCAN LIMIT TO 99999.                            *
      *  E18889 - Validation of Limit Types Percentages amended to    *
      *           allow descending sequence only for these fields     *
      *  E20161 - Validation and error message amended for Spot       *
      *           Period                                              *
      *  S01117 - Release 10 Changes.                                 *
      *  S01212 - /Copy and Window Processing                         *
      *                                                               *
      *****************************************************************
     F*Limit Types maintenance  Initialise Program F-Spec
     F/COPY WNCPYSRC,SD0140MFPG
     FSD0140M#CF  E                    WORKSTN                        UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Limits types maintenance
      *
     FSDLIMTL0IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Limit types retrieval index
      *
     FSDLIMTL1UF  E           K        DISK                      A    UC
     F                                              KCOMIT
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * UPD : Midas SD Limit types update index
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*Limit Types maintenance  Initialise Program E-Spec
     E/COPY WNCPYSRC,SD0140MEPG
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I*Limit Types maintenance  Initialise Program I-Spec
     I/COPY WNCPYSRC,SD0140MIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDLIMTL1
      * UPD : Midas SD Limit types update index
      * Current/previous master file format fields for change control
      *
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYARDCS      DS                             22
     IWUDELR      DS
     I                                        1 250 WUDR01
     I                                      251 500 WUDR02
     I                                      501 750 WUDR03
     I                                      7511000 WUDR04
     I                                     10011250 WUDR05
     I                                     12511500 WUDR06
     I                                     15011750 WUDR07
     I                                     17512000 WUDR08
     I                                     20012250 WUDR09
     I                                     22512500 WUDR00
     I                                     25012750 WUDR11
     I                                     27513000 WUDR12
      * Outward parameters
     IPARC        DS                           3064
      * RCD : Midas SD Deleted records file retrieval
      * I :  File name
     I                                        1  10 PAFNME
      * I :  Long Key
     I                                       11  60 PALKEY
      * I :  Deleted Data Record Pt1
     I                                       61 310 PADR01
      * I :  Deleted Data Record Pt2
     I                                      311 560 PADR02
      * I :  Deleted Data Record Pt3
     I                                      561 810 PADR03
      * I :  Deleted Data Record Pt4
     I                                      8111060 PADR04
      * I :  Deleted Data Record Pt5
     I                                     10611310 PADR05
      * I :  Deleted Data Record Pt6
     I                                     13111560 PADR06
      * I :  Deleted Data Record Pt7
     I                                     15611810 PADR07
      * I :  Deleted Data Record Pt8
     I                                     18112060 PADR08
      * I :  Deleted Data Record Pt9
     I                                     20612310 PADR09
      * I :  Deleted Data Record Pt10
     I                                     23112560 PADR00
      * I :  Deleted Data Record Pt11
     I                                     25612810 PADR11
      * I :  Deleted Data Record Pt12
     I                                     28113060 PADR12
      * I :  Last Change Date
     I                                    P306130630PALCD
      * I :  Type of Last Change
     I                                     30643064 PATYLC
      *
     IYBRDCS      DS                             22
     IYCRDCS      DS                             32
     IYDRDCS      DS                             22
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IWUDSTR      DS
     I                                        1   1 WUPOS1
     I                                        2   2 WUPOS2
     I                                        3   3 WUPOS3
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Limit type must be GT 0'
      * Limit Type
     I                                        1   3 ZA0001
      * Message data for 'Question Mark Invalid'
      * Key Field
     I                                        1  10 ZA0002
      * Message data for 'Key Field Invalid Value'
      * If value in key field
     I                                        1   1 ZA0003
      * Key Field
     I                                        2  11 ZA0004
      * Message data for 'limit type not blank'
      * Limit Type
     I                                        1   3 ZA0005
      * Message data for 'limit type not blank'
      * Limit Type
     I                                        1   3 ZA0006
      * Message data for 'limit type not blank'
      * Limit Type
     I                                        1   3 ZA0007
      * Message data for 'Limit Type numeric'
      * Limit Type
     I                                        1   3 ZA0008
      * Message data for 'End of 1st period is req.'
      * End/first Lmt Period func
     I                                        1   3 ZA0009
      * Message data for 'end 1st lmt period GT 0'
      * End/first Lmt Period func
     I                                        1   3 ZA0010
      * Message data for 'invalid End of 1st period'
      * End/first Lmt Period func
     I                                        1   3 ZA0011
      * Message data for '% limit 1st period is req'
      * %/Lmt first period  func
     I                                        1   3 ZA0012
      * Message data for '% Lmt 1st period 1 - 100'
      * %/Lmt first period  func
     I                                        1   3 ZA0013
      * Message data for '% limit 1st period numerc'
      * %/Lmt first period  func
     I                                        1   3 ZA0014
      * Message data for '% Lmt 1st period 1 - 100'
      * %/Lmt first period  func
     I                                        1   3 ZA0015
      * Message data for 'end 2nd lmt period GT 0'
      * End/second Lmt Period fun
     I                                        1   3 ZA0016
      * Message data for 'End 2nd lmt period Num.'
      * End/second Lmt Period fun
     I                                        1   3 ZA0017
      * Message data for '% Lmt 2nd period 1-100'
      * %/Lmt second period  func
     I                                        1   3 ZA0018
      * Message data for '% lmt for 2nd period Num.'
      * %/Lmt second period  func
     I                                        1   3 ZA0019
      * Message data for '% Lmt 2nd period 1-100'
      * %/Lmt second period  func
     I                                        1   3 ZA0020
      * Message data for 'end 3rd lmt period GT 0'
      * End/third Lmt Period func
     I                                        1   3 ZA0021
      * Message data for 'end/lmt third period Num.'
      * End/third Lmt Period func
     I                                        1   3 ZA0022
      * Message data for '% lmt 3rd period 1-100'
      * %/Lmt third period  func
     I                                        1   3 ZA0023
      * Message data for '% lmt for 3rd period Num.'
      * %/Lmt third period  func
     I                                        1   3 ZA0024
      * Message data for '% lmt 3rd period 1-100'
      * %/Lmt third period  func
     I                                        1   3 ZA0025
      * Message data for 'end 4th lmt period GT 0'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0026
      * Message data for 'end lmt 4th period Num.'
      * End/fourth Lmt Period fun
     I                                        1   3 ZA0027
      * Message data for '% lmt 4th period 1-100'
      * %/Lmt fourth period  func
     I                                        1   3 ZA0028
      * Message data for '% lmt fourth period Num.'
      * %/Lmt fourth period  func
     I                                        1   3 ZA0029
      * Message data for '% lmt 4th period 1-100'
      * %/Lmt fourth period  func
     I                                        1   3 ZA0030
      * Message data for 'end 5th lmt period GT 0'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0031
      * Message data for 'end lmt 5th period Num.'
      * End/fourth Lmt Period fun
     I                                        1   3 ZA0032
      * Message data for '% lmt 5th period 1-100'
      * %/Lmt fifth period  func
     I                                        1   3 ZA0033
      * Message data for '% lmt fifth period Num.'
      * %/Lmt fifth period  func
     I                                        1   3 ZA0034
      * Message data for '% lmt 5th period 1-100'
      * %/Lmt fifth period  func
     I                                        1   3 ZA0035
      * Message data for 'end 6th lmt period GT 0'
      * End/sixth Lmt Period func
     I                                        1   3 ZA0036
      * Message data for 'End lmt 6th period Num.'
      * End/sixth Lmt Period func
     I                                        1   3 ZA0037
      * Message data for '% lmt sixth period Num.'
      * %/Lmt sixth period  func
     I                                        1   3 ZA0038
      * Message data for '% lmt 6th period LT 100'
      * %/Lmt sixth period  func
     I                                        1   3 ZA0039
      * Message data for '% / second lmt period req'
      * %/Lmt second period  func
     I                                        1   3 ZA0040
      * Message data for 'Invalid end of per.2 spot'
      * End/second Lmt Period fun
     I                                        1   3 ZA0041
      * Message data for 'Invalid end of period 2'
      * End/second Lmt Period fun
     I                                        1   3 ZA0042
      * Message data for 'End of 2nd period is req.'
      * End/second Lmt Period fun
     I                                        1   3 ZA0043
      * Message data for 'Invalid percentage 2'
      * %/Lmt second period  func
     I                                        1   3 ZA0044
      * Message data for '% / third lmt period req'
      * %/Lmt third period  func
     I                                        1   3 ZA0045
      * Message data for 'No embedded blanks (2)'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0046
      * %/Lmt fifth period  func
     I                                        4   6 ZA0047
      * Message data for 'Invalid end of period 3'
      * End/third Lmt Period func
     I                                        1   3 ZA0048
      * Message data for 'end of 3rd period is req.'
      * End/third Lmt Period func
     I                                        1   3 ZA0049
      * Message data for 'Invalid percentage 3'
      * %/Lmt third period  func
     I                                        1   3 ZA0050
      * Message data for '% / fourth lmt period req'
      * %/Lmt fourth period  func
     I                                        1   3 ZA0051
      * Message data for 'No embedded blanks (2)'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0052
      * %/Lmt fifth period  func
     I                                        4   6 ZA0053
      * Message data for 'Invalid end of period 4'
      * End/fourth Lmt Period fun
     I                                        1   3 ZA0054
      * Message data for 'end of 4th period is req.'
      * End/fourth Lmt Period fun
     I                                        1   3 ZA0055
      * Message data for 'Invalid percentage 4'
      * %/Lmt fourth period  func
     I                                        1   3 ZA0056
      * Message data for '% / fifth lmt period req'
      * %/Lmt fifth period  func
     I                                        1   3 ZA0057
      * Message data for 'No embedded blanks (2)'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0058
      * %/Lmt fifth period  func
     I                                        4   6 ZA0059
      * Message data for 'Invalid end of period 5'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0060
      * Message data for 'end of 5th period is req.'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0061
      * Message data for 'Invalid percentage 5'
      * %/Lmt fifth period  func
     I                                        1   3 ZA0062
      * Message data for '% / sixth lmt period req'
      * %/Lmt sixth period  func
     I                                        1   3 ZA0063
      * Message data for 'No embedded blanks (2)'
      * End/fifth Lmt Period func
     I                                        1   3 ZA0064
      * %/Lmt fifth period  func
     I                                        4   6 ZA0065
      * Message data for 'Invalid end of period 6'
      * End/sixth Lmt Period func
     I                                        1   3 ZA0066
      * Message data for 'end of 6th period is req.'
      * End/sixth Lmt Period func
     I                                        1   3 ZA0067
      * Message data for 'Invalid percentage 6'
      * %/Lmt sixth period  func
     I                                        1   3 ZA0068
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise and load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END
     C                     END
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile header
      * Start of S01408
      * 00/Copy member SD0140MISH - Limit types  *
     C*Limit Types maintenance  Initialise Subfile Header
     C/COPY WNCPYSRC,SD0140MISH
      * End of S01408
     C                     MOVEL'N'       WUDELA           Deletion Allowe
      * CASE: WRK.Set Up Complete is No
     C           WUSUC     IFEQ 'N'                        *IF
      * CASE: PGM.*Program mode is *CHANGE
     C           W0PMD     IFEQ 'CHG'                      *IF
     C                     MOVEL'Y'       WUDELA           Deletion Allowe
     C                     END                             *FI
     C                     END                             *FI
      * Start of Fix S01117
      * Set up Edit File Footer - Standard Functions  *
     C*****************************************************************
     C*
     C*  Sets up the function key footer text for edit files in which
     C*  records may not be deleted after the system set up flag has
     C*  been set on
     C*
     C*****************************************************************
     C*
     C*  DETAIL LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C*  If program mode is ADD:
     C*
     C           W0PMD     IFEQ 'ADD'
     C* Setup footer text:
     C* F3=Main Menu   F5=Refresh   F9=Go to 'Change' Mode
     C                     MOVEL'USR3349' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
     C*
     C*  If set up is not complete:
     C*
     C           WUSUC     IFEQ 'N'
     C* Setup footer text:
     C* D=Delete   F3=Main Menu   F5=Refresh   F9=Go to 'Add' Mode
     C                     MOVEL'USR3348' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
     C* Setup footer text:
     C* F3=Main Menu   F5=Refresh   F9=Go to 'Add' Mode
     C                     MOVEL'USR3354' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
      * End of Fix S01117
      *................................................................
      * If CHANGE mode, then position file:
     C           W0PMD     IFNE 'ADD'
     C           *LIKE     DEFN #2LMTY    WZLMTY
     C                     MOVEL#2LMTY    WZLMTY           Limit Type
     C           KPOS      KLIST
     C                     KFLD           A2LMTY           Limit Type
      * Setup key
     C                     MOVEL#2LMTY    A2LMTY           Limit Type
      * 82=EOF
     C           KPOS      SETLL@A2REBU              82    *
      * 82=EOF
     C  N82                READ @A2REBU                9182*
     C                     ELSE
     C                     SETOF                     82    *
     C                     END
      * Load subfile page
     C                     EXSR BBLDSF
      *................................................................
      * If no records found, display error message
     C   82      ##RR      IFEQ *ZERO                      IF
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page (write empty page if add mode)
      *================================================================
     C                     SETOF                     84    No SFLNXTCHG
      * Re-establish fields in read-ahead record
     C   27      W0PMD     IFNE 'ADD'
     C  N82                READP@A2REBU                  90*
     C  N82                READ @A2REBU                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVE *ALL'0'   WKIND0 14
     C                     MOVE *ALL'1'   WKIND1 14
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
     C                     Z-ADD*ZERO     ##RROK  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next subfile page
     C  N82      ##RROK    DOWLT##SFLN                     DO
     C                     ADD  1         ##RR
     C                     MOVEAWKIND0    *IN,32
     C                     SETOF                     87    *
      * Clear subfile fields
     C                     EXSR MAIZ#1
      * If CHANGE mode, load subfile fields
     C           W0PMD     IFNE 'ADD'
     C                     EXSR MBFL#1
      * Calculate function fields
     C                     EXSR DG#2FN
      * Record will be selected unless overridden
     C                     MOVEL'Y'       W0RSL   1
      * USER: Initialize subfile record (existing record)
      * Start of S01408
      * 00/Copy member SD0140MIRE - Limit types  *
     C*Limit Types maintenance  Initialise Exist Record
     C/COPY WNCPYSRC,SD0140MIRE
      * End of S01408
      * Start of fix S01117
      * End/First Limit Period
      * CASE: DB1.End/First Limit Period is spot
     C           A2E1LP    IFEQ 'SP'                       *IF
     C                     MOVELA2E1LP    #RE1LF           End/first Lmt P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E1LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0001  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0002 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0003  10       ZALIGN No Of De
     C                     PARM 3         WQ0004  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0005 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0006 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0007  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 1st period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE1LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for First period
     C                     EXSR UASUBR                     %/Limit for Fir
      * End/Second Limit Period
      * CASE: DB1.End/Second Limit Period is Blank
     C           A2E2LP    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RE2LF           End/second Lmt
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E2LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0015  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0016 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0017  10       ZALIGN No Of De
     C                     PARM 3         WQ0018  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0019 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0020 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0021  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 2nd lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE2LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for Second Period
      * CASE: DB1.%/Limit for Second Period is blank
     C           A2PL2P    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RPL2F           %/Lmt second pe
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL2P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0022  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0023 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0024  10       ZALIGN No Of De
     C                     PARM 3         WQ0025  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0026 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0027 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0028  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % lmt 2nd period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL2F
     C*
     C*
     C                     END                             *FI
      * End/Limit Third Period
      * CASE: DB1.End/Third Limit Period is Blank
     C           A2E3LP    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RE3LF           End/third Lmt P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E3LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0029  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0030 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0031  10       ZALIGN No Of De
     C                     PARM 3         WQ0032  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0033 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0034 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0035  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 3rd lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE3LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for Third Period
      * CASE: DB1.%/Limit for Third Period is blank
     C           A2PL3P    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RPL3F           %/Lmt third per
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL3P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0036  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0037 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0038  10       ZALIGN No Of De
     C                     PARM 3         WQ0039  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0040 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0041 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0042  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % lmt 3rd period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL3F
     C*
     C*
     C                     END                             *FI
      * End/Fourth Limit Period
      * CASE: DB1.End/Fourth Limit Period is Blank
     C           A2E4LP    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RE4LF           End/fourth Lmt
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E4LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0043  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0044 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0045  10       ZALIGN No Of De
     C                     PARM 3         WQ0046  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0047 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0048 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0049  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 4th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE4LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for Fourth Period
      * CASE: DB1.%/Limit for Fourth Period is blank
     C           A2PL4P    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RPL4F           %/Lmt fourth pe
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL4P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0050  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0051 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0052  10       ZALIGN No Of De
     C                     PARM 3         WQ0053  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0054 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0055 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0056  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % lmt 4th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL4F
     C*
     C*
     C                     END                             *FI
      * End/Fifth Limit Period
      * CASE: DB1.End/Fifth Limit Period is Blank
     C           A2E5LP    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RE5LF           End/fifth Lmt P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E5LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0057  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0058 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0059  10       ZALIGN No Of De
     C                     PARM 3         WQ0060  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0061 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0062 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0063  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 5th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE5LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for Fifth Period
      * CASE: DB1.%/Limit for Fifth Period is blank
     C           A2PL5P    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RPL5F           %/Lmt fifth per
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL5P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0064  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0065 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0066  10       ZALIGN No Of De
     C                     PARM 3         WQ0067  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0068 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0069 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0070  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % lmt 5th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL5F
     C*
     C*
     C                     END                             *FI
      * End/Sixth Limit Period
      * CASE: DB1.End/Sixth Limit Period is Blank
     C           A2E6LP    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #RE6LF           End/sixth Lmt P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2E6LP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0071  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0072 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0073  10       ZALIGN No Of De
     C                     PARM 3         WQ0074  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0075 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0076 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0077  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign end 6th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE6LF
     C*
     C*
     C                     END                             *FI
      * %/Limit for the sixth period
      * CASE: RCD.End/sixth Lmt Period func is not blank
     C           #RE6LF    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL6P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0078  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0079 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0080  10       ZALIGN No Of De
     C                     PARM 3         WQ0081  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0082 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0083 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0084  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % lmt 6th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL6F
     C*
     C*
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #RPL6F           %/Lmt sixth per
     C                     END                             *FI
      * End of fix S01117
      * If record dropped...
     C                     SUB  1         ##RR
     C           W0RSL     CABNE'Y'       BB020
     C                     ADD  1         ##RR
      * Validate subfile record and calculate derived fields
     C                     EXSR DFV2RC
     C                     END
      * Output to subfile
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
     C           W0PMD     IFNE 'ADD'
      * 82=EOF
     C                     READ @A2REBU                  82*
     C                     END
     C  N82                END
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN89     IFNE CAIN89
     C           *IN81     ORNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN89     CAIN89  1
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * CALC: Subfile control function fields
      * Start of S01408
      * 00/Copy member SD0140MSFF - Limit types  *
     C*Limit Types maintenance  Calculate Control Funct
     C/COPY WNCPYSRC,SD0140MSFF
      * End of S01408
     C           W0PMD     IFNE 'ADD'
      * Change of position specified
     C           WZLMTY    CASNE#2LMTY    FBRQRL           Limit Type
     C                     END
     C                     END
      * USER: Validate subfile control
      * Start of S01408
      * 00/Copy member SD0140MVSC - Limit types  *
     C*Limit Types maintenance  Validate Control
     C/COPY WNCPYSRC,SD0140MVSC
      * End of S01408
      * Start of BHF734
      * CASE: CTL.Limit Type is not equal blank
     C           #2LMTY    IFNE *BLANK                     *IF
      * If the value entered in the positioner field is a number
      * ensure that it has leading zeros
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
      * MOVE Positioner to ZALIGN - Limit types  *
     C                     MOVE #2LMTY    WUZASF
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0085  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0086 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0087  10       ZALIGN No Of De
     C                     PARM 3         WQ0088  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0089 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * MOVE ZSEDIT to Positioner - Limit types  *
     C                     MOVE WUZASF    #2LMTY
     C                     END                             *FI
     C                     END                             *FI
      * End of BHF734
      * Quit if reload requested
     C           W0RSF     CABEQ'Y'       DAEXIT
      *
     C   81                DO
      * No data entered as yet
     C                     MOVEL'N'       WKIPIN  1
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Process subfile records
     C                     EXSR DBPRSF
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * If data entered
     C           WKIPIN    IFEQ 'Y'
      * Update DBF from subfile
     C                     EXSR EAPRSF
      * If error during update, exit:
     C           *IN99     CABEQ'1'       DAEXIT
     C                     END                             WKIPIN
     C                     END
      * Switch between *ADD/*CHANGE modes
     C   09                EXSR FACHMD
      * USER: Process command keys
      * Start of S01408
      * 00/Copy member SD0140MPCK - Limit types  *
     C*Limit Types maintenance  Process Command Keys
     C/COPY WNCPYSRC,SD0140MPCK
      * End of S01408
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
     C                     EXSR DCPRSR
     C                     SETOF                     87    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,32
      * No errors
     C                     SETOF                     98
      * No SFLNXTCHG
     C                     SETOF                     84
     C           W0PMD     IFEQ 'ADD'
      * Check for null record
     C                     EXSR DDNLRC
     C           W0NLR     IFEQ 'Y'
     C                     GOTO DCEXIT
     C                     END
      * If not null record, continue
     C                     END
      * Data entered
     C                     MOVEL'Y'       WKIPIN
      * SFLNXTCHG
     C                     SETON                     84
      * If delete request, bypass validation
     C           #1SEL     IFEQ 'D'
     C                     GOTO DCEXIT
     C                     END
      * Validate subfile record
     C                     EXSR DEV1RC
      * If SFLRCD invalid, note the fact
     C   98N99             Z-ADD##RR      ##SFRC     99    *
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DDNLRC    BEGSR
      *================================================================
      * Check for null record
      *================================================================
     C                     MOVEL'N'       W0NLR   1
     C           #1LMTY    CABNE*BLANK    DDEXIT           Limit Type
     C           #RE1LF    CABNE*BLANK    DDEXIT           End/first Lmt P
     C           #RPL1F    CABNE*BLANK    DDEXIT           %/Lmt first per
     C           #RE2LF    CABNE*BLANK    DDEXIT           End/second Lmt
     C           #RPL2F    CABNE*BLANK    DDEXIT           %/Lmt second pe
     C           #RE3LF    CABNE*BLANK    DDEXIT           End/third Lmt P
     C           #RPL3F    CABNE*BLANK    DDEXIT           %/Lmt third per
     C           #RE4LF    CABNE*BLANK    DDEXIT           End/fourth Lmt
     C           #RPL4F    CABNE*BLANK    DDEXIT           %/Lmt fourth pe
     C           #RE5LF    CABNE*BLANK    DDEXIT           End/fifth Lmt P
     C           #RPL5F    CABNE*BLANK    DDEXIT           %/Lmt fifth per
     C           #RE6LF    CABNE*BLANK    DDEXIT           End/sixth Lmt P
     C           #RPL6F    CABNE*BLANK    DDEXIT           %/Lmt sixth per
     C                     MOVEL'Y'       W0NLR
      *================================================================
     CSR         DDEXIT    ENDSR
      /EJECT
     CSR         DEV1RC    BEGSR
      *================================================================
      * Validate subfile record
      *================================================================
      * USER: Validate subfile record fields
      * Start of S01408
      * 00/Copy member SD0140MVSR - Limit types  *
     C*Limit Types maintenance  Validate Subfile Records
     C/COPY WNCPYSRC,SD0140MVSR
      * End of S01408
      * Start of Fix S01117
      * Limit Type Validation
      * CASE: PGM.*Program mode is *ADD
     C           W0PMD     IFEQ 'ADD'                      *IF
      * CASE: RCD.Limit Type is not equal blank
     C           #1LMTY    IFNE *BLANK                     *IF
      * CASE: RCD.Limit Type is zero
     C           #1LMTY    IFGE '0'                        *IF
     C           #1LMTY    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0001           Limit Type
      * Send message 'Limit type must be GT 0'
     C                     MOVEL'USR1389' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1LMTY    WUTQKF           Test ? in Key F
      * Start of Fix S01117
     C                     MOVEL#1LMTY    WUIVKF           If value in key
      * End of Fix S01117
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'?INVAL'  W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0002           Limit Type
      * Send message 'Question Mark Invalid'
     C                     MOVEL'USR0380' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
      * Start of Fix S01117
     C                     ELSE
      * CASE: WRK.If value in key field is Asterisk
     C           WUIVKF    IFEQ '*'                        *IF
      * Setup message data for message
     C                     MOVELWUIVKF    ZA0003           If value in key
     C                     MOVEL#1LMTY    ZA0004           Limit Type
      * Send message 'Key Field Invalid Value'
     C                     MOVEL'USR0849' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Check if Limit Type contains any blanks
     C                     MOVEL#1LMTY    WUDSTR           Data Structure
      * CASE: WRK.Position One is Blank
     C           WUPOS1    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0005           Limit Type
      * Send message 'limit type not blank'
     C                     MOVEL'USR1417' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     ELSE
      * CASE: WRK.Position Two is Blank
     C           WUPOS2    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0006           Limit Type
      * Send message 'limit type not blank'
     C                     MOVEL'USR1417' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     ELSE
      * CASE: WRK.Position three is Blank
     C           WUPOS3    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0007           Limit Type
      * Send message 'limit type not blank'
     C                     MOVEL'USR1417' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#1LMTY    WUZASF           ZALIGN Screen F
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0090  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0091 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0092  10       ZALIGN No Of De
     C                     PARM 3         WQ0093  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0094 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
      * Setup message data for message
     C                     MOVEL#1LMTY    ZA0008           Limit Type
      * Send message 'Limit Type numeric'
     C                     MOVEL'USR1353' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
      * End of Fix S01117
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End / First Limit Period
      * CASE: RCD.End/first Lmt Period func is blank
     C           #RE1LF    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RE1LF    ZA0009           End/first Lmt P
      * Send message 'End of 1st period is req.'
     C                     MOVEL'USR1355' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     ELSE
      * CASE: RCD.End/first Lmt Period func is zero
     C           #RE1LF    IFGE '0'                        *IF
     C           #RE1LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE1LF    ZA0010           End/first Lmt P
      * Send message 'end 1st lmt period GT 0'
     C                     MOVEL'USR1388' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     ELSE
      * CASE: RCD.End/first Lmt Period func is spot
     C           #RE1LF    IFEQ 'SP'                       *IF
     C                     MOVEL#RE1LF    #1E1LP           End/First Limit
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE1LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0095  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0096 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0097  10       ZALIGN No Of De
     C                     PARM 3         WQ0098  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0099 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0100 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0101  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE1LF    ZA0011           End/first Lmt P
      * Send message 'invalid End of 1st period'
     C                     MOVEL'USR1356' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 1st period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE1LF
     C*
     C*
     C                     MOVEL#RE1LF    #1E1LP           End/First Limit
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * % Limit for First Period
      * CASE: RCD.%/Lmt first period  func is blank
     C           #RPL1F    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RPL1F    ZA0012           %/Lmt first per
      * Send message '% limit 1st period is req'
     C                     MOVEL'USR1357' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.%/Lmt first period  func is zero
     C           #RPL1F    IFGE '0'                        *IF
     C           #RPL1F    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RPL1F    ZA0013           %/Lmt first per
      * Send message '% Lmt 1st period 1 - 100'
     C                     MOVEL'USR1387' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL1F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0102  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0103 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0104  10       ZALIGN No Of De
     C                     PARM 3         WQ0105  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0106 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0107 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0108  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL1F    ZA0014           %/Lmt first per
      * Send message '% limit 1st period numerc'
     C                     MOVEL'USR1358' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % of 1st period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL1F
     C*
     C*
     C                     MOVE WUZAFF    #1PL1P           %/Limit for Fir
      * 00/Copy member SD0140MC01 - Limit types  *
     C/COPY WNCPYSRC,SD0140MC01
      * CASE: RCD.%/Limit for First Period is Range 1-100
     C           #1PL1P    IFGE *ZERO                      *IF
     C           #1PL1P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL1F    ZA0015           %/Lmt first per
      * Send message '% Lmt 1st period 1 - 100'
     C                     MOVEL'USR1387' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     END                             *FI
      * 00/Copy member SD0140MC02 - Limit types  *
     C/COPY WNCPYSRC,SD0140MC02
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End / Second Limit Period
      * CASE: RCD.End/second Lmt Period fun is entered
     C           #RE2LF    IFNE *BLANK                     *IF
      * CASE: RCD.End/second Lmt Period fun is zero
     C           #RE2LF    IFGE '0'                        *IF
     C           #RE2LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0016           End/second Lmt
      * Send message 'end 2nd lmt period GT 0'
     C                     MOVEL'USR1382' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE2LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0109  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0110 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0111  10       ZALIGN No Of De
     C                     PARM 3         WQ0112  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0113 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0114 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0115  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0017           End/second Lmt
      * Send message 'End 2nd lmt period Num.'
     C                     MOVEL'USR1359' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 2nd lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE2LF
     C*
     C*
     C                     MOVE WUZAFF    #1E2LP           End/Second Limi
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1E2LP           End/Second Limi
     C                     END                             *FI
      * % Limit for Second Period
      * CASE: RCD.%/Lmt second period  func is entered
     C           #RPL2F    IFNE *BLANK                     *IF
      * CASE: RCD.%/Lmt second period  func is zero
     C           #RPL2F    IFGE '0'                        *IF
     C           #RPL2F    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RPL2F    ZA0018           %/Lmt second pe
      * Send message '% Lmt 2nd period 1-100'
     C                     MOVEL'USR1378' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL2F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0116  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0117 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0118  10       ZALIGN No Of De
     C                     PARM 3         WQ0119  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0120 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0121 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0122  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL2F    ZA0019           %/Lmt second pe
      * Send message '% lmt for 2nd period Num.'
     C                     MOVEL'USR1360' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % lmt 2nd period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL2F
     C*
     C*
     C                     MOVE WUZAFF    #1PL2P           %/Limit for Sec
      * CASE: RCD.%/Limit for Second Period is Range 1-100
     C           #1PL2P    IFGE *ZERO                      *IF
     C           #1PL2P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL2F    ZA0020           %/Lmt second pe
      * Send message '% Lmt 2nd period 1-100'
     C                     MOVEL'USR1378' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1PL2P           %/Limit for Sec
     C                     END                             *FI
      * End / Third Limit Period
      * CASE: RCD.End/third Lmt Period func is entered
     C           #RE3LF    IFNE *BLANK                     *IF
      * CASE: RCD.End/third Lmt Period func is zero
     C           #RE3LF    IFGE '0'                        *IF
     C           #RE3LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE3LF    ZA0021           End/third Lmt P
      * Send message 'end 3rd lmt period GT 0'
     C                     MOVEL'USR1383' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE3LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0123  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0124 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0125  10       ZALIGN No Of De
     C                     PARM 3         WQ0126  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0127 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0128 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0129  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE3LF    ZA0022           End/third Lmt P
      * Send message 'end/lmt third period Num.'
     C                     MOVEL'USR1361' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 3rd lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE3LF
     C*
     C*
     C                     MOVE WUZAFF    #1E3LP           End/Third Limit
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1E3LP           End/Third Limit
     C                     END                             *FI
      * % Limit for Third Period
      * CASE: RCD.%/Lmt third period  func is entered
     C           #RPL3F    IFNE *BLANK                     *IF
      * CASE: RCD.%/Lmt third period  func is zero
     C           #RPL3F    IFGE '0'                        *IF
     C           #RPL3F    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RPL3F    ZA0023           %/Lmt third per
      * Send message '% lmt 3rd period 1-100'
     C                     MOVEL'USR1379' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL3F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0130  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0131 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0132  10       ZALIGN No Of De
     C                     PARM 3         WQ0133  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0134 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0135 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0136  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL3F    ZA0024           %/Lmt third per
      * Send message '% lmt for 3rd period Num.'
     C                     MOVEL'USR1362' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % lmt 3rd period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL3F
     C*
     C*
     C                     MOVE WUZAFF    #1PL3P           %/Limit for Thi
      * CASE: RCD.%/Limit for Third Period is Range 1-100
     C           #1PL3P    IFGE *ZERO                      *IF
     C           #1PL3P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL3F    ZA0025           %/Lmt third per
      * Send message '% lmt 3rd period 1-100'
     C                     MOVEL'USR1379' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1PL3P           %/Limit for Thi
     C                     END                             *FI
      * End / Fourth Limit Period
      * CASE: RCD.End/fourth Lmt Period fun is entered
     C           #RE4LF    IFNE *BLANK                     *IF
      * CASE: RCD.End/fourth Lmt Period fun is zero
     C           #RE4LF    IFGE '0'                        *IF
     C           #RE4LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE4LF    ZA0026           End/fourth Lmt
      * Send message 'end 4th lmt period GT 0'
     C                     MOVEL'USR1384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE4LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0137  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0138 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0139  10       ZALIGN No Of De
     C                     PARM 3         WQ0140  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0141 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0142 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0143  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE4LF    ZA0027           End/fourth Lmt
      * Send message 'end lmt 4th period Num.'
     C                     MOVEL'USR1363' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 4th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE4LF
     C*
     C*
     C                     MOVE WUZAFF    #1E4LP           End/Fourth Limi
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1E4LP           End/Fourth Limi
     C                     END                             *FI
      * % Limit for Fourth Period
      * CASE: RCD.%/Lmt fourth period  func is entered
     C           #RPL4F    IFNE *BLANK                     *IF
      * CASE: RCD.%/Lmt fourth period  func is zero
     C           #RPL4F    IFGE '0'                        *IF
     C           #RPL4F    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RPL4F    ZA0028           %/Lmt fourth pe
      * Send message '% lmt 4th period 1-100'
     C                     MOVEL'USR1380' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL4F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0144  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0145 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0146  10       ZALIGN No Of De
     C                     PARM 3         WQ0147  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0148 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0149 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0150  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL4F    ZA0029           %/Lmt fourth pe
      * Send message '% lmt fourth period Num.'
     C                     MOVEL'USR1364' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % lmt 4th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL4F
     C*
     C*
     C                     MOVE WUZAFF    #1PL4P           %/Limit for Fou
      * CASE: RCD.%/Limit for Fourth Period is Range 1-100
     C           #1PL4P    IFGE *ZERO                      *IF
     C           #1PL4P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL4F    ZA0030           %/Lmt fourth pe
      * Send message '% lmt 4th period 1-100'
     C                     MOVEL'USR1380' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1PL4P           %/Limit for Fou
     C                     END                             *FI
      * End / Fifth Limit Period
      * CASE: RCD.End/fifth Lmt Period func is entered
     C           #RE5LF    IFNE *BLANK                     *IF
      * CASE: RCD.End/fifth Lmt Period func is zero
     C           #RE5LF    IFGE '0'                        *IF
     C           #RE5LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE5LF    ZA0031           End/fifth Lmt P
      * Send message 'end 5th lmt period GT 0'
     C                     MOVEL'USR1385' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9842  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE5LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0151  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0152 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0153  10       ZALIGN No Of De
     C                     PARM 3         WQ0154  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0155 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0156 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0157  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE5LF    ZA0032           End/fifth Lmt P
      * Send message 'end lmt 5th period Num.'
     C                     MOVEL'USR1365' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9842  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 5th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE5LF
     C*
     C*
     C                     MOVE WUZAFF    #1E5LP           End/Fifth Limit
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1E5LP           End/Fifth Limit
     C                     END                             *FI
      * % Limit for Fifth Period
      * CASE: RCD.%/Lmt fifth period  func is entered
     C           #RPL5F    IFNE *BLANK                     *IF
      * CASE: RCD.%/Lmt fifth period  func is zero
     C           #RPL5F    IFGE '0'                        *IF
     C           #RPL5F    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RPL5F    ZA0033           %/Lmt fifth per
      * Send message '% lmt 5th period 1-100'
     C                     MOVEL'USR1381' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9843  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL5F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0158  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0159 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0160  10       ZALIGN No Of De
     C                     PARM 3         WQ0161  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0162 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0163 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0164  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL5F    ZA0034           %/Lmt fifth per
      * Send message '% lmt fifth period Num.'
     C                     MOVEL'USR1366' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9843  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % lmt 5th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL5F
     C*
     C*
     C                     MOVE WUZAFF    #1PL5P           %/Limit for Fif
      * CASE: RCD.%/Limit for Fifth Period is Range 1-100
     C           #1PL5P    IFGE *ZERO                      *IF
     C           #1PL5P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL5F    ZA0035           %/Lmt fifth per
      * Send message '% lmt 5th period 1-100'
     C                     MOVEL'USR1381' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9843  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1PL5P           %/Limit for Fif
     C                     END                             *FI
      * End / Sixth Limit Period
      * CASE: RCD.End/sixth Lmt Period func is entered
     C           #RE6LF    IFNE *BLANK                     *IF
      * CASE: RCD.End/sixth Lmt Period func is zero
     C           #RE6LF    IFGE '0'                        *IF
     C           #RE6LF    ANDLE'000'
      * Setup message data for message
     C                     MOVEL#RE6LF    ZA0036           End/sixth Lmt P
      * Send message 'end 6th lmt period GT 0'
     C                     MOVEL'USR1386' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RE6LF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0165  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0166 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0167  10       ZALIGN No Of De
     C                     PARM 3         WQ0168  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0169 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0170 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0171  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RE6LF    ZA0037           End/sixth Lmt P
      * Send message 'End lmt 6th period Num.'
     C                     MOVEL'USR1367' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign end 6th lmt period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RE6LF
     C*
     C*
     C                     MOVE WUZAFF    #1E6LP           End/Sixth Limit
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1E6LP           End/Sixth Limit
     C                     END                             *FI
      * % Limit for Sixth Period
      * CASE: RCD.%/Lmt sixth period  func is entered
     C           #RPL6F    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#RPL6F    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0172  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0173 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0174  10       ZALIGN No Of De
     C                     PARM 3         WQ0175  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0176 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0177 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0178  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#RPL6F    ZA0038           %/Lmt sixth per
      * Send message '% lmt sixth period Num.'
     C                     MOVEL'USR1368' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9845  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * zalign % lmt 6th period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL6F
     C*
     C*
     C                     MOVE WUZAFF    #1PL6P           %/Limit for Six
      * CASE: RCD.%/Limit for Sixth Period is valid value
     C           #1PL6P    IFGE *ZERO                      *IF
     C           #1PL6P    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#RPL6F    ZA0039           %/Lmt sixth per
      * Send message '% lmt 6th period LT 100'
     C                     MOVEL'USR1396' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9845  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1PL6P           %/Limit for Six
     C                     MOVEL*BLANK    #RPL6F           %/Lmt sixth per
     C                     END                             *FI
      * End of Fix S01117
      * Validate subfile record relations
     C                     EXSR DFV2RC
      * Limit Type required
     C           #1LMTY    IFEQ *BLANK                     IF
     C                     SETON                     9833  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DEEXIT    ENDSR
      /EJECT
     CSR         DFV2RC    BEGSR
      *================================================================
      * Validate subfile record relations
      *================================================================
      * Calculate function fields
     C                     EXSR DG#2FN
      * USER: Validate subfile record relations
      * End of second period is not blank
      * CASE: RCD.End/Second Limit Period is Not blank
     C           #1E2LP    IFNE *ZERO                      *IF
      * CASE: RCD.%/Limit for Second Period is blank
     C           #1PL2P    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RPL2F    ZA0040           %/Lmt second pe
      * Send message '% / second lmt period req'
     C                     MOVEL'USR0118' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
      * CASE: RCD.End/First Limit Period is spot
     C           #1E1LP    IFEQ 'SP'                       *IF
      * CASE: RCD.End/Second Limit Period is Inferior to seven
     C           #1E2LP    IFGE *ZERO                      *IF
     C           #1E2LP    ANDLE6
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0041           End/second Lmt
      * Send message 'Invalid end of per.2 spot'
     C                     MOVEL'USR0116' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: RCD.End/First Limit Period is Not spot
     C           #1E1LP    IFNE 'SP'                       *IF
      * Move 1st e.o.p.into num. - Limit types  *
     C*********************MOVE #1A5TX    WUC2TX  30       LIMIT WORKFIELDS01229
     C*********************MOVE #1E1LP    WUC2TX  30       LIMIT WORKFIELDS01229
     C                     MOVE #1E1LP    WULMWF  30       LIMIT WORKFIELDS01229
      * CASE: RCD.End/Second Limit Period LE WRK.Limit workfield
     C           #1E2LP    IFLE WULMWF                     *IF
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0042           End/second Lmt
      * Send message 'Invalid end of period 2'
     C                     MOVEL'USR0106' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
     C                     Z-ADD*ZERO     WULMWF           Limit workfield
     C                     END                             *FI
     C                     END                             *FI
      * The percentage of the second period is not blank
      * CASE: RCD.%/Limit for Second Period is not blank
     C           #1PL2P    IFNE *ZERO                      *IF
      * CASE: RCD.End/Second Limit Period is Blank
     C           #1E2LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0043           End/second Lmt
      * Send message 'End of 2nd period is req.'
     C                     MOVEL'USR0119' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
      * Start of fix E18889
      * Start of fix S01117
      * CASE: RCD.%/Limit for Second Period GT RCD.%/Limit for First Peri
     C           #1PL2P    IFGT #1PL1P                     *IF
      * Start of S01408
      * 00/Copy member SD0140MVRR - Limit types  *
     C*Limit Types maintenance  Validate Record Relations
     C/COPY WNCPYSRC,SD0140MVRR
      * End of S01408
      * End of fix S01117
      * Setup message data for message
     C                     MOVEL#RPL2F    ZA0044           %/Lmt second pe
      * Send message 'Invalid percentage 2'
     C                     MOVEL'USR0111' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
      * End of fix E18889
     C                     END                             *FI
      * End of the third period is not blank
      * CASE: RCD.End/Third Limit Period is Not blank
     C           #1E3LP    IFNE *ZERO                      *IF
      * CASE: RCD.%/Limit for Third Period is blank
     C           #1PL3P    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RPL3F    ZA0045           %/Lmt third per
      * Send message '% / third lmt period req'
     C                     MOVEL'USR1373' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
      * CASE: RCD.End/Second Limit Period is Blank
     C           #1E2LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE2LF    ZA0046           End/second Lmt
     C                     MOVEL#RPL2F    ZA0047           %/Lmt second pe
      * Send message 'No embedded blanks (2)'
     C                     MOVEL'USR0159' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     983637*
      *
     C                     END                             *FI
      * CASE: RCD.End/Third Limit Period LE RCD.End/Second Limit
     C           #1E3LP    IFLE #1E2LP                     *IF
      * Setup message data for message
     C                     MOVEL#RE3LF    ZA0048           End/third Lmt P
      * Send message 'Invalid end of period 3'
     C                     MOVEL'USR0107' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Percentage of the third period is not blank
      * CASE: RCD.%/Limit for Third Period is not blank
     C           #1PL3P    IFNE *ZERO                      *IF
      * CASE: RCD.End/Third Limit Period is Blank
     C           #1E3LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE3LF    ZA0049           End/third Lmt P
      * Send message 'end of 3rd period is req.'
     C                     MOVEL'USR1369' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     END                             *FI
      * Start of fix E18889
      * Start of fix S01117
      * CASE: RCD.%/Limit for Third Period GT RCD.%/Limit for Second Peri
     C           #1PL3P    IFGT #1PL2P                     *IF
      * Start of S01408
      * 00/Copy member SD0140MVR1 - Limit types  *
     C*Limit Types maintenance
     C/COPY WNCPYSRC,SD0140MVR1
      * End of S01408
      * Setup message data for message
     C                     MOVEL#RPL3F    ZA0050           %/Lmt third per
      * Send message 'Invalid percentage 3'
     C                     MOVEL'USR0112' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
      * End of fix S01117
      * End of fix E18889
     C                     END                             *FI
      * End of the fourth period is not blank
      * CASE: RCD.End/Fourth Limit Period is Not blank
     C           #1E4LP    IFNE *ZERO                      *IF
      * CASE: RCD.%/Limit for Fourth Period is blank
     C           #1PL4P    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RPL4F    ZA0051           %/Lmt fourth pe
      * Send message '% / fourth lmt period req'
     C                     MOVEL'USR1374' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
      * CASE: RCD.End/Third Limit Period is Blank
     C           #1E3LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE3LF    ZA0052           End/third Lmt P
     C                     MOVEL#RPL3F    ZA0053           %/Lmt third per
      * Send message 'No embedded blanks (2)'
     C                     MOVEL'USR0159' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     983839*
      *
     C                     END                             *FI
      * CASE: RCD.End/Fourth Limit Period LE RCD.End/Third Limit
     C           #1E4LP    IFLE #1E3LP                     *IF
      * Setup message data for message
     C                     MOVEL#RE4LF    ZA0054           End/fourth Lmt
      * Send message 'Invalid end of period 4'
     C                     MOVEL'USR0108' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * The percentage of the fourth period is not blank
      * CASE: RCD.%/Limit for Fourth Period is not blank
     C           #1PL4P    IFNE *ZERO                      *IF
      * CASE: RCD.End/Fourth Limit Period is Blank
     C           #1E4LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE4LF    ZA0055           End/fourth Lmt
      * Send message 'end of 4th period is req.'
     C                     MOVEL'USR1370' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     END                             *FI
      * Start of fix E18889
      * Start of fix S01117
      * CASE: RCD.%/Limit for Fourth Period GT RCD.%/Limit for Third Peri
     C           #1PL4P    IFGT #1PL3P                     *IF
      * Start of S01408
      * 00/Copy member SD0140MVR2 - Limit types  *
     C*Limit Types maintenance
     C/COPY WNCPYSRC,SD0140MVR2
      * End of S01408
      * Setup message data for message
     C                     MOVEL#RPL4F    ZA0056           %/Lmt fourth pe
      * Send message 'Invalid percentage 4'
     C                     MOVEL'USR0113' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
      * End of fix S01117
      * End of fix E18889
     C                     END                             *FI
      * End of the fifth period is not blank
      * CASE: RCD.End/Fifth Limit Period is Not blank
     C           #1E5LP    IFNE *ZERO                      *IF
      * CASE: RCD.%/Limit for Fifth Period is blank
     C           #1PL5P    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RPL5F    ZA0057           %/Lmt fifth per
      * Send message '% / fifth lmt period req'
     C                     MOVEL'USR1375' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9843  *
      *
     C                     END                             *FI
      * CASE: RCD.End/Fourth Limit Period is Blank
     C           #1E4LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE4LF    ZA0058           End/fourth Lmt
     C                     MOVEL#RPL4F    ZA0059           %/Lmt fourth pe
      * Send message 'No embedded blanks (2)'
     C                     MOVEL'USR0159' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     984041*
      *
     C                     END                             *FI
      * CASE: RCD.End/Fifth Limit Period LE RCD.End/Fourth Limit
     C           #1E5LP    IFLE #1E4LP                     *IF
      * Setup message data for message
     C                     MOVEL#RE5LF    ZA0060           End/fifth Lmt P
      * Send message 'Invalid end of period 5'
     C                     MOVEL'USR0109' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9842  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * The percentage of the fifth period is not blank
      * CASE: RCD.%/Limit for Fifth Period is not blank
     C           #1PL5P    IFNE *ZERO                      *IF
      * CASE: RCD.End/Fifth Limit Period is Blank
     C           #1E5LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE5LF    ZA0061           End/fifth Lmt P
      * Send message 'end of 5th period is req.'
     C                     MOVEL'USR1371' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9842  *
      *
     C                     END                             *FI
      * Start of fix E18889
      * Start of fix S01117
      * CASE: RCD.%/Limit for Fifth Period GT RCD.%/Limit for Fourth Peri
     C           #1PL5P    IFGT #1PL4P                     *IF
      * Start of S01408
      * 00/Copy member SD0140MVR3 - Limit types  *
     C*Limit Types maintenance
     C/COPY WNCPYSRC,SD0140MVR3
      * End of S01408
      * Setup message data for message
     C                     MOVEL#RPL5F    ZA0062           %/Lmt fifth per
      * Send message 'Invalid percentage 5'
     C                     MOVEL'USR0114' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9843  *
      *
     C                     END                             *FI
      * End of fix S01117
      * End of fix E18889
     C                     END                             *FI
      * End of the sixth period is not blank
      * CASE: RCD.End/sixth Lmt Period func is not blank
     C           #RE6LF    IFNE *BLANK                     *IF
      * CASE: RCD.%/Lmt sixth period  func is blank
     C           #RPL6F    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RPL6F    ZA0063           %/Lmt sixth per
      * Send message '% / sixth lmt period req'
     C                     MOVEL'USR1397' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9845  *
      *
     C                     END                             *FI
      * CASE: RCD.End/Fifth Limit Period is Blank
     C           #1E5LP    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#RE5LF    ZA0064           End/fifth Lmt P
     C                     MOVEL#RPL5F    ZA0065           %/Lmt fifth per
      * Send message 'No embedded blanks (2)'
     C                     MOVEL'USR0159' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     984243*
      *
     C                     END                             *FI
      * CASE: RCD.End/Sixth Limit Period LE RCD.End/Fifth Limit
     C           #1E6LP    IFLE #1E5LP                     *IF
      * Setup message data for message
     C                     MOVEL#RE6LF    ZA0066           End/sixth Lmt P
      * Send message 'Invalid end of period 6'
     C                     MOVEL'USR0110' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * The percentage of the sixth period is not blank
      * CASE: RCD.%/Lmt sixth period  func is entered
     C           #RPL6F    IFNE *BLANK                     *IF
      * CASE: RCD.End/sixth Lmt Period func is blank
     C           #RE6LF    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RE6LF    ZA0067           End/sixth Lmt P
      * Send message 'end of 6th period is req.'
     C                     MOVEL'USR1372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     END                             *FI
      * CASE: RCD.%/Limit for Sixth Period GT RCD.%/Limit for Fifth Perio
     C           #1PL6P    IFGT #1PL5P                     *IF
      * Start of S01408
      * 00/Copy member SD0140MVR4 - Limit types  *
     C*Limit Types maintenance
     C/COPY WNCPYSRC,SD0140MVR4
      * End of S01408
      * Setup message data for message
     C                     MOVEL#RPL6F    ZA0068           %/Lmt sixth per
      * Send message 'Invalid percentage 6'
     C                     MOVEL'USR0115' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9845  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         DFEXIT    ENDSR
      /EJECT
     CSR         DG#2FN    BEGSR
      *================================================================
      * Calculate subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      * Start of S01408
      * 00/Copy member SD0140MRFF - Limit types  *
     C*Limit Types maintenance  Calculate Record Funct
     C/COPY WNCPYSRC,SD0140MRFF
      * End of S01408
      *================================================================
     CSR         DGEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * Initialise subfile reload flag
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'Y'       W0RSF
     C                     ELSE
     C                     MOVEL'N'       W0RSF
     C                     END
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C                     MOVEL*BLANK    #1SEL
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,32
     C                     SETOF                     98
      *
     C           W0PMD     IFEQ 'ADD'
      * Process add request
     C           #1SEL     IFNE 'D'
     C                     EXSR DDNLRC
     C           W0NLR     IFNE 'Y'
     C                     EXSR ECADRQ
     C                     END
     C                     END
     C                     ELSE
     C           #1SEL     IFEQ 'D'
      * Process delete request
     C                     EXSR EDDLRQ
     C                     ELSE
      * Process change request
     C                     EXSR EECHRQ
     C                     END
     C                     END
      * If error occurred on update, note the fact
     C           *IN98     IFEQ '1'
     C           *IN99     IFEQ '0'
     C                     Z-ADD##RR      ##SFRC     99    *
     C                     END
     C                     ELSE
      * USER: Extra processing after DBF update
      * Start of S01408
      * 00/Copy member SD0140MEPU - Limit types  *
     C*Limit Types maintenance  Extra Process. DBF Update
     C/COPY WNCPYSRC,SD0140MEPU
      * End of S01408
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Limits - Limit types  *
     C                     EXSR SACRRC
     C           W0RTN     IFNE *BLANK
      * Write error detected
      * Screen errors
     C                     MOVEAWKIND1    *IN,32
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
     C                     ELSE
      * DBF write successful
      * disable entry
     C                     SETON                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete Limits - Limits  *
     C                     EXSR SCDLRC
     C           W0RTN     IFNE *BLANK
      * Delete unsuccessful
      * Screen errors
     C                     MOVEAWKIND1    *IN,32
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * If record altered, reset subfile record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF delete successful
      * Blank out record and protect from entry
     C                     EXSR MAIZ#1
      * disable entry
     C                     SETON                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
      * Reload subfile
     C                     MOVEL'Y'       W0RSF   1
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Limits - Limit types  *
     C                     EXSR SECHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Screen errors
     C                     MOVEAWKIND1    *IN,32
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * Reset subfile record if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF update successful
      * Enable entry
     C                     SETOF                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFNE 'ADD'
     C                     MOVEL'ADD'     W0PMD
     C                     ELSE
     C                     MOVEL'CHG'     W0PMD
     C                     END
     C                     EXSR FBRQRL
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect keys if change mode or updated record
     C                     SETON                     88    *
     C   89N87             SETOF                     88    *
     C                     MOVEL*IN87     *IN79
     C           WUDELA    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise subfile record
      *================================================================
      * Previous values
     C                     MOVEL*BLANK    #1DBRC
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     MOVEL*BLANK    #1E1LP           End/First Limit
     C                     Z-ADD*ZERO     #1PL1P           %/Limit for Fir
     C                     Z-ADD*ZERO     #1E2LP           End/Second Limi
     C                     Z-ADD*ZERO     #1PL2P           %/Limit for Sec
     C                     Z-ADD*ZERO     #1E3LP           End/Third Limit
     C                     Z-ADD*ZERO     #1PL3P           %/Limit for Thi
     C                     Z-ADD*ZERO     #1E4LP           End/Fourth Limi
     C                     Z-ADD*ZERO     #1PL4P           %/Limit for Fou
     C                     Z-ADD*ZERO     #1E5LP           End/Fifth Limit
     C                     Z-ADD*ZERO     #1PL5P           %/Limit for Fif
     C                     Z-ADD*ZERO     #1E6LP           End/Sixth Limit
     C                     Z-ADD*ZERO     #1PL6P           %/Limit for Six
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #1LMTY           Limit Type
     C                     MOVEL*BLANK    #RE1LF           End/first Lmt P
     C                     MOVEL*BLANK    #RPL1F           %/Lmt first per
     C                     MOVEL*BLANK    #RE2LF           End/second Lmt
     C                     MOVEL*BLANK    #RPL2F           %/Lmt second pe
     C                     MOVEL*BLANK    #RE3LF           End/third Lmt P
     C                     MOVEL*BLANK    #RPL3F           %/Lmt third per
     C                     MOVEL*BLANK    #RE4LF           End/fourth Lmt
     C                     MOVEL*BLANK    #RPL4F           %/Lmt fourth pe
     C                     MOVEL*BLANK    #RE5LF           End/fifth Lmt P
     C                     MOVEL*BLANK    #RPL5F           %/Lmt fifth per
     C                     MOVEL*BLANK    #RE6LF           End/sixth Lmt P
     C                     MOVEL*BLANK    #RPL6F           %/Lmt sixth per
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @A2REBU fields to subfile
      *================================================================
     C                     Z-ADDA2LCD     #1LCD            Last Change Dat
     C                     MOVELA2TYLC    #1TYLC           Type of Last Ch
     C                     MOVELA2E1LP    #1E1LP           End/First Limit
     C                     Z-ADDA2PL1P    #1PL1P           %/Limit for Fir
     C                     Z-ADDA2E2LP    #1E2LP           End/Second Limi
     C                     Z-ADDA2PL2P    #1PL2P           %/Limit for Sec
     C                     Z-ADDA2E3LP    #1E3LP           End/Third Limit
     C                     Z-ADDA2PL3P    #1PL3P           %/Limit for Thi
     C                     Z-ADDA2E4LP    #1E4LP           End/Fourth Limi
     C                     Z-ADDA2PL4P    #1PL4P           %/Limit for Fou
     C                     Z-ADDA2E5LP    #1E5LP           End/Fifth Limit
     C                     Z-ADDA2PL5P    #1PL5P           %/Limit for Fif
     C                     Z-ADDA2E6LP    #1E6LP           End/Sixth Limit
     C                     Z-ADDA2PL6P    #1PL6P           %/Limit for Six
     C                     MOVELA2LMTY    #1LMTY           Limit Type
      * Hold current record image for change detection
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #2LMTY           Limit Type
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         SACRRC    BEGSR
      *================================================================
      * Create Limits - Limit types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @A2REBV
     C                     MOVEL#1LMTY    A2LMTY           Limit Type
     C                     Z-ADDWURDNB    A2LCD            Last Change Dat
     C                     MOVEL'I'       A2TYLC           Type of Last Ch
     C                     MOVEL#1E1LP    A2E1LP           End/First Limit
     C                     Z-ADD#1E2LP    A2E2LP           End/Second Limi
     C                     Z-ADD#1E3LP    A2E3LP           End/Third Limit
     C                     Z-ADD#1E4LP    A2E4LP           End/Fourth Limi
     C                     Z-ADD#1E5LP    A2E5LP           End/Fifth Limit
     C                     Z-ADD#1E6LP    A2E6LP           End/Sixth Limit
     C                     Z-ADD#1PL1P    A2PL1P           %/Limit for Fir
     C                     Z-ADD#1PL2P    A2PL2P           %/Limit for Sec
     C                     Z-ADD#1PL3P    A2PL3P           %/Limit for Thi
     C                     Z-ADD#1PL4P    A2PL4P           %/Limit for Fou
     C                     Z-ADD#1PL5P    A2PL5P           %/Limit for Fif
     C                     Z-ADD#1PL6P    A2PL6P           %/Limit for Six
      *
     C           KLCRSA    KLIST
     C                     KFLD           A2LMTY           Limit Type
      * Check for duplicate primary key
     C           KLCRSA    SETLL@A2REBV                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR0064' W0RTN   7
      * Send message 'Limit types            EX'
     C                     MOVEL'USR0064' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SAEXIT
     C                     END
      *
     C                     WRITE@A2REBV                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
     C                     Z-ADD1         WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOIN           No. of Inserts
      * Start of SAR S01117
      * Change code to filename LIMITS - SDLIMTPD
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SBCHRC
      * End of SAR S01117
      * Update TABLETS - Limits  *
     C                     CALL 'TABLETS'              90  Update TABLETS
     C           W0RTN     PARM *BLANK    WQ0179  7        *Return code
     C                     PARM A2LMTY    WQ0180  3        Limit Type
     C                     PARM A2E1LP    WQ0181  3        End/First Limit
     C                     PARM A2E2LP    WQ0182  30       End/Second Limi
     C                     PARM A2E3LP    WQ0183  30       End/Third Limit
     C                     PARM A2E4LP    WQ0184  30       End/Fourth Limi
     C                     PARM A2E5LP    WQ0185  30       End/Fifth Limit
     C                     PARM A2E6LP    WQ0186  30       End/Sixth Limit
     C                     PARM A2PL1P    WQ0187  30       %/Limit for Fir
     C                     PARM A2PL2P    WQ0188  30       %/Limit for Sec
     C                     PARM A2PL3P    WQ0189  30       %/Limit for Thi
     C                     PARM A2PL4P    WQ0190  30       %/Limit for Fou
     C                     PARM A2PL5P    WQ0191  30       %/Limit for Fif
     C                     PARM A2PL6P    WQ0192  30       %/Limit for Six
     C                     PARM A2TYLC    WQ0193  1        Type of Last Ch
     C                     PARM WURDNB    WQ0194  50       Run day number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'TABLETS' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
      * Send message 'Unable to update'
     C                     MOVEL'USR0015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDLIMTPD'AHFLNM           Filename
      *
     C           KLCHSB    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSB    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SBEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YARDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCDLRC    BEGSR
      *================================================================
      * Delete Limits - Limits  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @A2REBV
     C                     MOVEL#1LMTY    A2LMTY           Limit Type
      *
     C           KLDLSC    KLIST
     C                     KFLD           A2LMTY           Limit Type
     C           KLDLSC    CHAIN@A2REBV              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C           KLDLSC    SETLL@A2REBV              9091  *
     C                     GOTO SCEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     DELET@A2REBV                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF delete successful
      * USER: Processing after Data update
      * Start of change 122096
      * WUDELR Data Structure - SD Deleted Records File  *
     C                     MOVEL@1DBRC    WUDELR
      * Write Deleted Record - SD Deleted Records File  *
     C                     CLEARPARC
     C                     MOVEL'SDLIMTPD'PAFNME           File name
     C                     MOVEL#1LMTY    PALKEY           Long Key
     C                     MOVELWUDR01    PADR01           Deleted Data Re
     C                     MOVELWUDR02    PADR02           Deleted Data Re
     C                     MOVELWUDR03    PADR03           Deleted Data Re
     C                     MOVELWUDR04    PADR04           Deleted Data Re
     C                     MOVELWUDR05    PADR05           Deleted Data Re
     C                     MOVELWUDR06    PADR06           Deleted Data Re
     C                     MOVELWUDR07    PADR07           Deleted Data Re
     C                     MOVELWUDR08    PADR08           Deleted Data Re
     C                     MOVELWUDR09    PADR09           Deleted Data Re
     C                     MOVELWUDR00    PADR00           Deleted Data Re
     C                     MOVELWUDR11    PADR11           Deleted Data Re
     C                     MOVELWUDR12    PADR12           Deleted Data Re
     C                     Z-ADDWURDNB    PALCD            Last Change Dat
     C                     MOVEL'D'       PATYLC           Type of Last Ch
      *
     C                     CALL 'SD0520X'              90  Write Deleted R
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             RCD: SD Deleted
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0520X' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
      * End of change 122096
     C                     Z-ADD-1        WUNORC           No. of Records
     C                     Z-ADD1         WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Start of SAR S01117
      * Change code to filename LIMITS - SDLIMTPD
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SDCHRC
      * End of SAR S01117
     C                     MOVEL'D'       WUTYLC           Type of Last Ch
      * Update TABLETS - Limits  *
     C                     CALL 'TABLETS'              90  Update TABLETS
     C           W0RTN     PARM *BLANK    WQ0195  7        *Return code
     C                     PARM A2LMTY    WQ0196  3        Limit Type
     C                     PARM A2E1LP    WQ0197  3        End/First Limit
     C                     PARM A2E2LP    WQ0198  30       End/Second Limi
     C                     PARM A2E3LP    WQ0199  30       End/Third Limit
     C                     PARM A2E4LP    WQ0200  30       End/Fourth Limi
     C                     PARM A2E5LP    WQ0201  30       End/Fifth Limit
     C                     PARM A2E6LP    WQ0202  30       End/Sixth Limit
     C                     PARM A2PL1P    WQ0203  30       %/Limit for Fir
     C                     PARM A2PL2P    WQ0204  30       %/Limit for Sec
     C                     PARM A2PL3P    WQ0205  30       %/Limit for Thi
     C                     PARM A2PL4P    WQ0206  30       %/Limit for Fou
     C                     PARM A2PL5P    WQ0207  30       %/Limit for Fif
     C                     PARM A2PL6P    WQ0208  30       %/Limit for Six
     C                     PARM WUTYLC    WQ0209  1        Type of Last Ch
     C                     PARM WURDNB    WQ0210  50       Run day number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'TABLETS' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
      * Send message 'Unable to update'
     C                     MOVEL'USR0015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDLIMTPD'AHFLNM           Filename
      *
     C           KLCHSD    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSD    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SDEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECHRC    BEGSR
      *================================================================
      * Change Limits - Limit types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YCRDC   1
      *
      * Move key fields to @A2REBV
     C                     MOVEL#1LMTY    A2LMTY           Limit Type
      *
     C           KLCHSE    KLIST
     C                     KFLD           A2LMTY           Limit Type
     C           KLCHSE    CHAIN@A2REBV              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SEEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDLIMTL1               91  *
     C                     GOTO SEEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YCRDCS
      * Move non-key fields to @A2REBV
     C                     Z-ADDWURDNB    A2LCD            Last Change Dat
     C                     MOVEL'A'       A2TYLC           Type of Last Ch
     C                     MOVEL#1E1LP    A2E1LP           End/First Limit
     C                     Z-ADD#1E2LP    A2E2LP           End/Second Limi
     C                     Z-ADD#1E3LP    A2E3LP           End/Third Limit
     C                     Z-ADD#1E4LP    A2E4LP           End/Fourth Limi
     C                     Z-ADD#1E5LP    A2E5LP           End/Fifth Limit
     C                     Z-ADD#1E6LP    A2E6LP           End/Sixth Limit
     C                     Z-ADD#1PL1P    A2PL1P           %/Limit for Fir
     C                     Z-ADD#1PL2P    A2PL2P           %/Limit for Sec
     C                     Z-ADD#1PL3P    A2PL3P           %/Limit for Thi
     C                     Z-ADD#1PL4P    A2PL4P           %/Limit for Fou
     C                     Z-ADD#1PL5P    A2PL5P           %/Limit for Fif
     C                     Z-ADD#1PL6P    A2PL6P           %/Limit for Six
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@A2REBV                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDLIMTL1               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOAM           No. of Amends
      * Start of SAR S01117
      * Change code to filename LIMITS - SDLIMTPD
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SFCHRC
      * End of SAR S01117
      * Update TABLETS - Limits  *
     C                     CALL 'TABLETS'              90  Update TABLETS
     C           W0RTN     PARM *BLANK    WQ0211  7        *Return code
     C                     PARM A2LMTY    WQ0212  3        Limit Type
     C                     PARM A2E1LP    WQ0213  3        End/First Limit
     C                     PARM A2E2LP    WQ0214  30       End/Second Limi
     C                     PARM A2E3LP    WQ0215  30       End/Third Limit
     C                     PARM A2E4LP    WQ0216  30       End/Fourth Limi
     C                     PARM A2E5LP    WQ0217  30       End/Fifth Limit
     C                     PARM A2E6LP    WQ0218  30       End/Sixth Limit
     C                     PARM A2PL1P    WQ0219  30       %/Limit for Fir
     C                     PARM A2PL2P    WQ0220  30       %/Limit for Sec
     C                     PARM A2PL3P    WQ0221  30       %/Limit for Thi
     C                     PARM A2PL4P    WQ0222  30       %/Limit for Fou
     C                     PARM A2PL5P    WQ0223  30       %/Limit for Fif
     C                     PARM A2PL6P    WQ0224  30       %/Limit for Six
     C                     PARM A2TYLC    WQ0225  1        Type of Last Ch
     C                     PARM WURDNB    WQ0226  50       Run day number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'TABLETS' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
      * Send message 'Unable to update'
     C                     MOVEL'USR0015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YDRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDLIMTPD'AHFLNM           Filename
      *
     C           KLCHSF    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSF    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SFEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YDRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YDRDCS
     C                     MOVE 'Y'       YDRDC
     C                     END
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * %/Limit for First period
      *================================================================
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELA2PL1P    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0008  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0009 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0010  10       ZALIGN No Of De
     C                     PARM 3         WQ0011  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0012 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0013 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0014  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * zalign % of 1st period - Limit types  *
     C*
     C*
     C                     MOVE WUZASF    #RPL1F
     C*
     C*
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
      * USER: Exit program processing
      * Start of S01408
      * 00/Copy member SD0140MEPP - Limit types  *
     C*Limit Types maintenance  Exit Program Processing
     C/COPY WNCPYSRC,SD0140MEPP
      * End of S01408
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Deletion Allowed
     C                     MOVEL*BLANK    WUDELA  1
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUTQKF  1
      * Define work field If value in key field
     C                     MOVEL*BLANK    WUIVKF  1
      * Define work field Data Structure
     C                     MOVEL*BLANK    WUDSTR  3
      * Define work field Position One
     C                     MOVEL*BLANK    WUPOS1  1
      * Define work field Position Two
     C                     MOVEL*BLANK    WUPOS2  1
      * Define work field Position three
     C                     MOVEL*BLANK    WUPOS3  1
      * Define work field Limit workfield
     C                     Z-ADD*ZERO     WULMWF  30
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field Deleted Data Record Pt1
     C                     MOVEL*BLANK    WUDR01250
      * Define work field Deleted Data Record Pt2
     C                     MOVEL*BLANK    WUDR02250
      * Define work field Deleted Data Record Pt3
     C                     MOVEL*BLANK    WUDR03250
      * Define work field Deleted Data Record Pt4
     C                     MOVEL*BLANK    WUDR04250
      * Define work field Deleted Data Record Pt5
     C                     MOVEL*BLANK    WUDR05250
      * Define work field Deleted Data Record Pt6
     C                     MOVEL*BLANK    WUDR06250
      * Define work field Deleted Data Record Pt7
     C                     MOVEL*BLANK    WUDR07250
      * Define work field Deleted Data Record Pt8
     C                     MOVEL*BLANK    WUDR08250
      * Define work field Deleted Data Record Pt9
     C                     MOVEL*BLANK    WUDR09250
      * Define work field Deleted Data Record Pt10
     C                     MOVEL*BLANK    WUDR00250
      * Define work field Deleted Data Record Pt11
     C                     MOVEL*BLANK    WUDR11250
      * Define work field Deleted Data Record Pt12
     C                     MOVEL*BLANK    WUDR12250
      * Define work field Type of Last Change
     C                     MOVEL*BLANK    WUTYLC  1
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD0140M#
     C                     OPEN SDLIMTL0
     C                     OPEN SDLIMTL1
     C                     OPEN SDFCTLL0
     C                     MOVEL'N'       W0PMT   1
      *
     C                     Z-ADD09        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Start of S01459
      * Remove the last amend box and creation parameters functions
      * SD0140M precompiler - Limit types  *
      * End of S01459
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Copyright Statement 1988 - Standard Functions  * copyright
      * Start of Fix S01117
      * define data structure - Limit types  *
      * End of Fix S01117
      * Start of S01408
      * 00/Copy member SD0140MFPG - Limit types  *
      * 00/Copy member SD0140MEPG - Limit types  *
      * 00/Copy member SD0140MIPG - Limit types  *
      * 00/Copy member SD0140MCPG - Limit types  *
     C*Limit Types maintenance  Initialise Program C-Spec
     C/COPY WNCPYSRC,SD0140MCPG
      * 00/Copy member SD0140MOPG - Limit types  *
      * End of S01408
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD0140MPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0140MPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0140MPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*Limit Types maintenance  Initialise Program O-Spec
     O/COPY WNCPYSRC,SD0140MOPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2001
