     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Select limits')
     F*****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0141S - Midas SD Select Limits                             *
      *                                                               *
      *  Function:  This sub-file program allows the user to select   *
      *             from a list of Limits                             *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.03 -----------------------------------------------*
      *  Prev Amend No. CSD003             Date 01Jul99               *
      *                 S01459             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 LN0168             DATE 26JUN90               *
      *                                                               *
      *-------------------------------------------------------------- *
      *                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  S01459 - Addition of Midas Headerbox.                        *
      *  LN0168 - SET SCAN LIMIT TO 99999.                            *
      *                                                               *
      *****************************************************************
     FSD0141S#CF  E                    WORKSTN                        UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Select Limits
      *
     FSDLIMTL0IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Limit types retrieval index
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Limit types
      * B : MAP Limit Type
     I                                        1   3 P1LMTY
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1LMTY    PARM P1LMTY    WP0001  3        Limit Type
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL                     DO
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'                        DOW
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      *................................................................
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           A2LMTY           Limit Type
      * Setup key
     C                     MOVEL#2LMTY    A2LMTY           Limit Type
     C           KPOS      SETLL@A2REBU
     C                     READ @A2REBU                8782*
      * Save previous selector values
     C           *LIKE     DEFN #2LCD     WZLCD
     C                     MOVEL#2LCD     WZLCD            Last Change Dat
     C           *LIKE     DEFN #2TYLC    WZTYLC
     C                     MOVEL#2TYLC    WZTYLC           Type of Last Ch
     C           *LIKE     DEFN #2E1LP    WZE1LP
     C                     MOVEL#2E1LP    WZE1LP           End/First Limit
     C           *LIKE     DEFN #2E2LP    WZE2LP
     C                     MOVEL#2E2LP    WZE2LP           End/Second Limi
     C           *LIKE     DEFN #2E3LP    WZE3LP
     C                     MOVEL#2E3LP    WZE3LP           End/Third Limit
     C           *LIKE     DEFN #2E4LP    WZE4LP
     C                     MOVEL#2E4LP    WZE4LP           End/Fourth Limi
     C           *LIKE     DEFN #2E5LP    WZE5LP
     C                     MOVEL#2E5LP    WZE5LP           End/Fifth Limit
     C           *LIKE     DEFN #2E6LP    WZE6LP
     C                     MOVEL#2E6LP    WZE6LP           End/Sixth Limit
     C           *LIKE     DEFN #2PL1P    WZPL1P
     C                     MOVEL#2PL1P    WZPL1P           %/Limit for Fir
     C           *LIKE     DEFN #2PL2P    WZPL2P
     C                     MOVEL#2PL2P    WZPL2P           %/Limit for Sec
     C           *LIKE     DEFN #2PL3P    WZPL3P
     C                     MOVEL#2PL3P    WZPL3P           %/Limit for Thi
     C           *LIKE     DEFN #2PL4P    WZPL4P
     C                     MOVEL#2PL4P    WZPL4P           %/Limit for Fou
     C           *LIKE     DEFN #2PL5P    WZPL5P
     C                     MOVEL#2PL5P    WZPL5P           %/Limit for Fif
     C           *LIKE     DEFN #2PL6P    WZPL6P
     C                     MOVEL#2PL6P    WZPL6P           %/Limit for Six
     C           *LIKE     DEFN #2LMTY    WZLMTY
     C                     MOVEL#2LMTY    WZLMTY           Limit Type
      * Load subfile page
     C                     Z-ADD*ZERO     ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@A2REBU                  90*
     C  N82                READ @A2REBU                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVE *ALL'0'   WKINDS  1
     C                     MOVEAWKINDS    *IN,32
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD*ZERO     ##RRRD  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full,
      * or scan limit reached,
      * or end of file reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2LCD     IFNE *ZERO                      Last Change Dat
     C           A2LCD     CABNE#2LCD     CD020            Last Change Dat
     C                     END
     C           #2TYLC    IFNE *BLANK                     Type of Last Ch
     C           A2TYLC    CABNE#2TYLC    CD020            Type of Last Ch
     C                     END
     C           #2E1LP    IFNE *BLANK                     End/First Limit
     C           A2E1LP    CABNE#2E1LP    CD020            End/First Limit
     C                     END
     C           #2E2LP    IFNE *ZERO                      End/Second Limi
     C           A2E2LP    CABNE#2E2LP    CD020            End/Second Limi
     C                     END
     C           #2E3LP    IFNE *ZERO                      End/Third Limit
     C           A2E3LP    CABNE#2E3LP    CD020            End/Third Limit
     C                     END
     C           #2E4LP    IFNE *ZERO                      End/Fourth Limi
     C           A2E4LP    CABNE#2E4LP    CD020            End/Fourth Limi
     C                     END
     C           #2E5LP    IFNE *ZERO                      End/Fifth Limit
     C           A2E5LP    CABNE#2E5LP    CD020            End/Fifth Limit
     C                     END
     C           #2E6LP    IFNE *ZERO                      End/Sixth Limit
     C           A2E6LP    CABNE#2E6LP    CD020            End/Sixth Limit
     C                     END
     C           #2PL1P    IFNE *ZERO                      %/Limit for Fir
     C           A2PL1P    CABNE#2PL1P    CD020            %/Limit for Fir
     C                     END
     C           #2PL2P    IFNE *ZERO                      %/Limit for Sec
     C           A2PL2P    CABNE#2PL2P    CD020            %/Limit for Sec
     C                     END
     C           #2PL3P    IFNE *ZERO                      %/Limit for Thi
     C           A2PL3P    CABNE#2PL3P    CD020            %/Limit for Thi
     C                     END
     C           #2PL4P    IFNE *ZERO                      %/Limit for Fou
     C           A2PL4P    CABNE#2PL4P    CD020            %/Limit for Fou
     C                     END
     C           #2PL5P    IFNE *ZERO                      %/Limit for Fif
     C           A2PL5P    CABNE#2PL5P    CD020            %/Limit for Fif
     C                     END
     C           #2PL6P    IFNE *ZERO                      %/Limit for Six
     C           A2PL6P    CABNE#2PL6P    CD020            %/Limit for Six
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
      *
     C           CD020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
      * Read next record
     C                     READ @A2REBU                8782*
     C                     END                             WOD
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      *
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD*ZERO     ##RROK  50
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       9283*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
      * If error, exit subroutine:
     C           *IN99     CABEQ'1'       DAEXIT
     C                     END
      * Change of position specified
     C           WZLCD     CASNE#2LCD     FBRQRL           Last Change Dat
     C           WZTYLC    CASNE#2TYLC    FBRQRL           Type of Last Ch
     C           WZE1LP    CASNE#2E1LP    FBRQRL           End/First Limit
     C           WZE2LP    CASNE#2E2LP    FBRQRL           End/Second Limi
     C           WZE3LP    CASNE#2E3LP    FBRQRL           End/Third Limit
     C           WZE4LP    CASNE#2E4LP    FBRQRL           End/Fourth Limi
     C           WZE5LP    CASNE#2E5LP    FBRQRL           End/Fifth Limit
     C           WZE6LP    CASNE#2E6LP    FBRQRL           End/Sixth Limit
     C           WZPL1P    CASNE#2PL1P    FBRQRL           %/Limit for Fir
     C           WZPL2P    CASNE#2PL2P    FBRQRL           %/Limit for Sec
     C           WZPL3P    CASNE#2PL3P    FBRQRL           %/Limit for Thi
     C           WZPL4P    CASNE#2PL4P    FBRQRL           %/Limit for Fou
     C           WZPL5P    CASNE#2PL5P    FBRQRL           %/Limit for Fif
     C           WZPL6P    CASNE#2PL6P    FBRQRL           %/Limit for Six
     C           WZLMTY    CASNE#2LMTY    FBRQRL           Limit Type
     C                     END
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCSFRC
     C                     MOVEL*BLANK    #1SEL
     C                     UPDAT#SFLRCD
      * Read next record
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCSFRC    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKINDS    *IN,32
     C                     SETOF                     84    *
      * Check selection option
     C           #1SEL     CASEQ'1'       DESLRC
     C                     END
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DESLRC    BEGSR
      *================================================================
      * Select record & return to calling program
      *================================================================
      * Move record values to parameters
     C                     MOVEL#1LMTY    P1LMTY           Limit Type
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         DEEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @A2REBU fields to #SFLRCD
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDA2LCD     #1LCD            Last Change Dat
     C                     MOVELA2TYLC    #1TYLC           Type of Last Ch
     C                     MOVELA2LMTY    #1LMTY           Limit Type
     C                     MOVELA2E1LP    #1E1LP           End/First Limit
     C                     Z-ADDA2PL1P    #1PL1P           %/Limit for Fir
     C                     Z-ADDA2E2LP    #1E2LP           End/Second Limi
     C                     Z-ADDA2PL2P    #1PL2P           %/Limit for Sec
     C                     Z-ADDA2E3LP    #1E3LP           End/Third Limit
     C                     Z-ADDA2PL3P    #1PL3P           %/Limit for Thi
     C                     Z-ADDA2E4LP    #1E4LP           End/Fourth Limi
     C                     Z-ADDA2PL4P    #1PL4P           %/Limit for Fou
     C                     Z-ADDA2E5LP    #1E5LP           End/Fifth Limit
     C                     Z-ADDA2PL5P    #1PL5P           %/Limit for Fif
     C                     Z-ADDA2E6LP    #1E6LP           End/Sixth Limit
     C                     Z-ADDA2PL6P    #1PL6P           %/Limit for Six
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2LCD            Last Change Dat
     C                     MOVEL*BLANK    #2TYLC           Type of Last Ch
     C                     MOVEL*BLANK    #2E1LP           End/First Limit
     C                     Z-ADD*ZERO     #2E2LP           End/Second Limi
     C                     Z-ADD*ZERO     #2E3LP           End/Third Limit
     C                     Z-ADD*ZERO     #2E4LP           End/Fourth Limi
     C                     Z-ADD*ZERO     #2E5LP           End/Fifth Limit
     C                     Z-ADD*ZERO     #2E6LP           End/Sixth Limit
     C                     Z-ADD*ZERO     #2PL1P           %/Limit for Fir
     C                     Z-ADD*ZERO     #2PL2P           %/Limit for Sec
     C                     Z-ADD*ZERO     #2PL3P           %/Limit for Thi
     C                     Z-ADD*ZERO     #2PL4P           %/Limit for Fou
     C                     Z-ADD*ZERO     #2PL5P           %/Limit for Fif
     C                     Z-ADD*ZERO     #2PL6P           %/Limit for Six
     C                     MOVELP1LMTY    #2LMTY           Limit Type
      * Drop ? from positioning key fields
     C                     MOVEL#2LMTY    W0X1    1
     C           W0X1      IFEQ '?'
     C           *LIKE     DEFN #2LMTY    W0LMTY- 1
     C                     MOVE #2LMTY    W0LMTY
     C                     MOVELW0LMTY    #2LMTY           Limit Type
     C                     MOVE ' '       #2LMTY
     C                     END
      *
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * Send message '*No value selected'
     C                     MOVEL'Y2U0016' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0016' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C                     OPEN SD0141S#
     C                     OPEN SDLIMTL0
     C                     MOVEL'N'       W0PMT   1
      * Program mode
     C                     MOVEL'SEL'     W0PMD   3
      *
     C                     Z-ADD14        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD0141S PRECOMPILER - Limit types  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Copyright Statement 1988 - Standard Functions  * copyright
      * Start of Fix LN0168
     C                     Z-ADD99999     W0SLM            *Scan limit
      * End of Fix LN0168
      * Clear subfile control fields
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD0141SPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0141SPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0141SPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2001
