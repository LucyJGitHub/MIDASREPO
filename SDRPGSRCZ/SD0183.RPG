     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Lux Country Codes 1')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0183 - LUX Country Codes                                   *
      *                                                               *
      *  Called By: SD0181E - Country Code  Details                   *
      *             SD0181R - Country Code  Maintenance               *
      *                                                               *
      *  (c) Finastra International Limited 2005                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. BUG11806           Date 30Jul06               *
      *                 CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  BUG11806 - Extension tables processing.                      *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
      *   (Main processing)
      *   SRINS
      *   SRAMD
      *   SRDEL
      *   SRENQ
      *   SRSMSG
      *   SRCMSG
      *   SRRTRN
      *   SRSCRN
      *   SRREC
      *   SRUPD
      *   SRWRT
      *   SRALOC
      *   SRCOMP
      *
      *   The following routines can be changed :
      *   =====================================
      *
      *   SRINIT for specific initialization
      *   SRDBER to handle database errors
      *   SRVAL  to initialize error indicators and control validation
      *          of more/less fields
      *   SRINZ  to setup fields with defaults
      *   SRFTOS to move additional fields to the screen fields
      *   SRSTOF to move additional fields to the file fields
      *
      *
      * - Changes to the existing code should be reduced to a minimum,
      *   using separate subroutines in order to preserve the program
      *   structure as defined in the skeleton, thus reducing
      *   maintenance efforts.
      *
      * - Moreover, no functionality should be added unless specifically
      *   required. In this case, it should be very well documented
      *   in the header box.
      *
      * - The data structure used to save the before image of the
      *   record is called SVRCD.
      *   Only the length should be changed.
      *
      * - The data structure used to access the current record
      *   via the DS name is called NWRCD.
      *   Only the file name should be changed.
      *
      * - The files must have their record formats renamed to:
      *      RTVIDX for the retrieve index
      *      UPDIDX for the update index
      *      SCREEN for the screen format
      *   Any file/screen access will be done through the renamed format
      *   so that these routines remain unchanged.
      *
      *----------------------------------------------------------------
      *
      *   Naming conventions
      *   ==================
      *
      * - Work fields used in the program should start with WW or WU
      *   i.e. WWPLEX or WUPLEX
      *
      * - Screen fields should start with #0 (for 1st screen format),
      *   i.e. #0PLEX
      *
      * - Key fields should start with K ,i.e. KCTRY
      *   (Also for fields used in KLIST's)
      *
      * - Subroutines should start with SR, i.e. SRVAL for validation,
      *   SRINIT for initial routine , etc...
      *
      *----------------------------------------------------------------
      *  Use of indicators:
      *
      *  (Screen field error indicators should start with 20 in
      *   ascending order)
      *
      *  *IN15  -  On=Delete/Enquiry, Protect field.
      *            Off=Insert/Amend, Underline field.
      *  *IN24  -  Error on field #0ICTR
      *  *IN25  -  Error on field #0EMUM
      *  *IN60  -  Extension record not found via update index
      *  *IN61  -  Unable to allocate record via update index
      *  *IN68  -  Error occured during DBF update
      *  *IN69  -  SFLEND control
      *  *IN75  -  General error indicator. Used to condition output
      *            of error messages and redisplay screen.
      *  *IN81  -  Call to DBERRCTL ended in error
      *  *IN82  -  Plexus capital currency in error
      *  *IN89  -  Extension record not found via retrieval index
      *
      *  *INKJ  -  F10 pressed, enable delete
      *  *INKL  -  F12 pressed, exit
      *  *INLR  -  End processing
      *
      *  *INU7  -  :    Data-base
      *  *INU8  -  :  error control
      *
      *----------------------------------------------------------------
     FSDCTX2L0IF  E           K        DISK
     F            SDCTRYF6                          KRENAMERTVIDX
      * ER Extended Customer Loans     Retrieval index     Prefix WF.
      *
     FSDCTX2PDUF  E           K        DISK         KCOMIT       A    UC
     F            SDCTRYF6                          KRENAMEUPDIDX
      * ER Extended Cusromer Loans     Update index        Prefix WF.
     FSD0183DFCF  E                    WORKSTN
     F            SD0183F6                          KRENAMESCREEN
      *                                Display file        Prefix #0.
      /EJECT
     E                    CPY@    1   1 80
      *----------------------------------------------------------------
     IDLDA        DS                            256
      * Data structure for data-base processing
     I                                      132 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      /EJECT
      *----------------------------------------------------------------
     IDSFDY     E DSDSFDY
     I** FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE
     I@MMOD     E DSSDMMODPD
     I** DUMMY RECORD FORMATS FOR ACCESS TO MIDAS MODULES DETAILS
     INWRCD     E DSSDCTX2PD
     ISDBANK    E DSSDBANKPD
      ** External DS for Bank Details
      /EJECT
      *----------------------------------------------------------------
     ISVRCD       DS                              6
      *
      * Stored master file fields
      *
      /EJECT
      *----------------------------------------------------------------
      *
      ** Get the data structure passed from calling program
      *
      /COPY QWINDSRC,SD0180GDTA
     IDATALX      DS                           1024
     I                                        1   2 W1CNCD
     I                                        3   4 #1ISOC
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      *----------------------------------------------------------------
      * Main processing
      *----------------------------------------------------------------
      *
      *
      ** Set up copyright parameter
      *
     C                     MOVEACPY@      CPY2@  80
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Execute specific routine depending on action
      *
     C           ACTION    CASEQ'I'       SRINS
     C           ACTION    CASEQ'D'       SRDEL
     C                     ENDCS
      *
     C           ACTION    CASEQ'A'       SRAMD
     C           ACTION    CASEQ'E'       SRENQ
     C                     ENDCS
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *----------------------------------------------------------------
      * SRINS - Routine to handle 'INSERT' action
      *----------------------------------------------------------------
      *
     C           SRINS     BEGSR
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record found,
      *
     C           *IN89     IFEQ '0'
      *
      ** In case of 'Insert over Deleted Record'
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
     C                     ENDIF
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Display and handle screen until no more errors or F12
      *
     C           *IN75     DOUEQ'0'
     C           *INKL     OREQ '1'
      *
     C                     EXSR SRSCRN
      *
      ** Bypass any further validation if previous DB error or F12
      *
     C           *IN69     IFEQ '0'
     C           *INKL     ANDEQ'0'
      *
      ** Clear messages for redisplay
      *
     C                     EXSR SRCMSG
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** No errors
      *
     C           *IN75     IFEQ '0'
      *
      ** In case of 'Insert over Deleted Record'
      *
     C           *IN89     IFEQ '0'
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ELSE
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write new record
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRAMD - Routine to handle 'AMEND' action
      *----------------------------------------------------------------
      *
     C           SRAMD     BEGSR
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     MOVE '1'       *IN69
     C                     MOVEL'ER99920' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Protect fields for display
      *
     C                     MOVE '1'       *IN15
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
      ** Execute DB error routine
      *
     C                     MOVEL'SDCTX2L0'WWBFIL
     C                     Z-ADD2         WWBASE
     C                     MOVELKCTRY     WWBKEY
     C                     EXSR SRDBER
      *
     C                     ELSE
      *
      ** Record found,
      ** set file fields to screen fields and save before image
      *
     C                     EXSR SRFTOS
     C                     EXSR SRSAVE
      *
      ** Display and handle screen until record can be allocated and
      ** record on file and no errors left or F12 pressed
      *
     C           *IN61     DOUEQ'0'
     C           *IN60     ANDEQ'0'
     C           *IN75     ANDEQ'0'
     C           *INKL     OREQ '1'
      *
     C                     EXSR SRSCRN
      *
      ** Bypass any further validation if previous DB error or F12
      *
     C           *IN69     IFEQ '0'
     C           *INKL     ANDEQ'0'
      *
      ** Clear messages for redisplay
      *
     C                     EXSR SRCMSG
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      * No errors
     C           *IN75     IFEQ '0'
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRDEL - Routine to handle 'DELETE' action
      *----------------------------------------------------------------
      *
     C           SRDEL     BEGSR
      *
      ** Set indicators on for 'DELETE' mode to protect fields
      *
     C                     MOVE '1'       *IN15
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C**********           MOVE '1'       *IN69                                             BUG11806
     C**********           MOVEL'ER99916' ZAMSID                                            BUG11806
     C**********           EXSR SRSMSG                                                      BUG11806
      *****************************************************************                     BUG11806
      ***Execute*DB*error*routine**************************************                     BUG11806
      *****************************************************************                     BUG11806
     C**********           MOVEL'SDCTX2L0'WWBFIL                                            BUG11806
     C**********           Z-ADD3         WWBASE                                            BUG11806
     C**********           MOVELKCTRY     WWBKEY                                            BUG11806
     C**********           EXSR SRDBER                                                      BUG11806
      *
     C                     ELSE
      *
      ** Record found,
      ** save before image
      *
     C                     EXSR SRSAVE
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *                                                                                     BUG11806
      ** Images match, delete record                                                        BUG11806
      *                                                                                     BUG11806
     C                     EXSR SRDELR                                                      BUG11806
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRENQ - Routine to handle 'ENQUIRY' action
      *----------------------------------------------------------------
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE '1'       *IN15
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     MOVE '1'       *IN69
     C                     MOVEL'ER99917' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Display screen
      *
     C                     EXSR SRSCRN
      *
      ** Execute DB error routine
      *
     C                     MOVEL'SDCTX2L0'WWBFIL
     C                     Z-ADD4         WWBASE
     C                     MOVELKCTRY     WWBKEY
     C                     EXSR SRDBER
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSMSG - Routine to send messages to message subfile.
      *----------------------------------------------------------------
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     ENDIF
     C                     CALL 'SNDERMSG'
      *
      ** Program queue
      *
     C                     PARM ##PGM     ZAPGM  10
      *
      ** Rel queue
      *
     C                     PARM           ZAPGRL  5
      *
      ** Message Id
      *
     C                     PARM           ZAMSID  7
      *
      ** Message file
      *
     C                     PARM           ZAMSGF 10
      *
      ** Message data
      *
     C                     PARM           ZAMSDA132
      *
      ** Message type
      *
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRCMSG - Routine to clear program's message queue.
      *----------------------------------------------------------------
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRREC - Routine to access file via retrieve index
      *----------------------------------------------------------------
      *
     C           SRREC     BEGSR
      *
     C           KCTRY     CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRALOC - Routine to access record via update index
      *----------------------------------------------------------------
      *
     C           SRALOC    BEGSR
      *
     C           KCTRY     CHAINUPDIDX               6061
      *
      ** If record not on file, setup message 'Record deleted'
      *
     C           *IN60     IFEQ '1'
     C                     MOVEL'ER99918' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRUPD - Routine to update file.
      *----------------------------------------------------------------
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRWRT - Routine to write a new record to the file.
      *----------------------------------------------------------------
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
      *
     C                     ENDSR
      /EJECT                                                                                BUG11806
      *----------------------------------------------------------------                     BUG11806
      * SRDELR - Routine to delete a record                                                 BUG11806
      *----------------------------------------------------------------                     BUG11806
      *                                                                                     BUG11806
     C           SRDELR    BEGSR                                                            BUG11806
      *                                                                                     BUG11806
     C                     DELETUPDIDX                 68                                   BUG11806
      *                                                                                     BUG11806
     C                     ENDSR                                                            BUG11806
      /EJECT
      *----------------------------------------------------------------
      * SRCOMP - Routine to compare before/after image of records
      *----------------------------------------------------------------
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'ER99919' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KCTRY     SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE '1'       *IN60
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSAVE - Routine to save before image of record via DS
      *----------------------------------------------------------------
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRRTRN - Routine to set up return code for calling program
      *----------------------------------------------------------------
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN69     IFEQ '1'
     C                     MOVE 'Y2U0004' W0RTN
     C                     ELSE
      *
      ** Database / Window error
      *
     C           *IN68     IFEQ '1'
     C                     MOVE 'USR0563' W0RTN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ '1'
     C                     MOVE 'USR0790' W0RTN
     C                     ELSE
      *
      ** No errors
      *
     C                     MOVE *BLANKS   W0RTN
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     CLOSESDCTX2PD               99
      *
      ** Exit program
      *
     C                     MOVE '1'       *INLR
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRDBER - Routine to handle database errors
      *----------------------------------------------------------------
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN LDA       DLDA
     C           *LOCK     IN   DLDA
     C                     MOVEL'MM0026W4'DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  DLDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSCRN - Routine to handle screen and validation
      *----------------------------------------------------------------
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * The routines that can be changed start here...
      *----------------------------------------------------------------
      * SRVAL - Routine to control validation of each field.
      *----------------------------------------------------------------
      *
     C           SRVAL     BEGSR
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00'      *IN,24
      *
     C                     EXSR SRICTR
     C                     EXSR SREMUM
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRICTR - Routine to validate WFICTR
      *----------------------------------------------------------------
      *
     C           SRICTR    BEGSR
      *
      ** Validate field
      *
     C           #0ICTR    IFEQ *BLANKS
     C                     MOVE 'Y'       #0ICTR
     C                     ENDIF
      *
     C           #0ICTR    IFNE 'Y'
     C           #0ICTR    ANDNE'N'
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN24
     C                     MOVEL'ER00002' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SREMUM - Routine to validate WFEMUM
      *----------------------------------------------------------------
      *
     C           SREMUM    BEGSR
      *
      ** Validate field
      *
     C           #0EMUM    IFEQ *BLANKS
     C                     MOVE 'N'       #0EMUM
     C                     ENDIF
      *
     C           #0EMUM    IFNE 'Y'
     C           #0EMUM    ANDNE'N'
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN25
     C                     MOVEL'ER00002' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRINZ - Routine to initialize screen fields with defaults
      *----------------------------------------------------------------
      *
     C           SRINZ     BEGSR
      *
     C                     MOVE *BLANKS   #0ICTR
     C                     MOVE 'N'       #0EMUM
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRFTOS - Routine to move file fields to screen fields
      *----------------------------------------------------------------
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVE WFICTR    #0ICTR
     C                     MOVE WFEMUM    #0EMUM
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRSTOF - Routine to move screen fields to file fields
      *----------------------------------------------------------------
      *
     C           SRSTOF    BEGSR
      *
      ** Move key field to file field
      *
     C                     MOVE KCTRY     WFCTRY
     C                     MOVE #1ISOC    WFISOC
      *
      ** Move data fields to file fields
      *
     C                     MOVE #0ICTR    WFICTR
     C                     MOVE #0EMUM    WFEMUM
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SRINIT - Routine to handle initial processing
      *----------------------------------------------------------------
      *
     C           SRINIT    BEGSR
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           RTCODE  1
     C                     PARM           ACTION  1
     C                     PARM           DATALX
     C                     PARM           W0RTN   7
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN WFCTRY    KCTRY
     C                     MOVE W1CNCD    #1CNCD
     C                     MOVE #1CNCD    KCTRY
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Initialise error indicators
      *
     C                     MOVEA'00'      *IN,24
     C                     MOVE '0'       *IN75
      *
      ** Access Bank details via access program
      ** (database error handling done in access program)
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
      ** CALL ACCESS PROGRAM FOR MIDAS MODULES DETAILS
      *
     C                     CALL 'AOMMODR0'
     C                     PARM '*MSG    '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           @MMOD     PARM @MMOD     DSFDY
      *
     C           @RTCD     IFNE *BLANK
     C                     MOVEL'SDMMODPD'WWBFIL
     C                     MOVEL'99'      WWBASE
     C                     MOVEL@OPTN     WWBKEY
     C                     EXSR SRDBER
     C                     ENDIF
      *
     C           BGLRIN    IFNE 'Y'
     C                     MOVE *BLANKS   W0RTN
     C                     MOVE '1'       *INLR
     C                     RETRN
     C                     ELSE
     C                     OPEN SDCTX2PD
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *================================================================
**  CPY@
(c) Finastra International Limited 2005
