     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Book Codes details - PUMA 2 details')         *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0314 - Book Codes Details - PUMA 2 Details                 *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2006            *
      *                                                               *
      *  Last Amend No. LUC139             Date 23Dec20               *
      *  Prev Amend No. CER009  *CREATE    Date 16Aug06               *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  LUC139 - UCI Italian returns upgrade to FM2.1                *
      *  CER009 - Puma II Upgrade to MidasPlus                        *
      *                                                               *
      *****************************************************************
      *
     FSDBKT1PDUF  E           K        DISK         KCOMIT       A    UC
     F            SDBKT1D0                          KRENAMEUPDIDX
     F                                              KINFSR *PSSR
      **  SD Book Details - PUMA 2 Extended file - Update index
      *
     FSDBKT1L0IF  E           K        DISK
     F            SDBKT1D0                          KRENAMERTVIDX
     F                                              KINFSR *PSSR
      **  SD Book Details - PUMA 2 Extended file - Retrieval index
      *
     FSD0314DFCF  E                    WORKSTN
     F            SD0314X0                          KRENAMESCREEN
      **  Display file
      *
      *****************************************************************
      /EJECT
      *****************************************************************
     E                    CPY@    1   1 80
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *
     IA@CPY       DS
     I                                        1  80 CPY@
      ** Copyright array
      *
     IPSDS       SDS
     I                                     *PROGRAM ##PGM
     I                                      244 253 ##JOB
     I                                      244 246 WSID
     I                                      254 263 ##USR
      ** Program Status Data Structure - gives Job/Workstation name and
      **  User ID
      *
     ILDA       E DSLDA                         256
      ** Data structure for data-base processing
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
     INWRCD     E DSSDBKT1PD
      **  Current/previous extension file record
      *
     ISVRCD       DS                              4
      **  Stored extension file record
      *
     ISDBANK    E DSSDBANKPD
      ** DS for Bank details
      *
     IDSFDY     E DSDSFDY
      ** DS for access programs
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  M A I N   P R O C E S S I N G                                *
      *                                                               *
      *****************************************************************
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Execute specific routine depending on action
      *
     C                     SELEC
      *
     C           ACTION    WHEQ 'E'
     C                     EXSR SRENQ
     C           ACTION    WHEQ 'D'
     C                     EXSR SRDEL
      *
     C           ACTION    WHEQ 'I'
     C           ACTION    OREQ 'A'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *ON
     C                     EXSR SRINS
     C                     ELSE
     C                     EXSR SRAMD
     C                     ENDIF
      *
     C                     ENDSL
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRINS - Routine to handle 'INSERT' action                    *
      *                                                               *
      *****************************************************************
      *
     C           SRINS     BEGSR
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Initialize error condition indicators
      *
     C                     MOVEA'000'     *IN,30
     C                     ITER
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKL     IFEQ *ON
     C                     LEAVE
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN30     IFEQ *OFF
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write a new record to the file
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRAMD - Routine to handle 'AMEND' action                     *
      *                                                               *
      *****************************************************************
      *
     C           SRAMD     BEGSR
      *
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Initialize error condition indicators
      *
     C                     MOVEA'000'     *IN,30
     C                     ITER
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKL     IFEQ *ON
     C                     LEAVE
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN30     IFEQ *OFF
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ *OFF
     C           *IN61     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRENQ - Routine to handle 'ENQUIRY' action                   *
      *                                                               *
      *****************************************************************
      *
     C           SRENQ     BEGSR
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *OFF
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSMSG - Routine to send messages to message subfile         *
      *                                                               *
      *****************************************************************
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'SDUSRMSG'ZAMSGF
      *
     C                     ENDIF
      *
     C                     CALL 'SNDERMSG'
     C                     PARM ##PGM     ZAPGM  10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time
      *
     C                     MOVE *BLANKS   ZAPGRL
     C                     MOVE *BLANKS   ZAMSID
     C                     MOVE *BLANKS   ZAMSDA
     C                     MOVE *BLANKS   ZAMSTP
     C                     MOVE *BLANKS   ZAMSGF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCMSG - Routine to clear program's message queue            *
      *                                                               *
      *****************************************************************
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRREC - Routine to access file via retrieve index            *
      *                                                               *
      *****************************************************************
      *
     C           SRREC     BEGSR
      *
     C           KBKCD     CHAINRTVIDX               89
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRALOC - Routine to access record via update index           *
      *                                                               *
      *****************************************************************
      *
     C           SRALOC    BEGSR
      *
     C           KBKCD     CHAINUPDIDX               6061
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUPD - Routine to update file                               *
      *                                                               *
      *****************************************************************
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
      *
     C           *IN68     IFEQ *OFF
     C                     MOVE *ON       *IN70
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRWRT - Routine to write a new record to the file            *
      *                                                               *
      *****************************************************************
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
      *
     C           *IN68     IFEQ *OFF
     C                     MOVE *ON       *IN70
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDEL  - Routine to delete a record                          *
      *                                                               *
      *****************************************************************
      *
     C           SRDEL     BEGSR
     C                     EXSR SRREC
      *
      ** If record is found
      *
     C           *IN89     IFEQ *OFF
     C                     EXSR SRSAVE
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
     C           *IN60     IFEQ *OFF
     C           *IN61     ANDEQ*OFF
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, delete record
      *
     C                     EXSR SRDELR
      *
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDELR - Delete the record                                   *
      *                                                               *
      *****************************************************************
      *
     C           SRDELR    BEGSR
      *
     C                     DELETUPDIDX                 68
      *
     C           *IN68     IFEQ *OFF
     C                     MOVE *ON       *IN70
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRCOMP - Routine to compare before/after image of records    *
      *                                                               *
      *****************************************************************
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
      *
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'ITX0002' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KBKCD     SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE *ON       *IN60
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSAVE - Routine to save before image of record via DS       *
      *                                                               *
      *****************************************************************
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRRTRN - Routine to set up return code for calling program   *
      *                                                               *
      *****************************************************************
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN69     IFEQ *ON
     C                     MOVE 'Y2U0004' WWRTRN
      *
     C                     ELSE
      *
      ** Database error
      *
     C           *IN68     IFEQ *ON
     C                     MOVE 'USR0563' WWRTRN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ *ON
     C                     MOVE 'USR0790' WWRTRN
     C                     ELSE
      *
      ** No error
      *
     C                     MOVE *BLANKS   WWRTRN
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     CLOSESDBKT1PD               99
      *
      ** Exit program
      *
     C                     MOVE *ON       *INLR
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDBER - Routine to handle database errors                   *
      *                                                               *
      *****************************************************************
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C                     MOVEL##PGM     DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  LDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             88
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSCRN - Routine to handle screen and validation             *
      *                                                               *
      *****************************************************************
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRVAL - Routine to validate screen fields                    *
      *                                                               *
      *****************************************************************
      *
     C           SRVAL     BEGSR
      *
      ** Initialize error condition indicators
      *
     C                     MOVEA'000'     *IN,30
      *
      ** Validate 'Security Immobilisation' field
      *
     C                     EXSR SRSEIM
      *
      ** Validate 'Pledged Assets' field
      *
     C                     EXSR SRPLAS
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSEIM - Routine to validate security immobilisation         *
      *                                                               *
      *****************************************************************
      *
     C           SRSEIM    BEGSR
      *
     C           #0SEIM    IFNE '0'
     C           #0SEIM    ANDNE'1'
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN31
     C                     MOVE *ON       *IN25
     C                     MOVEL'ITS3111' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRPLAS - Routine to pladged assets                           *
      *                                                               *
      *****************************************************************
      *
     C           SRPLAS    BEGSR
      *
      ** If field is different from allowed values (0 and 1)
      *
     C           #PLASS    IFNE '0'
     C           #PLASS    ANDNE'1'
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN32
     C                     MOVE *ON       *IN25
     C                     MOVEL'ITS3112' ZAMSID
     C                     EXSR SRSMSG
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRINZ - Routine to initialize screen fields with defaults    *
      *                                                               *
      *****************************************************************
      *
     C           SRINZ     BEGSR
      *
      ** Default value is '0'
      *
     C                     MOVE '0'       #0SEIM
     C                     MOVE '0'       #PLASS
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRFTOS - Routine to move file fields to screen fields        *
      *                                                               *
      *****************************************************************
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVE PDSEIM    #0SEIM
     C                     MOVE PDPLAS    #PLASS
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRSTOF - Routine to move screen field to file field          *
      *                                                               *
      *****************************************************************
      *
     C           SRSTOF    BEGSR
      *
      **  Move key field to file field
      *
     C                     MOVELKBKCD     PDBKCD
      *
      **  Move screen field to file field
      *
     C                     MOVE #0SEIM    PDSEIM
     C                     MOVE #PLASS    PDPLAS
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRINIT - Routine to handle initial processing                *
      *                                                               *
      *****************************************************************
      *
     C           SRINIT    BEGSR
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           ACTION  1
     C                     PARM           #1BKCD  2
     C                     PARM           WWRTRN  7
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN PDBKCD    KBKCD
     C                     MOVE #1BKCD    KBKCD
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Setup file value used in database error during access to
      ** retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'SDBKT1PD'WWEXTF
      *
      ** Initialise display mode indicators
      *
     C           ACTION    IFEQ 'I'
     C           ACTION    OREQ 'A'
     C                     MOVE *ON       *IN20
      *
     C                     ELSE
     C                     MOVE *OFF      *IN20
      *
     C                     ENDIF
      *
      ** Initialise error indicators
      *
     C                     MOVEA'0000'    *IN,30
      *
      ** Open Retail ICD extended file
      *
     C                     OPEN SDBKT1PD               99
      *
     C                     MOVE *ON       *IN25
      *
      ** Call access program for bank details
      *
     C                     CALL 'AOBANKR0'
     C                     PARM '*DBERR'  @RTCD   7
     C                     PARM '*FIRST'  @OPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
      *
     C                     ENDSR
      *****************************************************************
      *                                                               *
      *  *PSSR - Program exception error routine                      *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR
      *
     C           WRUN      IFEQ *BLANKS
     C                     MOVE 'Y'       WRUN    1
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *INLR
     C                     DUMP
      *
     C                     CALL 'DBERRCTL'
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
**  CPY@
(c) Misys International Banking Systems Ltd. 2006
