     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Mandatory window maintenance')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0440D - Mandatory Window Maintenance                       *
      *                                                               *
      *  Function:  This program displays the window programs.        *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CPK018             Date 19Mar05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CLE004             Date 12JAN98               *
      *                 CSD003             Date 06JAN98               *
      *                 S01516             DATE 25AUG94               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CPK018 - Change to make windows switchable. Replace use of   *
      *           - Replace use of SDMREFL1 with SDMREFJ0.            *
      *  CLE004 - Lending Enhancements - Syndications  (Recompile)    *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  S01516 - New program created to replace WN0460M, and to      *
      *           enable the user to enquire on and/or amend one      *
      *           record at a time.                                   *
      *                                                               *
      *****************************************************************
     F*Mandatory window maint   Initialise Program F-Spec
     F/COPY WNCPYSRC,SD0440DFPG
     FSD0440D#CF  E                    WORKSTN                        UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Mandatory window maintenance
      *
     F*SDMREFL1IF*E*******    K        DISK                           UC                      CPK018
     FSDMREFJ0IF  E           K        DISK                           UC                      CPK018
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Mandatory window ref file retrieval
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*Mandatory window maint   Initialise Program E-Spec
     E/COPY WNCPYSRC,SD0440DEPG
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I*Mandatory window maint   Initialise Program I-Spec
     I/COPY WNCPYSRC,SD0440DIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      * Outward parameters
     IPARC        DS                             12
      * KEY : Midas SD Mandatory window ref file retrieval
      * I : MAP Name Of Calling Program
     I                                        1  10 PANMCP
      * I : MAP Sequence Number
     I                                       11  12 PASQNB
      *
      * Outward parameters
     IPBRC        DS                             12
      * KEY : Midas SD Mandatory window ref file retrieval
      * I : MAP Name Of Calling Program
     I                                        1  10 PBNMCP
      * I : MAP Sequence Number
     I                                       11  12 PBSQNB
      *
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * 00/Copy member SD0440DISC - Mandatory Window Ref File  *
     C*Mandatory window maint   Initialise Subf Control
     C/COPY WNCPYSRC,SD0440DISC
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           DLNMCP           Name Of Calling
     C                     KFLD           DLSQNB           Sequence Number
      * Setup key
     C                     MOVEL#2NMCP    DLNMCP           Name Of Calling
     C                     MOVEL#2SQNB    DLSQNB           Sequence Number
     C********** KPOS      SETLL@DLREGT                                                       CPK018
     C**********           READ @DLREGT                8782*82=EOF                            CPK018
     C           KPOS      SETLL@MREFJ0                                                       CPK018
     C                     READ @MREFJ0                8782*82=EOF                            CPK018
      * Save previous selector values
     C           *LIKE     DEFN #2LCD     WZLCD
     C                     MOVEL#2LCD     WZLCD            Last Change Dat
     C           *LIKE     DEFN #2TYLC    WZTYLC
     C                     MOVEL#2TYLC    WZTYLC           Type of Last Ch
     C           *LIKE     DEFN #2WNCN    WZWNCN
     C                     MOVEL#2WNCN    WZWNCN           Window Controll
     C           *LIKE     DEFN #2LGWD    WZLGWD
     C                     MOVEL#2LGWD    WZLGWD           Length of Windo
     C           *LIKE     DEFN #2WDWD    WZWDWD
     C                     MOVEL#2WDWD    WZWDWD           Width of Window
     C           *LIKE     DEFN #2TTWD    WZTTWD
     C                     MOVEL#2TTWD    WZTTWD           Title of Window
     C           *LIKE     DEFN #2SRWD    WZSRWD
     C                     MOVEL#2SRWD    WZSRWD           Starting Row of
     C           *LIKE     DEFN #2SCWD    WZSCWD
     C                     MOVEL#2SCWD    WZSCWD           Starting column
     C           *LIKE     DEFN #2NMCP    WZNMCP
     C                     MOVEL#2NMCP    WZNMCP           Name Of Calling
     C           *LIKE     DEFN #2SQNB    WZSQNB
     C                     MOVEL#2SQNB    WZSQNB           Sequence Number
     C           *LIKE     DEFN #2PGMT    WZPGMT
     C                     MOVEL#2PGMT    WZPGMT           Program Text
      * Translate search mask for text field
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2PGMT    WQPGMT           Program Text
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 50        WQA5N   50
     C                     PARM #2PGMT    WQPGMT           Program Text
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C**N82******          READP@DLREGT                  90*                                  CPK018
     C**N82******          READ @DLREGT                  90*                                  CPK018
     C  N82                READP@MREFJ0                  90*                                  CPK018
     C  N82                READ @MREFJ0                  90*                                  CPK018
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,34
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2LCD     IFNE *ZERO                      Last Change Dat
     C           DLLCD     CABNE#2LCD     BB020            Last Change Dat
     C                     END
     C           #2TYLC    IFNE *BLANK                     Type of Last Ch
     C           DLTYLC    CABNE#2TYLC    BB020            Type of Last Ch
     C                     END
     C           #2WNCN    IFNE *BLANK                     Window Controll
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           DLWNCN           Window Controll
      * Length
     C                     PARM 10        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           #2WNCN
      * Length
     C                     PARM 10        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2LGWD    IFNE *ZERO                      Length of Windo
     C           DLLGWD    CABNE#2LGWD    BB020            Length of Windo
     C                     END
     C           #2WDWD    IFNE *ZERO                      Width of Window
     C           DLWDWD    CABNE#2WDWD    BB020            Width of Window
     C                     END
     C           #2TTWD    IFNE *BLANK                     Title of Window
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           DLTTWD           Title of Window
      * Length
     C                     PARM 7         WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           #2TTWD
      * Length
     C                     PARM 7         WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2SRWD    IFNE *ZERO                      Starting Row of
     C           DLSRWD    CABNE#2SRWD    BB020            Starting Row of
     C                     END
     C           #2SCWD    IFNE *ZERO                      Starting column
     C           DLSCWD    CABNE#2SCWD    BB020            Starting column
     C                     END
     C           #2NMCP    IFEQ *BLANK                     Name Of Calling
     C           #2SQNB    IFNE *BLANK                     Sequence Number
     C           DLSQNB    CABNE#2SQNB    BB020            Sequence Number
     C                     END
     C                     END
     C           #2PGMT    IFNE *BLANK                     Program Text
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           DLPGMT           Program Text
      * Length
     C                     PARM 50        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQPGMT
      * Length
     C                     PARM 50        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
     C                     EXSR MC#1FN
     C                     SUB  1         ##RR
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * 00/Copy member SD0440DISR - Mandatory Window Ref File  *
     C*Mandatory window maint   Initialise Subfile Rcd
     C/COPY WNCPYSRC,SD0440DISR
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C**********           READ @DLREGT                  82*82=EOF                            CPK018
     C                     READ @MREFJ0                  82*82=EOF                            CPK018
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * CALC: Subfile control function fields
      * 00/Copy member SD0440DSFF - Mandatory Window Ref File  *
     C*Mandatory window maint   Calculate Control Fields
     C/COPY WNCPYSRC,SD0440DSFF
      * Change of position specified
     C           WZNMCP    CASNE#2NMCP    FBRQRL
     C           WZSQNB    CASNE#2SQNB    FBRQRL
     C           WZPGMT    CASNE#2PGMT    FBRQRL
     C                     END
      * USER: Process subfile control (Pre-confirm)
      * 00/Copy member SD0440DPSC - Mandatory Window Ref File  *
     C*Mandatory window maint   Process Subfile Control
     C/COPY WNCPYSRC,SD0440DPSC
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
      * USER: Final processing (Pre-confirm)
      * 00/Copy member SD0440DFPR - Mandatory Window Ref File  *
     C*Mandatory window maint   Final Processing
     C/COPY WNCPYSRC,SD0440DFPR
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * 00/Copy member SD0440DPCK - Mandatory Window Ref File  *
     C*Mandatory window maint   Process Command Keys
     C/COPY WNCPYSRC,SD0440DPCK
      * CASE: CTL.*CMD key is *Go to 'Add' mode
     C           *IN09     IFEQ '1'                        *IF
      * Edit mandatory window - Mandatory Window Ref File  *
     C                     CLEARPARC
     C                     MOVEL*BLANK    PANMCP           Name Of Calling
     C                     MOVEL*BLANK    PASQNB           Sequence Number
      *
     C                     CALL 'SD0441R'              90  Edit mandatory
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Mandatory
     C                     PARM 'I'       WQ0001  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0441R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,34
     C                     SETOF                     98    *
     C                     EXSR MC#1FN
      * USER: Process subfile record (Pre-confirm)
      * 00/Copy member SD0440DPSR - Mandatory Window Ref File  *
     C*Mandatory window maint   Process Subfile Record
     C/COPY WNCPYSRC,SD0440DPSR
      * User requests E - Enquire
      * CASE: RCD.*SFLSEL is *Enquire
     C           #1SEL     IFEQ 'E'                        *IF
      * Display mandatory window - Mandatory Window Ref File  *
     C                     CLEARPBRC
     C                     MOVEL#1NMCP    PBNMCP           Name Of Calling
     C                     MOVEL#1SQNB    PBSQNB           Sequence Number
      *
     C                     CALL 'SD0441E'              90  Display mandato
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Mandatory
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0441E' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * User requests A -Amend
      * CASE: RCD.*SFLSEL is *Amend
     C           #1SEL     IFEQ 'A'                        *IF
      * Edit mandatory window - Mandatory Window Ref File  *
     C                     CLEARPARC
     C                     MOVEL#1NMCP    PANMCP           Name Of Calling
     C                     MOVEL#1SQNB    PASQNB           Sequence Number
      *
     C                     CALL 'SD0441R'              90  Edit mandatory
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Mandatory
     C                     PARM 'A'       WQ0002  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0441R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * User requests D - Delete
      * CASE: RCD.*SFLSEL is *Delete
     C           #1SEL     IFEQ 'D'                        *IF
      * Edit mandatory window - Mandatory Window Ref File  *
     C                     CLEARPARC
     C                     MOVEL#1NMCP    PANMCP           Name Of Calling
     C                     MOVEL#1SQNB    PASQNB           Sequence Number
      *
     C                     CALL 'SD0441R'              90  Edit mandatory
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Mandatory
     C                     PARM 'D'       WQ0003  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0441R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Exit program processing - Fast Exit
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      **Move*@DLREGT*fields*to*subfile*********************************                       CPK018
      * Move @MREFJ0 fields to subfile                                                        CPK018
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDDLLCD     #1LCD            Last Change Dat
     C                     MOVELDLTYLC    #1TYLC           Type of Last Ch
     C                     MOVELDLWINT    #1WINT           Window Type
     C                     MOVELDLWNCN    #1WNCN           Window Controll
     C                     Z-ADDDLLGWD    #1LGWD           Length of Windo
     C                     Z-ADDDLWDWD    #1WDWD           Width of Window
     C                     MOVELDLTTWD    #1TTWD           Title of Window
     C                     Z-ADDDLSRWD    #1SRWD           Starting Row of
     C                     Z-ADDDLSCWD    #1SCWD           Starting column
     C                     MOVELDLNMCP    #1NMCP           Name Of Calling
     C                     MOVELDLSQNB    #1SQNB           Sequence Number
     C                     MOVELDLPGMT    #1PGMT           Program Text
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MC#1FN    BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      * 00/Copy member SD0440DRFF - Mandatory Window Ref File  *
     C*Mandatory window maint   Calculate Record Funcs
     C/COPY WNCPYSRC,SD0440DRFF
      *================================================================
     CSR         MCEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2LCD            Last Change Dat
     C                     MOVEL*BLANK    #2TYLC           Type of Last Ch
     C                     MOVEL*BLANK    #2WNCN           Window Controll
     C                     Z-ADD*ZERO     #2LGWD           Length of Windo
     C                     Z-ADD*ZERO     #2WDWD           Width of Window
     C                     MOVEL*BLANK    #2TTWD           Title of Window
     C                     Z-ADD*ZERO     #2SRWD           Starting Row of
     C                     Z-ADD*ZERO     #2SCWD           Starting column
     C                     MOVEL*BLANK    #2NMCP           Name Of Calling
     C                     MOVEL*BLANK    #2SQNB           Sequence Number
     C                     MOVEL*BLANK    #2PGMT           Program Text
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * 00/Copy member SD0440DEPP - Mandatory Window Ref File  *
     C*Mandatory window maint   Exit Program Processing
     C/COPY WNCPYSRC,SD0440DEPP
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C                     OPEN SD0440D#
     C**********           OPEN SDMREFL1                                                      CPK018
     C                     OPEN SDMREFJ0                                                      CPK018
     C                     MOVEL'N'       W0PMT   1
     C                     Z-ADD13        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD0440D prcompiler - Mandatory Window Ref File  *
      * Copyright Statement 1994 - Standard Functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * 00/Copy member SD0440DFPG - Mandatory Window Ref File  *
      * 00/Copy member SD0440DEPG - Mandatory Window Ref File  *
      * 00/Copy member SD0440DIPG - Mandatory Window Ref File  *
      * 00/Copy member SD0440DCPG - Mandatory Window Ref File  *
     C*Mandatory window maint   Initialise Program C-Spec
     C/COPY WNCPYSRC,SD0440DCPG
      * 00/Copy member SD0440DOPG - Mandatory Window Ref File  *
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD0440DPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0440DPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINS
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0440DPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*Mandatory window maint   Initialise Program O-Spec
     O/COPY WNCPYSRC,SD0440DOPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
