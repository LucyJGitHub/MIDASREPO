     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD RTS teller identification maintenance')       *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0691R - Midas SD RTS teller identification maintenance.    *
      *                                                               *
      *  Function:  This program allows the user to maintain          *
      *             the teller identification details                 *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      *  Prev Amend No. CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CRT026             Date 22May06               *
      *                 CSD027             Date 09Dec05               *
      *                 BUG8065            Date 05Aug05               *
      * Midas Release 4.01 -------------------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.05 -----------------------------------------------*
      *                 190582             Date 07Mar01               *
      *                 153243             Date 19Feb01               *
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CSD003             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 101181             DATE 07FEB97               *
      *                 CRT001             DATE 07MAR95               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CRT026 - Retail Teller Password Change                       *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  BUG8065 - Added validation of Teller Id in MUSERL3.          *
      *  190582 - Initialise numeric fields (batch details).          *
      *  153243 - Not possible to delete tellers.                     *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  101181 - Do not allow deletion of teller if still signed on  *
      *           or with outstanding transactions.                   *
      *  CRT001 - New program for Retail Teller System.               *
      *                                                               *
      *****************************************************************
     F*Teller ID edit           Initialise Program F-spec
     F/COPY WNCPYSRC,SD0691RFPG
     FSD0691R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD RTS teller identification maintenance
      *
     FSDTELDL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD RTS teller identification file retrieval
      *
     FSDBRCHL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas SD Branch codes retrieval
      *
     FSDDEPTL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Department Codes retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDBANKL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * RTV : Midas SD Bank details ICD retrieval
      *
     FSDCURRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0005
     F                                              KINFSR *PSSR
      * RTV : Midas SD Currency codes retrieval
      *
     FSDTELDL0UF  E           K        DISK                      A    UC
     F                                              KCOMIT
     F                                              KINFDS ID0006
     F                                              KINFSR *PSSR
      * UPD : Midas SD RTS teller identification file update
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0007
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     FMUSERL3 IF  E           K        DISK                           UC                     BUG8065
     F                                              KINFDS ID0008                            BUG8065
     F                                              KINFSR *PSSR                             BUG8065
      * RTV : Midas SF Midas users by Teller ID                                              BUG8065
      *                                                                                      BUG8065
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*
     E/COPY ZSRSRC,RTENCPE1
     E* ARRAY FOR SR.RTENCP
     E*
     E*Teller ID edit           Initialise Program E-spec
     E/COPY WNCPYSRC,SD0691REPG
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     I*
     I*
     I*
     I*
     I*
     I*
     I*
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I*
     I/COPY QWINDSRC,SD0690GDTA
     I*
     I*
     I*
     I/COPY ZSRSRC,ZTNLU1Z1
     I*
     I*Teller ID edit           Initialise Program I-spec
     I/COPY WNCPYSRC,SD0691RIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDTELDL0
      * UPD : Midas SD RTS teller identification file update
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                            102
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYARDCS      DS                             22
     IUUSDY     E DSDSSDY
     I*
     I* 800 byte DS for incoming data from Access Program
     I*
      *
      * Access object AOTRM1R0 - RTS Teller id file  *
     IP2DTA     E DSTTRNTM2
     I*  File structure for write to TTRNTM2
     I*
     IP1DTA     E DSTTRNTM1
     I*  File structure for write to TTRNTM1
     I              RECI                            TTRECI
     I              TBRI                            TTTBRI
     I              TBID                            TTTBID
     I              RCTP                            TTRCTP
     I*
     IP3DTA     E DSTTRNTM3
     I*  File structure for write to TTRNTM3
     I              RECI                            T3RECI
     I              TBRI                            T3TBRI
     I              TBID                            T3TBID
     I              RCTP                            T3RCTP
     I              TTLU                            T3TTLU
     I              LCD                             T3LCD
     I              CHTP                            T3CHTP
     I              TNLU                            T3TNLU
     I*
     IP4DTA     E DSTTRNTM4
     I*  File structure for write to TTRNTM4
     I              RECI                            T4RECI
     I              TBRI                            T4TBRI
     I              TBID                            T4TBID
     I              RCTP                            T4RCTP
     I              LCD                             T4LCD
     I              CHTP                            T4CHTP
     I              TNLU                            T4TNLU
     I/COPY WNCPYSRC,SD0691RI01
     I*
     IWUDELR      DS
     I                                        1 250 WUDR01
     I                                      251 500 WUDR02
     I                                      501 750 WUDR03
     I                                      7511000 WUDR04
     I                                     10011250 WUDR05
     I                                     12511500 WUDR06
     I                                     15011750 WUDR07
     I                                     17512000 WUDR08
     I                                     20012250 WUDR09
     I                                     22512500 WUDR00
     I                                     25012750 WUDR11
     I                                     27513000 WUDR12
      * Outward parameters
     IPARC        DS                           3064
      * RCD : Midas SD Deleted records file retrieval
      * I :  File name
     I                                        1  10 PAFNME
      * I :  Long Key
     I                                       11  60 PALKEY
      * I :  Deleted Data Record Pt1
     I                                       61 310 PADR01
      * I :  Deleted Data Record Pt2
     I                                      311 560 PADR02
      * I :  Deleted Data Record Pt3
     I                                      561 810 PADR03
      * I :  Deleted Data Record Pt4
     I                                      8111060 PADR04
      * I :  Deleted Data Record Pt5
     I                                     10611310 PADR05
      * I :  Deleted Data Record Pt6
     I                                     13111560 PADR06
      * I :  Deleted Data Record Pt7
     I                                     15611810 PADR07
      * I :  Deleted Data Record Pt8
     I                                     18112060 PADR08
      * I :  Deleted Data Record Pt9
     I                                     20612310 PADR09
      * I :  Deleted Data Record Pt10
     I                                     23112560 PADR00
      * I :  Deleted Data Record Pt11
     I                                     25612810 PADR11
      * I :  Deleted Data Record Pt12
     I                                     28113060 PADR12
      * I :  Last Change Date
     I                                    P306130630PALCD
      * I :  Type of Last Change
     I                                     30643064 PATYLC
      *
     IYBRDCS      DS                             22
     IYCRDCS      DS                            102
     IYDRDCS      DS                             22
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     I@RDS        DS                             25
     I* Data structure to redefine override indicators
     I                                        1  25 WUVWIN
     I                                        1   1 #DBLDB
     I                                        2   2 #DBLCR
     I                                        3   3 #DRFDR
     I                                        4   4 #DRFCR
     I                                        5   5 #DINAC
     I                                        6   6 #DBRLQ
     I                                        7   7 #DBDDT
     I                                        8   8 #DINFD
     I                                        9   9 #DEXOD
     I                                       10  10 #DMNBL
     I                                       11  11 #DSTCQ
     I                                       12  12 #DCQOR
     I                                       13  13 #DCQPR
     I                                       14  14 #DTLLM
     I                                       15  15 #DERAT
     I                                       16  16 #DBRDF
     I                                       17  17 #DACCL
     I                                       18  18 #DNWKD
     I                                       19  19 #DINBV
     I                                       20  20 #DNAGL
     I*
     I            DS
      * Data Structure for initialising packed fiels
     I                                        1  72 NCRAX
     I                                    P   1   30@NC1
     I                                    P   4   60@NC2
     I                                    P   7   90@NC3
     I                                    P  10  120@NC4
     I                                    P  13  150@NC5
     I                                    P  16  180@NC6
     I                                    P  19  210@NC7
     I                                    P  22  240@NC8
     I                                    P  25  270@NC9
     I                                    P  28  300@NC10
     I                                    P  31  330@NC11
     I                                    P  34  360@NC12
     I                                    P  37  390@NC13
     I                                    P  40  420@NC14
     I                                    P  43  450@NC15
     I                                    P  46  480@NC16
     I                                    P  49  510@NC17
     I                                    P  52  540@NC18
     I                                    P  55  570@NC19
     I                                    P  58  600@NC20
     I                                    P  61  630@NC21
     I                                    P  64  660@NC22
     I                                    P  67  690@NC23
     I                                    P  70  720@NC24
     I*
      *
     I            DS
      * Data Structure for initialising packed fiels
     I                                        1 192 VCRAX
     I                                    P   1   80@VC1
     I                                    P   9  160@VC2
     I                                    P  17  240@VC3
     I                                    P  25  320@VC4
     I                                    P  33  400@VC5
     I                                    P  41  480@VC6
     I                                    P  49  560@VC7
     I                                    P  57  640@VC8
     I                                    P  65  720@VC9
     I                                    P  73  800@VC10
     I                                    P  81  880@VC11
     I                                    P  89  960@VC12
     I                                    P  97 1040@VC13
     I                                    P 105 1120@VC14
     I                                    P 113 1200@VC15
     I                                    P 121 1280@VC16
     I                                    P 129 1360@VC17
     I                                    P 137 1440@VC18
     I                                    P 145 1520@VC19
     I                                    P 153 1600@VC20
     I                                    P 161 1680@VC21
     I                                    P 169 1760@VC22
     I                                    P 177 1840@VC23
     I                                    P 185 1920@VC24
     I*
     IYRSW0A      DS                           9999
     IYRSW0B      DS                           9999
     IYRSW0C      DS                           9999
     IYRSW0D      DS                           9999
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
     IID0005      DS                            528
      * File information data structure
      *
     IID0006      DS                            528
      * File information data structure
      *
     IID0007      DS                            528
      * File information data structure
      *                                                                                      BUG8065
     IID0008      DS                            528                                          BUG8065
      * File information data structure                                                      BUG8065
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                              3
      * KEY: Midas SD RTS teller identification file retrieval
      * I : MAP Teller Identification
     I                                        1   3 P1TLID
     IP2PARM      DS
      * I :  Action Code
     I                                        1   1 P2ANCD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Question Mark Invalid'
      * Key Field
     I                                        1  10 ZA0001
      * Message data for 'Teller Id already exists'
      * Teller Identification
     I                                        1   3 ZA0002
      * Message data for 'Teller Id exists on TTRN*'
      * Teller Identification
     I                                        1   3 ZA0003
      * Message data for 'Teller Pass code is req'
      * Teller Pass Code
     I                                        1   6 ZA0004
      * Message data for 'Teller Branch Code is req'
      * Teller Branch Code
     I                                        1   3 ZA0005
      * Message data for 'Branch Code Not Found'
      * Branch/Company Code
     I                                        1   3 ZA0006
      * Message data for 'Menu Group is required'
      * Teller Menu Group scr
     I                                        1   4 ZA0007
      * Message data for 'Menu group must be numerc'
      * Teller Menu Group scr
     I                                        1   4 ZA0008
      * Message data for 'Menu Group must be > 0'
      * Teller Menu Group scr
     I                                        1   4 ZA0009
      * Message data for 'Cash Tran Lmt must be > 0'
      * Cash Tran Limit scr
     I                                        1  14 ZA0010
      * Message data for 'Cash tran 13 digits'
      * Cash Tran Limit scr
     I                                        1  14 ZA0011
      * Message data for 'Cash tran limit is reqd'
      * Cash Tran Limit scr
     I                                        1  14 ZA0012
      * Message data for 'Security Level is requird'
      * Teller security level scr
     I                                        1   4 ZA0013
      * Message data for 'Security Level numeric'
      * Teller security level scr
     I                                        1   4 ZA0014
      * Message data for 'Securty level must be > 0'
      * Teller security level scr
     I                                        1   4 ZA0015
      * Message data for 'Non-cash tran must be > 0'
      * Non-cash Tran Limit scr
     I                                        1  14 ZA0016
      * Message data for 'Non-cash tran 13 digits'
      * Non-cash Tran Limit scr
     I                                        1  14 ZA0017
      * Message data for 'Non-cash tran lmt is reqd'
      * Non-cash Tran Limit scr
     I                                        1  14 ZA0018
      * Message data for 'Automatic Timeout is reqd'
      * Automatic time out scr
     I                                        1   5 ZA0019
      * Message data for 'Automatic Timeout numeric'
      * Automatic time out scr
     I                                        1   5 ZA0020
      * Message data for 'Automatic Timeout invalid'
      * Automatic time out scr
     I                                        1   5 ZA0021
      * Message data for 'Supervisor indicator reqd'
      * Supervisor Indicator
     I                                        1   1 ZA0022
      * Message data for 'Supervisor Ind is invalid'
      * Supervisor Indicator
     I                                        1   1 ZA0023
      * Message data for 'Department code is requrd'
      * Teller Default Dept Cd
     I                                        1   3 ZA0024
      * Message data for 'Department Code not found'
      * Teller Default Dept Cd
     I                                        1   3 ZA0025
      * Message data for 'Teller Name is required'
      * Teller Name
     I                                        1  30 ZA0026
      * Message data for 'Block Debit Ind is req'
      * Block Debit Ind
     I                                        1   1 ZA0027
      * Message data for 'Block Debit ind invalid'
      * Block Debit Ind
     I                                        1   1 ZA0028
      * Message data for 'Stopped Cheque Ind is req'
      * Stopped Cheque Ind
     I                                        1   1 ZA0029
      * Message data for 'Stopped cheque invalid'
      * Stopped Cheque Ind
     I                                        1   1 ZA0030
      * Message data for 'Block Credit Ind is req'
      * Block Credit Ind
     I                                        1   1 ZA0031
      * Message data for 'Block Credit invalid'
      * Block Credit Ind
     I                                        1   1 ZA0032
      * Message data for 'Cheqe out of rnge ind req'
      * Cheque Out of Range Ind
     I                                        1   1 ZA0033
      * Message data for 'Chqe out of range invalid'
      * Cheque Out of Range Ind
     I                                        1   1 ZA0034
      * Message data for 'Refer Debit ind is req'
      * Refer Debit Ind
     I                                        1   1 ZA0035
      * Message data for 'Refer debit invalid'
      * Refer Debit Ind
     I                                        1   1 ZA0036
      * Message data for 'Cheqe presentd ind is req'
      * Cheque Presented Ind
     I                                        1   1 ZA0037
      * Message data for 'Chqe prsntd cannot be 'Y''
      * Cheque Presented Ind
     I                                        1   1 ZA0038
      * Message data for 'Cheqe Presented invalid'
      * Cheque Presented Ind
     I                                        1   1 ZA0039
      * Message data for 'Refer credit ind is req'
      * Refer Credit Ind
     I                                        1   1 ZA0040
      * Message data for 'Refer Credit invalid'
      * Refer Credit Ind
     I                                        1   1 ZA0041
      * Message data for 'Teller limit is req'
      * Teller Limit
     I                                        1   1 ZA0042
      * Message data for 'Teller limit invalid'
      * Teller Limit
     I                                        1   1 ZA0043
      * Message data for 'Inactive account is req'
      * Inactive Account
     I                                        1   1 ZA0044
      * Message data for 'Inactive Account invalid'
      * Inactive Account
     I                                        1   1 ZA0045
      * Message data for 'Exchange Rate is req'
      * Exchange Rate Ind
     I                                        1   1 ZA0046
      * Message data for 'Exchange rate invalid'
      * Exchange Rate Ind
     I                                        1   1 ZA0047
      * Message data for 'Bankrupt/Liquid is req'
      * Bankrupt/Liqidation Ind
     I                                        1   1 ZA0048
      * Message data for 'Bankrupt/Liquid invalid'
      * Bankrupt/Liqidation Ind
     I                                        1   1 ZA0049
      * Message data for 'Branch Different is req'
      * Branch Different Ind
     I                                        1   1 ZA0050
      * Message data for 'Branch different invalid'
      * Branch Different Ind
     I                                        1   1 ZA0051
      * Message data for 'Bad debt is req'
      * Bad Debt Ind
     I                                        1   1 ZA0052
      * Message data for 'Bad debt invalid'
      * Bad Debt Ind
     I                                        1   1 ZA0053
      * Message data for 'Account closing is req'
      * Account Closing Ind
     I                                        1   1 ZA0054
      * Message data for 'Account closing invalid'
      * Account Closing Ind
     I                                        1   1 ZA0055
      * Message data for 'Insufficient fund is req'
      * Insufficient Fund Ind
     I                                        1   1 ZA0056
      * Message data for 'Insufficient fund invalid'
      * Insufficient Fund Ind
     I                                        1   1 ZA0057
      * Message data for 'Non-working Day is req'
      * Non-working Day Ind
     I                                        1   1 ZA0058
      * Message data for 'Non-working day invalid'
      * Non-working Day Ind
     I                                        1   1 ZA0059
      * Message data for 'Exceeding OD is req'
      * Exceeding OD Ind
     I                                        1   1 ZA0060
      * Message data for 'Exceeding OD invalid'
      * Exceeding OD Ind
     I                                        1   1 ZA0061
      * Message data for 'Invalid Backvaluation req'
      * Invalid Backvaluation Ind
     I                                        1   1 ZA0062
      * Message data for 'Invalid Backvalu invalid'
      * Invalid Backvaluation Ind
     I                                        1   1 ZA0063
      * Message data for 'Minimum balance is req'
      * Minimum Balance Ind
     I                                        1   1 ZA0064
      * Message data for 'Minimum balance invalid'
      * Minimum Balance Ind
     I                                        1   1 ZA0065
      * Message data for 'No assoc Gl code is req'
      * No Associated GL Code Ind
     I                                        1   1 ZA0066
      * Message data for 'No assoc gl code invalid'
      * No Associated GL Code Ind
     I                                        1   1 ZA0067
      * Message data for 'Database Error (ICD)'
      * Filename
     I                                        1  10 ZA0068
      * Message data for 'Database Error (ICD)'
      * Filename
     I                                        1  10 ZA0069
      *                                                                                       CRT026
     ISCSARD    E DSSCSARDPD                                                                  CRT026
     I              LCD                             SARLCD                                    CRT026
      ** Switchable Features file                                                             CRT026
      *                                                                                       CRT026
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: RTS Teller
     C           P2ANCD    PARM           WP0001  1        Action Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1TLID    IFEQ *BLANK                     Teller Identifi
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           FRTLID           Teller Identifi
      * Setup key
     C                     MOVEL#1TLID    FRTLID           Teller Identifi
     C           KRTV      CHAIN@TELDL1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * Verify record existence against program mode
     C           W0PMD     IFNE 'ADD'
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     9931  *
      * Send message 'RTS Teller id file     NF'
     C                     MOVEL'USR2685' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * 00/Copy member SD0691RSFF - RTS Teller id file  *
     C*Teller ID edit           Calc Detail Function Flds
     C/COPY WNCPYSRC,SD0691RSFF
      * USER: Initialize detail screen (existing record)
      * SD0691R Footer DTL screen - RTS Teller id file  *
     C*
     C*  DETAIL LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C*  If Action Code is Delete :
     C*
     C           P2ANCD    IFEQ 'D'
     C* Setup footer text:
     C* F3=Main Menu   F10=Delete   F12=Previous
     C                     MOVEL'USR3350' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C*  If Action Code is Amend:
     C*
     C           P2ANCD    IFEQ 'A'
     C* Setup footer text:
     C* F3=Main Menu   F12=Previous
     C                     MOVEL'USR3346' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C*  If Action Code is Insert:
     C*
     C           P2ANCD    IFEQ 'I'
     C* Setup footer text:
     C* F3=Exit   F12=Previous
     C                     MOVEL'USR3351' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
      * 00/Copy member SD0691RISE - RTS Teller id file  *
     C*Teller ID edit           Initialise Dtl Exist Rcd
     C/COPY WNCPYSRC,SD0691RISE
      * Save the value of the pass code
     C                     MOVELFRTLPC    WUSVPC           Saved Pass code
     C           FRTLMG    ADD  *ZERO     WUMGNB           Menu group nume
     C                     MOVELWUMGNB    #DTMGS           Teller Menu Gro
      * Format cash transaction limit in base currency layout.
      * Move right cash trans - RTS Teller id file  *
     C                     MOVE *BLANKS   WUZASF           ZALIGN Screen F
     C                     MOVE FRCHTL    WUZASF           ZALIGN Screen F
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0001 16        ZALIGN Screen F
     C                     PARM WUZAND    WQ0002  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Zalign Cash trans limit - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DCTRL
     C*
      * Security Level
      * CASE: DB1.Teller Security Level is Zero
     C           FRTLSL    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #DTSLS           Teller security
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELFRTLSL    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0003  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0004 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0005  10       ZALIGN No Of De
     C                     PARM 4         WQ0006  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0007 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0008 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0009  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign security level - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTSLS
     C*
     C                     END                             *FI
      * Format non-cash transaction limit in base currency layout.
      * Move right non cash trans - RTS Teller id file  *
     C                     MOVE *BLANKS   WUZASF           ZALIGN Screen F
     C                     MOVE FRNCTL    WUZASF           ZALIGN Screen F
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0010 16        ZALIGN Screen F
     C                     PARM WUZAND    WQ0011  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Zalign noncash tran limit - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DNCTR
     C*
      * Automatic Timeout
      * CASE: DB1.Teller Menu Time Out is Zero
     C           FRTLTO    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #DTMTS           Automatic time
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELFRTLTO    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0012  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0013 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0014  10       ZALIGN No Of De
     C                     PARM 5         WQ0015  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0016 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0017 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0018  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign timeout - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTMTS
     C*
     C                     END                             *FI
     C                     Z-ADD1         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DBLDB    P  90  Block Debit Ind
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD2         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DBLCR    P  90  Block Credit In
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD3         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DRFDR    P  90  Refer Debit Ind
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD4         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DRFCR    P  90  Refer Credit In
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD5         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DINAC    P  90  Inactive Accoun
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD6         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DBRLQ    P  90  Bankrupt/Liqida
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD7         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DBDDT    P  90  Bad Debt Ind
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD8         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DINFD    P  90  Insufficient Fu
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD9         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DEXOD    P  90  Exceeding OD In
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD10        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DMNBL    P  90  Minimum Balance
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD11        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DSTCQ    P  90  Stopped Cheque
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD12        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DCQOR    P  90  Cheque Out of R
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD13        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DCQPR    P  90  Cheque Presente
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD14        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DTLLM    P  90  Teller Limit
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD15        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DERAT    P  90  Exchange Rate I
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD16        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DBRDF    P  90  Branch Differen
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD17        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DACCL    P  90  Account Closing
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD18        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DNWKD    P  90  Non-working Day
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD19        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DINBV    P  90  Invalid Backval
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD20        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00025
     C           ZQ        ORGT 00025
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTFROVRI:ZQ #DNAGL    P  90  No Associated G
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     END
      *
     C                     ELSE
      * If record already exists, error
     C           *IN90     IFEQ '0'
     C                     SETON                     9931  *
      * Send message 'RTS Teller id file     EX'
     C                     MOVEL'USR2686' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
      * USER: Initialize detail screen (new record)
      * SD0691R Footer DTL screen - RTS Teller id file  *
     C*
     C*  DETAIL LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C*  If Action Code is Delete :
     C*
     C           P2ANCD    IFEQ 'D'
     C* Setup footer text:
     C* F3=Main Menu   F10=Delete   F12=Previous
     C                     MOVEL'USR3350' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C*  If Action Code is Amend:
     C*
     C           P2ANCD    IFEQ 'A'
     C* Setup footer text:
     C* F3=Main Menu   F12=Previous
     C                     MOVEL'USR3346' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C*  If Action Code is Insert:
     C*
     C           P2ANCD    IFEQ 'I'
     C* Setup footer text:
     C* F3=Exit   F12=Previous
     C                     MOVEL'USR3351' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
      * 00/Copy member SD0691RISN - RTS Teller id file  *
     C*Teller ID edit           Initialise Dtl New Rcd
     C/COPY WNCPYSRC,SD0691RISN
     C                     MOVEL'5000'    #DTSLS           Teller security
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL'900'     WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0019  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0020 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0021  10       ZALIGN No Of De
     C                     PARM 5         WQ0022  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0023 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0024 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0025  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign timeout - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTMTS
     C*
      * Set all the 'Validation Indicators' to 'N'.
     C                     MOVEL@CN,01    WUVWIN           Validate/Warnin
     C                     END
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
     C                     END
      * USER: Validate key screen
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL#1TLID    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Setup message data for message
     C                     MOVEL#1TLID    ZA0001           Teller Identifi
      * Send message 'Question Mark Invalid'
     C                     MOVEL'USR0380' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Does record exist? - RTS Teller id file  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
      * Setup message data for message
     C                     MOVEL#1TLID    ZA0002           Teller Identifi
      * Send message 'Teller Id already exists'
     C                     MOVEL'USR2825' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVEL*BLANK    WUAPRC           Access Pgm Retu
      * Access object AOTRM2R0 - RTS Teller id file  *
     C                     CALL 'AOTRM2R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0026  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0027  7        Option for ACCO
     C                     PARM 'T'       WQ0028  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0029  3        Teller Identifi
     C                     PARM '1'       WQ0030  1        RTS Record type
     C                     PARM *BLANK    WQ0031 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM2R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Access object AOTRM3R0 - RTS Teller id file  *
     C                     CALL 'AOTRM3R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0032  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0033  7        Option for ACCO
     C                     PARM 'T'       WQ0034  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0035  3        Teller Identifi
     C                     PARM '2'       WQ0036  1        RTS Record type
     C                     PARM *BLANK    WQ0037 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM3R0'W0CLPG
     C/COPY WNCPYSRC,SD0691RC01
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Access object AOTRM4R0 - RTS Teller id file  *
     C                     CALL 'AOTRM4R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0038  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0039  7        Option for ACCO
     C                     PARM 'T'       WQ0040  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0041  3        Teller Identifi
     C                     PARM '3'       WQ0042  1        RTS Record type
     C                     PARM *BLANK    WQ0043 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM4R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1TLID    ZA0003           Teller Identifi
      * Send message 'Teller Id exists on TTRN*'
     C                     MOVEL'USR2828' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Access object AOTRM2R0 - RTS Teller id file  *
     C                     CALL 'AOTRM2R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0044  7        Access Pgm Retu
     C                     PARM '*FREE'   WQ0045  7        Option for ACCO
     C                     PARM 'T'       WQ0046  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0047  3        Teller Identifi
     C                     PARM '1'       WQ0048  1        RTS Record type
     C                     PARM *BLANK    WQ0049 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM2R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Access object AOTRM3R0 - RTS Teller id file  *
     C                     CALL 'AOTRM3R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0050  7        Access Pgm Retu
     C                     PARM '*FREE'   WQ0051  7        Option for ACCO
     C                     PARM 'T'       WQ0052  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0053  3        Teller Identifi
     C                     PARM '2'       WQ0054  1        RTS Record type
     C                     PARM *BLANK    WQ0055 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM3R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C/COPY WNCPYSRC,SD0691RC02
      *
      * Access object AOTRM4R0 - RTS Teller id file  *
     C                     CALL 'AOTRM4R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0056  7        Access Pgm Retu
     C                     PARM '*FREE'   WQ0057  7        Option for ACCO
     C                     PARM 'T'       WQ0058  1        RTS Teller batc
     C           #1TLID    PARM #1TLID    WQ0059  3        Teller Identifi
     C                     PARM '3'       WQ0060  1        RTS Record type
     C                     PARM *BLANK    WQ0061 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM4R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * 00/Copy member SD0691RVKS - RTS Teller id file  *
     C*Teller ID edit           Validate Key Screen
     C/COPY WNCPYSRC,SD0691RVKS
      * Teller Identification required
     C           #1TLID    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * 00/Copy member SD0691RPKR - RTS Teller id file  *
     C*Teller ID edit           Process Key Screen Rqst
     C/COPY WNCPYSRC,SD0691RPKR
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * SD0691R footer KEY screen - RTS Teller id file  *
     C*
     C* KEY LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C* Setup footer text:
     C* F3=Previous
     C                     MOVEL'USR3345' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * If delete is not pending....
      * Validate details
     C  N10                CAS            DCVLDL
     C                     END
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Initialise derived fields
     C                     EXSR MFIZ#2
      * USER: Validate detail screen fields
      * Disable 'ENTER' in Delete Mode
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Send message 'F3/F10/F12 only valid opt'
     C                     MOVEL'USR0536' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      * 00/Copy member SD0691RVSF - RTS Teller id file  *
     C*Teller ID edit           Validate Detail Screen
     C/COPY WNCPYSRC,SD0691RVSF
      * Pass Code
      * Only validate and encrypt passcode if passcode not protected                          CRT026
     C           *IN65     IFEQ *OFF                                                          CRT026
      * CASE: DTL.Teller Pass Code is Blank
     C           #1TLPC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TLPC    ZA0004           Teller Pass Cod
      * Send message 'Teller Pass code is req'
     C                     MOVEL'USR2803' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Teller Pass Code NE WRK.Saved Pass code
     C           #1TLPC    IFNE WUSVPC                     *IF
      * validate & encript Passcd - RTS Teller id file  *
     C*
     C                     MOVEA#1TLPC    BPWD
     C                     Z-ADD6         X       10
     C                     EXSR RTENCP
     C                     MOVEAEPWD      #1TLPC
     C*
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF                                                              CRT026
      * Teller's Branch Code
      * CASE: DTL.Teller Branch Code is Blank
     C           #1TLBC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TLBC    ZA0005           Teller Branch C
      * Send message 'Teller Branch Code is req'
     C                     MOVEL'USR2804' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1TLBC    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    WUBRCD           Branch code
      * Select Branch Codes - Branch Codes  *
     C                     CALL 'SD0061S'              90  Select Branch C
     C                     PARM *BLANK    W0RTN   7
     C           WUBRCD    PARM WUBRCD    WQ0062  3        Branch code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0061S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUBRCD    #1TLBC           Teller Branch C
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1TLBC    WUBRCD           Branch code
      * retrieve branch codes - Branch Codes  *
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1TLBC    ZA0006           Teller Branch C
      * Send message 'Branch Code Not Found'
     C                     MOVEL'USR0719' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Menu Group
      * CASE: DTL.Teller Menu Group scr is Blank
     C           #DTMGS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DTMGS    ZA0007           Teller Menu Gro
      * Send message 'Menu Group is required'
     C                     MOVEL'USR2805' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DTMGS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0063  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0064 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0065  10       ZALIGN No Of De
     C                     PARM 4         WQ0066  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0067 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0068 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0069  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DTMGS    ZA0008           Teller Menu Gro
      * Send message 'Menu group must be numerc'
     C                     MOVEL'USR2807' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1TLMG           Teller Menu Gro
      * Zalign menu group - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTMGS
     C*
      * CASE: DTL.Teller Menu Group is Zero
     C           #1TLMG    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#DTMGS    ZA0009           Teller Menu Gro
      * Send message 'Menu Group must be > 0'
     C                     MOVEL'USR2806' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Cash Transaction Limit
      * CASE: DTL.Cash Tran Limit scr is Entered
     C           #DCTRL    IFNE *BLANK                     *IF
      * Check that the value entered is valid.
      * Move cash tran to wrk fld - RTS Teller id file  *
     C*
     C                     MOVE #DCTRL    WUCTRL
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELWUCTRL    WUZASF           ZALIGN Screen F
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0070  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0071 16        ZALIGN Screen F
     C                     PARM WUZAND    WQ0072  10       ZALIGN No Of De
     C                     PARM WUZADG    WQ0073  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0074 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Check the validity of Cash Transaction Limit entry.
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVE WUZAFF    #1CHTL           Cash Transactio
      * CASE: DTL.Cash Transaction Limit is Greater than zero
     C           #1CHTL    IFGT *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DCTRL    ZA0010           Cash Tran Limit
      * Send message 'Cash Tran Lmt must be > 0'
     C                     MOVEL'USR2809' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DCTRL    ZA0011           Cash Tran Limit
      * Send message 'Cash tran 13 digits'
     C                     MOVEL'USR2826' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DCTRL    ZA0012           Cash Tran Limit
      * Send message 'Cash tran limit is reqd'
     C                     MOVEL'USR2810' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
      * Security Level
      * CASE: DTL.Teller security level scr is Blank
     C           #DTSLS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DTSLS    ZA0013           Teller security
      * Send message 'Security Level is requird'
     C                     MOVEL'USR2811' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DTSLS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0075  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0076 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0077  10       ZALIGN No Of De
     C                     PARM 4         WQ0078  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0079 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0080 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0081  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DTSLS    ZA0014           Teller security
      * Send message 'Security Level numeric'
     C                     MOVEL'USR2812' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign security level - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTSLS
     C*
     C                     MOVE WUZAFF    #1TLSL           Teller Security
      * CASE: DTL.Teller Security Level is Greater than zero
     C           #1TLSL    IFGT *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DTSLS    ZA0015           Teller security
      * Send message 'Securty level must be > 0'
     C                     MOVEL'USR2813' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Non-Cash Transaction Limit
      * CASE: DTL.Non-cash Tran Limit scr is Entered
     C           #DNCTR    IFNE *BLANK                     *IF
      * Check that the value entered is valid.
      * move noncash  to wrk fld - RTS Teller id file  *
     C*
     C                     MOVE #DNCTR    WUNCTR
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELWUNCTR    WUZASF           ZALIGN Screen F
     C           13        SUB  WUZAND    WUZADG           ZALIGN No Of Di
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0082  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0083 16        ZALIGN Screen F
     C                     PARM WUZAND    WQ0084  10       ZALIGN No Of De
     C                     PARM WUZADG    WQ0085  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0086 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * If the Non-Cash Transaction Limit entry is invalid.
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVE WUZAFF    #1NCTL           Non-Cash Trans.
      * CASE: DTL.Non-Cash Trans. Limit is Greater than zero
     C           #1NCTL    IFGT *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DNCTR    ZA0016           Non-cash Tran L
      * Send message 'Non-cash tran must be > 0'
     C                     MOVEL'USR2814' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DNCTR    ZA0017           Non-cash Tran L
      * Send message 'Non-cash tran 13 digits'
     C                     MOVEL'USR2827' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DNCTR    ZA0018           Non-cash Tran L
      * Send message 'Non-cash tran lmt is reqd'
     C                     MOVEL'USR2816' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
      * Automatic Timeout
      * CASE: DTL.Automatic time out scr is Blank
     C           #DTMTS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DTMTS    ZA0019           Automatic time
      * Send message 'Automatic Timeout is reqd'
     C                     MOVEL'USR2817' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DTMTS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0087  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0088 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0089  10       ZALIGN No Of De
     C                     PARM 5         WQ0090  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0091 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0092 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0093  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DTMTS    ZA0020           Automatic time
      * Send message 'Automatic Timeout numeric'
     C                     MOVEL'USR2818' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign timeout - RTS Teller id file  *
     C*
     C                     MOVE WUZASF    #DTMTS
     C*
     C                     MOVE WUZAFF    #1TLTO           Teller Menu Tim
      * CASE: DTL.Teller Menu Time Out is Valid value
     C           #1TLTO    IFGE 1                          *IF
     C           #1TLTO    ANDLE32767
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DTMTS    ZA0021           Automatic time
      * Send message 'Automatic Timeout invalid'
     C                     MOVEL'USR2819' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Supervisor Indicator
      * CASE: DTL.Supervisor Indicator is Blank
     C           #1SPVI    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1SPVI    ZA0022           Supervisor Indi
      * Send message 'Supervisor indicator reqd'
     C                     MOVEL'USR2820' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Supervisor Indicator is Valid value
     C           #1SPVI    IFEQ 'N'                        *IF
     C           #1SPVI    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1SPVI    ZA0023           Supervisor Indi
      * Send message 'Supervisor Ind is invalid'
     C                     MOVEL'USR2821' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Default Department Code
      * CASE: DTL.Teller Default Dept Cd is Blank
     C           #1DEPC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1DEPC    ZA0024           Teller Default
      * Send message 'Department code is requrd'
     C                     MOVEL'USR2822' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DEPC    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    WUDPCD           Dept Code
      * Select Department Codes - Department Codes  *
     C                     CALL 'SD0121S'              90  Select Departme
     C                     PARM *BLANK    W0RTN   7
     C           WUDPCD    PARM WUDPCD    WQ0094  3        Dept Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0121S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUDPCD    #1DEPC           Teller Default
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DEPC    WUDPCD           Dept Code
      * Check Existance Of Dept - Department Codes  *
     C                     EXSR SCRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DEPC    ZA0025           Teller Default
      * Send message 'Department Code not found'
     C                     MOVEL'USR2823' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Teller Name
      * CASE: DTL.Teller Name is Blank
     C           #1TLNM    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TLNM    ZA0026           Teller Name
      * Send message 'Teller Name is required'
     C                     MOVEL'USR2824' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     END                             *FI
      * Block Debit indicator
      * CASE: DTL.Block Debit Ind is Blank
     C           #DBLDB    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DBLDB    ZA0027           Block Debit Ind
      * Send message 'Block Debit Ind is req'
     C                     MOVEL'USR2727' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Block Debit Ind is Valid value
     C           #DBLDB    IFEQ 'N'                        *IF
     C           #DBLDB    OREQ 'Y'
     C           #DBLDB    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DBLDB    ZA0028           Block Debit Ind
      * Send message 'Block Debit ind invalid'
     C                     MOVEL'USR2733' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Stopped Cheque indicator
      * CASE: DTL.Stopped Cheque Ind is Blank
     C           #DSTCQ    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DSTCQ    ZA0029           Stopped Cheque
      * Send message 'Stopped Cheque Ind is req'
     C                     MOVEL'USR2728' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Stopped Cheque Ind is Valid value
     C           #DSTCQ    IFEQ 'N'                        *IF
     C           #DSTCQ    OREQ 'Y'
     C           #DSTCQ    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSTCQ    ZA0030           Stopped Cheque
      * Send message 'Stopped cheque invalid'
     C                     MOVEL'USR2734' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Block credit indicator
      * CASE: DTL.Block Credit Ind is Blank
     C           #DBLCR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DBLCR    ZA0031           Block Credit In
      * Send message 'Block Credit Ind is req'
     C                     MOVEL'USR2729' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Block Credit Ind is Valid value
     C           #DBLCR    IFEQ 'N'                        *IF
     C           #DBLCR    OREQ 'Y'
     C           #DBLCR    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DBLCR    ZA0032           Block Credit In
      * Send message 'Block Credit invalid'
     C                     MOVEL'USR2735' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Cheque out of range
      * CASE: DTL.Cheque Out of Range Ind is Blank
     C           #DCQOR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DCQOR    ZA0033           Cheque Out of R
      * Send message 'Cheqe out of rnge ind req'
     C                     MOVEL'USR2730' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Cheque Out of Range Ind is Valid value
     C           #DCQOR    IFEQ 'N'                        *IF
     C           #DCQOR    OREQ 'Y'
     C           #DCQOR    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DCQOR    ZA0034           Cheque Out of R
      * Send message 'Chqe out of range invalid'
     C                     MOVEL'USR2736' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Refer Debit
      * CASE: DTL.Refer Debit Ind is Blank
     C           #DRFDR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DRFDR    ZA0035           Refer Debit Ind
      * Send message 'Refer Debit ind is req'
     C                     MOVEL'USR2731' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Refer Debit Ind is Valid value
     C           #DRFDR    IFEQ 'N'                        *IF
     C           #DRFDR    OREQ 'Y'
     C           #DRFDR    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DRFDR    ZA0036           Refer Debit Ind
      * Send message 'Refer debit invalid'
     C                     MOVEL'USR2737' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Cheque Presentered
      * CASE: DTL.Cheque Presented Ind is Blank
     C           #DCQPR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DCQPR    ZA0037           Cheque Presente
      * Send message 'Cheqe presentd ind is req'
     C                     MOVEL'USR2732' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Cheque Presented Ind is Valid value
     C           #DCQPR    IFEQ 'N'                        *IF
     C           #DCQPR    OREQ 'Y'
     C           #DCQPR    OREQ 'X'
      * Cheques Presented & Cheques Out of Range.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.Cheque Presented Ind is Yes
      *   |- c2    : DTL.Cheque Out of Range Ind is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DCQPR    IFEQ 'Y'                        *IF
     C           #DCQOR    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCQPR    ZA0038           Cheque Presente
      * Send message 'Chqe prsntd cannot be 'Y''
     C                     MOVEL'USR2767' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DCQPR    ZA0039           Cheque Presente
      * Send message 'Cheqe Presented invalid'
     C                     MOVEL'USR2738' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Refer Credit
      * CASE: DTL.Refer Credit Ind is Blank
     C           #DRFCR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DRFCR    ZA0040           Refer Credit In
      * Send message 'Refer credit ind is req'
     C                     MOVEL'USR2739' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Refer Credit Ind is Valid value
     C           #DRFCR    IFEQ 'N'                        *IF
     C           #DRFCR    OREQ 'Y'
     C           #DRFCR    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DRFCR    ZA0041           Refer Credit In
      * Send message 'Refer Credit invalid'
     C                     MOVEL'USR2740' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Teller Limit
      * CASE: DTL.Teller Limit is Blank
     C           #DTLLM    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DTLLM    ZA0042           Teller Limit
      * Send message 'Teller limit is req'
     C                     MOVEL'USR2741' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Teller Limit is Valid value
     C           #DTLLM    IFEQ 'N'                        *IF
     C           #DTLLM    OREQ 'Y'
     C           #DTLLM    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DTLLM    ZA0043           Teller Limit
      * Send message 'Teller limit invalid'
     C                     MOVEL'USR2742' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Inactive Account
      * CASE: DTL.Inactive Account is Blank
     C           #DINAC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DINAC    ZA0044           Inactive Accoun
      * Send message 'Inactive account is req'
     C                     MOVEL'USR2743' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Inactive Account is Valid value
     C           #DINAC    IFEQ 'N'                        *IF
     C           #DINAC    OREQ 'Y'
     C           #DINAC    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DINAC    ZA0045           Inactive Accoun
      * Send message 'Inactive Account invalid'
     C                     MOVEL'USR2744' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Exchange Rate
      * CASE: DTL.Exchange Rate Ind is Blank
     C           #DERAT    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DERAT    ZA0046           Exchange Rate I
      * Send message 'Exchange Rate is req'
     C                     MOVEL'USR2745' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9950  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Exchange Rate Ind is Valid value
     C           #DERAT    IFEQ 'N'                        *IF
     C           #DERAT    OREQ 'Y'
     C           #DERAT    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DERAT    ZA0047           Exchange Rate I
      * Send message 'Exchange rate invalid'
     C                     MOVEL'USR2746' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9950  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Bankrupt/Liquidation
      * CASE: DTL.Bankrupt/Liqidation Ind is Blank
     C           #DBRLQ    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DBRLQ    ZA0048           Bankrupt/Liqida
      * Send message 'Bankrupt/Liquid is req'
     C                     MOVEL'USR2747' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Bankrupt/Liqidation Ind is Valid value
     C           #DBRLQ    IFEQ 'N'                        *IF
     C           #DBRLQ    OREQ 'Y'
     C           #DBRLQ    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DBRLQ    ZA0049           Bankrupt/Liqida
      * Send message 'Bankrupt/Liquid invalid'
     C                     MOVEL'USR2748' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Branch Defferent
      * CASE: DTL.Branch Different Ind is Blank
     C           #DBRDF    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DBRDF    ZA0050           Branch Differen
      * Send message 'Branch Different is req'
     C                     MOVEL'USR2749' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9952  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Branch Different Ind is Valid value
     C           #DBRDF    IFEQ 'N'                        *IF
     C           #DBRDF    OREQ 'Y'
     C           #DBRDF    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DBRDF    ZA0051           Branch Differen
      * Send message 'Branch different invalid'
     C                     MOVEL'USR2750' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9952  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Bad Debt
      * CASE: DTL.Bad Debt Ind is Blank
     C           #DBDDT    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DBDDT    ZA0052           Bad Debt Ind
      * Send message 'Bad debt is req'
     C                     MOVEL'USR2751' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9953  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Bad Debt Ind is Valid value
     C           #DBDDT    IFEQ 'N'                        *IF
     C           #DBDDT    OREQ 'Y'
     C           #DBDDT    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DBDDT    ZA0053           Bad Debt Ind
      * Send message 'Bad debt invalid'
     C                     MOVEL'USR2752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9953  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Account Closing
      * CASE: DTL.Account Closing Ind is Blank
     C           #DACCL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DACCL    ZA0054           Account Closing
      * Send message 'Account closing is req'
     C                     MOVEL'USR2753' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9954  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Account Closing Ind is Valid value
     C           #DACCL    IFEQ 'N'                        *IF
     C           #DACCL    OREQ 'Y'
     C           #DACCL    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DACCL    ZA0055           Account Closing
      * Send message 'Account closing invalid'
     C                     MOVEL'USR2754' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9954  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Insufficient Fund
      * CASE: DTL.Insufficient Fund Ind is Blank
     C           #DINFD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DINFD    ZA0056           Insufficient Fu
      * Send message 'Insufficient fund is req'
     C                     MOVEL'USR2755' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9955  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Insufficient Fund Ind is Valid Value
     C           #DINFD    IFEQ 'N'                        *IF
     C           #DINFD    OREQ 'Y'
     C           #DINFD    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DINFD    ZA0057           Insufficient Fu
      * Send message 'Insufficient fund invalid'
     C                     MOVEL'USR2756' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9955  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Non-working Day
      * CASE: DTL.Non-working Day Ind is Blank
     C           #DNWKD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DNWKD    ZA0058           Non-working Day
      * Send message 'Non-working Day is req'
     C                     MOVEL'USR2757' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9956  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Non-working Day Ind is Valid value
     C           #DNWKD    IFEQ 'N'                        *IF
     C           #DNWKD    OREQ 'Y'
     C           #DNWKD    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DNWKD    ZA0059           Non-working Day
      * Send message 'Non-working day invalid'
     C                     MOVEL'USR2758' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9956  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Exceeding OD
      * CASE: DTL.Exceeding OD Ind is Blank
     C           #DEXOD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DEXOD    ZA0060           Exceeding OD In
      * Send message 'Exceeding OD is req'
     C                     MOVEL'USR2759' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9957  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Exceeding OD Ind is Valid value
     C           #DEXOD    IFEQ 'N'                        *IF
     C           #DEXOD    OREQ 'Y'
     C           #DEXOD    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DEXOD    ZA0061           Exceeding OD In
      * Send message 'Exceeding OD invalid'
     C                     MOVEL'USR2760' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9957  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Invalid Backvaluation
      * CASE: DTL.Invalid Backvaluation Ind is Blank
     C           #DINBV    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DINBV    ZA0062           Invalid Backval
      * Send message 'Invalid Backvaluation req'
     C                     MOVEL'USR2761' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9958  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Invalid Backvaluation Ind is Valid value
     C           #DINBV    IFEQ 'N'                        *IF
     C           #DINBV    OREQ 'Y'
     C           #DINBV    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DINBV    ZA0063           Invalid Backval
      * Send message 'Invalid Backvalu invalid'
     C                     MOVEL'USR2762' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9958  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Minimum Balance
      * CASE: DTL.Minimum Balance Ind is Blank
     C           #DMNBL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DMNBL    ZA0064           Minimum Balance
      * Send message 'Minimum balance is req'
     C                     MOVEL'USR2763' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9959  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Minimum Balance Ind is Valid value
     C           #DMNBL    IFEQ 'N'                        *IF
     C           #DMNBL    OREQ 'Y'
     C           #DMNBL    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DMNBL    ZA0065           Minimum Balance
      * Send message 'Minimum balance invalid'
     C                     MOVEL'USR2764' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9959  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * No Associated GL Code
      * CASE: DTL.No Associated GL Code Ind is Blank
     C           #DNAGL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DNAGL    ZA0066           No Associated G
      * Send message 'No assoc Gl code is req'
     C                     MOVEL'USR2765' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9960  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.No Associated GL Code Ind is Valid value
     C           #DNAGL    IFEQ 'N'                        *IF
     C           #DNAGL    OREQ 'Y'
     C           #DNAGL    OREQ 'X'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DNAGL    ZA0067           No Associated G
      * Send message 'No assoc gl code invalid'
     C                     MOVEL'USR2766' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9960  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     ZQ      50
     C           #DBLDB    CAT  #DBLCR:ZQ WUWF2L    P      Work field 2 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF2L    CAT  #DRFDR:ZQ WUWF3L    P      Work field 3 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF3L    CAT  #DRFCR:ZQ WUWF4L    P      Work field 4 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF4L    CAT  #DINAC:ZQ WUWF5L    P      Work field 5 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF5L    CAT  #DBRLQ:ZQ WUWF6L    P      Work field 6 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF6L    CAT  #DBDDT:ZQ WUWF7L    P      Work field 7 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF7L    CAT  #DINFD:ZQ WUWF8L    P      Work field 8 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF8L    CAT  #DEXOD:ZQ WUWF9L    P      Work field 9 lo
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF9L    CAT  #DMNBL:ZQ WUWF10    P      Work field 10 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF10    CAT  #DSTCQ:ZQ WUWF11    P      Work field 11 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF11    CAT  #DCQOR:ZQ WUWF12    P      Work field 12 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF12    CAT  #DCQPR:ZQ WUWF13    P      Work field 13 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF13    CAT  #DTLLM:ZQ WUWF14    P      Work field 14 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF14    CAT  #DERAT:ZQ WUWF15    P      Work field 15 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF15    CAT  #DBRDF:ZQ WUWF16    P      Work field 16 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF16    CAT  #DACCL:ZQ WUWF17    P      Work field 17 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF17    CAT  #DNWKD:ZQ WUWF18    P      Work field 18 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF18    CAT  #DINBV:ZQ WUWF19    P      Work field 19 l
     C                     Z-ADD*ZERO     ZQ      50
     C           WUWF19    CAT  #DNAGL:ZQ WUWF20    P      Work field 20 l
     C                     MOVEL*BLANK    #1OVRI           Override indica
     C                     MOVELWUWF20    #1OVRI           Override indica
      * CALC: Detail screen function fields
      * 00/Copy member SD0691RSFF - RTS Teller id file  *
     C*Teller ID edit           Calc Detail Function Flds
     C/COPY WNCPYSRC,SD0691RSFF
      * USER: Validate detail screen relations
      * 00/Copy member SD0691RVSR - RTS Teller id file  *
     C*Teller ID edit           Validate Screen Relns
     C/COPY WNCPYSRC,SD0691RVSR
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process delete request
     C   10                CAS            EDDLRQ
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * 00/Copy member SD0691RPCK - RTS Teller id file  *
     C*Teller ID edit           Process Command Keys
     C/COPY WNCPYSRC,SD0691RPCK
      * CASE: DTL.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C           W0PMD     IFEQ 'ADD'
      * Exit after successful add
     C                     MOVEL'N'       W0RPT
     C                     END
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create RTS Teller id file - RTS Teller id file  *
     C                     EXSR SDCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete RTS Teller id file - RTS Teller id file  *
     C                     EXSR SFDLRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record deleted'
     C                     MOVEL'Y2U0013' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change RTS Teller id file - RTS Teller id file  *
     C                     EXSR SHCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1TLID    IFEQ *BLANK                     Teller Identifi
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUSUC     IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     Z-ADD*ZERO     #1TLMG           Teller Menu Gro
     C                     Z-ADD*ZERO     #1CHTL           Cash Transactio
     C                     Z-ADD*ZERO     #1TLSL           Teller Security
     C                     Z-ADD*ZERO     #1NCTL           Non-Cash Trans.
     C                     Z-ADD*ZERO     #1TLTO           Teller Menu Tim
     C                     MOVEL*BLANK    #1OVRI           Override indica
     C                     Z-ADD*ZERO     #DMINB           Minimum balance
     C                     MOVEL*BLANK    #1TLPC           Teller Pass Cod
     C                     MOVEL*BLANK    #1TLBC           Teller Branch C
     C                     MOVEL*BLANK    #DTMGS           Teller Menu Gro
     C                     MOVEL*BLANK    #DCTRL           Cash Tran Limit
     C                     MOVEL*BLANK    #DTSLS           Teller security
     C                     MOVEL*BLANK    #DNCTR           Non-cash Tran L
     C                     MOVEL*BLANK    #DTMTS           Automatic time
     C                     MOVEL*BLANK    #1SPVI           Supervisor Indi
     C                     MOVEL*BLANK    #1DEPC           Teller Default
     C                     MOVEL*BLANK    #1TLNM           Teller Name
     C                     MOVEL*BLANK    #DBLDB           Block Debit Ind
     C                     MOVEL*BLANK    #DSTCQ           Stopped Cheque
     C                     MOVEL*BLANK    #DBLCR           Block Credit In
     C                     MOVEL*BLANK    #DCQOR           Cheque Out of R
     C                     MOVEL*BLANK    #DRFDR           Refer Debit Ind
     C                     MOVEL*BLANK    #DCQPR           Cheque Presente
     C                     MOVEL*BLANK    #DRFCR           Refer Credit In
     C                     MOVEL*BLANK    #DTLLM           Teller Limit
     C                     MOVEL*BLANK    #DINAC           Inactive Accoun
     C                     MOVEL*BLANK    #DERAT           Exchange Rate I
     C                     MOVEL*BLANK    #DBRLQ           Bankrupt/Liqida
     C                     MOVEL*BLANK    #DBRDF           Branch Differen
     C                     MOVEL*BLANK    #DBDDT           Bad Debt Ind
     C                     MOVEL*BLANK    #DACCL           Account Closing
     C                     MOVEL*BLANK    #DINFD           Insufficient Fu
     C                     MOVEL*BLANK    #DNWKD           Non-working Day
     C                     MOVEL*BLANK    #DEXOD           Exceeding OD In
     C                     MOVEL*BLANK    #DINBV           Invalid Backval
     C                     MOVEL*BLANK    #DMNBL           Minimum Balance
     C                     MOVEL*BLANK    #DNAGL           No Associated G
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @TELDL1 fields to screen
      *================================================================
     C                     Z-ADDFRLCD     #1LCD            Last Change Dat
     C                     MOVELFRTYLC    #1TYLC           Type of Last Ch
     C                     Z-ADDFRTLMG    #1TLMG           Teller Menu Gro
     C                     Z-ADDFRCHTL    #1CHTL           Cash Transactio
     C                     Z-ADDFRTLSL    #1TLSL           Teller Security
     C                     Z-ADDFRNCTL    #1NCTL           Non-Cash Trans.
     C                     Z-ADDFRTLTO    #1TLTO           Teller Menu Tim
     C                     MOVELFROVRI    #1OVRI           Override indica
     C                     MOVELFRTLID    #1TLID           Teller Identifi
     C                     MOVELFRTLPC    #1TLPC           Teller Pass Cod
     C                     MOVELFRTLBC    #1TLBC           Teller Branch C
     C                     MOVELFRSPVI    #1SPVI           Supervisor Indi
     C                     MOVELFRDEPC    #1DEPC           Teller Default
     C                     MOVELFRTLNM    #1TLNM           Teller Name
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP1TLID    #1TLID           Teller Identifi
      * USER: Initialize key screen
      * SD0691R footer KEY screen - RTS Teller id file  *
     C*
     C* KEY LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C* Setup footer text:
     C* F3=Previous
     C                     MOVEL'USR3345' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C*
      * 00/Copy member SD0691RIKS - RTS Teller id file  *
     C*Teller ID edit           Initialise Key Screen
     C/COPY WNCPYSRC,SD0691RIKS
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         MFIZ#2    BEGSR
      *================================================================
      * Initialise derived fields
      *================================================================
     C                     Z-ADD*ZERO     #DMINB           Minimum balance
      *================================================================
     CSR         MFEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Does record exist? - RTS Teller id file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           FRTLID           Teller Identifi
      * Move fields to key list
     C                     MOVEL#1TLID    FRTLID           Teller Identifi
     C           KRSSA     CHAIN@TELDL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2685' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * retrieve branch codes - Branch Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           A8BRCD           Branch code
      * Move fields to key list
     C                     MOVELWUBRCD    A8BRCD           Branch code
     C           KRSSB     CHAIN@A8REB0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0075' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Check Existance Of Dept - Department Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           AEDPCD           Dept Code
      * Move fields to key list
     C                     MOVELWUDPCD    AEDPCD           Dept Code
     C           KRSSC     CHAIN@AECPAN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0013' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDCRRC    BEGSR
      *================================================================
      * Create RTS Teller id file - RTS Teller id file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @TELDL0
     C                     MOVEL#1TLID    FRTLID           Teller Identifi
     C                     Z-ADDWURDNB    FRLCD            Last Change Dat
     C                     MOVEL'I'       FRTYLC           Type of Last Ch
     C                     MOVEL#1TLPC    FRTLPC           Teller Pass Cod
     C                     MOVEL#1TLNM    FRTLNM           Teller Name
     C                     MOVEL#1TLBC    FRTLBC           Teller Branch C
     C                     MOVEL#1SPVI    FRSPVI           Supervisor Indi
     C                     Z-ADD#1CHTL    FRCHTL           Cash Transactio
     C                     Z-ADD#1NCTL    FRNCTL           Non-Cash Trans.
     C                     MOVEL#1OVRI    FROVRI           Override indica
     C                     MOVEL#1DEPC    FRDEPC           Teller Default
     C                     Z-ADD#1TLMG    FRTLMG           Teller Menu Gro
     C                     Z-ADD#1TLSL    FRTLSL           Teller Security
     C                     Z-ADD#1TLTO    FRTLTO           Teller Menu Tim
      *
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'I'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy member SD0691RCBW - RTS Teller id file  *
     C*Teller ID edit           Proc Before Create - WN
     C/COPY WNCPYSRC,SD0691RCBW
     C                     END                             *FI
     C                     MOVEL#1TLID    WUTLID           Teller Identifi
      * 00/Copy member SD0691RCBU - RTS Teller id file  *
     C*Teller ID edit           Processing Before Create
     C/COPY WNCPYSRC,SD0691RCBU
     C           KLCRSD    KLIST
     C                     KFLD           FRTLID           Teller Identifi
      * Check for duplicate primary key
     C           KLCRSD    SETLL@TELDL0                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2686' W0RTN   7
      * Send message 'RTS Teller id file     EX'
     C                     MOVEL'USR2686' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
     C                     WRITE@TELDL0                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
     C                     Z-ADD1         WUNORC           No. of Records
     C                     Z-ADD1         WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SECHRC
      * DS and Accobj AOTRM1R0 - RTS Teller id file  *
     C                     CALL 'AOTRM1R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0095  7        Access Pgm Retu
     C                     PARM '*KEY   ' WQ0096  7        Option for ACCO
     C                     PARM *BLANK    WQ0097  1        RTS Teller batc
     C                     PARM *BLANK    WQ0098  3        Teller Identifi
     C                     PARM *BLANK    WQ0099  1        RTS Record type
     C           P1DTA     PARM *BLANK    UUSDY            Access obj dumm
      *
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
      * Send message 'No record on TTRNTM1'
     C                     MOVEL'USR2829' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     ROLBK
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Update next avilable Tran - RTS Teller id file  *
     C*
     C** Update next available transaction number
     C*
     C                     EXSR ZTNLU1
     C*
      * Call AOTRM2W0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM2
     C*
     C                     MOVE 'D'       RECI             RECORD ID
     C                     MOVE 'T'       TBRI             TELLER REC ID
     C                     MOVEL#1TLID    TBID             TELLER ID
     C                     MOVE '1'       RCTP             RECORD TYPE
     C                     Z-ADD1         SFTN             FIRST TRANS NO.
     C                     Z-ADD1         NATN             NEXT AVAIL.TRAN
     C                     Z-ADDRDNB      RUND             RUN DAY NUMBER
     C                     MOVE *BLANK    CCYR1            TRANS CTL CURR
     C                     MOVEL#1TLBC    TLBC             TELLER BRANCH
     C                     Z-ADDRDNB      LCD              LAST CHANGE DAT
     C                     MOVEL'I'       CHTP             TYPE OF LAST CH
     C                     Z-ADDNATN      TNLU             LAST CHANGE DAT
     C                     Z-ADD0         BITU             Last Batch Item No.                190582
     C                     Z-ADD0         TRANI            Batch Transaction Type             190582
     C                     Z-ADD0         VDATI            Batch Value Date                   190582
     C*
     C* Call AOTRM2W0
     C*
     C                     CALL 'AOTRM2W0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P2DTA                        e
     C*
      * Call AOTRM1U0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM1
     C*
     C                     ADD  3         NORE             NO OF RECORDS
     C*
     C* Call AOTRM1U0
     C*
     C                     CALL 'AOTRM1U0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM P1DTA     P1PRM 256                    e
     C*
      * Initialise paced fields - RTS Teller id file  *
     C*
     C                     Z-ADD0         @NC1
     C                     Z-ADD0         @NC2
     C                     Z-ADD0         @NC3
     C                     Z-ADD0         @NC4
     C                     Z-ADD0         @NC5
     C                     Z-ADD0         @NC6
     C                     Z-ADD0         @NC7
     C                     Z-ADD0         @NC8
     C                     Z-ADD0         @NC9
     C                     Z-ADD0         @NC10
     C                     Z-ADD0         @NC11
     C                     Z-ADD0         @NC12
     C                     Z-ADD0         @NC13
     C                     Z-ADD0         @NC14
     C                     Z-ADD0         @NC15
     C                     Z-ADD0         @NC16
     C                     Z-ADD0         @NC17
     C                     Z-ADD0         @NC18
     C                     Z-ADD0         @NC19
     C                     Z-ADD0         @NC20
     C                     Z-ADD0         @NC21
     C                     Z-ADD0         @NC22
     C                     Z-ADD0         @NC23
     C                     Z-ADD0         @NC24
     C*
     C                     Z-ADD0         @VC1
     C                     Z-ADD0         @VC2
     C                     Z-ADD0         @VC3
     C                     Z-ADD0         @VC4
     C                     Z-ADD0         @VC5
     C                     Z-ADD0         @VC6
     C                     Z-ADD0         @VC7
     C                     Z-ADD0         @VC8
     C                     Z-ADD0         @VC9
     C                     Z-ADD0         @VC10
     C                     Z-ADD0         @VC11
     C                     Z-ADD0         @VC12
     C                     Z-ADD0         @VC13
     C                     Z-ADD0         @VC14
     C                     Z-ADD0         @VC15
     C                     Z-ADD0         @VC16
     C                     Z-ADD0         @VC17
     C                     Z-ADD0         @VC18
     C                     Z-ADD0         @VC19
     C                     Z-ADD0         @VC20
     C                     Z-ADD0         @VC21
     C                     Z-ADD0         @VC22
     C                     Z-ADD0         @VC23
     C                     Z-ADD0         @VC24
     C*
     C                     MOVELVCRAX     VCRA1
     C                     MOVELVCRA1     VDRA1
     C                     MOVELVCRA1     VCAA1
     C                     MOVELVCRA1     VCKA1
     C                     MOVELVCRA1     JVCA1
     C                     MOVELVCRA1     JVDA1
     C                     MOVELVCRA1     JCAA1
     C                     MOVELVCRA1     JCKA1
     C*
     C                     MOVELNCRAX     NCRA1
     C                     MOVELNCRA1     NDRA1
     C                     MOVELNCRA1     JNCA1
     C                     MOVELNCRA1     JNDA1
     C*
      * Call AOTRM3W0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM3
     C*
     C                     MOVE 'D'       T3RECI           RECORD ID
     C                     MOVE 'T'       T3TBRI           TELLER REC ID
     C                     MOVEL#1TLID    T3TBID           TELLER ID
     C                     MOVE '2'       T3RCTP           RECORD TYPE
     C                     Z-ADD0         T3TTLU           TELLER TRANS NO.
     C                     Z-ADDRDNB      T3LCD            LAST CHANGE DAT
     C                     MOVEL'I'       T3CHTP           TYPE OF LAST CH
     C                     Z-ADDNATN      T3TNLU           LAST CHANGE DAT
     C*
     C* Call AOTRM3W0
     C*
     C                     CALL 'AOTRM3W0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P3DTA                        e
     C/COPY WNCPYSRC,SD0691RC03
     C*
      * Call AOTRM4W0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM4
     C*
     C                     MOVEL#1TLID    T4TBID           Teller Identifi
     C                     MOVE 'D'       T4RECI           RECORD ID
     C                     MOVE 'T'       T4TBRI           TELLER REC ID
     C                     MOVEL#1TLID    T4TBID           TELLER ID
     C                     MOVE '3'       T4RCTP           RECORD TYPE
     C                     Z-ADDRDNB      T4LCD            LAST CHANGE DAT
     C                     MOVEL'I'       T4CHTP           TYPE OF LAST CH
     C                     Z-ADDNATN      T4TNLU           LAST CHANGE DAT
     C*
     C* Call AOTRM4W0
     C*
     C                     CALL 'AOTRM4W0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P4DTA                        e
     C*
      * Call REC4206 - Insert - RTS Teller id file  *
     C*
     C* Call REC4206 to add file member to teller transaction
     C*
     C                     MOVEL'T'       PTBRI   1
     C                     MOVE *BLANK    RETCD   2
     C                     MOVEL#1TLID    PTLID   3        TELLER ID
     C*
     C                     SETOF                     75
     C*
     C                     CALL 'REC4206'              75
     C                     PARM           PTBRI
     C                     PARM           PTLID
     C                     PARM           RETCD
     C*
     C** If any errors on the call to REC4206, ROLLBACK.
     C*
     C           *IN75     IFEQ '1'
     C                     MOVEL'01'      RETCD
     C                     END
     C*
     C           RETCD     IFEQ '01'
     C                     ROLBK
     C                     END
     C*
     C                     END                             *FI
      * 00/Copy member SD0691RCAU - RTS Teller id file  *
     C*Teller ID edit           Processing After Create
     C/COPY WNCPYSRC,SD0691RCAU
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDTELDPD'AHFLNM           Filename
      *
     C           KLCHSE    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSE    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SEEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YARDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFDLRC    BEGSR
      *================================================================
      * Delete RTS Teller id file - RTS Teller id file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data update
     C                     MOVEL#1TLID    WUTLID           Teller Identifi
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'D'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy member SD0691RDBW - RTS Teller id file  *
     C*Teller ID edit           Proc Before Delete - WN
     C/COPY WNCPYSRC,SD0691RDBW
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Function key not allowed'
     C                     MOVEL'USR0533' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
      * 00/Copy member SD0691RDBU - RTS Teller id file  *
     C*Teller ID edit           Processing Before Delete
     C/COPY WNCPYSRC,SD0691RDBU
      * Move key fields to @TELDL0
     C                     MOVEL#1TLID    FRTLID           Teller Identifi
      *
     C           KLDLSF    KLIST
     C                     KFLD           FRTLID           Teller Identifi
     C           KLDLSF    CHAIN@TELDL0              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C           KLDLSF    SETLL@TELDL0              9091  *
     C                     GOTO SFEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     DELET@TELDL0                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF delete successful
      * USER: Processing after Data update
      * WUDELR Data Structure - SD Deleted Records File  *
     C                     MOVEL@1DBRC    WUDELR
      * Write Deleted Record - SD Deleted Records File  *
     C                     CLEARPARC
     C                     MOVEL'SDTELDPD'PAFNME           File name
     C                     MOVEL#1TLID    PALKEY           Long Key
     C                     MOVELWUDR01    PADR01           Deleted Data Re
     C                     MOVELWUDR02    PADR02           Deleted Data Re
     C                     MOVELWUDR03    PADR03           Deleted Data Re
     C                     MOVELWUDR04    PADR04           Deleted Data Re
     C                     MOVELWUDR05    PADR05           Deleted Data Re
     C                     MOVELWUDR06    PADR06           Deleted Data Re
     C                     MOVELWUDR07    PADR07           Deleted Data Re
     C                     MOVELWUDR08    PADR08           Deleted Data Re
     C                     MOVELWUDR09    PADR09           Deleted Data Re
     C                     MOVELWUDR00    PADR00           Deleted Data Re
     C                     MOVELWUDR11    PADR11           Deleted Data Re
     C                     MOVELWUDR12    PADR12           Deleted Data Re
     C                     Z-ADDWURDNB    PALCD            Last Change Dat
     C                     MOVEL'D'       PATYLC           Type of Last Ch
      *
     C                     CALL 'SD0520X'              90  Write Deleted R
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             RCD: SD Deleted
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0520X' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     Z-ADD-1        WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD1         WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SGCHRC
      * Access object AOTRM2R0 - RTS Teller id file  *
     C                     CALL 'AOTRM2R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0095  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0096  7        Option for ACCO
     C                     PARM 'T'       WQ0097  1        RTS Teller batc
     C           WUTLID    PARM WUTLID    WQ0098  3        Teller Identifi
     C                     PARM '1'       WQ0099  1        RTS Record type
     C                     PARM *BLANK    WQ0100 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM2R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C/COPY WNCPYSRC,SD0691RC04
      *
      * Check return code
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
      * Check if Teller signed-on - RTS Teller id file  *
     C*                                                                   101181
     C* Check if Teller Id is signed-on to another workstation            101181
     C           WUAPRC    IFNE '*NRF'                                    101181
     C**********           MOVE WQ0100    P2DTA                    101181 153243
     C                     MOVELWQ0100    P2DTA                           153243
     C           TWID      IFNE *BLANKS                                   101181
     C                     MOVEL'USR3213' ZAMSID                          101181
     C                     MOVE 'Y'       @ERR    1                       101181
     C                     ELSE                                           101181
     C* Check if there are outstanding transactions for teller using      101181
     C* transaction control CCY code                                      101181
     C           CCYR1     IFNE *BLANKS                                   101181
     C                     MOVEL'USR3214' ZAMSID                          101181
     C                     MOVE 'Y'       @ERR                            101181
     C                     END                                            101181
     C                     END                                            101181
      * Check if Teller Id is still defined in the User Profile                              BUG8065
      * Define keylist                                                                       BUG8065
      *                                                                                      BUG8065
     C                     MOVEL#1TLID    TLID             Teller Identifi                   BUG8065
     C           KLUSER    KLIST                                                             BUG8065
     C                     KFLD           TLID             Teller Identifi                   BUG8065
     C           KLUSER    SETLLMUSERDDF                 90*                                 BUG8065
     C           *IN90     IFEQ '1'                                                          BUG8065
     C                     MOVEL'USR4182' ZAMSID                                             BUG8065
     C                     MOVE 'Y'       @ERR                                               BUG8065
     C                     END                                                               BUG8065
     C*                                                                   101181
     C           @ERR      IFEQ 'Y'                                       101181
     C                     EXSR ZASNMS                                    101181
     C                     MOVE '1'       *IN99                           101181
     C                     MOVEL'Y2U0004' W0RTN            *Return code   101181
     C                     MOVE *BLANK    @ERR                            101181
     C                     ROLBK                                          101181
     C                     GOTO SFEXIT                                    101181
     C                     END                                            101181
     C                     END                                            101181
     C                     END                             *FI
      * Access object AOTRM3R0 - RTS Teller id file  *
     C                     CALL 'AOTRM3R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0101  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0102  7        Option for ACCO
     C                     PARM 'T'       WQ0103  1        RTS Teller batc
     C           WUTLID    PARM WUTLID    WQ0104  3        Teller Identifi
     C                     PARM '2'       WQ0105  1        RTS Record type
     C                     PARM *BLANK    WQ0106 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM3R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Check return code
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     END                             *FI
      * Access object AOTRM4R0 - RTS Teller id file  *
     C                     CALL 'AOTRM4R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0107  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0108  7        Option for ACCO
     C                     PARM 'T'       WQ0109  1        RTS Teller batc
     C           WUTLID    PARM WUTLID    WQ0110  3        Teller Identifi
     C                     PARM '3'       WQ0111  1        RTS Record type
     C                     PARM *BLANK    WQ0112 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOTRM4R0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Check return code
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Send message 'No record on M1, M2 & M3'
     C                     MOVEL'USR2830' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     ROLBK
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Update next available Tra - RTS Teller id file  *
     C*
     C** Update next available transaction number
     C*
     C                     EXSR ZTNLU1
     C*
      * Call AOTRM2U0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM2
     C*
     C                     MOVEL#1TLID    TBID             Teller Identifi
     C                     MOVE '*'       RECI             RECORD ID
     C                     MOVE 'T'       TBRI             TELLER REC ID
     C                     Z-ADDRDNB      LCD              LAST CHANGE DAT
     C                     MOVEL'D'       CHTP             TYPE OF LAST CH
     C                     Z-ADDNATN      TNLU             LAST CHANGE DAT
     C                     MOVE '1'       RCTP             RECORD TYPE
     C*
     C* Call AOTRM2U0
     C*
     C                     CALL 'AOTRM2U0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P2DTA                        e
     C*
      * Call AOTRM3U0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM3
     C*
     C                     MOVEL#1TLID    T3TBID           Teller Identifi
     C                     MOVE '*'       T3RECI           RECORD ID
     C                     MOVE 'T'       T3TBRI           TELLER REC ID
     C                     Z-ADDRDNB      T3LCD            LAST CHANGE DAT
     C                     MOVEL'D'       T3CHTP           TYPE OF LAST CH
     C                     Z-ADDNATN      T3TNLU
     C                     MOVE '2'       T3RCTP           RECORD TYPE
     C*
     C* Call AOTRM3U0
     C*
     C                     CALL 'AOTRM3U0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P3DTA
     C/COPY WNCPYSRC,SD0691RC05
     C*
      * Call AOTRM4U0 - RTS Teller id file  *
     C*
     C* Move values into file fields.
     C* TTRNTM4
     C*
     C                     MOVEL#1TLID    T4TBID           Teller Identifi
     C                     MOVE '*'       T4RECI           RECORD ID
     C                     MOVE 'T'       T4TBRI           TELLER REC ID
     C                     Z-ADDRDNB      T4LCD            LAST CHANGE DAT
     C                     MOVEL'D'       T4CHTP           TYPE OF LAST CH
     C                     Z-ADDNATN      T4TNLU           LAST CHANGE DAT
     C                     MOVE '3'       T4RCTP           RECORD TYPE
     C*
     C* Call AOTRM4U0
     C*
     C                     CALL 'AOTRM4U0'
     C           WUAPRC    PARM *BLANK    WUAPRC  7        *Return code
     C                     PARM           P4DTA
     C*
      * Call REC4208 - Delete - RTS Teller id file  *
     C*
     C* Call REC4208 to remove file member from teller transaction
     C*
     C                     MOVEL'T'       PTBRI
     C                     MOVEL#1TLID    PTLID            TELLER ID
     C                     MOVE *BLANK    RETCD
     C*
     C                     SETOF                     75
     C*
     C                     CALL 'REC4208'              75
     C                     PARM           PTBRI
     C                     PARM           PTLID
     C                     PARM           RETCD
     C*
     C** If any errors on the call to REC4208, ROLLBACK.
     C*
     C           *IN75     IFEQ '1'
     C                     MOVEL'01'      RETCD
     C                     END
     C*
     C           RETCD     IFEQ '01'
     C                     ROLBK
     C                     END
     C*
     C                     END                             *FI
      * 00/Copy member SD0691RDAU - RTS Teller id file  *
     C*Teller ID edit           Processing After Delete
     C/COPY WNCPYSRC,SD0691RDAU
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDTELDPD'AHFLNM           Filename
      *
     C           KLCHSG    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSG    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Change RTS Teller id file - RTS Teller id file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YCRDC   1
      *
      * Move key fields to @TELDL0
     C                     MOVEL#1TLID    FRTLID           Teller Identifi
      *
     C           KLCHSH    KLIST
     C                     KFLD           FRTLID           Teller Identifi
     C           KLCHSH    CHAIN@TELDL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SHEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDTELDL0               91  *
     C                     GOTO SHEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YCRDCS
      * Move non-key fields to @TELDL0
     C                     Z-ADDWURDNB    FRLCD            Last Change Dat
     C                     MOVEL'A'       FRTYLC           Type of Last Ch
     C                     MOVEL#1TLPC    FRTLPC           Teller Pass Cod
     C                     MOVEL#1TLNM    FRTLNM           Teller Name
     C                     MOVEL#1TLBC    FRTLBC           Teller Branch C
     C                     MOVEL#1SPVI    FRSPVI           Supervisor Indi
     C                     Z-ADD#1CHTL    FRCHTL           Cash Transactio
     C                     Z-ADD#1NCTL    FRNCTL           Non-Cash Trans.
     C                     MOVEL#1OVRI    FROVRI           Override indica
     C                     MOVEL#1DEPC    FRDEPC           Teller Default
     C                     Z-ADD#1TLMG    FRTLMG           Teller Menu Gro
     C                     Z-ADD#1TLSL    FRTLSL           Teller Security
     C                     Z-ADD#1TLTO    FRTLTO           Teller Menu Tim
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy member SD0691RBUW - RTS Teller id file  *
     C*Teller ID edit           Before Update, Window on
     C/COPY WNCPYSRC,SD0691RBUW
     C                     END                             *FI
      * 00/Copy member SD0691RBDU - RTS Teller id file  *
     C*Teller ID edit           Processing Before Update
     C/COPY WNCPYSRC,SD0691RBDU
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@TELDL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDTELDL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SICHRC
      * 00/Copy member SD0691RADU - RTS Teller id file  *
     C*Teller ID edit           Processing After Update
     C/COPY WNCPYSRC,SD0691RADU
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YDRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDTELDPD'AHFLNM           Filename
      *
     C           KLCHSI    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSI    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SIEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YDRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YDRDCS
     C                     MOVE 'Y'       YDRDC
     C                     END
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Get all Midas Modules - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSJ     CHAIN@BGREC8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0096' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL'SDMMODPD'ZA0068           Filename
      * Send message 'Database Error (ICD)'
     C                     MOVEL'USR0377' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO SJEXIT                     *QUIT
     C                     GOTO SJEXIT
     C                     END
      *
      * USER: Exit processing
      * PAR = DB1 By name
     C                     MOVELBGMTMI    WUMTMI           Midas/Telex Mod
     C                     MOVELBGSWFT    WUSWFT           SWIFT Funds Tra
     C                     MOVELBGSWST    WUSWST           SWIFT Securitie
     C                     MOVELBGSWCL    WUSWCL           SWIFT Customer
     C                     MOVELBGSWSL    WUSWSL           SWIFT Synd Loan
     C                     MOVELBGSWSM    WUSWSM           SWIFT Statement
     C                     MOVELBGSWDL    WUSWDL           SWIFT Dealing
     C                     MOVELBGSDGL    WUSDGL           Standing data/G
     C                     MOVELBGDLFX    WUDLFX           Dealing: FX
     C                     MOVELBGSYLN    WUSYLN           Syndicated Loan
     C                     MOVELBGEXMG    WUEXMG           Exposure Manage
     C                     MOVELBGFNMO    WUFNMO           Financial Model
     C                     MOVELBGSTRT    WUSTRT           Statutory Retur
     C                     MOVELBGCSLN    WUCSLN           Customer Lendin
     C                     MOVELBGRTBN    WURTBN           Retail Banking
     C                     MOVELBGMSDL    WUMSDL           Midas/Swift dir
     C                     MOVELBGSECS    WUSECS           Securities
     C                     MOVELBGAURC    WUAURC           Auto-reconcilia
     C                     MOVELBGBDLI    WUBDLI           Bond Dealers In
     C                     MOVELBGDRSD    WUDRSD           DRS Standing Da
     C                     MOVELBGDRCM    WUDRCM           DRS Control mod
     C                     MOVELBGDRFE    WUDRFE           DRS Foreign Exc
     C                     MOVELBGDRMM    WUDRMM           DRS Money Marke
     C                     MOVELBGDRAR    WUDRAR           DRS Arbitrage
     C                     MOVELBGFDTR    WUFDTR           Funds Transfer
     C                     MOVELBGDRCA    WUDRCA           DRS Common Appl
     C                     MOVELBGFUOP    WUFUOP           Futures & Optio
     C                     MOVELBGMTSL    WUMTSL           Midas/Telex Syn
     C                     MOVELBGMTDL    WUMTDL           Midas/Telex Dea
     C                     MOVELBGMTGL    WUMTGL           Midas/Telex Gen
     C                     MOVELBGMTCL    WUMTCL           Midas/Telex Cus
     C                     MOVELBGNWMI    WUNWMI           Message Managem
     C                     MOVELBGFIIN    WUFIIN           FRA/IRS Indicat
     C                     MOVELBGDLMM    WUDLMM           Dealing: MM
     C                     MOVELBGINCN    WUINCN           Internal Contra
     C                     MOVELBGTRMG    WUTRMG           Treasury Manage
     C                     MOVELBGRKMG    WURKMG           Interest Risk M
     C                     MOVELBGTSKY    WUTSKY           Testkey
     C                     MOVELBGMIDQ    WUMIDQ           Midas/Q
     C                     MOVELBGMFIC    WUMFIC           Microfiche
     C                     MOVELBGIOAC    WUIOAC           Interest on acc
     C                     MOVELBGWDPR    WUWDPR           Window processi
     C                     MOVELBGSARP    WUSARP           SAR's processin
     C                     MOVELBGFRIN    WUFRIN           French return i
     C                     MOVELBGLRIN    WULRIN           Lux return indi
     C                     MOVELBGDRIN    WUDRIN           Dutch return in
     C                     MOVELBGGRIN    WUGRIN           German return i
     C                     MOVELBGBRIN    WUBRIN           Belgian return
     C                     MOVELBGIRIN    WUIRIN           Italian return
     C                     MOVELBGSWEI    WUSWEI           Swift External
     C                     MOVELBGPFMG    WUPFMG           Portfolio Manag
     C                     MOVELBGCRMG    WUCRMG           Credit Manageme
     C                     MOVELBGHORP    WUHORP           Head Office Rep
     C                     MOVELBGAVBL    WUAVBL           Average Balance
     C                     MOVELBGMARG    WUMARG           Margins
     C                     MOVELBGCFMT    WUCFMT           Confirmation Ma
     C                     MOVELBGMIMX    WUMIMX           Mimix
     C                     MOVELBGRCFI    WURCFI           Report Control
     C                     MOVELBGAMIN    WUAMIN           Amps Int
     C                     MOVELBGSWRT    WUSWRT           Swiss Returns
     C                     MOVELBGFLND    WUFLND           Fiduciary Loans
     C                     MOVELBGLMCR    WULMCR           Portfolio Lendi
     C                     MOVELBGCNTX    WUCNTX           Cantonal Tax
     C                     MOVELBGSTDU    WUSTDU           Stamp Duty
     C                     MOVELBGUDRS    WUUDRS           Use DRS Shortna
     C                     MOVELBGCHDL    WUCHDL           Chips Dealing
     C                     MOVELBGCHLN    WUCHLN           Chips Lending
     C                     MOVELBGCHOB    WUCHOB           Chips Opening B
     C                     MOVELBGCHIP    WUCHIP           CHIPS
     C                     MOVELBGCHDI    WUCHDI           Chips Direct Li
     C                     MOVELBGOPDK    WUOPDK           Optical Disk
     C                     MOVELBGMBIN    WUMBIN           Multi-branching
     C                     MOVELBGNNST    WUNNST           Leo Data Nucleu
     C                     MOVELBGNOST    WUNOST           Leo Letters of
     C                     MOVELBGNPST    WUNPST           Leo Collections
     C                     MOVELBGNQST    WUNQST           Leo Bills/Finan
     C                     MOVELBGNRST    WUNRST           Leo Bankers Acc
     C                     MOVELBGNSST    WUNSST           Leo Reimburseme
     C                     MOVELBGNTST    WUNTST           Taxes
     C                     MOVELBGNUST    WUNUST           History & Audit
     C                     MOVELBGNVST    WUNVST           Management Acco
     C                     MOVELBGNWST    WUNWST           IBLC Returns
     C                     MOVELBGNXST    WUNXST           Retail 3
     C                     MOVELBGNYST    WUNYST           Interest on Acc
     C                     MOVELBGNZST    WUNZST           Midas Export Da
     C                     MOVELBGN0ST    WUN0ST           Analytical Acco
     C                     MOVELBGN1ST    WUN1ST           User Defined Co
     C                     MOVELBGN2ST    WUN2ST           Midas-Plato Int
     C                     MOVELBGN3ST    WUN3ST           Midas-Trade Inn
     C                     MOVELBGN4ST    WUN4ST           Reserved for La
     C                     MOVELBGN5ST    WUN5ST           Reserved for La
     C                     MOVELBGN6ST    WUN6ST           Reserved for La
     C                     MOVELBGN7ST    WUN7ST           Reserved for La
     C                     MOVELBGN8ST    WUN8ST           Reserved for La
     C                     MOVELBGN9ST    WUN9ST           Reserved for La
     C                     MOVELBGOAST    WUOAST           Reserved for La
     C                     MOVELBGOBST    WUOBST           Reserved for La
     C                     MOVELBGOCST    WUOCST           Reserved for La
     C                     MOVELBGODST    WUODST           Reserved for La
     C                     MOVELBGOEST    WUOEST           Reserved for La
     C                     MOVELBGOFST    WUOFST           Reserved for La
     C                     MOVELBGOGST    WUOGST           Reserved for La
     C                     MOVELBGOHST    WUOHST           Reserved for La
     C                     MOVELBGOIST    WUOIST           Reserved for La
     C                     MOVELBGOJST    WUOJST           Reserved for La
     C                     MOVELBGOKST    WUOKST           Reserved for La
     C                     MOVELBGOLST    WUOLST           Reserved for La
     C                     MOVELBGOMST    WUOMST           Reserved for La
     C                     MOVELBGONST    WUONST           Reserved for La
     C                     MOVELBGOOST    WUOOST           Reserved for La
     C                     MOVELBGOPST    WUOPST           Reserved for La
     C                     MOVELBGOQST    WUOQST           Reserved for La
     C                     MOVELBGORST    WUORST           Reserved for La
     C                     MOVELBGOSST    WUOSST           Reserved for La
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Get Base Currency - Bank Details  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           BJBANK           Bank
      * Move fields to key list
     C                     MOVE *BLANK    BJBANK           Bank
     C                     MOVEL'BANK'    BJBANK           Bank
     C           KRSSK     CHAIN@BJREEF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0197' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL'SDBANKPD'ZA0069           Filename
      * Send message 'Database Error (ICD)'
     C                     MOVEL'USR0377' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO SKEXIT                     *QUIT
     C                     GOTO SKEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBJCYCD    WUCYCD           Currency Code
     C                     END
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Get Number of Dec Places - Currency Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           A6CYCD           Currency Code
      * Move fields to key list
     C                     MOVELWUCYCD    A6CYCD           Currency Code
     C           KRSSL     CHAIN@A6REA3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0071' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SLEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     Z-ADDA6NBDP    WUNBDP           Number of Decim
     C                     END
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * 00/Copy member SD0691REPP - RTS Teller id file  *
     C*Teller ID edit           Exit Program Processing
     C/COPY WNCPYSRC,SD0691REPP
      * Fast Exit processing
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Saved Pass code
     C                     MOVEL*BLANK    WUSVPC  6
      * Define work field Menu group numeric field
     C                     Z-ADD*ZERO     WUMGNB  40
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field ZALIGN No Of Decimals
     C                     Z-ADD*ZERO     WUZAND  10
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field Validate/Warning Ind.
     C                     MOVEL*BLANK    WUVWIN 25
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUTQKF  1
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Define work field Branch code
     C                     MOVEL*BLANK    WUBRCD  3
      * Define work field Cash Tran Limit scr
     C                     MOVEL*BLANK    WUCTRL 14
      * Define work field ZALIGN No Of Digits
     C                     Z-ADD*ZERO     WUZADG  20
      * Define work field Non-cash Tran Limit scr
     C                     MOVEL*BLANK    WUNCTR 14
      * Define work field Dept Code
     C                     MOVEL*BLANK    WUDPCD  3
      * Define work field Work field 2 long
     C                     MOVEL*BLANK    WUWF2L  2
      * Define work field Work field 3 long
     C                     MOVEL*BLANK    WUWF3L  3
      * Define work field Work field 4 long
     C                     MOVEL*BLANK    WUWF4L  4
      * Define work field Work field 5 long
     C                     MOVEL*BLANK    WUWF5L  5
      * Define work field Work field 6 long
     C                     MOVEL*BLANK    WUWF6L  6
      * Define work field Work field 7 long
     C                     MOVEL*BLANK    WUWF7L  7
      * Define work field Work field 8 long
     C                     MOVEL*BLANK    WUWF8L  8
      * Define work field Work field 9 long
     C                     MOVEL*BLANK    WUWF9L  9
      * Define work field Work field 10 long
     C                     MOVEL*BLANK    WUWF10 10
      * Define work field Work field 11 long
     C                     MOVEL*BLANK    WUWF11 11
      * Define work field Work field 12 long
     C                     MOVEL*BLANK    WUWF12 12
      * Define work field Work field 13 long
     C                     MOVEL*BLANK    WUWF13 13
      * Define work field Work field 14 long
     C                     MOVEL*BLANK    WUWF14 14
      * Define work field Work field 15 long
     C                     MOVEL*BLANK    WUWF15 15
      * Define work field Work field 16 long
     C                     MOVEL*BLANK    WUWF16 16
      * Define work field Work field 17 long
     C                     MOVEL*BLANK    WUWF17 17
      * Define work field Work field 18 long
     C                     MOVEL*BLANK    WUWF18 18
      * Define work field Work field 19 long
     C                     MOVEL*BLANK    WUWF19 19
      * Define work field Work field 20 long
     C                     MOVEL*BLANK    WUWF20 20
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field Teller Identification
     C                     MOVEL*BLANK    WUTLID  3
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field Deleted Data Record Pt1
     C                     MOVEL*BLANK    WUDR01250
      * Define work field Deleted Data Record Pt2
     C                     MOVEL*BLANK    WUDR02250
      * Define work field Deleted Data Record Pt3
     C                     MOVEL*BLANK    WUDR03250
      * Define work field Deleted Data Record Pt4
     C                     MOVEL*BLANK    WUDR04250
      * Define work field Deleted Data Record Pt5
     C                     MOVEL*BLANK    WUDR05250
      * Define work field Deleted Data Record Pt6
     C                     MOVEL*BLANK    WUDR06250
      * Define work field Deleted Data Record Pt7
     C                     MOVEL*BLANK    WUDR07250
      * Define work field Deleted Data Record Pt8
     C                     MOVEL*BLANK    WUDR08250
      * Define work field Deleted Data Record Pt9
     C                     MOVEL*BLANK    WUDR09250
      * Define work field Deleted Data Record Pt10
     C                     MOVEL*BLANK    WUDR00250
      * Define work field Deleted Data Record Pt11
     C                     MOVEL*BLANK    WUDR11250
      * Define work field Deleted Data Record Pt12
     C                     MOVEL*BLANK    WUDR12250
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Midas/Telex Module Ind.
     C                     MOVEL*BLANK    WUMTMI  1
      * Define work field SWIFT Funds Transfer
     C                     MOVEL*BLANK    WUSWFT  1
      * Define work field SWIFT Securities Trading
     C                     MOVEL*BLANK    WUSWST  1
      * Define work field SWIFT Customer Lending
     C                     MOVEL*BLANK    WUSWCL  1
      * Define work field SWIFT Synd Loans (REDUN)
     C                     MOVEL*BLANK    WUSWSL  1
      * Define work field SWIFT Statements
     C                     MOVEL*BLANK    WUSWSM  1
      * Define work field SWIFT Dealing
     C                     MOVEL*BLANK    WUSWDL  1
      * Define work field Standing data/Gen.Ledger
     C                     MOVEL*BLANK    WUSDGL  1
      * Define work field Dealing: FX
     C                     MOVEL*BLANK    WUDLFX  1
      * Define work field Syndicated Loans (REDUN)
     C                     MOVEL*BLANK    WUSYLN  1
      * Define work field Exposure Management
     C                     MOVEL*BLANK    WUEXMG  1
      * Define work field Financial Modeller
     C                     MOVEL*BLANK    WUFNMO  1
      * Define work field Statutory Returns
     C                     MOVEL*BLANK    WUSTRT  1
      * Define work field Customer Lending
     C                     MOVEL*BLANK    WUCSLN  1
      * Define work field Retail Banking
     C                     MOVEL*BLANK    WURTBN  1
      * Define work field Midas/Swift direct link
     C                     MOVEL*BLANK    WUMSDL  1
      * Define work field Securities
     C                     MOVEL*BLANK    WUSECS  1
      * Define work field Auto-reconciliations
     C                     MOVEL*BLANK    WUAURC  1
      * Define work field Bond Dealers Interface
     C                     MOVEL*BLANK    WUBDLI  1
      * Define work field DRS Standing Data
     C                     MOVEL*BLANK    WUDRSD  1
      * Define work field DRS Control module
     C                     MOVEL*BLANK    WUDRCM  1
      * Define work field DRS Foreign Exchange
     C                     MOVEL*BLANK    WUDRFE  1
      * Define work field DRS Money Market
     C                     MOVEL*BLANK    WUDRMM  1
      * Define work field DRS Arbitrage
     C                     MOVEL*BLANK    WUDRAR  1
      * Define work field Funds Transfer
     C                     MOVEL*BLANK    WUFDTR  1
      * Define work field DRS Common Applications
     C                     MOVEL*BLANK    WUDRCA  1
      * Define work field Futures & Options
     C                     MOVEL*BLANK    WUFUOP  1
      * Define work field Midas/Telex Synd. Loans
     C                     MOVEL*BLANK    WUMTSL  1
      * Define work field Midas/Telex Dealing
     C                     MOVEL*BLANK    WUMTDL  1
      * Define work field Midas/Telex Gen. Ledger
     C                     MOVEL*BLANK    WUMTGL  1
      * Define work field Midas/Telex Cust. Lending
     C                     MOVEL*BLANK    WUMTCL  1
      * Define work field Message Management
     C                     MOVEL*BLANK    WUNWMI  1
      * Define work field FRA/IRS Indicator
     C                     MOVEL*BLANK    WUFIIN  1
      * Define work field Dealing: MM
     C                     MOVEL*BLANK    WUDLMM  1
      * Define work field Internal Contracts
     C                     MOVEL*BLANK    WUINCN  1
      * Define work field Treasury Management
     C                     MOVEL*BLANK    WUTRMG  1
      * Define work field Interest Risk Management
     C                     MOVEL*BLANK    WURKMG  1
      * Define work field Testkey
     C                     MOVEL*BLANK    WUTSKY  1
      * Define work field Midas/Q
     C                     MOVEL*BLANK    WUMIDQ  1
      * Define work field Microfiche
     C                     MOVEL*BLANK    WUMFIC  1
      * Define work field Interest on accounts
     C                     MOVEL*BLANK    WUIOAC  1
      * Define work field SAR's processing required
     C                     MOVEL*BLANK    WUSARP  1
      * Define work field French return indicator
     C                     MOVEL*BLANK    WUFRIN  1
      * Define work field Lux return indicator
     C                     MOVEL*BLANK    WULRIN  1
      * Define work field Dutch return indicator
     C                     MOVEL*BLANK    WUDRIN  1
      * Define work field German return indicator
     C                     MOVEL*BLANK    WUGRIN  1
      * Define work field Belgian return indicator
     C                     MOVEL*BLANK    WUBRIN  1
      * Define work field Italian return indicator
     C                     MOVEL*BLANK    WUIRIN  1
      * Define work field Swift External Interface
     C                     MOVEL*BLANK    WUSWEI  1
      * Define work field Portfolio Management
     C                     MOVEL*BLANK    WUPFMG  1
      * Define work field Credit Management.
     C                     MOVEL*BLANK    WUCRMG  1
      * Define work field Head Office Reporting
     C                     MOVEL*BLANK    WUHORP  1
      * Define work field Average Balances
     C                     MOVEL*BLANK    WUAVBL  1
      * Define work field Margins
     C                     MOVEL*BLANK    WUMARG  1
      * Define work field Confirmation Matching
     C                     MOVEL*BLANK    WUCFMT  1
      * Define work field Mimix
     C                     MOVEL*BLANK    WUMIMX  1
      * Define work field Report Control Facility
     C                     MOVEL*BLANK    WURCFI  1
      * Define work field Amps Int
     C                     MOVEL*BLANK    WUAMIN  1
      * Define work field Swiss Returns
     C                     MOVEL*BLANK    WUSWRT  1
      * Define work field Fiduciary Loans & Deposit
     C                     MOVEL*BLANK    WUFLND  1
      * Define work field Portfolio Lending
     C                     MOVEL*BLANK    WULMCR  1
      * Define work field Cantonal Tax
     C                     MOVEL*BLANK    WUCNTX  1
      * Define work field Stamp Duty
     C                     MOVEL*BLANK    WUSTDU  1
      * Define work field Use DRS Shortnames
     C                     MOVEL*BLANK    WUUDRS  1
      * Define work field Chips Dealing
     C                     MOVEL*BLANK    WUCHDL  1
      * Define work field Chips Lending
     C                     MOVEL*BLANK    WUCHLN  1
      * Define work field Chips Opening Balance
     C                     MOVEL*BLANK    WUCHOB  1
      * Define work field CHIPS
     C                     MOVEL*BLANK    WUCHIP  1
      * Define work field Chips Direct Link
     C                     MOVEL*BLANK    WUCHDI  1
      * Define work field Optical Disk
     C                     MOVEL*BLANK    WUOPDK  1
      * Define work field Leo Data Nucleus
     C                     MOVEL*BLANK    WUNNST  1
      * Define work field Leo Letters of Credit
     C                     MOVEL*BLANK    WUNOST  1
      * Define work field Leo Collections
     C                     MOVEL*BLANK    WUNPST  1
      * Define work field Leo Bills/Financing
     C                     MOVEL*BLANK    WUNQST  1
      * Define work field Leo Bankers Acceptances
     C                     MOVEL*BLANK    WUNRST  1
      * Define work field Leo Reimbursements
     C                     MOVEL*BLANK    WUNSST  1
      * Define work field Taxes
     C                     MOVEL*BLANK    WUNTST  1
      * Define work field History & Audit Facility
     C                     MOVEL*BLANK    WUNUST  1
      * Define work field Management Accounts
     C                     MOVEL*BLANK    WUNVST  1
      * Define work field IBLC Returns
     C                     MOVEL*BLANK    WUNWST  1
      * Define work field Retail 3
     C                     MOVEL*BLANK    WUNXST  1
      * Define work field Interest on Accounts 3
     C                     MOVEL*BLANK    WUNYST  1
      * Define work field Midas Export Data Module
     C                     MOVEL*BLANK    WUNZST  1
      * Define work field Analytical Accounting
     C                     MOVEL*BLANK    WUN0ST  1
      * Define work field User Defined Correspondnc
     C                     MOVEL*BLANK    WUN1ST  1
      * Define work field Midas-Plato Interface
     C                     MOVEL*BLANK    WUN2ST  1
      * Define work field Midas-Trade Innovation If
     C                     MOVEL*BLANK    WUN3ST  1
      * Define work field Reserved for Later Use 41
     C                     MOVEL*BLANK    WUN4ST  1
      * Define work field Reserved for Later Use 42
     C                     MOVEL*BLANK    WUN5ST  1
      * Define work field Reserved for Later Use 43
     C                     MOVEL*BLANK    WUN6ST  1
      * Define work field Reserved for Later Use 44
     C                     MOVEL*BLANK    WUN7ST  1
      * Define work field Reserved for Later Use 45
     C                     MOVEL*BLANK    WUN8ST  1
      * Define work field Reserved for Later Use 46
     C                     MOVEL*BLANK    WUN9ST  1
      * Define work field Reserved for Later Use 47
     C                     MOVEL*BLANK    WUOAST  1
      * Define work field Reserved for Later Use 48
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field Reserved for Later Use 49
     C                     MOVEL*BLANK    WUOCST  1
      * Define work field Reserved for Later Use 50
     C                     MOVEL*BLANK    WUODST  1
      * Define work field Reserved for Later Use 51
     C                     MOVEL*BLANK    WUOEST  1
      * Define work field Reserved for Later Use 52
     C                     MOVEL*BLANK    WUOFST  1
      * Define work field Reserved for Later Use 53
     C                     MOVEL*BLANK    WUOGST  1
      * Define work field Reserved for Later Use 54
     C                     MOVEL*BLANK    WUOHST  1
      * Define work field Reserved for Later Use 55
     C                     MOVEL*BLANK    WUOIST  1
      * Define work field Reserved for Later Use 56
     C                     MOVEL*BLANK    WUOJST  1
      * Define work field Reserved for Later Use 57
     C                     MOVEL*BLANK    WUOKST  1
      * Define work field Reserved for Later Use 58
     C                     MOVEL*BLANK    WUOLST  1
      * Define work field Reserved for Later Use 59
     C                     MOVEL*BLANK    WUOMST  1
      * Define work field Reserved for Later Use 60
     C                     MOVEL*BLANK    WUONST  1
      * Define work field Reserved for Later Use 61
     C                     MOVEL*BLANK    WUOOST  1
      * Define work field Reserved for Later Use 62
     C                     MOVEL*BLANK    WUOPST  1
      * Define work field Reserved for Later Use 63
     C                     MOVEL*BLANK    WUOQST  1
      * Define work field Reserved for Later Use 64
     C                     MOVEL*BLANK    WUORST  1
      * Define work field Reserved for Later Use 65
     C                     MOVEL*BLANK    WUOSST  1
      * Define work field Currency Code
     C                     MOVEL*BLANK    WUCYCD  3
      * Define work field Number of Decimal Places
     C                     Z-ADD*ZERO     WUNBDP  10
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW02  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW03  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW04  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW05  50       *Synon (5,0) wo
     C                     MOVEL*BLANKS   YRSW06  1        *String work fi
     C                     MOVEL*BLANKS   YRSW07  1        *String work fi
     C                     MOVEL*BLANKS   YRSW08  7        *Return code
     C                     MOVEL*BLANKS   YRSW09  1        *String work fi
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0A           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0B           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0C           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0D           *Synon (9999) w
     C                     MOVEL*BLANKS   YRSW0E  1        *String work fi
     C                     MOVEL*BLANKS   YRSW0F  1        *String work fi
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD0691R#
     C                     OPEN SDTELDL1
     C                     OPEN SDBRCHL1
     C                     OPEN SDDEPTL1
     C                     OPEN SDMMODL1
     C                     OPEN SDBANKL1
     C                     OPEN SDCURRL1
     C                     OPEN SDTELDL0
     C                     OPEN SDFCTLL0
     C                     OPEN MUSERL3                                                      BUG8065
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD0691R precompiler - RTS Teller id file  *
      * Copyright Statement 1995 - Standard Functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Get all Midas Modules - MIDAS Modules  *
     C                     EXSR SJRVGN
      * File Data DS - RTS Teller id file  *
      * Override Indicators DS - RTS function codes file  *
      * DS for packed fields - RTS Teller id file  *
      *
      * DS for access object - RTS Teller id file  *
     C                     CALL 'AOTRM1R0'             90  Access object A
     C           WUAPRC    PARM WUAPRC    WQ0095  7        Access Pgm Retu
     C                     PARM '*KEY   ' WQ0096  7        Option for ACCO
     C                     PARM *BLANK    WQ0097  1        RTS Teller batc
     C                     PARM *BLANK    WQ0098  3        Teller Identifi
     C                     PARM *BLANK    WQ0099  1        RTS Record type
     C           P1DTA     PARM *BLANK    UUSDY            Access obj dumm
      * Program mode processing
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL'ADD'     W0PMD            *Program mode
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'CHG'     W0PMD            *Program mode
     C                     END                             *FI
      * Determine the number of decimal places for base currency.
      * Get Base Currency - Bank Details  *
     C                     EXSR SKRVGN
      * Get Number of Dec Places - Currency Codes  *
     C                     EXSR SLRVGN
     C                     Z-ADDWUNBDP    WUZAND           ZALIGN No Of De
     C           13        SUB  WUZAND    WUZADG           ZALIGN No Of Di
      *                                                                                       CRT026
      ** SAR switched on check - Standard Functions                                           CRT026
      *                                                                                       CRT026
     C                     CALL 'AOSARDR0'                                                    CRT026
     C                     PARM '*BLANKS' @RTCD   7                                           CRT026
     C                     PARM '*VERIFY' @OPTN   7                                           CRT026
     C                     PARM 'CRT026'  @SARD   6                                           CRT026
     C           SCSARD    PARM SCSARD    UUSDY                                               CRT026
      *                                                                                       CRT026
     C           @RTCD     IFEQ *BLANKS                                                       CRT026
     C                     MOVE *ON       *IN65                                               CRT026
     C                     ELSE                                                               CRT026
     C                     MOVE *OFF      *IN65                                               CRT026
     C                     ENDIF                                                              CRT026
      *                                                                                       CRT026
      * ZSRSRC,RTENCPE1 - RTS Teller id file  *
      * ZSRSRC,RTENCPC1 - RTS Teller id file  *
      * ZSRSRC,ZTNLU1Z1 - RTS Teller id file  *
      * ZSRSRC,ZTNLU1Z2 - RTS Teller id file  *
      * Array for Pass code encrp - RTS Teller id file  *
      * 00/Copy member SD0691RFPG - RTS Teller id file  *
      * 00/Copy member SD0691REPG - RTS Teller id file  *
      * 00/Copy member SD0691RIPG - RTS Teller id file  *
      * 00/Copy member SD0691RCPG - RTS Teller id file  *
     C*Teller ID edit           Initialise Program C-spec
     C/COPY WNCPYSRC,SD0691RCPG
      * 00/Copy member SD0691ROPG - RTS Teller id file  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD0691RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0691RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0691RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*
     O/COPY ZSRSRC,RTENCPC1
     O* PASSCODE ENCRIPTION
     O*
     O*
     O/COPY ZSRSRC,ZTNLU1Z2
     O*
     O*Teller ID edit           Initialise Program O-spec
     O/COPY WNCPYSRC,SD0691ROPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
** ALPHANUMERIC TABLE
ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789
** ENCRIPTION CODE TABLE
SDKJFIENVQPWOCMUXZ293847501LRBAGYHT6ZSDKJ
FIENVQPWOCMUXZ293847501LRBAGYHT6ZSDKJFIEN
** @CN
00001 NNNNNNNNNNNNNNNNNNNN
