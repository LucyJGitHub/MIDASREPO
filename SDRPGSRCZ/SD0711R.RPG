     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Counterparty/transaction type maintenance')   *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD0711R - Midas SD Netting Counterparty/Transaction Types    *
      *            Maintenance                                        *
      *                                                               *
      *  Function:  This program allows the user to maintain details  *
      *             on Netting Counterparty/Transaction Types records.*
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSW037A            Date 02May05               *
      *                 BUG6198            Date 04Apr05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CSD003             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CDL002             Date 24Jan97               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  BUG6198- Cannot save new Details for CUSD (Recompile)        *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  CDL002 - FX Netting: new function.                           *
      *                                                               *
      *****************************************************************
     F*C'prty/Trans Type Mnt.   Initialise Program F-spec
     F/COPY WNCPYSRC,SD0711RFPG
     FSD0711R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Counterparty/Transaction Type Maintenance
      *
     FSDCPTTL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Counterparty/Transaction retrieval
      *
     FSDCUSTLEIF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RSQ : Midas SD Client Details By Net Flag
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDCPTTL0UF  E           K        DISK                      A    UC
     F                                              KCOMIT
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * UPD : Midas SD Counterparty/Transaction update
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     F/COPY WNCPYSRC,SDH00551
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*   Define Array for concatanating Transaction Types            *
     E                    @TT        40  2
     E*C'prty/Trans Type Mnt.   Initialise Program E-spec
     E/COPY WNCPYSRC,SD0711REPG
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I/COPY QWINDSRC,SD0710GDTA                                           S01229
     I*C'prty/Trans Type Mnt.   Initialise Program I-spec
     I/COPY WNCPYSRC,SD0711RIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDCPTTL0
      * UPD : Midas SD Counterparty/Transaction update
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                             90
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYARDCS      DS                             22
     IWUDELR      DS
     I                                        1 250 WUDR01
     I                                      251 500 WUDR02
     I                                      501 750 WUDR03
     I                                      7511000 WUDR04
     I                                     10011250 WUDR05
     I                                     12511500 WUDR06
     I                                     15011750 WUDR07
     I                                     17512000 WUDR08
     I                                     20012250 WUDR09
     I                                     22512500 WUDR00
     I                                     25012750 WUDR11
     I                                     27513000 WUDR12
      * Outward parameters
     IPARC        DS                           3064
      * RCD : Midas SD Deleted records file retrieval
      * I :  File name
     I                                        1  10 PAFNME
      * I :  Long Key
     I                                       11  60 PALKEY
      * I :  Deleted Data Record Pt1
     I                                       61 310 PADR01
      * I :  Deleted Data Record Pt2
     I                                      311 560 PADR02
      * I :  Deleted Data Record Pt3
     I                                      561 810 PADR03
      * I :  Deleted Data Record Pt4
     I                                      8111060 PADR04
      * I :  Deleted Data Record Pt5
     I                                     10611310 PADR05
      * I :  Deleted Data Record Pt6
     I                                     13111560 PADR06
      * I :  Deleted Data Record Pt7
     I                                     15611810 PADR07
      * I :  Deleted Data Record Pt8
     I                                     18112060 PADR08
      * I :  Deleted Data Record Pt9
     I                                     20612310 PADR09
      * I :  Deleted Data Record Pt10
     I                                     23112560 PADR00
      * I :  Deleted Data Record Pt11
     I                                     25612810 PADR11
      * I :  Deleted Data Record Pt12
     I                                     28113060 PADR12
      * I :  Last Change Date
     I                                    P306130630PALCD
      * I :  Type of Last Change
     I                                     30643064 PATYLC
      *
     IYBRDCS      DS                             22
     IYCRDCS      DS                             90
     IYDRDCS      DS                             22
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IYRSW0A      DS                           9999
     IYRSW0B      DS                           9999
     IYRSW0C      DS                           9999
     IYRSW0D      DS                           9999
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                              6
      * KEY: Midas SD Counterparty/Transaction retrieval
      * I : MAP Customer Number
     I                                        1   6 P1CUST
     IP2PARM      DS
      * I : MAP Action Code
     I                                        1   1 P2ANCD
     IP3PARM      DS
      * O : MAP Work Return code
     I                                        1   5 P3WRTC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'STD FTR:DTLSCR Delete/1'
      * Message data for 'STD FTR:DTLSCR New Rec/1'
      * Message data for 'STD FTR:DTLSCR New Rec/1'
      * Message data for 'Counterparty          INV'
      * Customer Number
     I                                        1   6 ZA0001
      * Message data for 'Counterparty          INV'
      * Customer Number
     I                                        1   6 ZA0002
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0003
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0004
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0005
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0006
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0007
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0008
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0009
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0010
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0011
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0012
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0013
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0014
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0015
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0016
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0017
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0018
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0019
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0020
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0021
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0022
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0023
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0024
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0025
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0026
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0027
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0028
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0029
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0030
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0031
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0032
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0033
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0034
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0035
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0036
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0037
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0038
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0039
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0040
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0041
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0042
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0043
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0044
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0045
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0046
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0047
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0048
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0049
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0050
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0051
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0052
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0053
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0054
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0055
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0056
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0057
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0058
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0059
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0060
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0061
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0062
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0063
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0064
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0065
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0066
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0067
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0068
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0069
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0070
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0071
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0072
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0073
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0074
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0075
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0076
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0077
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0078
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0079
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0080
      * Message data for 'Trans Type already input'
      * C'prty/Trns Type ScrFld01
     I                                        1   2 ZA0081
      * Message data for 'C'prty/Trans Type     INV'
      * C'prty/Trns Type ScrFldxx
     I                                        1   2 ZA0082
      * Message data for 'STD FTR:KEYSCR /1'
     I/COPY WNCPYSRC,SDH00556
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Counterpar
     C           P2ANCD    PARM           WP0001  1        Action Code
     C           P3WRTC    PARM P3WRTC    WP0002  5        Work Return cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1CUST    IFEQ *BLANK                     Customer Number
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           B6CUST           Customer Number
      * Setup key
     C                     MOVEL#1CUST    B6CUST           Customer Number
     C           KRTV      CHAIN@CPTTL1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * Verify record existence against program mode
     C           W0PMD     IFNE 'ADD'
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     9931  *
      * Send message 'Counterparty/Transctn  NF'
     C                     MOVEL'USR3131' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * 00/Copy Member SD0711RSFF - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Calc Detail Function Flds
     C/COPY WNCPYSRC,SD0711RSFF
      * USER: Initialize detail screen (existing record)
     C                     MOVELWUCSSN    #DCSSN           Customer Shortn
     C                     MOVELWUCNA1    #DCNA1           Cust. Name & Ad
      * Set up Detail Screen Footer
     C                     EXSR UASUBR                     Set up Detail S
      * Move Transaction Types to Screen fields
      * CASE: DB1.Transaction Types - CPty is Not Blank
     C           B6TYPS    IFNE *BLANK                     *IF
     C                     Z-ADD2         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT01    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD3         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT02    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD5         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT03    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD7         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT04    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD9         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT05    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD11        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT06    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD13        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT07    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD15        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT08    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD17        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT09    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD19        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT10    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD21        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT11    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD23        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT12    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD25        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT13    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD27        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT14    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD29        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT15    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD31        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT16    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD33        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT17    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD35        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT18    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD37        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT19    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW03
     C                     Z-ADD39        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00080
     C           ZQ        ORGT 00080
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTB6TYPS:ZQ #DCT20    P  90  C'prty/Trns Typ
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     END                             *FI
      * Send Warning Message when in Amend mode.
      * CASE: PAR.Action Code is Amend
     C           P2ANCD    IFEQ 'A'                        *IF
      * Send message 'C'prty/Trns Types Amd WRN'
     C                     MOVEL'USR3219' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
      * Send Warning Message when in Delete mode.
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Send message 'C'prty/Trns Types Del WRN'
     C                     MOVEL'USR3220' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
      * 00/Copy Member SD0711RISE - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Initialise Dtl Exist Rcd
     C/COPY WNCPYSRC,SD0711RISE
     C                     END
      *
     C                     ELSE
      * If record already exists, error
     C           *IN90     IFEQ '0'
     C                     SETON                     9931  *
      * Send message 'Counterparty/Transctn  EX'
     C                     MOVEL'USR3132' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
      * USER: Initialize detail screen (new record)
     C                     MOVELWUCSSN    #DCSSN           Customer Shortn
     C                     MOVELWUCNA1    #DCNA1           Cust. Name & Ad
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR New Rec/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2919' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
      * 00/Copy Member SD0711RISN - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Initialise Dtl New Rcd
     C/COPY WNCPYSRC,SD0711RISN
     C                     END
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
      * Select existing record
     C                     EXSR VACKRL
     C                     END
      * USER: Validate key screen
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : KEY.Customer Number is Blank
      *   |- c2    : KEY.Customer Number is zero
      *   '-
     C           #1CUST    IFEQ *BLANK                     *IF
     C           #1CUST    OREQ '000000'                   *OR
      * Setup message data for message
     C                     MOVEL#1CUST    ZA0001           Customer Number
      * Send message 'Counterparty          INV'
     C                     MOVEL'USR3157' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: KEY.Customer Number is Select Request
     C           #1CUST    IFEQ '?'                        *IF
      * Select Cust for FX Nettig - Client Details  *
     C                     CALL 'SD0012S'              90  Select Cust for
     C                     PARM *BLANK    W0RTN   7
     C           #1CUST    PARM #1CUST    WQ0002  6        Customer Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0012S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * If a Customer Number is not selected blank out field
      * CASE: KEY.Customer Number is Select Request
     C           #1CUST    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    #1CUST           Customer Number
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check Setlmnt Nettng Cust - Client Details  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1CUST    ZA0002           Customer Number
      * Send message 'Counterparty          INV'
     C                     MOVEL'USR3157' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD0711RVKS - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Validate Key Screen
     C/COPY WNCPYSRC,SD0711RVKS
      * Customer Number required
     C           #1CUST    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * 00/Copy Member SD0711RPKR - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Process Key Screen Rqst
     C/COPY WNCPYSRC,SD0711RPKR
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * Set-up KEY Screen Footer - Standard Functions  *
     C*
     C* KEY LINE COMMAND KEY TEXT
     C*
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
     C*
     C* Setup footer text:
     C* F3=Previous
     C                     MOVEL'USR3345' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     ELSE
      * CASE: *OTHERWISE
      * Bypass Key screen if F12 is taken at Detail screen
     C                     MOVEL*BLANK    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P3WRTC           Work Return cod
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * If delete is not pending....
      * Validate details
     C  N10                CAS            DCVLDL
     C                     END
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Initialise derived fields
     C                     EXSR MFIZ#2
      * Validate C'prty/Trns Type ScrFld01
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT01    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT01    PARM #DCT01    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld02
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT02    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT02    PARM #DCT02    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld03
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT03    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT03    PARM #DCT03    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld04
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT04    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT04    PARM #DCT04    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld05
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT05    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT05    PARM #DCT05    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld06
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT06    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT06    PARM #DCT06    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld07
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT07    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT07    PARM #DCT07    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld08
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT08    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT08    PARM #DCT08    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld09
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT09    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT09    PARM #DCT09    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld10
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT10    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT10    PARM #DCT10    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld11
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT11    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT11    PARM #DCT11    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld12
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT12    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT12    PARM #DCT12    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld13
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT13    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT13    PARM #DCT13    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld14
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT14    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT14    PARM #DCT14    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld15
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT15    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT15    PARM #DCT15    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld16
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT16    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT16    PARM #DCT16    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld17
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT17    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT17    PARM #DCT17    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld18
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT18    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT18    PARM #DCT18    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld19
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT19    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT19    PARM #DCT19    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld20
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT20    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT20    PARM #DCT20    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld21
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT21    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT21    PARM #DCT21    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld22
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT22    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT22    PARM #DCT22    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld23
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT23    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT23    PARM #DCT23    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld24
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT24    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT24    PARM #DCT24    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld25
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT25    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT25    PARM #DCT25    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld26
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT26    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT26    PARM #DCT26    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld27
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT27    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT27    PARM #DCT27    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld28
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT28    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT28    PARM #DCT28    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld29
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT29    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT29    PARM #DCT29    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld30
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT30    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT30    PARM #DCT30    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld31
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT31    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT31    PARM #DCT31    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld32
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT32    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT32    PARM #DCT32    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld33
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT33    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT33    PARM #DCT33    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld34
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT34    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT34    PARM #DCT34    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld35
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT35    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT35    PARM #DCT35    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld36
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT36    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT36    PARM #DCT36    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld37
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT37    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT37    PARM #DCT37    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld38
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT38    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT38    PARM #DCT38    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld39
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT39    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT39    PARM #DCT39    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate C'prty/Trns Type ScrFld40
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DCT40    W0NSRQ  1        C'prty/Trns Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1207501   Y2LSNO  70
     C           #DCT40    PARM #DCT40    W0EXVL 20        C'prty/Trns Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * USER: Validate detail screen fields
      * Action code is delete
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Send message 'F3/F10 Only Valid Options'
     C                     MOVEL'USR0534' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      * CASE: PAR.Action Code is Insert or Amend
     C           P2ANCD    IFEQ 'A'                        *IF
     C           P2ANCD    OREQ 'I'
     C                     Z-ADD1         WUWKNB           work number
      * Initialise Trns Typ array - Counterparty/Transctn Typ  *
     C*
     C                     MOVEA*BLANKS   @TT
     C                     MOVEA@TT       #1TYPS
      * C'prty/Trans Type 01
      * CASE: DTL.C'prty/Trns Type ScrFld01 is Blank
     C           #DCT01    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT01    IFEQ 'CX'                       *IF
     C           #DCT01    OREQ 'FP'
     C           #DCT01    OREQ 'FS'
     C           #DCT01    OREQ 'OT'
     C           #DCT01    OREQ 'PI'
     C           #DCT01    OREQ 'SI'
     C           #DCT01    OREQ 'SW'
     C                     MOVEL#DCT01    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT01    ZA0003           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT01    ZA0004           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 02
      * CASE: DTL.C'prty/Trns Type ScrFld02 is Blank
     C           #DCT02    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT02    IFEQ 'CX'                       *IF
     C           #DCT02    OREQ 'FP'
     C           #DCT02    OREQ 'FS'
     C           #DCT02    OREQ 'OT'
     C           #DCT02    OREQ 'PI'
     C           #DCT02    OREQ 'SI'
     C           #DCT02    OREQ 'SW'
     C                     MOVEL#DCT02    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT02    ZA0005           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT02    ZA0006           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 03
      * CASE: DTL.C'prty/Trns Type ScrFld03 is Blank
     C           #DCT03    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT03    IFEQ 'CX'                       *IF
     C           #DCT03    OREQ 'FP'
     C           #DCT03    OREQ 'FS'
     C           #DCT03    OREQ 'OT'
     C           #DCT03    OREQ 'PI'
     C           #DCT03    OREQ 'SI'
     C           #DCT03    OREQ 'SW'
     C                     MOVEL#DCT03    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT03    ZA0007           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT03    ZA0008           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 04
      * CASE: DTL.C'prty/Trns Type ScrFld04 is Blank
     C           #DCT04    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT04    IFEQ 'CX'                       *IF
     C           #DCT04    OREQ 'FP'
     C           #DCT04    OREQ 'FS'
     C           #DCT04    OREQ 'OT'
     C           #DCT04    OREQ 'PI'
     C           #DCT04    OREQ 'SI'
     C           #DCT04    OREQ 'SW'
     C                     MOVEL#DCT04    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT04    ZA0009           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT04    ZA0010           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 05
      * CASE: DTL.C'prty/Trns Type ScrFld05 is Blank
     C           #DCT05    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT05    IFEQ 'CX'                       *IF
     C           #DCT05    OREQ 'FP'
     C           #DCT05    OREQ 'FS'
     C           #DCT05    OREQ 'OT'
     C           #DCT05    OREQ 'PI'
     C           #DCT05    OREQ 'SI'
     C           #DCT05    OREQ 'SW'
     C                     MOVEL#DCT05    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT05    ZA0011           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT05    ZA0012           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 06
      * CASE: DTL.C'prty/Trns Type ScrFld06 is Blank
     C           #DCT06    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT06    IFEQ 'CX'                       *IF
     C           #DCT06    OREQ 'FP'
     C           #DCT06    OREQ 'FS'
     C           #DCT06    OREQ 'OT'
     C           #DCT06    OREQ 'PI'
     C           #DCT06    OREQ 'SI'
     C           #DCT06    OREQ 'SW'
     C                     MOVEL#DCT06    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT06    ZA0013           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT06    ZA0014           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 07
      * CASE: DTL.C'prty/Trns Type ScrFld07 is Blank
     C           #DCT07    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT07    IFEQ 'CX'                       *IF
     C           #DCT07    OREQ 'FP'
     C           #DCT07    OREQ 'FS'
     C           #DCT07    OREQ 'OT'
     C           #DCT07    OREQ 'PI'
     C           #DCT07    OREQ 'SI'
     C           #DCT07    OREQ 'SW'
     C                     MOVEL#DCT07    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT07    ZA0015           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT07    ZA0016           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 08
      * CASE: DTL.C'prty/Trns Type ScrFld08 is Blank
     C           #DCT08    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT08    IFEQ 'CX'                       *IF
     C           #DCT08    OREQ 'FP'
     C           #DCT08    OREQ 'FS'
     C           #DCT08    OREQ 'OT'
     C           #DCT08    OREQ 'PI'
     C           #DCT08    OREQ 'SI'
     C           #DCT08    OREQ 'SW'
     C                     MOVEL#DCT08    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT08    ZA0017           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT08    ZA0018           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 09
      * CASE: DTL.C'prty/Trns Type ScrFld09 is Blank
     C           #DCT09    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT09    IFEQ 'CX'                       *IF
     C           #DCT09    OREQ 'FP'
     C           #DCT09    OREQ 'FS'
     C           #DCT09    OREQ 'OT'
     C           #DCT09    OREQ 'PI'
     C           #DCT09    OREQ 'SI'
     C           #DCT09    OREQ 'SW'
     C                     MOVEL#DCT09    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT09    ZA0019           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT09    ZA0020           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 10
      * CASE: DTL.C'prty/Trns Type ScrFld10 is Blank
     C           #DCT10    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT10    IFEQ 'CX'                       *IF
     C           #DCT10    OREQ 'FP'
     C           #DCT10    OREQ 'FS'
     C           #DCT10    OREQ 'OT'
     C           #DCT10    OREQ 'PI'
     C           #DCT10    OREQ 'SI'
     C           #DCT10    OREQ 'SW'
     C                     MOVEL#DCT10    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT10    ZA0021           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT10    ZA0022           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 11
      * CASE: DTL.C'prty/Trns Type ScrFld11 is Blank
     C           #DCT11    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT11    IFEQ 'CX'                       *IF
     C           #DCT11    OREQ 'FP'
     C           #DCT11    OREQ 'FS'
     C           #DCT11    OREQ 'OT'
     C           #DCT11    OREQ 'PI'
     C           #DCT11    OREQ 'SI'
     C           #DCT11    OREQ 'SW'
     C                     MOVEL#DCT11    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT11    ZA0023           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT11    ZA0024           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 12
      * CASE: DTL.C'prty/Trns Type ScrFld12 is Blank
     C           #DCT12    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT12    IFEQ 'CX'                       *IF
     C           #DCT12    OREQ 'FP'
     C           #DCT12    OREQ 'FS'
     C           #DCT12    OREQ 'OT'
     C           #DCT12    OREQ 'PI'
     C           #DCT12    OREQ 'SI'
     C           #DCT12    OREQ 'SW'
     C                     MOVEL#DCT12    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT12    ZA0025           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT12    ZA0026           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 13
      * CASE: DTL.C'prty/Trns Type ScrFld13 is Blank
     C           #DCT13    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT13    IFEQ 'CX'                       *IF
     C           #DCT13    OREQ 'FP'
     C           #DCT13    OREQ 'FS'
     C           #DCT13    OREQ 'OT'
     C           #DCT13    OREQ 'PI'
     C           #DCT13    OREQ 'SI'
     C           #DCT13    OREQ 'SW'
     C                     MOVEL#DCT13    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT13    ZA0027           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT13    ZA0028           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 14
      * CASE: DTL.C'prty/Trns Type ScrFld14 is Blank
     C           #DCT14    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT14    IFEQ 'CX'                       *IF
     C           #DCT14    OREQ 'FP'
     C           #DCT14    OREQ 'FS'
     C           #DCT14    OREQ 'OT'
     C           #DCT14    OREQ 'PI'
     C           #DCT14    OREQ 'SI'
     C           #DCT14    OREQ 'SW'
     C                     MOVEL#DCT14    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT14    ZA0029           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT14    ZA0030           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 15
      * CASE: DTL.C'prty/Trns Type ScrFld15 is Blank
     C           #DCT15    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT15    IFEQ 'CX'                       *IF
     C           #DCT15    OREQ 'FP'
     C           #DCT15    OREQ 'FS'
     C           #DCT15    OREQ 'OT'
     C           #DCT15    OREQ 'PI'
     C           #DCT15    OREQ 'SI'
     C           #DCT15    OREQ 'SW'
     C                     MOVEL#DCT15    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT15    ZA0031           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT15    ZA0032           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 16
      * CASE: DTL.C'prty/Trns Type ScrFld16 is Blank
     C           #DCT16    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT16    IFEQ 'CX'                       *IF
     C           #DCT16    OREQ 'FP'
     C           #DCT16    OREQ 'FS'
     C           #DCT16    OREQ 'OT'
     C           #DCT16    OREQ 'PI'
     C           #DCT16    OREQ 'SI'
     C           #DCT16    OREQ 'SW'
     C                     MOVEL#DCT16    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT16    ZA0033           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT16    ZA0034           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 17
      * CASE: DTL.C'prty/Trns Type ScrFld17 is Blank
     C           #DCT17    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT17    IFEQ 'CX'                       *IF
     C           #DCT17    OREQ 'FP'
     C           #DCT17    OREQ 'FS'
     C           #DCT17    OREQ 'OT'
     C           #DCT17    OREQ 'PI'
     C           #DCT17    OREQ 'SI'
     C           #DCT17    OREQ 'SW'
     C                     MOVEL#DCT17    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT17    ZA0035           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT17    ZA0036           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 18
      * CASE: DTL.C'prty/Trns Type ScrFld18 is Blank
     C           #DCT18    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT18    IFEQ 'CX'                       *IF
     C           #DCT18    OREQ 'FP'
     C           #DCT18    OREQ 'FS'
     C           #DCT18    OREQ 'OT'
     C           #DCT18    OREQ 'PI'
     C           #DCT18    OREQ 'SI'
     C           #DCT18    OREQ 'SW'
     C                     MOVEL#DCT18    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT18    ZA0037           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT18    ZA0038           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 19
      * CASE: DTL.C'prty/Trns Type ScrFld19 is Blank
     C           #DCT19    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT19    IFEQ 'CX'                       *IF
     C           #DCT19    OREQ 'FP'
     C           #DCT19    OREQ 'FS'
     C           #DCT19    OREQ 'OT'
     C           #DCT19    OREQ 'PI'
     C           #DCT19    OREQ 'SI'
     C           #DCT19    OREQ 'SW'
     C                     MOVEL#DCT19    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT19    ZA0039           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT19    ZA0040           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 20
      * CASE: DTL.C'prty/Trns Type ScrFld20 is Blank
     C           #DCT20    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT20    IFEQ 'CX'                       *IF
     C           #DCT20    OREQ 'FP'
     C           #DCT20    OREQ 'FS'
     C           #DCT20    OREQ 'OT'
     C           #DCT20    OREQ 'PI'
     C           #DCT20    OREQ 'SI'
     C           #DCT20    OREQ 'SW'
     C                     MOVEL#DCT20    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT20    ZA0041           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9950  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT20    ZA0042           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9950  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 21
      * CASE: DTL.C'prty/Trns Type ScrFld21 is Blank
     C           #DCT21    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT21    IFEQ 'CX'                       *IF
     C           #DCT21    OREQ 'FP'
     C           #DCT21    OREQ 'FS'
     C           #DCT21    OREQ 'OT'
     C           #DCT21    OREQ 'PI'
     C           #DCT21    OREQ 'SI'
     C           #DCT21    OREQ 'SW'
     C                     MOVEL#DCT21    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT21    ZA0043           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT21    ZA0044           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 22
      * CASE: DTL.C'prty/Trns Type ScrFld22 is Blank
     C           #DCT22    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT22    IFEQ 'CX'                       *IF
     C           #DCT22    OREQ 'FP'
     C           #DCT22    OREQ 'FS'
     C           #DCT22    OREQ 'OT'
     C           #DCT22    OREQ 'PI'
     C           #DCT22    OREQ 'SI'
     C           #DCT22    OREQ 'SW'
     C                     MOVEL#DCT22    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT22    ZA0045           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9952  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT22    ZA0046           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9952  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 23
      * CASE: DTL.C'prty/Trns Type ScrFld23 is Blank
     C           #DCT23    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT23    IFEQ 'CX'                       *IF
     C           #DCT23    OREQ 'FP'
     C           #DCT23    OREQ 'FS'
     C           #DCT23    OREQ 'OT'
     C           #DCT23    OREQ 'PI'
     C           #DCT23    OREQ 'SI'
     C           #DCT23    OREQ 'SW'
     C                     MOVEL#DCT23    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT23    ZA0047           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9953  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT23    ZA0048           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9953  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 24
      * CASE: DTL.C'prty/Trns Type ScrFld24 is Blank
     C           #DCT24    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT24    IFEQ 'CX'                       *IF
     C           #DCT24    OREQ 'FP'
     C           #DCT24    OREQ 'FS'
     C           #DCT24    OREQ 'OT'
     C           #DCT24    OREQ 'PI'
     C           #DCT24    OREQ 'SI'
     C           #DCT24    OREQ 'SW'
     C                     MOVEL#DCT24    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT24    ZA0049           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9954  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT24    ZA0050           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9954  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 25
      * CASE: DTL.C'prty/Trns Type ScrFld25 is Blank
     C           #DCT25    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT25    IFEQ 'CX'                       *IF
     C           #DCT25    OREQ 'FP'
     C           #DCT25    OREQ 'FS'
     C           #DCT25    OREQ 'OT'
     C           #DCT25    OREQ 'PI'
     C           #DCT25    OREQ 'SI'
     C           #DCT25    OREQ 'SW'
     C                     MOVEL#DCT25    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT25    ZA0051           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9955  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT25    ZA0052           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9955  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 26
      * CASE: DTL.C'prty/Trns Type ScrFld26 is Blank
     C           #DCT26    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT26    IFEQ 'CX'                       *IF
     C           #DCT26    OREQ 'FP'
     C           #DCT26    OREQ 'FS'
     C           #DCT26    OREQ 'OT'
     C           #DCT26    OREQ 'PI'
     C           #DCT26    OREQ 'SI'
     C           #DCT26    OREQ 'SW'
     C                     MOVEL#DCT26    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT26    ZA0053           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9956  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT26    ZA0054           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9956  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 27
      * CASE: DTL.C'prty/Trns Type ScrFld27 is Blank
     C           #DCT27    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT27    IFEQ 'CX'                       *IF
     C           #DCT27    OREQ 'FP'
     C           #DCT27    OREQ 'FS'
     C           #DCT27    OREQ 'OT'
     C           #DCT27    OREQ 'PI'
     C           #DCT27    OREQ 'SI'
     C           #DCT27    OREQ 'SW'
     C                     MOVEL#DCT27    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT27    ZA0055           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9957  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT27    ZA0056           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9957  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 28
      * CASE: DTL.C'prty/Trns Type ScrFld28 is Blank
     C           #DCT28    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT28    IFEQ 'CX'                       *IF
     C           #DCT28    OREQ 'FP'
     C           #DCT28    OREQ 'FS'
     C           #DCT28    OREQ 'OT'
     C           #DCT28    OREQ 'PI'
     C           #DCT28    OREQ 'SI'
     C           #DCT28    OREQ 'SW'
     C                     MOVEL#DCT28    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT28    ZA0057           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9958  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT28    ZA0058           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9958  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 29
      * CASE: DTL.C'prty/Trns Type ScrFld29 is Blank
     C           #DCT29    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT29    IFEQ 'CX'                       *IF
     C           #DCT29    OREQ 'FP'
     C           #DCT29    OREQ 'FS'
     C           #DCT29    OREQ 'OT'
     C           #DCT29    OREQ 'PI'
     C           #DCT29    OREQ 'SI'
     C           #DCT29    OREQ 'SW'
     C                     MOVEL#DCT29    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT29    ZA0059           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9959  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT29    ZA0060           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9959  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 30
      * CASE: DTL.C'prty/Trns Type ScrFld30 is Blank
     C           #DCT30    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT30    IFEQ 'CX'                       *IF
     C           #DCT30    OREQ 'FP'
     C           #DCT30    OREQ 'FS'
     C           #DCT30    OREQ 'OT'
     C           #DCT30    OREQ 'PI'
     C           #DCT30    OREQ 'SI'
     C           #DCT30    OREQ 'SW'
     C                     MOVEL#DCT30    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT30    ZA0061           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9960  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT30    ZA0062           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9960  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 31
      * CASE: DTL.C'prty/Trns Type ScrFld31 is Blank
     C           #DCT31    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT31    IFEQ 'CX'                       *IF
     C           #DCT31    OREQ 'FP'
     C           #DCT31    OREQ 'FS'
     C           #DCT31    OREQ 'OT'
     C           #DCT31    OREQ 'PI'
     C           #DCT31    OREQ 'SI'
     C           #DCT31    OREQ 'SW'
     C                     MOVEL#DCT31    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT31    ZA0063           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9961  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT31    ZA0064           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9961  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 32
      * CASE: DTL.C'prty/Trns Type ScrFld32 is Blank
     C           #DCT32    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT32    IFEQ 'CX'                       *IF
     C           #DCT32    OREQ 'FP'
     C           #DCT32    OREQ 'FS'
     C           #DCT32    OREQ 'OT'
     C           #DCT32    OREQ 'PI'
     C           #DCT32    OREQ 'SI'
     C           #DCT32    OREQ 'SW'
     C                     MOVEL#DCT32    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT32    ZA0065           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9962  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT32    ZA0066           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9962  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 33
      * CASE: DTL.C'prty/Trns Type ScrFld33 is Blank
     C           #DCT33    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT33    IFEQ 'CX'                       *IF
     C           #DCT33    OREQ 'FP'
     C           #DCT33    OREQ 'FS'
     C           #DCT33    OREQ 'OT'
     C           #DCT33    OREQ 'PI'
     C           #DCT33    OREQ 'SI'
     C           #DCT33    OREQ 'SW'
     C                     MOVEL#DCT33    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT33    ZA0067           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9963  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT33    ZA0068           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9963  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 34
      * CASE: DTL.C'prty/Trns Type ScrFld34 is Blank
     C           #DCT34    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT34    IFEQ 'CX'                       *IF
     C           #DCT34    OREQ 'FP'
     C           #DCT34    OREQ 'FS'
     C           #DCT34    OREQ 'OT'
     C           #DCT34    OREQ 'PI'
     C           #DCT34    OREQ 'SI'
     C           #DCT34    OREQ 'SW'
     C                     MOVEL#DCT34    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT34    ZA0069           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9964  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT34    ZA0070           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9964  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 35
      * CASE: DTL.C'prty/Trns Type ScrFld35 is Blank
     C           #DCT35    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT35    IFEQ 'CX'                       *IF
     C           #DCT35    OREQ 'FP'
     C           #DCT35    OREQ 'FS'
     C           #DCT35    OREQ 'OT'
     C           #DCT35    OREQ 'PI'
     C           #DCT35    OREQ 'SI'
     C           #DCT35    OREQ 'SW'
     C                     MOVEL#DCT35    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT35    ZA0071           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9965  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT35    ZA0072           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9965  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 36
      * CASE: DTL.C'prty/Trns Type ScrFld36 is Blank
     C           #DCT36    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT36    IFEQ 'CX'                       *IF
     C           #DCT36    OREQ 'FP'
     C           #DCT36    OREQ 'FS'
     C           #DCT36    OREQ 'OT'
     C           #DCT36    OREQ 'PI'
     C           #DCT36    OREQ 'SI'
     C           #DCT36    OREQ 'SW'
     C                     MOVEL#DCT36    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT36    ZA0073           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9966  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT36    ZA0074           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9966  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 37
      * CASE: DTL.C'prty/Trns Type ScrFld37 is Blank
     C           #DCT37    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT37    IFEQ 'CX'                       *IF
     C           #DCT37    OREQ 'FP'
     C           #DCT37    OREQ 'FS'
     C           #DCT37    OREQ 'OT'
     C           #DCT37    OREQ 'PI'
     C           #DCT37    OREQ 'SI'
     C           #DCT37    OREQ 'SW'
     C                     MOVEL#DCT37    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT37    ZA0075           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9967  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT37    ZA0076           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9967  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 38
      * CASE: DTL.C'prty/Trns Type ScrFld38 is Blank
     C           #DCT38    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT38    IFEQ 'CX'                       *IF
     C           #DCT38    OREQ 'FP'
     C           #DCT38    OREQ 'FS'
     C           #DCT38    OREQ 'OT'
     C           #DCT38    OREQ 'PI'
     C           #DCT38    OREQ 'SI'
     C           #DCT38    OREQ 'SW'
     C                     MOVEL#DCT38    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT38    ZA0077           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9968  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT38    ZA0078           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9968  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 39
      * CASE: DTL.C'prty/Trns Type ScrFld39 is Blank
     C           #DCT39    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT39    IFEQ 'CX'                       *IF
     C           #DCT39    OREQ 'FP'
     C           #DCT39    OREQ 'FS'
     C           #DCT39    OREQ 'OT'
     C           #DCT39    OREQ 'PI'
     C           #DCT39    OREQ 'SI'
     C           #DCT39    OREQ 'SW'
     C                     MOVEL#DCT39    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT39    ZA0079           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9969  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT39    ZA0080           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9969  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * C'prty/Trans Type 40
      * CASE: DTL.C'prty/Trns Type ScrFld40 is Blank
     C           #DCT40    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Validate Trns Type ScrFld
      * CASE: PAR.C'prty/Trns Type ScrFldxx is Valid Transaction Type
     C           #DCT40    IFEQ 'CX'                       *IF
     C           #DCT40    OREQ 'FP'
     C           #DCT40    OREQ 'FS'
     C           #DCT40    OREQ 'OT'
     C           #DCT40    OREQ 'PI'
     C           #DCT40    OREQ 'SI'
     C           #DCT40    OREQ 'SW'
     C                     MOVEL#DCT40    WUWF2L           Work field 2 lo
     C                     MOVEL'0'       WUERFG           Error flag
      * Move Trans type to array - Counterparty/Transctn Typ  *
     C*  USER SOURCE for validation of Transaction Types input in
     C*              Counterparty/Transaction Types Maint. function.
     C*
     C*  Save value of Indicator 89; look up input value of Trans type
     C*  to see if already input;if not move Trans Type to array & move
     C*  array to Trans Type file field; reset Ind 89.
     C*
     C           *IN89     IFEQ *ON
     C                     Z-ADD1         IND89   10
     C                     ELSE
     C                     Z-ADD0         IND89
     C                     END
     C*
     C           WUWF2L    LOKUP@TT,1                    89
     C           *IN89     IFEQ *OFF
     C                     Z-ADDWUWKNB    P       20
     C                     MOVE WUWF2L    @TT,P
     C                     MOVEA@TT       #1TYPS
     C                     ELSE
     C                     MOVE '1'       WUERFG
     C                     END
     C*
     C           IND89     IFEQ 1
     C                     MOVE *ON       *IN89
     C                     ELSE
     C                     MOVE *OFF      *IN89
     C                     END
     C*
      * CASE: WRK.Error flag is No error
     C           WUERFG    IFEQ '0'                        *IF
     C                     ADD  1         WUWKNB           work number
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'2'       WUERFG           Error flag
     C                     END                             *FI
      * CASE: WRK.Error flag is Trns Type already entered
     C           WUERFG    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT40    ZA0081           C'prty/Trns Typ
      * Send message 'Trans Type already input'
     C                     MOVEL'USR3184' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9970  *
      *
     C                     ELSE
      * CASE: WRK.Error flag is Trns Type is invalid
     C           WUERFG    IFEQ '2'                        *IF
      * Setup message data for message
     C                     MOVEL#DCT40    ZA0082           C'prty/Trns Typ
      * Send message 'C'prty/Trans Type     INV'
     C                     MOVEL'USR3158' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9970  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD0711RVSF - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Validate Detail Screen
     C/COPY WNCPYSRC,SD0711RVSF
      * CALC: Detail screen function fields
      * 00/Copy Member SD0711RSFF - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Calc Detail Function Flds
     C/COPY WNCPYSRC,SD0711RSFF
      * USER: Validate detail screen relations
      * 00/Copy Member SD0711RVSR - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Validate Screen Relns
     C/COPY WNCPYSRC,SD0711RVSR
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process delete request
     C   10                CAS            EDDLRQ
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * 00/Copy Member SD0711RPCK - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Process Command Keys
     C/COPY WNCPYSRC,SD0711RPCK
     C           W0PMD     IFEQ 'ADD'
      * Exit after successful add
     C                     MOVEL'N'       W0RPT
     C                     END
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Counterparty/Trans - Counterparty/Transctn Typ  *
     C                     EXSR SBCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete Counterparty/Trans - Counterparty/Transctn Typ  *
     C                     EXSR SDDLRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record deleted'
     C                     MOVEL'Y2U0013' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Counterparty/Trans - Counterparty/Transctn Typ  *
     C                     EXSR SFCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1CUST    IFEQ *BLANK                     Customer Number
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVEL*BLANK    #PWRTC           Work Return cod
     C                     MOVEL*BLANK    #DCRNM           Customer Report
     C                     MOVELP2ANCD    #PANCD           Action Code
     C                     MOVEL*BLANK    #1TYPS           Transaction Typ
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     MOVEL*BLANK    #DCSSN           Customer Shortn
     C                     MOVEL*BLANK    #DCNA1           Cust. Name & Ad
     C                     MOVEL*BLANK    #DCT01           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT02           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT03           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT04           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT05           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT06           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT07           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT08           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT09           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT10           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT11           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT12           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT13           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT14           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT15           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT16           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT17           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT18           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT19           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT20           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT21           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT22           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT23           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT24           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT25           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT26           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT27           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT28           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT29           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT30           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT31           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT32           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT33           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT34           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT35           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT36           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT37           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT38           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT39           C'prty/Trns Typ
     C                     MOVEL*BLANK    #DCT40           C'prty/Trns Typ
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @CPTTL1 fields to screen
      *================================================================
     C                     MOVELB6TYPS    #1TYPS           Transaction Typ
     C                     Z-ADDB6LCD     #1LCD            Last Change Dat
     C                     MOVELB6TYLC    #1TYLC           Type of Last Ch
     C                     MOVELB6CUST    #1CUST           Customer Number
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVEL*BLANK    #PWRTC           Work Return cod
     C                     MOVELP2ANCD    #PANCD           Action Code
     C                     MOVELP1CUST    #1CUST           Customer Number
      * USER: Initialize key screen
      * Set up Detail Screen Footer
     C                     EXSR UBSUBR                     Set up Detail S
      * 00/Copy Member SD0711RIKS - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Initialise Key Screen
     C/COPY WNCPYSRC,SD0711RIKS
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         MFIZ#2    BEGSR
      *================================================================
      * Initialise derived fields
      *================================================================
     C                     MOVEL*BLANK    #DCRNM           Customer Report
     C                     MOVEL*BLANK    #DCSSN           Customer Shortn
     C                     MOVEL*BLANK    #DCNA1           Cust. Name & Ad
      *================================================================
     CSR         MFEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Check Setlmnt Nettng Cust - Client Details  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BBCUST           Customer Number
      * Move fields to key list
     C                     MOVEL#1CUST    BBCUST           Customer Number
     C/COPY WNCPYSRC,SDH00552
     C           KRSSA     CHAIN@CUSTLE              90    *
     C/COPY WNCPYSRC,SDH00553
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0081' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     MOVELBBCSSN    WUCSSN           Customer Shortn
     C                     MOVELBBCNA1    WUCNA1           Cust. Name & Ad
     C                     MOVELBBCRTN    WUCRTN           Customer Report
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCRRC    BEGSR
      *================================================================
      * Create Counterparty/Trans - Counterparty/Transctn Typ  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @CPTTL0
     C                     MOVEL#1CUST    B6CUST           Customer Number
     C                     MOVEL#1TYPS    B6TYPS           Transaction Typ
     C                     Z-ADDWURDNB    B6LCD            Last Change Dat
     C                     MOVEL'I'       B6TYLC           Type of Last Ch
      *
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'I'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD0711RCBW - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Proc Before Create - WN
     C/COPY WNCPYSRC,SD0711RCBW
     C                     END                             *FI
      * 00/Copy Member SD0711RCBU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing Before Create
     C/COPY WNCPYSRC,SD0711RCBU
     C           KLCRSB    KLIST
     C                     KFLD           B6CUST           Customer Number
      * Check for duplicate primary key
     C           KLCRSB    SETLL@CPTTL0                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3132' W0RTN   7
      * Send message 'Counterparty/Transctn  EX'
     C                     MOVEL'USR3132' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     END
      *
     C                     WRITE@CPTTL0                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
     C                     Z-ADD1         WUNORC           No. of Records
     C                     Z-ADD1         WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SCCHRC
      * 00/Copy Member SD0711RCAU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing After Create
     C/COPY WNCPYSRC,SD0711RCAU
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDCPTTPD'AHFLNM           Filename
      *
     C           KLCHSC    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSC    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SCEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YARDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDDLRC    BEGSR
      *================================================================
      * Delete Counterparty/Trans - Counterparty/Transctn Typ  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data update
      * CASE: PAR.Action Code is Delete
     C           #PANCD    IFEQ 'D'                        *IF
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'D'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD0711RDBW - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Proc Before Delete - WN
     C/COPY WNCPYSRC,SD0711RDBW
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Function key not allowed'
     C                     MOVEL'USR0533' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
      * 00/Copy Member SD0711RDBU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing Before Delete
     C/COPY WNCPYSRC,SD0711RDBU
      * Move key fields to @CPTTL0
     C                     MOVEL#1CUST    B6CUST           Customer Number
      *
     C           KLDLSD    KLIST
     C                     KFLD           B6CUST           Customer Number
     C           KLDLSD    CHAIN@CPTTL0              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C           KLDLSD    SETLL@CPTTL0              9091  *
     C                     GOTO SDEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     DELET@CPTTL0                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF delete successful
      * USER: Processing after Data update
      * WUDELR Data Structure - SD Deleted Records File  *
     C                     MOVEL@1DBRC    WUDELR
      * Write Deleted Record - SD Deleted Records File  *
     C                     CLEARPARC
     C                     MOVEL'SDCPTTPD'PAFNME           File name
     C                     MOVEL#1CUST    PALKEY           Long Key
     C                     MOVELWUDR01    PADR01           Deleted Data Re
     C                     MOVELWUDR02    PADR02           Deleted Data Re
     C                     MOVELWUDR03    PADR03           Deleted Data Re
     C                     MOVELWUDR04    PADR04           Deleted Data Re
     C                     MOVELWUDR05    PADR05           Deleted Data Re
     C                     MOVELWUDR06    PADR06           Deleted Data Re
     C                     MOVELWUDR07    PADR07           Deleted Data Re
     C                     MOVELWUDR08    PADR08           Deleted Data Re
     C                     MOVELWUDR09    PADR09           Deleted Data Re
     C                     MOVELWUDR00    PADR00           Deleted Data Re
     C                     MOVELWUDR11    PADR11           Deleted Data Re
     C                     MOVELWUDR12    PADR12           Deleted Data Re
     C                     Z-ADDWURDNB    PALCD            Last Change Dat
     C                     MOVEL'D'       PATYLC           Type of Last Ch
      *
     C                     CALL 'SD0520X'              90  Write Deleted R
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             RCD: SD Deleted
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0520X' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     Z-ADD-1        WUNORC           No. of Records
     C                     Z-ADD1         WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SECHRC
      * 00/Copy Member SD0711RDAU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing After Delete
     C/COPY WNCPYSRC,SD0711RDAU
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDCPTTPD'AHFLNM           Filename
      *
     C           KLCHSE    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSE    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SEEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Change Counterparty/Trans - Counterparty/Transctn Typ  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YCRDC   1
      *
      * Move key fields to @CPTTL0
     C                     MOVEL#1CUST    B6CUST           Customer Number
      *
     C           KLCHSF    KLIST
     C                     KFLD           B6CUST           Customer Number
     C           KLCHSF    CHAIN@CPTTL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SFEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDCPTTL0               91  *
     C                     GOTO SFEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YCRDCS
      * Move non-key fields to @CPTTL0
     C                     MOVEL#1TYPS    B6TYPS           Transaction Typ
     C                     Z-ADDWURDNB    B6LCD            Last Change Dat
     C                     MOVEL'A'       B6TYLC           Type of Last Ch
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD0711RBUW - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Before Update, Window on
     C/COPY WNCPYSRC,SD0711RBUW
     C                     END                             *FI
      * 00/Copy Member SD0711RBDU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing Before Update
     C/COPY WNCPYSRC,SD0711RBDU
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@CPTTL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDCPTTL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD1         WUNOAM           No. of Amends
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SGCHRC
      * 00/Copy Member SD0711RADU - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Processing After Update
     C/COPY WNCPYSRC,SD0711RADU
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YDRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDCPTTPD'AHFLNM           Filename
      *
     C           KLCHSG    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSG    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YDRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YDRDCS
     C                     MOVE 'Y'       YDRDC
     C                     END
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Get 'Window required' ind - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSH     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUWDPR           Window processi
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Set up Detail Screen Footer
      *================================================================
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR Delete/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2921' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR New Rec/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2919' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Set up Detail Screen Footer
      *================================================================
      * Setup message data for message
      * Retrieve message STD FTR:KEYSCR /1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2918' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1CUST    WK1X01  1
     C           WK1X01    IFEQ '?'                        Customer Number
     C                     CALL 'SDD4SRR'              90  Select Counterp
     C                     PARM *BLANK    W0RTN   7
     C           #1CUST    PARM #1CUST    WQ0001  6        Customer Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDD4SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'SDGAE1R' W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * 00/Copy Member SD0711REPP - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Exit Program Processing
     C/COPY WNCPYSRC,SD0711REPP
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL*BLANK    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P3WRTC           Work Return cod
     C                     MOVEL*BLANK    P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    P3WRTC           Work Return cod
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Customer Shortname
     C                     MOVEL*BLANK    WUCSSN 10
      * Define work field Cust. Name & Address 1
     C                     MOVEL*BLANK    WUCNA1 35
      * Define work field STD FTR 1
     C                     MOVEL*BLANK    WUSFT1 78
      * Define work field Customer Report Town
     C                     MOVEL*BLANK    WUCRTN 10
      * Define work field work number
     C                     Z-ADD*ZERO     WUWKNB  50
      * Define work field Error flag
     C                     MOVEL*BLANK    WUERFG  1
      * Define work field Work field 2 long
     C                     MOVEL*BLANK    WUWF2L  2
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field Deleted Data Record Pt1
     C                     MOVEL*BLANK    WUDR01250
      * Define work field Deleted Data Record Pt2
     C                     MOVEL*BLANK    WUDR02250
      * Define work field Deleted Data Record Pt3
     C                     MOVEL*BLANK    WUDR03250
      * Define work field Deleted Data Record Pt4
     C                     MOVEL*BLANK    WUDR04250
      * Define work field Deleted Data Record Pt5
     C                     MOVEL*BLANK    WUDR05250
      * Define work field Deleted Data Record Pt6
     C                     MOVEL*BLANK    WUDR06250
      * Define work field Deleted Data Record Pt7
     C                     MOVEL*BLANK    WUDR07250
      * Define work field Deleted Data Record Pt8
     C                     MOVEL*BLANK    WUDR08250
      * Define work field Deleted Data Record Pt9
     C                     MOVEL*BLANK    WUDR09250
      * Define work field Deleted Data Record Pt10
     C                     MOVEL*BLANK    WUDR00250
      * Define work field Deleted Data Record Pt11
     C                     MOVEL*BLANK    WUDR11250
      * Define work field Deleted Data Record Pt12
     C                     MOVEL*BLANK    WUDR12250
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW02  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW03  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW04  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW05  50       *Synon (5,0) wo
     C                     MOVEL*BLANKS   YRSW06  1        *String work fi
     C                     MOVEL*BLANKS   YRSW07  1        *String work fi
     C                     MOVEL*BLANKS   YRSW08  7        *Return code
     C                     MOVEL*BLANKS   YRSW09  1        *String work fi
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0A           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0B           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0C           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0D           *Synon (9999) w
     C                     MOVEL*BLANKS   YRSW0E  1        *String work fi
     C                     MOVEL*BLANKS   YRSW0F  1        *String work fi
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD0711R#
     C                     OPEN SDCPTTL1
     C/COPY WNCPYSRC,SDH00554
     C                     OPEN SDCUSTLE
     C/COPY WNCPYSRC,SDH00555
     C                     OPEN SDMMODL1
     C                     OPEN SDCPTTL0
     C                     OPEN SDFCTLL0
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD0711R Precompiler - Counterparty/Transctn Typ  *
      * Copyright Statement 1996 - Standard Functions  *
      * Define array for Trns Typ - Counterparty/Transctn Typ  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Get 'Window required' ind - MIDAS Modules  *
     C                     EXSR SHRVGN
      * C'prty/Trns Type Data Str - Counterparty/Transctn Typ  *
      * Program mode.
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL'ADD'     W0PMD            *Program mode
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'CHG'     W0PMD            *Program mode
     C                     END                             *FI
      * 00/Copy Member SD0711RIPG - Counterparty/Transctn Typ  *
      * 00/Copy Member SD0711RFPG - Counterparty/Transctn Typ  *
      * 00/Copy Member SD0711REPG - Counterparty/Transctn Typ  *
      * 00/Copy Member SD0711RCPG - Counterparty/Transctn Typ  *
     C*C'prty/Trans Type Mnt.   Initialise Program C-spec
     C/COPY WNCPYSRC,SD0711RCPG
      * 00/Copy Member SD0711ROPG - Counterparty/Transctn Typ  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD0711RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0711RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD0711RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*C'prty/Trans Type Mnt.   Initialise Program O-spec
     O/COPY WNCPYSRC,SD0711ROPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
