     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD CI transaction type maintenance')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD1220R - Cashier Interface Transaction Types Maintenance    *
      *                                                               *
      *  Function:  This program maintains CI Transaction Types       *
      *             records.                                          *
      *                                                               *
      *  Called By: SD1220D - Display CI Transaction Types            *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      * Midas Release 4.01 -------------------------------------------*
      *  Prev Amend No. CRT005             Date 09Aug01               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CSD003             Date 27Oct97               *
      *                 CRT003             Date 24Jun96               *
      *                                                               *
      *-------------------------------------------------------------- *
      *                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CRT005 - Cashier Enhancement for Cash In/Cash Out            *
      *           Recompiled                                          *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  CRT003 - Cashier Interface.                                  *
      *           Creation of new function.                           *
      *                                                               *
      *****************************************************************
     F*BAI Trans Types Maint    Initialise Program F-spec
     F/COPY WNCPYSRC,SD1221RFPG
     FSD1221R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Cashier Intr Transaction Type Maintenance
      *
     FSDBAITL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : BAI Transaction Types    on Type Retrieval index
      *
     FSDFNCDL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas SD RTS function codes file retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDBAIIL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * RTV : BAI ICD                  ce ICD Retrieval index
      *
     FSDBAITL0UF  E           K        DISK                      A    UC
     F                                              KCOMIT
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * UPD : BAI Transaction Types    ction Type Update index
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0005
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*BAI Trans Types Maint    Initialise Program E-spec
     E/COPY WNCPYSRC,SD1221REPG
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I/COPY QWINDSRC,SD1220GDTA                                           S01229
     I*BAI Trans Types Maint    Initialise Program I-spec
     I/COPY WNCPYSRC,SD1221RIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDBAITL0
      * UPD : BAI Transaction Types    ction Type Update index
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                             80
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYARDCS      DS                             22
     IWUDELR      DS
     I                                        1 250 WUDR01
     I                                      251 500 WUDR02
     I                                      501 750 WUDR03
     I                                      7511000 WUDR04
     I                                     10011250 WUDR05
     I                                     12511500 WUDR06
     I                                     15011750 WUDR07
     I                                     17512000 WUDR08
     I                                     20012250 WUDR09
     I                                     22512500 WUDR00
     I                                     25012750 WUDR11
     I                                     27513000 WUDR12
      * Outward parameters
     IPARC        DS                           3064
      * RCD : Midas SD Deleted records file retrieval
      * I :  File name
     I                                        1  10 PAFNME
      * I :  Long Key
     I                                       11  60 PALKEY
      * I :  Deleted Data Record Pt1
     I                                       61 310 PADR01
      * I :  Deleted Data Record Pt2
     I                                      311 560 PADR02
      * I :  Deleted Data Record Pt3
     I                                      561 810 PADR03
      * I :  Deleted Data Record Pt4
     I                                      8111060 PADR04
      * I :  Deleted Data Record Pt5
     I                                     10611310 PADR05
      * I :  Deleted Data Record Pt6
     I                                     13111560 PADR06
      * I :  Deleted Data Record Pt7
     I                                     15611810 PADR07
      * I :  Deleted Data Record Pt8
     I                                     18112060 PADR08
      * I :  Deleted Data Record Pt9
     I                                     20612310 PADR09
      * I :  Deleted Data Record Pt10
     I                                     23112560 PADR00
      * I :  Deleted Data Record Pt11
     I                                     25612810 PADR11
      * I :  Deleted Data Record Pt12
     I                                     28113060 PADR12
      * I :  Last Change Date
     I                                    P306130630PALCD
      * I :  Type of Last Change
     I                                     30643064 PATYLC
      *
     IYBRDCS      DS                             22
     IYCRDCS      DS                             80
     IYDRDCS      DS                             22
     IA@CPY       DS
      * Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IYRSW0A      DS                           9999
     IYRSW0B      DS                           9999
     IYRSW0C      DS                           9999
     IYRSW0D      DS                           9999
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
     IID0005      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             10
      * KEY: BAI Transaction Types    on Type Retrieval index
      * I : RST BAI Transaction Type
     I                                        1  10 P1BAIT
     IP2PARM      DS
      * I : MAP Action Code
     I                                        1   1 P2ANCD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'STD FTR:DTLSCR Delete/1'
      * Message data for 'STD FTR:DTLSCR New Rec/1'
      * Message data for 'STD FTR:DTLSCR New Rec/1'
      * Message data for 'Cshier Intf Trans Typ Inv'
      * BAI Transaction Type
     I                                        1  10 ZA0001
      * Message data for 'Cshier Intf Trans Typ Inv'
      * BAI Transaction Type
     I                                        1  10 ZA0002
      * Message data for 'Cshier Intf Trans Typ Inv'
      * BAI Transaction Type
     I                                        1  10 ZA0003
      * Message data for 'Cshier Intf Trans Typ Inv'
      * BAI Transaction Type
     I                                        1  10 ZA0004
      * Message data for 'BAI Transaction Types  EX'
      * BAI Transaction Type
     I                                        1  10 ZA0005
      * Message data for 'STD FTR:KEYSCR /1'
      * Message data for 'Trans Type Desc       REQ'
      * BAI Transaction Type Desc
     I                                        1  30 ZA0006
      * Message data for 'Trans Type Func Code  REQ'
      * Tran Type Function Code
     I                                        1   3 ZA0007
      * Message data for 'Trans Type Func Code INV'
      * Tran Type Function Code
     I                                        1   3 ZA0008
      * Message data for 'Data Queue fr Process REQ'
      * Data Queue for Process
     I                                        1  10 ZA0009
      * Message data for 'Pgm's Data Queue lgth REQ'
      * Pgm's data Queue Length
     I                                    P   1   30ZA0010
      * Message data for 'Reversl Function Code REQ'
      * Reversal Function Code
     I                                        1   3 ZA0011
      * Message data for 'Reversal Functn Code INV'
      * Reversal Function Code
     I                                        1   3 ZA0012
      * Message data for 'Reversal Data Queue   REQ'
      * Reversal Data Queue
     I                                        1  10 ZA0013
      * Message data for 'Rev Data Queue Length REQ'
      * Reversal Data Queue Lngth
     I                                    P   1   30ZA0014
      * Message data for 'STD FTR:KEYSCR /1'
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: BAI Transa
     C           P2ANCD    PARM           WP0001  1        Action Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1BAIT    IFEQ *BLANK                     BAI Transaction
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           FXBAIT           BAI Transaction
      * Setup key
     C                     MOVEL#1BAIT    FXBAIT           BAI Transaction
     C           KRTV      CHAIN@BAITL1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * Verify record existence against program mode
     C           W0PMD     IFNE 'ADD'
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     9931  *
      * Send message 'BAI Transaction Types  NF'
     C                     MOVEL'USR2896' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * 00/Copy Member SD1221RSFF - BAI Transaction Types  *
     C*BAI Trans Types Maint    Calc Detail Function Flds
     C/COPY WNCPYSRC,SD1221RSFF
      * USER: Initialize detail screen (existing record)
      * Set up Detail Screen Footer
     C                     EXSR UASUBR                     Set up Detail S
      * 00/copy Member SD1221RISE - BAI Transaction Types  *
     C*BAI Trans Types Maint    Initialise Dtl Exist Rcd
     C/COPY WNCPYSRC,SD1221RISE
     C                     END
      *
     C                     ELSE
      * If record already exists, error
     C           *IN90     IFEQ '0'
     C                     SETON                     9931  *
      * Send message 'BAI Transaction Types  EX'
     C                     MOVEL'USR2897' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
      * USER: Initialize detail screen (new record)
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR New Rec/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2919' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
      * 00/Copy Member SD1221RISN - BAI Transaction Types  *
     C*BAI Trans Types Maint    Initialise Dtl New Rcd
     C/COPY WNCPYSRC,SD1221RISN
     C                     END
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
      * Select existing record
     C                     EXSR VACKRL
     C                     END
      * USER: Validate key screen
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * Test for leading blanks
     C                     Z-ADD1         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUWFLD    P  90  work field 1A
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * CASE: WRK.work field 1A is Blank
     C           WUWFLD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1BAIT    ZA0001           BAI Transaction
      * Send message 'Cshier Intf Trans Typ Inv'
     C                     MOVEL'USR3051' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Retail Banking Product on ICD is 'CASHIER 8'
      * CASE: WRK.Retail Banking Hall Prod is CASHIER 8
     C           WUPROD    IFEQ @CN,01                     *IF
      * If 'CASHIER 8' is on ICD, Trans Type must be a mnemonic 5 long,
      *   - 1st two must be 'SP', next three cannot be blank.
      *   - embedded blanks are invalid.
     C                     Z-ADD5         YRSW03
     C                     Z-ADD6         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUWF5L    P  90  Work field 5 lo
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * CASE: WRK.Work field 5 long is Not Blank
     C           WUWF5L    IFNE *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1BAIT    ZA0002           BAI Transaction
      * Send message 'Cshier Intf Trans Typ Inv'
     C                     MOVEL'USR3051' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD2         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUWSP2    P  90  Test Cash Int T
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * CASE: WRK.Test Cash Int Trns Typ SP is Not equal to 'SP'
     C           WUWSP2    IFNE 'SP'                       *IF
      * Setup message data for message
     C                     MOVEL#1BAIT    ZA0003           BAI Transaction
      * Send message 'Cshier Intf Trans Typ Inv'
     C                     MOVEL'USR3051' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD1         YRSW03
     C                     Z-ADD3         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUPSN3    P  90  Work Field Posi
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD4         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUPSN4    P  90  Work field Posi
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW03
     C                     Z-ADD5         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1BAIT:ZQ WUPSN5    P  90  Work field Posi
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : WRK.Work Field Position 3 is Blank
      *   |- c2    : WRK.Work field Position 4 is Blank
      *   |- c3    : WRK.Work field Position 5 is Blank
      *   '-
     C           WUPSN3    IFEQ *BLANK                     *IF
     C           WUPSN4    OREQ *BLANK                     *OR
     C           WUPSN5    OREQ *BLANK                     *OR
      * Setup message data for message
     C                     MOVEL#1BAIT    ZA0004           BAI Transaction
      * Send message 'Cshier Intf Trans Typ Inv'
     C                     MOVEL'USR3051' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Retrieve BAI Trans Type - BAI Transaction Types  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
      * Setup message data for message
     C                     MOVEL#1BAIT    ZA0005           BAI Transaction
      * Send message 'BAI Transaction Types  EX'
     C                     MOVEL'USR2897' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD1221RVKS - BAI Transaction Types  *
     C*BAI Trans Types Maint    Validate Key Screen
     C/COPY WNCPYSRC,SD1221RVKS
      * BAI Transaction Type required
     C           #1BAIT    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * 00/Copy Member SD1221RPKR - BAI Transaction Types  *
     C*BAI Trans Types Maint    Process Key Screen Rqst
     C/COPY WNCPYSRC,SD1221RPKR
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * Setup Footer
      * Setup message data for message
      * Retrieve message STD FTR:KEYSCR /1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2918' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
     C                     ELSE
      * CASE: *OTHERWISE
      * Bypass Key screen if F12 is taken at Detail screen
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * If delete is not pending....
      * Validate details
     C  N10                CAS            DCVLDL
     C                     END
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * USER: Validate detail screen fields
      * Action code is delete
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Send message 'F3/F10 Only Valid Options'
     C                     MOVEL'USR0534' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      * Transaction Type Description
      * CASE: DTL.BAI Transaction Type Desc is Blank
     C           #1TXDS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TXDS    ZA0006           BAI Transaction
      * Send message 'Trans Type Desc       REQ'
     C                     MOVEL'USR3110' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Transaction Type Function Code
      * CASE: DTL.Tran Type Function Code is Blank
     C           #1TTFC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TTFC    ZA0007           Tran Type Funct
      * Send message 'Trans Type Func Code  REQ'
     C                     MOVEL'USR3052' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Tran Type Function Code is Question Mark
     C           #1TTFC    IFEQ '?'                        *IF
      * Select RTS Code - RTS function codes file  *
     C                     CALL 'SD0680S'              90  Select RTS Func
     C                     PARM *BLANK    W0RTN   7
     C           #1TTFC    PARM #1TTFC    WQ0002  3        Function Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0680S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
      * If a Function Code is not selected blank out field
      * CASE: DTL.Tran Type Function Code is Question Mark
     C           #1TTFC    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    #1TTFC           Tran Type Funct
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check RTS Function Code - RTS function codes file  *
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1TTFC    ZA0008           Tran Type Funct
      * Send message 'Trans Type Func Code INV'
     C                     MOVEL'USR2998' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Data Queue for Process
      * CASE: DTL.Data Queue for Process is Blank
     C           #1DQNM    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1DQNM    ZA0009           Data Queue for
      * Send message 'Data Queue fr Process REQ'
     C                     MOVEL'USR3053' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
      * Extract first 6 characters of Data Queue for Process
      * for comparison with Draft Issue Pgm from ICD
     C                     Z-ADD6         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBST#1DQNM:ZQ WUDQP6    P  90  Data Q for Proc
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * Pgm's Data Queue Length
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.Data Q for Process (1-6) EQ WRK.Draft Issue Pgm
      *   |- c2    : DTL.Pgm's data Queue Length is Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUDQP6    IFEQ WUDIP6                     *IF
     C           #1DQLN    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Pgm's data Queue Length is Zero
     C           #1DQLN    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#1DQLN    ZA0010           Pgm's data Queu
      * Send message 'Pgm's Data Queue lgth REQ'
     C                     MOVEL'USR3054' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Reversal Function Code
      * CASE: DTL.Reversal Function Code is Blank
     C           #1RVFN    IFEQ *BLANK                     *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DTL.Reversal Data Queue is Not Blank
      *   |- c2    : DTL.Reversal Data Queue Lngth is Not Zero
      *   '-
     C           #1RVDQ    IFNE *BLANK                     *IF
     C           #1RVDL    ORNE *ZERO                      *OR
      * Reversal function Code must be entered if Reversal Data Queue &/o
      * have been entered.
      * Setup message data for message
     C                     MOVEL#1RVFN    ZA0011           Reversal Functi
      * Send message 'Reversl Function Code REQ'
     C                     MOVEL'USR3055' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Reversal Function Code is Question Mark
     C           #1RVFN    IFEQ '?'                        *IF
      * Select RTS Code - RTS function codes file  *
     C                     CALL 'SD0680S'              90  Select RTS Func
     C                     PARM *BLANK    W0RTN   7
     C           #1RVFN    PARM #1RVFN    WQ0003  3        Function Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0680S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
      * If a Function Code is not selected blank out field
      * CASE: DTL.Reversal Function Code is Question Mark
     C           #1RVFN    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    #1RVFN           Reversal Functi
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check RTS Function Code - RTS function codes file  *
     C                     EXSR SCRVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1RVFN    ZA0012           Reversal Functi
      * Send message 'Reversal Functn Code INV'
     C                     MOVEL'USR2999' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Reversal Data Queue
      * CASE: DTL.Reversal Data Queue is Blank
     C           #1RVDQ    IFEQ *BLANK                     *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DTL.Reversal Function Code is Not Blank
      *   |- c2    : DTL.Reversal Data Queue Lngth is Not Zero
      *   '-
     C           #1RVFN    IFNE *BLANK                     *IF
     C           #1RVDL    ORNE *ZERO                      *OR
      * Reversal Data Queue must be entered if Reversal Function Code &/o
      * Queue Length have been entered.
      * Setup message data for message
     C                     MOVEL#1RVDQ    ZA0013           Reversal Data Q
      * Send message 'Reversal Data Queue   REQ'
     C                     MOVEL'USR3056' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Reversal Data Queue Length
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.Data Q for Process (1-6) EQ WRK.Draft Issue Pgm
      *   |- c2    : DTL.Reversal Data Queue Lngth is Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUDQP6    IFEQ WUDIP6                     *IF
     C           #1RVDL    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Reversal Data Queue Lngth is Zero
     C           #1RVDL    IFEQ *ZERO                      *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DTL.Reversal Data Queue is Not Blank
      *   |- c2    : DTL.Reversal Function Code is Not Blank
      *   '-
     C           #1RVDQ    IFNE *BLANK                     *IF
     C           #1RVFN    ORNE *BLANK                     *OR
      * Reversal Data Queue Length must be entered if Reversal Data Queue
      * Reversal Function Code have been entered.
      * Setup message data for message
     C                     Z-ADD#1RVDL    ZA0014           Reversal Data Q
      * Send message 'Rev Data Queue Length REQ'
     C                     MOVEL'USR3057' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD1221RVSF - BAI Transaction Types  *
     C*BAI Trans Types Maint    Validate Detail Screen
     C/COPY WNCPYSRC,SD1221RVSF
      * CALC: Detail screen function fields
      * 00/Copy Member SD1221RSFF - BAI Transaction Types  *
     C*BAI Trans Types Maint    Calc Detail Function Flds
     C/COPY WNCPYSRC,SD1221RSFF
      * USER: Validate detail screen relations
      * 00/Copy Member SD1221RVSR - BAI Transaction Types  *
     C*BAI Trans Types Maint    Validate Screen Relns
     C/COPY WNCPYSRC,SD1221RVSR
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process delete request
     C   10                CAS            EDDLRQ
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * 00/Copy Member SD1221RPCK - BAI Transaction Types  *
     C*BAI Trans Types Maint    Process Command Keys
     C/COPY WNCPYSRC,SD1221RPCK
     C           W0PMD     IFEQ 'ADD'
      * Exit after successful add
     C                     MOVEL'N'       W0RPT
     C                     END
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Branch Auto Int Tr - BAI Transaction Types  *
     C                     EXSR SDCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete BAI Transactn Type - BAI Transaction Types  *
     C                     EXSR SFDLRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record deleted'
     C                     MOVEL'Y2U0013' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Branch Auto Int Tr - BAI Transaction Types  *
     C                     EXSR SHCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1BAIT    IFEQ *BLANK                     BAI Transaction
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP2ANCD    #PANCD           Action Code
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     MOVEL*BLANK    #1TXDS           BAI Transaction
     C                     MOVEL*BLANK    #1TTFC           Tran Type Funct
     C                     MOVEL*BLANK    #1DQNM           Data Queue for
     C                     Z-ADD*ZERO     #1DQLN           Pgm's data Queu
     C                     MOVEL*BLANK    #1RVFN           Reversal Functi
     C                     MOVEL*BLANK    #1RVDQ           Reversal Data Q
     C                     Z-ADD*ZERO     #1RVDL           Reversal Data Q
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BAITL1 fields to screen
      *================================================================
     C                     Z-ADDFXLCD     #1LCD            Last Change Dat
     C                     MOVELFXTYLC    #1TYLC           Type of Last Ch
     C                     MOVELFXBAIT    #1BAIT           BAI Transaction
     C                     MOVELFXTXDS    #1TXDS           BAI Transaction
     C                     MOVELFXTTFC    #1TTFC           Tran Type Funct
     C                     MOVELFXDQNM    #1DQNM           Data Queue for
     C                     Z-ADDFXDQLN    #1DQLN           Pgm's data Queu
     C                     MOVELFXRVFN    #1RVFN           Reversal Functi
     C                     MOVELFXRVDQ    #1RVDQ           Reversal Data Q
     C                     Z-ADDFXRVDL    #1RVDL           Reversal Data Q
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP2ANCD    #PANCD           Action Code
     C                     MOVELP1BAIT    #1BAIT           BAI Transaction
      * USER: Initialize key screen
      * Set up Detail Screen Footer
     C                     EXSR UBSUBR                     Set up Detail S
      * 00/Copy Member SD1221RIKS - BAI Transaction Types  *
     C*BAI Trans Types Maint    Initialise Key Screen
     C/COPY WNCPYSRC,SD1221RIKS
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Retrieve BAI Trans Type - BAI Transaction Types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           FXBAIT           BAI Transaction
      * Move fields to key list
     C                     MOVEL#1BAIT    FXBAIT           BAI Transaction
     C           KRSSA     CHAIN@BAITL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2896' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Check RTS Function Code - RTS function codes file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           FQFNCD           Function Code
      * Move fields to key list
     C                     MOVEL#1TTFC    FQFNCD           Function Code
     C           KRSSB     CHAIN@FNCDL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2683' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Check RTS Function Code - RTS function codes file  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           FQFNCD           Function Code
      * Move fields to key list
     C                     MOVEL#1RVFN    FQFNCD           Function Code
     C           KRSSC     CHAIN@FNCDL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2683' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDCRRC    BEGSR
      *================================================================
      * Create Branch Auto Int Tr - BAI Transaction Types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @BAITL0
     C                     MOVEL#1BAIT    FXBAIT           BAI Transaction
     C                     MOVEL#1TXDS    FXTXDS           BAI Transaction
     C                     MOVEL#1TTFC    FXTTFC           Tran Type Funct
     C                     MOVEL#1DQNM    FXDQNM           Data Queue for
     C                     Z-ADD#1DQLN    FXDQLN           Pgm's data Queu
     C                     MOVEL#1RVFN    FXRVFN           Reversal Functi
     C                     MOVEL#1RVDQ    FXRVDQ           Reversal Data Q
     C                     Z-ADD#1RVDL    FXRVDL           Reversal Data Q
     C                     Z-ADDWURDNB    FXLCD            Last Change Dat
     C                     MOVEL'I'       FXTYLC           Type of Last Ch
      *
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'I'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD1221RCBW - BAI Transaction Types  *
     C*BAI Trans Types Maint    Proc Before Create - WN
     C/COPY WNCPYSRC,SD1221RCBW
     C                     END                             *FI
      * 00/Copy Member SD1221RCBU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing Before Create
     C/COPY WNCPYSRC,SD1221RCBU
     C           KLCRSD    KLIST
     C                     KFLD           FXBAIT           BAI Transaction
      * Check for duplicate primary key
     C           KLCRSD    SETLL@BAITL0                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2897' W0RTN   7
      * Send message 'BAI Transaction Types  EX'
     C                     MOVEL'USR2897' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SDEXIT
     C                     END
      *
     C                     WRITE@BAITL0                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
     C                     Z-ADD1         WUNORC           No. of Records
     C                     Z-ADD1         WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SECHRC
      * 00/Copy member SD1221RCAU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing After Create
     C/COPY WNCPYSRC,SD1221RCAU
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDBAITPD'AHFLNM           Filename
      *
     C           KLCHSE    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSE    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SEEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YARDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFDLRC    BEGSR
      *================================================================
      * Delete BAI Transactn Type - BAI Transaction Types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data update
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'D'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD1221RDBW - BAI Transaction Types  *
     C*BAI Trans Types Maint    Proc Before Delete - WN
     C/COPY WNCPYSRC,SD1221RDBW
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Function key not allowed'
     C                     MOVEL'USR0533' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
      * 00/Copy member SD1221RDBU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing Before Delete
     C/COPY WNCPYSRC,SD1221RDBU
      * Move key fields to @BAITL0
     C                     MOVEL#1BAIT    FXBAIT           BAI Transaction
      *
     C           KLDLSF    KLIST
     C                     KFLD           FXBAIT           BAI Transaction
     C           KLDLSF    CHAIN@BAITL0              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C           KLDLSF    SETLL@BAITL0              9091  *
     C                     GOTO SFEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     DELET@BAITL0                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * DBF delete successful
      * USER: Processing after Data update
      * WUDELR Data Structure - SD Deleted Records File  *
     C                     MOVEL@1DBRC    WUDELR
      * Write Deleted Record - SD Deleted Records File  *
     C                     CLEARPARC
     C                     MOVEL'SDBAITPD'PAFNME           File name
     C                     MOVEL#1BAIT    PALKEY           Long Key
     C                     MOVELWUDR01    PADR01           Deleted Data Re
     C                     MOVELWUDR02    PADR02           Deleted Data Re
     C                     MOVELWUDR03    PADR03           Deleted Data Re
     C                     MOVELWUDR04    PADR04           Deleted Data Re
     C                     MOVELWUDR05    PADR05           Deleted Data Re
     C                     MOVELWUDR06    PADR06           Deleted Data Re
     C                     MOVELWUDR07    PADR07           Deleted Data Re
     C                     MOVELWUDR08    PADR08           Deleted Data Re
     C                     MOVELWUDR09    PADR09           Deleted Data Re
     C                     MOVELWUDR00    PADR00           Deleted Data Re
     C                     MOVELWUDR11    PADR11           Deleted Data Re
     C                     MOVELWUDR12    PADR12           Deleted Data Re
     C                     Z-ADDWURDNB    PALCD            Last Change Dat
     C                     MOVEL'D'       PATYLC           Type of Last Ch
      *
     C                     CALL 'SD0520X'              90  Write Deleted R
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             RCD: SD Deleted
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0520X' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     Z-ADD-1        WUNORC           No. of Records
     C                     Z-ADD1         WUNODL           No. of Deletes
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SGCHRC
      * 00/Copy member SD1221RDAU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing After Delete
     C/COPY WNCPYSRC,SD1221RDAU
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDBAITPD'AHFLNM           Filename
      *
     C           KLCHSG    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSG    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Change Branch Auto Int Tr - BAI Transaction Types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YCRDC   1
      *
      * Move key fields to @BAITL0
     C                     MOVEL#1BAIT    FXBAIT           BAI Transaction
      *
     C           KLCHSH    KLIST
     C                     KFLD           FXBAIT           BAI Transaction
     C           KLCHSH    CHAIN@BAITL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SHEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDBAITL0               91  *
     C                     GOTO SHEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YCRDCS
      * Move non-key fields to @BAITL0
     C                     MOVEL#1TXDS    FXTXDS           BAI Transaction
     C                     MOVEL#1TTFC    FXTTFC           Tran Type Funct
     C                     MOVEL#1DQNM    FXDQNM           Data Queue for
     C                     Z-ADD#1DQLN    FXDQLN           Pgm's data Queu
     C                     MOVEL#1RVFN    FXRVFN           Reversal Functi
     C                     MOVEL#1RVDQ    FXRVDQ           Reversal Data Q
     C                     Z-ADD#1RVDL    FXRVDL           Reversal Data Q
     C                     Z-ADDWURDNB    FXLCD            Last Change Dat
     C                     MOVEL'A'       FXTYLC           Type of Last Ch
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SHEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy Member SD1221RBUW - BAI Transaction Types  *
     C*BAI Trans Types Maint    Before Update, Window on
     C/COPY WNCPYSRC,SD1221RBUW
     C                     END                             *FI
      * 00/Copy Member SD1221RBDU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing Before Update
     C/COPY WNCPYSRC,SD1221RBDU
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YCRDCS
     C                     MOVE 'Y'       YCRDC
     C                     END
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@BAITL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDBAITL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD1         WUNOAM           No. of Amends
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SICHRC
      * 00/Copy member SD1221RADU - BAI Transaction Types  *
     C*BAI Trans Types Maint    Processing After Update
     C/COPY WNCPYSRC,SD1221RADU
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YDRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDBAITPD'AHFLNM           Filename
      *
     C           KLCHSI    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSI    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SIEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YDRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YDRDCS
     C                     MOVE 'Y'       YDRDC
     C                     END
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Get 'Window required' ind - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSJ     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUWDPR           Window processi
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Check 'Cashier 8' BAI ICD - BAI ICD  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           FUBAII           BAI ICD Record
      * Move fields to key list
     C                     MOVE *BLANK    FUBAII           BAI ICD Record
     C                     MOVEL'BAI'     FUBAII           BAI ICD Record
     C           KRSSK     CHAIN@BAIIL1              90    *
      * Data record not found
     C   90                MOVEL'USR2890' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELFUPROD    WUPROD           Retail Banking
     C                     END
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Get Draft Issuance Pgm - BAI ICD  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           FUBAII           BAI ICD Record
      * Move fields to key list
     C                     MOVE *BLANK    FUBAII           BAI ICD Record
     C                     MOVEL'BAII'    FUBAII           BAI ICD Record
     C           KRSSL     CHAIN@BAIIL1              90    *
      * Data record not found
     C   90                MOVEL'USR2890' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELFUDISP    WUDISP           Draft Issue Pgm
     C                     END
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Set up Detail Screen Footer
      *================================================================
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR Delete/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2921' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Retrieve message STD FTR:DTLSCR New Rec/1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2919' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Set up Detail Screen Footer
      *================================================================
      * Setup message data for message
      * Retrieve message STD FTR:KEYSCR /1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2918' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           WUSFT1    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Move to Single Footer - Standard Functions  *
     C                     MOVELWUSFT1    ##CTX1                          S01229
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1BAIT    WK1X01  1
     C           WK1X01    IFEQ '?'                        BAI Transaction
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1BAIT' defaulted for 'BAI Transaction Type'.
     C                     CALL 'SD1220S'              90  Select BAI Tran
     C                     PARM *BLANK    W0RTN   7
     C           #1BAIT    PARM #1BAIT    WQ0001 10        BAI Transaction
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD1220S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'SDLXE1R' W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * 00/Copy Member SD1221REPP - BAI Transaction Types  *
     C*BAI Trans Types Maint    Exit Program Processing
     C/COPY WNCPYSRC,SD1221REPP
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field STD FTR 1
     C                     MOVEL*BLANK    WUSFT1 78
      * Define work field work field 1A
     C                     MOVEL*BLANK    WUWFLD  1
      * Define work field Retail Banking Hall Prod
     C                     MOVEL*BLANK    WUPROD 10
      * Define work field Work field 5 long
     C                     MOVEL*BLANK    WUWF5L  5
      * Define work field Test Cash Int Trns Typ SP
     C                     MOVEL*BLANK    WUWSP2  2
      * Define work field Work Field Position 3
     C                     MOVEL*BLANK    WUPSN3  1
      * Define work field Work field Position 4
     C                     MOVEL*BLANK    WUPSN4  1
      * Define work field Work field Position 5
     C                     MOVEL*BLANK    WUPSN5  1
      * Define work field Data Q for Process (1-6)
     C                     MOVEL*BLANK    WUDQP6  6
      * Define work field Draft Issue Pgm  (1-6)
     C                     MOVEL*BLANK    WUDIP6  6
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field Deleted Data Record Pt1
     C                     MOVEL*BLANK    WUDR01250
      * Define work field Deleted Data Record Pt2
     C                     MOVEL*BLANK    WUDR02250
      * Define work field Deleted Data Record Pt3
     C                     MOVEL*BLANK    WUDR03250
      * Define work field Deleted Data Record Pt4
     C                     MOVEL*BLANK    WUDR04250
      * Define work field Deleted Data Record Pt5
     C                     MOVEL*BLANK    WUDR05250
      * Define work field Deleted Data Record Pt6
     C                     MOVEL*BLANK    WUDR06250
      * Define work field Deleted Data Record Pt7
     C                     MOVEL*BLANK    WUDR07250
      * Define work field Deleted Data Record Pt8
     C                     MOVEL*BLANK    WUDR08250
      * Define work field Deleted Data Record Pt9
     C                     MOVEL*BLANK    WUDR09250
      * Define work field Deleted Data Record Pt10
     C                     MOVEL*BLANK    WUDR00250
      * Define work field Deleted Data Record Pt11
     C                     MOVEL*BLANK    WUDR11250
      * Define work field Deleted Data Record Pt12
     C                     MOVEL*BLANK    WUDR12250
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Draft Issue Pgm
     C                     MOVEL*BLANK    WUDISP 10
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW02  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW03  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW04  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW05  50       *Synon (5,0) wo
     C                     MOVEL*BLANKS   YRSW06  1        *String work fi
     C                     MOVEL*BLANKS   YRSW07  1        *String work fi
     C                     MOVEL*BLANKS   YRSW08  7        *Return code
     C                     MOVEL*BLANKS   YRSW09  1        *String work fi
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0A           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0B           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0C           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0D           *Synon (9999) w
     C                     MOVEL*BLANKS   YRSW0E  1        *String work fi
     C                     MOVEL*BLANKS   YRSW0F  1        *String work fi
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD1221R#
     C                     OPEN SDBAITL1
     C                     OPEN SDFNCDL1
     C                     OPEN SDMMODL1
     C                     OPEN SDBAIIL1
     C                     OPEN SDBAITL0
     C                     OPEN SDFCTLL0
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD1221R Precompiler - BAI Transaction Types  *
      * Copyright Statement 1996 - Standard Functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Get 'Window required' ind - MIDAS Modules  *
     C                     EXSR SJRVGN
      * BAI Trans Type Data Strc - BAI Transaction Types  *
      * Program mode.
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL'ADD'     W0PMD            *Program mode
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'CHG'     W0PMD            *Program mode
     C                     END                             *FI
      * Check 'Cashier 8' BAI ICD - BAI ICD  *
     C                     EXSR SKRVGN
      * Retrieve Draft Issuance Program from Cashier Intf ICD
      * CASE: PAR.Action Code is Insert or Amend
     C           P2ANCD    IFEQ 'A'                        *IF
     C           P2ANCD    OREQ 'I'
      * Get Draft Issuance Pgm - BAI ICD  *
     C                     EXSR SLRVGN
      * Extract first 6 characters for use in validation of Max & Min No
     C                     Z-ADD6         YRSW03
     C                     Z-ADD1         ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00010
     C           ZQ        ORGT 00010
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTWUDISP:ZQ WUDIP6    P  90  Draft Issue Pgm
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     END                             *FI
      * 00/Copy Member SD1221RIPG - BAI Transaction Types  *
      * 00/Copy Member SD1221RFPG - BAI Transaction Types  *
      * 00/Copy Member SD1221REPG - BAI Transaction Types  *
      * 00/Copy Member SD1221RCPG - BAI Transaction Types  *
     C*BAI Trans Types Maint    Initialise Program C-spec
     C/COPY WNCPYSRC,SD1221RCPG
      * 00/Copy Member SD1221ROPG - BAI Transaction Types  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD1221RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD1221RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD1221RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*BAI Trans Types Maint    Initialise Program O-spec
     O/COPY WNCPYSRC,SD1221ROPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2001
** @CN
00001 CASHIER 8
