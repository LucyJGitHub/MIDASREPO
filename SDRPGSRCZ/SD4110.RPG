     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD BTS process DPTMVD')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Standing Data module                                 *
     F*                                                               *
     F*  SD4110 - BTS Process DPTMVD                                  *
     F*                                                               *
     F*  Called By: SDC4100 - BTS COB Control Component               *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD031             Date 10Apr06               *
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 CGL029             Date 01Sep03               *
      *                 222727             Date 05Nov03               *
      * Midas Release 4.01.01 ----------------------------------------*
      *                 207006             Date 18Jun02               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.02 -----------------------------------------------*
      *                 CSE015             Date 06Dec99               *
      *                 CSE017             Date 20Oct99               *
      *                 CSE012             Date 16Aug99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CSD004             Date 12Mar99               *
      *                 CAP003             Date 17May98               *
     F*                 S01411             DATE 05MAY93               *
     F*                                    DATE ddmmmyy               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  222727 - Release 5.0 errors  (Recompile)                     *
      *  207006 - Add Counterparty & Market Centre to SSI (Recompile) *
      *  CSE015 - Forward Valued Depot Movements (Recompile)          *
      *  CSE017 - Cum/Ex Indicator on Depot Movements (Recompile)     *
      *  CSE012 - SE Depot Movement Narratives (Recompiled).          *
     F*  CSD004 - Report split by business entity                     *
     F*  CAP003 - Conversion of SE inputs into modular structure to   *
     F*           use as APIs. Recompiled to adopt changes in DPTMVD. *
     F*  S01411 - New program for Business Transaction Statistics     *
     F*           Switchable Feature.                                 *
     F*                                                               *
     F*****************************************************************
     F**---------------------------------------------------------------
     F**  STANDARD SUB-ROUTINES
     F*----------------------------------------------------------------
     F*   Count  -  Counts Number of Live records and Inserts
     F*   Output -  Writes a record to PF/SDBTDMPD
     F*   Liverc -  Determines if record is live
     F*----------------------------------------------------------------
     F**  FUNCTION OF INDICATORS
     F*
     F*  01       End of file PF/DPTMVD
     F*  02       In date is after out date
     F*  U7 & U8  Standard database error indicators
     F*  LR       Last Record - End of Program
     F**---------------------------------------------------------------
      *
      * Transaction file to be processed
      *
     F***********DPTMVD  IF  E           K        DISK                    CSD004
     FDPTMB   IF  E           K        DISK                               CSD004
      *                                                                   CSD004
      * Business Transaction Statistics temporary file
      * for todays data
      *
     FSDBTDMPDO   E                    DISK
      *
      /EJECT
      *
      ** Array containing Copyright statement
      *
     E                    CPY@    1   1 80
      *
      /SPACE 3
      *
      ** Local data area for database error details
      *
     ILDA       E DSLDA                         256
      *
      *
      ** Program Status Data Structure - gives Job/Workstation name and
      ** User ID
      *
     IPSDS       SDS
      *
     I                                      244 253 JOB
     I                                      244 246 WSID
     I                                      254 263 USER
      *
      * Define layout of SDBANKPD for AOBANKR0 call return string
      *
     ISDBANK    E DSSDBANKPD
      *
      * Define Access Object Branch detail                                CSD004
      *                                                                   CSD004
     ISDBRCH    E DSSDBRCHPD                                              CSD004
      *
      * Define Access Object call output string
      *
     I@FMT      E DSDSFDY
      *                                                                                       CGL029
     IDSSDY     E DSDSSDY                                                                     CGL029
      *                                                                                       CGL029
      *
      /EJECT
      *****************************************************************
      *                                                               *
      * Program Initiation Processing:                                *
      *                                                               *
      * Sets up the copyright statement.                              *
      * Obtains rundate.                                              *
      *                                                               *
      *****************************************************************
      *
      ** Define LDA
      *
     C           *NAMVAR   DEFN           LDA
      *
      ** Set up copyright parameter
      *
     C                     MOVEACPY@      BIS@   80
      *
      ** Obtain rundate from SDBANKPD
      *
     C                     MOVEL'*FIRST ' BANKOP  7
      *
     C                     CALL 'AOBANKR0'
     C                     PARM *BLANKS   BANKRC  7        Return code
     C                     PARM           BANKOP           Option
     C           SDBANK    PARM SDBANK    @FMT             Format
      *
      ** Check for error in SDBANKPD
      *
     C           BANKRC    IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD001       DBASE
     C                     MOVEL'SD4110'  DBPGM            **************
     C                     MOVEL'SDBANKPD'DBFILE           *DB ERROR 001*
     C                     MOVEL*BLANKS   DBKEY            **************
     C                     MOVEL'BANK'    DBKEY
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     END
      *
      ** Save today's date
      *
     C                     Z-ADDBJRDNB    RUNDAT  50
      *
      ** Initialise the live and inserted record counters
      *
     C           *LIKE     DEFN E0TTLV    DTTTLV
     C           *LIKE     DEFN E0TTIN    DTTTIN
     C           *LIKE     DEFN E0TTLV    WITTLV
     C           *LIKE     DEFN E0TTIN    WITTIN
     C           *LIKE     DEFN E0TTLV    WOTTLV
     C           *LIKE     DEFN E0TTIN    WOTTIN
     C           *LIKE     DEFN E0TTLV    BBTTLV
     C           *LIKE     DEFN E0TTIN    BBTTIN
     C           *LIKE     DEFN E0TTLV    BLTTLV
     C           *LIKE     DEFN E0TTIN    BLTTIN
     C           *LIKE     DEFN E0TTLV    RPTTLV
     C           *LIKE     DEFN E0TTIN    RPTTIN
     C           *LIKE     DEFN E0TTLV    RRTTLV
     C           *LIKE     DEFN E0TTIN    RRTTIN
     C           *LIKE     DEFN E0TTLV    PDTTLV
     C           *LIKE     DEFN E0TTIN    PDTTIN
     C           *LIKE     DEFN E0TTLV    PLTTLV
     C           *LIKE     DEFN E0TTIN    PLTTIN
     C           *LIKE     DEFN DPBA      UCBRCA                          CSD004
     C                     MOVEL*HIVAL    UCBRCA                          CSD004
      *
      *****************************************************************
      *                                                               *
      * Program Main Processing:                                      *
      *                                                               *
      *****************************************************************
      *
      ** Read Transaction File until EOF
      *
     C           *IN01     DOUEQ'1'
     C***********          READ DPTMVD                 0101               CSD004
     C                     READ DPTMB                  0101               CSD004
      *
      ** If record found - include it in today's count
      *
     C           *IN01     IFEQ '0'
     C***********RECI      ANDNE'*'                                       CSD004
     C           RECI      IFNE '*'                                       CSD004
      *                                                                   CSD004
      ** First time                                                       CSD004
      *                                                                   CSD004
     C           UCBRCA    IFEQ *HIVAL                                    CSD004
     C                     MOVELDPBA      UCBRCA                          CSD004
     C                     ENDIF                                          CSD004
      *                                                                   CSD004
      ** On each break down on branch - output totals to                  CSD004
      ** SDBTDMPD                                                         CSD004
     C           DPBA      IFNE UCBRCA                                    CSD004
     C                     MOVE UCBRCA    @DSNB                           CSD004
     C                     EXSR RVBRCA                                    CSD004
     C                     EXSR OUTPUT                                    CSD004
     C                     MOVELDPBA      UCBRCA                          CSD004
     C                     ENDIF                                          CSD004
      *                                                                   CSD004
     C                     EXSR COUNT
      *                                                                   CSD004
     C                     ENDIF                                          CSD004
      *                                                                   CSD004
     C                     ELSE                                           CSD004
      *                                                                   CSD004
      ** End of the file / DPTMVD                                         CSD004
      ** At least one record found                                        CSD004
     C           UCBRCA    IFNE *HIVAL                                    CSD004
     C                     MOVE DPBA      @DSNB                           CSD004
     C                     EXSR RVBRCA                                    CSD004
     C                     ENDIF                                          CSD004
      *                                                                   CSD004
     C                     END
      *
     C                     END
      *                                                                   CSD004
      *
      ***When*all*records*have*been*processed*-*output*totals*to*******   CSD004
      ***SDBTDMPD****************************                             CSD004
      *
     C           UCBRCA    IFNE *HIVAL                                    CSD004
     C                     EXSR OUTPUT
     C                     ENDIF                                          CSD004
      *
     C                     SETON                     LR
     C                     RETRN
      *
      /EJECT
      *****************************************************************
      *                                                               *
      * COUNT  - Calculates today's totals ready for output.          *
      *                                                               *
      * Called by: Main processing                                    *
      *                                                               *
      *****************************************************************
      *
     C           COUNT     BEGSR
      *
      ** Movement type 'DT' - Depot Transfer
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'DT'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         DTTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         DTTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'WI' - Walk In
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'WI'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         WITTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         WITTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'WO' - Walk Out
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'WO'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         WOTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         WOTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'BB' - Bond Borrowing
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'BB'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         BBTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         BBTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'BL' - Bond Lending
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'BL'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         BLTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         BLTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'RP' - Repurchase Agreement
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'RP'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         RPTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         RPTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'RR' - Reverse Agreement
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'RR'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         RRTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         RRTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'PD' - Pledge Deposit/Loan
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'PD'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         PDTTLV
     C                     END
      *
      ** If the deal was placed in the system today then
      ** increase the inserted record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         PDTTIN
      *
     C                     END
     C                     END
      *
      ** Movement type 'PL' - Pledge Loan
      ** increase the live record counter by 1
      *
     C           DPMV      IFEQ 'PL'
      *
      ** Determine if record is live
      *
     C                     EXSR LIVERC
      *
     C           LIVE      IFEQ 'Y'
     C                     ADD  1         PLTTLV
     C                     END
      *
      ** Movement type 'PD' - Pledge Deposit/Loan
      ** increase the live record counter by 1
      *
     C           ORED      IFEQ RUNDAT
     C                     ADD  1         PLTTIN
      *
     C                     END
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      * LIVERC - Determine if record is live       .                  *
      *                                                               *
      * Called by: COUNT                                              *
      *                                                               *
      *****************************************************************
      *
     C           LIVERC    BEGSR
      *
     C                     MOVE 'N'       LIVE    1
      *
      ** Find the later of in and out dates
      *
     C           DPMD      COMP DPDO                 02  02
      *
      ** Record is live
      **  - if later of in and out dates is equal to or after today
      **  - if later of in and out dates is before today and depot
      **    movement was inserted today
      *
     C           *IN02     IFEQ '1'
      *
     C           DPMD      IFGE RUNDAT
     C           DPMD      ORLT RUNDAT
     C           ORED      ANDEQRUNDAT
     C                     MOVE 'Y'       LIVE
     C                     END
      *
     C                     ELSE
      *
     C           DPDO      IFGE RUNDAT
     C           DPDO      ORLT RUNDAT
     C           ORED      ANDEQRUNDAT
     C                     MOVE 'Y'       LIVE
     C                     END
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      *                                                               *
      * OUTPUT - Outputs today's totals to SDBTDMPD.                  *
      *                                                               *
      * Called by: Main processing                                    *
      *                                                               *
      *****************************************************************
      *
     C           OUTPUT    BEGSR
      *
      ** Move Transaction File name, Transaction File module
      ** and Midas run date into SDBTDMPD fields ready for output
      *
     C                     MOVEL'DPTMVD ' E0FNME
     C                     MOVEL'SE'      E0MMOD
     C                     Z-ADDBJRDNB    E0DATE
      *
      ** Move branch and company codes                                    CSD004
      *                                                                   CSD004
     C                     MOVE A8BRCD    E0BRCA                          CSD004
     C                     MOVE A8CMCD    E0CMPY                          CSD004
      *
      ** Output processing for Movement Type 'DT' - Depot Transfers
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'DT'      E0TNTY
     C                     Z-ADDDTTTIN    E0TTIN
     C                     Z-ADDDTTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'WI' - Walk In
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'WI'      E0TNTY
     C                     Z-ADDWITTIN    E0TTIN
     C                     Z-ADDWITTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'WO' - Walk Out
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'WO'      E0TNTY
     C                     Z-ADDWOTTIN    E0TTIN
     C                     Z-ADDWOTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'BB' - Bond Borrowing
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'BB'      E0TNTY
     C                     Z-ADDBBTTIN    E0TTIN
     C                     Z-ADDBBTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'BL' - Bond Lending
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'BL'      E0TNTY
     C                     Z-ADDBLTTIN    E0TTIN
     C                     Z-ADDBLTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'RP'- Repurchase Agreement
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'RP'      E0TNTY
     C                     Z-ADDRPTTIN    E0TTIN
     C                     Z-ADDRPTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'RR' - Reverse Agreement
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'RR'      E0TNTY
     C                     Z-ADDRRTTIN    E0TTIN
     C                     Z-ADDRRTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'PD' - Pledge Deposit/Loan
      *
      ** Move Movement type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'PD'      E0TNTY
     C                     Z-ADDPDTTIN    E0TTIN
     C                     Z-ADDPDTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ** Output processing for Movement Type 'PL' - Pledge Loan
      *
      ** Move Movement Type, total live records
      ** into SDBTDMPD fields ready for output
      *
     C                     MOVE *BLANKS   E0TNTY
     C                     MOVE 'PL'      E0TNTY
     C                     Z-ADDPLTTIN    E0TTIN
     C                     Z-ADDPLTTLV    E0TTLV
      *
      ** Write a record to SDBTDMPD
      *
     C                     WRITESDBTSMD0
      *
      ***When*all*Movement*Type*records*have*been*written*to***********   CSD004
      ***SDBTDMPD*-*end*program*normally***************                   CSD004
      *
      *  Reset the count variables for the next branch                    CSD004
     C                     Z-ADD0         DTTTLV                          CSD004
     C                     Z-ADD0         DTTTIN                          CSD004
     C                     Z-ADD0         WITTLV                          CSD004
     C                     Z-ADD0         WITTIN                          CSD004
     C                     Z-ADD0         WOTTLV                          CSD004
     C                     Z-ADD0         WOTTIN                          CSD004
     C                     Z-ADD0         BBTTLV                          CSD004
     C                     Z-ADD0         BBTTIN                          CSD004
     C                     Z-ADD0         BLTTLV                          CSD004
     C                     Z-ADD0         BLTTIN                          CSD004
     C                     Z-ADD0         RPTTLV                          CSD004
     C                     Z-ADD0         RPTTIN                          CSD004
     C                     Z-ADD0         RRTTLV                          CSD004
     C                     Z-ADD0         RRTTIN                          CSD004
     C                     Z-ADD0         PDTTLV                          CSD004
     C                     Z-ADD0         PDTTIN                          CSD004
     C                     Z-ADD0         PLTTLV                          CSD004
     C                     Z-ADD0         PLTTIN                          CSD004
      *
     C                     ENDSR
      /EJECT
      *****************************************************************   CSD004
      *                                                               *   CSD004
      * RVBRCA - Retrieve Branch Details.                             *   CSD004
      *                                                               *   CSD004
      * Called by: Main processing                                    *   CSD004
      *                                                               *   CSD004
      *****************************************************************   CSD004
      *                                                                   CSD004
     C           RVBRCA    BEGSR                                          CSD004
     C**********           CALL 'AOBRCHR0'                                             CSD004 CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM           @RTCD   7                       CSD004
     C                     PARM '*KEY   ' @OPTN   7                       CSD004
     C                     PARM           @DSNB   3                       CSD004
     C********** SDBRCH    PARM SDBRCH    @FMT                                         CSD004 CGL029
     C           SDBRCH    PARM SDBRCH    DSSDY                                               CGL029
     C           @RTCD     IFNE *BLANKS                                   CSD004
     C           *LOCK     IN   LDA                                       CSD004
     C                     Z-ADD002       DBASE                           CSD004
     C                     MOVEL'SD4110'  DBPGM            ************** CSD004
     C                     MOVEL'SDBRCHPD'DBFILE           *DB ERROR 002* CSD004
     C                     MOVELDPBA      DBKEY            ************** CSD004
     C                     OUT  LDA                                       CSD004
     C                     EXSR *PSSR                                     CSD004
     C                     END                                            CSD004
     C                     ENDSR                                          CSD004
      /EJECT                                                              CSD004
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: (**calling routines**)                             *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR                           ** *PSSR SR **
      *
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
     C                     DUMP
     C                     END
      *
     C                     SETON                     U7U8LR
     C                     RETRN
      *
     C                     ENDSR
      *
      ********************************************************************
**  CPY@
(c) Misys International Banking Systems Ltd. 2001
