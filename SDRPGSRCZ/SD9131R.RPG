     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Exposure management ICD maintenance')         *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD9131R - Midas SD Exposure Management ICD Maintenance.      *
      *                                                               *
      *  Function:  This program maintains the Exposure Management    *
      *             ICD record.                                       *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
     F********************************************************************
     F*                                                                  *
      *  Last Amend No. MD030956           Date 09Oct14               *
      *  Prev Amend No. CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CSD003             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CTI002             Date 14SEP98               *
      *                 CDL002             Date 17JAN97               *
      *                 S01459             Date 17JAN97               *
     F*                 S01339             Date 26MAY92                  *
     F*                 E24517            DATE: 18SEP91                  *
     F*                 S01332            DATE:  8MAR91                  *
     F*                 LN0662            DATE: 24JAN91                  *
     F*                 LN0255            DATE: 15Jun90                  *
     F*                                                                  *
     F********************************************************************
     F*                                                                  *
      *  MD030956 - Additional changes to BFM-TI enhancement          *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
     F*  CTI002 - TRADE INNOVATION INTERFACE PHASE II                    *
      *  CDL002 - FX Netting: addition of field 'Net FX Exposure'.    *
      *  S01459 - Addition of Midas headerbox.                        *
     F*  S01339 - Syndicated Loans made redundant at R10.
     F*              PROGRAM RUNS FROM MITEM
     F*  E24517 - Update Standing Data file controls
     F*  S01332 - Exposure Management rel 10 enhancements
     F*  LN0662 - REGENERATE DUE TO CHANGE IN SDCURRPD                   *
     F*  LN0255 - Standardise ICD Headers and Footers                    *
     F*                                                                  *
     F********************************************************************
     F/COPY WNCPYSRC,SD9131RFPG
     FSD9131R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Exposure management maintenance
      *
     FSDEXPML1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Exposure Management Data retrieval
      *
     FSDCURRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas SD Currency codes retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDEXPML0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * UPD : Exposure Management Data update
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     E********************UQ          9  2 0A                             S01117
     E*                                                                   S01117
     E**Array*to*sort*module*sequences**************************   S01117 S01332
     E*                                                                   S01117
     E********************UQ          9  4  A                      S01117 S01332
     E*                                                                   S01332
     E* Set up array ARR to contain the module sequence fields            S01332
     E*                                                                   S01332
     E*                   ARR        11  2 0                        S01332CTI002
     E                    ARR        12  2 0                              CTI002
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E/COPY WNCPYSRC,SD9131REPG
     I*
     I* Data structure for time
     I*
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I****/COPY QWINDSRC,IOE1DTA                                          S01229
     I/COPY QWINDSRC,SD9130GDTA                                           S01229
     I/COPY WNCPYSRC,SD9131RIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDEXPML0
      * UPD : Exposure Management Data  Update index
      * Current/previous master file format fields for change control
      *
     I*#1DBRC      DS                             52                      CTI002
     I#1DBRC      DS                             54                       CTI002
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IWTIME       DS
     I                                        1   20HOUR
     I                                        3   40MIN
     I                                        5   60SEC
     I                                        1   1 POS1
     I                                        2   2 POS2
     I                                        3   3 POS3
     I                                        4   4 POS4
     I                                        5   5 POS5
     I                                        6   6 POS6
     IUUARR       DS
     I* Define data structure over ARR for comparison
     I                                        1  240ARR                   CTI002
     I*                                       1  220ARR                   CTI002
     I*
     I*SEQ*********DS                                                     S01332
     I***************                         1   20SEQP1                 S01332
     I***************                         3   4 SEQP2                 S01332
     I*
     I*SEQ1********DS                                                     S01332
     I***************                         1   20SEQ1P1                S01332
     I***************                         3   4 SEQ1P2                S01332
     I*
     IYARDCS      DS                             52
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYBRDCS      DS                             22
     IA@CPY       DS
      * Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             10
      * KEY: Exposure Management Data retrieval
      * I : RST Exposure Management key
     I                                        1  10 P1EXMK
     IP2PARM      DS
      * O :  *Return code
     I                                        1   7 P2RTN
     IP3PARM      DS
      * B : MAP Work Return code
     I                                        1   5 P3WRTC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Update Wait Time Invalid'
      * Update Wait Time - Screen
     I                                        1   6 ZA0001
      * Message data for 'Module Not Present - FX'
      * Module Sequence - FX
     I                                        1   2 ZA0002
      * Message data for 'Module Seq FX Numeric'
      * Module Sequence - FX
     I                                        1   2 ZA0003
      * Message data for 'Module Seq FX Numeric'
      * Module Sequence - FX
     I                                        1   2 ZA0004
      * Message data for 'Module Not Present - C/P'
      * Module Sequence - ST C/P
     I                                        1   2 ZA0005
      * Message data for 'Module Seq C/P Numeric'
      * Module Sequence - ST C/P
     I                                        1   2 ZA0006
      * Message data for 'Module Seq C/P Numeric'
      * Module Sequence - ST C/P
     I                                        1   2 ZA0007
      * Message data for 'Module Not Present - MM'
      * Module Sequence - MM
     I                                        1   2 ZA0008
      * Message data for 'Module Seq MM Numeric'
      * Module Sequence - MM
     I                                        1   2 ZA0009
      * Message data for 'Module Seq MM Numeric'
      * Module Sequence - MM
     I                                        1   2 ZA0010
      * Message data for 'Module Not Present - Iss'
      * Module Sequence - ST Iss
     I                                        1   2 ZA0011
      * Message data for 'Module Seq Iss Numeric'
      * Module Sequence - ST Iss
     I                                        1   2 ZA0012
      * Message data for 'Module Seq Iss Numeric'
      * Module Sequence - ST Iss
     I                                        1   2 ZA0013
      * Message data for 'Module Not Present - Port'
      * Module Sequence - ST Port
     I                                        1   2 ZA0014
      * Message data for 'Module Seq Port Numeric'
      * Module Sequence - ST Port
     I                                        1   2 ZA0015
      * Message data for 'Module Seq Port Numeric'
      * Module Sequence - ST Port
     I                                        1   2 ZA0016
      * Message data for 'Module Seq Loans Numeric'
      * Module Sequence - Loans
     I                                        1   2 ZA0017
      * Message data for 'Module Seq Loans Numeric'
      * Module Sequence - Loans
     I                                        1   2 ZA0018
      * Message data for 'Module Not Present - Retl'
      * Module Sequence - Retail
     I                                        1   2 ZA0019
      * Message data for 'Module Seq Retail Numeric'
      * Module Sequence - Retail
     I                                        1   2 ZA0020
      * Message data for 'Module Seq Retail Numeric'
      * Module Sequence - Retail
     I                                        1   2 ZA0021
      * Message data for 'Module Not Present - F/I'
      * Module Sequence - FRAs
     I                                        1   2 ZA0022
      * Module Sequence - IRSs
     I                                        3   4 ZA0023
      * Message data for 'Module seq FRA numeric'
      * Module Sequence - FRAs
     I                                        1   2 ZA0024
      * Message data for 'Module seq FRA numeric'
      * Module Sequence - FRAs
     I                                        1   2 ZA0025
      * Message data for 'Module Not Present - F/I'
      * Module Sequence - FRAs
     I                                        1   2 ZA0026
      * Module Sequence - IRSs
     I                                        3   4 ZA0027
      * Message data for 'Module seq IRS numeric'
      * Module Sequence - IRSs
     I                                        1   2 ZA0028
      * Message data for 'Module seq IRS numeric'
      * Module Sequence - IRSs
     I                                        1   2 ZA0029
      * Message data for 'Module Not Present - F&O'
      * Module Sequence - Futures
     I                                        1   2 ZA0030
      * Module Sequence - Options
     I                                        3   4 ZA0031
      * Message data for 'Module seq Future numeric'
      * Module Sequence - Futures
     I                                        1   2 ZA0032
      * Message data for 'Module seq Future numeric'
      * Module Sequence - Futures
     I                                        1   2 ZA0033
      * Message data for 'Module Not Present - F&O'
      * Module Sequence - Futures
     I                                        1   2 ZA0034
      * Module Sequence - Options
     I                                        3   4 ZA0035
      * Message data for 'Module seq Option numeric'
      * Module Sequence - Options
     I                                        1   2 ZA0036
      * Message data for 'Module seq Option numeric'
      * Module Sequence - Options
     I                                        1   2 ZA0037
      * Message data for 'module sequences must be'
      * Func Fld Mat. Period
     I                                        1   6 ZA0038
      * Func Fld Settled Trades
     I                                        7  12 ZA0039
      * Func Fld Back Valuation
     I                                       13  18 ZA0040
      * Func Fld Diary Entries
     I                                       19  24 ZA0041
      * Func Fld Auto Trans
     I                                       25  30 ZA0042
      * Func Fld Coll Curr Conv
     I                                       31  36 ZA0043
      * Func Fld FX Risk
     I                                       37  42 ZA0044
      * Func Fld All Holding Lmt
     I                                       43  48 ZA0045
      * Func Fld Disc. Limit Fact
     I                                       49  54 ZA0046
      * Func Fld Cust Limit Fact
     I                                       55  60 ZA0047
      * Func Fld M to M Base Day
     I                                       61  66 ZA0048
      * Message data for Trade Finance                                    CTI002
     I                                       67  72 ZA0149                CTI002
      * Message data for 'Mod seq not in sequence'
      * Func Fld Mat. Period
     I                                        1   6 ZA0049
      * Func Fld Settled Trades
     I                                        7  12 ZA0050
      * Func Fld Back Valuation
     I                                       13  18 ZA0051
      * Func Fld Diary Entries
     I                                       19  24 ZA0052
      * Func Fld Auto Trans
     I                                       25  30 ZA0053
      * Func Fld Coll Curr Conv
     I                                       31  36 ZA0054
      * Func Fld FX Risk
     I                                       37  42 ZA0055
      * Func Fld All Holding Lmt
     I                                       43  48 ZA0056
      * Func Fld Disc. Limit Fact
     I                                       49  54 ZA0057
      * Func Fld Cust Limit Fact
     I                                       55  60 ZA0058
      * Func Fld M to M Base Day
     I                                       61  66 ZA0059
      * Message data for Trade Finance                                    CTI002
     I                                       67  72 ZA0160                CTI002
      * Message data for 'Issuer Risk Prohibited'
      * Issuer Risk Factored
     I                                        1   1 ZA0060
      * Message data for 'Port Holding Prohibited'
      * Portfolio Holdings Fact'd
     I                                        1   1 ZA0061
      * Message data for 'Long/Short Prohibited'
      * Long/Short Holdings Net/G
     I                                        1   1 ZA0062
      * Message data for 'Port Include Prohibited'
      * Portfolio to include FX
     I                                        1   1 ZA0063
      * Message data for 'C/Party Prohibited'
      * Counterparty Taken Gross
     I                                        1   1 ZA0064
      * Message data for 'Allow Pay Prohibited'
      * Allow for Pay Code
     I                                        1   1 ZA0065
      * Message data for 'Issuer Risk Required'
      * Issuer Risk Factored
     I                                        1   1 ZA0066
      * Message data for 'Issuer Risk Invalid'
      * Issuer Risk Factored
     I                                        1   1 ZA0067
      * Message data for 'Port Holding Required'
      * Portfolio Holdings Fact'd
     I                                        1   1 ZA0068
      * Message data for 'Port Holding Invalid'
      * Portfolio Holdings Fact'd
     I                                        1   1 ZA0069
      * Message data for 'Long/Short Required'
      * Long/Short Holdings Net/G
     I                                        1   1 ZA0070
      * Message data for 'Long/Short Invalid'
      * Long/Short Holdings Net/G
     I                                        1   1 ZA0071
      * Message data for 'Port Include Required'
      * Portfolio to include FX
     I                                        1   1 ZA0072
      * Message data for 'Port Include Invalid'
      * Portfolio to include FX
     I                                        1   1 ZA0073
      * Message data for 'Counterparty Required'
      * Counterparty Taken Gross
     I                                        1   1 ZA0074
      * Message data for 'C/P Invalid'
      * Counterparty Taken Gross
     I                                        1   1 ZA0075
      * Message data for 'Allow Pay Required'
      * Allow for Pay Code
     I                                        1   1 ZA0076
      * Message data for 'Allow Pay Invalid'
      * Allow for Pay Code
     I                                        1   1 ZA0077
      * Message data for 'Caps/Collars/Floors blank'
      * Caps/clrs/flrs in SW/OP
     I                                        1   1 ZA0078
      * Message data for 'Caps/Clrs/Flrs required'
      * Caps/clrs/flrs in SW/OP
     I                                        1   1 ZA0079
      * Message data for 'FO positions blank'
      * FO positions Net or Gross
     I                                        1   1 ZA0080
      * Message data for 'FO positions net or gross'
      * FO positions Net or Gross
     I                                        1   1 ZA0081
      * Message data for 'Net FX Exposure       INV'
      * Net FX Exposure
     I                                        1   1 ZA0082
      * Message data for 'Database Error (ICD)'
      * Filename
     I                                        1  10 ZA0083
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Exposure M
     C           P2RTN     PARM P2RTN     WP0001  7        *Return code
     C           P3WRTC    PARM P3WRTC    WP0002  5        Work Return cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Display and process key screen
     C                     EXSR BADSKY
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1EXMK    IFEQ *BLANK                     Exposure Manage
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           BUEXMK           Exposure Manage
      * Setup key
     C                     MOVEL#1EXMK    BUEXMK           Exposure Manage
     C           KRTV      CHAIN@BUREE1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     99    *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     99    *
      * Send message 'Exposure Management Da NF'
     C                     MOVEL'USR0228' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RSFF - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RSFF
     C                     END                             *FI
      * USER: Initialize detail screen (existing record)
      * Start of Fix S01117
      * Wait Time
      * CASE: DB1.Update Wait Time is Not Zero
     C           BUUPWT    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    #DWTMS           Update Wait Tim
     C                     MOVELBUUPWT    #DWTMS           Update Wait Tim
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DWTMS           Update Wait Tim
     C                     END                             *FI
      * Foreign Exchange
      * CASE: DB1.Mod. Seq. for FX is non-zero
     C           BUMSFX    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSFX    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0001  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0002 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0003  10       ZALIGN No Of De
     C                     PARM 2         WQ0004  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0005 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0006 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0007  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module FX - Exposure Management Data  *
     C*     Zalign FX                                                 *
     C                     MOVE WUZASF    #DSMMX
     C                     END                             *FI
      * Money Market
      * CASE: DB1.Mod. Seq. for MM is non-zero
     C           BUMSMM    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSMM    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0008  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0009 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0010  10       ZALIGN No Of De
     C                     PARM 2         WQ0011  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0012 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0013 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0014  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module MM - Exposure Management Data  *
     C*     Zalign Money Markets                                      *
     C                     MOVE WUZASF    #DSMMS
     C                     END                             *FI
      * Loans
      * CASE: DB1.Mod. Seq. for Loans is non-zero
     C           BUMSLN    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSLN    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0015  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0016 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0017  10       ZALIGN No Of De
     C                     PARM 2         WQ0018  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0019 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0020 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0021  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module Loans - Exposure Management Data  *
     C*     Zalign Loans                                              *
     C                     MOVE WUZASF    #DSMML
     C                     END                             *FI
      * Retail
      * CASE: DB1.Mod. Seq. for Retail is non-zero
     C           BUMSRT    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSRT    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0022  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0023 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0024  10       ZALIGN No Of De
     C                     PARM 2         WQ0025  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0026 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0027 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0028  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module Retail - Exposure Management Data  *
     C*     Zalign Retail                                             *
     C                     MOVE WUZASF    #DSMMR
     C                     END                             *FI
      * C/Party
      * CASE: DB1.Mod. Seq. for ST C is non-zero
     C           BUMSSC    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSSC    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0029  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0030 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0031  10       ZALIGN No Of De
     C                     PARM 2         WQ0032  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0033 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0034 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0035  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module C/Party - Exposure Management Data  *
     C*     Zalign C/Party                                            *
     C                     MOVE WUZASF    #DSMMC
     C                     END                             *FI
      * Issuer
      * CASE: DB1.Mod. Seq. for ST I is non-zero
     C           BUMSSI    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSSI    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0036  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0037 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0038  10       ZALIGN No Of De
     C                     PARM 2         WQ0039  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0040 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0041 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0042  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module Issuer - Exposure Management Data  *
     C*     Zalign Issuer                                             *
     C                     MOVE WUZASF    #DSMMI
     C                     END                             *FI
      * Portfolio
      * CASE: DB1.Mod. Seq. for ST P is non-zero
     C           BUMSSP    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSSP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0043  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0044 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0045  10       ZALIGN No Of De
     C                     PARM 2         WQ0046  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0047 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0048 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0049  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Module Portfolio - Exposure Management Data  *
     C*     Zalign Portfolio                                          *
     C                     MOVE WUZASF    #DSMMP
     C                     END                             *FI
      * End of Fix S01117
      * Start of SAR S01332
      * FRAs
      * CASE: DB1.Mod. Seq. for FRA is non-zero
     C           BUMSFR    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSFR    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0050  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0051 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0052  10       ZALIGN No Of De
     C                     PARM 2         WQ0053  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0054 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0055 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0056  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign module FRA - Exposure Management Data  *
     C*     Zalign FRA                                                *
     C                     MOVE WUZASF    #DSMFR
     C                     END                             *FI
      * IRSs
      * CASE: DB1.Mod. Seq. for IRS is non-zero
     C           BUMSIR    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSIR    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0057  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0058 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0059  10       ZALIGN No Of De
     C                     PARM 2         WQ0060  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0061 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0062 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0063  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign module IRS - Exposure Management Data  *
     C*     Zalign IRS                                                *
     C                     MOVE WUZASF    #DSMIR
     C                     END                             *FI
      * Futures
      * CASE: DB1.Mod. Seq. for Futures is non-zero
     C           BUMSFU    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSFU    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0064  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0065 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0066  10       ZALIGN No Of De
     C                     PARM 2         WQ0067  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0068 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0069 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0070  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign module Futures - Exposure Management Data  *
     C*     Zalign Futures                                            *
     C                     MOVE WUZASF    #DSMFU
     C                     END                             *FI
      * Options
      * CASE: DB1.Mod. seq. for Options is non-zero
     C           BUMSOP    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELBUMSOP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0071  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0072 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0073  10       ZALIGN No Of De
     C                     PARM 2         WQ0074  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0075 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0076 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0077  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign module Options - Exposure Management Data  *
     C*     Zalign Options                                            *
     C                     MOVE WUZASF    #DSMOP
     C                     END                             *FI
      * Trade Finance                                                     CTI002
      * CASE: DB1.Mod. Seq. for Trade Finance is non-zero                 CTI002
     C           BUMSTF    IFNE *ZERO                      *IF            CTI002
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen FCTI002
     C                     MOVELBUMSTF    WUZASF           ZALIGN Screen FCTI002
      * Call ZALIGN & ZEDIT                                               CTI002
      * ZALIGN Screen Field - Standard Functions  *                       CTI002
     C                     CALL 'ZALIGN'               90  ZALIGN Screen FCTI002
     C           W0RTN     PARM W0RTN     WQ0178  7        *Return code   CTI002
     C           WUZASF    PARM WUZASF    WQ0179 16        ZALIGN Screen FCTI002
     C                     PARM *ZERO     WQ0180  10       ZALIGN No Of DeCTI002
     C                     PARM 2         WQ0181  20       ZALIGN No Of DiCTI002
     C           WUZAFF    PARM *BLANK    WQ0182 16        ZALIGN File FieCTI002
      *                                                                   CTI002
     C           *IN90     IFEQ '1'                                       CTI002
      * Call to program ended in error                                    CTI002
     C                     MOVEL'Y2U0032' W0RTN                           CTI002
     C                     MOVEL*BLANKS   W0CLPG 10                       CTI002
     C                     MOVEL'ZALIGN'  W0CLPG                          CTI002
      * Send message '*Error occured on CALL...'                          CTI002
     C                     MOVEL'Y2U0032' ZAMSID                          CTI002
     C                     MOVEL'Y2USRMSG'ZAMSGF                          CTI002
     C                     MOVELW0CLPG    ZAMSDA           Message data   CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     END                                            CTI002
      *                                                                   CTI002
      * Error detected?                                                   CTI002
     C           W0RTN     IFNE *BLANK                                    CTI002
     C                     SETON                     99    *              CTI002
     C                     END                                            CTI002
      * CASE: PGM.*Return code is Old Table Error                         CTI002
     C           W0RTN     IFEQ '*ERROR*'                  *IF            CTI002
     C                     MOVEL'Y'       WUERCD           Err Code       CTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
     C                     MOVEL'N'       WUERCD           Err Code       CTI002
      * ZEDIT Screen Field - Standard Functions  *                        CTI002
     C                     CALL 'ZEDIT'                90  ZEDIT Screen FiCTI002
     C           WUZASF    PARM WUZASF    WQ0183 16        ZALIGN Screen FCTI002
     C                     PARM *ZERO     WQ0184  10       ZALIGN No Of DeCTI002
      *                                                                   CTI002
     C           *IN90     IFEQ '1'                                       CTI002
      * Call to program ended in error                                    CTI002
     C                     MOVEL'Y2U0032' W0RTN                           CTI002
     C                     MOVEL*BLANKS   W0CLPG 10                       CTI002
     C                     MOVEL'ZEDIT'   W0CLPG                          CTI002
      * Send message '*Error occured on CALL...'                          CTI002
     C                     MOVEL'Y2U0032' ZAMSID                          CTI002
     C                     MOVEL'Y2USRMSG'ZAMSGF                          CTI002
     C                     MOVELW0CLPG    ZAMSDA           Message data   CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     END                                            CTI002
      *                                                                   CTI002
     C                     END                             *FI            CTI002
      * Zalign Module Trade Finance - Exposure Management Data  *         CTI002
     C*     Zalign Trade Finance                                      *   CTI002
     C                     MOVE WUZASF    #DSMTF                          CTI002
     C                     END                             *FI            CTI002
      * Default Caps/Collars/Floors exposure according to modules present
      * CASE: WRK.FRA/IRS Indicator is No
     C           WUFIIN    IFEQ 'N'                        *IF
      * If FRA/IRS not present, then leave field blank and protect it to
      * user from trying to input a value.
     C                     MOVEL*BLANK    #1CCSO           Caps/clrs/flrs
     C                     MOVEL'Y'       WUPOUF           Protect output
     C                     ELSE
      * CASE: WRK.Futures & Options is No
     C           WUFUOP    IFEQ 'N'                        *IF
      * FRA/IRS is present, but F&O isn't, so default to 'S' for where to
      * Caps/Collars/Floors exposure and protect field to prevent change
     C                     MOVEL'S'       #1CCSO           Caps/clrs/flrs
     C                     MOVEL'Y'       WUPOUF           Protect output
     C                     END                             *FI
     C                     END                             *FI
      * Start CDL002
      * Net FX Exposure
      * CASE: DTL.Net FX Exposure is Blank
     C           #1NTEM    IFEQ *BLANK                     *IF
     C                     MOVEL'N'       #1NTEM           Net FX Exposure
     C                     END                             *FI
      * End CDL002
      * End of SAR S01332
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RISE - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RISE
     C                     END                             *FI
     C                     END
      *
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * USER: Validate key screen
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RVKS - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RVKS
     C                     END                             *FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RPKR - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RPKR
     C                     END                             *FI
      * Bypass KEY screen, if F12 is pressed on detail screen
     C                     MOVEL*BLANK    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P0RTN            *Return code
     C                     EXSR ZYEXPG
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate Issuer Risk Factored
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1IRFD    W0NSRQ  1        Issuer Risk Fac
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1106114   Y2LSNO  70
     C           #1IRFD    PARM #1IRFD    W0EXVL 20        Issuer Risk Fac
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Portfolio to include FX
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1PIFX    W0NSRQ  1        Portfolio to in
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1106114   Y2LSNO  70
     C           #1PIFX    PARM #1PIFX    W0EXVL 20        Portfolio to in
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Portfolio Holdings Fact'd
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1PHFD    W0NSRQ  1        Portfolio Holdi
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1106114   Y2LSNO  70
     C           #1PHFD    PARM #1PHFD    W0EXVL 20        Portfolio Holdi
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Counterparty Taken Gross
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1CPTG    W0NSRQ  1        Counterparty Ta
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1106114   Y2LSNO  70
     C           #1CPTG    PARM #1CPTG    W0EXVL 20        Counterparty Ta
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Long/Short Holdings Net/G
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1LSHN    W0NSRQ  1        Long/Short Hold
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115068   Y2LSNO  70
     C           #1LSHN    PARM #1LSHN    W0EXVL 20        Long/Short Hold
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Allow for Pay Code
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1APCD    W0NSRQ  1        Allow for Pay C
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1106114   Y2LSNO  70
     C           #1APCD    PARM #1APCD    W0EXVL 20        Allow for Pay C
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Caps/clrs/flrs in SW/OP
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1CCSO    W0NSRQ  1        Caps/clrs/flrs
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159504   Y2LSNO  70
     C           #1CCSO    PARM #1CCSO    W0EXVL 20        Caps/clrs/flrs
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate FO positions Net or Gross
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1FONG    W0NSRQ  1        FO positions Ne
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159510   Y2LSNO  70
     C           #1FONG    PARM #1FONG    W0EXVL 20        FO positions Ne
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Net FX Exposure
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1NTEM    W0NSRQ  1        Net FX Exposure
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1206678   Y2LSNO  70
     C           #1NTEM    PARM #1NTEM    W0EXVL 20        Net FX Exposure
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * USER: Validate detail screen fields
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RVSF - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RVSF
     C                     END                             *FI
      * Check relations
      * Check reference to Currency Codes
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CALC: Detail screen function fields
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RSFF - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RSFF
     C                     END                             *FI
      * USER: Validate detail screen relations
      * Start of Fix S01117
      * Update Wait Time
      * CASE: DTL.Update Wait Time - Screen is Entered
     C           #DWTMS    IFNE *BLANK                     *IF
      * Validate Wait Time. - Exposure Management Data  *
     C*
     C                     MOVE #DWTMS    WTIME
     C*
     C* Test for any Blanks
     C*
     C           POS1      IFEQ *BLANK
     C           POS2      OREQ *BLANK
     C           POS3      OREQ *BLANK
     C           POS4      OREQ *BLANK
     C           POS5      OREQ *BLANK
     C           POS6      OREQ *BLANK
     C                     MOVE '**ERR**' W0RTN
     C                     END
     C*
     C           P0RTN     IFEQ *BLANK
     C*
     C* Validate Hour
     C*
     C           HOUR      IFGT 24
     C           HOUR      ORLT 0
     C                     MOVE '**ERR**' W0RTN
     C                     END
     C*
     C* Validate Minute
     C*
     C           MIN       IFGT 60
     C           MIN       ORLT 0
     C                     MOVE '**ERR**' W0RTN
     C                     END
     C*
     C* Validate Second
     C*
     C           SEC       IFGT 60
     C           SEC       ORLT 0
     C                     MOVE '**ERR**' W0RTN
     C                     END
     C*
     C                     END
     C*
      * CASE: PGM.*Return code is Error
     C           W0RTN     IFEQ '**ERR**'                  *IF
      * Setup message data for message
     C                     MOVEL#DWTMS    ZA0001           Update Wait Tim
      * Send message 'Update Wait Time Invalid'
     C                     MOVEL'USR1297' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE #DWTMS    #1UPWT           Update Wait Tim
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1UPWT           Update Wait Tim
     C                     END                             *FI
      * Dealing Module Sequences
      * Foreign Exchange
      * CASE: DTL.Module Sequence - FX is Entered
     C           #DSMMX    IFNE *BLANK                     *IF
      * CASE: WRK.Dealing: FX is No
     C           WUDLFX    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMX    ZA0002           Module Sequence
      * Send message 'Module Not Present - FX'
     C                     MOVEL'USR1307' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMX    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0079  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0080 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0081  10       ZALIGN No Of De
     C                     PARM 2         WQ0082  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0083 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0084 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0085  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMX    ZA0003           Module Sequence
      * Send message 'Module Seq FX Numeric'
     C                     MOVEL'USR1298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSFX           Mod. Seq. for F
      * Zalign Module FX - Exposure Management Data  *
     C*     Zalign FX                                                 *
     C                     MOVE WUZASF    #DSMMX
      * CASE: DTL.Mod. Seq. for FX is valid value
     C           #1MSFX    IFGE *ZERO                      *IF
     C*          #1MSFX    ANDLE11                                        CTI002
     C           #1MSFX    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMX    ZA0004           Module Sequence
      * Send message 'Module Seq FX Numeric'
     C                     MOVEL'USR1298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSFX           Mod. Seq. for F
     C                     END                             *FI
      * C/Party
      * CASE: DTL.Module Sequence - ST C/P is Entered
     C           #DSMMC    IFNE *BLANK                     *IF
      * CASE: WRK.Securities is No
     C           WUSECS    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMC    ZA0005           Module Sequence
      * Send message 'Module Not Present - C/P'
     C                     MOVEL'USR1312' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMC    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0086  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0087 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0088  10       ZALIGN No Of De
     C                     PARM 2         WQ0089  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0090 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0091 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0092  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMC    ZA0006           Module Sequence
      * Send message 'Module Seq C/P Numeric'
     C                     MOVEL'USR1303' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSSC           Mod. Seq. for S
      * Zalign Module C/Party - Exposure Management Data  *
     C*     Zalign C/Party                                            *
     C                     MOVE WUZASF    #DSMMC
      * CASE: DTL.Mod. Seq. for ST C is valid value
     C           #1MSSC    IFGE *ZERO                      *IF
     C*          #1MSSC    ANDLE11                                        CTI002
     C           #1MSSC    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMC    ZA0007           Module Sequence
      * Send message 'Module Seq C/P Numeric'
     C                     MOVEL'USR1303' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSSC           Mod. Seq. for S
     C                     END                             *FI
      * Money Markets
      * CASE: DTL.Module Sequence - MM is Entered
     C           #DSMMS    IFNE *BLANK                     *IF
      * CASE: WRK.Dealing: MM is No
     C           WUDLMM    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMS    ZA0008           Module Sequence
      * Send message 'Module Not Present - MM'
     C                     MOVEL'USR1308' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0093  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0094 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0095  10       ZALIGN No Of De
     C                     PARM 2         WQ0096  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0097 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0098 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0099  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMS    ZA0009           Module Sequence
      * Send message 'Module Seq MM Numeric'
     C                     MOVEL'USR1299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSMM           Mod. Seq. for M
      * Zalign Module MM - Exposure Management Data  *
     C*     Zalign Money Markets                                      *
     C                     MOVE WUZASF    #DSMMS
      * CASE: DTL.Mod. Seq. for MM is valid value
     C           #1MSMM    IFGE *ZERO                      *IF
     C*          #1MSMM    ANDLE11                                        CTI002
     C           #1MSMM    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMS    ZA0010           Module Sequence
      * Send message 'Module Seq MM Numeric'
     C                     MOVEL'USR1299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSMM           Mod. Seq. for M
     C                     END                             *FI
      * Issuer
      * CASE: DTL.Module Sequence - ST Iss is Entered
     C           #DSMMI    IFNE *BLANK                     *IF
      * CASE: WRK.Securities is No
     C           WUSECS    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMI    ZA0011           Module Sequence
      * Send message 'Module Not Present - Iss'
     C                     MOVEL'USR1313' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMI    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0100  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0101 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0102  10       ZALIGN No Of De
     C                     PARM 2         WQ0103  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0104 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0105 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0106  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMI    ZA0012           Module Sequence
      * Send message 'Module Seq Iss Numeric'
     C                     MOVEL'USR1304' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSSI           Mod. Seq. for S
      * Zalign Module Issuer - Exposure Management Data  *
     C*     Zalign Issuer                                             *
     C                     MOVE WUZASF    #DSMMI
      * CASE: DTL.Mod. Seq. for ST I is valid value
     C           #1MSSI    IFGE *ZERO                      *IF
     C*          #1MSSI    ANDLE11                                        CTI002
     C           #1MSSI    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMI    ZA0013           Module Sequence
      * Send message 'Module Seq Iss Numeric'
     C                     MOVEL'USR1304' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSSI           Mod. Seq. for S
     C                     END                             *FI
      * Portfolio
      * CASE: DTL.Module Sequence - ST Port is Entered
     C           #DSMMP    IFNE *BLANK                     *IF
      * CASE: WRK.Securities is No
     C           WUSECS    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMP    ZA0014           Module Sequence
      * Send message 'Module Not Present - Port'
     C                     MOVEL'USR1314' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0107  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0108 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0109  10       ZALIGN No Of De
     C                     PARM 2         WQ0110  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0111 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0112 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0113  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMP    ZA0015           Module Sequence
      * Send message 'Module Seq Port Numeric'
     C                     MOVEL'USR1305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSSP           Mod. Seq. for S
      * Zalign Module Portfolio - Exposure Management Data  *
     C*     Zalign Portfolio                                          *
     C                     MOVE WUZASF    #DSMMP
      * CASE: DTL.Mod. Seq. for ST P is valid value
     C           #1MSSP    IFGE *ZERO                      *IF
     C*          #1MSSP    ANDLE11                                        CTI002
     C           #1MSSP    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMP    ZA0016           Module Sequence
      * Send message 'Module Seq Port Numeric'
     C                     MOVEL'USR1305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSSP           Mod. Seq. for S
     C                     END                             *FI
      * Loans
     C                     EXSR UASUBR                     Loans
      * Retail
      * CASE: DTL.Module Sequence - Retail is Entered
     C           #DSMMR    IFNE *BLANK                     *IF
      * CASE: WRK.Retail Banking is No
     C           WURTBN    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMR    ZA0019           Module Sequence
      * Send message 'Module Not Present - Retl'
     C                     MOVEL'USR1311' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMMR    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0121  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0122 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0123  10       ZALIGN No Of De
     C                     PARM 2         WQ0124  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0125 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0126 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0127  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMR    ZA0020           Module Sequence
      * Send message 'Module Seq Retail Numeric'
     C                     MOVEL'USR1302' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSRT           Mod. Seq. for R
      * Zalign Module Retail - Exposure Management Data  *
     C*     Zalign Retail                                             *
     C                     MOVE WUZASF    #DSMMR
      * CASE: DTL.Mod. Seq. for Retail is valid value
     C           #1MSRT    IFGE *ZERO                      *IF
     C*          #1MSRT    ANDLE11                                        CTI002
     C           #1MSRT    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMMR    ZA0021           Module Sequence
      * Send message 'Module Seq Retail Numeric'
     C                     MOVEL'USR1302' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSRT           Mod. Seq. for R
     C                     END                             *FI
      * Start of SAR S01332
      * FRAs
      * CASE: DTL.Module Sequence - FRAs is Entered
     C           #DSMFR    IFNE *BLANK                     *IF
      * Value not allowed if module not set up in system
      * CASE: WRK.FRA/IRS Indicator is No
     C           WUFIIN    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFR    ZA0022           Module Sequence
     C                     MOVEL#DSMIR    ZA0023           Module Sequence
      * Send message 'Module Not Present - F/I'
     C                     MOVEL'USR1309' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994143*
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMFR    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0128  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0129 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0130  10       ZALIGN No Of De
     C                     PARM 2         WQ0131  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0132 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0133 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0134  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Check for error or valid value
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFR    ZA0024           Module Sequence
      * Send message 'Module seq FRA numeric'
     C                     MOVEL'USR1612' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSFR           Mod. Seq. for F
      * Zalign module FRA - Exposure Management Data  *
     C*     Zalign FRA                                                *
     C                     MOVE WUZASF    #DSMFR
      * Ensure that valid number is within valid range
      * CASE: DTL.Mod. Seq. for FRA is valid value
     C           #1MSFR    IFGE *ZERO                      *IF
     C*          #1MSFR    ANDLE11                                        CTI002
     C           #1MSFR    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMFR    ZA0025           Module Sequence
      * Send message 'Module seq FRA numeric'
     C                     MOVEL'USR1612' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSFR           Mod. Seq. for F
     C                     END                             *FI
      * IRSs
      * CASE: DTL.Module Sequence - IRSs is Entered
     C           #DSMIR    IFNE *BLANK                     *IF
      * Value not allowed if module not set up in system
      * CASE: WRK.FRA/IRS Indicator is No
     C           WUFIIN    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFR    ZA0026           Module Sequence
     C                     MOVEL#DSMIR    ZA0027           Module Sequence
      * Send message 'Module Not Present - F/I'
     C                     MOVEL'USR1309' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994143*
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMIR    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0135  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0136 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0137  10       ZALIGN No Of De
     C                     PARM 2         WQ0138  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0139 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0140 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0141  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Check for error or valid value
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMIR    ZA0028           Module Sequence
      * Send message 'Module seq IRS numeric'
     C                     MOVEL'USR1613' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSIR           Mod. Seq. for I
      * Zalign module IRS - Exposure Management Data  *
     C*     Zalign IRS                                                *
     C                     MOVE WUZASF    #DSMIR
      * Ensure that valid number is within valid range
      * CASE: DTL.Mod. Seq. for IRS is valid value
     C           #1MSIR    IFGE *ZERO                      *IF
     C*          #1MSIR    ANDLE11                                        CTI002
     C           #1MSIR    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMIR    ZA0029           Module Sequence
      * Send message 'Module seq IRS numeric'
     C                     MOVEL'USR1613' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSIR           Mod. Seq. for I
     C                     END                             *FI
      * Futures
      * CASE: DTL.Module Sequence - Futures is Entered
     C           #DSMFU    IFNE *BLANK                     *IF
      * Value not allowed if module is not present in the system
      * CASE: WRK.Futures & Options is No
     C           WUFUOP    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFU    ZA0030           Module Sequence
     C                     MOVEL#DSMOP    ZA0031           Module Sequence
      * Send message 'Module Not Present - F&O'
     C                     MOVEL'USR1315' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994042*
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMFU    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0142  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0143 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0144  10       ZALIGN No Of De
     C                     PARM 2         WQ0145  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0146 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0147 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0148  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Check for error or valid value
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFU    ZA0032           Module Sequence
      * Send message 'Module seq Future numeric'
     C                     MOVEL'USR1614' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSFU           Mod. Seq. for F
      * Zalign module Futures - Exposure Management Data  *
     C*     Zalign Futures                                            *
     C                     MOVE WUZASF    #DSMFU
      * Ensure that valid number is within valid range
      * CASE: DTL.Mod. Seq. for Futures is valid value
     C           #1MSFU    IFGE *ZERO                      *IF
     C*          #1MSFU    ANDLE11                                        CTI002
     C           #1MSFU    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMFU    ZA0033           Module Sequence
      * Send message 'Module seq Future numeric'
     C                     MOVEL'USR1614' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSFU           Mod. Seq. for F
     C                     END                             *FI
      * Options
      * CASE: DTL.Module Sequence - Options is Entered
     C           #DSMOP    IFNE *BLANK                     *IF
      * Value not allowed if module is not present in the system
      * CASE: WRK.Futures & Options is No
     C           WUFUOP    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMFU    ZA0034           Module Sequence
     C                     MOVEL#DSMOP    ZA0035           Module Sequence
      * Send message 'Module Not Present - F&O'
     C                     MOVEL'USR1315' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     994042*
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMOP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0149  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0150 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0151  10       ZALIGN No Of De
     C                     PARM 2         WQ0152  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0153 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0154 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0155  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Check for error or valid value
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMOP    ZA0036           Module Sequence
      * Send message 'Module seq Option numeric'
     C                     MOVEL'USR1615' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSOP           Mod. seq. for O
      * Zalign module Options - Exposure Management Data  *
     C*     Zalign Options                                            *
     C                     MOVE WUZASF    #DSMOP
      * Ensure that valid number is within valid range
      * CASE: DTL.Mod. seq. for Options is valid value
     C           #1MSOP    IFGE *ZERO                      *IF
     C*          #1MSOP    ANDLE11                                        CTI002
     C           #1MSOP    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMOP    ZA0037           Module Sequence
      * Send message 'Module seq Option numeric'
     C                     MOVEL'USR1615' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSOP           Mod. seq. for O
     C                     END                             *FI
      * Trade Finance                                                     CTI002
      * CASE: DTL.Module Sequence - Trade Finance is Entered              CTI002
     C           #DSMTF    IFNE *BLANK                     *IF            CTI002
      *                                                                   CTI002
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen FCTI002
     C                     MOVEL#DSMTF    WUZASF           ZALIGN Screen FCTI002
      * Call ZALIGN & ZEDIT                                               CTI002
      * ZALIGN Screen Field - Standard Functions  *                       CTI002
     C                     CALL 'ZALIGN'               90  ZALIGN Screen FCTI002
     C           W0RTN     PARM W0RTN     WQ0149  7        *Return code   CTI002
     C           WUZASF    PARM WUZASF    WQ0150 16        ZALIGN Screen FCTI002
     C                     PARM *ZERO     WQ0151  10       ZALIGN No Of DeCTI002
     C                     PARM 2         WQ0152  20       ZALIGN No Of DiCTI002
     C           WUZAFF    PARM *BLANK    WQ0153 16        ZALIGN File FieCTI002
      *                                                                   CTI002
     C           *IN90     IFEQ '1'                                       CTI002
      * Call to program ended in error                                    CTI002
     C                     MOVEL'Y2U0032' W0RTN                           CTI002
     C                     MOVEL*BLANKS   W0CLPG 10                       CTI002
     C                     MOVEL'ZALIGN'  W0CLPG                          CTI002
      * Send message '*Error occured on CALL...'                          CTI002
     C                     MOVEL'Y2U0032' ZAMSID                          CTI002
     C                     MOVEL'Y2USRMSG'ZAMSGF                          CTI002
     C                     MOVELW0CLPG    ZAMSDA           Message data   CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     END                                            CTI002
      *                                                                   CTI002
      * Error detected?                                                   CTI002
     C           W0RTN     IFNE *BLANK                                    CTI002
     C                     SETON                     99    *              CTI002
     C                     END                                            CTI002
      * CASE: PGM.*Return code is Old Table Error                         CTI002
     C           W0RTN     IFEQ '*ERROR*'                  *IF            CTI002
     C                     MOVEL'Y'       WUERCD           Err Code       CTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
     C                     MOVEL'N'       WUERCD           Err Code       CTI002
      * ZEDIT Screen Field - Standard Functions  *                        CTI002
     C                     CALL 'ZEDIT'                90  ZEDIT Screen FiCTI002
     C           WUZASF    PARM WUZASF    WQ0154 16        ZALIGN Screen FCTI002
     C                     PARM *ZERO     WQ0155  10       ZALIGN No Of DeCTI002
      *                                                                   CTI002
     C           *IN90     IFEQ '1'                                       CTI002
      * Call to program ended in error                                    CTI002
     C                     MOVEL'Y2U0032' W0RTN                           CTI002
     C                     MOVEL*BLANKS   W0CLPG 10                       CTI002
     C                     MOVEL'ZEDIT'   W0CLPG                          CTI002
      * Send message '*Error occured on CALL...'                          CTI002
     C                     MOVEL'Y2U0032' ZAMSID                          CTI002
     C                     MOVEL'Y2USRMSG'ZAMSGF                          CTI002
     C                     MOVELW0CLPG    ZAMSDA           Message data   CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     END                                            CTI002
      *                                                                   CTI002
     C                     END                             *FI            CTI002
      * Check for error or valid value                                    CTI002
      * CASE: WRK.Err Code is Error Found                                 CTI002
     C           WUERCD    IFEQ 'Y'                        *IF            CTI002
      * Setup message data for message                                    CTI002
     C                     MOVEL#DSMTF    ZA0036           Module SequenceCTI002
      * Send message 'Module seq Option numeric'                          CTI002
     C                     MOVEL'USR1615' ZAMSID                          CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     SETON                     9953  *              CTI002
      *                                                                   CTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
     C                     MOVE WUZAFF    #1MSTF           Mod. seq. forTFCTI002
      * Zalign module Options - Exposure Management Data  *               CTI002
     C*     Zalign Options                                            *   CTI002
     C                     MOVE WUZASF    #DSMTF                          CTI002
      * Ensure that valid number is within valid range                    CTI002
      * CASE: DTL.Mod. seq. for Trade Finance is valid value              CTI002
     C           #1MSTF    IFGE *ZERO                      *IF            CTI002
     C           #1MSTF    ANDLE12                                        CTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
      * Setup message data for message                                    CTI002
     C                     MOVEL#DSMTF    ZA0037           Module SequenceCTI002
      * Send message 'Module seq Option numeric'                          CTI002
     C                     MOVEL'USR1615' ZAMSID                          CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     SETON                     9953  *              CTI002
      *                                                                   CTI002
     C                     END                             *FI            CTI002
     C                     END                             *FI            CTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
     C                     Z-ADD*ZERO     #1MSTF           Mod. seq. forTFCTI002
     C                     END                             *FI            CTI002
      * Cross validation of Sequences
      * Reset error fields
     C                     EXSR UBSUBR                     Reset error fie
      * Check module sequences - Exposure Management Data  *
     C*********************MOVE #IGYST    FX      20                      S01229
     C*********************MOVE #IGZST    MM      20                      S01229
     C*********************MOVE #IG0ST    FRAIRS  20                      S01229
     C*********************MOVE #IG1ST    LOAN    20                      S01229
     C*********************MOVE #IG2ST    RETAIL  20                      S01229
     C*********************MOVE #IG4ST    STC     20                      S01229
     C*********************MOVE #IG5ST    STI     20                      S01229
     C*********************MOVE #IG6ST    STP     20                      S01229
     C*********************MOVE #IG7ST    FF      20                      S01229
     C*********************MOVE #IMSFX    FX      20               S01229 S01332
     C*********************MOVE #IMSMM    MM      20               S01229 S01332
     C*********************MOVE #IMSFA    FRAIRS  20               S01229 S01332
     C*********************MOVE #IMSLN    LOAN    20               S01229 S01332
     C*********************MOVE #IMSRT    RETAIL  20               S01229 S01332
     C*********************MOVE #IMSSC    STC     20               S01229 S01332
     C*********************MOVE #IMSSI    STI     20               S01229 S01332
     C*********************MOVE #IMSSP    STP     20               S01229 S01332
     C*********************MOVE #IMSFI    FF      20               S01229 S01332
     C*********************MOVE *BLANK    W0RTN                           S01332
      *                                                                   S01117
      **Clear*the*Arrays*before*using*them.************************S01117 S01332
      *                                                            S01117 S01332
     C*********************MOVE *BLANK    UUCLR  36                S01117 S01332
     C*********************MOVE UUCLR     UQ                       S01117 S01332
      *                                                                   S01117
      *
     C*********************Z-ADD1         U       20                      S01332
      *
     C***********FX********IFNE 0                                         S01332
     C*********************MOVELFX        UQ,U                     S01117 S01332
     C*********************MOVE 'FX'      UQ,U                            S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********MM********IFNE 0                                         S01332
     C*********************MOVELMM        UQ,U                            S01332
     C*********************MOVE 'MM'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********FRAIRS****IFNE 0                                         S01332
     C*********************MOVELFRAIRS    UQ,U                            S01332
     C*********************MOVE 'FI'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********LOAN******IFNE 0                                         S01332
     C*********************MOVELLOAN      UQ,U                            S01332
     C*********************MOVE 'LN'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********RETAIL****IFNE 0                                         S01332
     C*********************MOVELRETAIL    UQ,U                            S01332
     C*********************MOVE 'RT'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********STC*******IFNE 0                                         S01332
     C*********************MOVELSTC       UQ,U                            S01332
     C*********************MOVE 'SC'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********STI*******IFNE 0                                         S01332
     C*********************MOVELSTI       UQ,U                            S01332
     C*********************MOVE 'SI'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********STP*******IFNE 0                                         S01332
     C*********************MOVELSTP       UQ,U                            S01332
     C*********************MOVE 'SP'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C***********FF********IFNE 0                                         S01332
     C*********************MOVELFF        UQ,U                            S01332
     C*********************MOVE 'FF'      UQ,U                     S01117 S01332
     C*********************ADD  1         U                               S01332
     C*********************END                                            S01332
      *
     C*********************SORTAUQ                                        S01332
     C*********************Z-ADD0         N       20               S01117 S01332
      *
     C***********1*********DO   9         U                               S01332
      *                                                                   S01117
     C***********UQ,U******IFNE *BLANK                             S01117 S01332
     C*********************MOVE UQ,U      SEQ                      S01117 S01332
     C*********************ELSE                                    S01117 S01332
     C*********************Z-ADD0         SEQP1                    S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C***********SEQP1*****IFGT 0                                  S01117 S01332
     C***********U*********ANDNE9                                         S01332
     C***********U*********ADD  1         U1      20                      S01332
      *
     C*********************MOVE UQ,U1     SEQ1                            S01332
      *
     C***********SEQP1*****IFEQ SEQ1P1                                    S01332
     C*********************MOVE '*ERROR*' W0RTN                           S01332
     C**N33******SEQP2*****IFEQ 'FX'                               S01117 S01332
     C***********SEQ1P2****OREQ 'FX'                               S01117 S01332
     C*********************SETON                     33            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N34******SEQP2*****IFEQ 'SC'                               S01117 S01332
     C***********SEQ1P2****OREQ 'SC'                               S01117 S01332
     C*********************SETON                     34            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N35******SEQP2*****IFEQ 'MM'                               S01117 S01332
     C***********SEQ1P2****OREQ 'MM'                               S01117 S01332
     C*********************SETON                     35            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N36******SEQP2*****IFEQ 'SI'                               S01117 S01332
     C***********SEQ1P2****OREQ 'SI'                               S01117 S01332
     C*********************SETON                     36            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N37******SEQP2*****IFEQ 'FI'                               S01117 S01332
     C***********SEQ1P2****OREQ 'FI'                               S01117 S01332
     C*********************SETON                     37            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N38******SEQP2*****IFEQ 'SP'                               S01117 S01332
     C***********SEQ1P2****OREQ 'SP'                               S01117 S01332
     C*********************SETON                     38            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N39******SEQP2*****IFEQ 'LN'                               S01117 S01332
     C***********SEQ1P2****OREQ 'LN'                               S01117 S01332
     C*********************SETON                     39            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N40******SEQP2*****IFEQ 'FF'                               S01117 S01332
     C***********SEQ1P2****OREQ 'FF'                               S01117 S01332
     C*********************SETON                     40            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C**N41******SEQP2*****IFEQ 'RT'                               S01117 S01332
     C***********SEQ1P2****OREQ 'RT'                               S01117 S01332
     C*********************SETON                     41            S01117 S01332
     C*********************END                                     S01117 S01332
      *                                                                   S01117
     C*********************END                                            S01332
      *
     C*********************END                                            S01332
      *
     C*********************END                                            S01332
     C*                                                                   S01332
     C* Save value of *IN50.                                              S01332
     C                     MOVE *IN50     UINST   1                       S01332
     C*                                                                   S01332
     C* Move module sequence values to array                              S01332
     C*                                                                   S01332
     C                     MOVE #1MSFX    ARR,1                           S01332
     C                     MOVE #1MSMM    ARR,2                           S01332
     C                     MOVE #1MSFR    ARR,3                           S01332
     C                     MOVE #1MSLN    ARR,4                           S01332
     C                     MOVE #1MSRT    ARR,5                           S01332
     C                     MOVE #1MSIR    ARR,6                           S01332
     C                     MOVE #1MSSC    ARR,7                           S01332
     C                     MOVE #1MSSI    ARR,8                           S01332
     C                     MOVE #1MSSP    ARR,9                           S01332
     C                     MOVE #1MSFU    ARR,10                          S01332
     C                     MOVE #1MSOP    ARR,11                          S01332
     C                     MOVE #1MSTF    ARR,12                    S01332CTI002
     C*                                                                   S01332
     C* Sort ARR into ascending order.                                    S01332
     C*                                                                   S01332
     C                     SORTAARR                                       S01332
     C*                                                                   S01332
     C* Allow duplicate of '0' in the module sequences.                   S01332
     C*                                                                   S01332
     C                     Z-ADD1         X       30                      S01332
     C*                                                                   S01332
     C*          X         DOUGT11                                  S01332CTI002
     C           X         DOUGT12                         DOU 1    S01332CTI002
     C           ARR,X     ORGT 0                                         S01332
     C           ARR,X     IFEQ 0                           IF 1          S01332
     C                     ADD  1         X                               S01332
     C                     END                              FI 1          S01332
     C                     END                             UOD 1          S01332
     C*                                                                   S01332
     C* Check that no duplicate values other than '0' exist in the        S01332
     C* remaining module sequences.                                       S01332
     C*                                                                   S01332
     C*          X         IFLT 11                                  S01332CTI002
     C*          X         DOWNE11                                  S01332CTI002
     C           X         IFLT 12                         IF 1           CTI002
     C           X         DOWNE12                          DOW 1         CTI002
     C           X         ADD  1         Y       30                      S01332
     C           ARR,X     IFEQ ARR,Y                        IF 2         S01332
     C*                                                                   S01332
     C* Duplicate module sequence values exist.                           S01332
     C                     MOVE 'Y'       WUMSDV                          S01332
     C                     END                               FI 2         S01332
     C*                                                                   S01332
     C* Ensure that the values entered into the module sequence fields    S01332
     C* run in sequence.                                                  S01332
     C*                                                                   S01332
     C           ARR,Y     SUB  ARR,X     DIFF    10                      S01332
     C           DIFF      IFNE 1                             IF 3        S01332
     C*                                                                   S01332
     C* Module sequence fields are not in sequence.                       S01332
     C                     MOVE 'Y'       WUMSNS                          S01332
     C                     END                                FI 3        S01332
     C                     ADD  1         X                               S01332
     C                     END                               WOD 1        S01332
     C*                                                                   S01332
     C                     END                              FI 1          S01332
     C*                                                                   S01332
     C* Value of '1' must be entered, as long as not all zero.
     C           01        LOKUPARR,1                    50
     C*
     C           *IN50     IFEQ '0'                        IF 1
     C           UUARR     ANDNE*ZERO
     C                     MOVE 'Y'       WUMSNS                          S01332
     C                     END                             FI 1
     C*
     C* Restore original value of *IN50
     C                     MOVE *IN50     UINST   1                       S01332
     C*                                                                   S01332
      * Check module sequences for duplicate values.
      * CASE: WRK.Mod. seq duplicate values is Yes
     C           WUMSDV    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMX    ZA0038           Module Sequence
     C                     MOVEL#DSMMS    ZA0039           Module Sequence
     C                     MOVEL#DSMML    ZA0040           Module Sequence
     C                     MOVEL#DSMMR    ZA0041           Module Sequence
     C                     MOVEL#DSMFR    ZA0042           Module Sequence
     C                     MOVEL#DSMIR    ZA0043           Module Sequence
     C                     MOVEL#DSMMC    ZA0044           Module Sequence
     C                     MOVEL#DSMMI    ZA0045           Module Sequence
     C                     MOVEL#DSMMP    ZA0046           Module Sequence
     C                     MOVEL#DSMFU    ZA0047           Module Sequence
     C                     MOVEL#DSMOP    ZA0048           Module Sequence
     C  N74                MOVEL#DSMTF    ZA0149           Module SequenceCTI002
      * Send message 'module sequences must be'
     C                     MOVEL'USR0344' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993335*
     C                     SETON                     373941*
     C                     SETON                     433436*
     C                     SETON                     384042*
     C  N74                SETON                     53    *              CTI002
      *
     C                     END                             *FI
      * Check module sequences for no gaps.
      * CASE: WRK.Mod. seq. not in sequence is Yes
     C           WUMSNS    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMMX    ZA0049           Module Sequence
     C                     MOVEL#DSMMS    ZA0050           Module Sequence
     C                     MOVEL#DSMML    ZA0051           Module Sequence
     C                     MOVEL#DSMMR    ZA0052           Module Sequence
     C                     MOVEL#DSMFR    ZA0053           Module Sequence
     C                     MOVEL#DSMIR    ZA0054           Module Sequence
     C                     MOVEL#DSMMC    ZA0055           Module Sequence
     C                     MOVEL#DSMMI    ZA0056           Module Sequence
     C                     MOVEL#DSMMP    ZA0057           Module Sequence
     C                     MOVEL#DSMFU    ZA0058           Module Sequence
     C                     MOVEL#DSMOP    ZA0059           Module Sequence
     C  N74                MOVEL#DSMTF    ZA0160           Module SequenceCTI002
      * Send message 'Mod seq not in sequence'
     C                     MOVEL'USR1616' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993335*
     C                     SETON                     373941*
     C                     SETON                     433436*
     C                     SETON                     384042*
     C  N74                SETON                     53    *              CTI002
      *
     C                     END                             *FI
      * End of SAR S01332
      * Remaining fields not allowed if securities sequence is not entere
      * CASE: DTL.Mod. Seq. for ST P is zero
     C           #1MSSP    IFEQ *ZERO                      *IF
      * CASE: DTL.Mod. Seq. for ST C is zero
     C           #1MSSC    IFEQ *ZERO                      *IF
      * CASE: DTL.Mod. Seq. for ST I is zero
     C           #1MSSI    IFEQ *ZERO                      *IF
      * CASE: DTL.Issuer Risk Factored is blank
     C           #1IRFD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1IRFD    ZA0060           Issuer Risk Fac
      * Send message 'Issuer Risk Prohibited'
     C                     MOVEL'USR1316' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
      * CASE: DTL.Portfolio Holdings Fact'd is blank
     C           #1PHFD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PHFD    ZA0061           Portfolio Holdi
      * Send message 'Port Holding Prohibited'
     C                     MOVEL'USR1317' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
      * CASE: DTL.Long/Short Holdings Net/G is blank
     C           #1LSHN    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LSHN    ZA0062           Long/Short Hold
      * Send message 'Long/Short Prohibited'
     C                     MOVEL'USR1318' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     END                             *FI
      * CASE: DTL.Portfolio to include FX is blank
     C           #1PIFX    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PIFX    ZA0063           Portfolio to in
      * Send message 'Port Include Prohibited'
     C                     MOVEL'USR1319' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
      * CASE: DTL.Counterparty Taken Gross is blank
     C           #1CPTG    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CPTG    ZA0064           Counterparty Ta
      * Send message 'C/Party Prohibited'
     C                     MOVEL'USR1320' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
      * CASE: DTL.Allow for Pay Code is blank
     C           #1APCD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1APCD    ZA0065           Allow for Pay C
      * Send message 'Allow Pay Prohibited'
     C                     MOVEL'USR1321' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Remaining fields are required if securities sequence is entered
     C                     EXSR UCSUBR                     Remaining field
      * End of Fix S01117
      * Start of SAR S01332
      * Check that value for Caps/Collars/Floors exposure entered if requ
      * CASE: WRK.FRA/IRS Indicator is No
     C           WUFIIN    IFEQ 'N'                        *IF
      * No further validation required as field cannot be entered
     C                     ELSE
      * CASE: WRK.Futures & Options is No
     C           WUFUOP    IFEQ 'N'                        *IF
      * No further validation required as field defaults to 'S'
     C                     ELSE
      * CASE: *OTHERWISE
      * Check valid value has been entered.
      * CASE: DTL.Caps/clrs/flrs in SW/OP is blank
     C           #1CCSO    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CCSO    ZA0078           Caps/clrs/flrs
      * Send message 'Caps/Collars/Floors blank'
     C                     MOVEL'USR1621' ZAMSID
     C                     EXSR ZASNMS
     C**********           SETON                     9950  *                                MD030956
     C                     SETON                     9964                                   MD030956
      *
     C                     ELSE
      * CASE: DTL.Caps/clrs/flrs in SW/OP is Valid value
     C           #1CCSO    IFEQ 'O'                        *IF
     C           #1CCSO    OREQ 'S'
      * 'S' or 'O' entered, so no further validation required.
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CCSO    ZA0079           Caps/clrs/flrs
      * Send message 'Caps/Clrs/Flrs required'
     C                     MOVEL'USR1617' ZAMSID
     C                     EXSR ZASNMS
     C**********           SETON                     9950  *                                MD030956
     C                     SETON                     9964                                   MD030956
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If F&O module is preseent, then value must be entered for F&O pos
      * CASE: WRK.Futures & Options is Yes
     C           WUFUOP    IFEQ 'Y'                        *IF
      * Check that a value has been entered for F&O positions.
      * CASE: DTL.FO positions Net or Gross is blank
     C           #1FONG    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FONG    ZA0080           FO positions Ne
      * Send message 'FO positions blank'
     C                     MOVEL'USR1622' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     ELSE
      * CASE: DTL.FO positions Net or Gross is Valid value
     C           #1FONG    IFEQ 'G'                        *IF
     C           #1FONG    OREQ 'N'
      * Valid value entered, so no further action required.
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FONG    ZA0081           FO positions Ne
      * Send message 'FO positions net or gross'
     C                     MOVEL'USR1618' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9951  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End of SAR S01332
      * Start CDL002
      * Net FX Exposure
      * CASE: WRK.FX Netting switched on is Yes
     C           WUY9ST    IFEQ 'Y'                        *IF
      * CASE: DTL.Net FX Exposure is Valid Values
     C           #1NTEM    IFEQ 'N'                        *IF
     C           #1NTEM    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1NTEM    ZA0082           Net FX Exposure
      * Send message 'Net FX Exposure       INV'
     C                     MOVEL'USR3150' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9952  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * End CDL002
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RVSR - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RVSR
     C                     END                             *FI
      * Currency Code required
     C           #1CYCD    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RPCK - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RPCK
     C                     END                             *FI
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Exposure Managemen - Exposure Management Data  *
     C                     EXSR SACHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUFIIN    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUPOUF    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C                     MOVEL'0'       *IN77
     C           WUFUOP    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN76
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           WUY9ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74                           CTI002
     C           WUCTI2    IFEQ 'N'                        *IF            CTI002
     C                     MOVEL'1'       *IN74                           CTI002
     C                     END                             *FI            CTI002
     C           CTI007    IFEQ 'Y'                                                         MD030956
     C                     MOVEL'0'       *IN74                                             MD030956
     C                     ENDIF                                                            MD030956
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     Z-ADD*ZERO     #1UPWT           Update Wait Tim
     C                     Z-ADD*ZERO     #1MSFX           Mod. Seq. for F
     C                     Z-ADD*ZERO     #1MSSC           Mod. Seq. for S
     C                     Z-ADD*ZERO     #1MSMM           Mod. Seq. for M
     C                     Z-ADD*ZERO     #1MSFR           Mod. Seq. for F
     C                     Z-ADD*ZERO     #1MSSI           Mod. Seq. for S
     C                     Z-ADD*ZERO     #1MSSP           Mod. Seq. for S
     C                     Z-ADD*ZERO     #1MSFU           Mod. Seq. for F
     C                     Z-ADD*ZERO     #1MSLN           Mod. Seq. for L
     C                     Z-ADD*ZERO     #1MSRT           Mod. Seq. for R
     C                     Z-ADD*ZERO     #1MSIR           Mod. Seq. for I
     C                     Z-ADD*ZERO     #1MSOP           Mod. seq. for O
     C                     Z-ADD*ZERO     #1MSTF           Mod. seq. forTFCTI002
     C                     MOVEL*BLANK    #1CYCD           Currency Code
     C                     MOVEL*BLANK    #DWTMS           Update Wait Tim
     C                     MOVEL*BLANK    #DSMMX           Module Sequence
     C                     MOVEL*BLANK    #DSMMC           Module Sequence
     C                     MOVEL*BLANK    #DSMMS           Module Sequence
     C                     MOVEL*BLANK    #DSMMI           Module Sequence
     C                     MOVEL*BLANK    #DSMML           Module Sequence
     C                     MOVEL*BLANK    #DSMMP           Module Sequence
     C                     MOVEL*BLANK    #DSMMR           Module Sequence
     C                     MOVEL*BLANK    #DSMFU           Module Sequence
     C                     MOVEL*BLANK    #DSMFR           Module Sequence
     C                     MOVEL*BLANK    #DSMOP           Module Sequence
     C                     MOVEL*BLANK    #DSMIR           Module Sequence
     C                     MOVEL*BLANK    #DSMTF           Module SequenceCTI002
     C                     MOVEL*BLANK    #1IRFD           Issuer Risk Fac
     C                     MOVEL*BLANK    #1PIFX           Portfolio to in
     C                     MOVEL*BLANK    #1PHFD           Portfolio Holdi
     C                     MOVEL*BLANK    #1CPTG           Counterparty Ta
     C                     MOVEL*BLANK    #1LSHN           Long/Short Hold
     C                     MOVEL*BLANK    #1APCD           Allow for Pay C
     C                     MOVEL*BLANK    #1CCSO           Caps/clrs/flrs
     C                     MOVEL*BLANK    #1FONG           FO positions Ne
     C                     MOVEL*BLANK    #1NTEM           Net FX Exposure
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BUREE1 fields to screen
      *================================================================
     C                     MOVELBUEXMK    #1EXMK           Exposure Manage
     C                     Z-ADDBULCD     #1LCD            Last Change Dat
     C                     MOVELBUTYLC    #1TYLC           Type of Last Ch
     C                     Z-ADDBUUPWT    #1UPWT           Update Wait Tim
     C                     Z-ADDBUMSFX    #1MSFX           Mod. Seq. for F
     C                     Z-ADDBUMSSC    #1MSSC           Mod. Seq. for S
     C                     Z-ADDBUMSMM    #1MSMM           Mod. Seq. for M
     C                     Z-ADDBUMSFR    #1MSFR           Mod. Seq. for F
     C                     Z-ADDBUMSSI    #1MSSI           Mod. Seq. for S
     C                     Z-ADDBUMSSP    #1MSSP           Mod. Seq. for S
     C                     Z-ADDBUMSFU    #1MSFU           Mod. Seq. for F
     C                     Z-ADDBUMSLN    #1MSLN           Mod. Seq. for L
     C                     Z-ADDBUMSRT    #1MSRT           Mod. Seq. for R
     C                     Z-ADDBUMSIR    #1MSIR           Mod. Seq. for I
     C                     Z-ADDBUMSOP    #1MSOP           Mod. seq. for O
     C                     Z-ADDBUMSTF    #1MSTF           Mod. seq. forTFCTI002
     C                     MOVELBUCYCD    #1CYCD           Currency Code
     C                     MOVELBUIRFD    #1IRFD           Issuer Risk Fac
     C                     MOVELBUPIFX    #1PIFX           Portfolio to in
     C                     MOVELBUPHFD    #1PHFD           Portfolio Holdi
     C                     MOVELBUCPTG    #1CPTG           Counterparty Ta
     C                     MOVELBULSHN    #1LSHN           Long/Short Hold
     C                     MOVELBUAPCD    #1APCD           Allow for Pay C
     C                     MOVELBUCCSO    #1CCSO           Caps/clrs/flrs
     C                     MOVELBUFONG    #1FONG           FO positions Ne
     C                     MOVELBUNTEM    #1NTEM           Net FX Exposure
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     MOVELP1EXMK    #1EXMK           Exposure Manage
      * USER: Initialize key screen
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RIKS - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RIKS
     C                     END                             *FI
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SACHRC    BEGSR
      *================================================================
      * Change Exposure Managemen - Exposure Management Data  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @BUREE0
     C                     MOVEL#1EXMK    BUEXMK           Exposure Manage
      *
     C           KLCHSA    KLIST
     C                     KFLD           BUEXMK           Exposure Manage
     C           KLCHSA    CHAIN@BUREE0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SAEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDEXPML0               91  *
     C                     GOTO SAEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * USER: Processing after Data read
      * start E24517
      * save Last Change Date from record
     C                     Z-ADDBULCD     WULCD            Last Change Dat
      * end E24517
      * Move non-key fields to @BUREE0
     C                     MOVEL#1CYCD    BUCYCD           Currency Code
     C                     Z-ADDWURDNB    BULCD            Last Change Dat
     C                     MOVEL'A'       BUTYLC           Type of Last Ch
     C                     Z-ADD#1UPWT    BUUPWT           Update Wait Tim
     C                     Z-ADD#1MSFX    BUMSFX           Mod. Seq. for F
     C                     Z-ADD#1MSMM    BUMSMM           Mod. Seq. for M
     C                     Z-ADD#1MSFR    BUMSFR           Mod. Seq. for F
     C                     Z-ADD#1MSLN    BUMSLN           Mod. Seq. for L
     C                     Z-ADD#1MSRT    BUMSRT           Mod. Seq. for R
     C                     Z-ADD#1MSIR    BUMSIR           Mod. Seq. for I
     C                     Z-ADD#1MSSC    BUMSSC           Mod. Seq. for S
     C                     Z-ADD#1MSSI    BUMSSI           Mod. Seq. for S
     C                     Z-ADD#1MSSP    BUMSSP           Mod. Seq. for S
     C                     Z-ADD#1MSFU    BUMSFU           Mod. Seq. for F
     C                     MOVEL#1IRFD    BUIRFD           Issuer Risk Fac
     C                     MOVEL#1PHFD    BUPHFD           Portfolio Holdi
     C                     MOVEL#1LSHN    BULSHN           Long/Short Hold
     C                     MOVEL#1PIFX    BUPIFX           Portfolio to in
     C                     MOVEL#1CPTG    BUCPTG           Counterparty Ta
     C                     MOVEL#1APCD    BUAPCD           Allow for Pay C
     C                     Z-ADD#1MSOP    BUMSOP           Mod. seq. for O
     C                     MOVEL#1CCSO    BUCCSO           Caps/clrs/flrs
     C                     MOVEL#1FONG    BUFONG           FO positions Ne
     C                     MOVEL#1NTEM    BUNTEM           Net FX Exposure
     C                     Z-ADD#1MSTF    BUMSTF           Mod. seq. forTFCTI002
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * USER: Processing before Data update
      * Window processing - window on
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * Start of SAR S01117
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * End of SAR S01117
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SAEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SAEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/COPY Member SD9131RBUW - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RBUW
     C                     END                             *FI
     C                     END                             *FI
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RBDU - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RBDU
     C                     END                             *FI
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BUREE0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDEXPML0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * start E24517 - update Standing Data file controls
      * CASE: WRK.Last Change Date NE WRK.Run day number
     C           WULCD     IFNE WURDNB                     *IF
      * only update file controls if record has not been already updated
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SBCHRC
     C                     END                             *FI
      * end E24517
      * TABTB95 - Exposure Management Data  *
     C                     CALL 'TABTB95'              90  TABTB95
     C                     PARM BUCYCD    WQ0156  3        Currency Code
     C                     PARM BULCD     WQ0157  50       Last Change Dat
     C                     PARM 'A'       WQ0158  1        Type of Last Ch
     C                     PARM BUUPWT    WQ0159  60       Update Wait Tim
     C                     PARM BUMSFX    WQ0160  20       Mod. Seq. for F
     C                     PARM BUMSMM    WQ0161  20       Mod. Seq. for M
     C                     PARM BUMSLN    WQ0162  20       Mod. Seq. for L
     C                     PARM BUMSRT    WQ0163  20       Mod. Seq. for R
     C                     PARM BUMSSC    WQ0164  20       Mod. Seq. for S
     C                     PARM BUMSSI    WQ0165  20       Mod. Seq. for S
     C                     PARM BUMSSP    WQ0166  20       Mod. Seq. for S
     C                     PARM BUIRFD    WQ0167  1        Issuer Risk Fac
     C                     PARM BUPHFD    WQ0168  1        Portfolio Holdi
     C                     PARM BULSHN    WQ0169  1        Long/Short Hold
     C                     PARM BUPIFX    WQ0170  1        Portfolio to in
     C                     PARM BUCPTG    WQ0171  1        Counterparty Ta
     C                     PARM BUAPCD    WQ0172  1        Allow for Pay C
     C           W0RTN     PARM *BLANK    WQ0173  7        *Return code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'TABTB95' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131RADU - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RADU
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDICDRPD'AHFLNM           Filename
      *
     C           KLCHSB    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSB    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SBEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * get trading indicators - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSC     CHAIN@BGREC8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0096' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL'SDMMODPD'ZA0083           Filename
      * Send message 'Database Error (ICD)'
     C                     MOVEL'USR0377' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO SCEXIT                     *QUIT
     C                     GOTO SCEXIT
     C                     END
      *
      * USER: Exit processing
      * PAR = DB1 By name
     C                     MOVELBGDLFX    WUDLFX           Dealing: FX
     C                     MOVELBGCSLN    WUCSLN           Customer Lendin
     C                     MOVELBGRTBN    WURTBN           Retail Banking
     C                     MOVELBGSECS    WUSECS           Securities
     C                     MOVELBGFUOP    WUFUOP           Futures & Optio
     C                     MOVELBGFIIN    WUFIIN           FRA/IRS Indicat
     C                     MOVELBGDLMM    WUDLMM           Dealing: MM
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Get 'Window required' ind - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSD     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUWDPR           Window processi
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Loans
      *================================================================
      * CASE: DTL.Module Sequence - Loans is Entered
     C           #DSMML    IFNE *BLANK                     *IF
      * CASE: WRK.Customer Lending is No
     C           WUCSLN    IFEQ 'N'                        *IF
     C                     END                             *FI
      * S01339 - Syndicated Loans made redundant at R10.
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DSMML    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0114  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0115 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0116  10       ZALIGN No Of De
     C                     PARM 2         WQ0117  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0118 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0119 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0120  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DSMML    ZA0017           Module Sequence
      * Send message 'Module Seq Loans Numeric'
     C                     MOVEL'USR1301' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1MSLN           Mod. Seq. for L
      * Zalign Module Loans - Exposure Management Data  *
     C*     Zalign Loans                                              *
     C                     MOVE WUZASF    #DSMML
      * CASE: DTL.Mod. Seq. for Loans is valid value
     C           #1MSLN    IFGE *ZERO                      *IF
     C*          #1MSLN    ANDLE11                                        CTI002
     C           #1MSLN    ANDLE12                                        CTI002
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DSMML    ZA0018           Module Sequence
      * Send message 'Module Seq Loans Numeric'
     C                     MOVEL'USR1301' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #1MSLN           Mod. Seq. for L
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Reset error fields
      *================================================================
     C                     MOVEL'N'       WUMSDV           Mod. seq duplic
     C                     MOVEL'N'       WUMSNS           Mod. seq. not i
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Remaining fields are required if securities sequence is entered
      *================================================================
      * Has a securies sequence been entered?
      * CASE: DTL.Mod. Seq. for ST P is zero
     C           #1MSSP    IFEQ *ZERO                      *IF
      * CASE: DTL.Mod. Seq. for ST C is zero
     C           #1MSSC    IFEQ *ZERO                      *IF
      * CASE: DTL.Mod. Seq. for ST I is zero
     C           #1MSSI    IFEQ *ZERO                      *IF
     C                     GOTO UCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Issuer Risk Factored is blank
     C           #1IRFD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1IRFD    ZA0066           Issuer Risk Fac
      * Send message 'Issuer Risk Required'
     C                     MOVEL'USR1322' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     ELSE
      * CASE: DTL.Issuer Risk Factored is Valid Val's
     C           #1IRFD    IFEQ 'N'                        *IF
     C           #1IRFD    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1IRFD    ZA0067           Issuer Risk Fac
      * Send message 'Issuer Risk Invalid'
     C                     MOVEL'USR1328' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Portfolio Holdings Fact'd is blank
     C           #1PHFD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PHFD    ZA0068           Portfolio Holdi
      * Send message 'Port Holding Required'
     C                     MOVEL'USR1323' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     ELSE
      * CASE: DTL.Portfolio Holdings Fact'd is Valid Val's
     C           #1PHFD    IFEQ 'N'                        *IF
     C           #1PHFD    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PHFD    ZA0069           Portfolio Holdi
      * Send message 'Port Holding Invalid'
     C                     MOVEL'USR1329' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Long/Short Holdings Net/G is blank
     C           #1LSHN    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LSHN    ZA0070           Long/Short Hold
      * Send message 'Long/Short Required'
     C                     MOVEL'USR1324' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     ELSE
      * CASE: DTL.Long/Short Holdings Net/G is Valid Values
     C           #1LSHN    IFEQ 'G'                        *IF
     C           #1LSHN    OREQ 'N'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LSHN    ZA0071           Long/Short Hold
      * Send message 'Long/Short Invalid'
     C                     MOVEL'USR1330' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9948  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Portfolio to include FX is blank
     C           #1PIFX    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PIFX    ZA0072           Portfolio to in
      * Send message 'Port Include Required'
     C                     MOVEL'USR1325' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     ELSE
      * CASE: DTL.Portfolio to include FX is Valid Val's
     C           #1PIFX    IFEQ 'N'                        *IF
     C           #1PIFX    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PIFX    ZA0073           Portfolio to in
      * Send message 'Port Include Invalid'
     C                     MOVEL'USR1331' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Counterparty Taken Gross is blank
     C           #1CPTG    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CPTG    ZA0074           Counterparty Ta
      * Send message 'Counterparty Required'
     C                     MOVEL'USR1326' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     ELSE
      * CASE: DTL.Counterparty Taken Gross is Valid Val's
     C           #1CPTG    IFEQ 'N'                        *IF
     C           #1CPTG    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CPTG    ZA0075           Counterparty Ta
      * Send message 'C/P Invalid'
     C                     MOVEL'USR1332' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: DTL.Allow for Pay Code is blank
     C           #1APCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1APCD    ZA0076           Allow for Pay C
      * Send message 'Allow Pay Required'
     C                     MOVEL'USR1327' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     ELSE
      * CASE: DTL.Allow for Pay Code is Valid Val's
     C           #1APCD    IFEQ 'N'                        *IF
     C           #1APCD    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1APCD    ZA0077           Allow for Pay C
      * Send message 'Allow Pay Invalid'
     C                     MOVEL'USR1333' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9949  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Currency Codes
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1CYCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Currency Code
     C                     CALL 'SD0020S'              90  Select Currency
     C                     PARM *BLANK    W0RTN   7
     C           #1CYCD    PARM #1CYCD    WQ0078  3        Currency Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0020S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1CYCD    IFEQ *BLANK                     Currency Code
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAA6    KLIST
     C                     KFLD           A6CYCD           Currency Code
      * Setup key
     C                     MOVEL#1CYCD    A6CYCD           Currency Code
     C           KLVAA6    CHAIN@A6REA3              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Currency Codes         NF'
     C                     MOVEL'USR0071' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0071' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'SDIOE1R' W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/COPY Member SD9131REPP - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131REPP
     C                     END                             *FI
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'**CMD**' P2RTN            *Return code
     C                     MOVEL'CMD01'   P3WRTC           Work Return cod
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field S01212
     C                     MOVEL*BLANK    WUMFTS  1
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field FRA/IRS Indicator
     C                     MOVEL*BLANK    WUFIIN  1
      * Define work field Protect output field
     C                     MOVEL*BLANK    WUPOUF  1
      * Define work field Futures & Options
     C                     MOVEL*BLANK    WUFUOP  1
      * Define work field Dealing: FX
     C                     MOVEL*BLANK    WUDLFX  1
      * Define work field Securities
     C                     MOVEL*BLANK    WUSECS  1
      * Define work field Dealing: MM
     C                     MOVEL*BLANK    WUDLMM  1
      * Define work field Customer Lending
     C                     MOVEL*BLANK    WUCSLN  1
      * Define work field Retail Banking
     C                     MOVEL*BLANK    WURTBN  1
      * Define work field CTI002 is active                                CTI002
     C                     MOVEL*BLANK    WUCTI2  1                       CTI002
      * Define work field Mod. seq duplicate values
     C                     MOVEL*BLANK    WUMSDV  1
      * Define work field Mod. seq. not in sequence
     C                     MOVEL*BLANK    WUMSNS  1
      * Define work field FX Netting switched on
     C                     MOVEL*BLANK    WUY9ST  1
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Last Change Date
     C                     Z-ADD*ZERO     WULCD   50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field SAR number field
     C                     MOVEL*BLANK    WUSARN  6
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD9131R#
     C                     OPEN SDEXPML1
     C                     OPEN SDCURRL1
     C                     OPEN SDMMODL1
     C                     OPEN SDEXPML0
     C                     OPEN SDFCTLL0
     C                     MOVEL'N'       W0PMT   1
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Start of change S01459.
      * SD9131R Precompiler - Exposure Management Data  *
      * Remove Last Amend Box and Creation Parameters functions.
      * End of change S01459.
      * Copyright Statement 1988 - Standard Functions  * copyright
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * get trading indicators - MIDAS Modules  *
     C                     EXSR SCRVGN
      * Start of change CDL002.
     C                     MOVEL'N'       WUY9ST           FX Netting swit
     C                     MOVEL'CDL002'  WUSARN           SAR number fiel
     C                     MOVEL*BLANK    WUAPRC           Access Pgm Retu
      * SAR switched on check - Standard Functions  *
     C                     CALL 'AOSARDR0'             90  SAR switched on
     C           WUAPRC    PARM WUAPRC    WQ0174  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0175  7        Option for ACCO
     C           WUSARN    PARM WUSARN    WQ0176  6        SAR number fiel
     C                     PARM *BLANK    WQ0177 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOSARDR0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Check return code.
      * CASE: WRK.Access Pgm Return Code is AP No Record Found
     C           WUAPRC    IFEQ '*NRF'                     *IF
     C                     MOVEL'N'       WUY9ST           FX Netting swit
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WUY9ST           FX Netting swit
     C                     END                             *FI
      * End of change CDL002.
      * Start of change CTI002.                                           CTI002
     C                     MOVEL'N'       WUCTI2           CTI002 active ?CTI002
     C                     MOVEL'CTI002'  WUSARN           SAR number fielCTI002
     C                     MOVEL*BLANK    WUAPRC           Access Pgm RetuCTI002
      * SAR switched on check - Standard Functions  *                     CTI002
     C                     CALL 'AOSARDR0'             90  SAR switched onCTI002
     C           WUAPRC    PARM WUAPRC    WQ0174  7        Access Pgm RetuCTI002
     C                     PARM '*VERIFY' WQ0175  7        Option for ACCOCTI002
     C           WUSARN    PARM WUSARN    WQ0176  6        SAR number fielCTI002
     C                     PARM *BLANK    WQ0177 76        Access obj dummCTI002
      *                                                                   CTI002
     C           *IN90     IFEQ '1'                                       CTI002
      * Call to program ended in error                                    CTI002
     C                     MOVEL'Y2U0032' W0RTN                           CTI002
     C                     MOVEL*BLANKS   W0CLPG 10                       CTI002
     C                     MOVEL'AOSARDR0'W0CLPG                          CTI002
      * Send message '*Error occured on CALL...'                          CTI002
     C                     MOVEL'Y2U0032' ZAMSID                          CTI002
     C                     MOVEL'Y2USRMSG'ZAMSGF                          CTI002
     C                     MOVELW0CLPG    ZAMSDA           Message data   CTI002
     C                     EXSR ZASNMS                                    CTI002
     C                     END                                            CTI002
      *                                                                   CTI002
      * Check return code.                                                CTI002
      * CASE: WRK.Access Pgm Return Code is AP No Record Found            CTI002
     C           WUAPRC    IFEQ '*NRF'                     *IF            CTI002
     C                     MOVEL'N'       WUCTI2           CTI002 inactiveCTI002
     C                     ELSE                                           CTI002
      * CASE: *OTHERWISE                                                  CTI002
     C                     MOVEL'Y'       WUCTI2           CTI002 active  CTI002
     C                     END                             *IF            CTI002
      * End of change CTI002.                                             CTI002
      *                                                                                     MD030956
      ** Check if CTI007 BFM-TI Exposure Management is enabled                              MD030956
      *                                                                                     MD030956
     C                     MOVEL'N'       CTI007  1                                         MD030956
     C                     MOVEL'CTI007'  WUSARN                                            MD030956
     C                     MOVEL*BLANK    WUAPRC                                            MD030956
      *                                                                                     MD030956
     C                     CALL 'AOSARDR0'             90                                   MD030956
     C           WUAPRC    PARM WUAPRC    WQ0174                                            MD030956
     C                     PARM '*VERIFY' WQ0175                                            MD030956
     C           WUSARN    PARM WUSARN    WQ0176                                            MD030956
     C                     PARM *BLANK    WQ0177                                            MD030956
      *                                                                                     MD030956
     C           *IN90     IFEQ '1'                                                         MD030956
     C                     MOVEL'Y2U0032' W0RTN                                             MD030956
     C                     MOVEL*BLANKS   W0CLPG                                            MD030956
     C                     MOVEL'AOSARDR0'W0CLPG                                            MD030956
     C                     MOVEL'Y2U0032' ZAMSID                                            MD030956
     C                     MOVEL'Y2USRMSG'ZAMSGF                                            MD030956
     C                     MOVELW0CLPG    ZAMSDA                                            MD030956
     C                     EXSR ZASNMS                                                      MD030956
     C                     END                                                              MD030956
      *                                                                                     MD030956
     C           WUAPRC    IFEQ '*NRF'                                                      MD030956
     C                     MOVEL'N'       CTI007                                            MD030956
     C                     ELSE                                                             MD030956
     C                     MOVEL'Y'       CTI007                                            MD030956
     C                     END                                                              MD030956
      *                                                                                     MD030956
     C                     MOVEL'Y'       WUMFTS           S01212
      * Window processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * Get 'Window required' ind - MIDAS Modules  *
     C                     EXSR SDRVGN
      * Data Structure - Exp Mgmt - Exposure Management Data  *
      * 00/COPY Member SD9131RFPG - Exposure Management Data  *
      * 00/COPY Member SD9131REPG - Exposure Management Data  *
      * 00/COPY Member SD9131RIPG - Exposure Management Data  *
      * 00/COPY Member SD9131RCPG - Exposure Management Data  *
     C/COPY WNCPYSRC,SD9131RCPG
      * 00/COPY Member SD9131ROPG - Exposure Management Data  *
     C                     END                             *FI
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD9131RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9131RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9131RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O/COPY WNCPYSRC,SD9131ROPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2001
