     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Futures & options ICD maintenance')
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD9151R - Futures and Options ICD Maintenance.               *
      *                                                               *
      *  Function:  This program maintains the Futures and Options    *
      *             ICD data.                                         *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD058085           Date 11May21               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CSD005             Date 01MAR99               *
      *                 CSD003             Date 27OCT97               *
      *                 CTI002             Date 23SEP98               *
      *                 CFF003             Date 10MAR97               *
      *                 CPM004             Date 27FEB96               *
      *                 CAC001             Date 10JAN96               *
      *                 S01455             Date 11NOV93               *
      *                 S01459             Date 11NOV93               *
      *                 056411             Date 12AUG93               *
      *                 S01339             Date 20JUL92               *
      *                 E24517             Date 18SEP91               *
      *                 LN0947             Date 24JAN91               *
      *                 LN0255             Date 15JUN90               *
      *                 S01117             Date 05APR90               *
      *                 S01212             Date 21MAR90               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD058085 - Deliverable Data Split for Standing Data          *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  CSD005 - Standing Data Account Narrative.  Add new field     *
      *           to SDACODPD.  Recompilation of programs.            *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  CTI002 - Recompiled : File SDACODPD changed                  *
      *  CFF003 - OTC enhancement Phase 2 :                           *
      *           added the new fields FX Deal Generation,            *
      *           Default FX Deal Sub-Type, Default FX Deal Broker    *
      *           and OTC Days Unexpired.                             *
      *  CPM004 - PM Bank Portfolios.                                 *
      *           SDBOOKL1 amended - regenerate & recompile.          *
      *  CAC001 - Profit Centre Accounting.                           *
      *           Additional field 'Futures & Options Profit Centre'  *
      *  S01455 - Addition of 'Processing Type on Account Key' &      *
      *           'Instrument Type on Account Key'.                   *
      *  S01459 - Addition of headerbox and PSSR processing.          *
      *  056411 - Account Codes should be mandatory fields.           *
      *  S01339 - Program runs from MITEM.                            *
      *  E24517 - Update standing data file controls.                 *
      *  LN0947 - Regenerate due to change in SDACODPD.               *
      *  LN0255 - Standardise ICD headers and footers.                *
      *  S01117 - Release 10 changes.                                 *
      *  S01212 - /Copy and window processing.                        *
      *                                                               *
      *****************************************************************
     F*
     F/COPY WNCPYSRC,SD9151RFPG
     F*
     FSD9151R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Futures and options ICD maintenance
      *
     FSDFODAL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Futures and options ICD retrieval
      *
     FSDACODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas SD Account codes retrieval
      *
     FSDBOOKL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Midas SD Book details retrieval
      *
     FSDDLSTL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * RTV : Midas SD Deal sub-types retrieval
      *
     FSDPRFCL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * RTV : Midas SD Profit centres retrieval
      *
     F*SDBROKL1IF  E           K        DISK                           UC                   MD058085
     F**********                                    KINFDS ID0005                           MD058085
     F**********                                    KINFSR *PSSR                            MD058085
      * RTV : Midas SD Broker codes retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0006
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDGELRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0007
     F                                              KINFSR *PSSR
      * RTV : Midas SD General ledger ICD details retrieval
      *
     FSDFODAL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0008
     F                                              KINFSR *PSSR
      * UPD : Midas SD Futures and options ICD update
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0009
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*
     E/COPY WNCPYSRC,SD9151REPG
     E*
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
     I****/COPY QWINDSRC,H1E1DTA                                          S01229
     I/COPY QWINDSRC,SD9150GDTA                                           S01229
     I*
     I/COPY WNCPYSRC,SD9151RIPG
     I*
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDFODAL0
      * UPD : Midas SD Futures and options ICD update
      * Current/previous master file format fields for change control
      *
     ISDBROK    E DSSDBROKPD                                                                MD058085
     I***#1DBRC*     DS                             52                                        CGL029
     I#1DBRC      DS                           9999                                           CGL029
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     I***YARDCS*     DS                             52                                        CGL029
     IYARDCS      DS                           9999                                           CGL029
     IDSFDY     E DSDSFDY                                                                   MD058085
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYBRDCS      DS                             22
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
     IID0005      DS                            528
      * File information data structure
      *
     IID0006      DS                            528
      * File information data structure
      *
     IID0007      DS                            528
      * File information data structure
      *
     IID0008      DS                            528
      * File information data structure
      *
     IID0009      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             10
      * KEY: Midas SD Futures and options ICD retrieval
      * I : RST futures & Options key
     I                                        1  10 P1FOKY
     IP2PARM      DS
      * O :  *Return code
     I                                        1   7 P2RTN
     IP3PARM      DS
      * B : MAP Work Return code
     I                                        1   5 P3WRTC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Def. Trad Book Required'
      * Default Trading Book Code
     I                                        1   2 ZA0001
      * Message data for 'Def. Cust Book Required'
      * Book Code
     I                                        1   2 ZA0002
      * Message data for 'Trade & Book Posn Rec.'
      * Trade & Book Posn Recble
     I                                        1   1 ZA0003
      * Message data for 'Field Not Numeric'
      * alpha of last change
     I                                        1   6 ZA0004
      * Message data for 'Historical Period 1-32'
      * Hist. Period Month alpha
     I                                        1   2 ZA0005
      * Message data for 'Customer Charges Required'
      * Customer Charges compound
     I                                        1   1 ZA0006
      * Message data for 'Customer Charges Invalid'
      * Customer Charges compound
     I                                        1   1 ZA0007
      * Message data for 'Field Not Numeric'
      * alpha of last change
     I                                        1   6 ZA0008
      * Message data for 'T-Bill not valid'
      * T-Bill Face Value Func.
     I                                        1  12 ZA0009
      * Message data for 'Hedged Positions Required'
      * Hedged positions on evt
     I                                        1   1 ZA0010
      * Message data for 'Hedged Positions Y/N'
      * Hedged positions on evt
     I                                        1   1 ZA0011
      * Message data for 'L/F Matching Ind Required'
      * L/F in FO indicator
     I                                        1   1 ZA0012
      * Message data for 'L/F in FO must be Y/N'
      * L/F in FO indicator
     I                                        1   1 ZA0013
      * Message data for 'Account code mustn't be t'
      * Interbranch Branch A/c
     I**********                              1   4 ZA0014                                    CGL029
     I                                        1  10 ZA0014                                    CGL029
      * Message data for 'Invalid Account Code'
      * Account Code
     I**********                              1   4 ZA0015                                    CGL029
     I                                        1  10 ZA0015                                    CGL029
      * Message data for 'Account code mustn't be t'
      * Interbranch Branch A/c
     I**********                              1   4 ZA0016                                    CGL029
     I                                        1  10 ZA0016                                    CGL029
      * Message data for 'Invalid Account Code'
      * Account Code
     I**********                              1   4 ZA0017                                    CGL029
     I                                        1  10 ZA0017                                    CGL029
      * Message data for 'Proc type on A/C key req'
      * Process Type on A/c Key
     I                                        1   1 ZA0018
      * Message data for 'Proc type on A/C key Y/N'
      * Process Type on A/c Key
     I                                        1   1 ZA0019
      * Message data for 'FX deal Gen is invalid'
      * FX Deal Generation
     I                                        1   1 ZA0020
      * Message data for 'Inst. type on A/C key req'
      * Instrument Typ on A/c Key
     I                                        1   1 ZA0021
      * Message data for 'Inst type on A/C key Y/N'
      * Instrument Typ on A/c Key
     I                                        1   1 ZA0022
      * Message data for 'Dft FX deal S-typ not req'
      * Default FX Deal Sub-Type
     I                                        1   2 ZA0023
      * Message data for 'Incorrect deal type'
      * Default FX Deal Sub-Type
     I                                        1   2 ZA0024
      * Message data for 'Dft FX S-type not found'
      * Default FX Deal Sub-Type
     I                                        1   2 ZA0025
      * Message data for 'Invalid deal sub-type'
      * Default FX Deal Sub-Type
     I                                        1   2 ZA0026
      * Message data for 'Dft FX Deal S-Typ is req'
      * Default FX Deal Sub-Type
     I                                        1   2 ZA0027
      * Message data for 'Profit Centre cde not val'
      * Pft Cntr For Safe Ctdy Fe
     I                                        1   4 ZA0028
      * Message data for 'Dft FX Deal Broker is req'
      * Default FX Deal Broker
     I                                        1   4 ZA0029
      * Message data for 'Dft FX Deal Brokr not req'
      * Default FX Deal Broker
     I                                        1   4 ZA0030
      * Message data for 'Dft FX Deal Broker invald'
      * Default FX Deal Broker
     I                                        1   4 ZA0031
      * Message data for 'OTC Days Unexpired is req'
      * OTC func field
     I                                        1   1 ZA0032
      * Message data for 'OTC Days Unexpired numerc'
      * OTC func field
     I                                        1   1 ZA0033
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Futures &
     C           P2RTN     PARM P2RTN     WP0001  7        *Return code
     C           P3WRTC    PARM P3WRTC    WP0002  5        Work Return cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Display and process key screen
     C                     EXSR BADSKY
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1FOKY    IFEQ *BLANK                     futures & Optio
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           BXFOKY           futures & Optio
      * Setup key
     C                     MOVEL#1FOKY    BXFOKY           futures & Optio
     C           KRTV      CHAIN@BXREFL              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     99    *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     99    *
      * Send message 'Futures & Options Data NF'
     C                     MOVEL'USR0313' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RSFF - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RSFF
     C*
     C                     END                             *FI
      * USER: Initialize detail screen (existing record)
      * CASE: DTL.T-bill Face value colat % is Zero
     C           #1TFVC    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    #DTFVF           T-Bill Face Val
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
      * T-bill - Z Scrn Fun Fld - Futures & Options Data  *
     C                     MOVE BXTFVC    WUZASF
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0001 16        ZALIGN Screen F
     C                     PARM 7         WQ0002  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Zalign T-Bill Collateral - Futures & Options Data  *
     C                     MOVE WUZASF    #DTFVF
     C                     END                             *FI
      * Start of SAR S011117
      * Historical period is now entered in months rather than days
      * If period is zero default to 1 month
      * CASE: DTL.Historical Period is Historical period = 0
     C           #1HSPR    IFEQ *ZERO                      *IF
     C                     MOVEL' 1'      #DHPMA           Hist. Period Mo
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1HSPR    DIV  31        WUHIPM    H      Historical peri
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
      * Hist Per - Z Scrn Fun Fld - Futures & Options Data  *
     C                     MOVE WUHIPM    WUZASF
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0003 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0004  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Zalign Historical Period - Futures & Options Data  *
     C                     MOVE WUZASF    #DHPMA
     C                     END                             *FI
      * End of SAR S01117
      * Start of CFF003
      * OTC Days Unexpired
      * CASE: WRK.CFF003 is Present
     C           WUCFLD    IFEQ 'Y'                        *IF
      * CASE: DB1.OTC Days Unexpired is Zero
     C           BXOTDU    IFEQ *ZERO                      *IF
     C                     MOVEL'0'       #DOFUF           OTC func field
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELBXOTDU    #DOFUF           OTC func field
     C                     END                             *FI
     C                     END                             *FI
      * End of CFF003
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RISE - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RISE
     C*
     C                     END                             *FI
     C                     END
      *
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * USER: Validate key screen
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RVKS - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RVKS
     C*
     C                     END                             *FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RPKR - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RPKR
     C*
     C                     END                             *FI
      * Bypass KEY screen, if F12 is pressed on detail screen
     C                     MOVEL*BLANK    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P3WRTC           Work Return cod
     C                     MOVEL'PREV'    P0RTN            *Return code
     C                     EXSR ZYEXPG
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate Hedged positions on evt
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1HPOE    W0NSRQ  1        Hedged position
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1143096   Y2LSNO  70
     C           #1HPOE    PARM #1HPOE    W0EXVL 20        Hedged position
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate L/F in FO indicator
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1LFOI    W0NSRQ  1        L/F in FO indic
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1143097   Y2LSNO  70
     C           #1LFOI    PARM #1LFOI    W0EXVL 20        L/F in FO indic
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Customer Charges compound
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1CCC     W0NSRQ  1        Customer Charge
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1144961   Y2LSNO  70
     C           #1CCC     PARM #1CCC     W0EXVL 20        Customer Charge
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Trade & Book Posn Recble
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1TBRC    W0NSRQ  1        Trade & Book Po
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1142931   Y2LSNO  70
     C           #1TBRC    PARM #1TBRC    W0EXVL 20        Trade & Book Po
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Process Type on A/c Key
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1PROT    W0NSRQ  1        Process Type on
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1174828   Y2LSNO  70
     C           #1PROT    PARM #1PROT    W0EXVL 20        Process Type on
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * Validate Instrument Typ on A/c Key
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1ISTY    W0NSRQ  1        Instrument Typ
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1174823   Y2LSNO  70
     C           #1ISTY    PARM #1ISTY    W0EXVL 20        Instrument Typ
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
      * USER: Validate detail screen fields
      * Ensure that default trading book is entered
     C                     EXSR UASUBR                     Ensure that def
      * Ensure that default customer book is entered
     C                     EXSR UBSUBR                     Ensure that def
      * Validate Trade and Book Reconcilable Position
      * CASE: DTL.Trade & Book Posn Recble is Valid Values
     C           #1TBRC    IFEQ 'N'                        *IF
     C           #1TBRC    OREQ 'Y'
     C                     ELSE
      * CASE: DTL.Trade & Book Posn Recble is Blank
     C           #1TBRC    IFEQ *BLANK                     *IF
      * If field is blank default it to 'N' and redisplay the screen
     C                     MOVEL'N'       #1TBRC           Trade & Book Po
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1TBRC    ZA0003           Trade & Book Po
      * Send message 'Trade & Book Posn Rec.'
     C                     MOVEL'USR0919' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Start of SAR S01117
      * Validate Historical Period
      * CASE: DTL.Hist. Period Month alpha is Blank
     C           #DHPMA    IFEQ *BLANK                     *IF
      * If no value is entered then default to 1 and redisplay screen
     C                     MOVEL' 1'      #DHPMA           Hist. Period Mo
     C                     Z-ADD33        #1HSPR           Historical Peri
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DHPMA    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0005  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0006 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0007  10       ZALIGN No Of De
     C                     PARM 2         WQ0008  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0009 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0010 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0011  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DHPMA    ZA0004           Hist. Period Mo
      * Send message 'Field Not Numeric'
     C                     MOVEL'USR0822' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    WUHIPM           Historical peri
      * Zalign Historical Period - Futures & Options Data  *
     C                     MOVE WUZASF    #DHPMA
      * CASE: WRK.Historical period month is Valid Range 01 - 32
     C           WUHIPM    IFGE 1                          *IF
     C           WUHIPM    ANDLE32
     C           WUHIPM    MULT 31        #1HSPR           Historical Peri
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DHPMA    ZA0005           Hist. Period Mo
      * Send message 'Historical Period 1-32'
     C                     MOVEL'USR0920' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9937  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate the customer charges compounded
     C                     EXSR UCSUBR                     Validate the cu
      * End of SAR S01117
      * Validate Treasury Bill Percentage
      * CASE: DTL.T-Bill Face Value Func. is Blank
     C           #DTFVF    IFEQ *BLANK                     *IF
      * If field is blank then default to 0 and redisplay the screen
     C                     MOVEL*BLANK    #DTFVF           T-Bill Face Val
     C                     Z-ADD*ZERO     #1TFVC           T-bill Face val
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DTFVF    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0012  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0013 16        ZALIGN Screen F
     C                     PARM 7         WQ0014  10       ZALIGN No Of De
     C                     PARM 4         WQ0015  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0016 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0017 16        ZALIGN Screen F
     C                     PARM 7         WQ0018  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DTFVF    ZA0008           T-Bill Face Val
      * Send message 'Field Not Numeric'
     C                     MOVEL'USR0822' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUZAFF    #1TFVC           T-bill Face val
      * Zalign T-Bill Collateral - Futures & Options Data  *
     C                     MOVE WUZASF    #DTFVF
      * CASE: DTL.T-bill Face value colat % is Valid Percentage
     C           #1TFVC    IFGE *ZERO                      *IF
     C           #1TFVC    ANDLE100
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DTFVF    ZA0009           T-Bill Face Val
      * Send message 'T-Bill not valid'
     C                     MOVEL'USR0921' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9936  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Hedged Positions
      * CASE: DTL.Hedged positions on evt is Valid Values
     C           #1HPOE    IFEQ 'N'                        *IF
     C           #1HPOE    OREQ 'Y'
     C                     ELSE
      * CASE: DTL.Hedged positions on evt is Blank
     C           #1HPOE    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1HPOE    ZA0010           Hedged position
      * Send message 'Hedged Positions Required'
     C                     MOVEL'USR1060' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1HPOE    ZA0011           Hedged position
      * Send message 'Hedged Positions Y/N'
     C                     MOVEL'USR0926' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate LIFO/FIFO Matching Indicator
      * CASE: DTL.L/F in FO indicator is Valid Values
     C           #1LFOI    IFEQ 'F'                        *IF
     C           #1LFOI    OREQ 'L'
     C                     ELSE
      * CASE: DTL.L/F in FO indicator is Blank
     C           #1LFOI    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LFOI    ZA0012           L/F in FO indic
      * Send message 'L/F Matching Ind Required'
     C                     MOVEL'USR1061' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LFOI    ZA0013           L/F in FO indic
      * Send message 'L/F in FO must be Y/N'
     C                     MOVEL'USR0927' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RVSF - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RVSF
     C*
     C                     END                             *FI
      * Check relations
      * Check reference to Account Codes
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9939  *
     C                     END
      * Check reference to Account Codes
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9940  *
     C                     END
      * Check reference to Book Details
     C                     EXSR VCCKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * Check reference to Book Details
     C                     EXSR VDCKRL
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
      * CALC: Detail screen function fields
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RSFF - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RSFF
     C*
     C                     END                             *FI
      * USER: Validate detail screen relations
      * CASE: DTL.Account Code is Non-blank
     C           #1ACCD    IFNE *BLANK                     *IF
      * retrieve type as well - Account Codes  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * CASE: WRK.Title Only Indicator is YES
     C           WUTOIN    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0014           Account Code
      * Send message 'Account code mustn't be t'
     C                     MOVEL'USR0221' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Start of fix 056411
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0015           Account Code
      * Send message 'Invalid Account Code'
     C                     MOVEL'USR0183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
      * End of fix 056411
     C                     END                             *FI
      * CASE: DTL.Default Customer Account is Non-blank
     C           #1DCAC    IFNE *BLANK                     *IF
      * retrieve type as well - Account Codes  *
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * CASE: WRK.Title Only Indicator is YES
     C           WUTOIN    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#1DCAC    ZA0016           Default Custome
      * Send message 'Account code mustn't be t'
     C                     MOVEL'USR0221' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Start of fix 056411
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DCAC    ZA0017           Default Custome
      * Send message 'Invalid Account Code'
     C                     MOVEL'USR0183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9940  *
      *
      * End of fix 056411
     C                     END                             *FI
      * Start of S01455
      * Validate Processing Type on Account Key
      * CASE: DTL.Process Type on A/c Key is Valid Values
     C           #1PROT    IFEQ 'N'                        *IF
     C           #1PROT    OREQ 'Y'
     C                     ELSE
      * CASE: DTL.Process Type on A/c Key is Blank
     C           #1PROT    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PROT    ZA0018           Process Type on
      * Send message 'Proc type on A/C key req'
     C                     MOVEL'USR2197' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PROT    ZA0019           Process Type on
      * Send message 'Proc type on A/C key Y/N'
     C                     MOVEL'USR2198' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9941  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * End of S01455
      * Start of CFF003
      * Fx deal generation
      * CASE: WRK.CFF003 is Present
     C           WUCFLD    IFEQ 'Y'                        *IF
      * CASE: DTL.FX Deal Generation is Valid value
     C           #1FXDG    IFEQ 'N'                        *IF
     C           #1FXDG    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXDG    ZA0020           FX Deal Generat
      * Send message 'FX deal Gen is invalid'
     C                     MOVEL'USR3299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9942  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * End of CFF003
      * Start of S01455
      * Validate Instrument Type on Account Key
      * CASE: DTL.Instrument Typ on A/c Key is Valid Values
     C           #1ISTY    IFEQ 'N'                        *IF
     C           #1ISTY    OREQ 'Y'
     C                     ELSE
      * CASE: DTL.Instrument Typ on A/c Key is Blank
     C           #1ISTY    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1ISTY    ZA0021           Instrument Typ
      * Send message 'Inst. type on A/C key req'
     C                     MOVEL'USR2199' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1ISTY    ZA0022           Instrument Typ
      * Send message 'Inst type on A/C key Y/N'
     C                     MOVEL'USR2200' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9943  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * End of S01455
      * Start of CFF003
      * Default Fx deal sub-type
      * CASE: WRK.CFF003 is Present
     C           WUCFLD    IFEQ 'Y'                        *IF
      * CASE: DTL.Default FX Deal Sub-Type is Entered
     C           #1DFDS    IFNE *BLANK                     *IF
      * CASE: DTL.FX Deal Generation is No
     C           #1FXDG    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#1DFDS    ZA0023           Default FX Deal
      * Send message 'Dft FX deal S-typ not req'
     C                     MOVEL'USR3300' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DFDS    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    WUDSTC           Deal Sub-type C
      * Select Deal Sub-Types - Deal Sub-types  *
     C                     CALL 'SD0250S'              90  Select Deal Sub
     C                     PARM *BLANK    W0RTN   7
     C           WUDSTC    PARM WUDSTC    WQ0023  2        Deal Sub-type C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0250S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUDSTC    #1DFDS           Default FX Deal
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUDSTC           Deal Sub-type C
     C                     MOVEL#1DFDS    WUDSTC           Deal Sub-type C
      * Check Existance  Sub-Type - Deal Sub-types  *
     C                     EXSR SCRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
     C                     MOVEL*BLANK    WUWRTN           work return cod
      * Check Deal type - Futures & Options Data  *
     C                     CALL 'SD9151U'              90  Check Deal type
     C           WUWRTN    PARM WUWRTN    WQ0024  7        work return cod
     C                     PARM WUDSTC    WQ0025  2        Deal Sub-type C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD9151U' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * CASE: WRK.work return code field is INVALID
     C           WUWRTN    IFEQ 'INVALID'                  *IF
      * Setup message data for message
     C                     MOVEL#1DFDS    ZA0024           Default FX Deal
      * Send message 'Incorrect deal type'
     C                     MOVEL'USR3319' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     ELSE
      * CASE: WRK.work return code field is Not found
     C           WUWRTN    IFEQ '*NRF'                     *IF
      * Setup message data for message
     C                     MOVEL#1DFDS    ZA0025           Default FX Deal
      * Send message 'Dft FX S-type not found'
     C                     MOVEL'USR3330' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DFDS    ZA0026           Default FX Deal
      * Send message 'Invalid deal sub-type'
     C                     MOVEL'USR3320' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.FX Deal Generation is Yes
     C           #1FXDG    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#1DFDS    ZA0027           Default FX Deal
      * Send message 'Dft FX Deal S-Typ is req'
     C                     MOVEL'USR3301' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9944  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End of CFF003
      * End of S01455
      * Start of CAC001
      * Futures & Options Profit Centre  (CAC001)
      * CASE:
      *  - c1 AND c2
      *   |- c1    : WRK.Profit Centres Used is Yes
      *   |- c2    : WRK.Analytical Accounting is Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUPRCU    IFEQ 'Y'                        *IF
     C           WUN0ST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: DTL.FF Profit Centr is Not Blank
     C           #1FOPC    IFNE *BLANK                     *IF
      * Futures & Options Profit Centre has been entered.
      * CASE: DTL.FF Profit Centr is '?'
     C           #1FOPC    IFEQ '?'                        *IF
      * Select Profit Centres - Profit Centres  *
     C                     CALL 'SD0480S'              90  Select Profit C
     C                     PARM *BLANK    W0RTN   7
     C           #1FOPC    PARM #1FOPC    WQ0026  4        Profit Centre C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0480S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9945  *
     C                     END
      * If a Profit Centre is not selected blank out '?'
      * CASE: DTL.FF Profit Centr is '?'
     C           #1FOPC    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    #1FOPC           FF Profit Centr
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Retrieve Profit Centre - Profit Centres  *
     C                     EXSR SDRVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1FOPC    ZA0028           FF Profit Centr
      * Send message 'Profit Centre cde not val'
     C                     MOVEL'USR2855' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9945  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End of CAC001
      * Start of CFF003
      * Default FX Deal Broker
      * CASE: WRK.CFF003 is Present
     C           WUCFLD    IFEQ 'Y'                        *IF
      * CASE: DTL.Default FX Deal Broker is Blank
     C           #1DFDB    IFEQ *BLANK                     *IF
      * CASE: DTL.FX Deal Generation is Yes
     C           #1FXDG    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#1DFDB    ZA0029           Default FX Deal
      * Send message 'Dft FX Deal Broker is req'
     C                     MOVEL'USR3303' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.FX Deal Generation is No
     C           #1FXDG    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#1DFDB    ZA0030           Default FX Deal
      * Send message 'Dft FX Deal Brokr not req'
     C                     MOVEL'USR3302' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Default FX Deal Broker is Valid values
     C           #1DFDB    IFEQ 'MAIL'                     *IF
     C           #1DFDB    OREQ 'PHON'
     C           #1DFDB    OREQ 'SWAP'
     C           #1DFDB    OREQ 'TELX'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DFDB    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    WUBROK           Broker Code
      * Select Broker Codes - Broker Codes  *
     C                     CALL 'SD0070S'              90  Select Broker C
     C                     PARM *BLANK    W0RTN   7
     C           WUBROK    PARM WUBROK    WQ0027  4        Broker Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0070S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUBROK    #1DFDB           Default FX Deal
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DFDB    WUBROK           Broker Code
      * Check Broker exists - Broker Codes  *
     C                     EXSR SERVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1DFDB    ZA0031           Default FX Deal
      * Send message 'Dft FX Deal Broker invald'
     C                     MOVEL'USR3304' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9946  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * OTC Days Unexpired
      * CASE: WRK.CFF003 is Present
     C           WUCFLD    IFEQ 'Y'                        *IF
      * CASE: DTL.OTC func field is Blank
     C           #DOFUF    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DOFUF    ZA0032           OTC func field
      * Send message 'OTC Days Unexpired is req'
     C                     MOVEL'USR3305' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.OTC func field is Between 0 and 9
     C           #DOFUF    IFGE '0'                        *IF
     C           #DOFUF    ANDLE'9'
     C                     MOVE #DOFUF    #1OTDU           OTC Days Unexpi
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DOFUF    ZA0033           OTC func field
      * Send message 'OTC Days Unexpired numerc'
     C                     MOVEL'USR3306' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * End of CFF003
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RVSR - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RVSR
     C*
     C                     END                             *FI
      * Trade & Book Posn Recble required
     C           #1TBRC    IFEQ *BLANK                     IF
     C                     SETON                     9938  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RPCK - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RPCK
     C*
     C                     END                             *FI
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Futures & Opts - Futures & Options Data  *
     C                     EXSR SFCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUCFLD    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUDPCT    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     Z-ADD*ZERO     #1TFVC           T-bill Face val
     C                     Z-ADD*ZERO     #1HSPR           Historical Peri
     C                     Z-ADD*ZERO     #1OTDU           OTC Days Unexpi
     C                     MOVEL*BLANK    #1BKCD           Book Code
     C                     MOVEL*BLANK    #1DTBC           Default Trading
     C                     MOVEL*BLANK    #1HPOE           Hedged position
     C                     MOVEL*BLANK    #1LFOI           L/F in FO indic
     C                     MOVEL*BLANK    #1CCC            Customer Charge
     C                     MOVEL*BLANK    #DTFVF           T-Bill Face Val
     C                     MOVEL*BLANK    #DHPMA           Hist. Period Mo
     C                     MOVEL*BLANK    #1TBRC           Trade & Book Po
     C                     MOVEL*BLANK    #1ACCD           Account Code
     C                     MOVEL*BLANK    #1DCAC           Default Custome
     C                     MOVEL*BLANK    #1PROT           Process Type on
     C                     MOVEL*BLANK    #1FXDG           FX Deal Generat
     C                     MOVEL*BLANK    #1ISTY           Instrument Typ
     C                     MOVEL*BLANK    #1DFDS           Default FX Deal
     C                     MOVEL*BLANK    #1FOPC           FF Profit Centr
     C                     MOVEL*BLANK    #1DFDB           Default FX Deal
     C                     MOVEL*BLANK    #DOFUF           OTC func field
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BXREFL fields to screen
      *================================================================
     C                     MOVELBXFOKY    #1FOKY           futures & Optio
     C                     Z-ADDBXLCD     #1LCD            Last Change Dat
     C                     MOVELBXTYLC    #1TYLC           Type of Last Ch
     C                     Z-ADDBXTFVC    #1TFVC           T-bill Face val
     C                     Z-ADDBXHSPR    #1HSPR           Historical Peri
     C                     Z-ADDBXOTDU    #1OTDU           OTC Days Unexpi
     C                     MOVELBXBKCD    #1BKCD           Book Code
     C                     MOVELBXDTBC    #1DTBC           Default Trading
     C                     MOVELBXHPOE    #1HPOE           Hedged position
     C                     MOVELBXLFOI    #1LFOI           L/F in FO indic
     C                     MOVELBXCCC     #1CCC            Customer Charge
     C                     MOVELBXTBRC    #1TBRC           Trade & Book Po
     C                     MOVELBXACCD    #1ACCD           Account Code
     C                     MOVELBXDCAC    #1DCAC           Default Custome
     C                     MOVELBXPROT    #1PROT           Process Type on
     C                     MOVELBXFXDG    #1FXDG           FX Deal Generat
     C                     MOVELBXISTY    #1ISTY           Instrument Typ
     C                     MOVELBXDFDS    #1DFDS           Default FX Deal
     C                     MOVELBXFOPC    #1FOPC           FF Profit Centr
     C                     MOVELBXDFDB    #1DFDB           Default FX Deal
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     MOVELP1FOKY    #1FOKY           futures & Optio
      * USER: Initialize key screen
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RIKS - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RIKS
     C*
     C                     END                             *FI
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * retrieve type as well - Account Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           A5ACCD           Account Code
      * Move fields to key list
     C                     MOVEL#1ACCD    A5ACCD           Account Code
     C           KRSSA     CHAIN@A5REA6              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0069' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
      * USER: Exit processing
      * PAR = DB1 By name
     C                     MOVELA5ACTY    WUACTY           Account type
     C                     MOVELA5TOIN    WUTOIN           Title Only Indi
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * retrieve type as well - Account Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           A5ACCD           Account Code
      * Move fields to key list
     C                     MOVEL#1DCAC    A5ACCD           Account Code
     C           KRSSB     CHAIN@A5REA6              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0069' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
      * USER: Exit processing
      * PAR = DB1 By name
     C                     MOVELA5ACTY    WUACTY           Account type
     C                     MOVELA5TOIN    WUTOIN           Title Only Indi
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Check Existance  Sub-Type - Deal Sub-types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ASDSTC           Deal Sub-type C
      * Move fields to key list
     C                     MOVELWUDSTC    ASDSTC           Deal Sub-type C
     C           KRSSC     CHAIN@ASRECO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0043' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Retrieve Profit Centre - Profit Centres  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DSPCCD           Profit Centre C
      * Move fields to key list
     C                     MOVEL#1FOPC    DSPCCD           Profit Centre C
     C           KRSSD     CHAIN@DSREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0647' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Check Broker exists - Broker Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           A9BROK           Broker Code
      * Move fields to key list
     C                     MOVELWUBROK    A9BROK           Broker Code
     C********** KRSSE     CHAIN@A9REBC              90    *                                MD058085
     C                     CALL 'AOBROKR0'                                                  MD058085
     C                     PARM *BLANKS   W@RTCD  7                                         MD058085
     C                     PARM '*KEY'    W@OPTN  7                                         MD058085
     C                     PARM A9BROK    W@BROK  4                                         MD058085
     C           SDBROK    PARM SDBROK    DSFDY                                             MD058085
     C           W@RTCD    IFNE *BLANKS                                                     MD058085
     C********** *IN90     IFEQ '1'                                                         MD058085
      * Data record not found
     C                     MOVEL'USR0077' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Change Futures & Opts - Futures & Options Data  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @BXREFK
     C                     MOVEL#1FOKY    BXFOKY           futures & Optio
      *
     C           KLCHSF    KLIST
     C                     KFLD           BXFOKY           futures & Optio
     C           KLCHSF    CHAIN@BXREFK              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SFEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDFODAL0               91  *
     C                     GOTO SFEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C**********           MOVE @1DBRC    YARDCS                                              CGL029
     C                     MOVEL@1DBRC    YARDCS                                              CGL029
      * USER: Processing after Data read
      * start E24517
      * save Last Change Date from record
     C                     Z-ADDBXLCD     WULCD            Last Change Dat
      * end E24517
      * Move non-key fields to @BXREFK
     C                     MOVEL#1ACCD    BXACCD           Account Code
     C                     MOVEL#1DCAC    BXDCAC           Default Custome
     C                     MOVEL#1BKCD    BXBKCD           Book Code
     C                     MOVEL#1DTBC    BXDTBC           Default Trading
     C                     Z-ADDWURDNB    BXLCD            Last Change Dat
     C                     MOVEL'A'       BXTYLC           Type of Last Ch
     C                     MOVEL#1CCC     BXCCC            Customer Charge
     C                     MOVEL#1HPOE    BXHPOE           Hedged position
     C                     Z-ADD#1TFVC    BXTFVC           T-bill Face val
     C                     MOVEL#1LFOI    BXLFOI           L/F in FO indic
     C                     Z-ADD#1HSPR    BXHSPR           Historical Peri
     C                     MOVEL#1TBRC    BXTBRC           Trade & Book Po
     C                     MOVEL#1PROT    BXPROT           Process Type on
     C                     MOVEL#1ISTY    BXISTY           Instrument Typ
     C                     MOVEL#1FOPC    BXFOPC           FF Profit Centr
     C                     MOVEL#1FXDG    BXFXDG           FX Deal Generat
     C                     MOVEL#1DFDS    BXDFDS           Default FX Deal
     C                     MOVEL#1DFDB    BXDFDB           Default FX Deal
     C                     Z-ADD#1OTDU    BXOTDU           OTC Days Unexpi
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * Start of SAR S01117
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * End of SAR S01117
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy member SD9151RBUW - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RBUW
     C*
     C                     END                             *FI
      * 00/Copy member SD9151RBDU - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RBDU
     C*
     C                     END                             *FI
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BXREFK                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFODAL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * start E24517 - update file controls
      * CASE: WRK.Last Change Date NE WRK.Run day number
     C           WULCD     IFNE WURDNB                     *IF
      * only update file controls if record has not been changed already
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SGCHRC
     C                     END                             *FI
      * end E24517
      * TABTB80 - Futures & Options Data  *
     C                     CALL 'TABTB80'              90  TABTB80
     C**********           PARM BXACCD    WQ0028  4        Account Code                       CGL029
     C**********           PARM BXDCAC    WQ0029  4        Default Custome                    CGL029
     C                     PARM BXACCD    WQ0028 10                                           CGL029
     C                     PARM BXDCAC    WQ0029 10                                           CGL029
     C                     PARM BXBKCD    WQ0030  2        Book Code
     C                     PARM BXDTBC    WQ0031  2        Default Trading
     C                     PARM BXLCD     WQ0032  50       Last Change Dat
     C                     PARM 'A'       WQ0033  1        Type of Last Ch
     C                     PARM BXCCC     WQ0034  1        Customer Charge
     C                     PARM BXHPOE    WQ0035  1        Hedged position
     C                     PARM BXTFVC    WQ0036 117       T-bill Face val
     C                     PARM BXLFOI    WQ0037  1        L/F in FO indic
     C                     PARM BXHSPR    WQ0038  30       Historical Peri
     C                     PARM BXTBRC    WQ0039  1        Trade & Book Po
     C                     PARM BXPROT    WQ0040  1        Process Type on
     C                     PARM BXISTY    WQ0041  1        Instrument Typ
     C           W0RTN     PARM *BLANK    WQ0042  7        *Return code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'TABTB80' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151RADU - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RADU
     C*
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDICDRPD'AHFLNM           Filename
      *
     C           KLCHSG    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSG    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Get Analytical Accounting - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSH     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Analytical Accounting is Yes
     C           BGN0ST    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUN0ST           Analytical Acco
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUN0ST           Analytical Acco
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Check Profit Centres Used - General Ledger Details  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           BKGNLG           General Ledger
      * Move fields to key list
     C                     MOVE *BLANK    BKGNLG           General Ledger
     C                     MOVEL'GELR'    BKGNLG           General Ledger
     C           KRSSI     CHAIN@BKREEC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0199' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELBKPRCU    WUPRCU           Profit Centres
     C                     END
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Get 'Window required' ind - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSJ     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUWDPR           Window processi
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Ensure that default trading book is entered
      *================================================================
      * CASE: DTL.Default Trading Book Code is equal to blank
     C           #1DTBC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1DTBC    ZA0001           Default Trading
      * Send message 'Def. Trad Book Required'
     C                     MOVEL'USR1064' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Ensure that default customer book is entered
      *================================================================
      * CASE: DTL.Book Code is Blank
     C           #1BKCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1BKCD    ZA0002           Book Code
      * Send message 'Def. Cust Book Required'
     C                     MOVEL'USR1065' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Validate the customer charges compounded
      *================================================================
      * CASE: DTL.Customer Charges compound is Valid Values
     C           #1CCC     IFEQ 'N'                        *IF
     C           #1CCC     OREQ 'Y'
     C                     ELSE
      * CASE: DTL.Customer Charges compound is Blank
     C           #1CCC     IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CCC     ZA0006           Customer Charge
      * Send message 'Customer Charges Required'
     C                     MOVEL'USR1062' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CCC     ZA0007           Customer Charge
      * Send message 'Customer Charges Invalid'
     C                     MOVEL'USR1063' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Account Codes
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1ACCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Account Code
     C                     CALL 'SD0031S'              90  Select Account
     C                     PARM *BLANK    W0RTN   7
     C********** #1ACCD    PARM #1ACCD    WQ0019  4        Account Code                       CGL029
     C           #1ACCD    PARM #1ACCD    WQ0019 10                                           CGL029
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0031S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9939  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1ACCD    IFEQ *BLANK                     Account Code
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAA5    KLIST
     C                     KFLD           A5ACCD           Account Code
      * Setup key
     C                     MOVEL#1ACCD    A5ACCD           Account Code
     C           KLVAA5    CHAIN@A5REA6              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Account Codes          NF'
     C                     MOVEL'USR0069' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0069' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Account Codes
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1DCAC    WK1X01  1
     C           WK1X01    IFEQ '?'                        Account Code
     C                     CALL 'SD0031S'              90  Select Account
     C                     PARM *BLANK    W0RTN   7
     C********** #1DCAC    PARM #1DCAC    WQ0020  4        Account Code                       CGL029
     C           #1DCAC    PARM #1DCAC    WQ0020 10                                           CGL029
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0031S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9940  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1DCAC    IFEQ *BLANK                     Account Code
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBA5    KLIST
     C                     KFLD           A5ACCD           Account Code
      * Setup key
     C                     MOVEL#1DCAC    A5ACCD           Account Code
     C           KLVBA5    CHAIN@A5REA6              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Account Codes          NF'
     C                     MOVEL'USR0069' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0069' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         VCCKRL    BEGSR
      *================================================================
      * Check reference to Book Details
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1BKCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Book Code
     C                     CALL 'SD0310S'              90  Select Book Det
     C                     PARM *BLANK    W0RTN   7
     C           #1BKCD    PARM #1BKCD    WQ0021  2        Book Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0310S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VCEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1BKCD    IFEQ *BLANK                     Book Code
     C                     GOTO VCEXIT
     C                     END
      *
     C           KLVCBD    KLIST
     C                     KFLD           BDBKCD           Book Code
      * Setup key
     C                     MOVEL#1BKCD    BDBKCD           Book Code
     C           KLVCBD    CHAIN@BDREDK              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VCEXIT
     C                     END
      * Send message 'Book Details           NF'
     C                     MOVEL'USR0085' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0085' W0RTN
      *================================================================
     CSR         VCEXIT    ENDSR
      /EJECT
     CSR         VDCKRL    BEGSR
      *================================================================
      * Check reference to Book Details
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1DTBC    WK1X01  1
     C           WK1X01    IFEQ '?'                        Book Code
     C                     CALL 'SD0310S'              90  Select Book Det
     C                     PARM *BLANK    W0RTN   7
     C           #1DTBC    PARM #1DTBC    WQ0022  2        Book Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0310S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9932  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C                     GOTO VDEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1DTBC    IFEQ *BLANK                     Book Code
     C                     GOTO VDEXIT
     C                     END
      *
     C           KLVDBD    KLIST
     C                     KFLD           BDBKCD           Book Code
      * Setup key
     C                     MOVEL#1DTBC    BDBKCD           Book Code
     C           KLVDBD    CHAIN@BDREDK              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VDEXIT
     C                     END
      * Send message 'Book Details           NF'
     C                     MOVEL'USR0085' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0085' W0RTN
      *================================================================
     CSR         VDEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C                     MOVEL'SD9151RH'WXHLP  10
     C                     MOVE 'LP'      WXHLP
      *
     C                     CALL 'YDDSHPR'
     C                     PARM WXHLP     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * 00/Copy member SD9151REPP - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151REPP
     C*
     C                     END                             *FI
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'**CMD**' P2RTN            *Return code
     C                     MOVEL'CMD01'   P3WRTC           Work Return cod
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field S01212
     C                     MOVEL*BLANK    WUMFTS  1
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field Historical period month
     C                     Z-ADD*ZERO     WUHIPM  20
      * Define work field CFF003
     C                     MOVEL*BLANK    WUCFLD  1
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field Account type
     C                     MOVEL*BLANK    WUACTY  1
      * Define work field Title Only Indicator
     C                     MOVEL*BLANK    WUTOIN  1
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUTQKF  1
      * Define work field Deal Sub-type Code
     C                     MOVEL*BLANK    WUDSTC  2
      * Define work field work return code field
     C                     MOVEL*BLANK    WUWRTN  7
      * Define work field Profit Centres Used
     C                     MOVEL*BLANK    WUPRCU  1
      * Define work field Analytical Accounting
     C                     MOVEL*BLANK    WUN0ST  1
      * Define work field Broker Code
     C                     MOVEL*BLANK    WUBROK  4
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Last Change Date
     C                     Z-ADD*ZERO     WULCD   50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field Display Profit Centre
     C                     MOVEL*BLANK    WUDPCT  1
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field SAR number field
     C                     MOVEL*BLANK    WUSARN  6
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Define work field Access obj dummy DS (76)
     C                     MOVEL*BLANK    WUFDY  76
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD9151R#
     C                     OPEN SDFODAL1
     C                     OPEN SDACODL1
     C                     OPEN SDBOOKL1
     C                     OPEN SDDLSTL1
     C                     OPEN SDPRFCL1
     C**********           OPEN SDBROKL1                                                    MD058085
     C                     OPEN SDMMODL1
     C                     OPEN SDGELRL1
     C                     OPEN SDFODAL0
     C                     OPEN SDFCTLL0
     C                     MOVEL'N'       W0PMT   1
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Start of change S01459.
      * SD9151R Precompiler - Futures & Options Data  *
      * Remove creation parameters user source.
      * Remove last amend box user source.
      * End of change S01459.
      * Start CAC001
      * Get Analytical Accounting - MIDAS Modules  *
     C                     EXSR SHRVGN
      * Check Profit Centres Used - General Ledger Details  *
     C                     EXSR SIRVGN
      * Display Futures & Options Profit Centre ?
      * CASE: WRK.Analytical Accounting is Yes
     C           WUN0ST    IFEQ 'Y'                        *IF
      * CASE: WRK.Profit Centres Used is Yes
     C           WUPRCU    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUDPCT           Display Profit
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUDPCT           Display Profit
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUDPCT           Display Profit
     C                     END                             *FI
      * End CAC001
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Copyright Statement - Standard Functions  * copyright
      * Start CFF003
     C                     MOVEL'CFF003'  WUSARN           SAR number fiel
      * SAR switched on check - Standard Functions  *
     C                     CALL 'AOSARDR0'             90  SAR switched on
     C           WUAPRC    PARM WUAPRC    WQ0043  7        Access Pgm Retu
     C                     PARM '*VERIFY' WQ0044  7        Option for ACCO
     C           WUSARN    PARM WUSARN    WQ0045  6        SAR number fiel
     C                     PARM WUFDY     WQ0046 76        Access obj dumm
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AOSARDR0'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Check return code.
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     MOVEL'Y'       WUCFLD           CFF003
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUCFLD           CFF003
     C                     END                             *FI
      * End CFF003
     C                     MOVEL'Y'       WUMFTS           S01212
      * CASE: WRK.S01212 is Fix installed
     C           WUMFTS    IFEQ 'Y'                        *IF
      * Get 'Window required' ind - MIDAS Modules  *
     C                     EXSR SJRVGN
      * Data Structure F.& O.Data - Futures & Options Data  *
      * 00/copy Member SD9151RFPG - Futures & Options Data  *
      * 00/copy member SD9151REPG - Futures & Options Data  *
      * 00/copy member SD9151RIPG - Futures & Options Data  *
      * 00/Copy member SD9151RCPG - Futures & Options Data  *
     C*
     C/COPY WNCPYSRC,SD9151RCPG
     C*
      * 00/Copy member SD9151ROPG - Futures & Options Data  *
     C                     END                             *FI
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD9151RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9151RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRICD
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9151RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*
     O/COPY WNCPYSRC,SD9151ROPG
     O*
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
