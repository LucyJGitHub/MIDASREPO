     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Portfolio lending ICD maintenance')           *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      *  SD9391R - Midas SD Portfolio lending ICD maintenance         *
      *                                                               *
      *  Function:  This program allows the user to maintain details  *
      *             on the portfolio lending ICD record.              *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD061007           Date 31Dec21               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CLE025             Date 20Oct03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CSD003             Date 01Jul99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 S01486             Date 15Jul94               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD061007 - Deliverable Data Split for SDFCTLPA and GPFCTLPA  *
      *  MD046248 - Finastra Rebranding                               *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  CSD003 - Synon Closedown Project (SD):                       *
      *           - Program removed from SD model.                    *
      *  S01486 - Private Banking development: New program.           *
      *                                                               *
      *****************************************************************
     F*Portfolio Lending ICD MNTInitialise Program F-spec
     F/COPY WNCPYSRC,SD9391RFPG
     FSD9391R#CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Portfolio Lending ICD maintenance
      *
     FSDLOMBL1IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Portfolio lending ICD retrieval
      *
     FSDCURRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Midas SD Currency codes retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDLOMBL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * UPD : Midas SD Portfolio lending ICD update
      *
     F*SDFCTLL0UF  E           K        DISK                           UC                   MD061007
     F**********                                    KCOMIT                                  MD061007
     F**********                                    KINFDS ID0004                           MD061007
     F**********                                    KINFSR *PSSR                            MD061007
      * UPD : Midas SD Standing data controls update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     E*Portfolio Lending ICD MNTInitialise Program E-spec
     E/COPY WNCPYSRC,SD9391REPG
      * Screen one error indicator store
     E                    @I1       100  1
      * Screen two error indicator store
     E                    @I2       100  1
     I*
     I*
     I*                                                                   S01229
     I/COPY QWINDSRC,SD9390GDTA                                           S01229
     I*                                                                   S01229
     I*
     I*Portfolio Lending ICD MNTInitialise Program I-spec
     I/COPY WNCPYSRC,SD9391RIPG
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSSDLOMBL0
      * UPD : Midas SD Portfolio lending ICD update
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                            124
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     I@@I1        DS
      * Screen one error indicator store
     I                                        1 100 @I1
     I                                       31  42 INSCR1
     I@@I2        DS
      * Screen two error indicator store
     I                                        1 100 @I2
     I                                       31  55 INSCR2
     IYARDCS      DS                            124
     I*QSDFC1***E DSSDFCTLL0                                                                MD061007
     IQSDFC1      DS                                                                        MD061007
     I                                        1  10 AHFLNM                                  MD061007
     I                                    P  11  130AHNORC                                  MD061007
     I                                    P  14  160AHNOIN                                  MD061007
     I                                    P  17  190AHNOAM                                  MD061007
     I                                    P  20  220AHNODL                                  MD061007
      *                                                                                     MD061007
      * UPD : Midas SD Standing data controls update
     IYBRDCS      DS                             22
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IUUSDY     E DSDSSDY
     I*
     I* 800 byte DS for incoming data from Access Program
     I*
     ID@PLIN    E DSSDPLINPD
     I*
     I* DS TO HOLD DATA READ FROM FILE TO BE USED WITHIN THE PROGRAM
     I*
     ID@GROU    E DSLBGROUPD
     I*
     I* DS TO HOLD DATA READ FROM FILE TO BE USED WITHIN THE PROGRAM
     I*
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     I            DS
     I                                        1   7 WUMRDT
     I                                        1   20WUDLUP
     I                                        3   5 WUMLUP
     I                                        6   70WUYLUP
     I*
     I* Data structure to convert date to numeric
     I*
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             10
      * KEY: Midas SD Portfolio lending ICD retrieval
      * I : RST Portfolio Lending ICD Key
     I                                        1  10 P1LBCR
     IP2PARM      DS
      * O :  *Return code
     I                                        1   7 P2RTN
     IP3PARM      DS
      * O : MAP Work Return code
     I                                        1   5 P3WRTC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'PL currency is required'
      * Currency Code
     I                                        1   3 ZA0001
      * Message data for 'P/folio Lend Curr invalid'
      * Currency Code
     I                                        1   3 ZA0002
      * Message data for 'Pledge Rec Inc BPWR reqd'
      * Pledges Increases BPWR
     I                                        1   1 ZA0003
      * Message data for 'Pledge Rec Inc BPWR invld'
      * Pledges Increases BPWR
     I                                        1   1 ZA0004
      * Message data for 'Pledges Calculation reqrd'
      * Pledges Calculations
     I                                        1   1 ZA0005
      * Message data for 'Pledges calc is invalid'
      * Pledges Calculations
     I                                        1   1 ZA0006
      * Message data for 'Mkt/Nmnl value SE requird'
      * Collateral Market/Nominal
     I                                        1   1 ZA0007
      * Message data for 'M/N value in SE cal invld'
      * Collateral Market/Nominal
     I                                        1   1 ZA0008
      * Message data for 'Review Exp Vs Comm requrd'
      * Review Exp % SCR
     I                                        1   3 ZA0009
      * Message data for 'Review Exp vs Comm number'
      * Review Exp % SCR
     I                                        1   3 ZA0010
      * Message data for 'Review Exp vs Commt 0-99'
      * Review Exp % SCR
     I                                        1   3 ZA0011
      * Message data for 'Period to review is reqd'
      * Period to review SCR
     I                                        1   3 ZA0012
      * Message data for 'Period to review number'
      * Period to review SCR
     I                                        1   3 ZA0013
      * Message data for 'Report frequency is reqrd'
      * Report Freq Cmt Reviewed
     I                                        1   1 ZA0014
      * Message data for 'Report Freq invalid'
      * Report Freq Cmt Reviewed
     I                                        1   1 ZA0015
      * Message data for 'Excess Exp Amt is requird'
      * Excess Amt SCR
     I                                        1  13 ZA0016
      * Message data for 'Excess Exp amt numeric'
      * Excess Amt SCR
     I                                        1  13 ZA0017
      * Message data for 'FX Margin App is required'
      * FX Margin App SCR
     I                                        1   2 ZA0018
      * Message data for 'FX Margins app numeric'
      * FX Margin App SCR
     I                                        1   2 ZA0019
      * Message data for 'PM margins app is requird'
      * PM Margin App SCR
     I                                        1   2 ZA0020
      * Message data for 'PM margins app numeric'
      * PM Margin App SCR
     I                                        1   2 ZA0021
      * Message data for 'FX Margin % is required'
      * FX Margin % SCR
     I                                        1   2 ZA0022
      * Message data for 'FX Margins % numeric'
      * FX Margin % SCR
     I                                        1   2 ZA0023
      * Message data for 'PM Margin % is required'
      * PM Margin % SCR
     I                                        1   2 ZA0024
      * Message data for 'PM margins % numeric'
      * PM Margin % SCR
     I                                        1   2 ZA0025
      * Message data for 'Held items is required'
      * Predefined Held Items
     I                                        1   3 ZA0026
      * Message data for 'Held Items does not exist'
      * Predefined Held Items
     I                                        1   3 ZA0027
      * Message data for 'Cust Exchg is required'
      * Predefined Customer Exch
     I                                        1   3 ZA0028
      * Message data for 'Cust Exchg does not exist'
      * Predefined Customer Exch
     I                                        1   3 ZA0029
      * Message data for 'Pledges is required'
      * Predefined Pledges
     I                                        1   3 ZA0030
      * Message data for 'Pledges does not exist'
      * Predefined Pledges
     I                                        1   3 ZA0031
      * Message data for 'Guarantees is reqd'
      * Predefined Guarantees
     I                                        1   3 ZA0032
      * Message data for 'Guarantees is invalid'
      * Predefined Guarantees
     I                                        1   3 ZA0033
      * Message data for 'Security is required'
      * Predefined Security
     I                                        1   3 ZA0034
      * Message data for 'Security is invalid'
      * Predefined Security
     I                                        1   3 ZA0035
      * Message data for 'Collateral is reqd'
      * Predefined Collateral
     I                                        1   3 ZA0036
      * Message data for 'Collateral not selected.'
      * Predefined Collateral
     I                                        1   3 ZA0037
      * Message data for 'Collateral is invalid'
      * Predefined Collateral
     I                                        1   3 ZA0038
      * Message data for 'FX Unrealised Profit reqd'
      * Predefined FX Unr Profit
     I                                        1   3 ZA0039
      * Message data for 'FX unrealised P invalid'
      * Predefined FX Unr Profit
     I                                        1   3 ZA0040
      * Message data for 'PM unrealised P is reqd'
      * Predefined PM Unr Profit
     I                                        1   3 ZA0041
      * Message data for 'PM Unrealised P invalid'
      * Predefined PM Unr Profit
     I                                        1   3 ZA0042
      * Message data for 'FX unrealised L is reqd'
      * Predefined FX Unr Loss
     I                                        1   3 ZA0043
      * Message data for 'FX unreal L is invalid'
      * Predefined FX Unr Loss
     I                                        1   3 ZA0044
      * Message data for 'PM Unrealis L is required'
      * Predefined PM Unr Loss
     I                                        1   3 ZA0045
      * Message data for 'PM unrealised L is invald'
      * Predefined PM Unr Loss
     I                                        1   3 ZA0046
      * Message data for 'FX Unrealised P/L is reqd'
      * Predefined Margin Call
     I                                        1   3 ZA0047
      * Message data for 'FX net unreal invalid'
      * Predefined Margin Call
     I                                        1   3 ZA0048
      * Message data for 'PM net unreal is required'
      * Predefined PM Margin Call
     I                                        1   3 ZA0049
      * Message data for 'PM Net unreal not selectd'
      * Predefined PM Margin Call
     I                                        1   3 ZA0050
      * Message data for 'PM net unreal P/L not sel'
      * Predefined PM Margin Call
     I                                        1   3 ZA0051
      * Message data for 'FX margin is required'
      * Predefined FX Margin
     I                                        1   3 ZA0052
      * Message data for 'FX Margin invalid'
      * Predefined FX Margin
     I                                        1   3 ZA0053
      * Message data for 'PM Margin is required.'
      * Predefined PM Margin
     I                                        1   3 ZA0054
      * Message data for 'PM Margin is invalid'
      * Predefined PM Margin
     I                                        1   3 ZA0055
      * Message data for 'FX Closd P/L is required'
      * Predefined Clsd Forex P/L
     I                                        1   3 ZA0056
      * Message data for 'FX Closed P/L is invalid'
      * Predefined Clsd Forex P/L
     I                                        1   3 ZA0057
      * Message data for 'PM clsd P/L is required'
      * Predefined Closed PM P/L
     I                                        1   3 ZA0058
      * Message data for 'PM clsd P/L is invalid'
      * Predefined Closed PM P/L
     I                                        1   3 ZA0059
      * Message data for 'FX Exchg Mod is invalid'
      * FX Moduler Limit
     I                                        1   3 ZA0060
      * Message data for 'LE Mod limit is invalid'
      * LE Moduler Limit
     I                                        1   3 ZA0061
      * Message data for 'PM Mod limit invalid'
      * PM Moduler Limit
     I                                        1   3 ZA0062
      * Message data for 'RE modular limit invalid'
      * RE Moduler Limit
     I                                        1   3 ZA0063
      * Message data for 'MM mod limit is invalid'
      * MM Moduler Limit
     I                                        1   3 ZA0064
      * Message data for 'Dealing Exposure is reqd'
      * LB Clients DL Exposure
     I                                        1   1 ZA0065
      * Message data for 'Dealing exposure invalid'
      * LB Clients DL Exposure
     I                                        1   1 ZA0066
      * Message data for 'Lending Exp is required'
      * LB Clients LE Exposure
     I                                        1   1 ZA0067
      * Message data for 'Lending Exposure invalid'
      * LB Clients LE Exposure
     I                                        1   1 ZA0068
      * Message data for 'Retail exposure is reqd'
      * LB Clients RE Exposure
     I                                        1   1 ZA0069
      * Message data for 'Retail Exposure invalid'
      * LB Clients RE Exposure
     I                                        1   1 ZA0070
      * Message data for 'Margin on L/Exp invalid'
      * Margin on Limit/Exposure
     I                                        1   1 ZA0071
      * Message data for 'Database Error (ICD)'
      * Filename
     I                                        1  10 ZA0072
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Portfolio
     C           P2RTN     PARM P2RTN     WP0001  7        *Return code
     C           P3WRTC    PARM P3WRTC    WP0002  5        Work Return cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Display and process key screen
     C                     EXSR BADSKY
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Set control to display first screen
     C                     Z-ADD1         W0SCR   30
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1LBCR    IFEQ *BLANK                     Portfolio Lendi
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           LBLBCR           Portfolio Lendi
      * Setup key
     C                     MOVEL#1LBCR    LBLBCR           Portfolio Lendi
     C           KRTV      CHAIN@LOMBL1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     99    *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     99    *
      * Send message 'Portfolio Lending ICD  NF'
     C                     MOVEL'USR2286' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * 00/Copy member SD9391RSFF - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTCalc Detail Function Flds
     C/COPY WNCPYSRC,SD9391RSFF
      * USER: Initialize detail screen (existing record)
      * 00/Copy member SD9391RISE - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTInitialise Dtl Exist Rcd
     C/COPY WNCPYSRC,SD9391RISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBPERE    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0001  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0002 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0003  10       ZALIGN No Of De
     C                     PARM 3         WQ0004  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0005 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0006 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0007  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Rev Exp vs Commit - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DRVSC
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBPERL    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0008  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0009 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0010  10       ZALIGN No Of De
     C                     PARM 3         WQ0011  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0012 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0013 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0014  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Period to review - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPRRV
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBAMTE    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0015  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0016 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0017  10       ZALIGN No Of De
     C                     PARM 13        WQ0018  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0019 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0020 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0021  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign Excess Exp Amt - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DEXCS
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBFXMP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0022  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0023 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0024  10       ZALIGN No Of De
     C                     PARM 2         WQ0025  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0026 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0027 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0028  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign FX margin approach - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DFXAP
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBPMMP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0029  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0030 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0031  10       ZALIGN No Of De
     C                     PARM 2         WQ0032  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0033 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0034 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0035  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign PM margin approach - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPMAP
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBFXCP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0036  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0037 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0038  10       ZALIGN No Of De
     C                     PARM 2         WQ0039  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0040 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0041 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0042  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign FX margin % - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DFXPC
     C*
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVELLBPMCP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0043  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0044 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0045  10       ZALIGN No Of De
     C                     PARM 2         WQ0046  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0047 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0048 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0049  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * Zalign PM margin % - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPMPC
     C*
     C                     END
      *
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * USER: Validate key screen
      * 00/Copy member SD9391RVKS - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTValidate Key Screen
     C/COPY WNCPYSRC,SD9391RVKS
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
     C           W0HLP     DOUEQ'N'
     C           W0ROL     ANDEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Update screen time
     C                     TIME           ##TME
     C           W0SCR     IFEQ 1
      * Set error
     C                     MOVEAINSCR1    *IN,31
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
     C                     ELSE
     C           W0SCR     IFEQ 2
      * Set error
     C                     MOVEAINSCR2    *IN,31
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y2SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT3
     C                     EXFMT#RCDDTL2
      * Test cursor
     C                     EXSR Y8TST
     C                     END
     C                     END
      * Reset roll flag
     C                     MOVEL'N'       W0ROL   1
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Show next page of details
     C   27                EXSR CDNXSC
      * Show previous page of details
     C   28                EXSR CEPVSC
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * 00/Copy member SD9391RPKR - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTProcess Key Screen Rqst
     C/COPY WNCPYSRC,SD9391RPKR
      * Bypass KEY screen if F12 is pressed on detail screen
     C                     MOVEL'PREV'    P0RTN            *Return code
     C                     EXSR ZYEXPG
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      * Initialise error memories
     C                     MOVE *ZERO     INSCR1
     C                     MOVE *ZERO     INSCR2
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CDNXSC    BEGSR
      *================================================================
      * Display next screen
      *================================================================
      * Set roll flag
     C                     MOVEL'Y'       W0ROL   1
     C                     Z-ADD2         W0SCR
      *================================================================
     CSR         CDEXIT    ENDSR
      /EJECT
     CSR         CEPVSC    BEGSR
      *================================================================
      * Display previous screen
      *================================================================
      * Set roll flag
     C                     MOVEL'Y'       W0ROL   1
     C                     Z-ADD1         W0SCR
      *================================================================
     CSR         CEEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     MOVE *ZEROS    INSCR1
     C                     MOVE *ZEROS    INSCR2
     C                     EXSR DCVLDL
      * Display first screen in error
     C           INSCR1    IFNE *ZERO
     C                     Z-ADD1         W0SCR
     C                     ELSE
     C           INSCR2    IFNE *ZERO
     C                     Z-ADD2         W0SCR
     C                     END
     C                     END
      * QUIT if error:
     C           *IN99     CABEQ'1'       CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate Pledges Increases BPWR
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1INBP    W0NSRQ  1        Pledges Increas
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1183433   Y2LSNO  70
     C           #1INBP    PARM #1INBP    W0EXVL 20        Pledges Increas
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I1,32
     C                     SETON                     99    *
     C                     END
      * Validate Pledges Calculations
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1PLDC    W0NSRQ  1        Pledges Calcula
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1184492   Y2LSNO  70
     C           #1PLDC    PARM #1PLDC    W0EXVL 20        Pledges Calcula
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I1,33
     C                     SETON                     99    *
     C                     END
      * Validate Collateral Market/Nominal
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1CMNV    W0NSRQ  1        Collateral Mark
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1184497   Y2LSNO  70
     C           #1CMNV    PARM #1CMNV    W0EXVL 20        Collateral Mark
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I1,34
     C                     SETON                     99    *
     C                     END
      * Validate Report Freq Cmt Reviewed
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1FRCL    W0NSRQ  1        Report Freq Cmt
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1184531   Y2LSNO  70
     C           #1FRCL    PARM #1FRCL    W0EXVL 20        Report Freq Cmt
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I1,37
     C                     SETON                     99    *
     C                     END
      * Validate LB Clients DL Exposure
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1LCDL    W0NSRQ  1        LB Clients DL E
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1185004   Y2LSNO  70
     C           #1LCDL    PARM #1LCDL    W0EXVL 20        LB Clients DL E
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I2,52
     C                     SETON                     99    *
     C                     END
      * Validate LB Clients LE Exposure
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1LCLE    W0NSRQ  1        LB Clients LE E
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1185015   Y2LSNO  70
     C           #1LCLE    PARM #1LCLE    W0EXVL 20        LB Clients LE E
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I2,53
     C                     SETON                     99    *
     C                     END
      * Validate LB Clients RE Exposure
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1LCRT    W0NSRQ  1        LB Clients RE E
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1185020   Y2LSNO  70
     C           #1LCRT    PARM #1LCRT    W0EXVL 20        LB Clients RE E
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I2,54
     C                     SETON                     99    *
     C                     END
      * Validate Margin on Limit/Exposure
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1MGLE    W0NSRQ  1        Margin on Limit
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C                     CALL 'Y2VLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1185024   Y2LSNO  70
     C           #1MGLE    PARM #1MGLE    W0EXVL 20        Margin on Limit
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *
     C           W0RTN     IFNE *BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL'1'       @I2,55
     C                     SETON                     99    *
     C                     END
      * USER: Validate detail screen fields
      * DTL.Time of last update   DRS = JOB.*Job time
     C                     Z-ADD##JTM     #1TLUP           Time of last up
      * 00/Copy member SD9391RVSF - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTValidate Detail Screen
     C/COPY WNCPYSRC,SD9391RVSF
      * Portfolio Lending Currency
      * CASE: DTL.Currency Code is blank
     C           #1CYCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CYCD    ZA0001           Currency Code
      * Send message 'PL currency is required'
     C                     MOVEL'USR2463' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,31           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1CYCD    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
     C                     MOVEL*BLANK    WUCYCD           Currency Code
      * Select Currency Codes - Currency Codes  *
     C                     CALL 'SD0020S'              90  Select Currency
     C                     PARM *BLANK    W0RTN   7
     C           WUCYCD    PARM WUCYCD    WQ0050  3        Currency Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0020S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUCYCD    #1CYCD           Currency Code
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1CYCD    WUCYCD           Currency Code
      * Check for ccy existance - Currency Codes  *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1CYCD    ZA0002           Currency Code
      * Send message 'P/folio Lend Curr invalid'
     C                     MOVEL'USR2464' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,31           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Pledge Received Increase Borrowing Power
      * CASE: DTL.Pledges Increases BPWR is Blank
     C           #1INBP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1INBP    ZA0003           Pledges Increas
      * Send message 'Pledge Rec Inc BPWR reqd'
     C                     MOVEL'USR2465' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,32           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Pledges Increases BPWR is Valid values
     C           #1INBP    IFEQ 'N'                        *IF
     C           #1INBP    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1INBP    ZA0004           Pledges Increas
      * Send message 'Pledge Rec Inc BPWR invld'
     C                     MOVEL'USR2466' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,32           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Pledges Calculation
      * CASE: DTL.Pledges Calculations is Blank
     C           #1PLDC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PLDC    ZA0005           Pledges Calcula
      * Send message 'Pledges Calculation reqrd'
     C                     MOVEL'USR2467' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,33           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Pledges Calculations is Valid values
     C           #1PLDC    IFEQ 'B'                        *IF
     C           #1PLDC    OREQ 'C'
     C           #1PLDC    OREQ 'T'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PLDC    ZA0006           Pledges Calcula
      * Send message 'Pledges calc is invalid'
     C                     MOVEL'USR2468' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,33           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Market or Nominal Value in SE Calculations
      * CASE: DTL.Collateral Market/Nominal is Blank
     C           #1CMNV    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CMNV    ZA0007           Collateral Mark
      * Send message 'Mkt/Nmnl value SE requird'
     C                     MOVEL'USR2469' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,34           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Collateral Market/Nominal is Valid values
     C           #1CMNV    IFEQ 'M'                        *IF
     C           #1CMNV    OREQ 'N'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CMNV    ZA0008           Collateral Mark
      * Send message 'M/N value in SE cal invld'
     C                     MOVEL'USR2470' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,34           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Review Exposure vs Commitment Line %
      * CASE: DTL.Review Exp % SCR is Blank
     C           #DRVSC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DRVSC    ZA0009           Review Exp % SC
      * Send message 'Review Exp Vs Comm requrd'
     C                     MOVEL'USR2471' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,35           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DRVSC    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0051  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0052 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0053  10       ZALIGN No Of De
     C                     PARM 3         WQ0054  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0055 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0056 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0057  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DRVSC    ZA0010           Review Exp % SC
      * Send message 'Review Exp vs Comm number'
     C                     MOVEL'USR2472' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,35           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign Rev Exp vs Commit - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DRVSC
     C*
     C                     MOVE WUZAFF    #1PERE           Exposure/Commit
      * Valid range ?
      * CASE: DTL.Exposure/Commit Line % is Valid Range
     C           #1PERE    IFGE *ZERO                      *IF
     C           #1PERE    ANDLE99
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DRVSC    ZA0011           Review Exp % SC
      * Send message 'Review Exp vs Commt 0-99'
     C                     MOVEL'USR2473' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,35           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Period to review commitment lines
      * CASE: DTL.Period to review SCR is Blank
     C           #DPRRV    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DPRRV    ZA0012           Period to revie
      * Send message 'Period to review is reqd'
     C                     MOVEL'USR2474' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,36           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DPRRV    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0058  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0059 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0060  10       ZALIGN No Of De
     C                     PARM 3         WQ0061  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0062 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0063 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0064  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DPRRV    ZA0013           Period to revie
      * Send message 'Period to review number'
     C                     MOVEL'USR2475' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,36           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign Period to review - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPRRV
     C*
     C                     MOVE WUZAFF    #1PERL           Period Review C
     C                     END                             *FI
     C                     END                             *FI
      * Review Report Frequency Commitment Lines
      * CASE: DTL.Report Freq Cmt Reviewed is Blank
     C           #1FRCL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FRCL    ZA0014           Report Freq Cmt
      * Send message 'Report frequency is reqrd'
     C                     MOVEL'USR2476' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,37           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Report Freq Cmt Reviewed is Valid values
     C           #1FRCL    IFEQ 'D'                        *IF
     C           #1FRCL    OREQ 'X'
     C           #1FRCL    OREQ 'M'
     C           #1FRCL    OREQ 'Q'
     C           #1FRCL    OREQ 'W'
     C           #1FRCL    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FRCL    ZA0015           Report Freq Cmt
      * Send message 'Report Freq invalid'
     C                     MOVEL'USR2477' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,37           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Excess Exp Amount over commitment line
      * CASE: DTL.Excess Amt SCR is Blank
     C           #DEXCS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DEXCS    ZA0016           Excess Amt SCR
      * Send message 'Excess Exp Amt is requird'
     C                     MOVEL'USR2478' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,38           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DEXCS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0065  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0066 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0067  10       ZALIGN No Of De
     C                     PARM 13        WQ0068  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0069 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0070 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0071  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DEXCS    ZA0017           Excess Amt SCR
      * Send message 'Excess Exp amt numeric'
     C                     MOVEL'USR2479' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,38           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign Excess Exp Amt - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DEXCS
     C*
     C                     MOVE WUZAFF    #1AMTE           Exposure/Commit
     C                     END                             *FI
     C                     END                             *FI
      * FX Margin approach
      * CASE: DTL.FX Margin App SCR is Blank
     C           #DFXAP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DFXAP    ZA0018           FX Margin App S
      * Send message 'FX Margin App is required'
     C                     MOVEL'USR2553' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,39           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DFXAP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0072  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0073 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0074  10       ZALIGN No Of De
     C                     PARM 2         WQ0075  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0076 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0077 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0078  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DFXAP    ZA0019           FX Margin App S
      * Send message 'FX Margins app numeric'
     C                     MOVEL'USR2483' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,39           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign FX margin approach - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DFXAP
     C*
     C                     MOVE WUZAFF    #1FXMP           FX Margin Revie
     C                     END                             *FI
     C                     END                             *FI
      * PM Margin approach
      * CASE: DTL.PM Margin App SCR is Blank
     C           #DPMAP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DPMAP    ZA0020           PM Margin App S
      * Send message 'PM margins app is requird'
     C                     MOVEL'USR2554' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,40           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DPMAP    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0079  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0080 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0081  10       ZALIGN No Of De
     C                     PARM 2         WQ0082  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0083 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0084 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0085  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DPMAP    ZA0021           PM Margin App S
      * Send message 'PM margins app numeric'
     C                     MOVEL'USR2484' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,40           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign PM margin approach - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPMAP
     C*
     C                     MOVE WUZAFF    #1PMMP           PM Margin Revie
     C                     END                             *FI
     C                     END                             *FI
      * FX Margin Percentage
      * CASE: DTL.FX Margin % SCR is Blank
     C           #DFXPC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DFXPC    ZA0022           FX Margin % SCR
      * Send message 'FX Margin % is required'
     C                     MOVEL'USR2555' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,41           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DFXPC    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0086  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0087 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0088  10       ZALIGN No Of De
     C                     PARM 2         WQ0089  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0090 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0091 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0092  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DFXPC    ZA0023           FX Margin % SCR
      * Send message 'FX Margins % numeric'
     C                     MOVEL'USR2485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,41           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign FX margin % - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DFXPC
     C*
     C                     MOVE WUZAFF    #1FXCP           FX Margin %
     C                     END                             *FI
     C                     END                             *FI
      * PM Margin Percentage
      * CASE: DTL.PM Margin % SCR is Blank
     C           #DPMPC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DPMPC    ZA0024           PM Margin % SCR
      * Send message 'PM Margin % is required'
     C                     MOVEL'USR2556' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,42           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DPMPC    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0093  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0094 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0095  10       ZALIGN No Of De
     C                     PARM 2         WQ0096  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0097 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0098 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0099  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DPMPC    ZA0025           PM Margin % SCR
      * Send message 'PM margins % numeric'
     C                     MOVEL'USR2486' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I1,42           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Zalign PM margin % - Portfolio Lending ICD  *
     C*
     C                     MOVE WUZASF    #DPMPC
     C*
     C                     MOVE WUZAFF    #1PMCP           PM Margin %
     C                     END                             *FI
     C                     END                             *FI
      * Validate the 2nd screen.
      * Held Items
      * CASE: 2ND.Predefined Held Items is Blank
     C           #1HLDI    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1HLDI    ZA0026           Predefined Held
      * Send message 'Held items is required'
     C                     MOVEL'USR2487' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,31           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1HLDI    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1HLDI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'Held items not selected'
     C                     MOVEL'USR2488' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Ins to Held items - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1HLDI
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1HLDI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1HLDI    ZA0027           Predefined Held
      * Send message 'Held Items does not exist'
     C                     MOVEL'USR2489' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,31           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Customer Exchange
      * CASE: 2ND.Predefined Customer Exch is Blank
     C           #1CUSI    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1CUSI    ZA0028           Predefined Cust
      * Send message 'Cust Exchg is required'
     C                     MOVEL'USR2490' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,32           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1CUSI    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1CUSI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'Cust Exchg not selected'
     C                     MOVEL'USR2491' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to Cust Exch - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1CUSI
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1CUSI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1CUSI    ZA0029           Predefined Cust
      * Send message 'Cust Exchg does not exist'
     C                     MOVEL'USR2492' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,32           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Pledges
      * CASE: 2ND.Predefined Pledges is Blank
     C           #1PLEG    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PLEG    ZA0030           Predefined Pled
      * Send message 'Pledges is required'
     C                     MOVEL'USR2493' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,33           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PLEG    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PLEG    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'Pledges not selected'
     C                     MOVEL'USR2494' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to Pledges - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PLEG
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PLEG    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PLEG    ZA0031           Predefined Pled
      * Send message 'Pledges does not exist'
     C                     MOVEL'USR2495' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,33           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Guarantees
      * CASE: 2ND.Predefined Guarantees is Blank
     C           #1GUAR    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1GUAR    ZA0032           Predefined Guar
      * Send message 'Guarantees is reqd'
     C                     MOVEL'USR2496' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,34           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1GUAR    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1GUAR    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'Guarantees not selected'
     C                     MOVEL'USR2497' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to Guarantees - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1GUAR
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1GUAR    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1GUAR    ZA0033           Predefined Guar
      * Send message 'Guarantees is invalid'
     C                     MOVEL'USR2498' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,34           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Security
      * CASE: 2ND.Predefined Security is Blank
     C           #1SECU    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1SECU    ZA0034           Predefined Secu
      * Send message 'Security is required'
     C                     MOVEL'USR2499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,35           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1SECU    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1SECU    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'Security not selected'
     C                     MOVEL'USR2500' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to Security - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1SECU
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1SECU    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1SECU    ZA0035           Predefined Secu
      * Send message 'Security is invalid'
     C                     MOVEL'USR2501' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,35           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Collateral
      * CASE: 2ND.Predefined Collateral is Blank
     C           #1COLI    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1COLI    ZA0036           Predefined Coll
      * Send message 'Collateral is reqd'
     C                     MOVEL'USR2502' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,36           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1COLI    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1COLI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Setup message data for message
     C                     MOVEL#1COLI    ZA0037           Predefined Coll
      * Send message 'Collateral not selected.'
     C                     MOVEL'USR2503' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to Collateral - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1COLI
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1COLI    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1COLI    ZA0038           Predefined Coll
      * Send message 'Collateral is invalid'
     C                     MOVEL'USR2504' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,36           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Unrealised Profit
      * CASE: 2ND.Predefined FX Unr Profit is Blank
     C           #1FXUP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FXUP    ZA0039           Predefined FX U
      * Send message 'FX Unrealised Profit reqd'
     C                     MOVEL'USR2506' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,37           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1FXUP    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1FXUP    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX Unrealised P not selec'
     C                     MOVEL'USR2507' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to FX Unreal P - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1FXUP
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1FXUP    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXUP    ZA0040           Predefined FX U
      * Send message 'FX unrealised P invalid'
     C                     MOVEL'USR2508' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,37           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PM Unrealised Profit
      * CASE: 2ND.Predefined PM Unr Profit is Blank
     C           #1PMUP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PMUP    ZA0041           Predefined PM U
      * Send message 'PM unrealised P is reqd'
     C                     MOVEL'USR2509' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,38           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PMUP    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PMUP    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'PM Unrealised P not sel'
     C                     MOVEL'USR2510' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to PM Unreal P - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PMUP
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PMUP    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PMUP    ZA0042           Predefined PM U
      * Send message 'PM Unrealised P invalid'
     C                     MOVEL'USR2511' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,38           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Unrealised Loss
      * CASE: 2ND.Predefined FX Unr Loss is Blank
     C           #1FXUL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FXUL    ZA0043           Predefined FX U
      * Send message 'FX unrealised L is reqd'
     C                     MOVEL'USR2512' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,39           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1FXUL    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1FXUL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX Unrealised L not selec'
     C                     MOVEL'USR2513' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to FX Unreal L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1FXUL
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1FXUL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXUL    ZA0044           Predefined FX U
      * Send message 'FX unreal L is invalid'
     C                     MOVEL'USR2514' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,39           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PM Unrealised Loss
      * CASE: 2ND.Predefined PM Unr Loss is Blank
     C           #1PMUL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PMUL    ZA0045           Predefined PM U
      * Send message 'PM Unrealis L is required'
     C                     MOVEL'USR2515' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,40           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PMUL    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PMUL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'PM Unrealised not selectd'
     C                     MOVEL'USR2516' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to PM Unreal L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PMUL
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PMUL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PMUL    ZA0046           Predefined PM U
      * Send message 'PM unrealised L is invald'
     C                     MOVEL'USR2517' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,40           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Net Unrealised P/L
      * CASE: 2ND.Predefined Margin Call is Blank
     C           #1FXMC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FXMC    ZA0047           Predefined Marg
      * Send message 'FX Unrealised P/L is reqd'
     C                     MOVEL'USR2518' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,41           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1FXMC    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1FXMC    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX Net unreal not selectd'
     C                     MOVEL'USR2519' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to FX Net P/L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1FXMC
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1FXMC    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXMC    ZA0048           Predefined Marg
      * Send message 'FX net unreal invalid'
     C                     MOVEL'USR2520' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,41           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PM Net Unrealised P/L
      * CASE: 2ND.Predefined PM Margin Call is Blank
     C           #1PMMC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PMMC    ZA0049           Predefined PM M
      * Send message 'PM net unreal is required'
     C                     MOVEL'USR2521' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,42           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PMMC    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PMMC    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * No selection was made, send an information message.
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Setup message data for message
     C                     MOVEL#1PMMC    ZA0050           Predefined PM M
      * Send message 'PM Net unreal not selectd'
     C                     MOVEL'USR2522' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to PM Net P/L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PMMC
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PMMC    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PMMC    ZA0051           Predefined PM M
      * Send message 'PM net unreal P/L not sel'
     C                     MOVEL'USR2523' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,42           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Margin
      * CASE: 2ND.Predefined FX Margin is Blank
     C           #1FXMA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FXMA    ZA0052           Predefined FX M
      * Send message 'FX margin is required'
     C                     MOVEL'USR2524' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,43           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1FXMA    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1FXMA    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX margin was not selectd'
     C                     MOVEL'USR2525' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to FX Margin - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1FXMA
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1FXMA    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXMA    ZA0053           Predefined FX M
      * Send message 'FX Margin invalid'
     C                     MOVEL'USR2526' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,43           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PM Margin
      * CASE: 2ND.Predefined PM Margin is Blank
     C           #1PMMA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PMMA    ZA0054           Predefined PM M
      * Send message 'PM Margin is required.'
     C                     MOVEL'USR2527' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,44           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PMMA    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PMMA    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'PM Margin was not selectd'
     C                     MOVEL'USR2528' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to PM Margin - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PMMA
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PMMA    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PMMA    ZA0055           Predefined PM M
      * Send message 'PM Margin is invalid'
     C                     MOVEL'USR2529' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,44           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Closed Profit/Loss
      * CASE: 2ND.Predefined Clsd Forex P/L is Blank
     C           #1FXPL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1FXPL    ZA0056           Predefined Clsd
      * Send message 'FX Closd P/L is required'
     C                     MOVEL'USR2530' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,45           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1FXPL    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1FXPL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX clsd P/L was not selct'
     C                     MOVEL'USR2531' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to FX Clsd P/L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1FXPL
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1FXPL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1FXPL    ZA0057           Predefined Clsd
      * Send message 'FX Closed P/L is invalid'
     C                     MOVEL'USR2532' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,45           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * PM Closed Profit/Loss
      * CASE: 2ND.Predefined Closed PM P/L is Blank
     C           #1PMPL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PMPL    ZA0058           Predefined Clos
      * Send message 'PM clsd P/L is required'
     C                     MOVEL'USR2533' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,46           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PMPL    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1PMPL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'PM clsd P/L not selected'
     C                     MOVEL'USR2534' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Inst to PM Clsd P/L - Portfolio Lending ICD  *
     C*
     C                     MOVE PDINNR    #1PMPL
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1PMPL    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1PMPL    ZA0059           Predefined Clos
      * Send message 'PM clsd P/L is invalid'
     C                     MOVEL'USR2535' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,46           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FX Exchange Modular Limit
      * CASE: 2ND.FX Moduler Limit is Entered
     C           #1LIFX    IFNE *BLANK                     *IF
     C                     MOVEL#1LIFX    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1LIFX    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'FX exchg Mod not selected'
     C                     MOVEL'USR2543' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move FX Mod to SCR - Portfolio Lending ICD  *
     C*
     C                     MOVE GPLCGR    #1LIFX
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1LIFX    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LIFX    ZA0060           FX Moduler Limi
      * Send message 'FX Exchg Mod is invalid'
     C                     MOVEL'USR2544' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,47           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lending Modular Limit
      * CASE: 2ND.LE Moduler Limit is Entered
     C           #1LILE    IFNE *BLANK                     *IF
     C                     MOVEL#1LILE    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1LILE    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'LE Mod Limit not selected'
     C                     MOVEL'USR2545' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move LE Mod to SCR - Portfolio Lending ICD  *
     C*
     C                     MOVE GPLCGR    #1LILE
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1LILE    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LILE    ZA0061           LE Moduler Limi
      * Send message 'LE Mod limit is invalid'
     C                     MOVEL'USR2546' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,48           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Precious Metal Modular Limit
      * CASE: 2ND.PM Moduler Limit is Entered
     C           #1LIPM    IFNE *BLANK                     *IF
     C                     MOVEL#1LIPM    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1LIPM    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'PM modular limit not selc'
     C                     MOVEL'USR2547' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move PM Mod to SCR - Portfolio Lending ICD  *
     C*
     C                     MOVE GPLCGR    #1LIPM
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1LIPM    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LIPM    ZA0062           PM Moduler Limi
      * Send message 'PM Mod limit invalid'
     C                     MOVEL'USR2548' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,49           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Retail Modular Limit
      * CASE: 2ND.RE Moduler Limit is Entered
     C           #1LIRE    IFNE *BLANK                     *IF
     C                     MOVEL#1LIRE    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1LIRE    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check if selection was made
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'RE mod limit not selected'
     C                     MOVEL'USR2549' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move RE Mod to SCR - Portfolio Lending ICD  *
     C*
     C                     MOVE GPLCGR    #1LIRE
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1LIRE    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LIRE    ZA0063           RE Moduler Limi
      * Send message 'RE modular limit invalid'
     C                     MOVEL'USR2550' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,50           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Money Market Modular Limit
      * CASE: 2ND.MM Moduler Limit is Entered
     C           #1LIMM    IFNE *BLANK                     *IF
     C                     MOVEL#1LIMM    WUTQKF           Test ? in Key F
      * CASE: WRK.Test ? in Key Field is Question Mark
     C           WUTQKF    IFEQ '?'                        *IF
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *KEY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*KEY'    UUAPOP  7        OPTION
     C                     PARM #1LIMM    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * No selection was made, send an information message.
      * CASE: WRK.Access Pgm Return Code is No selection
     C           WUAPRC    IFEQ '*NOSEL'                   *IF
      * Send message 'MM mod limit not selected'
     C                     MOVEL'USR2551' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Move MM Mod to SCR - Portfolio Lending ICD  *
     C*
     C                     MOVE GPLCGR    #1LIMM
     C*
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *VERIFY
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*VERIFY' UUAPOP  7        OPTION
     C                     PARM #1LIMM    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * Check access object return code
      * CASE: WRK.Access Pgm Return Code is *Normal
     C           WUAPRC    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LIMM    ZA0064           MM Moduler Limi
      * Send message 'MM mod limit is invalid'
     C                     MOVEL'USR2552' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,51           *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Dealing Exposure
      * CASE: DTL.LB Clients DL Exposure is Blank
     C           #1LCDL    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LCDL    ZA0065           LB Clients DL E
      * Send message 'Dealing Exposure is reqd'
     C                     MOVEL'USR2536' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,52           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.LB Clients DL Exposure is Valid valus
     C           #1LCDL    IFEQ 'N'                        *IF
     C           #1LCDL    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LCDL    ZA0066           LB Clients DL E
      * Send message 'Dealing exposure invalid'
     C                     MOVEL'USR2537' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,52           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Lending Exposure
      * CASE: DTL.LB Clients LE Exposure is Blank
     C           #1LCLE    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LCLE    ZA0067           LB Clients LE E
      * Send message 'Lending Exp is required'
     C                     MOVEL'USR2538' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,53           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.LB Clients LE Exposure is Valid values
     C           #1LCLE    IFEQ 'N'                        *IF
     C           #1LCLE    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LCLE    ZA0068           LB Clients LE E
      * Send message 'Lending Exposure invalid'
     C                     MOVEL'USR2539' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,53           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Retail Exposure
      * CASE: DTL.LB Clients RE Exposure is Blank
     C           #1LCRT    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1LCRT    ZA0069           LB Clients RE E
      * Send message 'Retail exposure is reqd'
     C                     MOVEL'USR2540' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,54           *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.LB Clients RE Exposure is Valid values
     C           #1LCRT    IFEQ 'N'                        *IF
     C           #1LCRT    OREQ 'Y'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1LCRT    ZA0070           LB Clients RE E
      * Send message 'Retail Exposure invalid'
     C                     MOVEL'USR2541' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,54           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Margin on Limit Exp
      * CASE: DTL.Margin on Limit/Exposure is Blank
     C           #1MGLE    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Margin on Limit/Exposure is Valid values
     C           #1MGLE    IFEQ 'E'                        *IF
     C           #1MGLE    OREQ 'L'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1MGLE    ZA0071           Margin on Limit
      * Send message 'Margin on L/Exp invalid'
     C                     MOVEL'USR2542' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     MOVEL'1'       @I2,55           *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Access obj SDPLINPD - Portfolio Lending ICD  *     *FREE
     C*
     C                     CALL 'AOPLINR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*FREE'   UUAPOP  7        OPTION
     C                     PARM *BLANK    UUINNR  3        INS TYPE
     C           D@PLIN    PARM *BLANK    UUSDY            FORMAT
     C*
      * Access Obj LBGROUPD - Portfolio Lending ICD  *     *FREE
     C*
     C                     CALL 'AOGROUR0'
     C           WUAPRC    PARM WUAPRC    UUAPRC  7        RETURN CDE
     C                     PARM '*FREE'   UUAPOP  7        OPTION
     C                     PARM #1LIFX    UUINNR  3        MOD
     C           D@GROU    PARM *BLANK    UUSDY            FORMAT
     C*
      * CALC: Detail screen function fields
      * 00/Copy member SD9391RSFF - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTCalc Detail Function Flds
     C/COPY WNCPYSRC,SD9391RSFF
      * USER: Validate detail screen relations
      * 00/Copy member SD9391RVSR - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTValidate Screen Relns
     C/COPY WNCPYSRC,SD9391RVSR
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * 00/Copy member SD9391RPCK - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTProcess Command Keys
     C/COPY WNCPYSRC,SD9391RPCK
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Portfolio Lending - Portfolio Lending ICD  *
     C                     EXSR SBCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C           W0SCR     IFNE 1
     C                     END
     C           W0SCR     IFNE 2
     C                     END
     C           W0SCR     IFEQ 1
     C                     ELSE
     C           W0SCR     IFEQ 2
     C                     END
     C                     END
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVEL*BLANK    #PWRTC           Work Return cod
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1RECI           Record Id
     C                     Z-ADD*ZERO     #1DLUP           Day of last upd
     C                     MOVEL*BLANK    #1MLUP           Month of last u
     C                     Z-ADD*ZERO     #1YLUP           Year of last up
     C                     Z-ADD*ZERO     #1TLUP           Time of last up
     C                     Z-ADD*ZERO     #1ORED           Original entry
     C                     Z-ADD*ZERO     #1PERE           Exposure/Commit
     C                     Z-ADD*ZERO     #1PERL           Period Review C
     C                     Z-ADD*ZERO     #1AMTE           Exposure/Commit
     C                     Z-ADD*ZERO     #1FXMP           FX Margin Revie
     C                     Z-ADD*ZERO     #1PMMP           PM Margin Revie
     C                     Z-ADD*ZERO     #1FXCP           FX Margin %
     C                     Z-ADD*ZERO     #1PMCP           PM Margin %
     C                     MOVEL*BLANK    #1HLDI           Predefined Held
     C                     MOVEL*BLANK    #1CUSI           Predefined Cust
     C                     MOVEL*BLANK    #1PLEG           Predefined Pled
     C                     MOVEL*BLANK    #1GUAR           Predefined Guar
     C                     MOVEL*BLANK    #1COLI           Predefined Coll
     C                     MOVEL*BLANK    #1SECU           Predefined Secu
     C                     MOVEL*BLANK    #1FXUP           Predefined FX U
     C                     MOVEL*BLANK    #1FXUL           Predefined FX U
     C                     MOVEL*BLANK    #1FXMA           Predefined FX M
     C                     MOVEL*BLANK    #1FXMC           Predefined Marg
     C                     MOVEL*BLANK    #1FXPL           Predefined Clsd
     C                     MOVEL*BLANK    #1PMUP           Predefined PM U
     C                     MOVEL*BLANK    #1PMUL           Predefined PM U
     C                     MOVEL*BLANK    #1PMMA           Predefined PM M
     C                     MOVEL*BLANK    #1PMMC           Predefined PM M
     C                     MOVEL*BLANK    #1PMPL           Predefined Clos
     C                     MOVEL*BLANK    #1LIFX           FX Moduler Limi
     C                     MOVEL*BLANK    #1LIPM           PM Moduler Limi
     C                     MOVEL*BLANK    #1LIMM           MM Moduler Limi
     C                     MOVEL*BLANK    #1LILE           LE Moduler Limi
     C                     MOVEL*BLANK    #1LIRE           RE Moduler Limi
     C                     MOVEL*BLANK    #1LCDL           LB Clients DL E
     C                     MOVEL*BLANK    #1LCLE           LB Clients LE E
     C                     MOVEL*BLANK    #1LCRT           LB Clients RE E
     C                     MOVEL*BLANK    #1MGLE           Margin on Limit
     C                     MOVEL*BLANK    #1CYCD           Currency Code
     C                     MOVEL*BLANK    #1INBP           Pledges Increas
     C                     MOVEL*BLANK    #1PLDC           Pledges Calcula
     C                     MOVEL*BLANK    #1CMNV           Collateral Mark
     C                     MOVEL*BLANK    #DRVSC           Review Exp % SC
     C                     MOVEL*BLANK    #DPRRV           Period to revie
     C                     MOVEL*BLANK    #1FRCL           Report Freq Cmt
     C                     MOVEL*BLANK    #DEXCS           Excess Amt SCR
     C                     MOVEL*BLANK    #DFXAP           FX Margin App S
     C                     MOVEL*BLANK    #DPMAP           PM Margin App S
     C                     MOVEL*BLANK    #DFXPC           FX Margin % SCR
     C                     MOVEL*BLANK    #DPMPC           PM Margin % SCR
     C                     MOVEL*BLANK    #PWRTC           Work Return cod
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @LOMBL1 fields to screen
      *================================================================
     C                     MOVELLBLBCR    #1LBCR           Portfolio Lendi
     C                     MOVELLBTYLC    #1TYLC           Type of Last Ch
     C                     Z-ADDLBLCD     #1LCD            Last Change Dat
     C                     MOVELLBRECI    #1RECI           Record Id
     C                     Z-ADDLBDLUP    #1DLUP           Day of last upd
     C                     MOVELLBMLUP    #1MLUP           Month of last u
     C                     Z-ADDLBYLUP    #1YLUP           Year of last up
     C                     Z-ADDLBTLUP    #1TLUP           Time of last up
     C                     Z-ADDLBORED    #1ORED           Original entry
     C                     Z-ADDLBPERE    #1PERE           Exposure/Commit
     C                     Z-ADDLBPERL    #1PERL           Period Review C
     C                     Z-ADDLBAMTE    #1AMTE           Exposure/Commit
     C                     Z-ADDLBFXMP    #1FXMP           FX Margin Revie
     C                     Z-ADDLBPMMP    #1PMMP           PM Margin Revie
     C                     Z-ADDLBFXCP    #1FXCP           FX Margin %
     C                     Z-ADDLBPMCP    #1PMCP           PM Margin %
     C                     MOVELLBHLDI    #1HLDI           Predefined Held
     C                     MOVELLBCUSI    #1CUSI           Predefined Cust
     C                     MOVELLBPLEG    #1PLEG           Predefined Pled
     C                     MOVELLBGUAR    #1GUAR           Predefined Guar
     C                     MOVELLBCOLI    #1COLI           Predefined Coll
     C                     MOVELLBSECU    #1SECU           Predefined Secu
     C                     MOVELLBFXUP    #1FXUP           Predefined FX U
     C                     MOVELLBFXUL    #1FXUL           Predefined FX U
     C                     MOVELLBFXMA    #1FXMA           Predefined FX M
     C                     MOVELLBFXMC    #1FXMC           Predefined Marg
     C                     MOVELLBFXPL    #1FXPL           Predefined Clsd
     C                     MOVELLBPMUP    #1PMUP           Predefined PM U
     C                     MOVELLBPMUL    #1PMUL           Predefined PM U
     C                     MOVELLBPMMA    #1PMMA           Predefined PM M
     C                     MOVELLBPMMC    #1PMMC           Predefined PM M
     C                     MOVELLBPMPL    #1PMPL           Predefined Clos
     C                     MOVELLBLIFX    #1LIFX           FX Moduler Limi
     C                     MOVELLBLIPM    #1LIPM           PM Moduler Limi
     C                     MOVELLBLIMM    #1LIMM           MM Moduler Limi
     C                     MOVELLBLILE    #1LILE           LE Moduler Limi
     C                     MOVELLBLIRE    #1LIRE           RE Moduler Limi
     C                     MOVELLBLCDL    #1LCDL           LB Clients DL E
     C                     MOVELLBLCLE    #1LCLE           LB Clients LE E
     C                     MOVELLBLCRT    #1LCRT           LB Clients RE E
     C                     MOVELLBMGLE    #1MGLE           Margin on Limit
     C                     MOVELLBCYCD    #1CYCD           Currency Code
     C                     MOVELLBINBP    #1INBP           Pledges Increas
     C                     MOVELLBPLDC    #1PLDC           Pledges Calcula
     C                     MOVELLBCMNV    #1CMNV           Collateral Mark
     C                     MOVELLBFRCL    #1FRCL           Report Freq Cmt
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVEL*BLANK    #PWRTC           Work Return cod
     C                     MOVELP1LBCR    #1LBCR           Portfolio Lendi
      * USER: Initialize key screen
      * 00/Copy member SD9391RIKS - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTInitialise Key Screen
     C/COPY WNCPYSRC,SD9391RIKS
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Check for ccy existance - Currency Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           A6CYCD           Currency Code
      * Move fields to key list
     C                     MOVELWUCYCD    A6CYCD           Currency Code
     C           KRSSA     CHAIN@A6REA3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0071' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCHRC    BEGSR
      *================================================================
      * Change Portfolio Lending - Portfolio Lending ICD  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @LOMBL0
     C                     MOVEL#1LBCR    LBLBCR           Portfolio Lendi
      *
     C           KLCHSB    KLIST
     C                     KFLD           LBLBCR           Portfolio Lendi
     C           KLCHSB    CHAIN@LOMBL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SBEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKSDLOMBL0               91  *
     C                     GOTO SBEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * USER: Processing after Data read
      * save Last Change Date from record
     C                     Z-ADDLBLCD     WULCD            Last Change Dat
      * Move non-key fields to @LOMBL0
     C                     MOVEL'A'       LBTYLC           Type of Last Ch
     C                     Z-ADDWURDNB    LBLCD            Last Change Dat
     C                     MOVEL#1RECI    LBRECI           Record Id
     C                     Z-ADDWUDLUP    LBDLUP           Day of last upd
     C                     MOVELWUMLUP    LBMLUP           Month of last u
     C                     Z-ADDWUYLUP    LBYLUP           Year of last up
     C                     Z-ADD#1TLUP    LBTLUP           Time of last up
     C                     Z-ADDWURDNB    LBORED           Original entry
     C                     MOVEL#1CYCD    LBCYCD           Currency Code
     C                     MOVEL#1CMNV    LBCMNV           Collateral Mark
     C                     Z-ADD#1PERE    LBPERE           Exposure/Commit
     C                     Z-ADD#1AMTE    LBAMTE           Exposure/Commit
     C                     Z-ADD#1FXMP    LBFXMP           FX Margin Revie
     C                     Z-ADD#1FXCP    LBFXCP           FX Margin %
     C                     Z-ADD#1PERL    LBPERL           Period Review C
     C                     MOVEL#1FRCL    LBFRCL           Report Freq Cmt
     C                     MOVEL#1INBP    LBINBP           Pledges Increas
     C                     MOVEL#1PLDC    LBPLDC           Pledges Calcula
     C                     MOVEL#1HLDI    LBHLDI           Predefined Held
     C                     MOVEL#1CUSI    LBCUSI           Predefined Cust
     C                     MOVEL#1PLEG    LBPLEG           Predefined Pled
     C                     MOVEL#1GUAR    LBGUAR           Predefined Guar
     C                     MOVEL#1COLI    LBCOLI           Predefined Coll
     C                     MOVEL#1SECU    LBSECU           Predefined Secu
     C                     MOVEL#1FXUP    LBFXUP           Predefined FX U
     C                     MOVEL#1FXUL    LBFXUL           Predefined FX U
     C                     MOVEL#1FXMA    LBFXMA           Predefined FX M
     C                     MOVEL#1FXMC    LBFXMC           Predefined Marg
     C                     MOVEL#1FXPL    LBFXPL           Predefined Clsd
     C                     Z-ADD#1PMMP    LBPMMP           PM Margin Revie
     C                     Z-ADD#1PMCP    LBPMCP           PM Margin %
     C                     MOVEL#1PMUP    LBPMUP           Predefined PM U
     C                     MOVEL#1PMUL    LBPMUL           Predefined PM U
     C                     MOVEL#1PMMA    LBPMMA           Predefined PM M
     C                     MOVEL#1PMMC    LBPMMC           Predefined PM M
     C                     MOVEL#1PMPL    LBPMPL           Predefined Clos
     C                     MOVEL#1LIFX    LBLIFX           FX Moduler Limi
     C                     MOVEL#1LIPM    LBLIPM           PM Moduler Limi
     C                     MOVEL#1LIMM    LBLIMM           MM Moduler Limi
     C                     MOVEL#1LILE    LBLILE           LE Moduler Limi
     C                     MOVEL#1LIRE    LBLIRE           RE Moduler Limi
     C                     MOVEL#1LCDL    LBLCDL           LB Clients DL E
     C                     MOVEL#1LCLE    LBLCLE           LB Clients LE E
     C                     MOVEL#1LCRT    LBLCRT           LB Clients RE E
     C                     MOVEL#1MGLE    LBMGLE           Margin on Limit
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C/COPY WNCPYSRC,WN0481CCP1                                           S01408
     C***********          CALL 'WIND01'                                  S01212
     C                     CALL 'WN0010'                                  S01212
     C*********************PARM           ##PGM            Program        S01212
     C                     PARM ##PGM     UPGM   10        Program        S01212
     C*********************PARM *BLANK    FKEY    2        Function Key   S01212
     C                     PARM *BLANK    UFKEY   2        Function Key   S01212
     C*********************PARM           WUMEST           Action  S01212 S01229
     C*********************PARM           WUWMAC           Action  S01212 S01229
     C                     PARM 'A'       UACTCD  1        Action  S01212 S01229
     C                     PARM           DATA             Trans Data     S01212
     C                     PARM *BLANK    W0RTN            Return Code    S01212
     C                     PARM           SPARE 256        Spare Field    LN0355
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 00/Copy member SD9391RBUW - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTBefore Update, Window on
     C/COPY WNCPYSRC,SD9391RBUW
     C                     END                             *FI
      * 00/Copy member SD9391RBDU - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTProcessing Before Update
     C/COPY WNCPYSRC,SD9391RBDU
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@LOMBL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDLOMBL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * CASE: WRK.Last Change Date NE WRK.Run day number
     C           WULCD     IFNE WURDNB                     *IF
      * only update file controls if record has not been updated already
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SCCHRC
     C                     END                             *FI
      * 00/Copy member SD9391RADU - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTProcessing After Update
     C/COPY WNCPYSRC,SD9391RADU
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDICDRPD'AHFLNM           Filename
      *
     C           KLCHSC    KLIST
     C                     KFLD           AHFLNM           Filename
     C********** KLCHSC    CHAIN@AHREAU              9091  *                                MD061007
     C                     CALL 'SD000119'                                                  MD061007
     C                     PARM '*RTV'    ZMODE   4                                         MD061007
     C                     PARM           AHFLNM                                            MD061007
     C                     PARM 0         AHNORC                                            MD061007
     C                     PARM 0         AHNOIN                                            MD061007
     C                     PARM 0         AHNOAM                                            MD061007
     C                     PARM 0         AHNODL                                            MD061007
     C                     PARM *BLANKS   ZRETRN 10                                         MD061007
      *                                                                                     MD061007
     C                     SETOF                     9091                                   MD061007
     C           ZRETRN    IFEQ '*NRF'                                                      MD061007
     C                     SETON                     90                                     MD061007
     C                     ENDIF                                                            MD061007
     C           ZRETRN    IFEQ '*ERROR'                                                    MD061007
     C                     SETON                     91                                     MD061007
     C                     ENDIF                                                            MD061007
      *                                                                                     MD061007
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SCEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C**********           UPDAT@AHREAU                91  *                                MD061007
     C                     CALL 'SD000119'                                                  MD061007
     C                     PARM '*UPD'    ZMODE                                             MD061007
     C                     PARM           AHFLNM                                            MD061007
     C                     PARM           AHNORC                                            MD061007
     C                     PARM           AHNOIN                                            MD061007
     C                     PARM           AHNOAM                                            MD061007
     C                     PARM           AHNODL                                            MD061007
     C                     PARM *BLANKS   ZRETRN                                            MD061007
      *                                                                                     MD061007
     C                     SETOF                     91                                     MD061007
     C           ZRETRN    IFNE *BLANKS                                                     MD061007
     C                     SETON                     91                                     MD061007
     C                     ENDIF                                                            MD061007
      *                                                                                     MD061007
     C                     ELSE
      * Release record lock
     C**********           UNLCKSDFCTLL0               91  *                                MD061007
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Get all Midas Modules - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSD     CHAIN@BGREC8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0096' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * Setup message data for message
     C                     MOVEL'SDMMODPD'ZA0072           Filename
      * Send message 'Database Error (ICD)'
     C                     MOVEL'USR0377' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO SDEXIT                     *QUIT
     C                     GOTO SDEXIT
     C                     END
      *
      * USER: Exit processing
      * PAR = DB1 By name
     C                     MOVELBGMTMI    WUMTMI           Midas/Telex Mod
     C                     MOVELBGSWFT    WUSWFT           SWIFT Funds Tra
     C                     MOVELBGSWST    WUSWST           SWIFT Securitie
     C                     MOVELBGSWCL    WUSWCL           SWIFT Customer
     C                     MOVELBGSWSL    WUSWSL           SWIFT Synd Loan
     C                     MOVELBGSWSM    WUSWSM           SWIFT Statement
     C                     MOVELBGSWDL    WUSWDL           SWIFT Dealing
     C                     MOVELBGSDGL    WUSDGL           Standing data/G
     C                     MOVELBGDLFX    WUDLFX           Dealing: FX
     C                     MOVELBGSYLN    WUSYLN           Syndicated Loan
     C                     MOVELBGEXMG    WUEXMG           Exposure Manage
     C                     MOVELBGFNMO    WUFNMO           Financial Model
     C                     MOVELBGSTRT    WUSTRT           Statutory Retur
     C                     MOVELBGCSLN    WUCSLN           Customer Lendin
     C                     MOVELBGRTBN    WURTBN           Retail Banking
     C                     MOVELBGMSDL    WUMSDL           Midas/Swift dir
     C                     MOVELBGSECS    WUSECS           Securities
     C                     MOVELBGAURC    WUAURC           Auto-reconcilia
     C                     MOVELBGBDLI    WUBDLI           Bond Dealers In
     C                     MOVELBGDRSD    WUDRSD           DRS Standing Da
     C                     MOVELBGDRCM    WUDRCM           DRS Control mod
     C                     MOVELBGDRFE    WUDRFE           DRS Foreign Exc
     C                     MOVELBGDRMM    WUDRMM           DRS Money Marke
     C                     MOVELBGDRAR    WUDRAR           DRS Arbitrage
     C                     MOVELBGFDTR    WUFDTR           Funds Transfer
     C                     MOVELBGDRCA    WUDRCA           DRS Common Appl
     C                     MOVELBGFUOP    WUFUOP           Futures & Optio
     C                     MOVELBGMTSL    WUMTSL           Midas/Telex Syn
     C                     MOVELBGMTDL    WUMTDL           Midas/Telex Dea
     C                     MOVELBGMTGL    WUMTGL           Midas/Telex Gen
     C                     MOVELBGMTCL    WUMTCL           Midas/Telex Cus
     C                     MOVELBGNWMI    WUNWMI           Message Managem
     C                     MOVELBGFIIN    WUFIIN           FRA/IRS Indicat
     C                     MOVELBGDLMM    WUDLMM           Dealing: MM
     C                     MOVELBGINCN    WUINCN           Internal Contra
     C                     MOVELBGTRMG    WUTRMG           Treasury Manage
     C                     MOVELBGRKMG    WURKMG           Interest Risk M
     C                     MOVELBGTSKY    WUTSKY           Testkey
     C                     MOVELBGMIDQ    WUMIDQ           Midas/Q
     C                     MOVELBGMFIC    WUMFIC           Microfiche
     C                     MOVELBGIOAC    WUIOAC           Interest on acc
     C                     MOVELBGWDPR    WUWDPR           Window processi
     C                     MOVELBGSARP    WUSARP           SAR's processin
     C                     MOVELBGFRIN    WUFRIN           French return i
     C                     MOVELBGLRIN    WULRIN           Lux return indi
     C                     MOVELBGDRIN    WUDRIN           Dutch return in
     C                     MOVELBGGRIN    WUGRIN           German return i
     C                     MOVELBGBRIN    WUBRIN           Belgian return
     C                     MOVELBGIRIN    WUIRIN           Italian return
     C                     MOVELBGSWEI    WUSWEI           Swift External
     C                     MOVELBGPFMG    WUPFMG           Portfolio Manag
     C                     MOVELBGCRMG    WUCRMG           Credit Manageme
     C                     MOVELBGHORP    WUHORP           Head Office Rep
     C                     MOVELBGAVBL    WUAVBL           Average Balance
     C                     MOVELBGMARG    WUMARG           Margins
     C                     MOVELBGCFMT    WUCFMT           Confirmation Ma
     C                     MOVELBGMIMX    WUMIMX           Mimix
     C                     MOVELBGRCFI    WURCFI           Report Control
     C                     MOVELBGAMIN    WUAMIN           Amps Int
     C                     MOVELBGSWRT    WUSWRT           Swiss Returns
     C                     MOVELBGFLND    WUFLND           Fiduciary Loans
     C                     MOVELBGLMCR    WULMCR           Portfolio Lendi
     C                     MOVELBGCNTX    WUCNTX           Cantonal Tax
     C                     MOVELBGSTDU    WUSTDU           Stamp Duty
     C                     MOVELBGUDRS    WUUDRS           Use DRS Shortna
     C                     MOVELBGCHDL    WUCHDL           Chips Dealing
     C                     MOVELBGCHLN    WUCHLN           Chips Lending
     C                     MOVELBGCHOB    WUCHOB           Chips Opening B
     C                     MOVELBGCHIP    WUCHIP           CHIPS
     C                     MOVELBGCHDI    WUCHDI           Chips Direct Li
     C                     MOVELBGOPDK    WUOPDK           Optical Disk
     C                     MOVELBGMBIN    WUMBIN           Multi-branching
     C                     MOVELBGNNST    WUNNST           Leo Data Nucleu
     C                     MOVELBGNOST    WUNOST           Leo Letters of
     C                     MOVELBGNPST    WUNPST           Leo Collections
     C                     MOVELBGNQST    WUNQST           Leo Bills/Finan
     C                     MOVELBGNRST    WUNRST           Leo Bankers Acc
     C                     MOVELBGNSST    WUNSST           Leo Reimburseme
     C                     MOVELBGNTST    WUNTST           Taxes
     C                     MOVELBGNUST    WUNUST           History & Audit
     C                     MOVELBGNVST    WUNVST           Management Acco
     C                     MOVELBGNWST    WUNWST           IBLC Returns
     C                     MOVELBGNXST    WUNXST           Retail 3
     C                     MOVELBGNYST    WUNYST           Interest on Acc
     C                     MOVELBGNZST    WUNZST           Midas Export Da
     C                     MOVELBGN0ST    WUN0ST           Analytical Acco
     C                     MOVELBGN1ST    WUN1ST           User Defined Co
     C                     MOVELBGN2ST    WUN2ST           Midas-Plato Int
     C                     MOVELBGN3ST    WUN3ST           Midas-Trade Inn
     C                     MOVELBGN4ST    WUN4ST           Reserved for La
     C                     MOVELBGN5ST    WUN5ST           Reserved for La
     C                     MOVELBGN6ST    WUN6ST           Reserved for La
     C                     MOVELBGN7ST    WUN7ST           Reserved for La
     C                     MOVELBGN8ST    WUN8ST           Reserved for La
     C                     MOVELBGN9ST    WUN9ST           Reserved for La
     C                     MOVELBGOAST    WUOAST           Reserved for La
     C                     MOVELBGOBST    WUOBST           Reserved for La
     C                     MOVELBGOCST    WUOCST           Reserved for La
     C                     MOVELBGODST    WUODST           Reserved for La
     C                     MOVELBGOEST    WUOEST           Reserved for La
     C                     MOVELBGOFST    WUOFST           Reserved for La
     C                     MOVELBGOGST    WUOGST           Reserved for La
     C                     MOVELBGOHST    WUOHST           Reserved for La
     C                     MOVELBGOIST    WUOIST           Reserved for La
     C                     MOVELBGOJST    WUOJST           Reserved for La
     C                     MOVELBGOKST    WUOKST           Reserved for La
     C                     MOVELBGOLST    WUOLST           Reserved for La
     C                     MOVELBGOMST    WUOMST           Reserved for La
     C                     MOVELBGONST    WUONST           Reserved for La
     C                     MOVELBGOOST    WUOOST           Reserved for La
     C                     MOVELBGOPST    WUOPST           Reserved for La
     C                     MOVELBGOQST    WUOQST           Reserved for La
     C                     MOVELBGORST    WUORST           Reserved for La
     C                     MOVELBGOSST    WUOSST           Reserved for La
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y2SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y2EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL2'
      * DETAIL 2 Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * 00/Copy member SD9391REPP - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTExit Program Processing
     C/COPY WNCPYSRC,SD9391REPP
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUTQKF  1
      * Define work field Currency Code
     C                     MOVEL*BLANK    WUCYCD  3
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Day of last update    DRS
     C                     Z-ADD*ZERO     WUDLUP  20
      * Define work field Month of last update  DRS
     C                     MOVEL*BLANK    WUMLUP  3
      * Define work field Year of last update   DRS
     C                     Z-ADD*ZERO     WUYLUP  20
      * Define work field Last Change Date
     C                     Z-ADD*ZERO     WULCD   50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Midas/Telex Module Ind.
     C                     MOVEL*BLANK    WUMTMI  1
      * Define work field SWIFT Funds Transfer
     C                     MOVEL*BLANK    WUSWFT  1
      * Define work field SWIFT Securities Trading
     C                     MOVEL*BLANK    WUSWST  1
      * Define work field SWIFT Customer Lending
     C                     MOVEL*BLANK    WUSWCL  1
      * Define work field SWIFT Synd Loans (REDUN)
     C                     MOVEL*BLANK    WUSWSL  1
      * Define work field SWIFT Statements
     C                     MOVEL*BLANK    WUSWSM  1
      * Define work field SWIFT Dealing
     C                     MOVEL*BLANK    WUSWDL  1
      * Define work field Standing data/Gen.Ledger
     C                     MOVEL*BLANK    WUSDGL  1
      * Define work field Dealing: FX
     C                     MOVEL*BLANK    WUDLFX  1
      * Define work field Syndicated Loans (REDUN)
     C                     MOVEL*BLANK    WUSYLN  1
      * Define work field Exposure Management
     C                     MOVEL*BLANK    WUEXMG  1
      * Define work field Financial Modeller
     C                     MOVEL*BLANK    WUFNMO  1
      * Define work field Statutory Returns
     C                     MOVEL*BLANK    WUSTRT  1
      * Define work field Customer Lending
     C                     MOVEL*BLANK    WUCSLN  1
      * Define work field Retail Banking
     C                     MOVEL*BLANK    WURTBN  1
      * Define work field Midas/Swift direct link
     C                     MOVEL*BLANK    WUMSDL  1
      * Define work field Securities
     C                     MOVEL*BLANK    WUSECS  1
      * Define work field Auto-reconciliations
     C                     MOVEL*BLANK    WUAURC  1
      * Define work field Bond Dealers Interface
     C                     MOVEL*BLANK    WUBDLI  1
      * Define work field DRS Standing Data
     C                     MOVEL*BLANK    WUDRSD  1
      * Define work field DRS Control module
     C                     MOVEL*BLANK    WUDRCM  1
      * Define work field DRS Foreign Exchange
     C                     MOVEL*BLANK    WUDRFE  1
      * Define work field DRS Money Market
     C                     MOVEL*BLANK    WUDRMM  1
      * Define work field DRS Arbitrage
     C                     MOVEL*BLANK    WUDRAR  1
      * Define work field Funds Transfer
     C                     MOVEL*BLANK    WUFDTR  1
      * Define work field DRS Common Applications
     C                     MOVEL*BLANK    WUDRCA  1
      * Define work field Futures & Options
     C                     MOVEL*BLANK    WUFUOP  1
      * Define work field Midas/Telex Synd. Loans
     C                     MOVEL*BLANK    WUMTSL  1
      * Define work field Midas/Telex Dealing
     C                     MOVEL*BLANK    WUMTDL  1
      * Define work field Midas/Telex Gen. Ledger
     C                     MOVEL*BLANK    WUMTGL  1
      * Define work field Midas/Telex Cust. Lending
     C                     MOVEL*BLANK    WUMTCL  1
      * Define work field Message Management
     C                     MOVEL*BLANK    WUNWMI  1
      * Define work field FRA/IRS Indicator
     C                     MOVEL*BLANK    WUFIIN  1
      * Define work field Dealing: MM
     C                     MOVEL*BLANK    WUDLMM  1
      * Define work field Internal Contracts
     C                     MOVEL*BLANK    WUINCN  1
      * Define work field Treasury Management
     C                     MOVEL*BLANK    WUTRMG  1
      * Define work field Interest Risk Management
     C                     MOVEL*BLANK    WURKMG  1
      * Define work field Testkey
     C                     MOVEL*BLANK    WUTSKY  1
      * Define work field Midas/Q
     C                     MOVEL*BLANK    WUMIDQ  1
      * Define work field Microfiche
     C                     MOVEL*BLANK    WUMFIC  1
      * Define work field Interest on accounts
     C                     MOVEL*BLANK    WUIOAC  1
      * Define work field SAR's processing required
     C                     MOVEL*BLANK    WUSARP  1
      * Define work field French return indicator
     C                     MOVEL*BLANK    WUFRIN  1
      * Define work field Lux return indicator
     C                     MOVEL*BLANK    WULRIN  1
      * Define work field Dutch return indicator
     C                     MOVEL*BLANK    WUDRIN  1
      * Define work field German return indicator
     C                     MOVEL*BLANK    WUGRIN  1
      * Define work field Belgian return indicator
     C                     MOVEL*BLANK    WUBRIN  1
      * Define work field Italian return indicator
     C                     MOVEL*BLANK    WUIRIN  1
      * Define work field Swift External Interface
     C                     MOVEL*BLANK    WUSWEI  1
      * Define work field Portfolio Management
     C                     MOVEL*BLANK    WUPFMG  1
      * Define work field Credit Management.
     C                     MOVEL*BLANK    WUCRMG  1
      * Define work field Head Office Reporting
     C                     MOVEL*BLANK    WUHORP  1
      * Define work field Average Balances
     C                     MOVEL*BLANK    WUAVBL  1
      * Define work field Margins
     C                     MOVEL*BLANK    WUMARG  1
      * Define work field Confirmation Matching
     C                     MOVEL*BLANK    WUCFMT  1
      * Define work field Mimix
     C                     MOVEL*BLANK    WUMIMX  1
      * Define work field Report Control Facility
     C                     MOVEL*BLANK    WURCFI  1
      * Define work field Amps Int
     C                     MOVEL*BLANK    WUAMIN  1
      * Define work field Swiss Returns
     C                     MOVEL*BLANK    WUSWRT  1
      * Define work field Fiduciary Loans & Deposit
     C                     MOVEL*BLANK    WUFLND  1
      * Define work field Portfolio Lending
     C                     MOVEL*BLANK    WULMCR  1
      * Define work field Cantonal Tax
     C                     MOVEL*BLANK    WUCNTX  1
      * Define work field Stamp Duty
     C                     MOVEL*BLANK    WUSTDU  1
      * Define work field Use DRS Shortnames
     C                     MOVEL*BLANK    WUUDRS  1
      * Define work field Chips Dealing
     C                     MOVEL*BLANK    WUCHDL  1
      * Define work field Chips Lending
     C                     MOVEL*BLANK    WUCHLN  1
      * Define work field Chips Opening Balance
     C                     MOVEL*BLANK    WUCHOB  1
      * Define work field CHIPS
     C                     MOVEL*BLANK    WUCHIP  1
      * Define work field Chips Direct Link
     C                     MOVEL*BLANK    WUCHDI  1
      * Define work field Optical Disk
     C                     MOVEL*BLANK    WUOPDK  1
      * Define work field Leo Data Nucleus
     C                     MOVEL*BLANK    WUNNST  1
      * Define work field Leo Letters of Credit
     C                     MOVEL*BLANK    WUNOST  1
      * Define work field Leo Collections
     C                     MOVEL*BLANK    WUNPST  1
      * Define work field Leo Bills/Financing
     C                     MOVEL*BLANK    WUNQST  1
      * Define work field Leo Bankers Acceptances
     C                     MOVEL*BLANK    WUNRST  1
      * Define work field Leo Reimbursements
     C                     MOVEL*BLANK    WUNSST  1
      * Define work field Taxes
     C                     MOVEL*BLANK    WUNTST  1
      * Define work field History & Audit Facility
     C                     MOVEL*BLANK    WUNUST  1
      * Define work field Management Accounts
     C                     MOVEL*BLANK    WUNVST  1
      * Define work field IBLC Returns
     C                     MOVEL*BLANK    WUNWST  1
      * Define work field Retail 3
     C                     MOVEL*BLANK    WUNXST  1
      * Define work field Interest on Accounts 3
     C                     MOVEL*BLANK    WUNYST  1
      * Define work field Midas Export Data Module
     C                     MOVEL*BLANK    WUNZST  1
      * Define work field Analytical Accounting
     C                     MOVEL*BLANK    WUN0ST  1
      * Define work field User Defined Correspondnc
     C                     MOVEL*BLANK    WUN1ST  1
      * Define work field Midas-Plato Interface
     C                     MOVEL*BLANK    WUN2ST  1
      * Define work field Midas-Trade Innovation If
     C                     MOVEL*BLANK    WUN3ST  1
      * Define work field Reserved for Later Use 41
     C                     MOVEL*BLANK    WUN4ST  1
      * Define work field Reserved for Later Use 42
     C                     MOVEL*BLANK    WUN5ST  1
      * Define work field Reserved for Later Use 43
     C                     MOVEL*BLANK    WUN6ST  1
      * Define work field Reserved for Later Use 44
     C                     MOVEL*BLANK    WUN7ST  1
      * Define work field Reserved for Later Use 45
     C                     MOVEL*BLANK    WUN8ST  1
      * Define work field Reserved for Later Use 46
     C                     MOVEL*BLANK    WUN9ST  1
      * Define work field Reserved for Later Use 47
     C                     MOVEL*BLANK    WUOAST  1
      * Define work field Reserved for Later Use 48
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field Reserved for Later Use 49
     C                     MOVEL*BLANK    WUOCST  1
      * Define work field Reserved for Later Use 50
     C                     MOVEL*BLANK    WUODST  1
      * Define work field Reserved for Later Use 51
     C                     MOVEL*BLANK    WUOEST  1
      * Define work field Reserved for Later Use 52
     C                     MOVEL*BLANK    WUOFST  1
      * Define work field Reserved for Later Use 53
     C                     MOVEL*BLANK    WUOGST  1
      * Define work field Reserved for Later Use 54
     C                     MOVEL*BLANK    WUOHST  1
      * Define work field Reserved for Later Use 55
     C                     MOVEL*BLANK    WUOIST  1
      * Define work field Reserved for Later Use 56
     C                     MOVEL*BLANK    WUOJST  1
      * Define work field Reserved for Later Use 57
     C                     MOVEL*BLANK    WUOKST  1
      * Define work field Reserved for Later Use 58
     C                     MOVEL*BLANK    WUOLST  1
      * Define work field Reserved for Later Use 59
     C                     MOVEL*BLANK    WUOMST  1
      * Define work field Reserved for Later Use 60
     C                     MOVEL*BLANK    WUONST  1
      * Define work field Reserved for Later Use 61
     C                     MOVEL*BLANK    WUOOST  1
      * Define work field Reserved for Later Use 62
     C                     MOVEL*BLANK    WUOPST  1
      * Define work field Reserved for Later Use 63
     C                     MOVEL*BLANK    WUOQST  1
      * Define work field Reserved for Later Use 64
     C                     MOVEL*BLANK    WUORST  1
      * Define work field Reserved for Later Use 65
     C                     MOVEL*BLANK    WUOSST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     OPEN SD9391R#
     C                     OPEN SDLOMBL1
     C                     OPEN SDCURRL1
     C                     OPEN SDMMODL1
     C                     OPEN SDLOMBL0
     C**********           OPEN SDFCTLL0                                                    MD061007
     C                     MOVEL'N'       W0PMT   1
      * Initialise error memories
     C                     MOVE *ZERO     @@I1
     C                     MOVE *ZERO     @@I2
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD9391R precompiler - Portfolio Lending ICD  *
      * Define SDPLINPD - Portfolio Lending ICD  *
      * Define LBGROUPD - Portfolio Lending ICD  *
      * PL ICD Data structure - Portfolio Lending ICD  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Convert Midas rundate - Portfolio Lend Cust Dtls  *
      * Get all Midas Modules - MIDAS Modules  *
     C                     EXSR SDRVGN
      * 00/Copy member SD9391RFPG - Portfolio Lending ICD  *
      * 00/Copy member SD9391REPG - Portfolio Lending ICD  *
      * 00/Copy member SD9391RIPG - Portfolio Lending ICD  *
      * 00/Copy member SD9391RCPG - Portfolio Lending ICD  *
     C*Portfolio Lending ICD MNTInitialise Program C-spec
     C/COPY WNCPYSRC,SD9391RCPG
      * 00/Copy member SD9391ROPG - Portfolio Lending ICD  *
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
     C/COPY WNCPYSRC,SD9391RPSC
      *
      * Start of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9391RPS1
      *
      * Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRICD
      *
      * End of PSSR user point.
      *
     C/COPY WNCPYSRC,SD9391RPS2
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
     O*Portfolio Lending ICD MNTInitialise Program O-spec
     O/COPY WNCPYSRC,SD9391ROPG
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2001
