     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE Select market centre')
      *****************************************************************
      *                                                               *
      *  Midas - Securities Trading Module                            *
      *                                                               *
      *  SE0015 - Midas SE Market Centre selection                    *
      *                                                               *
      *  Function:  This sub-file program allows the user to select   *
      *             from a list of Market Centres.                    *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2003            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD027             Date 09Dec05               *
      *  Prev Amend No. 215782   *CREATE   Date 27Mar03               *
      *                                                               *
      *-------------------------------------------------------------- *
      *                                                               *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  215782 - Not able to use '?' on market centre field. Fix is  *
      *           to create a program to facilitate record selection. *
      *                                                               *
      *****************************************************************
     FSE0015DFCF  E                    WORKSTN                        UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SE Market Centre selection
      *
     FSEMKC   IF  E           K        DISK                           UC
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SE Market Centre retrieval ind
      *
      * Description     : Copyright notice for inclusion in all programs
      *
      ********************************************************************
     E                    CPY@    1   1 80               Copyright array
      *
      * Description     : Copyright notice for inclusion in all programs
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IA@CPY       DS
     I* Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Market Centre
      * B : MAP Market Centre
     I                                        1   2 P1MRKC
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C           P1MRKC    PARM P1MRKC    WP0001  2
      *****************************************************************
      *
      ** Initialize
      *
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      *
      ** Initialise & load subfile page
      *
     C                     EXSR SRILDS
     C                     MOVEL'N'       W0RSF   1
      *
      ** Display screen until reload requested
      *
     C           W0RSF     DOWEQ'N'
      *
      ** Display screen
      *
     C                     EXSR SREXFM
      *
      ** Process response
      ** Cancel & exit program
      *
     C           *IN03     IFEQ '1'
     C                     MOVE *BLANKS   P1MRKC
     C                     EXSR SREXPG
     C                     ELSE
      *
      ** HOME: Request subfile reload
      *
     C           *IN05     IFEQ '1'
     C                     EXSR SRRQRL
     C                     ELSE
      *
      ** Display next SFL page
      *
     C           *IN27     IFEQ '1'
     C                     EXSR SRLDSF
     C                     ELSE
      *
      ** Process screen input
      *
     C                     EXSR SRPR##
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDDO
     C                     ENDDO
      *****************************************************************
      /EJECT
      *****************************************************************
      * Initialise & load subfile page
      *****************************************************************
     C           SRILDS    BEGSR
      *
      ** Clear subfile
      *
     C                     MOVE '1'       *IN80
     C                     WRITE#SFLCTL
     C                     MOVE '0'       *IN80
      *
      ** Reset no of records in subfile
      *
     C                     Z-ADD*ZERO     ##RRMX  50
     C                     MOVE '0'       *IN81
      *
      ** Position DBF file
      *
     C           KPOS      KLIST
     C                     KFLD           MRKT
      *
      ** Setup key
      *
     C                     MOVEL#2MRKC    MRKT
     C           KPOS      SETLLSEMKCDF
     C                     READ SEMKCDF                8782
      *
      ** Save previous selector values
      *
     C           *LIKE     DEFN #2LCD     WZLCD
     C                     MOVEL#2LCD     WZLCD
     C           *LIKE     DEFN #2TYLC    WZTYLC
     C                     MOVEL#2TYLC    WZTYLC
     C           *LIKE     DEFN #2MRKC    WZMRKC
     C                     MOVEL#2MRKC    WZMRKC
     C           *LIKE     DEFN #2NAME    WZNAME
     C                     MOVEL#2NAME    WZNAME
      *
      ** Translate search mask for text field
      *
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2NAME    WQNAME
     C                     CALL 'QDCXLATE'
      *
      ** Length
      *
     C                     PARM 30        WQA5N   50
     C                     PARM #2NAME    WQNAME
     C                     PARM           WQB10X
     C                     PARM 'QSYS'    WQC10X 10
      *
      ** Load subfile page
      *
     C                     Z-ADD*ZERO     ##RROK  50
     C                     EXSR SRLDSF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Load subfile page
      *****************************************************************
     C           SRLDSF    BEGSR
      *
      ** Re-establish fields in read-ahead record
      *
     C           *IN27     IFEQ '1'
     C           *IN82     IFEQ '0'
     C                     READPSEMKCDF                  90
     C                     READ SEMKCDF                  90
     C                     ENDIF
     C                     ENDIF
      *
      ** Setof record error indicators
      *
     C                     MOVE *ALL'0'   WKINDS  1
     C                     MOVEAWKINDS    *IN,33
      *
      ** Start at previous highest record in SFL
      *
     C                     Z-ADD##RRMX    ##RR    50
      *
      ** Reset count of DBF records read
      *
     C                     Z-ADD*ZERO     ##RRRD  50
      *
      ** Set required pages based on *Set Cursor or *Subfile Pages
      *
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     ENDIF
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     ENDIF
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     ENDIF
      *
      ** Compute lines required based on pages
      *
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     ENDIF
      *
      ** Load next SFL page until SFL page full,
      ** or scan limit reached,
      ** or end of file reached
      *
     C           *IN82     DOWEQ'0'
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      *
      ** Check selection fields - if fail, read next record
      *
     C                     MOVE '0'       *IN40
     C           #2LCD     IFNE *ZERO
     C           LCD       ANDNE#2LCD
     C                     MOVE '1'       *IN40
     C                     ENDIF
     C           #2TYLC    IFNE *BLANK
     C           CHTP      ANDNE#2TYLC
     C           *IN40     ANDEQ'0'
     C                     MOVE '1'       *IN40
     C                     ENDIF
     C           #2NAME    IFNE *BLANK
     C           *IN40     ANDEQ'0'
      *
      ** Scan for search string
      *
     C                     CALL 'QCLSCAN'
     C                     PARM           MKTN
      *
      ** Length
      *
     C                     PARM 30        WQA3N   30
      *
      ** Start
      *
     C                     PARM 1         WQB3N   30
      *
      ** Mask
      *
     C                     PARM           WQNAME
      *
      ** Length
      *
     C                     PARM 30        WQC3N   30
      *
      ** Translate
      *
     C                     PARM '1'       WQD1    1
      *
      ** Trim
      *
     C                     PARM '1'       WQE1    1
      *
      ** Wild
      *
     C                     PARM '?'       WQF1    1
      *
      ** Result
      *
     C                     PARM           WQG3N   30
     C           WQG3N     IFLT 1
     C                     MOVE '1'       *IN40
     C                     ENDIF
     C                     ENDIF
      *
      ** Load SFL fields
      *
     C           *IN40     IFEQ '0'
     C                     EXSR SRFL#1
      *
      ** Output to subfile
      *
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81
      *
      ** If SFLRCD invalid, note that errors present
      *
     C           *IN98     IFEQ '1'
     C           *IN99     ANDEQ'0'
     C                     MOVE '1'       *IN99
     C                     ENDIF
     C                     WRITE#SFLRCD
      *
     C                     ENDIF
      *
      ** Increment scan check count
      *
     C                     ADD  1         ##RRRD
      *
      ** Read next record
      *
     C                     READ SEMKCDF                8782
     C                     ENDDO
      *
      ** If no DBF records found, display error message
      *
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      *
      ** Send message '*No data to display'
      *
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ENDIF
      *
      ** Save highest SFL record load can continue at end point
      *
     C           ##RR      IFGT ##RRMX
      *
      ** Calculate top line
      *
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     ENDIF
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     ENDIF
      *
      ** If scan limit reached, display error message
      *
     C           ##RRRD    IFGE W0SLM
      *
      ** Send message '*Scan limit reached'
      *
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD*ZERO     ##RROK  50
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Display screen
      *****************************************************************
     C           SREXFM    BEGSR
      *
      ** Update screen time
      *
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      *
      ** PUTOVR unless conditioned fields change
      *
     C                     MOVE '1'       *IN86
     C           *IN81     IFNE CAIN81
     C                     MOVE '0'       *IN86
     C                     ENDIF
     C                     MOVE *IN81     CAIN81  1
      *
      ** Set cursor by *SET CURSOR data
      *
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     ENDIF
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      *
      ** Maintain subfile position where possible
      *
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     ENDIF
      *
      ** Test cursor
      *
     C                     EXSR Y8TST
      *
      ** Clear set cursor DDS indicator
      *
     C           WCSRLC    IFEQ 'OFF'
     C                     MOVE '0'       *IN94
     C                     ENDIF
     C                     MOVE *BLANK    WCSRLC
      *
      ** If help requested, display help text
      *
     C           *IN25     IFEQ '1'
     C                     EXSR ZHHPKY
     C                     ENDIF
     C                     ENDDO
      *
      ** Update job time
      *
     C                     TIME           ##JTM
      *
      ** Clear messages from program message queue
      *
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      *
      ** Reset first message only flag
      *
     C                     MOVEL'Y'       ZAFSMS  1      99
     C                     MOVE '0'       *IN92
     C                     MOVE '0'       *IN93
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Process screen input
      *****************************************************************
     C           SRPR##    BEGSR
      *
     C           *IN81     IFEQ '1'
      *
      ** Process subfile records
      *
     C                     EXSR SRPRSF
     C                     ENDIF
      *
      ** If error, exit subroutine:
      *
     C           *IN99     IFEQ '0'
      *
      ** Change of position specified
      *
     C           WZLCD     CASNE#2LCD     SRRQRL
     C           WZTYLC    CASNE#2TYLC    SRRQRL
     C           WZMRKC    CASNE#2MRKC    SRRQRL
     C           WZNAME    CASNE#2NAME    SRRQRL
     C                     END
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Process modified subfile record
      *****************************************************************
     C           SRPRSF    BEGSR
      *
     C                     READC#SFLRCD                  92
     C           *IN92     DOWEQ'0'
      *
      ** Process subfile record
      *
     C                     EXSR SRSFRC
     C                     MOVEL*BLANK    #1SEL
     C                     UPDAT#SFLRCD
      *
      ** Read next record
      *
     C                     READC#SFLRCD                  92
     C                     ENDDO
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Process subfile record
      *****************************************************************
     C           SRSFRC    BEGSR
      *
      ** Setof error indicators and SFLNXTCHG
      *
     C                     MOVEAWKINDS    *IN,33
     C                     MOVE '0'       *IN84
      *
      ** Check selection option
      *
     C           #1SEL     CASEQ'1'       SRSLRC
     C                     END
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Select record & return to calling program
      *****************************************************************
     C           SRSLRC    BEGSR
      *
      ** Move record values to parameters
      *
     C                     MOVEL#1MRKC    P1MRKC
     C                     EXSR SREXPG
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Request subfile reload
      *****************************************************************
     C           SRRQRL    BEGSR
     C                     MOVEL'Y'       W0RSF
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Move SEMKCDF fields to #SFLRCD
      *****************************************************************
     C           SRFL#1    BEGSR
      *
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDLCD       #1LCD
     C                     MOVELCHTP      #1TYLC
     C                     MOVELMRKT      #1MRKC
     C                     MOVELMKTN      #1NAME
     C                     MOVEL*BLANK    #1SEL
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Initialise subfile control
      *****************************************************************
     C           SRIZ#2    BEGSR
      *
     C                     Z-ADD*ZERO     #2LCD
     C                     MOVEL*BLANK    #2TYLC
     C                     MOVELP1MRKC    #2MRKC
     C                     MOVEL*BLANK    #2NAME
      *
      ** Drop ? from positioning key fields
      *
     C                     MOVEL#2MRKC    W0X1    1
     C           W0X1      IFEQ '?'
     C           *LIKE     DEFN #2MRKC    W0MRKC- 1
     C                     MOVE #2MRKC    W0MRKC
     C                     MOVELW0MRKC    #2MRKC
     C                     MOVE ' '       #2MRKC
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
     C           Y0SET     BEGSR
      * Set cursor by *SET CURSOR data
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Test cursor
      *****************************************************************
     C           Y8TST     BEGSR
      *
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
     C           Y9CLR     BEGSR
      * Clear *SET CURSOR data
     C                     ENDSR
      /EJECT
      *****************************************************************
      * Send message to program's message queue
      *****************************************************************
     C           ZASNMS    BEGSR
      *
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     ENDIF
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10
     C                     PARM           ZAPGRL  5
     C                     PARM           ZAMSID  7
     C                     PARM           ZAMSGF 10
     C                     PARM           ZAMSDA132
     C                     PARM           ZAMSTP  7
      *
      ** Clear all fields for default mechanism next time
      *
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Display HELP text
      *****************************************************************
     C           ZHHPKY    BEGSR
      *
      ** Signal help request
      *
     C                     MOVEL'Y'       W0HLP   1
      *
      ** Extract cursor row and column
      *
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30
     C                     Z-ADDZHCSCL    ZZCSCL  30
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10
     C                     PARM *BLANK    YYHPFL 10
     C                     PARM *BLANK    YYHPLB 10
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10
     C                     PARM '*NORMAL' YYUSOP 10
     C                     PARM ZHCSRW    YYRW    50
     C                     PARM ZHCSCL    YYCL    50
     C                     PARM *ZERO     YYLGCT  50
     C                     PARM *BLANK    YYLGVN 10
      *
      ** Clear set cursor DDS indicator
      *
     C           *IN94     IFEQ '0'
     C                     MOVEL'OFF'     WCSRLC
     C                     MOVE '1'       *IN94
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Exit program: Direct
      *****************************************************************
     C           SREXPG    BEGSR
      *
      ** Terminate program
      *
     C                     MOVE '1'       *INLR
      *
      ** Exit program
      *
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      * Initialisation
      *****************************************************************
     C           ZZINIT    BEGSR
      *
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     ENDIF
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      *
      ** Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     ENDIF
     C                     TIME           ##JTM
      *
      ** Update screen time
      *
     C                     TIME           ##TME   60
      *
      ** Define work field Midas Run Date
      *
     C                     MOVEL*BLANK    WUMRDT  7
      *
      ** Define work field Run day number
      *
     C                     Z-ADD*ZERO     WURDNB  50
      *
      ** Define work field Set Up Complete
      *
     C                     MOVEL*BLANK    WUSUC   1
      *
      ** Define work field Date format flag
      *
     C                     MOVEL*BLANK    WUDFF   1
      *
      ** Define work field Multi-branching Indicator
      *
     C                     MOVEL*BLANK    WUMBIN  1
      *
      ** Flag no *SET CURSOR in the program
      *
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      *
      ** Define *Synon program work fields
      *
     C                     MOVEL*BLANKS   W0CFL  10
     C                     Z-ADD*ZEROS    W0CRW   50
     C                     Z-ADD*ZEROS    W0CCL   50
      *
      ** Move main file information to JOB context
      *
     C                     MOVE @1FFL     ZZFFL  10
     C                     MOVE @1FLB     ZZFLB  10
     C                     MOVE @1FMB     ZZFMB  10
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21
      *
      ** Open files
      *
     C                     OPEN SE0015DF
     C                     OPEN SEMKC
     C                     MOVEL'N'       W0PMT   1
      *
      ** Program mode
      *
     C                     MOVEL'SEL'     W0PMD   3
      *
     C                     Z-ADD14        ##SFPG  30
     C                     Z-ADD1         ##SFRC
      *
      ** Maximum record number
      *
     C                     Z-ADD*ZERO     ##RRMX
      *
      ** Scan limit
      *
     C                     Z-ADD500       W0SLM   50
      *
      ** Subfile pages
      *
     C                     Z-ADD1         W0SPG   30
      *
      ** Processed Subfile record
      *
     C                     Z-ADD0         W0RR0   40
     C                     MOVEL*BLANK    W0GRP   1
      *
      ** USER: Initialize program
      ** SE0015 Precompiler - Market Centre Det *
      ** Copyright Statement 1999 - Standard Functions  *
      ** Get Rundate - Rundate  *
      *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB
     C                     MOVE SUC       WUSUC
     C                     MOVE DFF       WUDFF
     C                     MOVE MBIN      WUMBIN
      *
      ** Clear subfile control fields
      *
     C                     EXSR SRIZ#2
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
     C           *PSSR     BEGSR
      *
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
     C                     DUMP
     C                     ENDIF
      *
     C                     MOVE '1'       *INLR
      *
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
** CPY@     : Copyright notice for inclusion in all programs
(c) Misys International Banking Systems Ltd. 2003
