     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE LUX Investment types 2')
      *****************************************************************
      *                                                               *
      *  Midas - Securities Trading Module                            *
      *                                                               *
      *  SE0022 - LUX Investment types 2                              *
      *                                                               *
      *  Function:  This program prompts a new window on the          *
      *             Investment Type to input Warrant Indicator        *
      *                                                               *
      *  (phase(s))                                                   *
      *                                                               *
      *  Called By: SE0020  - Investment Types Maintenance            *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2005            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CER001  *CREATE    Date 25Apr05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CER001 - LUX Upgrade to MidasPlus                            *
      *                                                               *
      *****************************************************************
      *
     FSEINX1PDUF  E           K        DISK         KCOMIT       A    UC
     F            INVTPDDL                          KRENAMEUPDIDX
      *
      ** Issuer Type Extended File   Update index        Prefix NT
      *
     FSEINX1L0IF  E           K        DISK
     F            INVTPDDL                          KRENAMERTVIDX
      *
      ** Issuer Type Index file      Retrieval index     Prefix NT
      *
     FSDMMODPDIF  E                    DISK
      *
      ** ICD modules                 Retrieval index     Prefix BG
      *
     FSE0022DFCF  E                    WORKSTN
     F            SE0022F0                          KRENAMESCREEN
     F                                              KINFDS FILEDS
      *
      **                               Display file        Prefix #0
      *
      /EJECT
      *-------------------------------------------------------------------------
     E                    CPY@    1   1 80               COPYRIGHT  ARRAY
      /EJECT
      *-------------------------------------------------------------------------
     IFILEDS      DS
      *
      ** File feedback data structure used to determine cursor location
      *
     I                                      370 370 BINROW
     I                                      371 371 BINCOL
     IBINARY      DS
      *
      ** Data structure used to determine cursor location
      *
     I                                    B   1   20BINVAL
      /EJECT
      *-------------------------------------------------------------------------
     IRUNDAT    E DSRUNDAT
      *
     I           SDS
      *
      ** Get program name from PSDS
      *
     I                                     *PROGRAM ##PGM
     I                                      244 253 SWSID
     I                                      254 263 SUSER
      /EJECT
      *-------------------------------------------------------------------------
     IDLDA        DS                            256
      *
      ** Data structure for data-base processing
      *
     I                                      132 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      /EJECT
      *-------------------------------------------------------------------------
     INWRCD     E DSSEINX1PD
      *
      **  Current/previous master file fields
      *
      /EJECT
      *-------------------------------------------------------------------------
     ISVRCD       DS                              8
      *
      ** Stored master file fields
      *
      /EJECT
      *-------------------------------------------------------------------------
      *
      ** Get the data structure passed from calling program
      *
     IDATALX      DS                           1024
     I                                        1   3 #1CCYI
     I                                        4   6 #1INVT
      /EJECT
      *-------------------------------------------------------------------------
      * Main processing
      *-------------------------------------------------------------------------
      *
      ** Execute initial routine
      *
     C                     EXSR SRINIT
      *
      ** Test if Window needed
      *
     C           *IN12     IFEQ '1'
      *
      ** Execute specific routine depending on action
      *
     C                     SELEC
      *
     C           ACTION    WHEQ 'E'
     C                     EXSR SRENQ
      *
     C           ACTION    WHEQ 'D'
     C                     EXSR SRDEL
      *
     C           ACTION    WHEQ 'I'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *ON
     C                     EXSR SRINS
     C                     ELSE
     C                     EXSR SRAMD
     C                     ENDIF
      *
     C           ACTION    WHEQ 'A'
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
     C           *IN89     IFEQ *OFF
     C                     EXSR SRAMD
     C                     ELSE
     C                     EXSR SRINS
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     ENDIF
      *
      ** Execute routine to setup return code and exit program
      *
     C                     EXSR SRRTRN
      *
      /EJECT
      *****************************************************************
      * SRINS - Routine to handle 'INSERT' action
      *****************************************************************
      *
     C           SRINS     BEGSR
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Initialize fields
      *
     C                     EXSR SRINZ
      *
      ** Initialize error condition indicators
      *
     C                     MOVEL*OFF      *IN75
     C                     MOVEA'00'      *IN,20
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKL     IFEQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Move screen fields to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Write a new record to the file
      *
     C                     EXSR SRWRT
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRAMD - Routine to handle 'AMEND' action
      *****************************************************************
      *
     C           SRAMD     BEGSR
      *
      ** Save before image
      *
     C                     EXSR SRSAVE
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
     C           *IN68     DOWEQ*OFF
     C           *IN69     ANDEQ*OFF
     C           *IN70     ANDEQ*OFF
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
      ** Clear messages
      *
     C                     EXSR SRCMSG
      *
      ** Refresh
      *
     C           *INKE     IFEQ *ON
      *
      ** Set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00'      *IN,20
      *
     C                     ITER
      *
     C                     ENDIF
      *
      ** Previous or exit
      *
     C           *INKL     IFEQ *ON
      *
     C                     LEAVE
      *
     C                     ENDIF
      *
      ** Validate input
      *
     C                     EXSR SRVAL
      *
      ** If no errors,
      *
     C           *IN75     IFEQ *OFF
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
      ** If images do not match, screen will be redisplayed with
      ** relevant message
      *
     C           WWMTCH    IFEQ 'Y'
      *
      ** Images match, move screen values to file fields
      *
     C                     EXSR SRSTOF
      *
      ** Update record
      *
     C                     EXSR SRUPD
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDDO
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRDEL - Routine to handle 'DELETE' action
      *****************************************************************
      *
     C           SRDEL     BEGSR
      *
      ** Set indicators on for 'DELETE' mode to protect fields
      *
     C                     MOVE '1'       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     ELSE
      *
      ** Record found,
      ** save before image
      *
     C                     EXSR SRSAVE
      *
      ** Allocate record via update index
      *
     C                     EXSR SRALOC
      *
      ** If record on file and allocated, compare record images,
      ** else, screen will be redisplayed
      *
     C           *IN60     IFEQ '0'
     C           *IN61     ANDEQ'0'
      *
     C                     EXSR SRCOMP
      *
     C                     END
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRENQ - Routine to handle 'ENQUIRY' action
      *****************************************************************
      *
     C           SRENQ     BEGSR
      *
      ** Set indicators on for 'ENQUIRY' mode to protect fields
      *
     C                     MOVE '1'       *IN10
      *
      ** Check whether record exists
      *
     C                     EXSR SRREC
      *
      ** If record not found,
      ** set DB error indicator, setup message, display screen, exit
      *
     C           *IN89     IFEQ '1'
      *
     C                     ELSE
      *
      ** Record found, set file fields to screen fields
      *
     C                     EXSR SRFTOS
      *
      ** Display and handle screen
      *
     C                     EXSR SRSCRN
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * RSMSG - Routine to send messages to message subfile.
      *****************************************************************
      *
     C           SRSMSG    BEGSR
      *
     C           ZAMSGF    IFEQ *BLANKS
     C                     MOVEL'SEUSRMSG'ZAMSGF
     C                     END
     C                     CALL 'SNDERMSG'
     C                     PARM ##PGM     ZAPGM  10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
      *
      ** Clear all fields for default mechanism next time.
      *
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSID           Message Id.
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
     C                     MOVEL*BLANK    ZAMSGF           Message file.
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRCMSG - Routine to clear program's message queue.
      *****************************************************************
      *
     C           SRCMSG    BEGSR
      *
     C                     CALL 'CLRERMSG'
     C                     PARM ##PGM     ZAPGM
     C                     PARM '*SAME'   ZAPGRL
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRREC - Routine to access file via retrieve index
      *****************************************************************
      *
     C           SRREC     BEGSR
      *
     C           KEY       CHAINRTVIDX               89
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRALOC - Routine to access record via update index
      *****************************************************************
      *
     C           SRALOC    BEGSR
      *
     C           KEY       CHAINUPDIDX               6061
      *
      ** If record not on file, setup message 'Record deleted'
      *
     C           *IN60     IFEQ '1'
     C                     MOVEL'SE00018' ZAMSID
     C                     EXSR SRSMSG
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRUPD - Routine to update file.
      *****************************************************************
      *
     C           SRUPD     BEGSR
      *
     C                     UPDATUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRWRT - Routine to write a new record to the file.
      *****************************************************************
      *
     C           SRWRT     BEGSR
      *
     C                     WRITEUPDIDX                 68
     C  N68                MOVEL*ON       *IN70
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRCOMP - Routine to compare before/after image of records
      *****************************************************************
      *
     C           SRCOMP    BEGSR
      *
     C           SVRCD     IFEQ NWRCD
     C                     MOVE 'Y'       WWMTCH  1
     C                     ELSE
     C                     MOVE 'N'       WWMTCH
     C                     MOVEL'SE00019' ZAMSID
     C                     EXSR SRSMSG
      *
      ** Use SETLL to release record lock
      *
     C           KEY       SETLLUPDIDX
      *
      ** Set condition to redisplay screen
      *
     C                     MOVE '1'       *IN60
      *
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRSAVE - Routine to save before image of record via DS
      *****************************************************************
      *
     C           SRSAVE    BEGSR
      *
     C                     MOVELNWRCD     SVRCD
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRRTRN - Routine to set up return code for calling program
      *****************************************************************
      *
     C           SRRTRN    BEGSR
      *
      ** DBF update error
      *
     C           *IN69     IFEQ '1'
     C                     MOVE 'Y2U0004' WWRTRN
     C                     ELSE
      *
      ** Database / Window error
      *
     C           *IN68     IFEQ '1'
     C                     MOVE 'USR0563' WWRTRN
     C                     ELSE
      *
      ** F12 pressed
      *
     C           *INKL     IFEQ '1'
     C                     MOVE 'USR0790' WWRTRN
     C                     ELSE
      *
      ** No errors
      *
     C                     MOVE *BLANKS   WWRTRN
      *
     C                     END
      *
     C                     END
      *
     C                     END
      *
     C                     CLOSESEINX1PD               99
      *
      ** Exit program
      *
     C                     MOVE '1'       *INLR
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRDBER - Routine to handle database errors
      *****************************************************************
      *
     C           SRDBER    BEGSR
      *
      ** Update data area LDA
      *
     C           *NAMVAR   DEFN LDA       DLDA
     C           *LOCK     IN   DLDA
     C                     MOVEL'SE0022  'DBPGM
     C                     MOVE WWBFIL    DBFILE
     C                     MOVE WWBKEY    DBKEY
     C                     MOVE WWBASE    DBASE
     C                     OUT  DLDA
      *
      ** Set on data-base error indicators
      *
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *IN69
      *
      ** Dump program
      *
     C                     DUMP
      *
      ** Call standard DB error handler
      *
     C                     CALL 'DBERRCTL'             81
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRSCRN - Routine to handle screen and validation
      *****************************************************************
      *
     C           SRSCRN    BEGSR
      *
      ** Display messages
      *
     C                     WRITE#MSGCTL
      *
      ** Display main screen
      *
     C                     EXFMTSCREEN
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRCLOC - Routine to determine cursor location
      *****************************************************************
      *
     C           SRCLOC    BEGSR
      *
     C                     MOVELZHEX      ZHEX    1
     C                     Z-ADDZHDEC     ZHDEC   30
      *
     C                     BITOF'01234567'HEX00   1
     C                     MOVELHEX00     WWBIN   2
     C                     MOVE ZHEX      WWBIN
     C                     MOVE WWBIN     BINARY
     C                     Z-ADDBINVAL    ZHDEC
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRVAL - Routine to control validation of each field.
      *****************************************************************
      *
     C           SRVAL     BEGSR
      *
      ** Initialize error condition indicators
      *
     C                     MOVE '0'       *IN75
     C                     MOVEA'00'      *IN,20
      *
      ** Validate fields
      *
     C                     EXSR SRWARI
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRWARI - Routine to validate NTWARI
      *****************************************************************
     C           SRWARI    BEGSR
      *
     C           #0WARI    IFEQ *BLANK
     C                     MOVE 'N'       #0WARI
     C                     END
     C           #0GENR    IFEQ *BLANK
     C                     MOVE 'Y'       #0GENR
     C                     END
      *
      ** Validate field
      *
     C           #0WARI    IFNE 'Y'
     C           #0WARI    ANDNE'N'
     C                     MOVEL'SE02001' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN20
     C                     EXSR SRSMSG
     C                     END
      *
     C           #0GENR    IFNE 'Y'
     C           #0GENR    ANDNE'N'
     C                     MOVEL'SE02001' ZAMSID
     C                     MOVE '1'       *IN75
     C                     MOVE '1'       *IN21
     C                     EXSR SRSMSG
     C                     END
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRINZ - Routine to initialize screen fields with defaults
      *****************************************************************
      *
     C           SRINZ     BEGSR
      *
     C                     MOVEL'N'       #0WARI
     C                     MOVEL'Y'       #0GENR
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRFTOS - Routine to move file fields to screen fields
      *****************************************************************
      *
     C           SRFTOS    BEGSR
      *
     C                     MOVELNTWARI    #0WARI
     C                     MOVELNTGENR    #0GENR
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRSTOF - Routine to move screen fields to file fields
      *****************************************************************
      *
     C           SRSTOF    BEGSR
      *
      ** Move key field to file field
      *
     C                     MOVELKCYCD     NTCYCD
     C                     MOVELKINTP     NTINTP
      *
      ** Move data fields to file fields
      *
     C                     MOVEL#0WARI    NTWARI
     C                     MOVEL#0GENR    NTGENR
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * SRINIT - Routine to handle initial processing
      *****************************************************************
      *
     C           SRINIT    BEGSR
      *
      ** Set up copyright parameter
      *
     C                     MOVEACPY@      CPY2@  80
      *
      **  Klist to access ........ file
      *
     C           KEY       KLIST
     C                     KFLD           KCYCD
     C                     KFLD           KINTP
      *
      ** Get parameters from calling program
      *
     C           *ENTRY    PLIST
     C                     PARM           RTNCD   7
     C                     PARM           ACTION  1
     C                     PARM           DATALX
     C                     PARM           WWRTRN  7
      *
      ** Setup key values using transaction data passed from caller
      *
     C           *LIKE     DEFN NTCYCD    KCYCD
     C                     MOVE #1CCYI    KCYCD
     C           *LIKE     DEFN NTINTP    KINTP
     C                     MOVE #1INVT    KINTP
      *
      ** Redefine data-base error fields for program
      *
     C           *LIKE     DEFN DBFILE    WWBFIL
     C           *LIKE     DEFN DBKEY     WWBKEY
     C           *LIKE     DEFN DBASE     WWBASE
      *
      ** Setup file value used in database error during access to
      ** retrieval index
      *
     C           *LIKE     DEFN DBFILE    WWEXTF
     C                     MOVEL'SEINX1PD'WWEXTF
      *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
      *
      ** Initialise non-display indicators
      *
     C                     MOVEL*OFF      *IN12
      *
      ** Initialise display mode indicators
      *
     C           ACTION    IFEQ 'I'
     C           ACTION    OREQ 'A'
     C                     MOVEL*ON       *IN31
     C                     ELSE
     C                     MOVEL*OFF      *IN31
     C                     ENDIF
      *
      ** Initialise error indicators
      *
     C                     MOVEA'00'      *IN,20
     C                     MOVEL*OFF      *IN75
      *
      ** Access ICD Modules
      *
     C           1         SETLLSDMMODPD
     C                     READ SDMMODPD                 76
      *
     C           *IN76     IFEQ *ON
     C                     MOVEL'SDMMODPD'WWBFIL           ************
     C                     MOVEL'1'       WWBKEY           * DBER 003 *
     C                     Z-ADD3         WWBASE           ************
     C                     EXSR SRDBER
     C                     ENDIF
      *
     C           BGNWST    IFEQ 'Y'                        - B2
     C                     OPEN SEINX1PD
     C                     ENDIF
      *
     C           BGNWST    IFNE 'Y'                        - B2
     C                     MOVE *OFF      *IN12
      *
     C                     ELSE
      *
     C                     MOVE '1'       *IN12
      *
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
**  CPY@
(c) Misys International Banking Systems Ltd. 2005
