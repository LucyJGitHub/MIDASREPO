      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE Initialisation program for CSE031')           *
      *****************************************************************
      *                                                               *
      *  Midas - Securities Trading module                            *
      *                                                               *
      *  SE0031 - Utility to update fields Fixing Days, Auto Fix      *
      *           and Business Day convention on file SECTYD.         *
      *                                                               *
      *           NOTE: The values for the above fields should be     *
      *                 set according to the client's requirements.   *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. CSD103             Date 10Aug20               *
      *  Prev Amend No. MD046248           Date 27Oct17               *
      *                 CRE073             Date 06Dec10               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CSE075             Date 17Nov05               *
      *                 CSE071             Date 19Jul05               *
      *                 CAS006             Date 21Jan03               *
      * Midas Release 4.01 -------------------------------------------*
      *                 CSE031  *CREATE    Date 10Dec01               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CSD103 - LIBOR Deregulation - Common Layer/Standing Data     *
      *             (Recompile)                                       *
      *  MD046248 - Finastra Rebranding                               *
      *  CRE073 - Interest Rate Rounding (Recompile)                  *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSE075 - US Enhanced Treasury Upgrade to MidasPlus           *
      *           (Recompile)                                         *
      *  CSE071 - Multiple Holidays Re Securities (recompile)         *
      *  CAS006 - Hedge Accounting Phase B (Recompile)                *
      *  CSE031 - Coupon fixing for floating rate notes.              *
      *                                                               *
      *****************************************************************
      *
     FSECTY   UF  E           K        DISK         KINFSR *PSSR
      ** Midas SE Securities
      *
     E                    CPY@    1   1 80
      *
     ILDA         DS                            256
      ** Local data area for database error details
      *
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      *
     IDSFDY     E DSDSFDY
      ** First DS for access programs, short data structure
      *
     ISDBANK    E DSSDBANKPD
      ** Data Structure to receive Bank Details
      *
     IINVTP     E DSINVTPD
     I              RECI                            INRECI
     I              LCD                             INLCD
     I              CHTP                            INCHTP
     I              TNLU                            INTNLU
      ** Data Structure to receive Investment Type Details
      *
      *****************************************************************
      /EJECT
      *
     C                     MOVEACPY@      CPY2@  80
      *
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
      *
     C                     MOVEL'LE0012'  DBPGM
     C                     MOVE *BLANKS   DBFILE
     C                     MOVE *BLANKS   DBKEY
     C                     Z-ADD*ZEROS    DBASE
     C                     OUT  LDA
      *
     C           *ENTRY    PLIST
     C                     PARM           PMODE   4
     C                     PARM           PAUTOF  4
     C                     PARM           PBCNV   1
      *
      * Convert Autofix parameter to Y or N
     C           PAUTOF    IFEQ '*YES'
     C                     MOVE 'Y'       VAUTOF  1
     C                     ENDIF
     C           PAUTOF    IFEQ '*NO '
     C                     MOVE 'N'       VAUTOF
     C                     ENDIF
      *
      ** Obtain Local CCY.
      *
     C                     CALL 'AOBANKR0'
     C                     PARM '       ' PRTCD   7
     C                     PARM '*FIRST ' POPTN   7
     C           SDBANK    PARM SDBANK    DSFDY
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDBANKPD'DBFILE           *************
     C                     Z-ADD001       DBASE            * DBERR 001 *
     C                     MOVELPOPTN     DBKEY            *************
     C                     MOVEL'SE0031'  DBPGM
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Read records from SECTYD until the end of the file.
      *
     C           *LOVAL    SETLLSECTY
     C                     READ SECTY                    89
      *
     C           *IN89     DOWEQ*OFF
      *
      ** Access AOINVTR0 to get the processing type
     C                     CALL 'AOINVTR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM SITP      PINVT   3
     C                     PARM NMCY      PCCYI   3
     C           INVTP     PARM INVTP     DSFDY
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'INVTPD'  DBFILE           *************
     C                     Z-ADD002       DBASE            * DBERR 002 *
     C                     MOVELSITP      DBKEY            *************
     C                     MOVE NMCY      DBKEY
     C                     MOVEL'SE0031'  DBPGM
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** If processing type is 3 or 8 and Value CCY is local CCY,
      ** default fixing days to 0. If any other CCY, set to 2.
      ** If any other security set to 0.
      *
     C           PMODE     IFEQ '*ON'
     C           PROT      IFEQ '3'
     C           PROT      OREQ '8'
      *
     C           VLCY      IFEQ BJCYCD
     C                     Z-ADD0         FIXD
     C                     ELSE
     C                     Z-ADD2         FIXD
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADD0         FIXD
     C                     ENDIF
     C                     ENDIF
      *
      * If processing type is 3 or 8 set Auto Fix to be 'N'.
      *  and Business Day convention to 'N'.
     C           PROT      IFEQ '3'
     C           PROT      OREQ '8'
      *
     C           PMODE     IFEQ '*ON'
     C           BCNV      IFEQ *BLANKS
     C                     MOVELPBCNV     BCNV
     C                     ENDIF
     C                     MOVELVAUTOF    AUFX
      * ... if MODE = *OFF
     C                     ELSE
     C           BCNV      IFEQ 'N'
     C                     MOVE *BLANKS   BCNV
     C                     ENDIF
     C                     ENDIF
      * ... if processing type not 3 or 8
     C                     ELSE
     C           PMODE     IFEQ '*ON'
     C                     MOVE 'N'       AUFX
     C                     ENDIF
     C                     ENDIF
      *
     C                     UPDATSECTYDF
      *
     C                     READ SECTY                    89
     C                     ENDDO
      *
     C                     MOVE *ON       *INLR
     C                     RETRN
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
     C           *PSSR     BEGSR
      *
     C           @RUN      IFEQ *BLANK
      *
     C                     MOVE 'Y'       @RUN    1
     C                     DUMP
     C                     ENDIF
      *
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *****************************************************************
**  CPY@
(c) Finastra International Limited 2002
