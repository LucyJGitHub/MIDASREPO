     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE Generate a/c keys - book posns')              *
/*XBIA*: OVRDBF HTRACBX HTRACB                                      : *
/*XBIB*  OVRDBF BPACCU  BPACCL1                                       *
      *****************************************************************
      *                                                               *
      *  Midas - Securities Trading Module                            *
      *                                                               *
      *  SE0050 - GENERATE ACCOUNT KEYS FOR BOOK POSITIONS            *
      *           (Based on core SE2220)                              *
      *                                                               *
      *  Function: This program reads the Book Position Actions files *
      *   (COB)    for changes to positions today as well as changes  *
      *            to previous positions on the Historic Book Position*
      *            Actions file which require recalculation due to    *
      *            back valuations.                                   *
      *            Book Position data is updated, and position related*
      *            Account Keys are generated. Book Position Monthly  *
      *            Statistics are also updated.                       *
      *            This program is run in either Reversal (U1 on) or  *
      *            Forward (U1 off) mode:                             *
      *            1. Reversal mode - Historic Actions which are dated*
      *               after the first backvaluation on a Position are *
      *               re-actioned, and the Reversal Indicator is set  *
      *               on for all Account Keys created.                *
      *            2. Forward mode - these Historic Actions are re-   *
      *               actioned, adding all book positions, current and*
      *               backvalued, which are new today.                *
      *                                                               *
      *  Called by: SEC0605  - Generate A/c Keys - Book Positions,    *
      *                                                               *
      *  (c) Finastra International Limited 2017                      *
      *                                                               *
      *  Last Amend No. MD033891           Date 07Jul15               *
      *  Last Amend No. MD050604           Date 21Feb20               *
      *  Prev Amend No. MD046248           Date 05Feb18               *
      *                 CSE111 *CREATE     Date 06Oct17               *
      *                 nnnnnn             Date ddmmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD033891 - LAVP issue on Branch 900. Recompiled due to       *
      *             changes in /COPY ZYLDZ2.                          *
      *  MD050604 - Average price of position changed incorrectly.    *
      *           - Recompiled due to changes in copy source ZCNSDZ1. *
      *  MD046248 - Finastra Rebranding                               *
      *  CSE111 - Suppress Account Keys on Back-Value of dividends    *
      *                                                               *
      *****************************************************************
      *
     FBPACCL1 IF  E           K        DISK
     FBPACCU  UF  E           K        DISK         KINFDS BPADS
     F                                              KINFSR BPASR
     F            BPACCDF                           KRENAMEBPACDFX
     F            BPACBDF                           KRENAMEBPABDFX
     F            BPACHDF                           KRENAMEBPAHDFX
     FBPACCA  IF  E           K        DISK
     FBPACBA  IF  E           K        DISK
     FBPACBVPDIF  E                    DISK
     FBPACCAPDIF  E                    DISK
     FBPACHA  IF  E           K        DISK
     FBKPHD   UF  E           K        DISK         KINFDS BKHDS A
     F                                              KINFSR BKHSR
     FBKPHDA  UF  E           K        DISK         KINFDS BHADS
     F                                              KINFSR BHASR
     FBKPOS   UF  E           K        DISK         KINFDS BKPDS A
     F                                              KINFSR BKPSR
     FBKPOSA  UF  E           K        DISK         KINFDS BKADS
     F                                              KINFSR BKASR
     FBKPOP   IF  E           K        DISK
     F            BKPOSDF                           KRENAMEBKPOPDF
     FBKMTH   UF  E           K        DISK         KINFDS BKMDS A
     F                                              KINFSR BKMSR
     FBKMTHA  UF  E           K        DISK         KINFDS BMADS
     F                                              KINFSR BMASR
     FSEPCBD  IF  E           K        DISK
     FPRICED  IF  E           K        DISK
     FBOOKD   IF  E           K        DISK
     FSECTY   IF  E           K        DISK
     FINVTP   IF  E           K        DISK
     FSECED   IF  E           K        DISK
     FSECEO   IF  E           K        DISK
     F            SEDEVDF                           KRENAMESEDEVDO
     F            SNDEVDF                           KRENAMESNDEVDO
     FCLINT   IF  E           K        DISK
     F            CLINTCAF                          KIGNORE
     F            CLINTCBF                          KIGNORE
     F            CLINTC1F                          KIGNORE
     F            CLINTCCF                          KIGNORE
     FTRADS   IF  E           K        DISK
     FHTRACT  UF  E           K        DISK
     F            BPACCDF                           KRENAMEBPACCH1F
     F            BPACBDF                           KRENAMEBPACBH1F
     F            BPACHDF                           KRENAMEBPACHH1F
     FHTRACB  IF  E           K        DISK
     F            BPACCDF                           KRENAMEBPACCH2F
     F            BPACBDF                           KRENAMEBPACBH2F
     F            BPACHDF                           KRENAMEBPACHH2F
     FHTRACBX UF  E           K        DISK
     F            BPACCDF                           KRENAMEBPACCH3F
     F            BPACBDF                           KRENAMEBPACBH3F
     F            BPACHDF                           KRENAMEBPACHH3F
     FBKPHH   O   E           K        DISK         KINFDS HHDDS
     F                                              KINFSR HHDSR
     F            BKPHDDF                           KRENAMEBKPHHDF
     FBKPHHA  UF  E           K        DISK         KINFDS HHADS
     F                                              KINFSR HHASR
     FBSPOSDL0UF  E           K        DISK
     FSEKEYD  O   E           K        DISK         KINFDS SKDDS
     F                                              KINFSR SKDSR
     FSEKEYA  O   E           K        DISK         KINFDS SKADS
     F                                              KINFSR SKASR
     FSEDEVAL1IF  E           K        DISK
     F            SEDEVDF                           KRENAMESEDEVDAL
     FSE0050AUO   E                    PRINTER
     FTABSE   IF  E           K        DISK
     F            TABLETAF                          KIGNORE
     F            TABTE10F                          KIGNORE
     F            TABTE20F                          KIGNORE
     F            TABTG20F                          KIGNORE
     F            TABLETHF                          KIGNORE
     F            TABLETKF                          KIGNORE
     F            TABLETLF                          KIGNORE
     F            TABLETNF                          KIGNORE
     F            TABLETPF                          KIGNORE
     F            TABLETXF                          KIGNORE
     F            TABLET2F                          KIGNORE
     F            TABLET3F                          KIGNORE
     F            TABLET5F                          KIGNORE
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  F U N C T I O N   O F   I N D I C A T O R S                  *
      *                                                               *
      *   01  -  BPACCD READ )                                        *
      *   02  -  BPACBD READ ) FROM BPACC                             *
      *   03  -  BPACHD READ )                                        *
      *   04  -  BPACCD READ)                                         *
      *   05  -  BPACBD READ) FROM HTRACT                             *
      *   06  -  BPACHD READ)                                         *
      *   07  -  BPACCD READ )                                        *
      *   08  -  BPACBD READ ) FROM HTRACB                            *
      *   09  -  BPACHD READ )                                        *
      *   10  -  BOOK POSITION HEADER NOT FOUND                       *
      *   11  -  BOOK POSITION NOT FOUND                              *
      *   12  -  BKMTHD RECORD PRESENT                                *
      *   13  -  BPACCD READ )                                        *
      *   14  -  BPACBD READ ) FROM HTRACBX                           *
      *   15  -  BPACHD READ )                                        *
      *   19  -  TRADE ACTIONS HAVE BEEN PROCESSED ON THIS POSITION   *
      *   20  -  ACTION HAS BEEN PROCESSED                            *
      *   21  -  TRADE ACTIONS HAVE BEEN PROCESSED ON THIS POSITION   *
      *   22  -  ONE ACCOUNT KEY IS REQUIRED                          *
      *   23  -  TWO ACCOUNT KEYS ARE REQUIRED                        *
      *   24  -  REALPL CALLED FROM P10                               *
      *   25  -  REALPL CALLED FROM P60                               *
      *   28  -  AVERAGE PRICE CHANGED FROM DISC/PREM OR PREM/DISC    *
      *   29  -  AVERAGE PRICE HAS REMAINED LONG(+VE) OR SHORT(-VE)   *
      *   30  -  NOMINAL POSITION HAS REMAINED LONG OR SHORT          *
      *   31  -  NONINAL POSITION HAS CHANGED LONG/SHORT OR SHORT/LONG*
      *   32  -  TRADE IS SALE,NEW NOMINAL LONG OR TRADE IS PURCHASE, *
      *           NEW NOMINAL SHORT                                   *
      *   33  -  TRADE IS SALE,NEW NOMINAL SHORT OR TRADE IS PURCHASE,*
      *          NEW NOMINAL LONG                                     *
      *   34  -  TRADE IS SALE,OLD NOMINAL LONG OR TRADE IS PURCHASE, *
      *          OLD NOMINAL SHORT                                    *
      *   36  -  TRADE IS SALE,OLD NOMINAL SHORT OR TRADE IS PURCHASE,*
      *          OLD NOMINAL LONG                                     *
      *   37  -  OLD AND NEW UNREALISED P/L BOTH +VE OR BOTH -VE      *
      *          AND old and new nominal both positive or both negativ*
      *   41  -  NOMINAL CHANGES CASE 1 (P10)                         *
      *   42  -  NOMINAL CHANGES CASE 2 (P10)                         *
      *   43  -  NOMINAL CHANGES CASE 3 (P10)                         *
      *   44  -  CUM-COUPON NOMINAL CHANGES CASE 1 (P10)              *
      *   45  -  CUM-COUPON NOMINAL CHANGES CASE 2 (P10)              *
      *   46  -  CUM-COUPON NOMINAL CHANGES CASE 3 (P10)              *
      *   48  -  NO RECORDS IN PRICED FILE                            *
      *   49  -  NO PRICE RECORD EXISTS FOR A SECURITY                *
      *   50  -  FILE AND CALCULATED TOTALS DISAGREE - BPACCD         *
      *   51  -  FILE AND CALCULATED TOTALS DISAGREE - BPACBD         *
      *   52  -  FILE AND CALCULATED TOTALS DISAGREE - BPACHD         *
      *   53  -  AUSTRALIAN YIELD TRADED SECURITY                     *
      *   70  -  NOMINAL CURRENCY DECIMAL PLACES IS 0                 *
      *   71  -  NOMINAL CURRENCY DECIMAL PLACES IS 1                 *
      *   72  -  NOMINAL CURRENCY DECIMAL PLACES IS 2                 *
      *   73  -  NOMINAL CURRENCY DECIMAL PLACES IS 3                 *
      *   79  -  EOF on READ/READP of SEDEVAL                         *
      *   80  -  ERROR ON CHAIN PROCESS                               *
      *   81  -  USED IN Z-SUBROUTINES                                *
      *   82     CURRENT FIFO TRADE FOUND FOR THIS POSITION           *
      *   83     END OF FORWARD TRADES FOR THIS POSITION              *
      *   85  -  EOF ON READE OF HTRACB                               *
      *   86  -  ERROR ON CHAIN TO HTRACB                             *
      *   87  -  ERROR ON CHAIN TO HTRACT                             *
      *   88  -  CHAIN-FOR-UPDATE ON BPACC FAILED.                    *
      *   89  -  END OF FILE ON BPACC                                 *
      *                                                               *
      * 90-99 -  USED IN Z-SUBROUTINES                                *
      *                                                               *
      *   U1  -  REVERSAL MODE                                        *
      * U7-U8 -  DATABASE ERROR                                       *
      *   U8  -  CONTROL TOTALS OUT OF BALANCE                        *
      *                                                               *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E   I N D E X                              *
      *                                                               *
      *  FIRST  - ACCESSES INFO FROM ICD,ICD2 AND ICDSE               *
      *  BKSET  - SETS UP FIELDS FOR CALCULATION IF RECORDS NOT FOUND *
      *  P05    - PROCESSES PP CALL ACTIONS                           *
      *  P06    - Processes Calculation of Book Value Change          *
      *  P07    - Processes Calculation of Equity Amount              *
      *  P10    - PROCESSES TRADE ACTIONS                             *
      *  P20    - PROCESSES MORTGAGE PAYMENT ACTIONS                  *
      *  P30    - PROCESSES COUPON ACTIONS                            *
      *  P35    - PROCESSES DIVIDEND ACTIONS                          *
      *  P50    - PROCESSES INTEREST RATE CHANGE ACTIONS              *
      *  P60    - PROCESSES AVERAGE PRICE CHANGE ACTIONS              *
      *  P70    - PROCESSES MATURITY DATE ACTIONS                     *
      *  P80    - Processes Amortisation on End of Average Life Date  *
      *  AMORT  - AMORTIZES DISCOUNT/PREMIUM                          *
      *  AAMORT - AMORTIZES DISCOUNT/PREMIUM ON A YIELD CURVED BASIS  *
      *  AMORSL - Calculate Amortisation (Straight Line Method)       *
      *  AAMORC - Calculate Amortisation (Constant Yield Method)      *
      *  AMTPL  - CALCULATE AMORTISED PROFIT/LOSS FOR BUY-SELL TRADES *
      *  CALPL  - CALCULATE P/L FOR B/S TRADES  FOR AMORTISATION      *
      *  BSPLS  - CALCULATE P/L FOR B/S TRADES                        *
      *  ACCRUE - CALCULATES ACCREUD INTEREST UP TO DATE              *
      *  FVAL   - PRODUCES FACE VALUE ACCOUNT KEYS                    *
      *  CONS   - PRODUCES CONSIDERATION ACCOUNT KEYS                 *
      *  CLOSE  - ACCESSES HISTORIC ACTIONS FOR TRADES TO BE CLOSED   *
      *  REALPL - PRODUCES REALIZED P/L ACCOUNT KEYS                  *
      *  AVPR   - CALCULATES AVERAGE PRICE                            *
      *  AVPRAM - UPDATES AVERAGE PRICE AFTER AMORTIZATION            *
      *  DSPRT  - PRODUCES DISCOUNT/PREMIUM KEYS FOR TRADE DATE       *
      *  DSPRV  - PRODUCES DISCOUNT/PREMIUM KEYS FOR VALUE DATE       *
      *  PIAI   - PRODUCES PURCHASED/ACCRUED ACCOUNT KEYS             *
      *  PI     - PRODUCES PURCHASED INTEREST ACCOUNT KEYS            *
      *  UNRLPL - CALCULATES UNREALIZED P/L AND PRODUCES ACCOUNT KEYS *
      *                                                               *
      *  W01    - OUTPUTS ACCOUNT KEYS TO SEKEYD                      *
      *  W02    - OUTPUTS A NEW BOOK POSTION RECORD                   *
      *  W03    - OUTPUTS A NEW BOOK POSITION HEADER RECORD           *
      *  W04    - OUTPUTS A BOOK POSITION MONTHLY STATISTICS RECRD    *
      *  W05    - OUTPUTS A HISTORIC BOOK POSITION HEADER RECORD      *
      *  W06    - Outputs Book Value Change and Equity Amount A/C Key *
      *  U01    - UPDATES ACTION RECORD                               *
      *  U02    - UPDATES BOOK POSITION HEADER RECORD                 *
      *  U04    - UPDATES A BOOK POSITION MONTHLY STATISTICS RECOR    *
      *  GETPPP - SUBROUTINE TO GET PARTLY PAID PRICE PRIOR TO ACTION.
      *  AUDIT  - PRODUCES CONTROL REPORT AND UPDATES AUDIT RECORD    *
      *                                                               *
      *  BKHCHN - CHAINS TO BOOK POSITION HEADER                      *
      *  BKPCHN - CHAINS TO BOOK POSITION                             *
      *  PPCCHN - CHAINS TO BOOK POSITION PROFIT CENTRE               *
      *  BOKCHN - CHAINS TO BOOK DESCRIPTION FILE                     *
      *  SECCHN - CHAINS TO SECURITIES FILE                           *
      *  INVCHN - CHAINS TO INVESTMENTS FILE                          *
      *  CLICHN - CHAINS TO CLIENT FILE                               *
      *  TABCHN - CHAINS TO TABTG10 FILE                              *
      *                                                               *
      *  ZBKDT  - WORKS OUT A NUMBER OF WORKING DAYS BACKWARDS        *
      *  ZACCR  - CALCULATES ACCRUED INTEREST                         *
      *  ZACCZ  - SUBROUTINE TO CALCULATE INTEREST ACCRUED ON A       *
      *           SECURITY (NOT SCHULDSHEIN) UP TO A SPECIFIED DATE   *
      *  ZCALCD - Calculate long term CD price from yield             *
      *  ZCNSD  - CALCULATES AMOUNT FROM NOMINAL AND PRICE            *
      *  ZDATE1 - CONVERTS DATES TO DAYS                              *
      *  ZDATE2 - CONVERTS DAYS TO DATES                              *
      *  ZDAYS  - CALCULATES NO OF DAYS BETWEEN TWO DATES             *
      *  ZDYYR  - CALCULATES NO OF DAYS IN INTEREST YEAR              *
      *  ZD5DYS - TO CALCULATE NO OF DAYS IN INT. YEAR FOR DVBS 5.    *
      *  ZEVCD  - CALCULATES EVENT CONTROL DATE                       *
      *  ZICD2  - OBTAINS ICD2 INFO                                   *
      *  ZICDSE - OBTAINS ICDSE INFO                                  *
      *  ZLCD   - CALCULATES PREVIOUS COUPON DATE                     *
      *  ZNCD   - CALCULATES NEXT COUPON DATE                         *
      *  ZPRCI  - CONVERTS PRICE TO %PRICE                            *
      *  ZRATE  - CALCULATES EFFECTIVE RATE                           *
      *  ZSYSTM - OBTAINS ICD INFO                                    *
      *  ZYCE   - SET UP AUSTRALIAN YIELD CUM/EX PARAMETER            *
      *  ZYLDI  - OUTPUTS YIELD AS PERCENTAGE                         *
      *  *PSSR  - EXCEPTION ERROR ROUTINE                             *
      *                                                               *
      *****************************************************************
      /EJECT
     E                    CPY@    1   1 80
     E/COPY ZSRSRC,ZDAYSZ1
     E/COPY ZSRSRC,ZDATE2Z1
     E/COPY ZSRSRC,ZPOWER8Z1
     E/COPY ZSRSRC,ZNCDZ1
     E/COPY ZSRSRC,ZHASHZ1
     E/COPY ZSRSRC,ZHOLE
     E                    WWARRZ  1   5  5
      /EJECT
      *
      * RECORD IDENTIFIERS
      ***  Read from LF/BPACC - 01, 02, 03.
      *
     IBPACCDF     01
      *
      *   RENAME FIELDS USED ON BPACBD TO LOOK LIKE BPACCD AND BPACHD
     IBPACBDF     02
     I              BBSS                            BCSS
     I              BBBA                            BCBA
     I              BBMK                            BCMK
     I              BBBK                            BCBO
     I              BBAD                            BCAD
     I              BBED                            BCED
     I              BBAS                            BCAS
     I              BBTP                            BCTP
     I              BBIT                            BCIT
     I              BBUN                            BCUN
     I              BBCA                            BCCP
     I              BBTA                            BCTA
     I              BBCF                            BCCF
     I              BBPC                            BCPC
     I              BBNC                            BCNC
     I              BBNR                            BCNR
     I              BBOD                            BCOT
     I              BBTV                            BCTV
     I              BBTR                            BCTR
     I              BBTS                            BCTS
     I              BBPS                            BCPS
     I              BBNM                            BCNL
     I              BBCN                            BCCN
     I              BBRA                            BCRA
     I              BBCC                            BCCC
     I              BBCT                            BCCT
     I              BBPT                            BCTD
     I              BBRI                            BCRV
     I              BBPR                            BCPR
     I              BBP1                            BCP1
     I              BBP2                            BCP2
     I              BBPL                            BCPL
     I              BBAP                            BCAT
     I              BBDV                            BCDV
     I              BBCOAF                          BCCOAF
     I              BBPN                            BCPN
      *
     IBPACHDF     03
      *
     IBPABDFX
     I              BBSS                            BCSS
     I              BBBA                            BCBA
     I              BBMK                            BCMK
     I              BBBK                            BCBO
     I              BBAD                            BCAD
     I              BBED                            BCED
     I              BBAS                            BCAS
     I              BBTP                            BCTP
     I              BBIT                            BCIT
     I              BBUN                            BCUN
     I              BBCA                            BCCP
     I              BBTA                            BCTA
     I              BBCF                            BCCF
     I              BBPC                            BCPC
     I              BBNC                            BCNC
     I              BBNR                            BCNR
     I              BBOD                            BCOT
     I              BBTV                            BCTV
     I              BBTR                            BCTR
     I              BBTS                            BCTS
     I              BBPS                            BCPS
     I              BBNM                            BCNL
     I              BBCN                            BCCN
     I              BBRA                            BCRA
     I              BBCC                            BCCC
     I              BBCT                            BCCT
     I              BBPT                            BCTD
     I              BBRI                            BCRV
     I              BBPR                            BCPR
     I              BBP1                            BCP1
     I              BBP2                            BCP2
     I              BBPL                            BCPL
     I              BBAP                            BCAT
     I              BBDV                            BCDV
     I              BBPN                            BCPN
      *
      ***  Read from LF/HTRACT - 04, 05, 06.
      *
     IBPACCH1F    04
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTP                            HBCTP
     I              BCTR                            HBCTR
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
     IBPACBH1F    05
     I              BBSS                            HBCSS
     I              BBBA                            HBCBA
     I              BBMK                            HBCMK
     I              BBBK                            HBCBO
     I              BBAD                            HBCAD
     I              BBOD                            HBCOT
     I              BBTV                            HBCTV
     I              BBTP                            HBCTP
     I              BBTR                            HBCTR
     I              BBPS                            HBCPS
     I              BBNM                            HBCNL
     I              BBCN                            HBCCN
     I              BBRA                            HBCRA
     I              BBCC                            HBCCC
     I              BBCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BBCF                            HBCCF
     I              BBPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BBRI                            HBCRV
     I              CNTN                            HCNTN
     I              BBPN                            HBCPN
      *
     IBPACHH1F    06
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTR                            HBCTR
     I              BCTP                            HBCTP
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
      ***  Read from LF/HTRACB - 07, 08, 09.
      *
     IBPACCH2F    07
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTP                            HBCTP
     I              BCTR                            HBCTR
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
     IBPACBH2F    08
     I              BBSS                            HBCSS
     I              BBBA                            HBCBA
     I              BBMK                            HBCMK
     I              BBBK                            HBCBO
     I              BBAD                            HBCAD
     I              BBOD                            HBCOT
     I              BBTV                            HBCTV
     I              BBTP                            HBCTP
     I              BBTR                            HBCTR
     I              BBPS                            HBCPS
     I              BBNM                            HBCNL
     I              BBCN                            HBCCN
     I              BBRA                            HBCRA
     I              BBCC                            HBCCC
     I              BBCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BBCF                            HBCCF
     I              BBPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BBRI                            HBCRV
     I              CNTN                            HCNTN
     I              BBPN                            HBCPN
      *
     IBPACHH2F    09
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTP                            HBCTP
     I              BCTR                            HBCTR
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
      ***  Read from LF/HTRACBX - 13, 14, 15.
      *
     IBPACCH3F    13
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTP                            HBCTP
     I              BCTR                            HBCTR
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
     IBPACBH3F    14
     I              BBSS                            HBCSS
     I              BBBA                            HBCBA
     I              BBMK                            HBCMK
     I              BBBK                            HBCBO
     I              BBAD                            HBCAD
     I              BBOD                            HBCOT
     I              BBTV                            HBCTV
     I              BBTP                            HBCTP
     I              BBTR                            HBCTR
     I              BBPS                            HBCPS
     I              BBNM                            HBCNL
     I              BBCN                            HBCCN
     I              BBRA                            HBCRA
     I              BBCC                            HBCCC
     I              BBCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BBCF                            HBCCF
     I              BBPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BBRI                            HBCRV
     I              CNTN                            HCNTN
     I              BBPN                            HBCPN
      *
     IBPACHH3F    15
     I              BCSS                            HBCSS
     I              BCBA                            HBCBA
     I              BCMK                            HBCMK
     I              BCBO                            HBCBO
     I              BCAD                            HBCAD
     I              BCOT                            HBCOT
     I              BCTV                            HBCTV
     I              BCTP                            HBCTP
     I              BCTR                            HBCTR
     I              BCPS                            HBCPS
     I              BCNL                            HBCNL
     I              BCCN                            HBCCN
     I              BCRA                            HBCRA
     I              BCCC                            HBCCC
     I              BCCT                            HBCCT
     I              PCHI                            HPCHI
     I              CNTP                            HCNTP
     I              ACRI                            HACRI
     I              BCCF                            HBCCF
     I              BCPR                            HBCPR
     I              LCCP                            XXLCCP
     I              CFAP                            HCFAP
     I              BCRV                            HBCRV
     I              CNTN                            HCNTN
      *
     ITRADSDF
     I              RECI                            TRECI
     I              TDVD                            TRDVD
     I              EUTX                            TEUTX
      *
     IBKPOSDF
     I              RECI                            BRECI
     ISECTYDF
     I              SITP                            SSITP
     I              NMCY                            SNMCY
      *
      ** TO RENAME SNDEVD FIELDS
      *
     ISNDEVDF
     I              RECI                            RECINS
     I              SNDT                            SDED
     I              SNET                            SDET
     I              LCCP                            XXLCCP
      *
     ISEDEVDF
     I              RECI                            RECISD
      *
     ISEDEVDO
     I              RECI                            RECISO
     ISNDEVDO
     I              RECI                            RECINO
     I              LCCP                            XXLCCP
     IBKPOPDF
     I              RECI                            JRECI
     I              BPSC                            JBPSC
     I              BPBA                            JBPBA
     I              BPBK                            JBPBK
     I              BPMK                            JBPMK
     I              BPTV                            JBPTV
     I              BPPD                            JBPPD
     I              NPSN                            JNPSN
     I              ECNP                            JECNP
     I              APPB                            JAPPB
     I              RPTP                            JRPTP
     I              PILP                            JPILP
     I              APNC                            JAPNC
     I              SNPI                            JSNPI
     I              SNSI                            JSNSI
     I              SANP                            JSANP
     I              SANS                            JSANS
     I              ANMP                            JANMP
     I              ZZ005                           JZZ005
     I              ADJI                            JADJI
     I              TNLU                            JTNLU
     I              AAPR                            JAAPR
     I              FXAP                            JFXAP
     I              APPN                            JAPPN
     I              APNN                            JAPNN
     I              PILN                            JPILN
     I              BKCOST                          JBKCOS
     I              PNOM                            JPNOM
      *
     IINVTPDF
     I              SFLG                            ISFLG
      *
      ** Rename SEDEV fields
      *
     ISEDEVDAL
     I              RECI                            C#RECI
     I              SDSN                            C#SDSN
     I              SDED                            C#SDED
     I              SDET                            C#SDET
     I              SDNV                            C#SDNV
     I              SDVA                            C#SDVA
     I              ZZ005                           C#ZZ05
     I              SRPT                            C#SRPT
     I              SDTR                            C#SDTR
     I              SRMI                            C#SRMI
     I              SDPD                            C#SDPD
     I              SDNC                            C#SDNC
     I              SDPP                            C#SDPP
     I              SDPC                            C#SDPC
     I              SDTA                            C#SDTA
     I              SDTP                            C#SDTP
     I              SDRP                            C#SDRP
     I              SDCV                            C#SDCV
     I              SDCX                            C#SDCX
     I              SDCE                            C#SDCE
     I              SDMD                            C#SDMD
     I              NMCY                            C#NMCY
     I              SDAD                            C#SDAD
     I              SDDT                            C#SDDT
     I              RCIC                            C#RCIC
     I              LCD                             C#LCD
     I              CHTP                            C#CHTP
     I              TNLU                            C#TNLU
     I              SDCP                            C#SDCP
     I              SDXD                            C#SDXD
     I              FRNT                            C#FRNT
     I              REPA                            C#REPA
     I              TMST                            C#TMST
     I              SCRS                            C#SCRS
     I              SLQP                            C#SLQP
     I              SDNN                            C#SDNN
     I              SDAL                            C#SDAL
      *
      ** External DS for Bank Details
      *
     ISDBANK    E DSSDBANKPD
      *
      ** INPUT RECORD
      *
     IRECIN     E DSBPACCL1
      *
      ** STORE FOR INPUT RECORD
      *
     I            DS
     I                                        1 232 STREC
      *
      ** DATA STRUCTURES FOR Z-SUBROUTINES
      *
     I/COPY ZSRSRC,ZHASHZ2
      *
     I/COPY ZSRSRC,ZNCDZ2
      *
     I            DS
     I                                        1   6 IKEY
     I                                        1   3 SNMCY
     I                                        4   6 SSITP
      *
     I            DS
     I                                        1  15 EKEY
     I                                        1  10 ESEC
     I                                    P  11  130EDTE
     I                                       14  15 ETYP
      *
     I            DS
     I                                        1  12 TKEY
     I                                        1   20RECT
     I                                        3  10 ZZ008
     I                                       11  120RCDE
      *
      ** DATA STRUCTURE FOR ACCOUNT KEY
      *
     I            DS
     I                                        1  20 ACKY
     I                                        1  18 ACKY2
     I                                        1   3 IVTP
     I                                        4   4 EVTP
     I                                        5   5 TRTP
     I                                        6   6 PORT
     I                                        7   8 BHBK
     I                                        9   9 PSBS
     I                                       10  10 FILL
     I                                        9  10 TRST
     I                                       11  12 CHGT
     I                                       13  13 BHMK
     I                                       14  14 CNVI
     I                                       15  15 NEGI
     I                                       16  18 FIL3
     I                                       19  20 AMCD
      *
      ***  Define BPACC Key fields.
      *
     I            DS
     I                                        1  30 BPBCKY
     I                                        1  10 BPBCSS
     I                                       11  13 BPBCBA
     I                                       14  14 BPBCMK
     I                                       15  16 BPBCBO
     I                                       17  17 BPBCTV
     I                                    P  18  200BPBCAD
     I                                       21  22 BPBCAS
     I                                       23  23 BPBCTS
     I                                       24  29 BPBCTR
     I                                       30  30 BPBCRV
      *
      ** DATA STRUCTURES TO STORE KEYS FOR PREVIOUS ACTION
      *
     I            DS
     I                                        1  17 BCKEY
     I                                        1  20 BPKEY
     I                                        1  10 PBCSS
     I                                       11  13 PBCBA
     I                                       14  15 PBCBO
     I                                       16  16 PBCMK
     I                                       17  17 PBCTV
     I                                    P  18  200LPSD
      *
     I            DS
     I                                        1  17 BCKEYP
     I                                        1  10 KBCSS
     I                                       11  13 KBCBA
     I                                       14  15 KBCBO
     I                                       16  16 KBCMK
     I                                       17  17 KBCTV
      *
      ** DATA STRUCTURE TO SET UP KEY FIELDS FOR HIST TRD FILES
      *
     I            DS
     I                                        1  17 TRKEY
     I                                        1   3 HBCBA
     I                                        4  13 HBCSS
     I                                       14  15 HBCBO
     I                                       16  16 HBCMK
     I                                       17  17 HBCTV
      *
     I            DS
     I                                        1  17 KTRKEY
     I                                        1   3 KHBCBA
     I                                        4  13 KHBCSS
     I                                       14  15 KHBCBO
     I                                       16  16 KHBCMK
     I                                       17  17 KHBCTV
      *
     IKSEPCR      DS
      *
      ** Data structure to enable reporting of Book Position Profit
      ** Centre database errors
     I                                        1   2 KBOKC
     I                                        3   5 KBRCA
     I                                        6  15 KSESN
     I                                       16  16 KMKTI
      *
      ** DATA STRUCTURE TO STORE RECORDS FOR BOOK POSITION
      *
     IBKPREC    E DSBKPOS
     I              RECI                            BRECI
     I              ZZ005                           ZZ005X
      *
     I            DS
     I                                        1 150 RECST1
     I                                      120 238 RECST2
      *
      ** DATA AREA SESTAT
      *
     ISESTAT    E DS
      *
      ** DATA STRUCTURES FOR ERROR HANDLING
      *
     IBKHDS       DS
     I                                     *STATUS  STSBKH
      *
     IBKPDS       DS
     I                                     *STATUS  STSBKP
      *
     IBPADS       DS
     I                                     *STATUS  STSBPA
      *
     ISKDDS       DS
     I                                     *STATUS  STSSKD
      *
     ISKADS       DS
     I                                     *STATUS  STSSKA
      *
     IBHADS       DS
     I                                     *STATUS  STSBHA
      *
     IBKADS       DS
     I                                     *STATUS  STSBKA
      *
     IBKMDS       DS
     I                                     *STATUS  STSBKM
      *
     IBMADS       DS
     I                                     *STATUS  STSBMA
      *
     IHHDDS       DS
     I                                     *STATUS  STSHHD
      *
     IHHADS       DS
     I                                     *STATUS  STSHHA
      *
     ILDA         DS                            256
      ***  Local Data Area for Database Error Information.
     I                                      134 183 DBLOT
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      *
      ** DATA STRUCTURE FOR COMPILATION  - COPYRIGHT INSERTION
     ICPYR@#      DS
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
      *
     I/COPY ZSRSRC,ZYLDZ1
     I/COPY ZSRSRC,ZHOLI
     I/COPY ZSRSRC,ZHOLDS
      *
     I            DS
     I                                        1   5 WWKY
     I                                        1   1 WWKY1
     I                                        2   2 WWKY2
     I                                        3   3 WWKY3
     I                                        4   5 WWKY4
      *
      ** Input parameters on call to AOPLCSR1
     II@PARM      DS                            256
     I                                        1   1 I#PORS
     I                                        2   5 I#R997
     I                                        6  15 I#CUST
     I                                       16  18 I#BRCA
     I                                       19  20 I#BOOK
     I                                       21  24 I#PTFR
     I                                       25  34 I#CPGM
      *
      ** Output parameters on call to AOPLCSR1
     IO@PARM      DS                            256
     I                                        1   2 O#BOOK
     I                                        3   6 O#PTFR
     I                                        7  12 O#BICN
     I                                       13  22 O#CRNM
     I                                       23  24 O#ACOF
      *
     ISDMMOD    E DSSDMMODPD
      **  Data structure for module details
      *
     ISDPORT    E DSSDPORTPD
      **  Data structure for Porfolio Management ICD
      *
     ISDPLCS    E DSSDPLCSPD
      **  Data structure for Porfolio Customer details
      *
     ISDSTRD    E DSSDSTRDPD
      **  Securities Trading Details
      *
     ISCSARD    E DSSCSARDPD
      ** Switchable features file
      *
     ISDHEDG    E DSSDHEDGPD
      ** Hedge ICD
      *
     ISDGELR    E DSSDGELRPD
      ** EXTERNAL DS FOR GENERAL LEDGER DETAILS
      *
     IDSFDY     E DSDSFDY
      ** First data structure for access programs, short data structure
      *
     I              'DiscPremAmortPostn  'C         SVALKK
      *
     C/EJECT
      *================================================================
      *  P R O G R A M   S T A R T                                    *
      *================================================================
      *
      ** Copyright Statement
      *
     C                     MOVEACPY@      ACT@   80
      *
      ** KEYLISTS FOR FILE CHAINS
      *
      ** - BOOK POSITION HEADER
      *
     C           BKHKEY    KLIST
     C                     KFLD           KBCSS
     C                     KFLD           KBCBA
     C                     KFLD           KBCBO
     C                     KFLD           KBCMK
     C                     KFLD           KBCTV
      *
      ** - BOOK POSITION
     C           BKPKEY    KLIST
     C                     KFLD           KBCSS
     C                     KFLD           KBCBA
     C                     KFLD           KBCBO
     C                     KFLD           KBCMK
     C                     KFLD           KBCTV
     C                     KFLD           LPSD
      *
      ** Keylist for chain to BKPOSD in W02
      *
     C           BKPKY2    KLIST
     C                     KFLD           BHSC
     C                     KFLD           BHBA
     C                     KFLD           BHBK
     C                     KFLD           BHMK
     C                     KFLD           BHTV
     C                     KFLD           KBCAD
      *
      ** - Book position profit centre (PF/SEPCBD)
      *
     C           KSEPCB    KLIST
     C                     KFLD           KBOKC
     C                     KFLD           KBRCA
     C                     KFLD           KSESN
     C                     KFLD           KMKTI
      *
      ** - BOOK
      *
     C           BOKKEY    KLIST
     C                     KFLD           BCBO
      *
      ** - SECURITY
      *
     C           SECKEY    KLIST
     C                     KFLD           BCSS
      *
      ** - SECURITY DIARY EVENTS
      *
     C           SEDKEY    KLIST
     C                     KFLD           BCSS
     C                     KFLD           ETYP
     C                     KFLD           TDVD
      *
      ** - INVESTMENT TYPE
      *
     C           INVKEY    KLIST
     C                     KFLD           SNMCY
     C                     KFLD           SSITP
      *
      ** - CLIENTS
      *
     C           CLIKEY    KLIST
     C                     KFLD           TRCP
      *
      ** - TABLE
      *
     C           TABKEY    KLIST
     C                     KFLD           TKEY
      *
      ** Full Key for BPACC to CHAIN before UPDATE.
      *
     C           BPCKEY    KLIST
     C                     KFLD           BPBCSS
     C                     KFLD           BPBCBA
     C                     KFLD           BPBCMK
     C                     KFLD           BPBCBO
     C                     KFLD           BPBCTV
     C                     KFLD           BPBCAD
     C                     KFLD           BPBCAS
     C                     KFLD           BPBCTS
     C                     KFLD           BPBCTR
     C                     KFLD           BPBCRV
      *
      ** - HISTORIC TRADE ACTIONS BY TRADE
      *
     C           HTTKEY    KLIST
     C                     KFLD           KBHTR   6
     C                     KFLD           BHTV
     C                     KFLD           KBCSS
      *
      ** - HISTORIC TRADE ACTIONS BY BRANCH
      *
     C           HTBKEY    KLIST
     C                     KFLD           KHBCBA
     C                     KFLD           KHBCSS
     C                     KFLD           KHBCBO
     C                     KFLD           KHBCMK
     C                     KFLD           KHBCTV
     C                     KFLD           KDTE    50
     C                     KFLD           KREF    6
      *
     C           HTBKY2    KLIST
     C                     KFLD           KHBCBA
     C                     KFLD           KHBCSS
     C                     KFLD           KHBCBO
     C                     KFLD           KHBCMK
     C                     KFLD           KHBCTV
      *
      ** PRICED FILE KEY
      *
     C           PKEY      KLIST
     C                     KFLD           PSSN
     C                     KFLD           PPRT
     C                     KFLD           PVDT
      *
      ** Buy/Selk Book File Key List (TDRF)
      *
     C           BSKEY1    KLIST
     C                     KFLD           BCBA
     C                     KFLD           BCBO
     C                     KFLD           TDRF
      *
      ** Buy/Selk Book File Key List (LKRF)
      *
     C           BSKEY2    KLIST
     C                     KFLD           BCBA
     C                     KFLD           BCBO
     C                     KFLD           LKRF
      *
      ** Security Events Diary Key List
      *
     C           SEKEY1    KLIST
     C                     KFLD           CSDSN  10
     C                     KFLD           CSDET   2
     C                     KFLD           CSDED   50
      *
      ** ACCESS ICD INFORMATION
      *
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C                     MOVE *BLANK    DBLOT
     C                     MOVE 'SE0050  'DBPGM
     C                     OUT  LDA
      *
     C                     EXSR FIRST
     C           *INU7     IFEQ '1'
     C                     GOTO EAUDIT
     C                     END
      *
      ** DEFINE AND CLEAR WORK FIELDS AND INDICATORS
      *
     C           *LIKE     DEFN BCP1      WBCP1
     C           *LIKE     DEFN BCP2      WBCP2
     C           *LIKE     DEFN BCPL      WBCPL
     C           *LIKE     DEFN BCDV      WBCDV
     C           *LIKE     DEFN INAJ      WINAJ
     C           *LIKE     DEFN PCHI      WPCHI
     C           *LIKE     DEFN CNTP      WCNTP
     C           *LIKE     DEFN RMIP      WRMIP
     C           *LIKE     DEFN ACRI      WACRI
     C                     MOVE *ZEROS    WTRCP   60
     C           *LIKE     DEFN LPSD      TLPSD
     C           *LIKE     DEFN APNC      PAPNC
     C           *LIKE     DEFN CFCT      WBCCF
     C                     MOVE *BLANK    BCKEYP
     C                     MOVE *ZEROS    KBCAD   50
     C                     Z-ADD0         ICREC   50
     C                     Z-ADD0         IXREC   50
     C                     Z-ADD0         IBREC   50
     C                     Z-ADD0         IHREC   50
     C                     Z-ADD0         OREC    50
     C                     Z-ADD0         BHUREC  50
     C                     Z-ADD0         BHAREC  50
     C                     Z-ADD0         BPAREC  50
     C                     Z-ADD0         HHAREC  50
     C                     Z-ADD0         W04CNT  50
     C                     Z-ADD0         U04CNT  50
     C                     MOVE 'N'       DADJN
      *
      ** READ AND PROCESS ALL BOOK POSITION ACTION RECORDS UNTIL EOF
      *
     C           *IN89     DOUEQ'1'
     C           *INU7     OREQ '1'
      *
     C                     SETOF                     010203
      *
     C                     READ BPACCL1                  89
     C           *IN89     IFEQ '0'
      *
      ***  Store Key of BPACC record just read (for reCHAIN later).
      *
     C                     MOVE BCSS      BPBCSS
     C                     MOVE BCBA      BPBCBA
     C                     MOVE BCMK      BPBCMK
     C                     MOVE BCBO      BPBCBO
     C                     MOVE BCTV      BPBCTV
     C                     MOVE BCAD      BPBCAD
     C                     MOVE BCAS      BPBCAS
     C                     MOVE BCTS      BPBCTS
     C                     MOVE BCTR      BPBCTR
     C                     MOVE BCRV      BPBCRV
      *
      ***  Release the BPACC record, to avoid possible locking.
      *
      *
      ** STORE KEYS AND INCREMENT COUNTS
      *
     C                     MOVE BCSS      PBCSS
     C                     MOVE BCBA      PBCBA
     C                     MOVE BCBO      PBCBO
     C                     MOVE BCMK      PBCMK
     C                     MOVE BCTV      PBCTV
      *
      ** BPACCD may include 'DUMMY' actions (BCAS=00) generated by SE2230
      ** these are omitted from the file control check
      *
     C   01                DO
     C           BCAS      IFEQ '00'
     C                     ADD  1         IXREC
     C                     ELSE
     C                     ADD  1         ICREC
     C                     END
     C                     END
     C   02                ADD  1         IBREC
     C   03                ADD  1         IHREC
      *
      ** Else Record not found.
      *
     C                     ELSE
      *
      ** IF EOF AND NO RECORDS READ - EXIT
      *
     C           ICREC     IFEQ 0
     C           IXREC     ANDEQ0
     C           IBREC     ANDEQ0
     C           IHREC     ANDEQ0
     C                     GOTO ENDLP
     C                     ELSE
     C                     MOVE *BLANK    BCKEY
     C                     Z-ADD0         BCAD
     C                     END
      *
     C                     END
      *
      ** CLEAR INDICATORS AND WORK FIELDS
      *
     C                     MOVEA'0000'    *IN,22
     C                     MOVEA'0000000' *IN,28
     C                     MOVEA'000000'  *IN,36
     C                     MOVEA'0000'    *IN,85
      *
     C                     Z-ADD0         WBCP1
     C                     Z-ADD0         WBCP2
     C                     Z-ADD0         WBCPL
     C                     Z-ADD0         WBCDV
      *
      ** IF ACTION DATE HAS CHANGED AND TRADE ACTIONS WERE PROCESSED FOR
      ** PREVIOUS ACTION DATE - UPDATE PREVIOUS BOOK POSITION IF PRESENT
      ** AND WRITE NEW BOOK POSITION
      *
     C           BCAD      IFNE KBCAD
     C           KBCAD     ANDNE*ZEROS
     C           *IN21     ANDEQ'1'
     C           BCKEYP    ORNE BCKEY
     C           BCKEYP    ANDNE*BLANKS
     C           *IN21     ANDEQ'1'
     C                     MOVE '0'       *IN21
      *
      ** UPDATE/WRITE TO BOOK POSITION DETAIL FILE
      *
     C                     EXSR W02
      *
      ** AS A BOOK POSITION RECORD HAS BEEN WRITTEN,RESET THE DISCOUNT/
      ** PREMIUM POSTED SINCE LAST POSITION DATE (BKPHDD) TO ZERO
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADD0         DPAN
     C                     Z-ADD0         WEDN
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     DPAP
     C                     Z-ADD*ZERO     WEDP
     C                     Z-ADD*ZERO     BHPP
      *
      ** WRITE COPY OF BOOK POSITION HEADER TO HISTORIC FILE
      *
     C                     EXSR W05
     C                     END
      *
      ** If Analytical Accounting module is installed, access related
      ** book profit centre.
      *
     C           BGN0ST    IFEQ 'Y'
      *
     C           *LIKE     DEFN RECI      WRECI
     C           *LIKE     DEFN BOKC      WBOKC
     C           *LIKE     DEFN BRCA      WBRCA
     C           *LIKE     DEFN SESN      WSESN
     C           *LIKE     DEFN MKTI      WMKTI
     C           *LIKE     DEFN LCD       WLCD
     C           *LIKE     DEFN CHTP      WCHTP
     C           *LIKE     DEFN TNLU      WTNLU
      *
     C                     MOVE RECI      WRECI
     C                     MOVE BOKC      WBOKC
     C                     MOVE BRCA      WBRCA
     C                     MOVE SESN      WSESN
     C                     MOVE MKTI      WMKTI
     C                     MOVE LCD       WLCD
     C                     MOVE CHTP      WCHTP
     C                     MOVE TNLU      WTNLU
      *
     C                     MOVE BCBO      KBOKC
     C                     MOVE BCBA      KBRCA
     C                     MOVE BCSS      KSESN
     C                     MOVE BCMK      KMKTI
      *
      ** If CAC005 is installed, retrieve user book
      ** BCBO in the Book Position file is being held as a pseudo book
      *
     C           CAC005    IFEQ 'Y'
     C                     CALL 'AOBKPCR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*USER  ' POPTN   7
     C                     PARM           PBKCD   2
     C                     PARM           PPRFC   4
     C                     PARM BCBO      PPSBK   2
      *
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDBKPCPD'DBFILE           ************
     C                     Z-ADD27        DBASE            * DBERR  27*
     C                     MOVELBCBO      DBKEY            ************
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
     C                     ELSE
     C           BKPRCU    IFEQ 'Y'
     C                     EXSR PPCCHN
     C                     ENDIF
     C                     ENDIF
     C           *INU7     IFEQ '1'
     C                     GOTO EAUDIT
     C                     ENDIF
      *
     C                     MOVE WRECI     RECI
     C                     MOVE WBOKC     BOKC
     C                     MOVE WBRCA     BRCA
     C                     MOVE WSESN     SESN
     C                     MOVE WMKTI     MKTI
     C                     MOVE WLCD      LCD
     C                     MOVE WCHTP     CHTP
     C                     MOVE WTNLU     TNLU
      *
     C                     ENDIF
      *
      ** IF POSITION HAS NOT CHANGED - STORE NEW ACTION DATE
      *
     C           BCKEYP    IFEQ BCKEY
     C                     Z-ADDBCAD      KBCAD
     C                     ELSE
      *
      ** IF POSITION HAS CHANGED
      ** and an Action has been processed
      *
     C           BCKEYP    IFNE *BLANK
     C           *IN20     ANDEQ'1'
      *
      ** Amortise Prem/Discount to Last Date Accrued to
      **     Set by SE2210 and SE2230
      *
     C                     Z-ADDBCAD      BCADXX  50
     C           LATDXX    IFGT LATD
     C                     Z-ADDLATDXX    BCAD
     C                     ELSE
     C                     Z-ADDLATD      BCAD
     C                     END
      *
     C                     MOVEL'N'       AMTDP   1
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to previous
      ** Trade Basis Indicator.
      *
     C                     MOVE ' '       IPL7K   1
     C           CSE105    IFEQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQKBCTV
     C           CSE105    OREQ 'N'
     C           CSE105    IFEQ 'Y'
     C                     MOVE 'K'       IPL7K
     C                     END
      *
      ** Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      ** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     ENDIF
     C                     MOVE ' '       IPL7K
      *
     C                     END
     C                     END
      *
      ** ACCRUED TO DATE (ICLD) SET BY SE2210 and SE2230
      *
     C           KBCTV     IFEQ 'V'
     C           ICLD      ANDGEKBCAD
     C           DYBS      ANDNE'4'
     C                     Z-ADDICLD      BCAD
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
     C                     END
      *
     C                     Z-ADDBCADXX    BCAD
      *
      ** -  PRODUCE UNREALISED P/L KEYS IF REQUIRED
      *
     C           AUPR      IFEQ 'Y'
     C           UPPS      ANDNE' '
     C           APDA      ANDGEDNWD
      *
      ** Don't generate Unrealized P/L Keys in Reversal mode.
      *
     C           *INU1     ANDEQ'0'
      *
     C           UPBS      IFEQ 'B'
     C           UPBS      OREQ KBCTV
      *
      ** Chain to SECTYD FILE EARLIER WAS REMOVED BECAUSE IT WAS
      ** DEEMED POINTLESS, BUT THEN WHEN DOING THE UNRLPL SUBR.
      ** SYSTEM NEEDS MARKET PRICE FROM THE SECTYD FILE.
      *
     C                     EXSR SECCHN
     C           *INU7     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
      *
      ** If CSE036 don't do unrealised P/L
      *
     C           CSE036    IFEQ 'Y'
     C                     MOVE 'N'       #EXSR   1
     C                     ENDIF
      *
      *** Only do SR/UNRLPL if BYSL not eq 'Y' and switchable feature
      *** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR UNRLPL
      *
     C                     ENDIF
      *
     C                     END
      *
     C                     END
      *
      ** - UPDATE OR ADD BOOK POSITION HEADER AND COUNT RECORD FOR
      **     BOOK POSITION ADDED OR CHANGED
      *
     C           *IN10     IFEQ '1'
     C                     EXSR U02
     C                     ELSE
     C                     EXSR W03
     C                     END
      *
      ** UPDATE/ADD BOOK POSITION MONTHLY STATS FILE RECORD
      ** BKMTH must be updated even in reversal mode because RPTM, DPTM,
      ** DPTR and DPSP may change. (Note: SEC0605B amended accordingly)
      ** *** THIS CHANGE IS REQUIRED FOR LOTS OF FIXES!
      **  Also affects the Interest fields.
      *
     C           *IN12     IFEQ '1'
     C                     EXSR U04
     C                     ELSE
     C                     EXSR W04
     C                     END
      *
      ** IF END OF FILE WAS ENCOUNTERED - END PROGRAM
      *
     C           *IN89     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
      *
     C                     END
      *
      ** - ACCESS BOOK POSITION HEADER AND LATEST BOOK POSITION FOR NEW
      **   ACTION READ (STORE NEW ACTION KEY)
      *
     C                     Z-ADD0         WRPTP  130
      *
      ** No longer need to accumulate realized P/L from BPACHD records.
      *
     C                     MOVE BCKEY     BCKEYP
     C                     Z-ADDBCAD      KBCAD
      *
     C                     EXSR BKHCHN
     C           *IN10     IFEQ '1'
      *
     C                     EXSR BKPCHN
     C                     END
      *
      ** If reversal run, chain to BKMTH even if BKPHR record not found.
      ** (SE2230 may not have written a record to BKPHR.)
      *
     C           *IN10     IFEQ '1'
     C           *INU1     OREQ '1'
     C                     EXSR BKMCHN
     C                     END
      *
      ** ACCESS BOOK DESC. FILE
      *
     C                     EXSR BOKCHN
     C           *INU7     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
      *
      ** ACCESS SECURITIES FILE AND INVESTMENT TYPE
      *
     C                     EXSR SECCHN
     C           *INU7     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
      *
     C                     EXSR INVCHN
     C           *INU7     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
      *
      ** Access related Book PositionProfit Centre
      ** ... if Profit Centres are used and Trade and Book Positions
      ** are to be reconciled.
      *
     C           PFUS      IFEQ 'Y'
      *
     C                     MOVE BCBO      KBOKC
     C                     MOVE BCBA      KBRCA
     C                     MOVE BCSS      KSESN
     C                     MOVE BCMK      KMKTI
      *
      ** If CAC005 is installed, call AOBKPCR0
      *
     C           CAC005    IFEQ 'Y'
     C                     CALL 'AOBKPCR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*USER  ' POPTN   7
     C                     PARM           PBKCD   2
     C                     PARM           PPRFC   4
     C                     PARM BCBO      PPSBK   2
      *
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDBKPCPD'DBFILE           ************
     C                     Z-ADD28        DBASE            * DBERR  28*
     C                     MOVELBCBO      DBKEY            ************
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
     C                     ELSE
     C                     EXSR PPCCHN
     C                     ENDIF
     C           *INU7     IFEQ '1'
     C                     GOTO EAUDIT
     C                     END
      *
     C                     END
      *
      ** rename SSITP as SITP before calling ZNCD/ZLCD
      *
     C                     MOVE SSITP     SITP    3
      *
      ** Obtain Next Coupon Date.
      *
     C                     EXSR ZNCD
      *
      ** OBTAIN NOMINAL CURRENCY DECIMAL PLACES FROM TABTG10
      *
     C                     EXSR TABCHN
     C           *INU7     IFEQ '1'
     C                     GOTO ENDLP
     C                     END
     C                     Z-ADDCDP       NCDP
      *
      ** Set up currency decimal places parameter for use in:-
      ** SR.ZACCR - Calculate interest accrued between two dates
      ** SR.ZACCZ - Calculate interest accrued between two specified date
      ** SR.ZAVPR - Calculate average price
      ** SR.ZCNSD - Calculate consideration
      *
     C                     Z-ADDCDP       ZCDP
      *
      ** SETUP FIELDS FOR ACCUMULATION OF BOOK POSITION HEADER AND DETAIL
      **     FIELDS
      *
     C                     EXSR BKSET
      *
     C                     MOVE '0'       *IN20
     C                     END
      *
      ** PROCESS REVERSED ACTIONS
      *
     C           BCRV      IFEQ 'Y'
     C                     EXSR REVMTH
      *
      ** - Set *in20 on to process upto ICLD/LATD
      *
     C                     MOVE '1'       *IN20
     C                     GOTO ENDLP
     C                     END
      *
      ** EXECUTE SUBROUTINES DEPENDING ON TYPE OF ACTION READ
      *
     C           BCAS      CASEQ'05'      P05
     C           BCAS      CASEQ'40'      P10
     C           BCAS      CASEQ'20'      P20
     C           BCAS      CASEQ'30'      P30
     C           BCAS      CASEQ'35'      P35
     C           BCAS      CASEQ'50'      P50
     C           BCAS      CASEQ'60'      P60
     C           BCAS      CASEQ'70'      P70
     C                     END
      *
     C           CSE065    IFEQ 'Y'
     C           BCAS      IFEQ '80'
     C                     EXSR P80
     C                     ENDIF
     C                     ENDIF
      *
      ** IF ACTION HAS BEEN PROCESSED IN CASE - UPDATE ACTION
      **    ELSE IGNORE
      *
     C           *IN20     IFEQ '1'
     C                     EXSR U01
     C           ICLD      IFLT BCAD
     C           BCAS      ANDNE'60'
     C                     Z-ADDBCAD      ICLD
     C                     END
     C                     Z-ADDBCAD      LPCD
     C                     END
      *
     C           ENDLP     TAG                             ***  ENDLP  **
      *
      **  END of Do Until Read/Process all BPACC records.
      *
     C                     END
      *
      ** UPDATE BOOK POSTION AUDIT RECORD AND OUTPUT CONTROL REPORT
      *
     C           EAUDIT    TAG
      *
     C                     EXSR AUDIT
      *
      *================================================================
      *  P R O G R A M   E N D                                        *
      *                                                               *
     C                     SETON                     LR
      *                                                               *
      *================================================================
      /EJECT
      *****************************************************************
      *                                                               *
      * FIRST - SUBROUTINE TO ACCESS ICD INFORMATION AND TO CALCULATE *
      *         ACCRUAL CONTROL DATE                                  *
      *                                                               *
      *****************************************************************
      *
     C           FIRST     BEGSR                           *** FIRST  ***
      *
      ** ACCESS ICD
      *
     C                     EXSR ZSYSTM
     C           *IN99     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE 'TABLE'   DBFILE           **************
     C                     MOVELZTABKY    DBKEY            * DB ERROR 01
     C                     Z-ADD1         DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
      *
      ** ACCESS ICD2
      *
     C                     EXSR ZICD2
     C           *INU7     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE '1'       *IN99
     C                     MOVE 'TABLE'   DBFILE           **************
     C                     MOVELTKEY      DBKEY            * DB ERROR 02
     C                     Z-ADD2         DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
      *
      ** ACCESS ZICDSE
      *
     C                     EXSR ZICDSE
     C           *INU8     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     SETON                     99U7
     C                     MOVEL'TABLE'   DBFILE           **************
     C                     MOVELTKEY      DBKEY            * DB ERROR 03
     C                     Z-ADD03        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
      *
     C                     ELSE
      *
     C                     MOVE *BLANKS   TKEY
     C                     MOVEL'01'      TKEY
     C                     MOVE '40'      TKEY
     C           TKEY      CHAINTABTB40F             80
      *
     C           *IN80     IFEQ '1'
     C           RECI      ORNE 'D'
     C           *LOCK     IN   LDA
     C                     Z-ADD10        DBASE            **************
     C                     MOVEL'TABTB40' DBFILE           * DB ERROR 10
     C                     MOVELTKEY      DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
      *
     C                     ELSE
      *
      **  Get module details using access object
      *
     C                     CALL 'AOMMODR0'
     C                     PARM *BLANKS   WLRTCD  7
     C                     PARM '*FIRST'  WLOPTN  7
     C           SDMMOD    PARM SDMMOD    DSFDY
      *
     C           WLRTCD    IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD25        DBASE            **************
     C                     MOVE 'SDMMODPD'DBFILE           * DB ERROR 25
     C                     MOVELWLOPTN    DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
      *
     C                     ELSE
      *
      **  Access Securities Trading details
      *
     C                     CALL 'AOSTRDR0'
     C                     PARM *BLANKS   WLRTCD
     C                     PARM '*FIRST ' WLOPTN
     C           SDSTRD    PARM SDSTRD    DSSDY
      *
     C           WLRTCD    IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD26        DBASE            ************
     C                     MOVEL'SDSTRDPD'DBFILE           * DBERR 26 *
     C                     MOVELWLOPTN    DBKEY            ************
     C                     OUT  LDA
     C                     SETON                     U7U8
     C                     DUMP
     C                     ENDIF
      *
      ** If Portfolio Management is present, get ICD
      *
     C           BGPFMG    IFEQ 'Y'
     C                     CALL 'AOPORTR0'
     C                     PARM *BLANKS   WLRTCD
     C                     PARM '*FIRST'  WLOPTN
     C           SDPORT    PARM SDPORT    DSFDY
     C           WLRTCD    IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD90        DBASE            **************
     C                     MOVE 'SDPORTPD'DBFILE           * DB ERROR 90
     C                     MOVELWLOPTN    DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     END
     C                     END
      *
      ** Set up date next working day and accrual profit date parameters
      ** for use in SR.ZEVCD - Determine event control date
      *
     C                     Z-ADDDNWD      ZZDNWD
     C                     Z-ADDAPDA      ZZAPDT
      *
      ** READ IN DATA AREA SESTAT
      *
     C           *NAMVAR   DEFN           SESTAT
     C                     IN   SESTAT
      *
      ** Access SAR details file to see if CSE035 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*VERIFY' @OPTN
     C                     PARM 'CSE035'  @SARD
      *
     C           @RTCD     IFEQ *BLANK
     C                     MOVE 'Y'       CSE035  1
     C                     ELSE
     C                     MOVE 'N'       CSE035
     C                     ENDIF
      *
      ** Access SAR details file to see if CEU018 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*VERIFY' @OPTN
     C                     PARM 'CEU018'  @SARD
      *
     C           @RTCD     IFEQ *BLANK
     C                     MOVE 'Y'       CEU018  1
     C                     ELSE
     C                     MOVE 'N'       CEU018
     C                     ENDIF
      *
      ** Access SAR details file to see if CSE036 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM '*VERIFY' @OPTN
     C                     PARM 'CSE036'  @SARD
      *
     C           @RTCD     IFEQ *BLANK
     C                     MOVE 'Y'       CSE036  1
     C                     ELSE
     C                     MOVE 'N'       CSE036
     C                     ENDIF
      *
      ***  Define End of Previous Month field from SESTAT as a numeric.
      *
     C                     MOVE EOPM      EOPMTH  50
      *
      ***  Obtain Event Control Date.
      *
     C                     EXSR ZEVCD
     C*
     C                     END
     C*
     C                     END
     C                     END
     C                     END
     C                     END
      *
      ** Check if CAC005 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*VERIFY' POPTN   7
     C                     PARM 'CAC005'  PSARD   6
      *
     C           PRTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CAC005  1
     C                     ELSE
     C                     MOVE 'N'       CAC005
     C                     ENDIF
      *
      ** Check if CSE006 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*VERIFY' POPTN
     C                     PARM 'CSE006'  PSARD   6
     C           SCSARD    PARM SCSARD    DSFDY
      *
      * Database Error
      *
     C           PRTCD     IFNE *BLANKS
     C           PRTCD     ANDNE'*NRF'
     C           *LOCK     IN   LDA
     C                     MOVEL'SCSARDPD'DBFILE           **************
     C                     MOVEL'*FIRST'  DBKEY            * DB ERROR 23
     C                     Z-ADD23        DBASE            **************
     C                     OUT  LDA
     C                     SETON                     U7U8
     C                     DUMP
     C                     ENDIF
      *
     C           PRTCD     IFEQ *BLANK
     C                     MOVEL'Y'       CSE006  1
     C                     ELSE
     C                     MOVEL'N'       CSE006
     C                     ENDIF
      *
      **  Determine if feature CSE032 is installed.
      *
     C                     MOVE 'N'       CSE032  1
     C                     CALL 'AOSARDR0'
     C                     PARM '       ' @RTCD   7
     C                     PARM '*VERIFY' @OPTN   7
     C                     PARM 'CSE032'  @SARD   6
      *
     C           @RTCD     IFEQ *BLANK
     C                     MOVE 'Y'       CSE032
     C                     END
     C*
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*VERIFY' POPTN   7
     C                     PARM 'CAS006'  PSARD   6
     C           SCSARD    PARM SCSARD    DSFDY
      *
     C           PRTCD     IFNE *BLANKS
     C           PRTCD     ANDNE'*NRF    '
     C           *LOCK     IN   LDA
     C                     MOVE 'SCSARDPD'DBFILE
     C                     Z-ADD46        DBASE
     C                     MOVEL'CAS006'  DBKEY
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     MOVE '1'       *INLR
     C                     ENDIF
      *
     C           PRTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CAS006  1
     C                     ELSE
     C                     MOVE 'N'       CAS006
     C                     ENDIF
      *
      ** If SE Hedge Accounting is ON (CAS006), access Hedge ICD
      *
     C           CAS006    IFEQ 'Y'
     C                     CALL 'AOHEDGR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*FIRST ' POPTN
     C           SDHEDG    PARM SDHEDG    DSSDY
      *
     C           PRTCD     IFNE *BLANK
     C           *LOCK     IN   LDA
     C                     MOVEL'SDHEDGPD'DBFILE
     C                     Z-ADD13        DBASE
     C                     MOVEL'*FIRST'  DBKEY
     C                     OUT  LDA
     C                     SETON                     U7U8LR
     C                     EXSR *PSSR
      ** Call Database Error Control program.
      *
     C                     CALL 'DBERRCTL'
      *
     C                     ENDIF
     C                     ENDIF
      *
      ** Access General Ledger details
      *
     C                     CALL 'AOGELRR1'
     C                     PARM '*DBERR ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDGELR    PARM SDGELR    DSSDY
      *
      ** Check if CSE065 feature is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*VERIFY' POPTN
     C                     PARM 'CSE065'  PSARD
     C           SCSARD    PARM SCSARD    DSFDY
      *
     C           PRTCD     IFNE *BLANKS
     C           PRTCD     ANDNE'*NRF    '
     C           *LOCK     IN   LDA
     C                     MOVE 'SCSARDPD'DBFILE
     C                     Z-ADD47        DBASE
     C                     MOVEL'CSE065'  DBKEY
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     MOVE '1'       *INLR
     C                     ENDIF
      *
     C           PRTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CSE065  1
     C                     ELSE
     C                     MOVE 'N'       CSE065
     C                     ENDIF
     C*
      *
      ** Access SAR details file to see if feature CSE105 is installed.
      *
     C                     CALL 'AOSARDR0'
     C                     PARM '       ' @RTCD
     C                     PARM '*VERIFY' @OPTN
     C                     PARM 'CSE105'  @SARD
     C           SCSARD    PARM SCSARD    DSFDY
      *
     C           @RTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CSE105  1
     C                     ELSE
     C                     MOVE 'N'       CSE105
     C                     ENDIF
      *
      ** Check system values if CSE105 is switched on
      *
     C           CSE105    IFEQ 'Y'
      *
     C                     CALL 'AOSVALR0'
     C                     PARM *BLANKS   @RTCD
     C                     PARM SVALKK    SVALK1 20
     C                     PARM           SVAL1 200
     C                     PARM *BLANK    SVALK2 20
     C                     PARM           SVAL2 200
     C                     PARM *BLANK    SVALK3 20
     C                     PARM           SVAL3 200
     C                     PARM *BLANK    SVALK4 20
     C                     PARM           SVAL4 200
     C                     PARM *BLANK    SVALK5 20
     C                     PARM           SVAL5 200
     C                     PARM *BLANK    SVALK6 20
     C                     PARM           SVAL6 200
     C                     PARM *BLANK    SVALK7 20
     C                     PARM           SVAL7 200
     C                     PARM *BLANK    SVALK8 20
     C                     PARM           SVAL8 200
     C                     PARM *BLANK    SVALK9 20
     C                     PARM           SVAL9 200
     C                     PARM *BLANK    SVALK0 20
     C                     PARM           SVAL10200
      *
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVE 'SDSVALPD'DBFILE
     C                     MOVELSVALK1    DBKEY
     C                     Z-ADD31        DBASE
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     SETON                       U7U8
     C                     ELSE
     C                     MOVELSVAL1     SESVAL  1
     C                     ENDIF
      *
     C           SESVAL    IFEQ *BLANKS
     C                     MOVE 'V'       SESVAL
     C                     ENDIF
      *
     C                     ENDIF
     C*
      *
      ** Access SAR details file to see if CSE075 is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*VERIFY' POPTN
     C                     PARM 'CSE075'  PSARD
     C           SCSARD    PARM SCSARD    DSFDY
      *
     C           PRTCD     IFNE *BLANKS
     C           PRTCD     ANDNE'*NRF    '
     C           *LOCK     IN   LDA
     C                     MOVE 'SCSARDPD'DBFILE
     C                     Z-ADD47        DBASE
     C                     MOVEL'CSE075'  DBKEY
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *INLR
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
     C           PRTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CSE075  1
     C                     ELSE
     C                     MOVE 'N'       CSE075
     C                     ENDIF
      *
      ** Access Switchable Features file to determine if CSE111 is on
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*VERIFY' POPTN
     C                     PARM 'CSE111'  PSARD
     C           SCSARD    PARM SCSARD    DSFDY
      *
      ** An NRF (No Record Found) return code is valid.
      ** Issue database error only for error return codes.
      *
     C                     MOVE 'N'       CSE111  1
     C           PRTCD     IFEQ *BLANKS
     C                     MOVE 'Y'       CSE111
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  BKSET  - SUBROUTINE TO SET BOOK POSITION HEADER FIELDS AND   *
      *           BOOK POSTION FIELDS                                 *
      *                                                               *
      *****************************************************************
      *
     C           BKSET     BEGSR                           *** BKSET  ***
     C*
     C* IF NO BOOK POSITION HEADER READ - SET FIELDS TO ZERO OR TO
     C*   ACTION VALUES
     C*
     C           *IN10     IFEQ '0'
     C                     MOVE BCSS      BHSC
     C                     MOVE BCBA      BHBA
     C                     MOVE BCBO      BHBK
     C                     MOVE BCMK      BHMK
     C                     MOVE BCTV      BHTV
      *
     C                     Z-ADDBCAD      FPSD
     C                     Z-ADDBCAD      LPSD
     C                     Z-ADDBCAD      LPCD
      *
     C                     Z-ADD0         LATD
     C                     Z-ADD0         DNAT
     C                     Z-ADD0         LATDXX
     C                     Z-ADD0         ARPC
     C                     Z-ADD0         IACR
     C                     Z-ADD0         IACP
     C                     Z-ADD0         INDO
      *
      ***  DO NOT zero BKMTH fields in BKPHD processing.
      *
     C                     Z-ADD0         UPPT
     C                     Z-ADD0         DPAP
     C                     Z-ADD0         DPFP
     C                     Z-ADD0         BUDU
     C                     Z-ADD0         LPRC
     C                     Z-ADD0         BHDP
     C                     Z-ADD0         BHCP
     C                     Z-ADD0         BHPP
     C                     Z-ADD2220      TNLU
     C                     Z-ADD0         BHTR
     C                     Z-ADD0         BHRN
     C                     Z-ADD0         BUDN
     C                     Z-ADD0         DPAN
     C                     Z-ADD0         INDN
     C                     Z-ADD0         LFXP
      *
     C           SPBS      IFEQ 'U'
     C                     Z-ADD0         PLAVP
     C                     Z-ADD0         LAVP
     C                     ELSE
     C                     Z-ADD100       PLAVP
     C                     Z-ADD100       LAVP
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           SPBS      IFEQ 'U'
     C                     Z-ADD0         LAVN
     C                     ELSE
     C                     Z-ADD100       LAVN
     C                     ENDIF
     C                     ENDIF
      *
     C           CSE065    IFEQ 'Y'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           SPBS      IFEQ 'U'
     C                     Z-ADD0         NAVP
     C                     ELSE
     C                     Z-ADD100       NAVP
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     ELSE
      *
      ** Store last amortized to date
      *
     C                     Z-ADDLATD      LATDXX  50
      *
      ** IF NO DISCOUNT/PREMIUM AMORTIZED, LATD SHOULD BE ZERO.
      ** IF AMORTIZATION IS TO BE DONE, IT WILL START FROM LPSD
      *
     C           DPAP      IFEQ 0
     C                     Z-ADD0         LATD
     C                     Z-ADD0         DNAT
     C                     END
      *
      ** STORE FIRST AVERAGE PRICE FOR UPDATE
      *
     C                     Z-ADDLAVP      PLAVP
     C                     END
      *
      ** IF NO BOOK POSITION READ - SET FIELDS FROM ACTION VALUES OR TO
      **     ZERO
      *
     C           *IN11     IFEQ '0'
      *
     C                     Z-ADD0         BKCOST
      *
     C                     MOVE BCSS      BPSC
     C                     MOVE BCBA      BPBA
     C                     MOVE BCBO      BPBK
     C                     MOVE BCMK      BPMK
     C                     MOVE BCTV      BPTV
     C*
     C                     Z-ADDBCAD      BPPD
     C*
     C                     Z-ADD0         NPSN
     C                     Z-ADD0         ECNP
     C                     Z-ADD0         APPB
     C                     Z-ADD0         RPTP
     C                     Z-ADD0         PILP
     C                     Z-ADD0         APNC
     C                     Z-ADD0         FXAP
     C                     Z-ADD0         PAPNC
     C                     Z-ADD0         ANMP
     C                     Z-ADD0         PNPSN
     C                     Z-ADD0         ONPSN  150
     C                     Z-ADD0         APNN
     C                     Z-ADD0         APPN
     C                     Z-ADD0         PILN
      *
      ***  Note: AAPR field now holds the Current Factor.
     C                     Z-ADD1         AAPR
      *
      ** If Enhanced Treasury is switched on:
      *
     C           CSE075    IFEQ 'Y'
      *
      ** Setting AAPR to 1 caused the first principal repayment on a
      ** holding to be grossly overstated.  Set AAPR to current factor.
      *
     C                     Z-ADDBCCF      AAPR
     C                     ENDIF
      *
     C                     Z-ADD2220      TNLU
      *
     C                     ELSE
     C                     Z-ADDAPNC      PAPNC
     C                     Z-ADDNPSN      PNPSN
     C                     Z-ADDNPSN      ONPSN
     C                     MOVE BKPREC    RECST1
     C                     END
      *
      ** RECALCULATE APNC ( = NPSN X LAVP) IF NON-AMORTIZING POSITION
      ** (THERE MAY HAVE BEEN MARK TO MARKET DONE SINCE LAST TRADE)
      *
     C           BUDU      IFEQ *ZERO
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNC
     C                     ELSE
     C                     ADD  BHPP      APNC
     C                     END
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDNAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     BKCOST
     C                     ELSE
     C                     ADD  BHPP      BKCOST
     C                     ENDIF
     C                     ENDIF
      *
     C           CAS006    IFEQ 'Y'
     C           BUDN      IFEQ *ZERO
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNN
     C                     ELSE
     C                     ADD  BHPP      APNN
     C                     ENDIF
     C                     ADD  DPAN      APNN
     C                     ENDIF
      *
     C                     ADD  DPAP      APNC
      *
      ** RESET BOOK COST IN PORTFOLIO CURRENCY
      *
     C                     Z-ADDLFXP      FXAP
      *
     C                     Z-ADDNPSN      ZNOML
      *
      ** Build and store the NOMINAL Book value.
      *
     C           PPDI      IFEQ 'Y'
      *
      ** Get the partly paid price from the security diary
      ** prior to the date of the action.
      *
     C                     MOVEL'Y'       PRIOR   1
     C                     EXSR GETPPP
      *
      ** Adjust the nominal by the partly paid price
      *
     C                     MOVE BCTA      BCTA3   63
     C           BCTA3     DIV  100       WBCTA  158H
     C           ZNOML     MULT WBCTA     ZNOML     H
     C                     END
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     END
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     BKVAL  150
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDZCONS     BKVALN 150
     C                     ENDIF
      *
     C                     Z-ADDZCONS     PBKVAL 150
      *
     C           PROT      IFEQ '8'
      *
      ** GET THE CURRENT FACTOR FROM THE SECURITY DIARY
      ** PRIOR TO THE DATE OF THE ACTION.
      *
     C                     MOVEL'Y'       PRIOR   1
     C                     EXSR GETCUF
     C                     END
      *
      ** IF NO BOOK POSITION MONTHLY STATS RECORD FOUND, INITIALISE FIELD
      **   FOR ACCUMULATION
      *
     C           *IN12     IFEQ '0'
      *
     C                     Z-ADD0         BPIT
     C                     Z-ADD0         TIPN
     C                     Z-ADD0         UPLE
      *
      ** No reason to clear Unrealized P/L; it's on BKPHD, not BKMTH.
      *
     C                     Z-ADD0         CPDD
     C                     Z-ADD0         BCDM
     C                     Z-ADD0         BCCM
     C                     Z-ADD0         MMPL
     C                     Z-ADD0         RPTM
     C                     Z-ADD0         DPTM
     C                     Z-ADD0         DPTR
     C                     MOVE *BLANKS   DPSP
     C                     Z-ADD0         BKAMTM
     C                     Z-ADD0         EQAMTM
     C                     Z-ADD2220      TNLU
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  REVMTH - SUBROUTINE TO PROCESS REVERSED ACTIONS              *
      *                                                               *
      *****************************************************************
      *
     C           REVMTH    BEGSR                           *** REVMTH ***
      *
      ** FOR TRADE ACTIONS
      *
     C           BCAS      IFEQ '40'
     C           BCAS      OREQ '00'
      *
      ** Produce amortised Disc/Prem keys if Disc/Prem to be amortised
      *
     C           BCTV      IFEQ 'V'
     C           MATY      ANDNE99999
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           MATY      ANDNE99999
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
     C           MATY      ANDNE99999
      *
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      ** Only do SR/AMORT and SR/AVPRAM if BYSL is not 'Y' or if
      ** switchable feature CSE006 is off.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     END
     C                     END
      *
      ** Set on *in21 for trade reversal to output to BKPHHD and BKPOSD
      *
     C                     MOVE '1'       *IN21
     C                     Z-ADDBCAD      LPSD
     C                     Z-ADDBCAD      LPCD
      *
     C           RMIP      IFEQ 'Y'
     C           BCPS      IFEQ 'P'
     C           BPIT      SUB  PCHI      BPIT
     C                     ELSE
     C                     ADD  PCHI      BPIT
     C                     END
     C                     END
     C                     ELSE
      *
      ** FOR COUPON/DIVIDEND ACTIONS
      *
     C           BCAS      IFEQ '30'
     C           BCAS      OREQ '35'
     C           CPDD      SUB  BCDV      CPDD
     C                     END
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P05   - SUBROUTINE TO PROCESS ACTION TYPE 05 (PP CALL ACTION)*
      *                                                               *
      *****************************************************************
      *
     C           P05       BEGSR                           ***  P05   ***
      *
     C                     MOVE '1'       *IN20
      *
      ** IF VALUE DATE POSITION AND FIRST ACTION FOR ACTION DATE
      **     - BRING ACCRUALS UP TO DATE
      *
     C           BCTV      IFEQ 'V'
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
      *
      ** PRODUCE AMORTISED DISC/PREM KEYS IF DISC/PREM TO BE AMORTISED
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      *** Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      *** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     ENDIF
      *
      ** Do not condition SR/ACCRUE processing on CSE105...
      *
     C           BCTV      IFEQ 'V'
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
      *
     C           DYBS      IFNE '4'
      *
      ** FOR LAST COUPON DATE USE LAST COUPON DATE OF THE ACTION
      *
     C                     Z-ADDLCCP      LCPN
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
      *
     C                     END
      *
     C                     END
      *
      ** CALCULATE NEW LATEST AVERAGE PRICE FOR BOOK POSITION HEADER
      *
     C                     Z-ADDLAVP      PLAVP
      *
      ** Unit based securities need to be corrected for CDP
      *
     C                     MOVE BCCP      BCCP3   63
      *
     C           PROT      IFEQ '4'
     C           5         SUB  CDP       DC      10
      *
     C           BCCP3     MULT POWER8,DC BCCP3
      *
     C                     END
      *
     C           LAVP      ADD  BCCP3     LAVP
      *
     C           CSE065    IFEQ 'Y'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           NAVP      ADD  BCCP3     NAVP
     C                     ENDIF
     C                     ENDIF
      *
     C           CAS006    IFEQ 'Y'
     C           LAVN      ADD  BCCP3     LAVN
     C                     ENDIF
      *
      ** RESET LATEST POSITION DATE
      *
     C                     Z-ADDBCAD      LPCD
      *
      ** Calculate the amount being called = nominal position X % called
      *
     C           BCCP3     DIV  100       WBCTA     H
     C           NPSN      MULT WBCTA     ZNOML     H
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     END
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     EVAM
      *
      **  Accumulate Called Amounts for this Position.
      *
     C           EVAM      ADD  BHPP      BHPP
      *
      ** UPDATE AP NUMERATOR
      *
     C                     ADD  EVAM      APNC
     C                     ADD  EVAM      BKVAL
      *
      ** Maintain Original Cost Price, (No Amortisation)
      *
     C                     ADD  EVAM      ANMP
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C                     ADD  EVAM      BKCOST
     C                     ENDIF
     C                     ENDIF
      *
     C           CAS006    IFEQ 'Y'
     C                     ADD  EVAM      APNN
     C                     ADD  EVAM      BKVALN
     C                     ENDIF
      *
     C           PROT      IFEQ '8'
     C           AAPR      MULT EVAM      EVAM      H
     C                     END
      *
      ** - OUTPUT ACCOUNT KEY FOR CALLED AMOUNT
      *
     C                     MOVE 'P'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE '  '      TRST
     C                     MOVE ' '       PORT
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C                     MOVE 'PP'      AMCD
     C                     MOVE '0'       RVRS
     C                     MOVE ISSR      CSTN
     C                     MOVE *ZEROS    TRFR
      *
      ** Only write out part payment key, if T/V keys not suppressed
      *
     C           BCTV      IFNE SKTD
      *
     C           SKTD      IFNE *BLANKS
     C           SKTD      OREQ *BLANKS
     C           BCTV      ANDEQ'T'
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
     C                     END
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P06   - Calculate Book Value Change                          *
      *                                                               *
      *****************************************************************
      *
     C           P06       BEGSR
      *
      ** Book Value Amount
      *
     C                     SELEC
     C           BCAS      WHEQ '60'
     C           LAVP      SUB  NAVP      WBKVMT 308
     C                     MULT NPSN      WBKVMT
     C                     OTHER
     C           CNTP      SUB  NAVP      WBKVMT
     C                     MULT NPSN      WBKVMT
     C                     ENDSL
      *
      ** Book difference
      *
     C           WBKVMT    ADD  BKVAMT    WBOKDF 308
      *
     C                     SELEC
      *
      ** If Book Value Change is positive
      ** and BKVAMT is neqative
      *
     C           WBKVMT    WHGE 0
     C           BKVAMT    ANDLT0
      *
     C           WBOKDF    IFGT 0
     C                     MOVE 'BD'      AMCD
     C                     Z-ADDBKVAMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     MOVE 'BI'      AMCD
     C                     MOVE WBOKDF    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
     C                     ELSE
     C                     MOVE 'BD'      AMCD
     C           WBKVMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     ENDIF
      *
      ** If Book Value Change is negative
      ** and BKVAMT is positive
      *
     C           WBKVMT    WHLT 0
     C           BKVAMT    ANDGE0
      *
     C           WBOKDF    IFLT 0
     C                     MOVE 'BI'      AMCD
     C           BKVAMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     MOVE 'BD'      AMCD
     C           WBOKDF    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
     C                     ELSE
     C                     MOVE 'BI'      AMCD
     C                     Z-ADDWBKVMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     ENDIF
      *
      ** If Book Value Change is negative
      ** and BKVAMT is negative
      *
     C           WBKVMT    WHLT 0
     C           BKVAMT    ANDLT0
      *
     C                     MOVE 'BD'      AMCD
     C           WBKVMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
      ** If Book Value Change is positive
      ** and BKVAMT is positive
      *
     C           WBKVMT    WHGE 0
     C           BKVAMT    ANDGE0
      *
     C                     MOVE 'BI'      AMCD
     C                     Z-ADDWBKVMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     Z-ADDWBOKDF    BKVAMT
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P07   - Calculate Equity Amount                              *
      *                                                               *
      *****************************************************************
      *
     C           P07       BEGSR
      *
      ** Equity Amount
      *
     C           BCAS      IFEQ '60'
     C           BCAS      OREQ '80'
     C           WBKVMT    SUB  WADP      WEQAMT 308
     C                     ELSE
     C           WBKVMT    SUB  WRLPL     WEQAMT
     C                     ENDIF
      *
      ** Equity Difference
      *
     C           WEQAMT    ADD  EQTAMT    WEQDIF 308
      *
      ** If Equity Amount is positive
      ** and EQTAMT is negative
      *
     C                     SELEC
     C           WEQAMT    WHGE 0
     C           EQTAMT    ANDLT0
      *
     C           WEQDIF    IFGT 0
     C                     MOVE 'ED'      AMCD
     C                     Z-ADDEQTAMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     MOVE 'EI'      AMCD
     C                     Z-ADDWEQDIF    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
     C                     ELSE
     C                     MOVE 'ED'      AMCD
     C           WEQAMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     ENDIF
      *
      ** If Equity Amount is negative
      ** and EQTAMT is positive
      *
     C           WEQAMT    WHLT 0
     C           EQTAMT    ANDGE0
      *
     C           WEQDIF    IFLT 0
     C                     MOVE 'EI'      AMCD
     C           EQTAMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     MOVE 'ED'      AMCD
     C           WEQDIF    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     ELSE
     C                     MOVE 'EI'      AMCD
     C                     Z-ADDWEQAMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
     C                     ENDIF
      *
      ** If Equity Amount is negative
      ** and EQTAMT is negative
      *
     C           WEQAMT    WHLT 0
     C           EQTAMT    ANDLT0
      *
     C                     MOVE 'ED'      AMCD
     C           WEQAMT    MULT -1        EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
      ** If Equity Amount is positive
      ** and EQTAMT is positive
      *
     C           WEQAMT    WHGE 0
     C           EQTAMT    ANDGE0
      *
     C                     MOVE 'EI'      AMCD
     C                     Z-ADDWEQAMT    EVAM
     C           EVAM      IFNE 0
     C                     EXSR W06
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     Z-ADDWEQDIF    EQTAMT
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P10    - SUBROUTINE TO PROCESS ACTION TYPE 10 (TRADE ACTIONS)*
      *                                                               *
      *****************************************************************
      *
     C           P10       BEGSR                           **  P10 **
      *
      ** Check if action is for the first or second trade of the
      ** Buy/Sell.
      *
     C           BYSL      IFEQ 'Y'
      *
      *** Get trade details
     C           BCTR      CHAINTRADS                80
      *
     C           *IN80     IFEQ '1'
     C           RECI      ORNE 'D'
     C           *LOCK     IN   LDA
     C                     Z-ADD24        DBASE            **************
     C                     MOVEL'TRADS  ' DBFILE           * DB ERROR 24
     C                     MOVELBCTR      DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
      *
      *** Define and initialise work field (second trade)
      *
     C                     MOVE 'N'       @SECTR  1
      *
      *** Get Buy-Sell details for trade ref
      *
     C           BSKEY1    CHAINBSPOSDL0             80
      *
      *** If not found chain use LKRF and set on second trade indicat
      *
     C           *IN80     IFEQ *ON
     C                     MOVE 'Y'       @SECTR
     C           BSKEY2    CHAINBSPOSDL0             80
      *
     C           *IN80     IFEQ '1'
     C           RECI      ORNE 'D'
     C           *LOCK     IN   LDA
     C                     Z-ADD29        DBASE            **************
     C                     MOVEL'TRADS  ' DBFILE           * DB ERROR 29
     C                     MOVELBCTR      DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     MOVE '0'       @BSL    10
      *
     C                     ENDIF
      *
     C           PROT      IFEQ '8'
      *
      ** Get the Current Factor from the Security Diary
      ** at or before the date of the action.
      *
     C                     MOVEL'N'       PRIOR
     C                     EXSR GETCUF
     C                     END
      *
      ** Get the partly paid price from the security diary
      ** at or before the date of the action.
      *
     C           PPDI      IFEQ 'Y'
     C                     MOVEL'N'       PRIOR
     C                     EXSR GETPPP
     C                     END
      *
      ** SET INDICATORS TO SHOW TRADE ACTIONS PROCESSED
      *
     C                     MOVEA'111'     *IN,19
      *
      ** If Value Date Position, bring Accruals up to date.
      *
     C           BCTV      IFEQ 'V'
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
      *
     C                     MOVEL'N'       AMTDP   1
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      ** Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      ** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ELSE
      *
     C                     EXSR AMTPL
      *
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     ENDIF
      *
      ** Do not condition SR/ACCRUE processing on CSE105...
      *
     C           BCTV      IFEQ 'V'
      *
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
     C           DYBS      IFNE '4'
      *
      ** FOR LAST COUPON DATE USE LAST COUPON DATE OF THE ACTION
      *
     C                     Z-ADDLCCP      LCPN
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
     C                     END
      *
     C                     END
      *
      ** Save action date to update BKPHD
      *
     C                     Z-ADDBCAD      TLPSD
      *
      ** and Interest Adjustment on Position.
      *
     C           LPSD      IFLT SVLCPN
     C           BCAD      ANDGESVLCPN
     C                     Z-ADD*ZERO     ECNP
     C                     Z-ADD*ZERO     IACP
     C                     Z-ADD*ZERO     PILP
     C                     Z-ADD*ZERO     INDO
     C                     Z-ADD0         PILN
     C                     Z-ADD0         INDN
     C                     END
      *
      ** CALCULATE NEW NOMINAL AND EX-COUPON NOMINAL POSITIONS
      *
     C                     Z-ADDNPSN      PNPSN  150
     C                     Z-ADDECNP      PECNP  150
      *
      ** If FIFO accounting and previous nominal 0, save this trade ref
      ** for subsequent processing in SR/CLOSE for later actions
      *
     C           FIFO      IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           PNPSN     ANDEQ*ZEROS
     C                     MOVE BCTR      BHTR
     C                     Z-ADDBCNL      BHRN
     C                     END
      *
      ** - CALCULATE NEW NOMINAL
      *
     C           BCPS      IFEQ 'P'
     C           NPSN      ADD  BCNL      NPSN
     C                     ELSE
     C           NPSN      SUB  BCNL      NPSN
     C                     END
      *
      ** - CALCULATE NEW EX-COUPON NOMINAL
      *
     C           ACRI      IFEQ 'X'
     C           BCPS      IFEQ 'P'
     C           ECNP      ADD  BCNL      ECNP
     C                     ELSE
     C           ECNP      SUB  BCNL      ECNP
     C                     END
     C                     END
      *
      ** HAVING UPDATED NOMINAL AND EX-COUPON NOMINAL -
      ** SET INDICATOR IF TRADE HAS CHANGED FROM SHORT TO LONG OR
      **    LONG TO SHORT
      *
     C           PNPSN     IFGE 0
     C           NPSN      ANDGE0
     C                     MOVE '1'       *IN30
     C                     ELSE
      *
     C           PNPSN     IFLE 0
     C           NPSN      ANDLE0
     C                     MOVE '1'       *IN30
     C                     ELSE
     C                     MOVE '1'       *IN31
     C                     END
      *
     C                     END
      *
      ** CALCULATE CUM-COUPON NOMINAL
      **   - (I.E. NOMINAL - EX-COUPON NOMINAL)
      *
     C           PNPSN     SUB  PECNP     PCUMP  150
     C           NPSN      SUB  ECNP      CUMP   150
      *
      ** CLEAR CASE INDICATORS
      *
     C                     MOVEA'000000'  *IN,41
      *
      ** - SET INDICATORS FOR CUM COUPON NOMINAL CASES
      *
      ** - FOR PURCHASES
      *
     C           BCPS      IFEQ 'P'
      *
     C           PCUMP     IFLT 0
     C           CUMP      ANDGE0
     C                     MOVE '1'       *IN44
     C                     ELSE
     C           PCUMP     IFLT 0
     C           CUMP      ANDLT0
     C                     MOVE '1'       *IN45
     C                     ELSE
     C           PCUMP     IFGE 0
     C           CUMP      ANDGT0
     C                     MOVE '1'       *IN46
     C                     END
     C                     END
     C                     END
      *
     C                     ELSE
      *
      ** - FOR SALES
      *
     C           PCUMP     IFGE 0
     C           CUMP      ANDLT0
     C                     MOVE '1'       *IN44
     C                     ELSE
     C           PCUMP     IFGT 0
     C           CUMP      ANDGE0
     C                     MOVE '1'       *IN45
     C                     ELSE
     C           PCUMP     IFLT 0
     C           CUMP      ANDLT0
     C                     MOVE '1'       *IN46
     C                     END
     C                     END
     C                     END
      *
     C                     END
      *
      ** - SET INDICATORS ACCORDING TO PURCHASE/SALE
      *
     C           BCPS      IFEQ 'S'
      *
     C           PNPSN     IFGE 0
     C                     MOVE '1'       *IN34
     C                     ELSE
     C                     MOVE '1'       *IN36
     C                     END
     C           NPSN      IFGE 0
     C                     MOVE '1'       *IN32
     C                     ELSE
     C                     MOVE '1'       *IN33
     C                     END
      *
     C                     ELSE
     C           BCPS      IFEQ 'P'
      *
     C           PNPSN     IFLT 0
     C                     MOVE '1'       *IN34
     C                     ELSE
     C                     MOVE '1'       *IN36
     C                     END
      *
     C           NPSN      IFLT 0
     C                     MOVE '1'       *IN32
     C                     ELSE
     C                     MOVE '1'       *IN33
     C                     END
      *
     C                     END
     C                     END
      *
      ** - SET INDICATORS FOR NOMINAL CASES
      *
      ** - FOR PURCHASES
      *
     C           BCPS      IFEQ 'P'
      *
     C           PNPSN     IFLT 0
     C           NPSN      ANDGE0
     C                     MOVE '1'       *IN41
     C                     ELSE
     C           PNPSN     IFLT 0
     C           NPSN      ANDLT0
     C                     MOVE '1'       *IN42
     C                     ELSE
     C           PNPSN     IFGE 0
     C           NPSN      ANDGT0
     C                     MOVE '1'       *IN43
     C                     END
     C                     END
     C                     END
      *
     C                     ELSE
      *
      ** - FOR SALES
      *
     C           PNPSN     IFGE 0
     C           NPSN      ANDLT0
     C                     MOVE '1'       *IN41
     C                     ELSE
     C           PNPSN     IFGT 0
     C           NPSN      ANDGE0
     C                     MOVE '1'       *IN42
     C                     ELSE
     C           PNPSN     IFLT 0
     C           NPSN      ANDLT0
     C                     MOVE '1'       *IN43
     C                     END
     C                     END
     C                     END
      *
     C                     END
      *
      ** OBTAIN CLIENT INFORMATION FOR FACE VALUE AND CONSIDERATION KEY
      *
     C                     EXSR CLICHN
     C           *INU7     IFEQ '1'
     C                     GOTO EP10
     C                     END
      *
      ** PRODUCE FACE VALUE AND CONSIDERATION KEYS FOR THIS TRADE
      *
     C           BCTR      CHAINTRADS                80
     C           *IN80     IFEQ '0'
     C           BCPS      IFEQ 'P'
     C                     MOVE DELT      KCUST
     C                     ELSE
     C                     MOVE DELF      KCUST
     C                     ENDIF
     C                     ENDIF
      *
     C           PROT      IFNE '2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C                     EXSR FVAL
     C                     ELSE
     C                     Z-ADD0         WFVAL  130
     C                     END
      *
     C                     EXSR CONS
      *
      ** Calculate reallowance amount from rate
      *
     C                     Z-ADDBCRA      WDRAL1 158
      *
      ** . if Discount
      *
     C           STBS      IFEQ 'D'
     C           BCRA      ANDNE0
     C                     Z-ADDBCAD      ZSDATE
     C                     Z-ADDMATY      ZEDATE
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    #DDAYS  50
     C                     EXSR ZDYYR
      *
     C           ZINTDD    IFNE 0
     C           BCRA      MULT #DDAYS    WPRIC1 158
     C           WPRIC1    DIV  ZINTDD    WDRAL2 158H
      *
     C           WDRAL2    IFGE 0
     C           1         SUB  WDRAL2    WDRAL1 158
     C                     ELSE
     C                     Z-SUBWDRAL2    WDRAL2
     C           1         SUB  WDRAL2    WDRAL1
     C                     Z-SUBWDRAL1    WDRAL1
     C                     END
      *
     C                     ELSE
     C                     Z-ADD0         WDRAL1
     C                     END
      *
     C                     END
      *
     C                     Z-ADD*ZEROS    REALLW 130
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDWDRAL1    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     REALLW
      *
      ** IF FIFO ACCOUNTING AND TRADE IS SALE,PREVIOUS NOM LONG OR TRADE
      **    IS PURCHASE,PREVIOUS NOM SHORT
      **             - DETERMINE HISTORIC TRADES BEING CLOSED
      *
     C           FIFO      IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           *IN43     ANDEQ'0'
     C           PNPSN     ANDNE*ZEROS
     C                     EXSR CLOSE
      *
      ** CHECK FOR DB ERROR
      *
     C           *INU7     IFEQ '1'
     C                     GOTO EP10
     C                     END
      *
     C                     END
      *
      ** CALCULATE NEW AVERAGE PRICE
      *
     C                     EXSR AVPR
      *
      ** PRODUCE REALISED P/L, DISC/PREM AND PURCHASED/ACCRUED INT KEYS
      **   IF TRADE ACCOUNT KEYS NOT SUPPRESSED
      *
     C           RPBS      IFEQ 'B'
     C           RPBS      OREQ BCTV
     C                     MOVE '1'       *IN24
      *
      *** Only do SR/REALPL if not Buy/Sell trade or CSE006 off
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
     C                     EXSR REALPL
     C                     ELSE
     C                     EXSR BSPLS
     C                     ENDIF
      *
      ***  The following two lines were added to E15664 fix because
      ***  if RPBS was not 'B', Realized P/L could still be corrupted.
      *
     C                     ELSE
     C                     Z-ADD0         RPLINC
      *
     C                     END
      *
     C           SKTD      IFEQ 'V'
     C           SKTD      ORNE BCTV
      *
     C           MATY      IFNE 99999
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
      *
      **If CSE091 is present always calculate Premium/Discount on a Trade
      ** Access CAR details file to determine if feature is installed
      *
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*VERIFY' @OPTN   7
     C                     PARM 'CSE091'  @SARD   6
     C           SCSARD    PARM *BLANKS   DSFDY
      *
     C           @RTCD     IFEQ *BLANKS
     C                     MOVEL'Y'       CSE091  1
     C                     ELSE
     C                     MOVEL'N'       CSE091
     C                     ENDIF
      *
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
     C           CSE091    OREQ 'Y'
      *
      *** Only Calculate disc/prem if book is not Buy/Sell
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
      ** CALCULATE DISC/PREM ON TRADE
      *
      ** -  IF FACE VALUE NOT ALREADY CALCULATED - OBTAIN FACE VALUE
      *
     C           WFVAL     IFEQ 0
     C                     Z-ADDBCNL      WFVAL
     C           PPDI      IFEQ 'Y'
     C                     MOVE BCTA      BCTA3   63
     C           BCTA3     DIV  100       WBCTA  158H
     C           WFVAL     MULT WBCTA     WFVAL     H
     C                     END
     C                     END
      *
     C                     ENDIF
      *
      ** Update BKVAL by Purchased/Sold Nominal
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     END
      *
      ** Trade value on sales is -ve
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBWFVAL     ZNOML
     C                     ELSE
     C                     Z-ADDWFVAL     ZNOML
     C                     END
      *
     C                     EXSR ZCNSD
      *
     C                     Z-ADDBKVAL     PBKVAL
     C                     ADD  ZCONS     BKVAL
      *
     C           CAS006    IFEQ 'Y'
     C                     ADD  ZCONS     BKVALN
     C                     ENDIF
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBZCONS     ZCONS
     C                     END
     C           ZCONS     SUB  WCONS     WDCPM
      *
     C           CAS006    IFEQ 'Y'
     C           ZCONS     SUB  WCONSN    WDCPN
     C                     ENDIF
      *
      ** - DEPENDING ON TR/VAL BASIS , PRODUCE ACCOUNT KEYS ON TRADE OR
      **   VALUE DATE
      *
      ** CSE105 is not installed...
      *
     C           CSE105    IFEQ 'N'
      *
     C           BCTV      IFEQ 'T'
     C                     EXSR DSPRT
     C                     ELSE
     C                     EXSR DSPRV
     C                     END
      *
      ** ...CSE105 is installed.
      *
     C                     ELSE
      *
      ** For Trade Date Position, process in the same way as Value
      ** Date Position.
      *
     C           BCTV      IFEQ 'T'
      *
     C           SESVAL    IFEQ 'V'
     C                     EXSR DSPRT
     C                     ELSE
     C                     EXSR DSPRV
     C                     ENDIF
      *
     C                     ELSE
      *
      ** Do the normal Value Date Position processing... if new Trade
      ** Basis indicator is 'T', do Trade Date Position processing...
      *
     C           SESVAL    IFNE 'T'
     C                     EXSR DSPRV
     C                     ELSE
     C                     EXSR DSPRT
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     END
     C                     END
     C                     END
      *
      ** IF INTEREST IS ACCRUED ON THIS POSITION - PRODUCE PURCHASED/ACCR
      ** INTEREST KEYS IF REQUIRED - on a value date basis only.
      *
     C           BCTV      IFEQ 'V'
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
     C           DYBS      IFNE '4'
      *
      ***  Accumulation of Interest Adjustment depends on Purch/Sale.
      *
     C           BCPS      IFEQ 'P'
     C           INDO      ADD  INAJ      INDO
     C                     ELSE
     C           INDO      SUB  INAJ      INDO
     C                     END
      *
      ***  If Nominal Posn goes flat, output discrepancy key and
      ***   reset adjustments to zero.
      *
     C           NPSN      IFEQ 0
     C                     Z-ADDINDO      WINDO  150
     C                     Z-ADD0         INDO
     C                     END
      *
      ***  Accumulation of Ex-Coupon 'Purchased Interest' for SE0901.
      *
     C           ACRI      IFEQ 'X'
     C           BCPS      IFEQ 'P'
     C                     ADD  PCHI      IACP
     C                     ELSE
     C                     SUB  PCHI      IACP
     C                     END
     C                     END
      *
     C           SPIT      IFEQ 'Y'
     C                     EXSR PIAI
     C                     ELSE
     C                     EXSR PI
     C                     END
     C           NPSN      IFEQ 0
     C           WINDO     ANDEQ0
     C           NPSN      OREQ 0
     C           ECNP      ANDEQ0
     C                     Z-ADD0         PILP
     C                     Z-ADD0         PILN
     C                     Z-ADD0         ARPC
     C                     END
     C                     END
     C                     END
     C                     END
      *
      ** ACCUMULATE FIELDS FOR BOOK POSITION HEADER AND MONTHLY STATS FIL
      *
      ** SET LATEST NOMINAL POSITION DATE EQUAL TO ACTION DATE
      *
     C                     Z-ADDBCAD      LPSD
     C                     Z-ADDBCAD      LPCD
      *
      *** If Book is Buy/Sell, update BSPOSDL0
      *
     C           BYSL      IFEQ 'Y'
     C                     UPDATBSPOSD0
     C                     ENDIF
      *
     C           EP10      ENDSR                           ***  EP10  ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P20    - SUBROUTINE TO PROCESS MORTGAGE PAYMENT ACTION       *
      *                                                               *
      *****************************************************************
      *
     C           P20       BEGSR                           ***  P20   ***
     C*
     C                     MOVE '1'       *IN20
      *
      ***  If Value Date Position, bring Accruals up to date.
      *
     C           BCTV      IFEQ 'V'
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      *** Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      *** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     ENDIF
      *
      ** Do not condition SR/ACCRUE processing on CSE105...
      *
     C           BCTV      IFEQ 'V'
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
      *
     C           DYBS      IFNE '4'
      *
      ** FOR LAST COUPON DATE USE LAST COUPON DATE OF THE ACTION
      *
     C                     Z-ADDLCCP      LCPN
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
     C                     END
     C                     END
      *
      ** RESET LATEST POSITION DATE
      *
     C                     Z-ADDBCAD      LPCD
      *
      ** PRODUCE FACE VALUE KEYS
      *
      ** -  CALCULATE FACE VALUE REPAID
      *
     C           NPSN      IFLT 0
     C           NPSN      MULT -1        WKNOM  150
     C                     ELSE
     C                     Z-ADDNPSN      WKNOM
     C                     END
     C                     MOVEL'Y'       PRIOR
     C                     EXSR GETCUF
      *
      * First check if MP amount has been entered. Use this if present
      * because using Current Factor introduces rounding errors.
      *
     C                     Z-ADDBCAD      TDVD
     C                     MOVE 'MP'      ETYP
     C           SEDKEY    SETLLSEDEVDO
     C                     READ SEDEVDO                  81
      *
     C           *IN81     IFEQ '0'
     C           SDSN      ANDEQBCSS
     C           SDET      ANDEQ'MP'
     C                     MOVE SRMI      ##SRMI  1
     C                     ELSE
     C                     MOVE 'N'       ##SRMI
     C                     MOVE SNMCY     NMCY
     C                     ENDIF
      *
     C           ##SRMI    IFEQ 'Y'
      *
      * If Nominal is Zero then zero Face Value Repayment
      *
     C           NPSN      IFNE *ZERO
     C                     Z-ADDSRPT      WFVALR
     C                     ELSE
     C                     Z-ADD*ZERO     WFVALR
     C                     ENDIF
      *
     C                     ELSE
      *
      * If no amount entered then use Current Factor
      *
     C           AAPR      SUB  BCCF      WBCCF
     C           WBCCF     MULT WKNOM     WFVALR 130H
     C                     ENDIF
      *
      ** -  OUTPUT FACE VALUE REPAID USER KEY
      *
     C                     MOVE 'R'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C                     MOVE 'FV'      AMCD
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C                     MOVE ISSR      CSTN
     C                     MOVE *ZEROS    TRFR
      *
     C                     Z-ADDWFVALR    EVAM
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'N'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** PRODUCE CONSIDERATION KEY
      *
      ** -  CALCULATE CONSIDERATION REPAID
      *
     C                     Z-ADD*ZEROS    WCONSR 150
      *
      ** Convert consideration amount
      *
     C                     Z-ADDWFVALR    ZNOML
     C                     Z-ADDLAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONSR
      *
      ** -  OUTPUT CONSIDERATION REPAID USER KEY
      *
     C                     MOVE 'CO'      AMCD
     C                     Z-ADDWCONSR    EVAM
      *
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'N'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** PRODUCE REALISED PROFIT/LOSS KEY
      *
      **  - CALCULATE REALISED PROFIT/LOSS
      *
     C           NPSN      IFLT 0
      *
      ** If you are short and your average price is less than face value
      ** --> you generate a loss.   (WCONSR is < WFAVLR)
      ** If you are short and your average price is more than face value
      ** --> you generate a profit. (WCONSR is > WFAVLR)
      *
     C           WCONSR    SUB  WFVALR    WRLPL
     C                     ELSE
      *
      ** If you are long and your average price is more than face value
      ** --> you generate a loss.   (WCONSR is > WFAVLR)
      ** If you are long and your average price is less than face value
      ** --> you generate a profit. (WCONSR is < WFAVLR)
      *
     C           WFVALR    SUB  WCONSR    WRLPL  150
     C                     END
      *
      ** - OUTPUT REALISED P/L KEY
      *
     C           WRLPL     IFGT 0
     C                     MOVE 'RP'      AMCD
     C                     ELSE
     C                     MOVE 'RL'      AMCD
     C                     END
      *
     C                     Z-ADDWRLPL     EVAM
      *
     C           EVAM      IFLT 0
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** Update AAPR with the new Current Factor.
      *
     C                     MOVEL'N'       PRIOR
     C                     EXSR GETCUF
      *
     C                     ADD  WRLPL     WRPTP
      *
      ** If security is defined as available for sale,
      ** calculate Book Value Change and Equity Amount
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           BCTV      ANDEQ'V'
      *
     C           STAD      IFEQ 'C'
     C           STAD      OREQ 'Y'
     C                     EXSR P06
     C                     EXSR P07
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P30    - SUBROUTINE TO PROCESS COUPON ACTION                 *
      *                                                               *
      *****************************************************************
      *
     C           P30       BEGSR                           ***  P30   ***
      *
     C                     MOVE '1'       *IN20
      *
      *  IF NO MOVEMENTS SINCE THE PREVIOUS COUPON DATE
      ** THEN ZEROIZE EX-COUPON NOMINAL AND PURCHASED INTEREST
      ** and Interest Adjustment on Position.
      *
     C           LPSD      IFLT LCCP
     C                     Z-ADD*ZERO     ECNP
     C                     Z-ADD*ZERO     IACP
     C                     Z-ADD*ZERO     PILP
     C                     Z-ADD0         PILN
     C                     Z-ADD0         INDN
     C                     Z-ADD*ZERO     INDO
     C                     END
      *
      ***  If Value Date Position, bring Accruals up to date.
      *
     C           BCTV      IFEQ 'V'
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      *** Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      *** is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     ENDIF
      *
      ** Do not condition SR/ACCRUE processing on CSE105...
      *
     C           BCTV      IFEQ 'V'
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
      *
     C           DYBS      IFNE '4'
      *
      ** FOR LAST COUPON DATE USE LAST COUPON DATE OF THE ACTION
      *
     C                     Z-ADDLCCP      LCPN
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
     C                     END
     C                     END
      *
      * SET DATA COMMON TO COUPON KEYS
      *
     C                     MOVE 'C'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C           NPSN      IFGE 0
     C           SNAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     MOVE ISSR      CSTN
     C                     MOVE *ZEROS    TRFR
      *
      ** PRODUCE KEY FOR INTEREST DUE
      *
      ** -  CALCULATE INTEREST DUE
      *
     C           ARPC      ADD  PILP      WTINT  150
     C                     SUB  INDO      WTINT
      *
      ** -  OUTPUT KEY
      *
     C                     MOVE 'DI'      AMCD
     C                     Z-ADDWTINT     EVAM
     C           WTINT     IFLT 0
     C           SNAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C                     Z-ADDEVAM      WBCDV
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      **  -  OUTPUT KEY FOR INTEREST DISCREPANCY
      *
     C                     MOVE ' '       NEGI
     C           INDO      IFGT 0
     C                     MOVE 'DN'      AMCD
     C                     Z-ADDINDO      EVAM
     C                     ELSE
     C                     MOVE 'DF'      AMCD
     C                     Z-SUBINDO      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - OUTPUT KEY/S FOR PURCHASED INTEREST RECEIVED IF REQUIRED
      **      AMD ACCRUED INTEREST RECEIVABLE
      *
     C           NPSN      IFGE 0
     C           SNAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           SPIT      IFEQ 'Y'
     C           PROT      ANDNE'6'
      *
     C                     MOVE 'PI'      AMCD
     C                     Z-ADDPILP      EVAM
     C           NPSN      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     MOVE 'AI'      AMCD
     C                     Z-ADDARPC      EVAM
     C           NPSN      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
      * UPDATE BOOK POSITION HEADER,BOOK POSITION AND MONTHLY STATS FILES
      *
     C                     Z-ADD0         ARPC
     C                     Z-ADD0         IACP
     C                     Z-ADD0         INDO
     C           BHCP      ADD  WTINT     BHCP
      *
      ** CPDD should be updated properly in both Reverse and Forward
      ** Modes in order to maintain the correct figure.
      *
     C           *INU1     IFEQ '0'
     C           CPDD      ADD  WTINT     CPDD
     C                     ELSE
     C                     SUB  WTINT     CPDD
     C                     END
      *
     C                     Z-ADD0         ECNP
      *
     C                     Z-ADD0         PILP
     C                     Z-ADD0         PILN
     C                     Z-ADD0         INDN
     C                     Z-ADD0         INDO
      *
      ** Update Last coupon date
      *
     C                     Z-ADDBCAD      LCPN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P35    - SUBROUTINE TO PROCESS DIVIDEND ACTION               *
      *                                                               *
      *****************************************************************
      *
     C           P35       BEGSR                           ***  P35   ***
      *
     C                     MOVE '1'       *IN20
      *
      ** IF NO MOVEMENTS SINCE THE PREVIOUS DIVIDEND DATE
      ** THEN ZEROIZE EX-DIVIDEND NOMINAL
      *
     C           LPSD      IFLT LCCP
     C                     Z-ADD*ZERO     ECNP
     C                     END
      *
      ** CALCULATE DIVIDEND DUE
      *
     C           NPSN      SUB  ECNP      WKNOM
     C                     Z-ADDWKNOM     ZNOML
     C                     Z-ADDBCUN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WKDIV  150
      *
      ** OUTPUT KEY FOR DIVIDEND DUE
      *
     C                     MOVE 'H'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
      *
      ** NEGI SHOULD BE 'N' FOR DIVIDEND ON SHORT POSITION IF SNAC = 'Y'
      *
     C           WKNOM     IFGE 0
     C           SNAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C                     MOVE 'DI'      AMCD
     C                     MOVE ISSR      CSTN
     C                     MOVE *ZEROS    TRFR
      *
     C                     Z-ADDWKDIV     EVAM
      *
      ** Reverse sign on Output File if Split Negative Accrual = 'Y'
      ** and Cum-Coupon Value is Less Than zero.
      *
     C           SNAC      IFEQ 'Y'
     C           WKNOM     ANDLT0
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
     C                     Z-ADDEVAM      WBCDV
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** UPDATE BOOK POSITION AND MONTHLY STATS FILES
      *
     C           BHDP      ADD  WKDIV     BHDP
      *
      ** CPDD should be updated properly in both Reverse and Forward
      ** Modes in order to maintain the correct figure.
      *
     C           *INU1     IFEQ '0'
     C           CPDD      ADD  WKDIV     CPDD
     C                     ELSE
     C                     SUB  WKDIV     CPDD
     C                     END
      *
     C                     Z-ADD0         ECNP
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P50    - SUBROUTINE TO PROCESS RATE CHANGE ACTION            *
      *                                                               *
      *****************************************************************
      *
     C           P50       BEGSR                           ***  P50   ***
      *
     C                     MOVE '1'       *IN20
      *
      ** If Value Date Position, bring Accruals up to date.
      *
     C           BCTV      IFEQ 'V'
     C           MATY      IFNE 99999
      *
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
     C           CSE032    IFEQ 'Y'
     C           STAD      ANDEQ'C'
     C                     EXSR AMORT
     C                     EXSR AVPRAM
     C                     ENDIF
      *
     C                     END
     C                     END
      *
      ** ACCRUE INTEREST ON THIS POSITION IF REQUIRED
      *
     C           PROT      IFEQ '1'
     C           PROT      OREQ '3'
     C           PROT      OREQ '5'
     C           PROT      OREQ '6'
     C           PROT      OREQ '8'
     C           PROT      OREQ '9'
      *
     C           DYBS      IFNE '4'
      *
      ** FOR LAST COUPON DATE USE LAST COUPON DATE OF THE ACTION
      *
     C                     Z-ADDLCCP      LCPN
     C                     MOVE 'Y'       DADJN
     C                     EXSR ACCRUE
     C                     MOVE 'N'       DADJN
     C                     END
     C                     END
     C                     END
      *
      ** RESET LATEST POSITION CHANGE DATE
      *
     C                     Z-ADDBCAD      LPCD
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P60    - SUBROUTINE TO PROCESS AVERAGE PRICE CHANGE ACTION   *
      *                                                               *
      *****************************************************************
      *
     C           P60       BEGSR                           ***  P60   ***
      *
     C                     MOVE '1'       *IN20
      *
      ***  If Value Date Position, bring Accruals up to date.
      *
     C           BCTV      IFEQ 'V'
      *
     C           CSE105    ANDEQ'N'
      *
      ** If CSE105 is installed, perform the routines when the new
      ** Trade/Value Amortization flag is "Both" or EQUAL to original
      ** flag.
      *
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQ'B'
     C           CSE105    OREQ 'Y'
     C           SESVAL    ANDEQBCTV
      *
      ** PRODUCE AMORTISED DISC/PREM KEYS IF DISC/PREM TO BE AMORTISED
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      **  Only do SR/AMORT if BYSL not eq 'Y' and switchable feature
      **  is on.
      *
     C           CSE006    IFEQ 'Y'
     C           BYSL      ANDNE'Y'
     C           CSE006    ORNE 'Y'
      *
     C                     EXSR AMORT
     C                     EXSR AVPRAM
      *
     C                     ENDIF
      *
     C                     END
     C                     END
     C                     END
      *
      ** OBTAIN NEW AVERAGE PRICE ON A PRICE TRADE BASIS
      *
     C                     Z-ADDLAVP      PLAVP
     C                     Z-ADDAPNC      PAPNC
      *
      ** PORTFOLIO CURRENCY RATE
      *
     C           APNC      IFNE *ZERO
     C           FXAP      DIV  APNC      WFACT
     C                     ELSE
     C                     Z-ADD*ZERO     WFACT
     C                     END
      *
      ** CONVERT PRICE ON THE ACTION TO PRICE FORMAT
      *
     C                     Z-ADDBCPR      ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
      *
      ** Australian yield parameters
      *
     C           *IN53     IFEQ '1'
     C           NPSN      ANDNE0
      *
      ** set nominal to positive for working on
      *
     C           NPSN      IFLT 0
     C                     Z-SUBNPSN      WNOML  130
     C                     ELSE
     C                     Z-ADDNPSN      WNOML
     C                     END
      *
      ** Obtain next coupon date
      ** (Add 1 to ECD so that if ZFDATE=NCD,calculate NCD after that)
      *
     C           ZFDATE    ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Obtain last coupon date
      *
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period Cum. or Ex
      *
     C                     Z-ADDZFDATE    WRKD    50
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDZFDATE    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
      *
     C                     END
      *
      **         IF EX-COUPON THEN PI PASSED IS THE REMAINING INTEREST
      **         TILL NCD AND IS NEGATIVE
      *
     C           SCUMEX    IFEQ 'X'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
      *
      ** Calculate interest to Next Coupon Date
      ** ( = LCDWRK - NCDWRK )
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDZFDATE    ZDCEDT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    LCDWRK
      *
     C           LCDWRK    SUB  NCDWRK    WRKPIX
      *
     C                     END
      *
      **Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
     C                     ELSE
     C                     Z-ADD0         WRKPI
     C                     MOVE 'C'       SCUMEX
     C                     END
      *
     C                     Z-ADDNPSN      ZNOML
     C           CSE032    IFEQ 'Y'
     C           WOTBS     ANDNE*BLANK
     C                     MOVE WOTBS     STBS
     C                     ENDIF
      *
     C                     EXSR ZPRCI
      **
      ** If "MARK TO MARKET" action indicated
      **     If "ST revalue mark to market" is LOSS
      **         If the position is SHORT
      **         AND"New av. price" LESS than "Current av. price"
      **         OR
      **         If the position is LONG
      **         AND"New av. price" GREATER than "Current av. price"
      **         Skip to the end of of this sub-routine.
      **
     C           BCTP      IFEQ 'MM'
     C           STRM      IFEQ 'L'
     C           NPSN      IFLT 0
     C           ZPRCOT    ANDLTLAVP
     C           NPSN      ORGT 0
     C           ZPRCOT    ANDGTLAVP
     C                     GOTO ENDP60
     C                     END
     C                     END
     C                     END
      *
      ** RESET LATEST AVERAGE PRICE
      *
      *
      ** Calculate Mark to Market Book Cost and Average Price
      ** for Available for Sale Book
      *
     C                     MOVE 'N'       WUPD    1
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C                     Z-ADDZPRCOT    NAVP
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDNAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     BKCOST
     C                     MOVE 'Y'       WUPD
     C                     EXSR BKPCHN
     C           *IN65     IFEQ '0'
     C                     EXCPTUPDBKP
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WUPD      IFEQ 'N'
     C                     Z-ADDZPRCOT    LAVP
      *
      ** Caclulate new AP numerator
      *
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCPN      ZPRCIN
     C                     Z-ADDNPSN      ZNOML
     C                     EXSR ZPRCI
     C                     Z-ADDZPRCOT    LAVN
      *
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNN
     C                     ENDIF
     C                     ENDIF
      *
      ** - Update portfolio currency equivalents
      *
     C           APNC      MULT WFACT     FXAP
     C                     Z-ADDFXAP      LFXP
      *
      ** IF PRICE CHANGE IS NOT DUE TO MARK TO MARKET REVALUATION
      ** AND AMORTIZATION IS BEING DONE FOR THIS SECURITY THEN
      ** GENERATE DISCOUNT/PREMIUM AMORTIZED KEYS
      *
     C                     Z-ADD*ZERO     WDCPM
     C                     Z-ADD*ZERO     WDCPN
      *
     C           BCTP      IFNE 'MM'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           MATY      ANDNE99999
      *
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      ** CALCULATE NEW UNAMORTISED DISC/PREM
      *
     C           BKVAL     SUB  APNC      WDCPM  150
      *
      ** Adjust Discount/Premium posted since last position date
      *
     C                     SUB  WDCPM     DPAP
     C                     ADD  BUDU      DPAP
      *
     C           CAS006    IFEQ 'Y'
     C           BKVALN    SUB  APNN      WDCPN  150
     C                     SUB  WDCPN     DPAN
     C                     ADD  BUDN      DPAN
     C                     ENDIF
      *
      ** POST CHANGE TO DISC/PREM ON POSITION
      *
      ** -  SET UP INDICATORS FOR AVERAGE PRICE CHANGES
      *
     C                     MOVEA'00'      *IN,28
     C           PAPNC     IFGT BKVAL
     C           APNC      ANDGTBKVAL
     C                     MOVE '1'       *IN29
     C                     ELSE
     C           PAPNC     IFLT BKVAL
     C           APNC      ANDLTBKVAL
     C                     MOVE '1'       *IN29
     C                     ELSE
     C                     MOVE '1'       *IN28
     C                     END
     C                     END
      *
      ** -  SET COMMON KEY FIELDS
      *
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C                     MOVE *ZEROS    TRFR
     C                     MOVE ISSR      CSTN
      *
      ** -  IF POSITION HAS CHANGED FROM DISC TO PREM OR VICE VERSA
      **      - TWO KEYS ARE PRODUCED
      *
     C           *IN28     IFEQ '1'
      *
      **  SET UP FIRST KEY TO REDUCE EXISTING DISC/PREM TO ZERO
      *
     C                     MOVE BCTV      EVTP
     C           BKVAL     IFGT 0
     C           PAPNC     ANDLTBKVAL
     C           BKVAL     ORLT 0
     C           PAPNC     ANDGTBKVAL
     C                     MOVE 'DS'      AMCD
     C                     ELSE
     C                     MOVE 'PR'      AMCD
     C                     END
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
      **  Reverse Posted Premium / Discount and Reset to Zero
      *
     C                     Z-SUBBUDU      EVAM
     C                     Z-ADD0         BUDU
     C                     Z-ADD0         BUDN
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PR'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** - Reverse sign on Short positions if in key
      *
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'Y'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
     C                     MOVE ISSR      CSTN
      *
      ***  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
     C                     END
      *
      ** OUTPUT FIRST KEY
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
      ** -  SET UP SECOND KEY FOR NEW DISC/PREM
      *
     C                     MOVE BCTV      EVTP
     C           BKVAL     IFGT 0
     C           APNC      ANDLTBKVAL
     C           BKVAL     ORLT 0
     C           APNC      ANDGTBKVAL
     C                     MOVE 'DS'      AMCD
     C                     ELSE
     C                     MOVE 'PR'      AMCD
     C                     END
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
      ** - Calculate Change to Unamortised Discount/Premium
      *
     C           WDCPM     SUB  BUDU      EVAM
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PR'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** - Reverse sign on Short positions if in key
      *
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'Y'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ***  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
     C                     END
      *
      ** OUTPUT SECOND KEY
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** END OF SECTION ONLY IF TRADE BASIS IS 'D'
      *
     C                     END
     C                     END
      *
      ** If CSE036 then don't do Unrelised P/L
      *
     C           CSE036    IFEQ 'Y'
     C                     MOVE 'N'       #EXSR
     C                     ENDIF
      *
      ** PRODUCE UNREALISED P/L ACCOUNT KEYS
      *
     C           AUPR      IFEQ 'Y'
     C           UPPS      ANDNE' '
      *
      ** Don't generate Unrealized P/L Keys in Reversal mode.
      *
     C           *INU1     ANDEQ'0'
      *
     C           UPBS      IFEQ 'B'
     C           UPBS      OREQ BCTV
     C                     MOVEL'Y'       PRCCHG  1
     C                     EXSR UNRLPL
     C                     MOVEL*BLANK    PRCCHG
     C                     END
     C                     END
      *
      ** PRODUCE REALISED P/L ACCOUNT KEYS
      *
     C           RPBS      IFEQ 'B'
     C           RPBS      OREQ BCTV
     C                     MOVE '1'       *IN25
      *
      ** -  Clear Trade Amount
      *
     C                     Z-ADD0         WCAMT
      *
     C                     EXSR REALPL
      *
      ** UPDATE MONTHLY STATISTICS TOTAL FOR M/M PROFIT
      *
     C           *INU1     IFEQ '0'
     C                     ADD  WRLPL     MMPL
     C                     ELSE
     C                     SUB  WRLPL     MMPL
     C                     END
     C                     END
      *
      ** RESET LATEST POSITION DATE
      *
     C                     Z-ADDBCAD      LPCD
      *
      ** RESET UNAMORTISED DISC/PREM
      *
      ** Reset only Unamortised Disc/Prem if not Available for Sale Book
      *
     C           WUPD      IFEQ 'N'
      *
     C                     Z-ADDWDCPM     BUDU
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWDCPN     BUDN
     C                     ENDIF
      *
      ** CALCULATE NEW AP NUMERATOR
      *
     C                     Z-ADDLAVP      APPB
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDLAVN      APPN
     C                     ENDIF
     C                     ENDIF
      *
      ** If FIFO accounting, reset all open trade prices
      *
     C           FIFO      IFEQ 'Y'
     C           NPSN      ANDNE*ZEROS
      *
      ** STORE RECORDS FROM CURRENT ACTIONS THAT WILL BE OVERWRITTEN BY
      ** CHAIN TO HTRACT
      *
     C                     MOVELRECIN     STREC
      *
      ** ACCESS HISTORIC TRADE ACTIONS BY TRADE
      *
     C                     MOVE BHTR      KBHTR
      *
     C                     MOVEA'000'     *IN,04
     C           HTTKEY    CHAINHTRACT               87
     C           *IN87     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     SETON                     U7U8
     C                     MOVE 'HTRAC'   DBFILE           **************
     C                     MOVELBHTR      KEY7    7        ** DB ERROR 19
     C                     MOVE BHTV      KEY7             **************
     C                     MOVELKEY7      DBKEY
     C                     Z-ADD19        DBASE
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EP60
     C                     ELSE
      *
     C                     Z-ADDLAVP      HCNTP
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDLAVN      HCNTN
     C                     ENDIF
      *
     C                     EXCPTUPDACT
     C                     END
      *
      ** These KLISTs were not set up before being used. Failure to
      ** do this caused corruption of Prices on Trade Action records
      ** that were unrelated to the Price Action.
      *
     C                     MOVE TRKEY     KTRKEY
      *
     C           HTBKEY    SETGTHTRACB
     C                     SETOF                     86
     C           *IN86     DOWEQ'0'
     C           HTBKY2    READEHTRACB                   86
      *
     C           *IN86     IFEQ '0'
     C           PNPSN     IFGT 0
     C           HBCPS     ANDEQ'P'
     C           PNPSN     ORLT 0
     C           HBCPS     ANDEQ'S'
      *
     C           HBCTR     IFNE BCTR
     C                     SETOF                     131415
     C                     MOVE HBCAD     KDTE
     C                     MOVE HBCTR     KREF
     C           HTBKEY    CHAINHTRACBX              88
     C                     Z-ADDLAVP      HCNTP
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDLAVN      HCNTN
     C                     ENDIF
      *
     C                     EXCPTUPDACB
     C                     END
      *
     C                     END
     C                     END
      *
     C                     END
      *
     C                     MOVELSTREC     RECIN
      *
     C                     END
      *
     C           ENDP60    TAG
     C           EP60      ENDSR                           ***  EP60  ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  P70    - SUBROUTINE TO PROCESS MATURITY DATE ACTIONS         *
      *                                                               *
      *****************************************************************
      *
     C           P70       BEGSR                           ***  P70   ***
      *
     C                     MOVE '1'       *IN20
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      ****************************************************************
      *                                                              *
      *  P80    - Subroutine to Amortise on End of Average Life Date *
      *                                                              *
      ****************************************************************
      *
     C           P80       BEGSR
      *
     C           STAD      IFNE 'Y'
     C           STAD      ANDNE'C'
     C           PROT      OREQ '2'
     C           PROT      OREQ '4'
     C           PROT      OREQ '7'
     C                     GOTO EP80
     C                     ENDIF
      *
      ** Perform Amortisation of Discount/Premium
      *
     C                     MOVE 'N'       AMTDP
     C                     EXSR AMORT
      *
      ** Update Average Price after amortising
      *
     C                     EXSR AVPRAM
      *
      ** Post EI/ED key for amortisation
      *
     C           WADP      IFNE 0
     C           AMTDP     ANDEQ'Y'
     C                     EXSR P07
     C                     ENDIF
      *
     C                     MOVE *ON       *IN20
      *
     C           EP80      ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AMORT  - SUBROUTINE TO AMORTIZE DISCOUNT/PREMIUM             *
      *                                                               *
      *****************************************************************
      *
     C           AMORT     BEGSR                           *** AMORT  ***
      *
      ** ONLY AMORTIZE INTEREST-BEARING SECURITIES
      *
     C           PROT      IFEQ '2'
     C           PROT      OREQ '4'
     C           PROT      OREQ '7'
     C                     GOTO EAMORT
     C                     END
      *
      ** PORTFOLIO CURRENCY RATE
      *
     C           APNC      IFNE *ZERO
     C           FXAP      DIV  APNC      WFACT
     C                     ELSE
     C                     Z-ADD*ZERO     WFACT
     C                     END
      *
      **   'Last amortized-to date' is now held in field LATD. If LATD
      **   is before current action use it in amortization calculations
      *
     C           LATD      IFNE 0
     C           LATD      ANDLEBCAD
     C                     Z-ADDLATD      LAMDAT  50
     C                     Z-ADDDNAT      LAMDNA  20
     C                     ELSE
     C                     Z-ADDLPSD      LAMDAT
     C                     Z-ADD*ZERO     LAMDNA
     C                     END
      *
      ** DISCOUNT/PREMIUM AMORTISED ONLY IF NOT EQUAL ZERO
      ** AND BOOK POSITION ACTION PROCESSED IS FOR A NEW POSITION DATE
      *
     C           CSE032    IFNE 'Y'
     C           BUDU      IFNE 0
     C           LAMDAT    ANDLTBCAD
      *
      ** AMORTIZE PREM/DISC ON YIELD CURVE BASIS FOR AUSTRALIA.
      ** -IF YIELD CURVE BASIS
      ** -AND NOT FIFO
      ** -AND NOT SCHULDSHEIN
      ** -AND YIELD-BASED SECURITY
      *
     C           STAD      IFEQ 'C'
     C           FIFO      ANDNE'Y'
     C           STBS      ANDEQ'Y'
     C                     MOVE ' '       WAMORT
     C                     EXSR AAMORT
      *
     C           CAS006    IFEQ 'Y'
     C                     EXSR AAMORN
     C                     ENDIF
      *
     C                     ELSE
      *
      ** - CALCULATE DAYS TO MATURITY
      *
     C                     Z-ADDLAMDAT    ZSDATE
     C                     Z-ADDMATY      ZEDATE
      *
      ** If Enhanced Treasury is switched on:
      *
     C           CSE075    IFEQ 'Y'
      *
      ** For MBS, amortize to average life date, if available.
      *
     C           PROT      IFEQ '8'
     C           PPDI      ANDNE'Y'
     C           ALDT      ANDNE0
     C                     Z-ADDALDT      ZEDATE
     C                     ENDIF
     C                     ENDIF
      *
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE *BLANK    ZACLT
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WDAYSM  50
      *
      ** - CALCULATE DAYS TO AMORTISE
      *
     C                     Z-ADDLAMDAT    ZSDATE
     C                     Z-ADDBCAD      ZEDATE
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE 'D'       ZACLT
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WDAYSA  50
      *
      ** Reset day number accrued to and accrual type
      *
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE *BLANK    ZACLT
      *
      ** Update day number accrued to
      *
     C                     Z-ADDZODNAT    DNAT
      *
      **  - CALCULATE EARNED DISC/PREM SINCE LATEST POSN DATE
      *
     C           WDAYSM    IFEQ 0
     C           WDAYSM    ORLT WDAYSA
      *
      ***  If issue is maturing, amortize remaining discount/premium.
      *
     C                     Z-ADDBUDU      WEDP
     C                     ELSE
     C                     Z-ADDWDAYSM    ZPNPSN
     C                     Z-ADDWDAYSA    ZNPSN
     C                     Z-ADDBUDU      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDP   130
     C                     END
      *
      **  - CALCULATE AMORTISED DISC/PREM TO POST
      *
     C                     Z-ADDWEDP      WADP   130
      *
      **  Calculate earned DISC/PREM since latest Position date for N-T-P
      *
     C           CAS006    IFEQ 'Y'
     C           WDAYSM    IFEQ 0
     C           WDAYSM    ORLT WDAYSA
      *
      **  If issue is maturing, amortize remaining discount/premium.
      *
     C                     Z-ADDBUDN      WEDN
     C                     ELSE
     C                     Z-ADDWDAYSM    ZPNPSN
     C                     Z-ADDWDAYSA    ZNPSN
     C                     Z-ADDBUDN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDN   130
     C                     ENDIF
      *
     C                     Z-ADDWEDN      WADN   130
     C                     ENDIF
      *
     C                     END
      *
      **  - OUTPUT AMORTISED DISC/PREM KEY
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C           NPAC      IFEQ 'N'
     C           NPSN      ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           NPSN      IFGT 0
     C           BUDU      ANDGT0
     C           NPSN      ORLT 0
     C           BUDU      ANDLT0
     C                     MOVE 'DA'      AMCD
     C                     ELSE
     C                     MOVE 'PA'      AMCD
     C                     END
      *
     C                     MOVE *ZEROS    TRFR
     C                     MOVE ISSR      CSTN
     C                     Z-ADDWADP      EVAM
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PA'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** If CSE105 is installed and this is a Trade Date Position,
      ** change to 'DT' when "discount" or 'PT' when "premium".
      *
     C           CSE105    IFEQ 'Y'
      *
     C           IPL7K     IFEQ ' '
     C           BCTV      ANDEQ'T'
      *
     C           IPL7K     OREQ 'K'
     C           KBCTV     ANDEQ'T'
      *
     C                     SELEC
     C           AMCD      WHEQ 'DA'
     C                     MOVE 'DT'      AMCD
     C           AMCD      WHEQ 'PA'
     C                     MOVE 'PT'      AMCD
     C                     ENDSL
      *
     C                     ENDIF
     C                     ENDIF
      *
      ** - Reverse sign, if Negative Position on Key
      *
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
      ***  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
      *
      ***  Accumulate Amortized Discount/Premium for the Profitability
      ***  Report. NOTE: field DPTM has been added to PF/BKMTHD. It is
      ***  used only on 'V' records; the Trade Date Report will use
      ***  Value Date figures.
      *
     C           WADP      MULT AAPR      WADPCF 150
     C                     ELSE
     C                     Z-ADDWADP      WADPCF
     C                     END
      *
      ***  If Reversal Mode, reverse out the Amortized Discount/Premium
      ***  calculated from that on the BKMTHD file.
      *
      ***  WADPCF is the same sign as BUDU - Discount Long  +ve
      ***                                  - Premium  Long  -ve
      ***                                  - Discount Short -ve
      ***                                  - Premium  Short +ve
      ***  A discount long gives income as does a premium Short
      *
      *
     C           *INU1     IFEQ '0'
     C                     ADD  WADPCF    DPTM
     C                     ELSE
     C                     SUB  WADPCF    DPTM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - CALCULATE NEW UNAMORTISED DISC/PREM ON POSITION
      *
     C           BUDU      SUB  WADP      BUDU
      *
      ** - SET DISC/PREM AMORTISED SINCE LATEST POSN DATE
      *
     C                     ADD  WADP      DPAP
     C                     ADD  WADP      DPFP
      *
     C           CAS006    IFEQ 'Y'
     C           BUDN      SUB  WADN      BUDN
     C                     ADD  WADN      DPAN
     C                     ADD  WADN      APNN
     C                     ENDIF
      *
      ** - Update APNC, as NOM - APNC = BUDU
      *
     C                     ADD  WADP      APNC
      *
      ** - Update portfolio currency equivalents
      *
     C           APNC      MULT WFACT     FXAP
     C                     Z-ADDFXAP      LFXP
      *
      **  INDICATE THAT AMORTIZATION HAS BEEN DONE
      *
     C                     MOVEL'Y'       AMTDP
      *
     C                     END
      *
      ***  Update last amortized/accrued-to date.
      *
     C           BUDU      IFNE *ZERO
     C                     Z-ADDBCAD      LATD
     C                     ELSE
     C                     Z-ADD*ZERO     LATD
     C                     Z-ADD*ZERO     DNAT
     C                     END
     C                     ELSE
     C           BUDU      IFNE 0
     C           LAMDAT    ANDLTBCAD
     C           STAD      OREQ 'C'
     C           SYBS      ANDNE*BLANK
     C           NPSN      ANDNE0
     C           LAMDAT    ANDLTBCAD
      *
      ** AMORTIZE PREM/DISC ON YIELD CURVE BASIS FOR AUSTRALIA.
      ** -IF YIELD CURVE BASIS
      ** -AND NOT FIFO
      ** -AND NOT SCHULDSHEIN
      ** -AND YIELD-BASED SECURITY
      *
     C           STAD      IFEQ 'C'
     C           FIFO      ANDNE'Y'
     C           SYBS      ANDNE*BLANK
      *
      ** Override trade basis to 'Y' as ZPRCI and ZPRCO standard
      ** subroutines calculate yield for 'Y' trade basis only.
      *
     C                     MOVEL'Y'       STBS
     C                     MOVE ' '       WAMORT  1
      *
     C           CSE065    IFEQ 'Y'
     C                     MOVE 'T'       WAMORT
     C                     EXSR AAMORC
     C                     ELSE
     C                     EXSR AAMORT
     C                     ENDIF
      *
     C                     MOVE ' '       WAMORT
     C           CAS006    IFEQ 'Y'
     C           CSE065    IFEQ 'Y'
     C                     MOVE 'N'       WAMORT
     C                     EXSR AAMORC
     C                     ELSE
     C                     EXSR AAMORN
     C                     ENDIF
     C                     ENDIF
      *
     C                     ELSE
      *
      ** - CALCULATE DAYS TO MATURITY
      *
     C                     Z-ADDLAMDAT    ZSDATE
     C                     Z-ADDMATY      ZEDATE
      *
      ** If CSE065 is ON and Available for Sale Book,
      ** amortisation is calculated base per Average Life
      ** Date change.
      *
     C           CSE065    IFEQ 'Y'
     C           STAD      ANDEQ'Y'
     C                     EXSR AMORSL
     C                     ELSE
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE *BLANK    ZACLT
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WDAYSM  50
      *
      ** - CALCULATE DAYS TO AMORTISE
      *
     C                     Z-ADDLAMDAT    ZSDATE
     C                     Z-ADDBCAD      ZEDATE
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE 'D'       ZACLT
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WDAYSA  50
      *
      ** Reset day number accrued to and accrual type
      *
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE *BLANK    ZACLT
      *
      ** Update day number accrued to
      *
     C                     Z-ADDZODNAT    DNAT
      *
      ** - CALCULATE EARNED DISC/PREM SINCE LATEST POSN DATE
      *
     C           WDAYSM    IFEQ 0
     C           WDAYSM    ORLT WDAYSA
      *
      ** If issue is maturing, amortize remaining discount/premium.
      *
     C                     Z-ADDBUDU      WEDP
     C                     ELSE
     C                     Z-ADDWDAYSM    ZPNPSN
     C                     Z-ADDWDAYSA    ZNPSN
     C                     Z-ADDBUDU      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDP   130
     C                     END
      *
      ** - CALCULATE AMORTISED DISC/PREM TO POST
      *
     C                     Z-ADDWEDP      WADP   130
      *
     C           CAS006    IFEQ 'Y'
     C           WDAYSM    IFEQ 0
     C           WDAYSM    ORLT WDAYSA
      *
     C                     Z-ADDBUDN      WEDN
     C                     ELSE
     C                     Z-ADDWDAYSM    ZPNPSN
     C                     Z-ADDWDAYSA    ZNPSN
     C                     Z-ADDBUDN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDN
     C                     ENDIF
      *
     C                     Z-ADDWEDN      WADN
     C                     ENDIF
      *
     C                     ENDIF
     C                     END
      *
      ** - OUTPUT AMORTISED DISC/PREM KEY
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C           NPAC      IFEQ 'N'
     C           NPSN      ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           NPSN      IFGT 0
     C           BUDU      ANDGT0
     C           NPSN      ORLT 0
     C           BUDU      ANDLT0
     C                     MOVE 'DA'      AMCD
     C                     ELSE
     C                     MOVE 'PA'      AMCD
     C                     END
      *
     C                     MOVE *ZEROS    TRFR
     C                     MOVE ISSR      CSTN
     C                     Z-ADDWADP      EVAM
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PA'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** - Reverse sign, if Negative Position on Key
      *
     C           NPSN      IFLT 0
     C           NPAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
      ** Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
      *
      ***  Accumulate Amortized Discount/Premium for the Profitability
      ***  Report. NOTE: field DPTM has been added to PF/BKMTHD. It is
      ***  used only on 'V' records; the Trade Date Report will use
      ***  Value Date figures.
      *
     C           WADP      MULT AAPR      WADPCF 150
     C                     ELSE
     C                     Z-ADDWADP      WADPCF
     C                     END
      *
      ***  If Reversal Mode, reverse out the Amortized Discount/Premium
      ***  calculated from that on the BKMTHD file.
      *
      ***  WADPCF is the same sign as BUDU - Discount Long  +ve
      ***                                  - Premium  Long  -ve
      ***                                  - Discount Short -ve
      ***                                  - Premium  Short +ve
      ***  A discount long gives income as does a premium Short
      *
     C           *INU1     IFEQ '0'
     C                     ADD  WADPCF    DPTM
     C                     ELSE
     C                     SUB  WADPCF    DPTM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - CALCULATE NEW UNAMORTISED DISC/PREM ON POSITION
      *
     C           BUDU      SUB  WADP      BUDU
      *
      ** - SET DISC/PREM AMORTISED SINCE LATEST POSN DATE
      *
     C                     ADD  WADP      DPAP
     C                     ADD  WADP      DPFP
      *
      ** - Update APNC, as NOM - APNC = BUDU
      *
     C                     ADD  WADP      APNC
      *
     C           CAS006    IFEQ 'Y'
     C           BUDN      SUB  WADN      BUDN
     C                     ADD  WADN      DPAN
     C                     ADD  WADN      APNN
     C                     ENDIF
      *
      ** - Update portfolio currency equivalents
      *
     C           APNC      MULT WFACT     FXAP
     C                     Z-ADDFXAP      LFXP
      *
      **  INDICATE THAT AMORTIZATION HAS BEEN DONE
      *
     C                     MOVEL'Y'       AMTDP
     C                     END
      *
      ***  Update last amortized/accrued-to date.
      *
     C           BUDU      IFNE *ZERO
     C                     Z-ADDBCAD      LATD
     C                     ELSE
     C                     Z-ADD*ZERO     LATD
     C                     Z-ADD*ZERO     DNAT
     C                     END
     C                     END
      *
     C           EAMORT    ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AMTPL  - SUBROUTINE TO CALCULATE AMORTISED PROFIT/LOSS       *
      *           FOR BUY-SELL TRADES                                 *
      *                                                               *
      *****************************************************************
      *
     C           AMTPL     BEGSR                           *** AMTPL  ***
      *
      *** If in reversal mode and amortised P/L is not zero
      *
     C           *INU1     IFEQ '1'
     C           BSAPL     ANDNE0
      *
      *** Initialise event amount
      *
     C                     Z-ADDBSAPL     EVAM
      *
     C           EVAM      IFGT 0
     C                     MOVE 'RL'      AMCD
     C           EVAM      MULT -1        EVAM
      *
     C                     ELSE
      *
     C                     MOVE 'RP'      AMCD
      *
     C                     ENDIF
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       PSBS
     C                     MOVE ' '       PSBS
     C                     MOVE ' '       NEGI
      *
     C                     EXSR W01
      *
     C                     Z-ADD*ZEROS    BSAPL
     C                     Z-ADD*ZEROS    BSLATD
     C                     Z-ADD*ZEROS    BSOPL
      *
     C                     ENDIF
      *
      *** If not in reversal mode calc profit/loss
      *
     C           *INU1     IFEQ '0'
     C           BSLATD    IFEQ 0
     C                     EXSR CALPL
     C                     ENDIF
      *
     C           BSVD2     IFEQ BCAD
      *
     C                     Z-ADDBSOPL     EVAM
      *
     C           EVAM      IFGT 0
     C                     MOVE 'RL'      AMCD
     C           EVAM      MULT -1        EVAM
     C                     ELSE
     C                     MOVE 'RP'      AMCD
     C                     ENDIF
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       PSBS
     C                     MOVE ' '       NEGI
     C                     EXSR W01
     C           BSOPL     ADD  BSAPL     BSAPL
     C                     Z-ADDBCAD      BSLATD
     C                     Z-ADD*ZEROS    BSOPL
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR                                       **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  CALPL  - SUBROUTINE TO CALCULATE PROFIT/LOSS FOR BUY-SELL    *
      *           TRADES FOR AMORTISATION                             *
      *                                                               *
      *****************************************************************
      *
     C           CALPL     BEGSR                           *** CALPL  ***
      *
      *** If the action is for the second trade use the fields
      *** from second trade
      *
     C           @SECTR    IFEQ 'Y'
      *
     C                     Z-ADDTDDT      BSTD2
     C                     Z-ADDTDVD      BSVD2
      *
     C                     ELSE
      *
     C                     Z-ADDTDDT      BSTD1
     C                     Z-ADDTDVD      BSVD1
      *
     C                     ENDIF
      *
     C                     MOVE BCBA      BSBCH
     C                     MOVE BCBO      BSBOK
      *
      *** Get Trades details using link reference
      *
     C           LKRF      CHAINTRADS                80
      *
     C           *IN80     IFEQ '1'
     C           RECI      ORNE 'D'
     C           *LOCK     IN   LDA
     C                     Z-ADD30        DBASE            **************
     C                     MOVEL'TRADS  ' DBFILE           * DB ERROR 30
     C                     MOVELBCTR      DBKEY            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
      *
      *** If action uses the second trade to get link ref then
      *** move details into first trade.
      *
     C           @SECTR    IFEQ 'Y'
      *
     C                     Z-ADDTDDT      BSTD1
     C                     Z-ADDBSVD1     BSTD1
      *
     C                     ELSE
      *
     C                     Z-ADDTDDT      BSTD2
     C                     Z-ADDTDVD      BSTD2
      *
     C                     ENDIF
      *
     C           BCPS      IFEQ 'S'
     C           BCCN      SUB  TCSR      @BSPL  130
     C                     ELSE
     C           TCSR      SUB  BCCN      @BSPL
     C                     ENDIF
      *
     C                     Z-ADD@BSPL     BSOPL
     C                     Z-ADDBSVD1     BSLATD
      *
     C                     MOVE 'D'       BSRECI
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  BSPLS  - SUBROUTINE TO CALCULATE PROFIT/LOSS FOR BUY-SELL    *
      *           TRADES FOR AMORTISATION                             *
      *                                                               *
      *****************************************************************
      *
     C           BSPLS     BEGSR                           *** BSPLS  ***
      *
      *** If in reversal mode and acton is for second trade
      *** then do calculation
      *
     C           *INU1     IFEQ '1'
     C           @SECTR    ANDEQ'Y'
     C           BSPL      ANDNE0
      *
     C                     Z-ADDBSPL      EVAM                         **
      *
     C           EVAM      IFGT 0
     C                     MOVE 'RL'      AMCD                         **
     C           EVAM      MULT -1        EVAM                         **
     C                     ELSE
     C                     MOVE 'RP'      AMCD
     C                     ENDIF
      *                                                                **
      *** Change fields using Book Postions action file (BPACC)
      *
     C                     MOVE BCTV      EVAM
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       TRST
     C                     MOVE ' '       PORT
      *                                                                **
     C                     EXSR W01
      *
     C                     ENDIF
      *
      *** Else if not in reversal mode
      *
     C           *INU1     IFNE '1'
      *
      *** And action is for first trade
      *
     C           @SECTR    IFEQ 'N'                                    **
      *
     C           @BSPL     IFEQ 0
     C                     EXSR CALPL
     C                     ENDIF
     C                     Z-ADD@BSPL     BSPL                         **
      *
     C                     ENDIF                                       **
      *
      *** If action is for second trade and not in reversal mode
      *
     C           @SECTR    IFEQ 'Y'
      *
     C                     Z-ADDBSPL      EVAM
      *                                                                **
     C           EVAM      IFGT 0
     C                     MOVE 'RL'      AMCD
     C           EVAM      MULT -1        EVAM
     C                     ELSE                                        **
     C                     MOVE 'RP'      AMCD
     C                     ENDIF
      *
     C                     MOVE BCTV      EVTP                         **
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       TRST
     C                     MOVE ' '       PORT
      *                                                                **
     C                     EXSR W01
      *
     C           BSVD2     IFEQ BCAD
     C                     MOVE 'M'       BSRECI
     C                     Z-ADDBSVD2     BSLATD
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR                                       **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  ACCRUE - SUBROUTINE TO CALCULATE ACCRUED INTEREST UP TO DATE *
      *                                                               *
      *****************************************************************
      *
     C           ACCRUE    BEGSR                           *** ACCRUE ***
      *
      ***  If the Initial Date is Greater Than the Action Date, then
      ***  the Accrued Interest is zero.
      *
     C                     Z-ADD0         TOTACC 150
      *
     C           ITLD      IFGT BCAD
     C                     Z-ADD0         WAIRP  130
     C                     GOTO EACCRU
     C                     END
      *
      **  If action date is greater than maturity date, then suppress
      **  generation of this key
      *
     C           BCAD      IFGT MATY
     C           MATY      ANDNE*ZEROS
     C                     GOTO EACCRU
     C                     ENDIF
      *
      ***  If the Last Position Date is Less Than the Last Coupon Date
      ***  then the Purchased Interest is zero.
      *
     C           LPSD      IFLT LCPN
     C                     Z-ADD0         WPINT  130
     C                     Z-ADD0         ECNP
     C                     Z-ADD0         IACP
     C                     Z-ADD0         INDO
     C                     ELSE
     C                     Z-ADDPILP      WPINT
     C                     END
      *
      ** Save Event Control Date.
      *
     C                     Z-ADDECD       ECDPRV
      *
      ***  Determine the Next Coupon Date using Last Coupon Date (LCPN)
      ***  , not Event Control Date.
      *
     C           LCPN      ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Return old Event Control Date
      *
     C                     Z-ADDECDPRV    ECD
      *
      ** OBTAIN TOTAL INTEREST ON TOTAL NOMINAL POSITION
      **   For non-Schuldschein
      *
     C           PROT      IFNE '6'
     C                     Z-ADDLCPN      ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDNPSN      ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
      *
      ***  Else for Schuldschein
      *
     C                     ELSE
     C           LPSD      IFGT LCPN
     C                     Z-ADDLPSD      ZSDATE
     C                     ELSE
     C                     Z-ADDLCPN      ZSDATE
     C                     END
     C                     Z-ADDBCAD      ZEDATE
     C                     Z-ADDNPSN      ZAMT
     C                     Z-ADDCPNR      IRATE
      *
     C           IRATE     IFNE 0
     C                     EXSR ZACCR
     C                     ELSE
     C                     Z-ADD0         ZACCRD
     C                     END
     C                     Z-ADDZACCRD    TOTACC
     C                     END
      *
      ***  Calculate the Total Coupon as at the Next Coupon Date on the
      ***  Ex-Coupon Position if Ex-Coupon Nominal is not zero.
      *
     C           ECNP      IFNE 0
     C           IRATE     ANDNE0
     C                     Z-ADDLCPN      ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDECNP      ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    WTCPN  150
     C                     ELSE
     C                     Z-ADD0         WTCPN
     C                     END
      *
      ** CALCULATE ACCRUED INTEREST TO POST
      *
     C           TOTACC    SUB  WTCPN     WSTOT  150
     C           WSTOT     SUB  WPINT     WSTOT
     C           PROT      IFEQ '6'
     C           ARPC      IFLT 0
     C           EVAM      ANDGT0
     C           ARPC      ORGT 0
     C           EVAM      ANDLT0
     C           WSTOT     ADD  ARPC      WSTOT
     C                     ELSE
     C           WSTOT     SUB  ARPC      WSTOT
     C                     END
     C                     ELSE
     C           WSTOT     SUB  ARPC      WSTOT
     C                     END
     C           WSTOT     ADD  INDO      WAIRP
      *
      ** OUTPUT ACCRUED INTEREST RECEIVABLE ACCOUNT KEYS
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C           NPSN      IFGE 0
     C           SNAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
      ** REVERSE NEGI IF -VE COUPON RATE AND SPLIT NEG ACCR. IS Y
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
      *** For accrued interest value date equal to accrued end date
      *
     C           ACLD      IFEQ 'Y'
     C                     Z-ADDBCAD      EVDT
     C                     ELSE
     C           BCAD      SUB  1         EVDT
     C                     END
      *
     C                     MOVE 'AI'      AMCD
     C                     MOVE *BLANK    TRFR
     C                     MOVE ISSR      CSTN
      *
     C           NPSN      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           WAIRP     MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDWAIRP     EVAM
     C                     END
      *
      ** REVERSE SIGN IF -VE COUPON RATE AND SPLIT NEG ACCR. Y
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
      *
     C           PROT      IFEQ '6'
     C           ARPC      IFLT 0
     C           EVAM      ANDGT0
     C                     Z-ADDARPC      EVAM
     C                     MOVE 'N'       NEGI
     C                     SUB  EVAM      ARPC
     C                     EXSR W01
     C                     END
      *
     C           ARPC      IFGT 0
     C           EVAM      ANDLT0
     C                     Z-ADDARPC      EVAM
     C                     MOVE ' '       NEGI
     C                     SUB  EVAM      ARPC
     C                     EXSR W01
     C                     END
     C                     END
     C                     END
      *
      ** RESET AIR POSTED SINCE LAST CONTROL DATE
      *
     C           WAIRP     ADD  ARPC      ARPC
      *
     C           EACCRU    ENDSR                           *** EACCRU ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AAMORT - Subroutine to Amortise Premium/Discount on a Yield  *
      *           Curve Basis for the Australian Market.              *
      *                                                               *
      *****************************************************************
      *
     C           AAMORT    BEGSR                           *** AAMORT ***
      *
      ** If initial date has not been reached yet, then bypass
      *
     C           ITLD      IFGT BCAD
     C           CSE065    OREQ 'Y'
     C           ALDT      ANDLTRUND
     C           WAMORT    ANDNE' '
     C                     GOTO AAEND
     C                     END
      *
     C                     Z-ADD0         YLDPRC 158
     C                     Z-ADD0         LCDWRK 130
     C                     Z-ADD0         NCDWRK 130
     C                     Z-ADD0         ACTWRK 130
     C                     Z-ADD0         WRKPIX 130
     C                     Z-ADD0         WRKPI
      *
      ** Save Event Control Date.
      *
     C                     Z-ADDECD       ECDPRV  50
      *
      ** set nominal to positive for working on
      *
     C           NPSN      IFLT 0
     C                     Z-SUBNPSN      WNOML  130
     C                     ELSE
     C                     Z-ADDNPSN      WNOML
     C                     END
      *
      ** If Coupon rate = zeroes (eg. Commercial Paper) then zeroise
      ** WRKPI and bypass interest calcs.
      *
     C           CPNR      IFEQ 0
     C           SYBS      ORNE 'AU'
     C                     Z-ADD*ZEROS    WRKPI
      *
     C                     ELSE
      *
      ** Obtain next coupon date for previous period
      *
     C           LAMDAT    ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Obtain last coupon date for previous period
      *
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period Cum. or Ex
      *
     C                     Z-ADDLAMDAT    WRKD
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           CSE035    IFEQ 'Y'
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDLAMDAT    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
      *
     C                     ELSE
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDLAMDAT    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
      *
     C                     END
      *
     C                     ENDIF
      *
      ** Calculate interest for Ex period (SCUMEX = X)
      *
     C           SCUMEX    IFEQ 'X'
      *
      ** Calculate interest to last (change/amort) date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDLAMDAT    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    LCDWRK
      *
      ** Calculate interest to Next Coupon Date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
      *
     C           LCDWRK    SUB  NCDWRK    WRKPIX
      *
     C                     END
      *
      ** Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
      *
     C                     END
      *
      ** Calculate Yield from last (change/amort) date
      *
      ** Save the present coupon rate and get the prevailing rate for the
      *
     C                     Z-ADDCPNR      WSCPNR 117
     C                     MOVE 'IR'      SDET
     C                     Z-ADD0         ZDCSDT
     C           KZSEDF    SETLLSEDEVDF
     C           SESN      READESEDEVDF                  71
     C           *IN71     DOWEQ'0'
     C           SDED      ANDLELAMDAT
     C           SDET      IFEQ 'IR'
     C                     Z-ADDSDNC      WPCPNR 117
     C                     ENDIF
     C           SESN      READESEDEVDF                  71
     C                     ENDDO
      *
     C                     Z-ADDWPCPNR    CPNR
     C                     Z-ADDLAVP      ZPRICE
     C                     Z-ADDLAMDAT    ZFDATE
     C                     Z-ADDWNOML     ZNOML
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE *BLANK    ZACLT
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    YLDPRC
      *
      ** Restore current coupon rate.
      *
     C                     Z-ADDWSCPNR    CPNR
      *
      ** CALCULATE PRICE FROM YIELD TO ACTION DATE.
      ** If Coupon rate = zeroes (eg. Commercial Paper) then zeroise
      ** WRKPI and bypass interest calcs.
      *
     C           CPNR      IFEQ 0
     C           SYBS      ORNE 'AU'
     C                     Z-ADD*ZEROS    WRKPI
      *
     C                     ELSE
      *
      ** Obtain next coupon date for current period
      *
     C           BCAD      ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Obtain last coupon date for current period
      *
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period Cum. or Ex
      *
     C                     Z-ADDBCAD      WRKD
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           CSE035    IFEQ 'Y'
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
      *
     C                     ELSE
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
     C                     END
      *
     C                     ENDIF
      *
      ** Calculate interest for Ex period (SCUMEX = X)
      *
     C           SCUMEX    IFEQ 'X'
      *
      ** Calculate interest to Action date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    ACTWRK
      *
      ** Calculate interest to Next Coupon date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
      *
     C           ACTWRK    SUB  NCDWRK    WRKPIX
      *
     C                     END
      *
      ** Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
      *
     C                     END
      *
      ** Calculate New Price from Action date
      *
     C                     Z-ADDYLDPRC    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     Z-ADDWNOML     ZNOML
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE 'Y'       ZACLT
      *
      ** Save the present coupon rate and use the prevailing rate for the
      *
     C                     Z-ADDCPNR      WSCPNR
     C                     Z-ADDWPCPNR    CPNR
     C                     EXSR ZPRCI
      *
      ** Restore current coupon rate.
      *
     C                     Z-ADDWSCPNR    CPNR
      *
      ** Reset day number accrued to and accrual type
      *
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE *BLANK    ZACLT
      *
      ** Update day number accrued to
      *
     C                     Z-ADDZODNAT    DNAT
      *
      ** Calculate amount to amortise
      *
     C           ZPRCOT    SUB  LAVP      ZPRC
     C                     Z-ADDNPSN      ZNOML                    S01233
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WADP
      *
      ** Return old Event Control Date
      *
     C                     Z-ADDECDPRV    ECD
      *
     C           AAEND     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AMORSL - Subroutine to Calculate amortisation for Straight   *
      *           Line Method base on changes in Average Life Date    *
      *                                                               *
      *****************************************************************
      *
     C           AMORSL    BEGSR
      *
     C                     Z-ADDBCAD      WKBCAD  50
     C                     Z-ADDLAMDAT    ZSDATE
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     Z-ADD0         WWADP
     C                     Z-ADD0         WWEDN  130
      *
     C                     MOVELSESN      CSDSN
     C                     MOVE 'AL'      CSDET
     C                     Z-ADDZSDATE    CSDED
     C           SEKEY1    SETGTSEDEVAL1
     C                     READPSEDEVAL1                 79
     C           *IN79     IFEQ *ON
     C           C#SDSN    ORNE CSDSN
     C           C#SDET    ORNE 'AL'
     C           *LOCK     IN   LDA
     C                     MOVE 'SEDEVD'  DBFILE
     C                     Z-ADD50        DBASE
     C                     MOVEL'INIT AL' DBKEY
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     MOVE '1'       *INLR
     C                     ELSE
     C                     Z-ADDC#SDAL    WALDT1  50
     C                     ENDIF
      *
     C           *IN79     DOUEQ*ON
     C           C#SDSN    ORNE CSDSN
     C           C#SDET    ORNE 'AL'
     C           C#SDED    ORGE WKBCAD
      *
      ** Read next 'AL' record
      *
     C                     READ SEDEVAL1                 79
      *
      ** If found, set the dates
      *
     C           *IN79     IFEQ *OFF
     C           C#SDSN    ANDEQCSDSN
     C           C#SDET    ANDEQ'AL'
     C           C#SDED    ANDLEBCAD
     C                     Z-ADDC#SDED    BCAD
     C                     Z-ADDC#SDAL    WALDT2  50
     C                     ELSE
     C                     Z-ADDWKBCAD    BCAD
     C                     Z-ADDWALDT1    WALDT2
     C                     ENDIF
      *
      ** Calculate number of days to Average Life Date
      *
     C                     Z-ADDWALDT1    ZEDATE
     C                     MOVE *BLANKS   ZACLT
     C                     EXSR ZDAYS
      *
      ** Number of Days 1
      *
     C                     Z-ADDZDDAYS    W#DAY1  50
      *
      ** Calculate number of days to amortised
      *
     C           WALDT1    IFLT BCAD
     C                     Z-ADDWALDT1    ZEDATE
     C                     ELSE
     C                     Z-ADDBCAD      ZEDATE
     C                     ENDIF
      *
     C                     MOVE 'D'       ZACLT
     C                     EXSR ZDAYS
      *
      ** Number of days 2
      *
     C                     Z-ADDZDDAYS    W#DAY2  50
      *
     C                     Z-ADD0         ZIDNAT
     C                     MOVE *BLANKS   ZACLT
     C                     Z-ADDZODNAT    DNAT
      *
      ** Calculate Earned Discount/Premium since Last Posn Date
      *
     C           W#DAY1    IFEQ 0
     C           W#DAY1    ORLT W#DAY2
     C                     Z-ADDBUDU      WEDP
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBUDN      WEDP
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADDW#DAY1    ZPNPSN
     C                     Z-ADDW#DAY2    ZNPSN
     C                     Z-ADDBUDU      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDP
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDW#DAY1    ZPNPSN
     C                     Z-ADDW#DAY2    ZNPSN
     C                     Z-ADDBUDN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WEDN
     C                     ENDIF
     C                     ENDIF
      *
      ** Accymulate Amortised Discount/Premium to post
      *
     C                     ADD  WEDP      WWADP
     C           CAS006    IFEQ 'Y'
     C                     ADD  WEDN      WWEDN
     C                     ENDIF
      *
     C                     Z-ADDBCAD      ZSDATE
     C                     Z-ADDWALDT2    WALDT1
      *
     C                     ENDDO
      *
     C                     Z-ADDWWADP     WADP
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWWEDN     WADN
     C                     ENDIF
      *
     C                     Z-ADDWKBCAD    BCAD
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AAMORN - Subroutine to Amortise Premium/Discount on a Yield  *
      *           Curve Basis for the Australian Market.              *
      *                                                               *
      *****************************************************************
      *
     C           AAMORN    BEGSR                           *** AAMORN ***
      *
      ** If initial date has not been reached yet, then bypass
      *
     C           ITLD      IFGT BCAD
     C           CSE065    OREQ 'Y'
     C           ALDT      ANDLTRUND
     C           WAMORT    ANDNE' '
     C                     GOTO AAENN
     C                     ENDIF
      *
     C                     Z-ADD0         YLDPRN 158
     C                     Z-ADD0         LCDWRK
     C                     Z-ADD0         NCDWRK
     C                     Z-ADD0         ACTWRK
     C                     Z-ADD0         WRKPIX
     C                     Z-ADD0         WRKPI
      *
      ** Save Event Control Date.
      *
     C                     Z-ADDECD       ECDPRV
      *
      ** set nominal to positive for working on
      *
     C           NPSN      IFLT 0
     C                     Z-SUBNPSN      WNOML
     C                     ELSE
     C                     Z-ADDNPSN      WNOML
     C                     ENDIF
      *
      ** If Coupon rate = zeroes (eg. Commercial Paper) then zeroise
      ** WRKPI and bypass interest calcs.
      *
     C           CPNN      IFEQ 0
     C           SYBS      ORNE 'AU'
     C                     Z-ADD*ZEROS    WRKPI
     C                     ELSE
      *
      ** Obtain next coupon date for previous period
      *
     C           LAMDAT    ADD  1         ECD
     C                     EXSR ZNCD
     C*
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period Cum. or Ex
      *
     C                     Z-ADDLAMDAT    WRKD
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDLAMDAT    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
     C                     ENDIF
      *
      ** Calculate interest for Ex period (SCUMEX = X)
      *
     C           SCUMEX    IFEQ 'X'
      *
      ** Calculate interest to last (change/amort) date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDLAMDAT    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    LCDWRK
      *
      ** Calculate interest to Next Coupon Date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
      *
     C           LCDWRK    SUB  NCDWRK    WRKPIX
      *
     C                     ENDIF
      *
      ** Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
     C                     ENDIF
      *
      ** Calculate Yield from last (change/amort) date
      *
     C                     Z-ADDLAVN      ZPRICE
     C                     Z-ADDLAMDAT    ZFDATE
     C                     Z-ADDWNOML     ZNOML
     C                     Z-ADDLAMDNA    ZIDNAT
     C                     MOVE *BLANK    ZACLT
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    YLDPRN
      *
      ** Calculate price from yield to action date.
      ** If Coupon rate = zeroes (eg. Commercial Paper) then zeroise
      ** WRKPI and bypass interest calcs.
      *
     C           CPNN      IFEQ 0
     C           SYBS      ORNE 'AU'
     C                     Z-ADD*ZEROS    WRKPI
      *
     C                     ELSE
      *
      ** Obtain next coupon date for current period
      *
     C           BCAD      ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Obtain last coupon date for current period
      *
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period Cum. or Ex
      *
     C                     Z-ADDBCAD      WRKD
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
     C                     ENDIF
      *
      ** Calculate interest for Ex period (SCUMEX = X)
      *
     C           SCUMEX    IFEQ 'X'
      *
      ** Calculate interest to Action date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDBCAD      ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    ACTWRK
      *
      ** Calculate interest to Next Coupon date
      *
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
     C           ACTWRK    SUB  NCDWRK    WRKPIX
     C                     ENDIF
      *
      ** Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
     C                     ENDIF
      *
      ** Calculate New Price from Action date
      *
     C                     Z-ADDYLDPRN    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     Z-ADDWNOML     ZNOML
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE 'Y'       ZACLT
     C                     EXSR ZPRCI
      *
      ** Reset day number accrued to and accrual type
      *
     C                     Z-ADD*ZERO     ZIDNAT
     C                     MOVE *BLANK    ZACLT
      *
      ** Update day number accrued to
      *
     C                     Z-ADDZODNAT    DNAT
      *
      ** Calculate amount to amortise
      *
     C           ZPRCOT    SUB  LAVN      ZPRC
     C                     Z-ADDNPSN      ZNOML
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WADN
      *
      ** Return old Event Control Date
      *
     C                     Z-ADDECDPRV    ECD
      *
     C           AAENN     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AAMORC - Calculate amortisation for Available for sale Book  *
      *                                                               *
      *****************************************************************
      *
     C           AAMORC    BEGSR
      *
     C                     Z-ADDMATY      WMATY   50
     C                     Z-ADDLAMDAT    WLMDAT  50
     C                     Z-ADDBCAD      WBCAD   50
      *
     C                     Z-ADD0         WWADP  130
     C                     Z-ADD0         WWEDN
      *
     C                     MOVELSESN      CSDSN
     C                     MOVE 'AL'      CSDET
     C                     Z-ADDZSDATE    CSDED
     C           SEKEY1    SETGTSEDEVAL1
     C                     READPSEDEVAL1                 79
     C           *IN79     IFEQ *ON
     C           C#SDSN    ORNE CSDSN
     C           C#SDET    ORNE 'AL'
     C           *LOCK     IN   LDA
     C                     MOVE 'SEDEVD'  DBFILE
     C                     Z-ADD51        DBASE
     C                     MOVEL'INIT AL' DBKEY
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     MOVE '1'       *INLR
     C                     ELSE
     C                     Z-ADDC#SDAL    WALDT1
     C                     ENDIF
      *
     C           *IN79     DOUEQ*ON
     C           C#SDSN    ORNE CSDSN
     C           C#SDET    ORNE 'AL'
     C           C#SDED    ORGE WBCAD
      *
      ** Read next 'AL' record
      *
     C                     READ SEDEVAL1                 79
      *
      ** If found, set the dates
      *
     C           *IN79     IFEQ *OFF
     C           C#SDSN    ANDEQCSDSN
     C           C#SDET    ANDEQ'AL'
     C           C#SDED    ANDLEBCAD
     C                     Z-ADDC#SDED    BCAD
     C                     Z-ADDC#SDAL    WALDT2
     C                     ELSE
     C                     Z-ADDWKBCAD    BCAD
     C                     Z-ADDWALDT1    WALDT2
     C                     ENDIF
     C                     Z-ADDWALDT1    MATY
     C           WAMORT    IFEQ 'N'
     C                     EXSR AAMORN
     C                     ELSE
     C                     EXSR AAMORT
     C                     ENDIF
      *
     C           WAMORT    IFEQ 'N'
     C                     ADD  WADN      WWEDN
     C                     ELSE
     C                     ADD  WADP      WWADP
     C                     ENDIF
      *
     C                     Z-ADDBCAD      LAMDAT
     C                     Z-ADDWALDT2    WALDT1
     C                     ENDDO
      *
     C           WAMORT    IFEQ 'N'
     C                     Z-ADDWWEDN     WADN
     C                     ELSE
     C                     Z-ADDWWADP     WADP
     C                     ENDIF
      *
     C                     Z-ADDWMATY     MATY
     C                     Z-ADDWLMDAT    LAMDAT
     C                     Z-ADDWBCAD     BCAD
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  FVAL   - SUBROUTINE TO PRODUCE FACE VALUE KEYS               *
      *                                                               *
      *****************************************************************
      *
     C           FVAL      BEGSR                           ***  FVAL  ***
      *
      ** CALCULATE FACE VALUE
      *
     C                     Z-ADDBCNL      WFVAL
     C           PPDI      IFEQ 'Y'
     C                     MOVE BCTA      BCTA3
     C           BCTA3     DIV  100       WBCTA     H
     C                     END
      *
      ***  Calculate Trade/Position Factor Discrepancy.
      *
     C           PROT      IFEQ '8'
     C           WFVAL     MULT BCCF      DFVAL  130H
     C           WFVAL     MULT AAPR      XFVAL  130H
     C           XFVAL     SUB  DFVAL     DFVAL
     C                     END
      *
      ***  Check whether one or two Keys are required. (Two Keys are
      ***  required where Nominal Position changes from Positive to
      ***  Negative, or vice versa OR ICD requires Negative Position).
      *
     C           NPAC      IFEQ 'N'
     C           *IN42     OREQ '1'
     C           *IN43     OREQ '1'
     C                     MOVE '1'       *IN22
     C                     ELSE
     C                     MOVE '1'       *IN23
     C                     END
      *
      ** OUTPUT FIRST ACCOUNT KEY FOR FACE VALUE
      *
     C                     MOVE BCTV      EVTP
     C                     MOVE BCPS      TRTP
      *
     C           C1DI      IFEQ 'M'
     C                     MOVE ' '       PORT
     C                     ELSE
     C                     MOVE C1DI      PORT
     C                     END
      *
     C           TSAK      IFEQ 'Y'
     C                     MOVE BCTP      TRST
     C                     ELSE
     C                     MOVE '  '      TRST
     C                     END
      *
     C           *IN22     IFEQ '1'
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     Z-ADDWFVAL     EVAM
      *
     C                     ELSE
      *
     C           PNPSN     IFLT 0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C           PNPSN     IFLT 0
     C           PNPSN     MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPNPSN     EVAM
     C                     END
      *
     C                     END
      *
     C                     MOVE 'FV'      AMCD
     C                     MOVE TRCP      CSTN
     C                     MOVE BCTR      TRFR
     C           5         SUB  NMDP      DC
     C                     ADD  CDP       DC
     C                     MULT POWER8,DC EVAM
      *
     C           PPDI      IFEQ 'Y'
     C           EVAM      MULT WBCTA     EVAM      H
     C                     END
      *
     C           PROT      IFEQ '8'
     C           EVAM      MULT AAPR      EVAM      H
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** OUTPUT SECOND ACCOUNT KEY IF REQUIRED TO CREATE NEW POSITION
      *
     C           *IN23     IFEQ '1'
      *
     C           NPSN      IFLT 0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C           NPSN      IFLT 0
     C           NPSN      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDNPSN      EVAM
     C                     END
      *
     C           5         SUB  NMDP      DC
     C                     ADD  CDP       DC
     C                     MULT POWER8,DC EVAM
      *
     C           PPDI      IFEQ 'Y'
     C           EVAM      MULT WBCTA     EVAM      H
     C                     END
      *
     C           PROT      IFEQ '8'
     C           EVAM      MULT AAPR      EVAM      H
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
      ***  Post Factor Difference Amount.
      *
     C           PROT      IFEQ '8'
     C                     MOVE 'FD'      AMCD
     C                     Z-ADDDFVAL     EVAM
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
      ** Calculate partly paid face value for use in P10
      *
     C           PPDI      IFEQ 'Y'
     C           WFVAL     MULT WBCTA     WFVAL     H
     C                     END
      *
     C           EFVAL     ENDSR                           *** EFVAL  ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  CONS   - SUBROUTINE TO PRODUCE CONSIDERATION KEYS            *
      *                                                               *
      *****************************************************************
      *
     C           CONS      BEGSR                           ***  CONS  ***
      *
      ***  Check whether one or two Keys are required. (Two Keys are
      ***  required where Nominal Position changes from Positive to
      ***  Negative, or vice versa OR ICD requires Negative Position).
      *
     C                     MOVEA'00'      *IN,22
     C           NPAC      IFEQ 'N'
     C           *IN42     OREQ '1'
     C           *IN43     OREQ '1'
     C                     MOVE '1'       *IN22
     C                     ELSE
     C                     MOVE '1'       *IN23
     C                     END
      *
      ** OUTPUT FIRST ACCOUNT KEY FOR CONSIDERATION
      *
     C                     MOVE BCTV      EVTP
     C                     MOVE BCPS      TRTP
      *
     C           C1DI      IFEQ 'M'
     C                     MOVE ' '       PORT
     C                     ELSE
     C                     MOVE C1DI      PORT
     C                     END
      *
     C           TSAK      IFEQ 'Y'
     C                     MOVE BCTP      TRST
     C                     ELSE
     C                     MOVE '  '      TRST
     C                     END
      *
      ** Calculate consideration 'CO' using contract price if
      ** different from trade price and NPAC = 'Y'.
      *
     C           CNTP      IFNE BCTD
     C           NPAC      ANDEQ'Y'
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WZCONS 150
     C                     MOVE 'Y'       WZPRIC
     C                     ELSE
     C                     MOVE 'N'       WZPRIC  1
     C                     ENDIF
      *
      ***  Calculate Position Consideration and Factor Difference.
      *
     C           PROT      IFEQ '8'
     C           WZPRIC    IFEQ 'Y'
     C           WZCONS    MULT AAPR      XCONS  150H
     C           WZCONS    MULT BCCF      DCONS  150H
     C                     ELSE
     C           BCCN      MULT AAPR      XCONS  150H
     C           BCCN      MULT BCCF      DCONS  150H
     C                     ENDIF
     C           DCONS     SUB  XCONS     DCONS
     C                     END
      *
     C           *IN22     IFEQ '1'
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C           PROT      IFNE '8'
     C           WZPRIC    IFEQ 'Y'
     C                     Z-ADDWZCONS    EVAM
     C                     ELSE
     C                     Z-ADDBCCN      EVAM
     C                     ENDIF
     C                     END
      *
     C                     ELSE
      *
     C           PNPSN     IFLT 0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C                     Z-ADD*ZEROS    WCONS  150
     C                     Z-ADD*ZEROS    WCONSN 150
      *
      **Convert event amount for Nominal Dec Places
      *
     C                     Z-ADDPNPSN     ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONS
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDPNPSN     ZNOML
     C                     Z-ADDCNTN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONSN
     C                     ENDIF
      *
     C           PROT      IFEQ '8'
     C           WCONS     MULT AAPR      WCONS     H
     C                     END
      *
     C                     Z-ADDWCONS     EVAM
      *
     C           EVAM      IFLT 0
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C                     END
      *
     C           WZPRIC    IFEQ 'Y'
     C                     Z-ADDWZCONS    EVAM
     C                     ELSE
     C                     Z-ADDBCCN      EVAM
     C                     END
     C                     MOVE 'CO'      AMCD
     C                     MOVE TRCP      CSTN
     C                     MOVE BCTR      TRFR
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** If PROT  = 8   BCNN already used the current factor so need to f
      *                 the conideration amount with AAPR
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDBCTD      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONS     H
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWCONS     WCONSN
     C                     ENDIF
      *
      ** OUTPUT SECOND ACCOUNT KEY IF REQUIRED TO POST NEW POSITION
      *
     C           *IN23     IFEQ '1'
      *
     C           NPSN      IFLT 0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C                     Z-ADD*ZEROS    WCONS  150
     C                     Z-ADD*ZEROS    WCONSN
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONS
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDCNTN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONSN
     C                     ENDIF
      *
     C           PROT      IFEQ '8'
     C           WCONS     MULT AAPR      WCONS     H
     C                     END
      *
     C                     Z-ADDWCONS     EVAM
      *
     C           EVAM      IFLT 0
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     END
      *
      ** If PROT  = 8   BCNN already used the current factor so need to f
      *                 the conideration amount with AAPR
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDBCTD      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCONS     H
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWCONS     WCONSN
     C                     ENDIF
      *
      ***  Post Factor Difference Amount.
      *
     C           PROT      IFEQ '8'
     C                     MOVE 'CD'      AMCD
     C                     Z-ADDDCONS     EVAM
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
     C                     END
      *
     C           ECONS     ENDSR                           *** ECONS  ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  CLOSE  - SUBROUTINE TO ACCESS HISTORIC TRADE ACTIONS FOR     *
      *           FIFO ACCOUNTING                                     *
      *                                                               *
      *****************************************************************
      *
     C           CLOSE     BEGSR                           *** CLOSE  ***
      *
      ***  Store current Action record so that fields may temporarily
      ***  be used by chain to HTRACT.
      *
     C                     MOVELRECIN     STREC
      *
      ** CLEAR INCREMENT FIELDS FOR ACCUMULATION
      *
     C                     Z-ADD0         APINC  150
     C                     Z-ADD0         APINN  150
      *
      ** - Maintain Original Cost
      *
     C                     Z-ADD0         APCST  150
     C                     Z-ADD0         FXINC  150
     C                     Z-ADD0         RPLINC 150
     C                     Z-ADD0         OSNOM  150
     C                     Z-ADD0         WKCNTP 158
      *
      ** Set up accumulator for 'Unamortized Discount/Premium
      ** Liquidated'.
      *
     C                     Z-ADD0         UDPLIQ 150
      *
      ** ACCESS HISTORIC TRADE ACTIONS BY TRADE
      *
     C                     MOVE BHTR      KBHTR
      *
     C                     MOVEA'000'     *IN,04
     C           HTTKEY    CHAINHTRACT               87
     C           *IN87     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVE 'HTRAC'   DBFILE           **************
     C                     MOVELBHTR      KEY7    7        * DB ERROR 20
     C                     MOVE BHTV      KEY7             **************
     C                     MOVELKEY7      DBKEY
     C                     Z-ADD20        DBASE
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO ECLOSE
     C                     END
      *
     C                     EXCPTRELACT
      *
      ***  For discounted instruments, historic price used for realized
      ***  P/L calculations must reflect discount already amortized.
      ***  This is achieved by converting the historic percentage price
      ***  into a discount rate, then converting the result back into a
      ***  percentage price as of the VALUE date of the liquidation.
      ***  Use Contract Prices if Position is Non-Discounted, or if
      ***  Value Dates of Historic Trade and Liquidation are the same.
      *
     C                     Z-ADDHCNTP     HSTPRC 158
     C                     Z-ADDCNTP      CNTPRC 158
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDHCNTN     HSTPRN 158
     C                     Z-ADDCNTN      CNTPRN 158
     C                     ENDIF
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      ***  For a Discounted Value Date Position, convert the Historic
      ***  Price to a Discount Rate, then back to a Percentage Price
      ***  as at the Value Date of the Liquidation.
      *
     C           BCTV      IFEQ 'V'
     C           BCAD      ANDNEHBCAD
     C                     Z-ADDHCNTP     ZPRICE
     C                     Z-ADDHBCAD     ZFDATE
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     EXSR ZPRCI
     C                     Z-ADDZPRCOT    HSTPRC
     C                     Z-ADDCNTP      CNTPRC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDHCNTN     ZPRICE
     C                     Z-ADDHBCAD     ZFDATE
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     EXSR ZPRCI
     C                     Z-ADDZPRCOT    HSTPRN
     C                     Z-ADDCNTN      CNTPRN
     C                     ENDIF
      *
     C                     END
     C                     END
     C                     END
      *
      ** Recalculate Premium/Discount based on FIFO trade
      *
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WPCON  150
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     ENDIF
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCON  150
      *
      ** Premium / Discount equal Consideration minus Nominal
      ** This premium/discount per trade is used in computing amortised
      ** amount to be added to sale cost.
      *
     C           WPCON     SUB  WBCON     WPRDS  150
      *
      *---------------------------------------------------------------*
      * FOR FIFO REMAINING NOMINAL GREATER THAN CURRENT TRADE NOMINAL *
      *---------------------------------------------------------------*
      *
     C           BHRN      IFGT BCNL
      *
      ** - CALCULATE INCREMENT TO AP NUMERATOR
      *
     C                     Z-ADD*ZEROS    WBCCN  150
     C                     Z-ADD*ZEROS    WBCNN  150
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCCN
      *
     C                     ADD  WBCCN     APINC
      *
      ** Get the Amortised Amount proportion to Sale Nominal
      *
     C                     EXSR TAMOR
      *
     C           BCNL      DIV  HBCNL     WWAM   159H
     C           WWAM      MULT WTAMOR    WWPL   150H
      *
     C                     SUB  WWPL      APINC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDHSTPRN    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCNN
      *
     C                     ADD  WBCNN     APINN
     C                     ENDIF
      *
      ** - Maintain Original Cost
      *
     C                     ADD  HBCCN     APCST
      *
      ** For sale, amount should be negative
      *
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBAPINC     APINC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-SUBAPINN     APINN
     C                     ENDIF
     C                     END
      *
     C                     Z-SUBAPCST     APCST
      *
      *** Calculate POSN Purch Int on a FIFO basis
      *
     C           HPCHI     IFNE 0
     C           HACRI     ANDNE'X'
     C           XXLCCP    ANDEQLCCP
      *
     C                     Z-ADDHPCHI     ZAPIN
     C                     Z-ADDBCNL      ZNPSN
     C                     Z-ADDHBCNL     ZPNPSN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WBCP1
     C                     ELSE
     C                     Z-ADD0         WBCP1
     C                     END
      *
      **  - CALCULATE NEW FIFO REMAINING NOMINAL
      **       (1ST TRADE REF FIELD UNCHANGED)
      *
     C           BHRN      SUB  BCNL      BHRN
      *
      ** If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE FX AP INCREMENT & LATEST FX AVERAGE PRICE
      *
     C           BCNL      DIV  HBCNL     WFACT
     C           WFACT     MULT HCFAP     FXINC
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBFXINC     FXINC
     C                     END
     C           LFXP      SUB  FXINC     LFXP
      *
     C                     END
      *
     C                     GOTO ECLOSE
     C                     END
      *
      *---------------------------------------------------------------*
      * FOR FIFO REMAINING NOMINAL EQUAL TO CURRENT TRADE NOMINAL     *
      *---------------------------------------------------------------*
      *
     C           BHRN      IFEQ BCNL
      *
      *   - CALCULATE INCREMENT TO AP NUMERATOR
      *
     C                     Z-ADD*ZEROS    WBCCN  150
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCCN
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDHSTPRN    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCNN
     C                     ADD  WBCNN     APINN
     C                     ENDIF
      *
     C                     ADD  WBCCN     APINC
      *
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WPCON
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     ENDIF
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCON
      *
     C           WPCON     SUB  WBCON     WPRDS  150
      *
     C                     EXSR TAMOR
      *
     C           BCNL      DIV  BHRN      WWAM   159H
     C           WWAM      MULT WTAMOR    WWPL   150H
      *
     C                     SUB  WWPL      APINC
      *
      ** Maintain Original Cost
      *
     C                     ADD  HBCCN     APCST
      *
      *
      ** For sale, amount should be negative
      *
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBAPINC     APINC
      *
      ** - Maintain Original Cost
      *
     C                     Z-SUBAPCST     APCST
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-SUBAPINN     APINN
     C                     ENDIF
      *
     C                     END
      *
      *** Calculate POSN Purch Int on a FIFO basis
      *
     C           HPCHI     IFNE 0
     C           HACRI     ANDNE'X'
     C           XXLCCP    ANDEQLCCP
      *
     C                     Z-ADDHPCHI     ZAPIN
     C                     Z-ADDBHRN      ZNPSN
     C                     Z-ADDHBCNL     ZPNPSN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WBCP1
     C                     ELSE
     C                     Z-ADD0         WBCP1
     C                     END
      *
      ** - OBTAIN NEW FIFO 1ST TRADE REF AND NOMINAL FROM NEXT HISTORIC
      **        TRADES ACTION
      *
     C                     MOVE TRKEY     KTRKEY
     C                     Z-ADDHBCAD     KDTE
     C                     MOVE BHTR      KREF
      *
     C                     MOVEA'000'     *IN,07
      *
      ** Following CHAIN changed to SETGT for consistency.
      *
     C           HTBKEY    SETGTHTRACB
     C                     SETOF                     86
      *
     C           *IN86     DOWEQ'0'
     C           HTBKY2    READEHTRACB                   86
      *
     C           *IN86     IFEQ '1'
     C                     MOVE *BLANKS   BHTR
     C                     Z-ADD*ZEROS    BHRN
     C                     END
      *
     C           *IN86     IFEQ '0'
      *
      **   In selecting new FIFO trade, must disregard Reversal Actions!
      *
     C           HBCRV     ANDNE'Y'
      *
     C           PNPSN     IFGE 0
     C           HBCPS     ANDEQ'P'
     C           PNPSN     ORLT 0
     C           HBCPS     ANDEQ'S'
     C                     MOVE HBCTR     BHTR
     C                     Z-ADDHBCNL     BHRN
     C                     MOVE '1'       *IN86
     C                     END
     C                     END
     C                     END
      *
      ** If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE FX AP INCREMENT & LATEST FX AVERAGE PRICE
      *
     C           BCNL      DIV  HBCNL     WFACT
     C           WFACT     MULT HCFAP     FXINC
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBFXINC     FXINC
     C                     END
     C           LFXP      SUB  FXINC     LFXP
      *
     C                     END
      *
     C                     GOTO ECLOSE
     C                     END
      *
      *---------------------------------------------------------------*
      * IF FIFO REMAINING NOMINAL IS LESS THAN CURRENT TRADE NOMINAL  *
      *---------------------------------------------------------------*
      *
     C           BHRN      IFLT BCNL
      *
      **  - CALCULATE INCREMENT TO AP NUMERATOR
      *
     C                     Z-ADDBHRN      ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCCN
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBHRN      ZNOML
     C                     Z-ADDHSTPRN    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCNN
     C                     ADD  WBCNN     APINN
     C                     ENDIF
      *
     C                     ADD  WBCCN     APINC
      *
      ** Calculate Premium/Discount of Trade in history
      *
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WPCON
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     ENDIF
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCON
      *
     C           WPCON     SUB  WBCON     WPRDS  150
      *
     C                     EXSR TAMOR
      *
     C           BHRN      DIV  HBCNL     WWAM   159H
     C           WWAM      MULT WTAMOR    WWPL   150H
      *
     C                     SUB  WWPL      APINC
      *
      ** Maintain Original Cost
      *
     C                     Z-ADDBHRN      ZNOML
     C                     Z-ADDHCNTP     ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APCST
      *
      ** For sale, amount should be negative
      *
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBAPINC     APINC
      *
      ** - Maintain Original Cost
      *
     C                     Z-SUBAPCST     APCST
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-SUBAPINN     APINN
     C                     ENDIF
      *
     C                     END
      *
      ** If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE FX AP INCREMENT
      *
     C           BHRN      DIV  HBCNL     WFACT
     C           WFACT     MULT HCFAP     FXINC
     C           HBCPS     IFEQ 'S'
     C                     Z-SUBFXINC     FXINC
     C                     END
      *
     C                     END
      *
      *** Calculate POSN Purch Int on a FIFO basis
      ***    - Reduce Current PI posted to zero
      *
     C           HPCHI     IFNE 0
     C           HACRI     ANDNE'X'
     C           XXLCCP    ANDEQLCCP
      *
     C                     Z-ADDHPCHI     ZAPIN
     C                     Z-ADDBHRN      ZNPSN
     C                     Z-ADDHBCNL     ZPNPSN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WBCP1
     C                     ELSE
     C                     Z-ADD0         WBCP1
     C                     END
      *
      ** - SET OUTSTANDING NOMINAL ON CURRENT TRADE
      **  INFO: After the subtraction below, OSNOM WILL be > zero.
      *
     C           BCNL      SUB  BHRN      OSNOM
      *
      ** - UNTIL NOM ON TRADE REDUCED TO ZERO OR -VE, READ THROUGH HISTOR
      **     TRADE ACTIONS RECALCULATING O/S NOMINALS EACH TIME
      **      AND THEN SETTING FIFO FIELDS ON BKPHDD
      *
     C                     MOVE TRKEY     KTRKEY
     C                     Z-ADDHBCAD     KDTE
     C                     MOVE BHTR      KREF
      *
     C           HTBKEY    SETGTHTRACB
     C                     SETOF                     86
     C           *IN86     DOWEQ'0'
     C           HTBKY2    READEHTRACB                   86
      *
     C           *IN86     IFEQ '1'
     C                     MOVE BCTR      BHTR
     C                     Z-ADDOSNOM     BHRN
     C                     END
      *
     C           *IN86     IFEQ '0'
     C           BCAD      IFLT HBCAD
     C           BCAD      OREQ HBCAD
     C           BCTR      ANDEQHBCTR
     C                     MOVE BCTR      BHTR
     C                     Z-ADDOSNOM     BHRN
     C                     MOVE '1'       *IN86
     C                     END
     C                     END
      *
     C           *IN86     IFEQ '0'
      *
      **  In selecting new FIFO trade, must disregard Reversal Actions.
      *
     C           HBCRV     ANDNE'Y'
      *
     C           PNPSN     IFGE 0
     C           HBCPS     ANDEQ'P'
     C           PNPSN     ORLT 0
     C           HBCPS     ANDEQ'S'
      *
      ***  For discounted instruments, historic price used for realized
      ***  P/L calculations must reflect discount already amortized.
      ***  Use Contract Prices if Position is Non-Discounted, or if
      ***  Value Dates of Historic Trade and Liquidation are the same.
      *
     C                     Z-ADDHCNTP     HSTPRC
     C                     Z-ADDCNTP      CNTPRC
      * Recalculate Premium/Discount
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WPCON  150
      *
     C           SPBS      IFEQ 'P'
     C                     Z-ADD100       ZPRC
     C                     ELSE
     C                     Z-ADD1         ZPRC
     C                     ENDIF
      *
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCON  150
      *
     C           WPCON     SUB  WBCON     WPRDS
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDHCNTN     HSTPRN
     C                     Z-ADDCNTN      CNTPRN
     C                     ENDIF
      *
     C           MATY      IFNE 99999
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           STBS      OREQ 'D'
     C           GDPK      ANDEQ'Y'
      *
      *
      ***  For a Discounted Value Date Position, convert the Historic
      ***  Price to a Discount Rate, then back to a Percentage Price
      ***  as at the Value Date of the Liquidation.
      *
     C           BCTV      IFEQ 'V'
     C           BCAD      ANDNEHBCAD
     C                     Z-ADDHCNTP     ZPRICE
     C                     Z-ADDHBCAD     ZFDATE
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     EXSR ZPRCI
     C                     Z-ADDZPRCOT    HSTPRC
     C                     Z-ADDCNTP      CNTPRC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDHCNTN     ZPRICE
     C                     Z-ADDHBCAD     ZFDATE
     C                     EXSR ZPRCO
     C                     Z-ADDZPRCOT    ZPRCIN
     C                     Z-ADDBCAD      ZFDATE
     C                     EXSR ZPRCI
     C                     Z-ADDZPRCOT    HSTPRN
     C                     Z-ADDCNTN      CNTPRN
     C                     ENDIF
      *
     C                     END
     C                     END
     C                     END
      *
      ** - CALCULATE INCREMENT TO AP NUMERATOR
      *
     C           OSNOM     IFGE HBCNL
      *
      ** If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** Calculate FX AP Increment
      *
     C                     Z-ADDHCFAP     WFXINC 150
      *
     C                     END
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WAPINC
      *
     C                     EXSR TAMOR
      *
     C           HBCNL     DIV  HBCNL     WWAM   159H
     C           WWAM      MULT WTAMOR    WWPL   150H
      *
     C                     SUB  WWPL      WAPINC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHSTPRN    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WAPINN
     C                     ENDIF
      *
      ** Maintain Original Cost
      *
     C                     Z-ADDHBCNL     ZNOML
     C                     Z-ADDHCNTP     ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WAPCST 150
      *
     C                     ELSE
     C                     Z-ADD*ZEROS    WBCCN  150
     C                     Z-ADDOSNOM     ZNOML
     C                     Z-ADDHSTPRC    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCCN
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDOSNOM     ZNOML
     C                     Z-ADDHSTPRN    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WBCNN
     C                     Z-ADDWBCNN     WAPINN 150
     C                     ENDIF
      *
      *** Maintain Original Cost
      *
     C                     Z-ADDOSNOM     ZNOML
     C                     Z-ADDHCNTP     ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WAPCST
      *
     C                     Z-ADDWBCCN     WAPINC 150
      *
     C                     EXSR TAMOR
      *
     C           OSNOM     DIV  HBCNL     WWAM   159H
     C           WWAM      MULT WTAMOR    WWPL   150H
      *
     C                     SUB  WWPL      WAPINC
      *
      ** If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
     C           OSNOM     DIV  HBCNL     WFACT
     C           WFACT     MULT HCFAP     WFXINC 150
     C                     END
      *
     C                     END
      *
      ** For sale, amount should be negative
      ** - Maintain Original Cost
      *
     C           HBCPS     IFEQ 'S'
     C                     SUB  WAPINC    APINC
     C                     SUB  WAPCST    APCST
      *
     C           CAS006    IFEQ 'Y'
     C                     SUB  WAPINN    APINN
     C                     ENDIF
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
     C                     SUB  WFXINC    FXINC
     C                     END
     C                     ELSE
     C                     ADD  WAPINC    APINC
     C                     ADD  WAPCST    APCST
      *
     C           CAS006    IFEQ 'Y'
     C                     ADD  WAPINN    APINN
     C                     ENDIF
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
     C                     ADD  WFXINC    FXINC
     C                     END
     C                     END
      *
      *** Calculate POSN Purch Int on a FIFO basis
      ***    - Accumulate old PI to be cleared
      *
     C           HPCHI     IFNE 0
     C           HACRI     ANDNE'X'
     C           XXLCCP    ANDEQLCCP
      *
      ***  Proportionment below should be conditioned on 'Outstanding
      ***  Nominal to be Liquidated' being Less Than the 'Nominal of the
      ***  Trade being Liquidated', ELSE the whole Trade is Liquidated
      ***  and whole HPCHI should be added. Not having this condition
      ***  causes some very funny results.
      *
     C           OSNOM     IFLT HBCNL
      *
     C                     Z-ADDHPCHI     ZAPIN
     C                     Z-ADDOSNOM     ZNPSN
     C                     Z-ADDHBCNL     ZPNPSN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WBCP1
     C                     ELSE
     C                     ADD  HPCHI     WBCP1
     C                     END
      *
     C                     END
      *
     C           OSNOM     SUB  HBCNL     OSNOM
      *
      **  - IF O/S NOMINAL HAS BECOME -VE OR ZERO, SET BKPHDD FIELDS
      *
     C           OSNOM     IFEQ 0
      *
      ***  Keep reading Historic Trades by Book until a Trade is found
      ***  that is opposite P/S to the one currently being processed.
      ***  Don't need to worry about what happens if there are no more
      ***  Trades as Position is then flat and SR/P10 will set up new
      ***  BHTR/BHRN from the next Trade and this SR won't be called.
      *
     C           *IN85     DOUEQ'1'
     C           HTBKY2    READEHTRACB                   85
     C           *IN85     IFEQ '0'
     C           PNPSN     IFGE 0
     C           HBCPS     ANDEQ'P'
     C           PNPSN     ORLT 0
     C           HBCPS     ANDEQ'S'
     C                     MOVE HBCTR     BHTR
     C                     Z-ADDHBCNL     BHRN
     C                     MOVEA'11'      *IN,85
     C                     END
     C                     END
      *
     C                     END
      *
     C                     ELSE
     C           OSNOM     IFLT 0
     C                     MOVE HBCTR     BHTR
     C                     Z-SUBOSNOM     BHRN
     C                     MOVE '1'       *IN86
     C                     END
      *
     C                     END
     C                     END
     C                     ELSE
      *
      ***  Store New remaining FIFO Purch int. on a New Position
      *
     C           PCHI      IFNE 0
     C           ACRI      ANDNE'X'
      *
     C                     Z-ADDPCHI      ZAPIN
     C                     Z-ADDOSNOM     ZNPSN
     C                     Z-ADDBCNL      ZPNPSN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WBCP2
     C                     ELSE
     C                     Z-ADD0         WBCP2
     C                     END
      *
     C                     END
     C                     END
     C                     END
      *
      ** RESTORE CURRENT ACTION FIELDS
      *
     C           ECLOSE    TAG
      *
     C                     MOVELSTREC     RECIN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  TAMORT - SUBROUTINE TO PRODUCE AMORTISED AMOUNT IN EACH      *
      *           TRADE IN FIFO BASIS                                 *
      *                                                               *
      *****************************************************************
     C           TAMOR     BEGSR
      *
     C                     Z-ADDHBCAD     ZSDATE
     C                     Z-ADDMATY      ZEDATE
     C                     Z-ADD0         ZIDNAT
     C                     MOVE *BLANK    ZACLT
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WNDYM   50
      *
     C                     Z-ADDHBCAD     ZSDATE
     C                     Z-ADDLATD      ZEDATE
     C                     EXSR ZDAYS
     C                     Z-ADDZDDAYS    WNDYS1  50
      *
     C           WPRDS     DIV  WNDYM     WDAMOR 152H
     C           WDAMOR    MULT WNDYS1    WTAMOR 151H
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  REALPL - SUBROUTINE TO PRODUCE REALIZED PROFIT/LOSS KEYS     *
      *                                                               *
      *****************************************************************
      *
     C           REALPL    BEGSR                           *** REALPL ***
      *
      ** CLEAR WORKFIELD
      *
     C                     Z-ADD0         WRLPL
     C                     Z-ADD*ZEROS    WPRLS  150
      *
      ***  If the Trade is a Sale and Previous Nominal is Long OR Trade
      ***  is a Purchase and Previous Nominal is Short:
      *
      *
      ** - IF FIFO ACCOUNTING NOT REQUIRED
      *
      *
      *** P&L CALCULATION HAS BEEN CHANGED TO PREVENT ROUNDING ERRORS
      *** AND UNBALANCED ACCOUNTING ENTRIES.
      *** P&L =  CONTRACT VALUE - (CURRENT AP NUMERATOR  LESS
      *** PREVIOUS AP NUMERATOR
      *
     C                     MOVE 'N'       WUPD
     C           CSE065    IFEQ 'Y'
     C           BCAS      ANDEQ'60'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C           APNC      SUB  BKCOST    WPRLS
     C                     MOVE 'Y'       WUPD
     C                     ENDIF
     C                     ENDIF
     C           WUPD      IFEQ 'N'
     C           APNC      SUB  PAPNC     WPRLS
     C                     ENDIF
      *
     C                     SUB  WCAMT     WPRLS
      *
      ** Convert Realised P/L Amount
      *
     C           PROT      IFEQ '8'
     C           WPRLS     MULT AAPR      WPRLS     H
     C                     END
      *
     C           BCAS      IFNE '60'
      *
     C           NPAC      IFEQ 'Y'
     C           PNPSN     ANDLT0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C                     ELSE
      *
     C           NPAC      IFEQ 'Y'
     C           NPSN      ANDLT0
     C                     MOVE 'N'       NEGI
     C                     ELSE
     C                     MOVE ' '       NEGI
     C                     END
      *
     C                     END
      *
     C                     Z-ADDWPRLS     WRLPL
      *
      ** WRITE REALISED P/L KEY UNLESS ENTRIES ARE TO BE SUPPRESSED
      *
     C           BCTV      IFNE SKTD
      *
     C                     MOVE BCTV      EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE '  '      TRST
     C                     MOVE ' '       PORT
      *
     C           WRLPL     IFGT 0
     C                     MOVE 'RP'      AMCD
     C                     Z-ADDWRLPL     EVAM
     C                     ELSE
     C                     MOVE 'RL'      AMCD
     C           WRLPL     MULT -1        EVAM
     C                     END
      *
     C                     MOVE ISSR      CSTN
     C           *IN24     IFEQ '1'
     C                     MOVE BCTR      TRFR
     C                     ELSE
     C                     MOVE *ZEROS    TRFR
     C                     END
      *
     C                     Z-ADDWRLPL     WBCPL
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** If security is defined as available for sale,
      ** calculate Book Value Change and Equity Amount
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           BCTV      ANDEQ'V'
      *
     C           STAD      IFEQ 'C'
     C           STAD      OREQ 'Y'
     C                     EXSR P06
     C                     EXSR P07
     C                     ENDIF
     C                     ENDIF
      *
     C                     END
      *
      ** IF PROFIT BASIS IS BOTH, PRODUCE TODAY'S PROFIT
      *
     C           RPBS      IFEQ 'B'
     C                     Z-ADDWRLPL     WBCPL
     C                     END
      *
      ** ACCUMULATE TOTAL REALISED P/L POSTED ON POSITION FOR THIS ACTION
      *
      ** ADD TO REALISED PROFIT ONLY IF NOT FROM MARK TO MARKET REVAL.
      *
     C           BCAS      IFNE '60'
     C                     ADD  WRLPL     WRPTP
     C                     ELSE
     C                     Z-ADDWRLPL     WBCPL
     C                     END
      *
      ** No longer need to accumulate realized P/L from BPACHD records.
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AVPR   - SUBROUTINE TO CALCULATE AVERAGE PRICE               *
      *                                                               *
      *****************************************************************
      *
     C           AVPR      BEGSR                           ***  AVPR  ***
      *
      ** CHANGE AVERAGE PRICE FOR SALE(NEW NP SHORT) OR PURCHASE(NEW    NP
      **   LONG)
      *
      ** - STORE PREVIOUS AVERAGE PRICE
      *
     C                     Z-ADDLAVP      PLAVP  158
      *
      ** - STORE PREV AP NUMERATOR
      *
     C                     Z-ADDAPNC      PAPNC
      *
      ** - CHECK SALE OR PURCHASE
      *
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCAMT  150
      *
      ** For sale, amount should be negative
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBWCAMT     WCAMT
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCNL      ZNOML
     C                     Z-ADDCNTN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WCAMN  150
      *
      ** For sale, amount should be negative
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBWCAMN     WCAMN
     C                     ENDIF
     C                     ENDIF
      *
      ** - UPDATE AP NUMERATOR/BOOK COST IN BASE CCY AND AVERAGE PRICE
      *
      ** *IN41 = SHORT TO LONG OR LONG TO SHORT
      ** -        TO   + OR 0   (PURCHASE)
      **               + OR 0   TO   -        (SALE)
      *
     C           *IN42     IFEQ '0'
     C           *IN41     IFEQ '1'
     C           PNPSN     ANDNE0
     C                     Z-ADDCNTP      WNAP   158
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDCNTN      WNAN   158
     C                     ENDIF
      *
      ** Reformat amount, allowing for nominal & currency decimal places
      *
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WAPN   150
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDCNTN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     WANN   150
     C                     ENDIF
      *
      ** - Maintain Original Cost
      *
     C                     Z-ADDZCONS     ANMP
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE FX AVERAGE PRICE NUMERATOR
      *
     C           NPSN      DIV  BCNL      WFACT  238
     C           WFACT     MULT CFAP      FXAP
      *
     C                     END
      *
     C                     ELSE
      *
      **  *IN43 = LONG TO LONG OR SHORT TO SHORT
      **          + OR 0   TO   +        (PURCHASE)
      **          -        TO   -        (SALE)
      *
     C           APNC      ADD  WCAMT     WAPN
      *
     C           CAS006    IFEQ 'Y'
     C           APNN      ADD  WCAMN     WANN
     C                     ENDIF
      *
      ** Maintain Original Cost
      *
     C           ANMP      ADD  WCAMT     ANMP
      *
      ** - CHECK NOMINAL FOR ZERO
      *
     C           NPSN      IFEQ 0
      *
      ** Following line unnecessary.
      *
     C                     Z-ADD0         WNAP
     C                     Z-ADD0         WNAN
     C                     ELSE
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDWAPN      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      WNAP
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDWANN      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      WNAN
     C                     ENDIF
      *
     C                     END
      *
      **  If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** ADD CHANGE TO FX AP TO FXAP
      *
     C           BCPS      IFEQ 'S'
     C           FXAP      SUB  CFAP      FXAP
     C                     ELSE
     C           FXAP      ADD  CFAP      FXAP
     C                     END
      *
     C                     END
      *
     C                     END
      *
      ** SIGN PRICE POSITIVE
      *
     C           WNAP      IFLT 0
     C           WNAP      MULT -1        WNAP
      *
     C           CAS006    IFEQ 'Y'
     C           WNAN      MULT -1        WNAN
     C                     ENDIF
      *
     C                     END
      *
      ** RESET AVERAGE PRICE FOR BOOK POSITION AND HEADER
      *
     C                     Z-ADDWAPN      APNC
     C                     Z-ADDWNAP      APPB
     C                     Z-ADDWNAP      LAVP
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
      *
     C           *IN42     IFEQ '0'
     C           *IN41     IFEQ '1'
     C           PNPSN     ANDEQ0
     C                     Z-ADDCNTP      NAVP
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDCNTP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     BKCOST
     C                     ELSE
     C           BKCOST    ADD  WCAMT     BKCOST
     C           NPSN      IFEQ 0
     C                     Z-ADD0         NAVP
     C                     ELSE
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDBKCOST    ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      NAVP
     C                     ENDIF
     C                     ENDIF
      *
     C           NAVP      IFLT 0
     C           NAVP      MULT -1        NAVP
     C                     ENDIF
      *
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWANN      APNN
     C                     Z-ADDWNAN      APPN
     C                     Z-ADDWNAN      LAVN
     C                     ENDIF
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
     C                     Z-ADDFXAP      LFXP
     C                     END
      *
     C                     ELSE
      *
      ** UPDATE PRICE AND NUMERATOR FIELDS IF FIFO ACCOUNTING NOT
      **    REQUIRED
      *
     C           FIFO      IFNE 'Y'
      *
      **  *IN41 = SHORT TO LONG OR LONG TO SHORT
      **          -        TO   0 OR +   (PURCHASE)
      **          + OR 0   TO   -        (SALE)
      *
     C                     Z-ADDLAVP      APPB
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDLAVN      APPN
     C                     ENDIF
      *
      ** Reformat amount, allowing for nominal decimal places
      *
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNC
      *
      ** Maintain Mark to Market Book Price
      *
     C           CSE065    IFEQ 'Y'
     C           PROT      ANDNE'2'
     C           PROT      ANDNE'4'
     C           PROT      ANDNE'7'
     C           STAD      IFEQ 'Y'
     C           STAD      OREQ 'C'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDNAVP      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     BKCOST
     C                     ENDIF
     C                     ENDIF
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDLAVN      ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     APNN
     C                     ENDIF
      *
      ** - Maintain Original Cost
      *
     C                     Z-ADDANMP      ZAPNC
     C                     Z-ADDPNPSN     ZNOML
     C                     EXSR ZAVPR
     C                     Z-ADDNPSN      ZNOML
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     ANMP
      *
      **  If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE FX AVERAGE PRICE NUMERATOR
      *
     C           NPSN      DIV  PNPSN     WFACT
     C           WFACT     MULT LFXP      FXAP
     C                     Z-ADDFXAP      LFXP
      *
     C                     END
      *
     C                     ELSE
      *
      ** - Maintain Original Cost
      *
     C           ANMP      SUB  APCST     ANMP
      *
     C           APNC      SUB  APINC     APNC
      *
     C           CAS006    IFEQ 'Y'
     C           APNN      SUB  APINN     APNN
     C                     ENDIF
      *
      **  If Portfolio Management is present
      *
     C           BGPFMG    IFEQ 'Y'
     C           BGN4ST    OREQ 'Y'
      *
      ** CALCULATE LATEST FX AVERAGE PRICE NUMERATOR
      *
     C           FXAP      SUB  FXINC     FXAP
     C                     Z-ADDFXAP      LFXP
      *
     C                     END
      *
      ***  If NPSN is zero, Avg. Price fields should be zero as well.
      *
      *
     C           NPSN      IFEQ 0
      *
     C                     Z-ADD0         LAVP
     C                     Z-ADD0         APPB
     C                     Z-ADD0         APNC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADD0         LAVN
     C                     Z-ADD0         APPN
     C                     Z-ADD0         APNN
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDAPNC      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      LAVP
     C                     Z-ADDZPRC      APPB
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDAPNN      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      LAVN
     C                     Z-ADDZPRC      APPN
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     END
      *
      ** MUST CLEAR APINC HERE!!! ELSE FIFO AVERAGE PRICE CORRUPTED!!!
      *
     C                     Z-ADD0         APINC
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADD0         APINN
     C                     ENDIF
      *
      ** - Maintain Original Cost
      *
     C                     Z-ADD0         APCST
      *
     C                     MOVEL'N'       AMTDP   1
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AVPRAM - SUBROUTINE TO UPDATE AVERAGE PRICE AFTER AMORTIZING *
      *                                                               *
      *****************************************************************
      *
     C           AVPRAM    BEGSR                           *** AVPRAM ***
      *
      ** ADD ANY AMOUNT AMORTIZED INTO THE AP NUMERATOR
      ** AND RECALCULATE THE AVERAGE PRICE
      *
     C           AMTDP     IFEQ 'Y'
      *
     C           NPSN      IFEQ 0
     C                     Z-ADDAPNC      APPB
     C                     ELSE
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDAPNC      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      APPB
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           NPSN      IFEQ 0
     C                     Z-ADDAPNN      APPN
     C                     ELSE
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDAPNN      ZAPNC
     C                     EXSR ZAVPR
     C                     Z-ADDZPRC      APPN
     C                     ENDIF
     C                     ENDIF
      *
     C                     Z-ADDAPPB      LAVP
     C                     Z-ADDAPPB      PLAVP
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDAPPN      LAVN
     C                     ENDIF
      *
     C                     END
      *
     C                     MOVEL'N'       AMTDP   1
      *
     C                     ENDSR
      *
     C*****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  DSPRT  - SUBROUTINE TO PRODUCE DISCOUNT/PREMIUM KEYS FOR     *
      *           TRADE DATA                                          *
      *                                                               *
      *****************************************************************
      *
     C           DSPRT     BEGSR                           *** DSPRT  ***
      *
      ** SET UP DETAILS FOR OUTPUT OF ACCOUNT KEY
      *
     C                     MOVE 'T'       EVTP
      *
      ** If CSE105 is installed, and this is a Value Date Basis, set
      ** EVTP to BCTV.
      *
     C           CSE105    IFEQ 'Y'
     C           BCTV      ANDEQ'V'
     C                     MOVE 'V'       EVTP
     C                     ENDIF
      *
     C                     MOVE BCPS      TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
      *
     C                     MOVE ' '       NEGI
      *
     C           WDCPM     IFGT 0
     C                     MOVE 'DS'      AMCD
     C                     ELSE
     C                     MOVE 'PR'      AMCD
     C                     END
      *
     C                     MOVE ISSR      CSTN
     C                     MOVE BCTR      TRFR
      *
     C           WDCPM     IFLT 0
     C           WDCPM     MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDWDCPM     EVAM
     C                     END
      *
      ** Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM      H
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** Unamortised Prem/Discount is Nominal Book Value Less Average
      ** Price Numerator.
      *
      ** - New discount is -ve short posn and +ve long Position
      ** - New Premium  is +ve short posn and -ve long Position
      *
     C           BKVAL     SUB  APNC      BUDU
      *
     C           CAS006    IFEQ 'Y'
     C           BKVALN    SUB  APNN      BUDN
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  DSPRV  - SUBROUTINE TO PRODUCE DISCOUNT/PREMIUM ACCOUNT KEYS *
      *           ON VALUE DATE                                       *
      *                                                               *
      *****************************************************************
      *
     C           DSPRV     BEGSR                           *** DSPRV  ***
      *
      ** SET UP COMMON INFORMATION FOR ACCOUNT KEYS
      *
     C                     MOVE 'V'       EVTP
      *
      ** If CSE105 is installed, and this is a Trade Date Basis, set
      ** EVTP to BCTV.
      *
     C           CSE105    IFEQ 'Y'
     C           BCTV      ANDEQ'T'
     C                     MOVE BCTV      EVTP
     C                     ENDIF
      *
     C                     MOVE BCPS      TRTP
     C                     MOVE ' '       PORT
     C                     MOVE '  '      TRST
     C                     MOVE ISSR      CSTN
     C                     MOVE BCTR      TRFR
      *
      ** SET UP INDICATORS FOR AVERAGE PRICE CHANGES
      *
     C                     MOVEA'00'      *IN,28
      *
      ** If the position changes from long to short or short to long
      ** or if there is a change in the price from premium to discount or
      ** discount to premium, two account keys should be produced.
      *
     C           PAPNC     IFGE 0
     C           APNC      ANDGE0
     C           PAPNC     IFGE PBKVAL
     C           APNC      ANDGEBKVAL
     C           PAPNC     ORLT PBKVAL
     C           APNC      ANDLTBKVAL
     C                     MOVE '1'       *IN29
     C                     ELSE
     C                     MOVE '1'       *IN28
     C                     ENDIF
     C                     ELSE
      *
     C           PAPNC     IFLT 0
     C           APNC      ANDLT0
     C           PAPNC     IFLE PBKVAL
     C           APNC      ANDLEBKVAL
     C           PAPNC     ORGT PBKVAL
     C           APNC      ANDGTBKVAL
     C                     MOVE '1'       *IN29
     C                     ELSE
     C                     MOVE '1'       *IN28
     C                     END
     C                     ELSE
     C                     MOVE '1'       *IN28
     C                     ENDIF
     C                     END
      *
      ** CHECK WHETHER ONE OR TWO ACCOUNT KEYS ARE REQUIRED -
      **   (TWO KEYS ARE REQUIRED IF POSITION CHANGES FROM LONG TO SHORT
      **    OR SHORT TO LONG OR IF AVERAGE PRICE CHANGES FROM DISCOUNT
      **    TO PREMIUM OR FROM PREMIUM TO DISCOUNT)
      *
      *
      ** CASES FOR OUTPUT OF TWO ACCOUNT KEYS
      *
     C           *IN28     IFEQ '1'
     C           NPAC      OREQ 'Y'
     C           *IN41     ANDEQ'1'
      *
      ** -  SET UP FIRST ACCOUNT KEY TO SET DISC/PREM TO ZERO
      *
     C           PNPSN     IFGT 0
     C           PAPNC     ANDLTPBKVAL
     C           PNPSN     ORLT 0
     C           PAPNC     ANDGTPBKVAL
     C                     MOVE 'DS'      AMCD
     C                     ELSE
     C                     MOVE 'PR'      AMCD
     C                     END
      *
     C           PNPSN     IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
      ** Reverse Posted Premium / Discount and Reset to Zero
      *
     C                     Z-SUBBUDU      EVAM
     C                     Z-ADD0         BUDU
     C                     Z-ADD0         BUDN
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PR'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** - Reverse sign on Sales, because different key
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM      H
     C                     END
      *
      ** OUTPUT FIRST KEY
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     END
      *
      ** OUTPUT OF NEW UNAMORTISED AMOUNT
      *
      *
      ** -  SET UP REST OF FIELDS FOR ACCOUNT KEY
      *
     C           NPSN      IFGT 0
     C           APNC      ANDLTBKVAL
     C           NPSN      ORLT 0
     C           APNC      ANDGTBKVAL
     C                     MOVE 'DS'      AMCD
     C                     ELSE
     C                     MOVE 'PR'      AMCD
     C                     END
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
      **  Unamortised Prem/Discount is Nominal Book Value Less Average
      **  Price Numerator.
      *
     C           BKVAL     SUB  APNC      WBUDU  150
      *
      ** - New discount is -ve short posn and +ve long Position
      ** - New Premium  is +ve short posn and -ve long Position
      *
     C           WBUDU     SUB  BUDU      EVAM
     C                     Z-ADDWBUDU     BUDU
      *
     C           CAS006    IFEQ 'Y'
     C           BKVALN    SUB  APNN      WBUDN  150
     C                     Z-ADDWBUDN     BUDN
     C                     ENDIF
      *
      ** - Reverse sign on Premiums, because different key
      *
     C           AMCD      IFEQ 'PR'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** - Reverse sign on Sales, because different key
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBEVAM      EVAM
     C                     END
      *
      ** Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM      H
     C                     END
      *
      ** OUTPUT Last  KEY
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  PIAI   - SUBROUTINE TO PRODUCE KEYS FOR PURCHASED/ACCRUED    *
      *           INTEREST.                                           *
      *                                                               *
      *****************************************************************
      *
     C           PIAI      BEGSR                           ***  PIAI  ***
      *
      ** SET COMMON FIELDS ON ACCOUNT KEY
      *
     C                     MOVE 'V'       EVTP
     C                     MOVE BCPS      TRTP
     C                     MOVE ' '       PORT
     C                     MOVE TRCP      CSTN
     C           TSAK      IFEQ 'Y'
     C                     MOVE BCTP      TRST
     C                     ELSE
     C                     MOVE '  '      TRST
     C                     END
     C                     MOVE BCTR      TRFR
      *
      *----------------------------------------------------------------
      * CASE 1 : SPLIT NEG ACCR. IS N    OR  NOMINAL CASE 2 OR 3 (P10)*
      *     AND  CUM-COUPON CASE 3 (P10) OR  TRADE IS EX-COUPON       *
      *----------------------------------------------------------------
      *
     C           SNAC      IFEQ 'N'
     C           *IN42     OREQ '1'
     C           *IN43     OREQ '1'
      *
     C           *IN46     IFEQ '1'
     C           ACRI      OREQ 'X'
      *
      ** - IF ACCRUED IND IS CUM-COUPON, WRITE PI KEY
      *
     C           ACRI      IFEQ 'C'
     C           ACRI      OREQ 'F'
     C                     MOVE 'PI'      AMCD
     C                     ELSE
      *
      ** - IF ACCRUED IND IS EX-COUPON, WRITE AI KEY
      *
     C                     MOVE 'AI'      AMCD
     C                     END
      *
     C           SNAC      IFEQ 'N'
     C           PNPSN     ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C                     Z-ADDPCHI      EVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDPCHN      EVAN   130
     C                     ENDIF
      *
     C*
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - UPDATE PURCHASED AND ACCRUED INTEREST ON POSITION
      *
     C           BCPS      IFEQ 'P'
      *
     C           ACRI      IFEQ 'C'
     C           ACRI      OREQ 'F'
     C                     ADD  EVAM      PILP
      *
     C           CAS006    IFEQ 'Y'
     C                     ADD  EVAN      PILN
     C                     Z-ADDEVAN      WBCPX  130
     C                     ENDIF
      *
     C                     Z-ADDEVAM      WBCP1
     C                     ELSE
     C                     ADD  EVAM      ARPC
     C                     END
      *
     C                     ELSE
     C           ACRI      IFEQ 'C'
     C           ACRI      OREQ 'F'
     C           PILP      SUB  EVAM      PILP
      *
     C           CAS006    IFEQ 'Y'
     C           PILN      SUB  EVAN      PILN
     C                     Z-SUBEVAN      WBCPX
     C                     ENDIF
      *
     C                     Z-SUBEVAM      WBCP1
     C                     ELSE
     C           ARPC      SUB  EVAM      ARPC
     C                     END
      *
     C                     END
      *
     C                     GOTO EPIAI
      *
     C                     END
     C                     END
      *
      *----------------------------------------------------------------
      ** CASE 2 : SPLIT NEG ACCR. N   OR   NOMINAL CASES 2 OR 3 (P10) *
      **     AND  CUM COUPON NOM CASE 2 (P10)                         *
      *----------------------------------------------------------------
      *
     C           SNAC      IFEQ 'N'
     C           *IN42     OREQ '1'
     C           *IN43     OREQ '1'
      *
     C           *IN45     IFEQ '1'
      *
      ** - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
      *
     C           SNAC      IFEQ 'N'
     C           PNPSN     ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           FIFO      IFNE 'Y'
     C           PNPSN     OREQ *ZERO
      *
      ** To prevent rounding of PI when nominal less than 1,000,000
      *
     C           PCUMP     IFNE 0
     C                     Z-ADDPCUMP     ZPNPSN
     C                     Z-ADDBCNL      ZNPSN
     C                     Z-ADDPILP      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    EVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDPCUMP     ZPNPSN
     C                     Z-ADDBCNL      ZNPSN
     C                     Z-ADDPILN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    EVAN
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADD0         EVAM
     C                     Z-ADD0         EVAN
     C                     END
      *
     C                     Z-ADDEVAM      WBCP1
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDEVAN      WBCPX
     C                     ENDIF
      *
     C                     ELSE
      *
      *** Store Position PI if not calced
      *** OR use FIFO PI for posting & calc of AI
      *
     C                     Z-ADDWBCP1     EVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWBCPX     EVAN
     C                     ENDIF
      *
     C                     END
      *
     C                     Z-ADDEVAM      PEVAM  150
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDEVAN      PEVAN  150
     C                     ENDIF
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
     C           PCHI      SUB  EVAM      EVAM
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - UPDATE PURCHASED AND ACCRUED INTEREST ON POSITION
      *
     C           BCPS      IFEQ 'P'
     C                     ADD  PEVAM     PILP
     C                     ADD  EVAM      ARPC
     C                     ELSE
     C           PILP      SUB  PEVAM     PILP
     C           ARPC      SUB  EVAM      ARPC
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           BCPS      IFEQ 'P'
     C                     ADD  PEVAN     PILN
     C                     ELSE
     C           PILN      SUB  PEVAN     PILN
     C                     ENDIF
     C                     ENDIF
      *
     C                     GOTO EPIAI
      *
     C                     END
     C                     END
      *
      *----------------------------------------------------------------
      ** CASE 3 : SPLIT NEG ACCR. N   OR   NOMINAL CASES 2 OR 3 (P10) *
      **     AND  CUM-COUPON CASE 1 (P10)                             *
      *----------------------------------------------------------------
      *
     C           SNAC      IFEQ 'N'
     C           *IN42     OREQ '1'
     C           *IN43     OREQ '1'
      *
     C           *IN44     IFEQ '1'
      *
      ** - CALCULATE PURCHASED INTEREST ON NEW POSITION
      *
     C           FIFO      IFNE 'Y'
     C           PNPSN     OREQ *ZERO
      *
     C           PCUMP     IFLT 0
     C           PCUMP     MULT -1        RPCUMP
     C                     ELSE
     C                     Z-ADDPCUMP     RPCUMP
     C                     END
      *
      ** To prevent rounding of PI when nominal less than 1,000,000
      *
     C           BCNL      IFNE 0
     C                     Z-ADDBCNL      ZPNPSN
     C                     Z-ADDRPCUMP    ZNPSN
     C                     Z-ADDPCHI      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTOT
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCNL      ZPNPSN
     C                     Z-ADDRPCUMP    ZNPSN
     C                     Z-ADDPCHN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTON  150
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADD0         WSTOT
     C                     Z-ADD0         WSTON
     C                     END
      *
     C           PCHI      SUB  WSTOT     WSTOT
      *
     C           BCPS      IFEQ 'P'
     C           WSTOT     SUB  PILP      EVAM
     C                     ELSE
     C           WSTOT     ADD  PILP      EVAM
     C                     END
      *
     C           CAS006    IFEQ 'Y'
      *
     C           PCHN      SUB  WSTON     WSTON
     C           BCPS      IFEQ 'P'
     C           WSTON     SUB  PILN      EVAN
     C                     ELSE
     C           WSTON     ADD  PILN      EVAN
     C                     ENDIF
     C                     ENDIF
      *
     C                     Z-ADDEVAM      WBCP1
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDEVAN      WBCPX
     C                     ENDIF
     C                     ELSE
      *
      *** Store Position PI if not calced
      *** OR use FIFO PI for posting & calc of AI
      *
     C                     Z-ADDWBCP1     EVAM
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWBCPX     EVAN
     C                     ENDIF
      *
     C                     END
      *
      ** - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           SNAC      IFEQ 'N'
     C           PNPSN     ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C                     Z-ADDEVAM      PEVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDEVAN      PEVAN
     C                     ENDIF
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
     C           PCHI      SUB  EVAM      EVAM
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - UPDATE PURCHASED AND ACCRUED INTEREST ON POSITION
      *
     C           BCPS      IFEQ 'P'
     C                     ADD  PEVAM     PILP
      *
     C           CAS006    IFEQ 'Y'
     C                     ADD  PEVAN     PILN
     C                     ENDIF
      *
     C                     ADD  EVAM      ARPC
     C                     ELSE
      *
     C           CAS006    IFEQ 'Y'
     C           PILN      SUB  PEVAN     PILN
     C                     ENDIF
      *
     C           PILP      SUB  PEVAM     PILP
     C           ARPC      SUB  EVAM      ARPC
     C                     END
      *
     C                     GOTO EPIAI
      *
     C                     END
     C                     END
      *
      *----------------------------------------------------------------
      ** CASE 4 : NOMINAL CASE 1  (P10)                               *
      **     AND  CUM-COUPON NOM CASE 3 (P10)  OR  TRADE IS EX-COUPON *
      *----------------------------------------------------------------
      *
     C           *IN41     IFEQ '1'
      *
     C           *IN46     IFEQ '1'
     C           ACRI      OREQ 'X'
      *
      ** - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           PNPSN     IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'P'
     C           PILP      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPILP      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
      *
     C           BCPS      IFEQ 'P'
     C           ARPC      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDARPC      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - CALCULATE PURCHASED INTEREST ON NEW POSITION
      *
     C           ACRI      IFEQ 'C'
     C           ACRI      OREQ 'F'
     C           BCPS      IFEQ 'P'
     C           PILP      ADD  PCHI      PILP
     C                     Z-ADDPCHI      WBCP1
     C                     ELSE
     C           PILP      SUB  PCHI      PILP
     C                     Z-SUBPCHI      WBCP1
     C                     END
     C                     END
      *
     C           CAS006    IFEQ 'Y'
      *
     C           ACRI      IFEQ 'C'
     C           ACRI      OREQ 'F'
     C           BCPS      IFEQ 'P'
     C           PILN      ADD  PCHN      PILN
     C                     Z-ADDPCHN      WBCPX
     C                     ELSE
     C           PILN      SUB  PCHN      PILN
     C                     Z-SUBPCHN      WBCPX
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
      ** - SET UP AND WRITE NEW PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           NPSN      IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'S'
     C           PILP      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPILP      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE NEW ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
      *
     C           ACRI      IFEQ 'X'
     C           BCPS      IFEQ 'P'
     C           ARPC      ADD  PCHI      ARPC
     C                     ELSE
     C           ARPC      SUB  PCHI      ARPC
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'S'
     C           ARPC      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDARPC      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     GOTO EPIAI
      *
     C                     END
     C                     END
      *
      *----------------------------------------------------------------
      ** CASE 5 : NOMINAL CASE 1 (P10)                                *
      **     AND  CUM-COUPON NOM CASE 2 (P10)                         *
      *----------------------------------------------------------------
      *
     C           *IN41     IFEQ '1'
     C           *IN45     ANDEQ'1'
      *
      ** - SET AND WRITE PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           PNPSN     IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'P'
     C           PILP      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPILP      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
      *
     C           BCPS      IFEQ 'P'
     C           ARPC      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDARPC      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - CALCULATE PURCHASED INTEREST ON NEW POSITION
      *
     C           FIFO      IFNE 'Y'
     C           PNPSN     OREQ *ZERO
      *
     C           PCUMP     IFLT 0
     C           PCUMP     MULT -1        RPCUMP 150
     C                     ELSE
     C                     Z-ADDPCUMP     RPCUMP
     C                     END
      *
      *** To prevent rounding of PI when nominal less than 1,000,000
      *
     C           RPCUMP    IFNE 0
     C                     Z-ADDRPCUMP    ZPNPSN
     C                     Z-ADDBCNL      ZNPSN
     C                     Z-ADDPILP      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTOT
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDRPCUMP    ZPNPSN
     C                     Z-ADDBCNL      ZNPSN
     C                     Z-ADDPILN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTON
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADD0         WSTOT
     C                     Z-ADD0         WSTON
     C                     END
      *
     C           PILP      SUB  WSTOT     EVAM
     C                     Z-ADDEVAM      PEVAM
      *
     C                     Z-ADDEVAM      WBCP2
      *
     C           CAS006    IFEQ 'Y'
     C           PILN      SUB  WSTON     EVAN
     C                     Z-ADDEVAN      PEVAN
     C                     Z-ADDEVAN      WBCPY  130
     C                     ENDIF
      *
     C                     ELSE
      *
      *** Store Position PI if not calced
      *** OR use FIFO PI for posting & calc of AI
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBWBCP2     EVAM
     C                     ELSE
     C                     Z-ADDWBCP2     EVAM
     C                     END
     C                     END
      *
      ** - SET UP AND WRITE NEW PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           NPSN      IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'S'
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE NEW ACCRUED INTEREST KEY
      **   - REVERSE SIGN OF PURCHASED INTEREST FOR SALE
      *
     C           BCPS      IFEQ 'S'
     C           PCHI      MULT -1        RBCPI  130
     C                     ELSE
     C                     Z-ADDPCHI      RBCPI
     C                     END
      *
     C                     MOVE 'AI'      AMCD
     C           PILP      SUB  PEVAM     WSTOT
     C           WSTOT     ADD  RBCPI     WSTOT
     C           ARPC      ADD  WSTOT     ARPC
     C           BCPS      IFEQ 'S'
     C           ARPC      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDARPC      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - UPDATE PURCHASED AND ACCRUED INTEREST ON POSITION
      *
     C                     Z-ADDPEVAM     PILP
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDPEVAN     PILN
     C                     ENDIF
      *
     C                     GOTO EPIAI
      *
     C                     END
      *
      *----------------------------------------------------------------
      ** CASE 6 : NOMINAL CASE 1 (P10)                                *
      **     AND  CUM-COUPON CASE 1 (P10)                             *
      *----------------------------------------------------------------
      *
     C           *IN41     IFEQ '1'
     C           *IN44     ANDEQ'1'
      *
      **  - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           PNPSN     IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'P'
     C           PILP      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPILP      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
     C           BCPS      IFEQ 'P'
     C           ARPC      MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDARPC      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - CALCULATE PURCHASED INTEREST ON NEW POSITION
      *
     C           FIFO      IFNE 'Y'
     C           PNPSN     OREQ *ZERO
      *
     C           PCUMP     IFLT 0
     C           PCUMP     MULT -1        RPCUMP
     C                     ELSE
     C                     Z-ADDPCUMP     RPCUMP
     C                     END
      *
      ** To prevent rounding of PI when nominal less than 1,000,000
      *
     C           BCNL      IFNE 0
     C                     Z-ADDBCNL      ZPNPSN
     C                     Z-ADDRPCUMP    ZNPSN
     C                     Z-ADDPCHI      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTOT
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDBCNL      ZPNPSN
     C                     Z-ADDRPCUMP    ZNPSN
     C                     Z-ADDPCHN      ZAPIN
     C                     EXSR ZAPORT
     C                     Z-ADDZAPOUT    WSTON
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADD0         WSTOT
     C                     Z-ADD0         WSTON
     C                     END
      *
     C           PCHI      SUB  WSTOT     EVAM
      *
     C                     Z-ADDEVAM      WBCP2
      *
     C           CAS006    IFEQ 'Y'
     C           PCHN      SUB  WSTON     EVAN
     C                     Z-ADDEVAN      WBCPY
     C                     ENDIF
     C                     ELSE
      *
      *** Store Position PI if not calced
      *** OR use FIFO PI for posting & calc of AI
      *
      ***  If going from flat to short, SR/CLOSE has not executed.
     C           PNPSN     IFEQ *ZERO
     C           WBCP2     ANDEQ*ZERO
     C                     Z-ADDPCHI      EVAM
     C                     Z-ADDPCHI      WBCP2
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDPCHN      EVAN
     C                     Z-ADDPCHN      WBCPY
     C                     ENDIF
      *
     C                     ELSE
     C                     Z-ADDWBCP2     EVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDWBCPY     EVAN
     C                     ENDIF
      *
     C                     END
     C                     END
      *
     C                     Z-ADDEVAM      PEVAM
      *
     C           CAS006    IFEQ 'Y'
     C                     Z-ADDEVAN      PEVAN
     C                     ENDIF
      *
      ** - SET UP AND WRITE NEW PURCHASED INTEREST KEY
      *
     C                     MOVE 'PI'      AMCD
     C           NPSN      IFGE 0
     C           SNAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - SET UP AND WRITE NEW ACCRUED INTEREST KEY
      *
     C                     MOVE 'AI'      AMCD
     C           BCPS      IFEQ 'S'
     C           PCHI      SUB  PILP      WSTOT
     C           WSTOT     SUB  ARPC      WSTOT
     C                     ELSE
     C           PCHI      ADD  PILP      WSTOT
     C           WSTOT     ADD  ARPC      WSTOT
     C                     END
      *
     C           WSTOT     SUB  EVAM      ARPC
     C                     Z-ADDARPC      EVAM
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** - UPDATE PURCHASED AND ACCRUED INTEREST ON POSITION
      *
     C           BCPS      IFEQ 'S'
     C                     Z-SUBPEVAM     PILP
     C                     Z-SUBEVAM      ARPC
     C                     ELSE
     C                     Z-ADDPEVAM     PILP
     C                     Z-ADDEVAM      ARPC
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           BCPS      IFEQ 'S'
     C                     Z-SUBPEVAN     PILN
     C                     ELSE
     C                     Z-ADDPEVAN     PILN
     C                     ENDIF
     C                     ENDIF
      *
     C                     END
      *
     C           EPIAI     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  PI     - SUBROUTINE TO PRODUCE ACCOUNT KEY/S FOR PURCHASED   *
      *           INTEREST.                                           *
      *                                                               *
      *****************************************************************
      *
     C           PI        BEGSR                           ***   PI   ***
      *
      ** SET COMMON FIELDS FOR KEY
      *
     C                     MOVE 'V'       EVTP
     C                     MOVE BCPS      TRTP
     C                     MOVE ' '       PORT
     C           TSAK      IFEQ 'Y'
     C                     MOVE BCTP      TRST
     C                     ELSE
     C                     MOVE '  '      TRST
     C                     END
     C                     MOVE 'PI'      AMCD
     C                     MOVE TRCP      CSTN
     C                     MOVE BCTR      TRFR
      *
      *----------------------------------------------------------------
      ** CASE 1 : ONE KEY REQUIRED                                    *
      **          NOMINAL CASE 2 OR 3 (P10)  OR  SPLIT NEG ACCR. N    *
      *----------------------------------------------------------------
      *
     C           *IN42     IFEQ '1'
     C           *IN43     OREQ '1'
     C           SNAC      OREQ 'N'
      *
      ** - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C           SNAC      IFEQ 'N'
     C           NPSN      ORGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           SNAC      ANDEQ'Y'
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C                     Z-ADDPCHI      EVAM
     C                     Z-ADDPCHI      WBCP1
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** -  UPDATE PURCHASED INTEREST ON POSITION
      *
     C           BCPS      IFEQ 'P'
     C           PNPSN     IFEQ 0
     C           PECNP     ANDEQ0
     C                     Z-ADDPCHI      PILP
     C                     Z-ADD0         ARPC
     C                     ELSE
     C           PILP      ADD  PCHI      PILP
     C                     END
     C                     ELSE
     C           PNPSN     IFEQ 0
     C           PECNP     ANDEQ0
     C                     Z-SUBPCHI      PILP
     C                     Z-ADD0         ARPC
     C                     ELSE
     C           PILP      SUB  PCHI      PILP
     C                     END
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           BCPS      IFEQ 'P'
     C           PNPSN     IFEQ 0
     C           PECNP     ANDEQ0
     C                     Z-ADDPCHN      PILN
     C                     ELSE
     C           PILN      ADD  PCHN      PILN
     C                     ENDIF
     C                     ELSE
     C           PNPSN     IFEQ 0
     C           PECNP     ANDEQ0
     C                     Z-SUBPCHN      PILN
     C                     ELSE
     C           PILN      SUB  PCHN      PILN
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C                     ELSE
      *
      *----------------------------------------------------------------
      * CASE 2 : NOMINAL CHANGES CASE 1 (P10)                         *
      *     AND  SPLIT NEG ACCR. Y                                    *
      *----------------------------------------------------------------
      *
     C           *IN41     IFEQ '1'
     C           SNAC      ANDEQ'Y'
      *
      ** - SET UP AND WRITE PURCHASED INTEREST KEY
      *
     C           PNPSN     IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'S'
     C           ARPC      ADD  PILP      EVAM
     C                     ELSE
     C           ARPC      ADD  PILP      EVAM
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** -  CALCULATE PURCHASED INTEREST ON NEW POSITION
      *
     C           BCPS      IFEQ 'S'
     C           PCHI      MULT -1        RBCPI
     C                     ELSE
     C                     Z-ADDPCHI      RBCPI
     C                     END
      *
     C           ACRI      IFEQ 'X'
     C           ARPC      ADD  RBCPI     ARPC
     C                     ELSE
     C           PILP      ADD  RBCPI     PILP
     C                     Z-ADDPCHI      WBCP1
     C                     END
      *
      ** -  PRODUCE SECOND KEY FOR PURCHASED INTEREST ON NEW POSITION
      *
     C           NPSN      IFGE 0
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           CPNR      IFLT 0
     C           NEGI      IFEQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
     C                     END
      *
     C           BCPS      IFEQ 'P'
     C           ARPC      ADD  PILP      EVAM
     C                     ELSE
     C           ARPC      ADD  PILP      EVAM
     C           EVAM      MULT -1        EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
     C                     END
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  UNRLPL - SUBROUTINE TO CALCULATE UNREALIZED PROFIT/LOSS AND  *
      *           TO OUTPUT UNREALIZED P/L ACCOUNT KEYS               *
      *                                                               *
      *****************************************************************
      *
     C           UNRLPL    BEGSR                           *** UNRLPL ***
      *
      ** If this Subroutine was called from SR/P60 (Price Changes),
      ** then use details of the Price Change, Else Subroutine was
      **  called on change of Position for Daily Unrealsed P/L Posting
      *
     C           PRCCHG    IFEQ 'Y'
     C           BCPR      ANDEQ*ZERO
     C           PRCCHG    ORNE 'Y'
     C           MKPR      ANDEQ*ZERO
      *
      ** IF MARKET PRICE EQUALS TO ZERO CHAIN TO PRICED FILE IF A
      ** PRICE EXISTS.
      *
     C                     MOVE BCSS      PSSN
     C                     MOVE 'V '      PPRT
     C                     Z-ADDECD       PVDT
      *
     C           PKEY      SETGTPRICED
     C                     READPPRICED                   48
      *
     C           *IN48     IFEQ *OFF
     C           PSSN      ANDEQBCSS
     C           PPRT      ANDEQ'V '
     C           PPRC      ANDEQ0
     C                     SETOF                         49
     C                     ELSE
     C                     SETON                         49
     C                     END
      *
     C                     END
      *
      ** IF NO MARKET PRICE EXISTS THEN SKIP UNREALISED PROFIT AND
      ** LOSS PROCESSING.
      *
     C           *IN49     IFEQ *ON
     C                     Z-ADD0         UPPT
     C                     SETOF                         49
     C                     ELSE
      *
      ** STORE UNREALISED P/L AS PREVIOUS
      *
     C                     Z-ADDUPPT      PUPPT  130
      *
      ** CONVERT MARKET PRICE FROM PRICE/DISC/YIELD FORMAT TO PRICE
      **  FORMAT
      *
     C           PRCCHG    IFEQ 'Y'
     C                     Z-ADDBCAD      ZFDATE
     C                     Z-ADDBCPR      ZPRCIN
     C                     ELSE
      *
      ** Average price on discounted instruments reflects amortization
      ** up to date of last action, so use KBCAD in converting MKPR.
      *
     C                     Z-ADDKBCAD     ZFDATE
      *
     C                     Z-ADDMKPR      ZPRCIN
     C                     END
      *
      ** Australian yield parameters
      *
     C           *IN53     IFEQ '1'
     C           NPSN      ANDNE0
      *
      ** set nominal to positive for working on
      *
     C           NPSN      IFLT 0
     C                     Z-SUBNPSN      WNOML  130
     C                     ELSE
     C                     Z-ADDNPSN      WNOML
     C                     END
      *
      ** Obtain next coupon date
      ** (Add 1 to ECD so that if ZFDATE=NCD,calculate NCD after that)
      *
     C           ZFDATE    ADD  1         ECD
     C                     EXSR ZNCD
      *
      ** Obtain last coupon date
      *
     C           NCD       SUB  1         ZECD
     C                     EXSR ZLCD
     C                     Z-ADDZZLCD     LCOUP   50
      *
      ** Determine if period is Cum or Ex
      *
     C                     Z-ADDZFDATE    WRKD    50
     C                     EXSR ZYCE
      *
      ** Calculate interest for Cum period (SCUMEX = C)
      *
     C           SCUMEX    IFEQ 'C'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDZFDATE    ZDCEDT
     C                     Z-ADDWNOML     ZAMT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    TOTACC
     C                     Z-ADDZDCINT    WRKPIX
      *
     C                     END
      *
      ** IF EX-COUPON THEN PI PASSED IS THE REMAINING INTEREST
      ** TILL NCD AND IS NEGATIVE
      *
     C           SCUMEX    IFEQ 'X'
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDNCD       ZDCEDT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    NCDWRK
      *
      ** Calculate interest to Next Coupon Date
      ** ( = LCDWRK - NCDWRK )
     C                     Z-ADDLCOUP     ZDCSDT
     C                     Z-ADDZFDATE    ZDCEDT
     C                     EXSR ZACCZ
     C                     Z-ADDZDCINT    LCDWRK
      *
     C           LCDWRK    SUB  NCDWRK    WRKPIX
      *
     C                     END
      *
      ** Make interest figure a percentage
      *
     C           WRKPIX    DIV  WNOML     WRKPI
      *
     C                     ELSE
     C                     Z-ADD0         WRKPI
     C                     MOVE 'C'       SCUMEX
     C                     END
      *
     C                     Z-ADDNPSN      ZNOML
      *
     C                     EXSR ZPRCI
      *
      ** CALCULATE PRICE DIFFERENCE
      *
     C           ZPRCOT    SUB  LAVP      WPRICE
      *
      ** OBTAIN NEW UNREALISED P/L
      *
     C                     Z-ADD*ZEROS    WPRLS  150
      *
      ** Convert Realised P/L Amount
      *
     C                     Z-ADDNPSN      ZNOML
     C                     Z-ADDWPRICE    ZPRC
     C                     EXSR ZCNSD
     C                     Z-ADDZCONS     UPPT
      *
      ** SET COMMON FIELDS FOR ACCOUNT KEYS
      *
     C                     MOVE 'A'       EVTP
     C                     MOVE ' '       TRTP
     C                     MOVE ' '       PORT
      *
      ** If this subroutine is called from mainline processing, BCTV
      ** has already been overwritten by the next BPACC record.
      *
     C           PRCCHG    IFEQ 'Y'
     C                     MOVE BCTV      PSBS
     C                     ELSE
     C                     MOVE KBCTV     PSBS
     C                     END
      *
     C                     MOVE ' '       FILL
     C                     MOVE ISSR      CSTN
     C                     MOVE *ZEROS    TRFR
      *
      ** SET INDICATOR FOR NEW AND PREVIOUS UNREALISED P/L
      *
      **  And check move of Nominal from short to long and vice versa.
      *
     C           CAS006    IFEQ 'Y'
     C                     MOVE '0'       *IN37
     C                     ELSE
     C           ONPSN     IFGE 0
     C           NPSN      ANDGE0
     C           ONPSN     ORLE 0
     C           NPSN      ANDLE0
      *
     C           UPPT      IFLE 0
     C           PUPPT     ANDLE0
     C                     MOVE '1'       *IN37
     C                     ELSE
     C           UPPT      IFGE 0
     C           PUPPT     ANDGE0
     C                     MOVE '1'       *IN37
     C                     END
     C                     END
      *
     C                     END
     C                     ENDIF
      *
      ** PRODUCE ACCOUNT KEYS IF NEW UNREALISED P/L GREATER THAN 0
      **  AND POSTING BASIS IS NOT 'L' OR NEW UNREALISED P/L IS LESS THAN
      **  ZER0 AND PROFIT POSTING IS NOT 'P'
      *
     C           UPPT      IFGT 0
     C           UPPS      ANDNE'L'
     C                     GOTO UNRLKY
     C                     ELSE
      *
     C           UPPT      IFLT 0
     C           UPPS      ANDNE'P'
     C                     GOTO UNRLKY
     C                     ELSE
      *
     C           PUPPT     IFGT 0
     C           UPPS      ANDNE'L'
     C                     GOTO UNRLKY
     C                     END
      *
     C           PUPPT     IFLT 0
     C           UPPS      ANDNE'P'
     C                     GOTO UNRLKY
     C                     END
      *
      ** Accrued interest to date should be considered as the current
      ** profit/loss if market price entered results to zero profit
      ** or loss.
      *
     C           CAS006    IFEQ 'Y'
     C           WPRICE    ANDEQ0
     C           ARPC      ANDNE0
     C                     GOTO UNRLKY
     C                     ENDIF
      *
     C                     GOTO EURLPL
     C                     END
     C                     END
      *
     C           UNRLKY    TAG
      *
      ** -  PRODUCE ONE KEY IF PREVIOUS AND NEW UNREAL. P/L BOTH LESS
      **      THAN OR BOTH GREATER THAN 0
      **  AND if nominal has not moved from short to long or vice-versa.
      *
     C           *IN37     IFEQ '1'
      *
     C           UPPT      IFGT 0
      *
      ** Since UPPT may be zero, need to check PUPPT as well in deter-
      ** mining whether this posting is a change to profit or loss.
      *
     C           PUPPT     ORGT 0
      *
     C                     MOVE 'UP'      AMCD
     C                     ELSE
     C                     MOVE 'UL'      AMCD
     C                     END
      *
      ** Allow Negative Position Accounting for Unrealized P/L:- NEGI
      ** should be 'N' for Unrealized P/L on short posn if NPAC = 'Y'.
      *
     C           NPSN      IFGE 0
     C           ONPSN     ANDGE0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           UPPT      SUB  PUPPT     EVAM
      *
     C           UPPT      IFLT 0
     C           PUPPT     ORLT 0
      *
     C           EVAM      MULT -1        EVAM
     C                     END
      *
      **  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C                     EXSR W01
     C                     END
      *
      ** ELSE PRODUCE TWO KEYS IF TRADE MOVES FROM PROFIT TO LOSS OR
      ** FROM LOSS TO PROFIT
      *
     C                     ELSE
      *
      ** -  PRODUCE REVERSAL KEY FOR UNRL P/L
      *
     C           PUPPT     IFGT 0
     C                     MOVE 'UP'      AMCD
     C                     ELSE
     C                     MOVE 'UL'      AMCD
     C                     END
      *
      **  Allow Negative Position Accounting for Unrealized P/L:- NEGI
      **  should be 'N' for Unrealized P/L on short posn if NPAC = 'Y'.
      *
     C           ONPSN     IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C           PUPPT     IFGT 0
     C           PUPPT     MULT -1        EVAM
     C                     ELSE
     C                     Z-ADDPUPPT     EVAM
     C                     END
      *
      **  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C           CAS006    ANDNE'Y'
     C                     MULT AAPR      EVAM
     C                     END
      *
     C           EVAM      IFNE 0
     C           AMCD      ANDEQ'UL'
     C           UPPS      ANDNE'P'
     C           EVAM      ORNE 0
     C           AMCD      ANDEQ'UP'
     C           UPPS      ANDNE'L'
     C                     EXSR W01
     C                     END
      *
      ** -  PRODUCE  KEY FOR NEW UNRL. P/L
      *
     C           UPPT      IFGT 0
     C                     MOVE 'UP'      AMCD
     C                     ELSE
     C                     MOVE 'UL'      AMCD
     C                     END
      *
      **  Allow Negative Position Accounting for Unrealized P/L:- NEGI
      **  should be 'N' for Unrealized P/L on short posn if NPAC = 'Y'.
      *
     C           NPSN      IFGE 0
     C           NPAC      OREQ 'N'
     C                     MOVE ' '       NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     END
      *
     C                     Z-ADDUPPT      EVAM
      *
     C           UPPT      IFLT 0
     C           EVAM      MULT -1        EVAM
     C                     END
      *
      **  Adjust posting amount by the Mortgage Current Factor.
      *
     C           PROT      IFEQ '8'
     C                     MULT AAPR      EVAM
     C                     END
      *
     C           CAS006    IFEQ 'Y'
     C           UPPT      IFGT 0
     C                     Z-ADDEVAM      WEVAM  150
     C                     ELSE
     C                     Z-SUBEVAM      WEVAM
     C                     ENDIF
      *
      ** Do not add accrued interest in UP/UL if 'Supress Accrued
      ** Interest..' indicator in Hedge ICD is set to 'Y'.
      *
     C           FSEXRL    IFEQ 'Y'
     C                     ADD  ARPC      WEVAM
     C                     ENDIF
      *
     C                     Z-ADDWEVAM     UPPT
      *
     C           UPPT      IFGT 0
     C                     MOVE 'UP'      AMCD
     C                     ELSE
     C                     MOVE 'UL'      AMCD
     C                     ENDIF
      *
     C                     Z-ADDUPPT      EVAM
     C           UPPT      IFLT 0
     C           UPPT      MULT -1        EVAM
     C                     ENDIF
     C                     ENDIF
      *
     C           EVAM      IFNE 0
     C           AMCD      ANDEQ'UL'
     C           UPPS      ANDNE'P'
     C           EVAM      ORNE 0
     C           AMCD      ANDEQ'UP'
     C           UPPS      ANDNE'L'
     C                     EXSR W01
     C                     END
      *
     C                     END
     C                     END
      *
     C           EURLPL    ENDSR                           *** EURLPL ***
      *
      ************************************************************ E20087
      /EJECT
      *****************************************************************
      *                                                               *
      *  W01    - SUBROUTINE TO OUTPUT ACCOUNT KEYS                   *
      *                                                               *
      *****************************************************************
      *
     C           W01       BEGSR                           ***  W01   ***
      *
      ** SET UP ALL FIELDS NOT PASSED FROM CALLING ROUTINE
      *
     C                     MOVE 'D'       RECI
     C           CIAK      IFEQ 'Y'
     C           SCVI      ANDEQ'Y'
     C                     MOVE SCVI      CNVI
     C                     ELSE
     C                     MOVE *BLANK    CNVI
     C                     END
      *
     C                     MOVE BHBA      BRHA
     C                     MOVE SSITP     IVTP
     C                     MOVE '00'      ASQN
      *
      ** Only use action date for value date for non-accrued interest
      *
     C           AMCD      IFNE 'AI'
     C                     Z-ADDKBCAD     EVDT
     C                     END
      *
      ** The value date of RP key should be the maturity date of the
      ** security if the security is maturing today
      *
     C           AMCD      IFEQ 'RP'
     C           MATY      ANDLEBCAD
     C           MATY      ANDNE*ZEROS
     C                     Z-ADDMATY      EVDT
     C                     ENDIF
      *
     C                     MOVE SNMCY     EVCY
     C                     MOVE BHSC      SESH
      *
     C                     MOVE *BLANKS   STLA
     C                     MOVE SNMCY     KCCY
     C                     MOVE *ZEROS    STLT
     C   U1                MOVE '1'       RVRS
     C  NU1                MOVE '0'       RVRS
     C                     Z-ADD0         KNCA
     C                     Z-ADD0         KBCA
      *
      ** Settlement branch is blank
      *
     C                     MOVE *BLANKS   SEBR
      *
      **  Profit centre on a/c key is profit centre from Book position
      *
      ** If CAC005 is installed, set the profit centre from AOBKPCR0
      *
     C           CAC005    IFEQ 'Y'
     C                     MOVE PPRFC     PRFC
     C                     ELSE
      *
      ** If Analytical Accounting is installed and book position
      ** profit centre is blank, set the profit centre to
      ** SE ICD default profit centre.
      *
     C           BGN0ST    IFEQ 'Y'
     C           PCBK      IFEQ *BLANKS
     C                     MOVE BVSEPC    PRFC
     C                     ELSE
     C                     MOVE PCBK      PRFC
     C                     ENDIF
     C                     ELSE
     C           TRFR      IFEQ 0
     C                     MOVE PCBK      PRFC
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
      ** If Bank Portfolios Supported, set portfolio reference
      *
     C           FCPORS    IFEQ 'B'
     C                     EXSR SETPTF
     C                     END
      *
     C                     WRITESEKEYDF
      *
      ** ACCUMULATE TOTAL OF ACCOUNT KEYS OUTPUT
      *
     C                     Z-ADD1         Z
     C                     Z-ADD1         S
     C                     Z-ADDEVAM      ZZAMT
     C                     EXSR ZHASH
     C                     ADD  1         OREC
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  W02    - SUBROUTINE TO WRITE A NEW BOOK POSITION             *
      *                                                               *
      *****************************************************************
      *
     C           W02       BEGSR                           ***  W02   ***
      *
      ** Prevent records with duplicate Keys being written to BKPOSD.
      *
     C                     MOVE BKPREC    RECST1
     C           BKPKY2    CHAINBKPOSDF              80
     C  N80      BRECI     COMP 'D'                  8080
     C           *IN80     IFEQ '0'
     C                     MOVE RECST1    BKPREC
     C                     END
      *
      ** SET UP NEW FIELDS
      *
     C                     MOVE 'D'       BRECI
     C                     MOVE BHSC      BPSC
     C                     MOVE BHBA      BPBA
     C                     MOVE BHBK      BPBK
     C                     MOVE BHMK      BPMK
     C                     MOVE BHTV      BPTV
     C                     Z-ADDKBCAD     BPPD
     C                     Z-ADDWRPTP     RPTP
      *
     C                     Z-ADD0         SNPI
     C                     Z-ADD0         SNSI
     C                     Z-ADD0         SANP
     C                     Z-ADD0         SANS
     C                     MOVE 'N'       ADJI
     C                     Z-ADD2220      TNLU
      *
     C           *INU1     IFEQ '0'
      *
     C           BKPKY2    CHAINBKPOP                82
      *
     C           *IN82     IFEQ '0'
     C                     Z-ADDJNPSN     PNOM
     C                     ELSE
     C                     Z-ADDONPSN     PNOM
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** If existing BKPOSD record found, update it else write new record
      *
     C   80                WRITEBKPOSDF
     C  N80                UPDATBKPOSDF
      *
     C   80                ADD  1         BPAREC
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  W03    - SUBROUTINE TO WRITE A NEW BOOK POSITION HEADER      *
      *                                                               *
      *****************************************************************
      *
     C           W03       BEGSR                           ***  W03   ***
      *
      ** SET UP FIELDS NOT ALREADY CALCULATED
      *
     C                     MOVE 'D'       RECI
     C                     MOVE KBCSS     BHSC
     C                     MOVE KBCBA     BHBA
     C                     MOVE KBCBO     BHBK
     C                     MOVE KBCMK     BHMK
     C                     MOVE KBCTV     BHTV
      *
     C                     Z-ADD0         IACR
     C                     Z-ADD2220      TNLU
      *
     C                     MOVE SSITP     INVT
     C                     MOVE SNMCY     NCRY
      *
     C                     WRITEBKPHDDF
      *
     C                     ADD  1         BHAREC
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  W04    - SUBROUTINE TO WRITE A NEW BOOK POSITION MONTHLY     *
      *           STATISTICS RECORD.                                  *
      *                                                               *
      *****************************************************************
      *
     C           W04       BEGSR                           ***  W04   ***
      *
     C                     MOVE 'D'       BKID
     C                     MOVE KBCSS     BKSS
     C                     MOVE KBCBA     BKBA
     C                     MOVE KBCBO     BKBO
     C                     MOVE KBCMK     BKMK
     C                     MOVE KBCTV     BKTV
      *
      ** CONVERT END OF MONTH DATE FOR OUTPUT
      *
     C                     MOVE EOPT      PEOPT   50
     C           KBCAD     IFLE PEOPT
     C                     Z-ADDPEOPT     BKED
      *
     C           BKED      IFNE 0
     C                     Z-ADDPEOPT     ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVELZMTH      BKMY
     C                     MOVE ZYEAR     BKMY
     C                     ELSE
     C                     MOVE *BLANKS   BKMY
     C                     END
      *
     C                     ELSE
      *
      ** Write out record for next month
      *
     C                     Z-ADDKBCAD     ZDAYNO
     C                     EXSR ZDATE2
      *
      ** Fetch 1st day of following month
      *
     C                     ADD  1         ZMTH
     C           ZMTH      IFEQ 13
     C                     Z-ADD1         ZMTH
     C                     ADD  1         ZYEAR
     C                     END
      *
     C                     Z-ADD1         ZDAY
     C                     MOVELZDAY      WORK4   4
     C                     MOVE ZMTH      WORK4
     C                     MOVELWORK4     ZDATE
     C                     MOVE ZYEAR     ZDATE
     C                     EXSR ZDATE1
      *
      **  Fetch last day of month required
      *
     C                     SUB  1         ZDAYNO
     C                     EXSR ZDATE2
     C                     Z-ADDZDAYNO    BKED
     C                     MOVELZMTH      BKMY
     C                     MOVE ZYEAR     BKMY
     C                     END
      *
     C           *INU1     IFEQ '0'
     C                     Z-ADDWRPTP     RPTM
     C                     ELSE
     C                     Z-SUBWRPTP     RPTM
     C                     END
      *
     C           CSE065    IFEQ 'Y'
     C           *INU1     IFEQ '0'
     C                     Z-ADDBKVAMT    BKAMTM
     C                     Z-ADDEQTAMT    EQAMTM
     C                     ELSE
     C                     Z-SUBBKVAMT    BKAMTM
     C                     Z-SUBEQTAMT    EQAMTM
     C                     ENDIF
     C                     ENDIF
      *
     C                     MOVE SNMCY     NCRY
     C                     MOVE SSITP     INVT
     C                     Z-ADD2220      TNLU
      *
     C                     WRITEBKMTHDF
     C                     ADD  1         W04CNT
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  W05    - SUBROUTINE TO WRITE A HISTORIC BOOK POSITION HEADER *
      *                                                               *
      *****************************************************************
      *
     C           W05       BEGSR                           ***  W05   ***
      *
      ** SET UP FIELDS NOT ALREADY CALCULATED
      *
     C                     MOVE 'D'       RECI
      *
      ** Setting up of most BKPHH fields here is at best redundant,
      ** (SR/BKSET does this if no BKPHD record exists), and at worst
      ** disastrous (if the current action isn't a trade, DB errors
      ** can occur if LPSD is set to KBCAD; if it IS a Trade, SR/P10
      ** has already reset LPSD).
      ** Current Action is always a trade but still redundant
      *
     C                     Z-ADD2220      TNLU
      *
     C                     MOVE SSITP     INVT
     C                     MOVE SNMCY     NCRY
      *
      ** Restore this part of E18651: Don't write out a BKPHH record
      ** in Reversal mode.
      *
     C           *INU1     IFEQ '0'
     C                     WRITEBKPHHDF
      *
     C                     ADD  1         HHAREC
     C                     END
      *
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  W06    - Post Book Value Change and Equity Amount A/C Key    *
      *                                                               *
      *****************************************************************
      *
     C           W06       BEGSR
      *
      ** Set up fields not already calculated
      *
     C                     MOVE 'D'       RECI
      * Setup ACKY
     C                     MOVE *BLANKS   ACKY2
      *
     C                     MOVE SSITP     IVTP
     C                     MOVE 'V'       EVTP
     C                     MOVE BCBO      BHBK
     C                     MOVE BCMK      BHMK
     C           CIAK      IFEQ 'Y'
     C           SCVI      ANDEQ'Y'
     C                     MOVE 'Y'       CNVI
     C                     ELSE
     C                     MOVE *BLANKS   CNVI
     C                     ENDIF
     C           NPAC      IFEQ 'N'
     C           NPSN      ORGE *ZEROS
     C                     MOVE *BLANK    NEGI
     C                     ELSE
     C                     MOVE 'N'       NEGI
     C                     ENDIF
      *
     C                     MOVE *BLANKS   TRFR
     C                     MOVE ISSR      CSTN
     C                     MOVE BHBA      BRHA
     C                     MOVE '00'      ASQN
     C                     Z-ADDKBCAD     EVDT
     C                     MOVE SNMCY     EVCY
     C                     Z-ADD*ZEROS    STLT
     C                     MOVE *BLANKS   STLA
     C                     MOVE *BLANKS   SEBR
     C           *INU1     IFEQ *ON
     C                     MOVE '1'       RVRS
     C                     ELSE
     C                     MOVE '0'       RVRS
     C                     ENDIF
     C                     MOVE *BLANKS   KCUST
     C                     Z-ADD*ZEROS    KNCA
     C                     MOVE SNMCY     KCCY
     C                     Z-ADD*ZEROS    KBCA
     C                     MOVE BHSC      SESH
     C           BGNOST    IFEQ 'Y'
     C           PCBK      ANDEQ*BLANKS
     C                     MOVE BVSEPC    PRFC
     C                     ELSE
     C                     MOVE PCBK      PRFC
     C                     ENDIF
     C           CAC005    IFEQ 'Y'
     C                     MOVE PPRFC     PRFC
     C                     ENDIF
     C           FCPORS    IFEQ 'B'
     C                     EXSR SETPTF
     C                     ENDIF
      *
     C                     WRITESEKEYDF
      *
      ** Accumulate totals
      *
     C                     Z-ADD1         Z
     C                     Z-ADD1         S
     C                     Z-ADDEVAM      ZZAMT
     C                     EXSR ZHASH
     C                     ADD  1         OREC
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  U01    - SUBROUTINE TO UPDATE ACTION RECORD                  *
      *                                                               *
      *****************************************************************
      *
     C           U01       BEGSR                           ***  U01   ***
      *
      ***  Store worked-on BPACC record, CHAIN for UPDATE and then
      ***  restore the worked-on fields to the record.
      *
     C                     MOVELRECIN     STREC
      *
     C   01      BPCKEY    CHAINBPACDFX              88
     C   02      BPCKEY    CHAINBPABDFX              88
     C   03      BPCKEY    CHAINBPAHDFX              88
      *
     C           *IN03     IFEQ '1'
     C                     MOVE RECI      @RECI   1
     C                     END
      *
     C           *IN88     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVE 'BPACC-2' DBFILE           **************
     C                     MOVELBPBCKY    DBKEY            * DB ERROR 20
     C                     Z-ADD20        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
      *
     C                     MOVELSTREC     RECIN
      *
     C           *IN03     IFEQ '1'
     C                     MOVE @RECI     RECI
     C                     END
      *
      ** RESET ACTIONED DATE FOR BPACCD BPACBD
      *
     C           *IN03     IFEQ '0'
     C                     Z-ADDRUND      BCED
     C                     MOVE 'H'       RECI
     C                     END
      *
     C           BCAS      IFEQ '40'
     C                     Z-ADDWBCP1     BCP1
      *
      ***  When WBCP2 is updated correctly in the first place, the
      ***  following fix becomes unnecessary, so its changed back.
      *
     C                     Z-ADDWBCP2     BCP2
     C                     Z-ADDWBCPL     BCPL
     C                     Z-ADDLAVP      BCAT
     C                     ELSE
      *
     C           BCAS      IFEQ '30'
     C           BCAS      OREQ '35'
     C                     Z-ADDWBCDV     BCDV
     C                     ELSE
      *
     C           BCAS      IFEQ '60'
     C           *INU1     IFEQ '0'
     C                     Z-ADDWBCPL     BCPL
     C                     ELSE
     C                     Z-SUBWBCPL     BCPL
     C                     END
     C                     Z-ADDLAVP      BCAT
     C                     END
     C                     END
      *
     C                     END
      *
     C   01                EXCPTUBPACC
     C   02                EXCPTUBPACB
     C   03                EXCPTUBPACH
      *
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  U02    - SUBROUTINE TO UPDATE BOOK POSITION HEADER           *
      *                                                               *
      *****************************************************************
      *
     C           U02       BEGSR                           ***  U02   ***
      *
     C                     EXCPTUPDBKH
      *
     C                     ADD  1         BHUREC
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  U04    - SUBROUTINE TO UPDATE BOOK POSITION MONTHLY          *
      *           STATISTICS FILE.                                    *
      *                                                               *
      *****************************************************************
      *
     C           U04       BEGSR                           ***  U04   ***
      *
      ** If reversal run then reverse out the realized P/L calculated.
      *
     C           *INU1     IFEQ '0'
     C                     ADD  WRPTP     RPTM
      *
     C                     ELSE
     C                     SUB  WRPTP     RPTM
     C                     END
      *
     C           CSE065    IFEQ 'Y'
     C           *INU1     IFEQ '0'
     C                     ADD  BKVAMT    BKAMTM
     C                     ADD  EQTAMT    EQAMTM
     C                     ELSE
     C                     SUB  BKVAMT    BKAMTM
     C                     SUB  EQTAMT    EQAMTM
     C                     ENDIF
     C                     ENDIF
      *
     C                     EXCPTUPDBKM
      *
     C                     ADD  1         U04CNT
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SETPTF - Subroutine to set portfolio reference on A/C key    *
      *                                                               *
      *****************************************************************
     C           SETPTF    BEGSR
      *
     C                     MOVEL*BLANK    PTFR
      *
     C                     MOVE EVTP      WWKY1
     C                     MOVE TRTP      WWKY2
     C                     MOVE PORT      WWKY3
     C                     MOVE AMCD      WWKY4
     C           WWKY      LOKUPWWARRZ                   99
     C           *IN99     IFEQ '1'
     C                     EXSR SRPORT
     C                     END
     C                     ENDSR
      *****************************************************************
      /EJECT
      *******************************************************************
      *                                                                 *
      * SRPORT   - Access portfolio reference of book                   *
      *                                                                 *
      *******************************************************************
     C           SRPORT    BEGSR
      *
     C                     MOVEL'B'       I#PORS
     C                     MOVELFCR997    I#R997
     C                     MOVEL*BLANKS   I#CUST
     C                     MOVELBHBA      I#BRCA
     C                     MOVELBHBK      I#BOOK
     C                     MOVEL*BLANKS   I#PTFR
     C                     MOVEL*BLANKS   I#CPGM
      *
     C                     CALL 'AOPLCSR1'
     C                     PARM *BLANKS   P@RTCD  7        B:Return code
     C                     PARM '*KEY   ' P@OPTN  7        I:Option
     C                     PARM           I@PARM           I:Parameters
     C                     PARM *BLANKS   O@PARM           O:Parameters
     C           SDPLCS    PARM SDPLCS    DSFDY            O:Format
      *
     C           P@RTCD    IFEQ *BLANKS
     C           I#PTFR    ANDNEFCR997
     C                     MOVELO#PTFR    PTFR
     C                     ELSE
     C                     MOVELI#PTFR    PTFR
     C                     END
      *
     C                     ENDSR
      *******************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AMORTR - Subroutine to generate Reversal Key for Amortization*
      *           since Last Position Date.                           *
      *         Removed by E22957                                     *
      *                                                               *
      *****************************************************************
      *
     C           AMORTR    BEGSR                           *** AMORTR ***
      *
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      *  GETPPP -  SUBROUTINE TO GET PARTLY PAID PRICE PRIOR TO ACTION.
      *            THIS IS USED IN PREFERENCE TO THE PARTLY PAID PRICE
      *            ON THE ACTION ITSELF. THIS MAY BE WRONG DUE TO BACK-
      *            VALUATION OF TRADES OR OF PARTLY PAID CALLS.
      *
      *****************************************************************
     C           GETPPP    BEGSR
     C                     Z-ADD*ZERO     BCTA
     C                     MOVE 'PP'      ETYP
     C                     Z-ADDBCAD      TDVD
     C           PRIOR     IFEQ 'Y'
     C           SEDKEY    SETGTSEDEVDO
     C                     ELSE
     C           SEDKEY    SETLLSEDEVDO
     C                     END
     C                     READ SEDEVDO                  81
      *
      ** Get the total partly paid price prior to the action date from the
      ** Security Diary. If no details are present, use the current partly
      ** paid price from the security.
      *
     C           *IN81     IFEQ '0'
     C           SDSN      ANDEQBCSS
     C           SDET      ANDEQ'PP'
     C           SDTP      IFEQ *ZERO
     C                     MOVE SDTA      BCTA
     C                     ELSE
     C                     MOVE SDTP      BCTA
     C                     END
     C                     ELSE
     C                     MOVE CPDP      BCTA
     C                     MOVE SNMCY     NMCY
     C                     END
     C                     ENDSR
      *****************************************************************
     C/EJECT
      *******************************************************************
      *
      *  GETCUF -  Subroutine to get current factor prior to action.
      *            This is used in preference to the current factor
      *            on the action itself. This may be wrong due to back-
      *            valuation of trades or of mortgage payments.
      *
      *******************************************************************
      *
     C           GETCUF    BEGSR
      *
     C                     MOVE 'MP'      ETYP
     C                     Z-ADDBCAD      TDVD    50
      *
      ** If this is for trade date action then need to access current
      ** factor based on value date.
      *
     C           BCTV      IFEQ 'T'
     C           BCAS      ANDEQ'40'
     C           BCTR      CHAINTRADS                81
     C           *IN81     IFEQ '0'
     C           TRECI     ANDNE'*'
     C                     Z-ADDTRDVD     TDVD
     C                     END
     C                     END
      *
     C           PRIOR     IFEQ 'Y'
     C           SEDKEY    SETGTSEDEVDO
     C                     ELSE
     C           SEDKEY    SETLLSEDEVDO
     C                     END
     C                     READ SEDEVDO                  81
      *
      ** Get the current factor prior to the action date from the
      ** security diary. If no details are present, use the current
      ** factor from the security.
      *
     C           *IN81     IFEQ '0'
     C           SDSN      ANDEQBCSS
     C           SDET      ANDEQ'MP'
     C                     Z-ADDSDCP      AAPR
     C                     ELSE
     C                     Z-ADDCFCT      AAPR
     C                     MOVE SNMCY     NMCY
     C                     END
     C                     ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  AUDIT  - SUBROUTINE TO UPDATE AUDIT RECORDS AND OUTPUT THE   *
      *           CONTROL REPORT                                      *
      *                                                               *
      *****************************************************************
      *
     C           AUDIT     BEGSR                           *** AUDIT  ***
      *
      ** CHECK NO DBASE ERROR HAS BEEN ENCOUNTERED SO FAR
      **    -  UPDATE BOOK POSITION AUDIT RECORD
      *
     C           *INU7     IFEQ '0'
     C                     READ BKPOSAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BKPOS'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 10
     C                     Z-ADD10        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      BPREC   50
     C           NORE      ADD  BPAREC    BPTREC  50
     C                     Z-ADDBPTREC    NORE
     C                     UPDATBKPOSAF
      *
      ** -  UPDATE BOOK POSITION HEADER AUDIT RECORD
      *
     C                     READ BKPHDAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BKPHD'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 11
     C                     Z-ADD11        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      BHREC   50
     C           NORE      ADD  BHAREC    BHTREC  50
     C                     Z-ADDBHTREC    NORE
     C                     UPDATBKPHDAF
      *
      ** -  UPDATE HISTORIC BOOK POSITION HEADER AUDIT FILE
      *
     C                     READ BKPHHAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BKPHH'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 14
     C                     Z-ADD14        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      HHREC   50
     C           NORE      ADD  HHAREC    HHTREC  50
     C                     Z-ADDHHTREC    NORE
     C                     UPDATBKPHHAF
      *
      ** -  UPDATE BOOK POSITIONS MONTHLY STATISTICS AUDIT FILE
      *
     C                     READ BKMTHAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BKMTH'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 18
     C                     Z-ADD18        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      MTREC   50
     C           NORE      ADD  W04CNT    MTTREC  50
     C                     Z-ADDMTTREC    NORE
     C                     UPDATBKMTHAF
      *
      ** -  READ ACTIONS AUDIT FILE FOR CONTROL TOTALS
      *
     C           *INU1     IFEQ '0'
      *
      ** ONLY READ AUDIT RECORDS FOR BPACCD AND BPACCB IF U1 OFF
      **  WHEN U1 ON BPACC LF IS OVERRIDEN TO BPACR AND THESE PF'S
      **  DO NOT EXIST IN BPACR AND SO NO COUNT CAN OF RECORDS OCCURS.
      *
     C                     READ BPACCAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BPACC'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 12
     C                     Z-ADD12        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      ACREC   50
      *
     C           CSE111    IFEQ 'Y'
      *
     C                     READ BPACCAPD                 64
      *
      ** ADJUST FOR DIVIDEND RECORDS NOT READ
      *
     C           *IN64     IFEQ *OFF
     C                     ADD  CTLIVC    ICREC
     C                     ADD  CTREVC    ICREC
     C                     ENDIF
      *
     C                     ENDIF
      *
     C           ICREC     IFNE NORE
     C                     MOVE '1'       *IN50
     C                     MOVE '1'       *INU8
     C                     END
      *
      ** - READ (BPACB) ACTIONS AUDIT FILE FOR CONTROL TOTALS
      *
     C                     READ BPACBAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BPACB'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 15
     C                     Z-ADD15        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      ABREC   50
      *
     C           CSE111    IFEQ 'Y'
      *
     C                     READ BPACBVPD                 64
      ** ADJUST FOR DIVIDEND RECORDS NOT READ
      *
     C           *IN64     IFEQ *OFF
     C                     ADD  CTLIVB    IBREC
     C                     ADD  CTREVB    IBREC
     C                     ENDIF
     C                     ENDIF
      *
     C           IBREC     IFNE NORE
     C                     MOVE '1'       *IN51
     C                     MOVE '1'       *INU8
     C                     END
      *
      ** -  READ (BPACH) ACTIONS AUDIT FILE FOR CONTROL TOTALS
      *
     C                     READ BPACHAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BPACH'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 16
     C                     Z-ADD16        DBASE            **************
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      AHREC   50
     C                     END
      *
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ELSE
      *
      ** *INU1 IS ON - ONLY DO AUDIT CHECK FOR BPACHD
      *
      ** -  READ (BPACH) ACTIONS AUDIT FILE FOR CONTROL TOTALS
      *
     C                     READ BPACHAF                  86
     C           *IN86     IFEQ '1'
     C                     SETON                     U7U8
     C           *LOCK     IN   LDA
     C                     MOVEL'BPACH'   DBFILE           **************
     C                     MOVEL'AUDIT'   DBKEY            * DB ERROR 21
     C                     Z-ADD21        DBASE
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
     C                     Z-ADDNORE      AHREC   50
     C                     END
     C                     END
      *
      **   -  OUTPUT CONTROL REPORT
      *
     C                     WRITEHEADAU
      *
     C           *INU7     IFEQ '0'
      *
     C                     ADD  IXREC     ICREC
     C                     ADD  IXREC     ACREC
     C           OREC      IFNE 0
     C                     Z-ADDINT,S     OHASH1
     C                     Z-ADDDEC,S     OHASH2
     C                     ELSE
     C                     Z-ADD0         OHASH1
     C                     Z-ADD0         OHASH2
     C                     END
      *
     C                     WRITECONTROL
     C                     WRITEHEADAU
     C                     WRITECONTROL1
      *
     C                     ELSE
     C                     WRITEERROR
     C                     END
      *
      ** IF NO DATATBASE ERRORS OUTPUT AUDIT RECORD TO SEKEYA
      *
     C           *INU7     IFEQ '0'
     C                     MOVE OREC      NORE
     C                     Z-ADDOHASH1    HRWN
     C                     Z-ADDOHASH2    HRDC
     C                     WRITESEKEYAF
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  BKHCHN - SUBROUTINE TO CHAIN TO BOOK POSITION HEADER         *
      *                                                               *
      *****************************************************************
      *
     C           BKHCHN    BEGSR                           *** BKHCHN ***
      *
     C                     MOVEA'000'     *IN,10
     C           BKHKEY    CHAINBKPHDDF              80
     C  N80      RECI      COMP 'D'                  8080
     C           *IN80     IFEQ '0'
     C                     MOVE '1'       *IN10
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKPCHN - SUBROUTINE TO CHAIN TO BOOK POSITION RECORD         *
      *                                                               *
      *****************************************************************
      *
     C           BKPCHN    BEGSR                           *** BKPCHN ***
      *
     C                     MOVE '0'       *IN11
     C                     MOVE '0'       *IN65
     C           BKPKEY    CHAINBKPOSDF              80
      *
     C           *IN80     IFEQ '1'
     C                     MOVE '1'       *IN65
     C                     ENDIF
      *
     C  N80      BRECI     COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C                     ELSE
     C                     MOVE '1'       *IN11
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKMCHN - SUBROUTINE TO CHAIN TO BOOK POSITION MONTHLY        *
      *           STATISTICS FILE.                                    *
      *                                                               *
      *****************************************************************
      *
     C           BKMCHN    BEGSR                           *** BKMCHN ***
      *
     C                     MOVE '0'       *IN12
     C           BKHKEY    CHAINBKMTHDF              80
     C  N80      BKID      COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C                     ELSE
     C                     MOVE '1'       *IN12
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BOKCHN - SUBROUTINE TO CHAIN TO BOOK FILE                    *
      *                                                               *
      *****************************************************************
      *
     C           BOKCHN    BEGSR                           *** BOKCHN ***
      *
      ** If CAC005 is installed, retrieve user book
      ** BCBO in the Book Position file is being held as a pseudo book
      *
     C           CAC005    IFEQ 'Y'
     C                     CALL 'AOBKPCR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*USER  ' POPTN   7
     C                     PARM           PBKCD   2
     C                     PARM           PPRFC   4
     C                     PARM BCBO      PPSBK   2
      *
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVEL'SDBKPCPD'DBFILE           ************
     C                     Z-ADD031       DBASE            * DBERR 031*
     C                     MOVELBCBO      DBKEY            ************
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     OUT  LDA
     C                     DUMP
     C                     ENDIF
     C                     ENDIF
      *
     C           CAC005    IFEQ 'Y'
     C           PBKCD     CHAINBOOKDDF              80
     C                     ELSE
      *
     C           BOKKEY    CHAINBOOKDDF              80
     C                     ENDIF
     C  N80      RECI      COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'BOOKD'   DBFILE           **************
     C           CAC005    IFEQ 'Y'
     C                     MOVELPBKCD     DBKEY
     C                     ELSE
     C                     MOVELBCBO      DBKEY            * DB ERROR 05
     C                     ENDIF
     C                     Z-ADD05        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  SECCHN - SUBROUTINE TO CHAIN TO SECURITIES FILE              *
      *                                                               *
      *****************************************************************
      *
     C           SECCHN    BEGSR                           *** SECCHN ***
      *
     C           SECKEY    CHAINSECTYDF              80
     C  N80      RECI      COMP '*'                      80
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'SECTY'   DBFILE           **************
     C                     MOVELBCSS      DBKEY            * DB ERROR 06
     C                     Z-ADD06        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     ELSE
      *
      ** Australian yield security ?
      *
     C           STBS      IFEQ 'Y'
     C           SYBS      ANDEQ'AU'
     C                     SETON                     53
     C                     ELSE
     C                     SETOF                     53
     C                     END
      *
     C                     END
      *
      ** SAVE LAST COUPON DATE OFF SECURITY
      *
     C                     Z-ADDLCPN      SVLCPN  50
     C                     MOVE STBS      WOTBS   1
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  INVCHN - SUBROUTINE TO CHAIN TO INVESTMENTS FILE             *
      *                                                               *
      *****************************************************************
      *
     C           INVCHN    BEGSR                           *** INVCHN ***
      *
     C           INVKEY    CHAININVTPDF              80
     C  N80      RECI      COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'INVTP'   DBFILE           **************
     C                     MOVELIKEY      DBKEY            * DB ERROR 07
     C                     Z-ADD07        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     END
      *
      ** Setup SITP and NMCY for ZLCD and ZNCD subroutine for CSE005.
      *
     C                     MOVE SSITP     SITP
     C                     MOVE SNMCY     NMCY
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  PPCCHN - SR to chain to Book positions profit centre file    *
      *                                                               *
      *****************************************************************
      *
     C           PPCCHN    BEGSR                           *** PPCCHN ***
      *
     C           KSEPCB    CHAINSEPCBDF              80
     C           *IN80     IFEQ '1'
     C           RECI      ORNE 'D'
     C           *LOCK     IN   LDA
     C                     MOVEL'SEPCBD'  DBFILE           **************
     C                     MOVELKSEPCR    DBKEY            * DB ERROR 22
     C                     Z-ADD22        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  CLICHN - SUBROUTINE TO CHAIN TO CLIENTS FILE                 *
      *                                                               *
      *****************************************************************
      *
     C           CLICHN    BEGSR                           *** CLICHN ***
      *
     C           CLIKEY    CHAINCLINTSEF             80
     C  N80      RECI      COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     MOVEL'CLINT'   DBFILE
     C                     MOVELTRCP      KEY7    7
     C                     MOVE '1'       KEY7             **************
     C                     MOVELKEY7      DBKEY            * DB ERROR 08
     C                     Z-ADD08        DBASE            **************
     C                     SETON                     U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  TABCHN - SUBROUTINE TO CHAIN TO TABTG10                      *
      *                                                               *
      *****************************************************************
      *
     C           TABCHN    BEGSR                           *** TABCHN ***
      *
     C                     MOVE *BLANK    TKEY
     C                     MOVEL'20'      TKEY
     C                     MOVELSNMCY     KEY4    4
     C                     MOVE '1'       KEY4
     C                     MOVE KEY4      TKEY
     C           TABKEY    CHAINTABTG10F             80
     C  N80      RECI      COMP 'D'                  8080
     C           *IN80     IFEQ '1'
     C           *LOCK     IN   LDA
     C                     SETON                     U7U8  **************
     C                     MOVE 'TABLE'   DBFILE           * DB ERROR 09
     C                     MOVELTKEY      DBKEY            **************
     C                     Z-ADD09        DBASE
     C                     OUT  LDA
     C                     DUMP
     C                     END
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKHSR  - SUBROUTINE FOR ERROR HANDLING OF BOOK POSITION      *
      *           HEADER.                                             *
      *                                                               *
      *****************************************************************
      *
     C           BKHSR     BEGSR                           *** BKHSR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPHDD'  DBFILE
     C                     MOVELBCKEY     DBKEY
     C                     Z-ADD90        DBASE
     C                     MOVE STSBKH    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKPSR  - SUBROUTINE FOR ERROR HANDLING OF BOOK POSITIONS     *
      *                                                               *
      *****************************************************************
      *
     C           BKPSR     BEGSR                           *** BKPSR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPOS'   DBFILE
     C                     MOVELBCKEY     DBKEY
     C                     Z-ADD91        DBASE
     C                     MOVE STSBKP    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  SKDSR  - SUBROUTINE FOR ERROR HANDLING OF ACCOUNT KEYS       *
      *                                                               *
      *****************************************************************
      *
     C           SKDSR     BEGSR                           *** SKDSR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'SEKEY'   DBFILE
     C                     MOVELACKY      DBKEY
     C                     Z-ADD92        DBASE
     C                     MOVE STSSKD    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  SKASR  - SUBROUTINE FOR ERROR HANDLING OF ACCOUNT KEYS AUDIT *
      *           RECORD                                              *
      *                                                               *
      *****************************************************************
      *
     C           SKASR     BEGSR                           *** SKASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'SEKEY'   DBFILE
     C                     MOVEL'AUDIT'   DBKEY
     C                     Z-ADD93        DBASE
     C                     MOVE STSSKA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BHASR  - SUBROUTINE FOR ERROR HANDLING OF BOOK POSITION      *
      *           HEADER AUDIT RECORD.                                *
      *                                                               *
      *****************************************************************
      *
     C           BHASR     BEGSR                           *** BHASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPHD'   DBFILE
     C                     MOVEL'AUDIT'   DBKEY
     C                     Z-ADD94        DBASE
     C                     MOVE STSBHA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKASR  - SUBROUTINE FOR ERROR HANDLING OF BOOK POSITIONS     *
      *           AUDIT RECORD.                                       *
      *                                                               *
      *****************************************************************
      *
     C           BKASR     BEGSR                           *** BKASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPOS'   DBFILE
     C                     MOVEL'AUDIT'   DBKEY
     C                     Z-ADD95        DBASE
     C                     MOVE STSBKA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BPASR  - SUBROUTINE FOR ERROR HANDLING OF ACTIONS RECORD     *
      *                                                               *
      *****************************************************************
      *
     C           BPASR     BEGSR                           *** BPASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BPACC'   DBFILE
     C                     MOVELBCKEY     DBKEY
     C                     Z-ADD96        DBASE
     C                     MOVE STSBPA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BKMSR  - SUBROUTINE FOR ERROR HANDLING OF MONTHLY STATISTICS *
      *           FILE                                                *
      *                                                               *
      *****************************************************************
      *
     C           BKMSR     BEGSR                           *** BKMSR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKMTH'   DBFILE
     C                     MOVELBCKEYP    DBKEY
     C                     Z-ADD97        DBASE
     C                     MOVE STSBKM    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  BMASR  - SUBROUTINE FOR ERROR HANDLING OF MONTHLY STATISTICS *
      *           AUDIT FILE                                          *
      *                                                               *
      *****************************************************************
      *
     C           BMASR     BEGSR                           *** BMASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKMTH'   DBFILE
     C                     MOVEL'AUDIT'   DBKEY
     C                     Z-ADD81        DBASE
     C                     MOVE STSBMA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  HHDSR  - SUBROUTINE FOR ERROR HANDLING OF HISTORIC BOOK      *
      *           POSITION HEADERS FILE                               *
      *                                                               *
      *****************************************************************
      *
     C           HHDSR     BEGSR                           *** HHDSR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPHH'   DBFILE
     C                     MOVELBPKEY     DBKEY
     C                     Z-ADD98        DBASE
     C                     MOVE STSHHD    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *                                                               *
      *  HHASR  - SUBROUTINE FOR ERROR HANDLING OF HISTORIC BOOK      *
      *           POSITION HEADERS AUDIT FILE.                        *
      *                                                               *
      *****************************************************************
      *
     C           HHASR     BEGSR                           *** HHASR  ***
      *
     C           *LOCK     IN   LDA
     C                     MOVE 'BKPHH'   DBFILE
     C                     MOVEL'AUDIT'   DBKEY
     C                     Z-ADD99        DBASE
     C                     MOVE STSHHA    DBSTAT
     C                     MOVE '1'       *IN87
     C                     SETON                       U7U8
     C                     OUT  LDA
     C                     DUMP
     C                     GOTO EAUDIT
      *
     C                     ENDSR
      *
     C*****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  *PSSR  - Error control subroutine                            *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR                           ** *PSSR **
      *
     C           @RUN      IFEQ *BLANKS
     C                     MOVE 'Y'       @RUN    1
     C                     DUMP
     C                     END
      *
     C                     ENDSR
      *
     C*****************************************************************
      /EJECT
     C/COPY ZSRSRC,ZACCH
      /EJECT
     C/COPY ZSRSRC,ZBKDT
      /EJECT
     C/COPY ZSRSRC,ZACCRZ1
      /EJECT
     C/COPY ZSRSRC,ZACCZZ1
      /EJECT
     C/COPY ZSRSRC,ZCNSDZ1
      /EJECT
     C/COPY ZSRSRC,ZAVPRZ1
      /EJECT
     C/COPY ZSRSRC,ZAPORTZ1
      /EJECT
     C/COPY ZSRSRC,ZDATE1Z2
      /EJECT
     C/COPY ZSRSRC,ZDATE2Z2
      /EJECT
     C/COPY ZSRSRC,ZDAYSZ2
      /EJECT
     C/COPY ZSRSRC,ZDYYRZ3
      /EJECT
     C/COPY ZSRSRC,ZEVCDZ1
      /EJECT
     C/COPY ZSRSRC,ZHASHZ3
      /EJECT
     C/COPY ZSRSRC,ZICD2Z1
      /EJECT
     C/COPY ZSRSRC,ZICDSEZ1
      /EJECT
     C/COPY ZSRSRC,ZLCDZ1
      /EJECT
     C/COPY ZSRSRC,ZNCDZ3
      /EJECT
     C/COPY ZSRSRC,ZPRCIZ1
      /EJECT
     C/COPY ZSRSRC,ZPRCOZ1
      /EJECT
     C/COPY ZSRSRC,ZRATEZ1
      /EJECT
     C/COPY ZSRSRC,ZSYSTMZ1
      /EJECT
     C/COPY ZSRSRC,ZYCEZ1
      /EJECT
     C/COPY ZSRSRC,ZYLDIZ1
      /EJECT
     C/COPY ZSRSRC,ZYLDOZ1
      /EJECT
     C/COPY ZSRSRC,ZYLDZ2
     O/EJECT
     C/COPY ZSRSRC,ZCALCD
     C/EJECT
     OBPACDFX E                UBPACC
     O                         RECI
     O                         BCED
     O                         BCP1
     O                         BCP2
     O                         BCPL
     O                         BCAT
     O                         BCDV
     OBPABDFX E                UBPACB
     O                         RECI
     O                         BCED
     O                         BCP1
     O                         BCP2
     O                         BCPL
     O                         BCAT
     O                         BCDV
     OBPAHDFX E                UBPACH
     O                         RECI
     O                         BCED
     O                         BCP1
     O                         BCP2
     O                         BCPL
     O                         BCAT
     O                         BCDV
     OBKPHDDF E                UPDBKH
     O                         LPSD
     O                         LPCD
     O                         LAVP
     O                         LATD
     O                         ARPC
     O                         ICLD
     O                         IACR
     O                         IACP
     O                         UPPT
     O                         DPAP
     O                         BUDU
     O                         INDO
     O                         BHCP
     O                         BHDP
     O                         BHPP
     O                         BHTR
     O                         BHRN
     O                         LFXP
     O                         DPFP
     O                         DNAT
     O                         LAVN
     O                         BUDN
     O                         DPAN
     O                         NAVP
     O                         BKVAMT
     O                         EQTAMT
      *
     OBKMTHDF E                UPDBKM
     O                         BPIT
     O                         CPDD
     O                         RPTM
     O                         MMPL
     O                         DPTM
     O                         BKAMTM
     O                         EQAMTM
      *
     OBPACCH1FE        04      UPDACT
     O                         HCNTP
     O                         HCNTN
      *
     OBPACBH1FE        05      UPDACT
     O                         HCNTP
     O                         HCNTN
      *
     OBPACHH1FE        06      UPDACT
     O                         HCNTP
     O                         HCNTN
      *
     OBPACCH3FE        13      UPDACB
     O                         HCNTP
     O                         HCNTN
      *
     OBPACBH3FE        14      UPDACB
     O                         HCNTP
     O                         HCNTN
      *
     OBPACHH3FE        15      UPDACB
     O                         HCNTP
     O                         HCNTN
      *
     OBPACCH1FE        04      RELACT
     OBPACBH1FE        05      RELACT
     OBPACHH1FE        06      RELACT
     OBKPOSDF E                UPDBKP
     O                         BKCOST
      /EJECT
      ***
**  CPY@
(c) Finastra International Limited 2017
**   ZF29 DAY NOS OF FEB 29 TO 2096 (INCLUDING 2000)
0006001521029820444305904073650882610287117481320914670161311759219053
2051421975234362489726358278192928030741322023366335124365853804639507
40968424294389045351
**   ZYDY - YEARS IN DAYS CUMULATIVE, FOUR YEAR SPAN
0366073110961461
**   ZMDY - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
000031059090120151181212243273304334365
**   ZMNM - MONTHS SHORT NAMES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
**  POWER8 - ARRAY OF POWERS FOR CURRENCY CONVERSION
00000001
00000010
00000100
00001000
00010000
00100000
01000000
10000000
**  WWARRZ
P  PP
R  CO
C  DI
H  DI
M  CV
