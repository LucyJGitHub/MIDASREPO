     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE EXTEL Daily Changes Wire Reforma')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Securities Trading Module
     F*                                                               *
     F*  SE3111  -  EXTEL Daily Changes Wire Reformat                 *
     F*                                                               *
     F*  Function: To reformat the information received from the Extel*
     F*            wire transmission                                  *
     F*            - Build up the Header records containing Index     *
     F*              values                                           *
     F*            - Split up the customised details containing the   *
     F*              market prices                                    *
     F*                                                               *
     F*  Called by: SEC3111 - Extel Daily Changes Wire Take-On        *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
     F*  LAST AMEND NO. 052254             DATE 11JAN94               *
     F*  PREV AMEND NO. E34034             DATE  7JAN92               *
     F*                 E29170             DATE 14NOV91               *
     F*                 S01117             DATE 11JUN91               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
     F*  052254 - RECOMPILED as CURRENT FACTOR amended from 9,8       *
     F*           to 10,9                                             *
     F*  E34034 - Recompiled over changed printer file                *
     F*  E29170 - Reprot Control Facility changes                     *
     F*  S01117 - Multi-branching                                     *
     F*                                                               *
     F*****************************************************************
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*
     FEXWIRD  IF  E                    DISK
     FTABTB10 IF  E                    DISK
     FEXTELA  O   E                    DISK
     FEXTF4A  O   E                    DISK
     FEXTF4B  O   E                    DISK
     FEXTF4C  O   E                    DISK
     FEXTF4D  O   E                    DISK
     FEXTF4E  O   E                    DISK
     FEXTF4F  O   E                    DISK
     FEXTF4G  O   E                    DISK
     FEXTF4H  O   E                    DISK
     FEXTF4I  O   E                    DISK
     FEXTF4J  O   E                    DISK
     FEXTF4K  O   E                    DISK
     FEXTF4L  O   E                    DISK
     FEXTELF1 O   E                    DISK
     FEXTELZ  O   E                    DISK
     FSE3111AUO   E                    PRINTER
      /EJECT
     F*****************************************************************
     F*                                                               *
     F*  F U N C T I O N   O F   I N D I C A T O R S                  *
     F*                                                               *
     F*   12 - END OF FILE - EXWIR                                    *
     F*   13 - END OF DETAIL RECS. (RECTYP NOT 'F1')                  *
     F*   14 - REC.TYPE IS NOT ONE OF A - L                           *
     F*   16 - RECORD NOT FOUND - EXWIR                               *
     F*   18 - TRAILER REC. IS NOT LAST REC. IN EXWIR                 *
     F*   20 - FILES OUT OF BALANCE (NO. OF BLOCKS)                   *
     F*   50 - BATCH HEADER MISSING                                   *
     F*   52 - BATCH TRAILER MISSING                                  *
     F*   70 - TABTB10 NOT FOUND                                      *
     F*   U7 - DATABASE ERROR                                         *
     F*   U8 - FILES OUT OF BALANCE                                   *
     F*   LR - END OF PROGRAM                                         *
     F*                                                               *
     F*****************************************************************
      /EJECT
     F*****************************************************************
     F*                                                               *
     F*  I N D E X   T O   S U B R O U T I N E S                      *
     F*                                                               *
     F*   INIT   - INITIAL PROCESSING                                 *
     F*   EXHDR  - EXTEL HEADER PROCESSING                            *
     F*   EXDTL  - EXTEL DETAIL PROCESSING                            *
     F*   ENDPGM - PRINTS AUDIT REPORT.                               *
     F*   DBERR  - DEFAULT ERROR HANDLING                             *
     F*   *PSSR  - Error handling                                     *   S01117
     F*                                                               *
     F*****************************************************************
      /EJECT
     E                    CPY@    1   1 80
     E* ARA:  ARRAY OF 80 X 1 BYTE PARTS OF EXWIRD REC.
     E                    ARA        80  1
     E* ARC:  33 X 1 BYTE ELEMENTS - TO JOIN 2 PARTS OF DTL REC.
     E                    ARC        33  1
     E* ARY:  ARRAY STORES 780 X 20 BYTE ELEMENTS
     E                    ARY       780 20
     E* ARZ:  ARRAY STORES 65  X 20 BYTE ELEMENTS
     E                    ARZ        65 20
     E* KEYS: ARRAY OF DATABASE ERROR DESCRIPTIONS (PUT INTO KEY FIELD)
     E                    KEYS    1   8 30
     E*
      /EJECT
     ILDA         DS                            256                       S01117
     I                                      134 183 DBLOT                 S01117
     I                                      134 141 DBFILE                S01117
     I                                      142 170 DBKEY                 S01117
     I                                      171 180 DBPGM                 S01117
     I                                      181 1830DBASE                 S01117
     I*LDA******* UDS                            256                      S01117
     I***********                           134 177 DBLOT                 S01117
     I***********                           134 138 DBFILE                S01117
     I***********                           139 167 DBKEY                 S01117
     I***********                           168 175 DBPGM                 S01117
     I***********                           176 177 DBASE                 S01117
     I*
     IPSDS       SDS
     I*
     I**      DATA AREA FOR PROGRAM STATUS DISK AREA
     I*
     I                                     *PROGRAM #PGM
     I                                      201 208 #FILE
     I                                      244 253 WID
     I                                      254 263 USRID
     I*
     IEXSTTD    E DSEXSTAT
     I*
     I**       Data Area  EXSTAT
     I*
     I            DS
     I*
     I** DATA STRUCTURE TO ACCESS PARTS OF EXWIR RECORD
     I*
     I                                        1  80 WBRCV
     I                                        1  80 ARA
     I                                        1   3 WKEND
     I                                        1   6 WJBCD
     I                                    P   1   40WA1P
     I                                        1   4 WA1X
     I                                        5   6 WTYP
     I                                    P  10  110WXFSN
     I                                       13  180WNOBK
     I*
     I            DS
     I*
     I** DATA STRUCTURES TO REFORMAT DATE FROM YYYMMDD TO DDMMYY
     I*
     I                                        1   60DATE
     I                                        1   20WDD2
     I                                        3   40WMM2
     I                                        5   60WYY2
     I            DS
     I                                        1   70WDATN
     I                                        1   30WYYY1
     I                                        4   50WMM1
     I                                        6   70WDD1
     I*
     I            DS
     I*
     I** DATA STRUCTURE TO SETUP EXTELF1 FIELDS FOR OUTPUT
     I*
     I                                        1  33 DTLREC
     I                                    P   1   40F1SCP
     I                                        5   6 F1RCIP
     I                                    P   7  120F1P
     I                                       13  13 F2P
     I                                       14  14 F11P
     I                                       15  15 F3P
     I                                    P  16  210F4P
     I                                    P  22  270F5P
     I                                       28  28 F6P
     I                                       29  29 F7P
     I                                       30  30 F8P
     I                                       31  31 F9P
     I                                    P  32  330F10P
     I*
     I            DS
     I*
     I** DATA STRUCTURE TO SETUP EXTF4(A-L) FIELDS FOR OUTPUT
     I*
     I                                        1  80 RECFLD
     I                                        1  20 QRTR1
     I                                       21  40 QRTR2
     I                                       41  60 QRTR3
     I                                       61  80 QRTR4
     I*
     I            DS
     I*
     I** DATA STRUCTURE TO ACCESS CERTAIN FIELDS BEFORE WRITING F4HDR
     I*
     I                                        1  20 ARZ1
     I                                    P   1   40WA1P2
     I                                        5   5 RECIF4
     I                                    P   6   90WXFDAT
     I                                    P  10  110WKXFSN
     I                                    P  12  130WX2YDT
     I*
     IDSF4AD    E DSEXTF4A
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4A FOR OUTPUT
     I              F1SCP                           AA1P
     I              XRTYP                           ARTYP
     I              XFDAT                           AFDAT
     I              XFSN                            AFSN
     I              X2YDT                           A2YDT
     I*
     IDSF4BD    E DSEXTF4B
     I*
     I**EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4B
     I              F1SCP                           BA1P
     I              XRTYP                           BRTYP
     I              XFDAT                           BFDAT
     I              XFSN                            BFSN
     I              X2YDT                           B2YDT
     I*
     IDSF4CD    E DSEXTF4C
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4C FOR OUTPUT
     I              F1SCP                           CA1P
     I              XRTYP                           CRTYP
     I              XFDAT                           CFDAT
     I              XFSN                            CFSN
     I              X2YDT                           C2YDT
     I*
     IDSF4DD    E DSEXTF4D
     I*
     I*EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4D
     I              F1SCP                           DA1P
     I              XRTYP                           DRTYP
     I              XFDAT                           DFDAT
     I              XFSN                            DFSN
     I              X2YDT                           DFYDT
     I*
     IDSF4ED    E DSEXTF4E
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4E FOR OUTPUT
     I              F1SCP                           EA1P
     I              XRTYP                           ERTYP
     I              XFDAT                           EFDAT
     I              XFSN                            EFSN
     I              X2YDT                           E2YDT
     I*
     IDSF4FD    E DSEXTF4F
     I*
     I*EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4F
     I              F1SCP                           FA1P
     I              XRTYP                           FRTYP
     I              XFDAT                           FFDAT
     I              XFSN                            FFSN
     I              X2YDT                           F2YDT
     I*
     IDSF4GD    E DSEXTF4G
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4G FOR OUTPUT
     I              F1SCP                           GA1P
     I              XRTYP                           GRTYP
     I              XFDAT                           GFDAT
     I              XFSN                            GFSN
     I              X2YDT                           G2YDT
     I*
     IDSF4HD    E DSEXTF4H
     I*
     I*EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4H
     I              F1SCP                           HA1P
     I              XRTYP                           HRTYP
     I              XFDAT                           HFDAT
     I              XFSN                            HFSN
     I              X2YDT                           H2YDT
     I*
     IDSF4ID    E DSEXTF4I
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4I FOR OUTPUT
     I              F1SCP                           IA1P
     I              XRTYP                           IRTYP
     I              XFDAT                           IFDAT
     I              XFSN                            IFSN
     I              X2YDT                           I2YDT
     I*
     IDSF4JD    E DSEXTF4J
     I*
     I*EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4J
     I              F1SCP                           JA1P
     I              XRTYP                           JRTYP
     I              XFDAT                           JFDAT
     I              XFSN                            JFSN
     I              X2YDT                           J2YDT
     I*
     IDSF4KD    E DSEXTF4K
     I*
     I*EXTERNAL DATA STRUCTURE TO ACCESS EXTF4K FOR OUTPUT
     I              F1SCP                           KA1P
     I              XRTYP                           KRTYP
     I              XFDAT                           KFDAT
     I              XFSN                            KFSN
     I              X2YDT                           K2YDT
     I*
     IDSF4LD    E DSEXTF4L
     I*
     I*EXTERNAL DATA STRUCTURE TO OUTPUT TO EXTF4L
     I              F1SCP                           LA1P
     I              XRTYP                           LRTYP
     I              XFDAT                           LFDAT
     I              XFSN                            LFSN
     I              X2YDT                           L2YDT
     I*
     ICPYR@#      DS
     I*
     I*  DATA STRUCTURE FOR COMPILATION  - COPYRIGHT INSERTION
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
     I**
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*   MAIN CONTROL                                                *
     C*                                                               *
     C*   FUNCTION: Calls INIT subroutine.                            *
     C*             Reads through EXWIRD, processing each             *
     C*   record according to its type.                               *
     C*                                                               *
     C*   CALLS  INIT -  INITIAL PROCESSING                           *
     C*          EXHDR - EXTEL HEADER PROCESSING                      *
     C*          EXDTL - EXTEL DETAIL PROCESSING                      *
     C*          ENDPGM - END OF PROGRAM PROCESSING                   *
     C*          DBERR - DATABASE ERROR HANDLING                      *
     C*                                                               *
     C*****************************************************************
     C**
     C**     ACCESS DATA AREA EXSTAT
     C**
     C           *NAMVAR   DEFN EXSTAT    EXSTTD
     C                     IN   EXSTTD                 99
     C**
     C**     DB Error if no record found.
     C**
     C           *IN99     IFEQ '1'
     C***********          MOVE '01'      #BASE            *************  S01117
     C                     Z-ADD1         #BASE            *************  S01117
     C                     MOVEL'DTARA'   #FILE            * DBERR  01 *
     C                     MOVEL'EXSTAT'  #KEY             *************
     C**
     C                     EXSR DBERR
     C**
     C                     END
     C*
     C** PERFORM INITIAL PROCESSING  (READ RECORD 1)
     C*
     C                     EXSR INIT
     C*
     C** READ THROUGH FILE, PROCESSING EACH RECORD ACCORDING TO TYPE.
     C*
     C           *IN12     DOWNE'1'                        B1
     C                     READ EXWIRD                   12(12 = EOF)
     C*
     C** END OF FILE
     C*
     C           *IN12     IFEQ '1'                        B*2
     C                     GOTO ENDTAG                       2
     C                     END                             E*2
     C*
     C** ADD 1 TO NO. RECORDS READ
     C*
     C                     ADD  1         NOBKC             1
     C                     MOVE BRCV      WBRCV             1
     C*
     C** RECORD MATCHES EXTEL HDR RECORD (EXTF4A - L)
     C*
     C           WA1P      IFEQ 0                          B**3
     C           WA1X      OREQ *BLANKS                       3
     C*
     C                     EXSR EXHDR                         3
     C*
     C                     ELSE                            E**3
     C*
     C** RECORD MATCHES EXTEL DTL RECORD (EXTELF1)
     C*
     C           WA1P      IFGT 0                          B***4
     C           WTYP      ANDEQ'F1'                           4
     C*
     C** NO. OF EXTF4 HDRS READ IS LESS THAN 12 - ERROR
     C*
     C           NOF4H     IFLT 12                         B****5
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,4    #KEY             * DB ERROR 04 *
     C***********          MOVE '04'      #BASE            ***************S01117
     C                     Z-ADD4         #BASE            ***************S01117
     C                     EXSR DBERR                           5
     C                     END                             E****5
     C*
     C                     EXSR EXDTL                          4
     C*
     C                     ELSE                            X***4
     C*
     C** RECORD MATCHES BATCH TRAILER RECORD (EXTELZ)
     C*
     C           WKEND     IFEQ 'END'                      B****5
     C                     EXSR ENDPGM                          5
     C                     ELSE                            X****5
     C*
     C** REC. DOESN'T MATCH ANY OF THE ABOVE TYPES (I.E. NO TRAILER)
     C*
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,5    #KEY             * DB ERROR 05 *
     C***********          MOVE '05'      #BASE            ***************S01117
     C                     Z-ADD5         #BASE            ***************S01117
     C                     EXSR DBERR                           5
     C                     END                             E****5
     C                     END                             E***4
     C                     END                             E**3
     C*
     C                     END                             E1
     C*
     C           ENDTAG    TAG
     C*
     C** EOF REACHED BEFORE TRAILER FOUND (I.E. LR NOT SET ON YET)
     C*
     C           *INLR     IFNE '1'                        B1
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,6    #KEY             * DB ERROR 06 *
     C***********          MOVE '06'      #BASE            ***************S01117
     C                     Z-ADD6         #BASE            ***************S01117
     C                     EXSR DBERR                       1
     C                     END                             E1
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*   INIT - INITIAL PROCESSING                                   *
     C*                                                               *
     C*   FUNCTION: Sets up LDA fields.                               *
     C*             Accesses TABTB10.                                 *
     C*             Read first EXWIR rec.                             *
     C*                                                               *
     C*   CALLED BY :  MAIN PROCESS                                   *
     C*                                                               *
     C*   CALLS     :  NONE                                           *
     C*                                                               *
     C*****************************************************************
     C*
     C           INIT      BEGSR
     C*
     C** SETUP FIELDS FOR LDA
     C*
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA                                       S01117
     C                     MOVEL*BLANK    DBLOT
     C                     MOVEL'SE3111'  DBPGM
     C                     OUT  LDA                                       S01117
     C*
     C** READ I.C.D. RECORD 1 (TABTB10  FOR RUNDATE,TITLE ETC.)
     C*
     C           1         CHAINTABTB10              70
     C*
     C** IF RECORD NOT FOUND/NOT LIVE - DATABASE ERROR
     C*
     C           *IN70     IFEQ '1'                        B1
     C           RECI      ORNE 'D'                         1
     C                     MOVEL'TABTB'   #FILE            ***************
     C                     MOVEL'01      '#KEY             * DB ERROR 01 *
     C***********          MOVE '1'       #BASE            ***************S01117
     C                     Z-ADD1         #BASE            ***************S01117
     C                     EXSR DBERR                       1
     C                     END                             E1
     C*
     C** INITIALISE TOTAL FIELDS
     C*
     C                     Z-ADD0         NOBK    60
     C                     Z-ADD0         NOBKC   60
     C                     Z-ADD0         NODTL   60
     C                     Z-ADD0         NOF4H   60
     C*
     C                     SETOF                     505212
     C*
     C** READ FIRST RECORD (EXTEL HEADER)
     C*
     C                     READ EXWIRD                   12(12 = EOF)
     C  N12                MOVE BRCV      WBRCV
     C*
     C** NULL FILE OR NOT THE HEADER REC.  -  ERROR
     C*
     C           *IN12     IFEQ '1'                        B1
     C           WJBCD     ORNE JBCD                       B1
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,2    #KEY             * DB ERROR 02 *
     C***********          MOVE '02'      #BASE            ***************S01117
     C                     Z-ADD2         #BASE            ***************S01117
     C                     EXSR DBERR                       1
     C                     END                             E1
     C*
     C                     ENDSR
     C**
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*  EXHDR - EXTEL HEADER PROCESSING                              *
     C*                                                               *
     C*   FUNCTION: Stores EXWIRD recs. as 20 byte array              *
     C*   elements.  65 of these are then loaded into a               *
     C*   1300 byte array which is written out to  the                *
     C*   appropriate F4 Header file.                                 *
     C*                                                               *
     C*  CALLED BY : MAIN                                             *
     C*                                                               *
     C*  CALLS :     FMTHDR                                           *
     C*              DBERR                                            *
     C*                                                               *
     C*****************************************************************
     C*
     C           EXHDR     BEGSR
     C*
     C                     Z-ADD0         X       30
     C*
     C* STORE EXTF4 HDRS AS 780 X 20BYTE ARRAY ELEMENTS
     C*     (65 X 20 BYTES = ONE 1300 BYTE OUTPUT RECORD)
     C*     (12 X 65 = 780 = NO. OF 20 BYTE PARTS FOR ALL 12 HDRS)
     C*     (780/4 = 195   = NO. OF INPUT RECS. TO BE READ TO STORE
     C*     ALL 12 EXTF4 HEADERS)
     C*
     C                     DO   195                        B1
     C*
     C                     MOVE BRCV      RECFLD            1
     C*
     C** STORE FOUR QUARTERS (each 20 bytes long) OF RECORD IN ARRAY
     C*
     C                     ADD  1         X                 1
     C                     MOVE QRTR1     ARY,X             1
     C*
     C                     ADD  1         X                 1
     C                     MOVE QRTR2     ARY,X             1
     C*
     C                     ADD  1         X                 1
     C                     MOVE QRTR3     ARY,X             1
     C*
     C                     ADD  1         X                 1
     C                     MOVE QRTR4     ARY,X             1
     C*
     C* (IF 195 RECORDS HAVE BEEN STORED, NEXT READ IS DONE IN MAIN)
     C*
     C           X         IFLT 780                        B*2
     C                     READ EXWIRD                   12  2
     C*
     C* IF END OF FILE REACHED (12 ON) THIS IS AN ERROR
     C*
     C           *IN12     IFEQ '1'                        B**3
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,3    #KEY             * DB ERROR 03 *
     C***********          MOVE '03'      #BASE            ***************S01117
     C                     Z-ADD3         #BASE            ***************S01117
     C                     EXSR DBERR                         3
     C                     END                             E**3
     C*
     C                     ADD  1         NOBKC              2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C**  LOAD 65 20-BYTE ELEMENTS INTO ARZ (= 1300 BYTES) FOR EACH HDR
     C*
     C                     Z-ADD0         X
     C*
     C                     DO   12                         B1 (12 HDRS)
     C*
     C                     Z-ADD0         Y                 1
     C*
     C                     DO   65                         B*2
     C                     ADD  1         X                  2
     C                     ADD  1         Y                  2
     C                     MOVE ARY,X     ARZ,Y              2
     C                     END                             E*2
     C*
     C**  MOVE 1ST PART OF ARRAY INTO DATA STRUC. TO ACCESS REC. ID.
     C*
     C                     MOVEAARZ,1     ARZ1              1          UC.
     C*
     C**  SETUP THE FIRST 5 FIELDS (COMMON TO ALL F4 HDR RECS.)
     C*
     C                     Z-ADDWA1P2     F1SCP             1
     C                     MOVE RECIF4    XRTYP             1
     C                     Z-ADDWXFDAT    XFDAT             1
     C                     Z-ADDWKXFSN    XFSN              1
     C                     Z-ADDWX2YDT    X2YDT             1
     C*
     C**  WRITE CORRECT LENGTH RECORD FOR THIS F4 HEADER (A - L)
     C*
     C           RECIF4    IFEQ 'A'                        B*2
     C*
     C* (TAKE FIELDS FROM THIS REC. AND OUTPUT BATCH HEADER)
     C*
     C                     EXSR FMTHDR
     C*
     C                     MOVEAARZ       DSF4AD             2
     C                     WRITEEXTF4AF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'B'                        B*2
     C                     MOVEAARZ       DSF4BD             2
     C                     WRITEEXTF4BF                      2
     C                     ADD  1         NOF4H            E*2
     C                     END
     C*
     C           RECIF4    IFEQ 'C'                        B*2
     C                     MOVEAARZ       DSF4CD             2
     C                     WRITEEXTF4CF                      2
     C                     ADD  1         NOF4H            E*2
     C                     END
     C*
     C           RECIF4    IFEQ 'D'                        B*2
     C                     MOVEAARZ       DSF4DD             2
     C                     WRITEEXTF4DF                      2
     C                     ADD  1         NOF4H            E*2
     C                     END
     C*
     C           RECIF4    IFEQ 'E'                        B*2
     C                     MOVEAARZ       DSF4ED             2
     C                     WRITEEXTF4EF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'F'                        B*2
     C                     MOVEAARZ       DSF4FD             2
     C                     WRITEEXTF4FF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'G'                        B*2
     C                     MOVEAARZ       DSF4GD             2
     C                     WRITEEXTF4GF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'H'                        B*2
     C                     MOVEAARZ       DSF4HD             2
     C                     WRITEEXTF4HF                      2
     C                     ADD  1         NOF4H            E*2
     C                     END
     C*
     C           RECIF4    IFEQ 'I'                        B*2
     C                     MOVEAARZ       DSF4ID             2
     C                     WRITEEXTF4IF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'J'                        B*2
     C                     MOVEAARZ       DSF4JD             2
     C                     WRITEEXTF4JF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'K'                        B*2
     C                     MOVEAARZ       DSF4KD             2
     C                     WRITEEXTF4KF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C           RECIF4    IFEQ 'L'                        B*2
     C                     MOVEAARZ       DSF4LD             2
     C                     WRITEEXTF4LF                      2
     C                     ADD  1         NOF4H              2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C                     ENDSR
     C*
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*  EXDTL - EXTEL DETAIL PROCESSING                             *
     C*                                                              *
     C*   FUNCTION: ARA = array of 80 x 1 byte elements.             *
     C*             ARC = array of 33 x 1 byte elements.             *
     C*                                                              *
     C*   Each rec. read is moved into ARA and each 33               *
     C*   bytes are output as an EXTELF1 rec.  When ARA              *
     C*   has less than 33 bytes left, these are moved               *
     C*   into ARC, to be joined by the first part of the            *
     C*   next rec. read and form a  33 byte rec.                    *
     C*                                                              *
     C*  CALLED BY : MAIN                                            *
     C*                                                              *
     C*  CALLS :     DBERR                                           *
     C*                                                              *
     C****************************************************************
     C*
     C           EXDTL     BEGSR
     C*
     C                     SETOF                     13
     C*
     C                     Z-ADD80        Y       20
     C                     Z-ADD1         Z       20
     C**
     C**  DO THIS LOOP UNTIL THE REC. ID IS NOT 'F1' (I.E. END OF DTLS)
     C**
     C           *IN13     DOUEQ'1'                        B1 (13 ON IF
     C*                                                    END OF DTLS)
     C**
     C**  CHECK THAT WHOLE 33 BYTE REC. CAN BE ACCESSED FROM THIS BLOCK
     C**  (I.E. COUNTER Y IS NOT LESS THAN 33)
     C**
     C*
     C           Y         IFGE 33                         B*2
     C*
     C**  CHECK REC. ID = 'F1'   (IN POSITIONS 5 AND 6 OF 33 BYTE REC.)
     C*
     C           Z         ADD  4         S       20         2
     C           Z         ADD  5         T       20         2
     C           ARA,S     IFNE 'F'                        B**3
     C           ARA,T     ORNE '1'                           3
     C                     SETON                     13       3
     C                     GOTO ENDDTL                        3
     C                     END                             E**3
     C*
     C**  OUTPUT THIS 33 BYTE REC.
     C*
     C                     MOVEAARA,Z     DTLREC             2
     C                     WRITEEXTELF1F                     2
     C                     ADD  1         NODTL              2
     C*
     C**  POINT TO NEXT 33 BYTES OF BLOCK UNLESS THERE ARE EXACTLY 33
     C**  BYTES LEFT OF THIS BLOCK.
     C*
     C           Y         IFNE 33                         B**3
     C*
     C           Y         SUB  33        Y                   3
     C           Z         ADD  33        Z                   3
     C*
     C                     ELSE                            X**3
     C*
     C**  Y = 33 (SPECIAL CASE - START AT BYTE 1 OF NEXT BLOCK READ)
     C*
     C                     READ EXWIRD                   12   3
     C*
     C           *IN12     IFEQ '1'                        B***4
     C                     GOTO ERRTAG                         4
     C                     END                             E***4
     C*
     C** MOVE NEXT REC. INTO DATA STRUCTURE SO THAT ARA IS FILLED.
     C*
     C                     MOVE BRCV      WBRCV               3
     C                     ADD  1         NOBKC               3
     C*
     C** RESET COUNTERS.
     C*
     C                     Z-ADD80        Y                   3
     C                     Z-ADD1         Z                   3
     C*
     C                     END                             E**3
     C*
     C                     ELSE                            X*2
     C*
     C** LAST PART OF ARA IS LESS THAN 33 BYTES LONG - NOT A WHOLE REC.
     C** SO NEXT REC. MUST BE READ IN ORDER TO COMPLETE THIS REC.
     C*
     C** MOVE LAST PART OF THIS 80 BYTE REC. INTO FRONT PART OF ARC.
     C** (W IS SET TO NO. OF 1ST EMPTY ELEMENT OF ARC.)
     C*
     C                     MOVEAARA,Z     ARC,1              2
     C           Y         ADD  1         W       20         2
     C*
     C                     READ EXWIRD                   12  2
     C*
     C           *IN12     IFEQ '1'                        B**3
     C                     GOTO ERRTAG                        3
     C                     END                             E**3
     C*
     C** MOVE NEXT REC. INTO DATA STRUCTURE SO THAT ARA IS FILLED.
     C*
     C                     MOVE BRCV      WBRCV              2
     C                     ADD  1         NOBKC              2
     C*
     C** MOVE 1ST PART OF NEXT 80 BYTE REC INTO THE END PART OF ARC.
     C*
     C                     MOVEAARA,1     ARC,W              2
     C*
     C** OUTPUT THE 33 BYTES OF ARC TO EXTELF1 FILE
     C*
     C                     MOVEAARC       DTLREC             2
     C                     WRITEEXTELF1F                     2
     C                     ADD  1         NODTL              2
     C*
     C** POINT TO START OF NEXT 33 BYTE REC.
     C*
     C           33        SUB  Y         Z                  2
     C                     ADD  1         Z                  2
     C*
     C           80        SUB  Z         Y                  2
     C                     ADD  1         Y                  2
     C*
     C*
     C                     END                             E*2
     C*
     C*
     C*
     C           ENDDTL    TAG
     C*
     C                     END                             E1
     C*
     C           ERRTAG    TAG
     C*
     C** IF END OF FILE REACHED (12 ON) THIS IS AN ERROR
     C*
     C           *IN12     IFEQ '1'                        B1
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,7    #KEY             * DB ERROR 07 *
     C***********          MOVE '07'      #BASE            ***************S01117
     C                     Z-ADD7         #BASE            ***************S01117
     C                     EXSR DBERR                       1
     C                     END                             E1
     C*
     C*
     C                     ENDSR
     C*
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*   FMTHDR - FORMAT FIELDS FOR OUTPUT TO EXTELA.               *
     C*                                                              *
     C*   FUNCTION: Reformats date from packed YYYMMDD to            *
     C*   numeric DDMMYY format.                                     *
     C*   Sets up sequence no. & EXTEL code. Writes EXTELA rec.      *
     C*                                                              *
     C*   CALLED BY :  EXHDR                                         *
     C*                                                              *
     C*   CALLS     :  NONE                                          *
     C*                                                              *
     C*                                                              *
     C****************************************************************
     C*
     C           FMTHDR    BEGSR
     C*
     C** REFORMAT DATE FROM PACKED YYYMMDD TO NUMERIC DDMMYY (SEE DATA
     C*                                                     STRUCTURES)
     C                     MOVE DATE      DREC
     C                     Z-ADDWXFDAT    WDATN
     C                     Z-ADDWYYY1     WYY2
     C                     Z-ADDWMM1      WMM2
     C                     Z-ADDWDD1      WDD2
     C*
     C** SETUP SEQUENCE NO. & EXTEL CODE
     C*
     C                     Z-ADDWXFSN     SQNR
     C*
     C                     WRITEEXTELAF
     C*
     C                     ENDSR
     C*
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*   ENDPGM - END OF PROGRAM PROCESSING                         *
     C*                                                              *
     C*   FUNCTION: Checks that Trailer is the last rec. on          *
     C*   EXWIRD.                                                    *
     C*   Sets up output fields and writes EXTELZ.                   *
     C*   Checks Run Controls and writes out Audit report.           *
     C*                                                              *
     C*   CALLED BY :  MAIN PROCESS                                  *
     C*                                                              *
     C*   CALLS     :  NONE                                          *
     C*                                                              *
     C*                                                              *
     C****************************************************************
     C*
     C           ENDPGM    BEGSR
     C*
     C** (DO NOT COUNT TRAILER IN BLOCK COUNT.)
     C*
     C                     SUB  1         NOBKC
     C*
     C** IF TRAILER REC. IS NOT LAST REC. IN FILE,  THIS IS AN ERROR
     C*
     C                     READ EXWIRD                   12
     C*
     C           *IN12     IFEQ '0'                        B1
     C                     MOVEL'EXWIR'   #FILE            ***************
     C                     MOVELKEYS,8    #KEY             * DB ERROR 08 *
     C***********          MOVE '08'      #BASE            ***************S01117
     C                     Z-ADD8         #BASE            ***************S01117
     C                     EXSR DBERR                       1
     C*
     C                     ELSE                            X1
     C*
     C**  SETUP OUTPUT FIELDS FOR TRAILER REC. & WRITE REC.
     C*
     C                     MOVE 'Z'       RECI              1
     C                     Z-ADDWNOBK     NOBK             -FROM EXWIRD
     C                     Z-ADDNODTL     NOF1             -CALCULATED
     C*
     C                     WRITEEXTELZF                     1
     C                     END                             E1
     C*
     C**  CHECK RUN CONTROLS (NO. BLOCKS READ AGAINST NO. ON TRAILER)
     C*
     C           NOBKC     IFNE NOBK                       B1
     C                     SETON                     20U8   1
     C                     END                             E1
     C*
     C**  PRODUCE AUDIT REPORT
     C*
     C                     WRITESE3111A1
     C                     WRITESE3111A2
     C   20                WRITESE3111A3                   (20=OUT OF BAL)
     C***********          WRITESE3111A5                                  E29170
     C*
     C                     SETON                     LR
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**                                                              *
     C**    DEFAULT ERROR HANDLING                                    *
     C**                                                              *
     C**    CALLED FROM:  anywhere                                    *
     C**    CALLS:        returns.                                    *
     C**                                                              *
     C*****************************************************************
     C**
     C           DBERR     BEGSR                                       ***
     C**
     C                     SETON                     LRU7U8
     C**
     C           *LOCK     IN   LDA
     C           *LIKE     DEFN DBKEY     #KEY
     C           *LIKE     DEFN DBASE     #BASE
     C**
     C                     MOVEL#PGM      DBPGM
     C                     MOVEL#KEY      DBKEY
     C                     MOVEL#FILE     DBFILE
     C                     MOVEL#BASE     DBASE
     C                     OUT  LDA
     C**
     C*** WRITE ERROR REPORT
     C**
     C                     WRITESE3111A1
     C                     WRITESE3111A2
     C                     WRITESE3111A4
     C***********          WRITESE3111A5                                  E29170
     C**
     C***********          DUMP                                           S01117
     C                     EXSR *PSSR                                     S01117
     C                     RETRN
     C**
     C                     ENDSR
     C**
      *****************************************************************   S01117
      /EJECT                                                              S01117
      *****************************************************************   S01117
      *                                                               *   S01117
      *  *PSSR  - Error control subroutine                            *   S01117
      *                                                               *   S01117
      *****************************************************************   S01117
      *                                                                   S01117
     C           *PSSR     BEGSR                           ** *PSSR **    S01117
     C**                                                                  S01117
     C           @RUN      IFEQ *BLANKS                                   S01117
     C                     MOVE 'Y'       @RUN    1                       S01117
     C                     DUMP                                           S01117
     C                     END                                            S01117
     C**                                                                  S01117
     C                     ENDSR                                          S01117
      *                                                                   S01117
     C*****************************************************************
**  CPY@
(c) Misys International Banking Systems Ltd. 2001
**   KEYS - DESCRIPTION USED AS KEY FOR DATABASE ERROR
01        10
NULL EXWIRD/INVALID HDR
END OF FILE REACHED
LESS THAN 12 EXTF4 HEADERS
NO TRAILER FOUND
EOF REACHED BEFORE TRL. FOUND
END OF FILE REACHED
TRL. NOT LAST REC. IN FILE
