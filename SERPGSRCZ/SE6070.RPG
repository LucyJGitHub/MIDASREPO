     H
      *****************************************************************
/*OVR *: OVRDBF FILE(SECGCDXX) TOFILE(SECGCDPD) SHARE(*NO)          : *
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE Charge codes maintenance')
     F*****************************************************************
     F*                                                               *
     F*  Midas - PORTFOLIO MANAGEMENT MODULE                  *
     F*                                                               *
     F*  RPG/SE6070 - SC CHARGE CODES MAINTENANCE                     *
     F*                                                               *
     F*  Function:  This Program allows the maintenance of Charge     *
     F*             Codes for Safe Custody Fees                       *
     F*                                                               *
     F*  Called by: SEC02 - Input Cycle Processing                    *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD031             Date 10Apr06               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 S01464             Date 04Apr94               *
      *                 S01355             Date 16Dec92               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
     F*  S01464 - Safe Custody Fees                                   *
     F*  S01355 - RELEASE 3 INCORPORATION                             *
     F*                                                               *
     F*****************************************************************
     F***SE6070DDCF**E********************WORKSTN**********************   S01464
     FSE6070DFCF  E                    WORKSTN                            S01464
     F                                        RRN   KSFILE SE6070S0
     F*
     F**  CHARGE CODES PREFIX IS SF
     F***SCCGCDPDUF**E***********K********DISK*********KCOMIT*******A**   S01464
     FSECGCDPDUF  E           K        DISK         KCOMIT       A        S01464
     F* PREFIX SF
     F                                              KINFDS INFDS
     F                                              KINFSR *PSSR
     F***SCCGCDZZUF**E********************DISK*********KCOMIT**********   S01464
     FSECGCDPAUF  E                    DISK         KCOMIT                S01464
     F* PREFIX SF
     F                                              KINFSR *PSSR
     F***SCCGCDXXIF**E***********K********DISK*************************   S01464
     F* PREFIX SF
     F************SCCGCDP0**************************KRENAMESCCGCDPX****   S01464
     FSECGCDXXIF  E           K        DISK                               S01464
     F            SECGCDP0                          KRENAMESECGCDPX       S01464
     F                                              KINFSR *PSSR
     F***SDBANKPDIF**E********************DISK*************************   S01464
     F**PREFIX*BJ******************************************************   S01464
     F**********************************************KINFSR**PSSR*******   S01464
     F***SCICDPPDIF**E********************DISK*************************   S01464
     F**PREFIX*SA******************************************************   S01464
     F**********************************************KINFSR**PSSR*******   S01464
     F*****************************************************************
     F* ID F  C  H  L    FUNCTION OF INDICATORS
     F*
     F*       01         SFLDSP  SE6070S0
     F*       02         SFLDSPCTL SE6070C0
     F*       03         SFLEND    SE6070S0
     F*       04         NO RECORD ON SUBFILE SE6070S0
     F*       05         PROTECT/NON-DISPLAY ON LOCATION
     F*       06         PROTECT FIELDS
     F*       09         SFLDLT    SE6070S0
     F*
     F*       10         START  SCREEN
     F*       11         REVIEW SCREEN
     F*       12         UPDATE SCREEN
     F*       13         ERROR MESSAGE SUBFILE - END INDICATOR
     F*
     F*       15         INDICATOR USED ON WRITE/UPDATE OPS TO CONDITION
     F*                                    CALL OF *PSSR
     F*
     F*       20         ANY VALID KEY PRESSED
     F*       21         ERROR-DDACTN
     F*       23         ERROR-DDCGCM
     F*       24         ERROR-DDGCMA
     F*
     F*       25         ROLLUP
     F*       26         ROLLDOWN
     F*       27         WORK INDICATOR
     F*
     F*       31         ERROR DDCHGB-CHARGE BASIS INVALID
     F*       32         ERROR DDCGMT-CHARGING METHOD NOT VALID
     F*       33         ERROR DDMINC-MINIMUM CHARGE AMOUNT NOT VALID
     F*       34         ERROR DDCHNR-POSITION CURSOR ON NARRATIVE
     F*       37         ERROR DDUR1 -UPPER RANGE LIMIT (1)
     F*       38         S/SE6070F0  UPPER RANGE LIMIT (2) INVALID
     F*       39         S/SE6070F0  UPPER RANGE LIMIT (3) INVALID
     F*       40         S/SE6070F0  UPPER RANGE LIMIT (4) INVALID
     F*       41         S/SE6070F0  UPPER RANGE LIMIT (5) INVALID
     F*       42         S/SE6070F0  UPPER RANGE LIMIT (6) INVALID
     F*       43         S/SE6070F0  UPPER RANGE LIMIT (7) INVALID
     F*       44         S/SE6070F0  UPPER RANGE LIMIT (8) INVALID
     F*       45         S/SE6070F0  UPPER RANGE LIMIT (9) INVALID
     F*       46         S/SE6070F0  UPPER RANGE LIMIT (10) INVALID
     F*       47         S/SE6070F0  UPPER RANGE LIMIT (11) INVALID
     F*       48         S/SE6070F0  UPPER RANGE LIMIT (12) INVALID
     F*       49         S/SE6070F0  UPPER RANGE LIMIT (13) INVALID
     F*       50         S/SE6070F0  UPPER RANGE LIMIT (14) INVALID
     F*       51         ERROR DDPE1-PERCENTAGE (1)
     F*       52         S/SE6070F0  PERCENTAGE (2) INVALID
     F*       53         S/SE6070F0  PERCENTAGE (3) INVALID
     F*       54         S/SE6070F0  PERCENTAGE (4) INVALID
     F*       55         S/SE6070F0  PERCENTAGE (5) INVALID
     F*       56         S/SE6070F0  PERCENTAGE (6) INVALID
     F*       57         S/SE6070F0  PERCENTAGE (7) INVALID
     F*       58         S/SE6070F0  PERCENTAGE (8) INVALID
     F*       59         S/SE6070F0  PERCENTAGE (9) INVALID
     F*       60         S/SE6070F0  PERCENTAGE (10) INVALID
     F*       61         S/SE6070F0  PERCENTAGE (11) INVALID
     F*       62         S/SE6070F0  PERCENTAGE (12) INVALID
     F*       63         S/SE6070F0  PERCENTAGE (13) INVALID
     F*       64         S/SE6070F0  PERCENTAGE (14) INVALID
     F*       65         S/SE6070F0  PERCENTAGE (15) INVALID
     F*       66         ERROR DDFC1-FLAT CHARGE(1) INVALID
     F*       67         S/SE6070F0  FLAT CHARGE(2) INVALID
     F*       68         S/SE6070F0  FLAT CHARGE(3) INVALID
     F*       69         S/SE6070F0  FLAT CHARGE(4) INVALID
     F*       70         S/SE6070F0  FLAT CHARGE(5) INVALID
     F*       71         S/SE6070F0  FLAT CHARGE(6) INVALID
     F*       72         S/SE6070F0  FLAT CHARGE(7) INVALID
     F*       73         S/SE6070F0  FLAT CHARGE(8) INVALID
     F*       74         S/SE6070F0  FLAT CHARGE(9) INVALID
     F*       75         S/SE6070F0  FLAT CHARGE(10) INVALID
     F*       76         S/SE6070F0  FLAT CHARGE(11) INVALID
     F*       77         S/SE6070F0  FLAT CHARGE(12) INVALID
     F*       78         S/SE6070F0  FLAT CHARGE(13) INVALID
     F*       79         S/SE6070F0  FLAT CHARGE(14) INVALID
     F*       80         S/SE6070F0  FLAT CHARGE(15) INVALID
     F*
     F*       83         ADD RECORD
     F*       89         READ CHANGE ON SUBFILE
     F*                  WORK INDICATOR
     F*
     F*       99         WORK
     F*
     F*       U7         DATABASE ERROR
     F*       U8         PROGRAM  ERROR
     F*
     F*       'AID' VALUES USED
     F*
     F*       03         CA3
     F*       10         CA10
     F*       12         CA12
     F*       RA         ENTER PRESSED
     F*       UP         ROLLUP
     F*       DN         ROLLDOWN
     E*****************************************************************
     E*
     E                    CPY@    1   1 80
     E*
     E** ARRAY FOR ZEDIT
     **/COPY ZSRSRC,ZEDITZ1
     E                    ZA1        16  1               ZALIGN/ZEDIT ARRAY
     E                    ZA2        16  1               ZALIGN/ZEDIT ARRAY
     E*
     E** input array for za0840
     E                    @F         16  1
     E** output array for za0840
     E                    @G         16  1
     E** array of powers of ten
     E                    @H      1  15 15 0
     E*
     E** UPPER RANGE LIMIT ARRAY DERIVED FROM SCREEN
     E                    UPL        14 16
     E*
     E** PERCENTAGE ARRAY  DERIVED FROM SCREEN
     E                    PER        15 12
     E*
     E** FLAT CHARGE ARRAY DERIVED FROM SCREEN
     E                    FLC        15 16
     E*
     E** UPPER RANGE LIMIT ARRAY USED TO INPUT INTO FILE
     E                    FUL        14 15 0
     E*
     E** PERCENTAGE ARRAY  USED TO INPUT INTO FILE
     E                    FPR        15 11 0
     E*
     E** FLAT CHARGE ARRAY USED TO INPUT INTO FILE
     E                    FFC        15 15 0
     E*
     E** ARRAY FOR CHARGE CODE VALIDATION
     E                    CHA    36  36  1
     I*****************************************************************
     I*
     I*  DATA STRUCTURE FOR COMPILATION  - COPYRIGHT INSERTION
     ICPYR@#      DS
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
     I**
     I*
     I** KEY FIELDS (TAKEN FROM 'KEY' PORTION OF SCREEN)
     ISCRCTL      DS
     I                                        1   1 REVW
     I                                        2   2 DDACTN
     I                                        3   7 INPK
     I                                        3   4 DDCGCM
     I                                        3   3 DDCG1
     I                                        4   4 DDCG2
     I                                        5   6 PAGK
     I                                        5   6 DDGCMA
     I*
     I**  DATA STRUCTURE FOR NUMERIC FIELDS TO NUMERIC ARRAY MOVES
     I            DS
     I                                        1 210 FULA
     I                                        1 210 FUL
     I*
     I**  DATA STRUCTURE FOR NUMERIC FIELDS TO NUMERIC ARRAY MOVES
     I            DS
     I                                        1 165 FPRA
     I                                        1 165 FPR
     I*
     I**  DATA STRUCTURE FOR NUMERIC FIELDS TO NUMERIC ARRAY MOVES
     I            DS
     I                                        1 225 FFCA
     I                                        1 225 FFC
     I*
     I**   INPUT LAYOUT CHARGE RANGE UPPER LIMIT FOR SCREEN
     IURLTAB      DS                            224
     I                                        1  16 DDUR1
     I                                       17  32 DDUR2
     I                                       33  48 DDUR3
     I                                       49  64 DDUR4
     I                                       65  80 DDUR5
     I                                       81  96 DDUR6
     I                                       97 112 DDUR7
     I                                      113 128 DDUR8
     I                                      129 144 DDUR9
     I                                      145 160 DDUR10
     I                                      161 176 DDUR11
     I                                      177 192 DDUR12
     I                                      193 208 DDUR13
     I                                      209 224 DDUR14
     I*
     I**  INPUT LAYOUT FOR  PERCENTAGE LEVELS FOR SCREEN
     IPERTAB      DS                            180
     I                                        1  12 DDPE1
     I                                       13  24 DDPE2
     I                                       25  36 DDPE3
     I                                       37  48 DDPE4
     I                                       49  60 DDPE5
     I                                       61  72 DDPE6
     I                                       73  84 DDPE7
     I                                       85  96 DDPE8
     I                                       97 108 DDPE9
     I                                      109 120 DDPE10
     I                                      121 132 DDPE11
     I                                      133 144 DDPE12
     I                                      145 156 DDPE13
     I                                      157 168 DDPE14
     I                                      169 180 DDPE15
     I*
     I**   INPUT LAYOUT FOR FLAT CHARGES FOR SCREEN
     IFCHTAB      DS                            240
     I                                        1  16 DDFC1
     I                                       17  32 DDFC2
     I                                       33  48 DDFC3
     I                                       49  64 DDFC4
     I                                       65  80 DDFC5
     I                                       81  96 DDFC6
     I                                       97 112 DDFC7
     I                                      113 128 DDFC8
     I                                      129 144 DDFC9
     I                                      145 160 DDFC10
     I                                      161 176 DDFC11
     I                                      177 192 DDFC12
     I                                      193 208 DDFC13
     I                                      209 224 DDFC14
     I                                      225 240 DDFC15
     I*
     I**   OUTPUT LAYOUT CHARGE RANGE UPPER LIMIT
     ISTUTAB      DS                            210
     I                                        1  150SFCRU1
     I                                       16  300SFCRU2
     I                                       31  450SFCRU3
     I                                       46  600SFCRU4
     I                                       61  750SFCRU5
     I                                       76  900SFCRU6
     I                                       91 1050SFCRU7
     I                                      106 1200SFCRU8
     I                                      121 1350SFCRU9
     I                                      136 1500SFCR10
     I                                      151 1650SFCR11
     I                                      166 1800SFCR12
     I                                      181 1950SFCR13
     I                                      196 2100SFCR14
     I*
     I**  OUTPUT LAYOUT FOR  PERCENTAGE LEVELS
     IPLCTAB      DS                            165
     I                                        1  117SFPCL1
     I                                       12  227SFPCL2
     I                                       23  337SFPCL3
     I                                       34  447SFPCL4
     I                                       45  557SFPCL5
     I                                       56  667SFPCL6
     I                                       67  777SFPCL7
     I                                       78  887SFPCL8
     I                                       89  997SFPCL9
     I                                      100 1107SFPC10
     I                                      111 1217SFPC11
     I                                      122 1327SFPC12
     I                                      133 1437SFPC13
     I                                      144 1547SFPC14
     I                                      155 1657SFPC15
     I*
     I**   OUTPUT LAYOUT FOR FLAT CHARGES
     IFCLTAB      DS                            225
     I                                        1  150SFFLC1
     I                                       16  300SFFLC2
     I                                       31  450SFFLC3
     I                                       46  600SFFLC4
     I                                       61  750SFFLC5
     I                                       76  900SFFLC6
     I                                       91 1050SFFLC7
     I                                      106 1200SFFLC8
     I                                      121 1350SFFLC9
     I                                      136 1500SFFL10
     I                                      151 1650SFFL11
     I                                      166 1800SFFL12
     I                                      181 1950SFFL13
     I                                      196 2100SFFL14
     I                                      211 2250SFFL15
     I*
     I** DS TO UPDATE DATE OF LAST UPDATE
     I            DS
     I                                        1   20WWDLUP
     I                                        3   5 WWMLUP
     I                                        6   70WWYLUP
     I                                        1   7 WWHLUP
     I*
     I** DATA STRUCTURE FOR RPG 01021 ERROR HANDLING
     IINFDS       DS
     I                                     *STATUS  STATUS
     I*                                                                   S01464
     I** Data Area RUNDAT                                                 S01464
     IRUNDT     E DSRUNDAT                                                S01464
     I*
     I** LOCAL DATA AREA FOR DATABASE ERROR DETAILS
     I***LDA********UDS****************************256                    S01464
     I**************************************132 183 DBLOT                 S01464
     I**************************************132 141 DBFILE                S01464
     ILDA         DS                            256                       S01464
     I                                      134 141 DBFILE                S01464
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
     I*                                                                   S01464
     I** Data Area of menu user                                           S01464
     IZMUSER    E DSZMUSER                                                S01464
     I*
     I**   MIDAS 'Next Available Transaction No.' Data Area  MNATN .
     IDNATN       DS                              5
     I                                        1   50FNATN
     I*
     I** DATA STRUCTURE FOR SETUP OF COMMIT TEXT
     ICMTTXT      DS
     I                                        1   50NATN
     I                                        6   7 MDID
     I                                        8  15 PGMN
     I                                       16  18 WSIDX
     I                                       19  240MTIME
     I                                       25  25 ACTNX
     I                                       26  35 USIDX
     I*
     I** PROGRAM STATUS DATA STRUCTURE FOR WS/USER ID'S
     IPSDS       SDS
     I                                      244 253 WSID
     I                                      254 263 USIDXX
     I*                                                                   S01464
     I** Bank Details                                                     S01464
     ISDBANK    E DSSDBANKPD                                              S01464
     I*                                                                   S01464
     I** Currency Details                                                 S01464
     ISDCURR    E DSSDCURRPD                                              S01464
     I*                                                                   S01464
     I** Securities Trading ICD                                           S01464
     ISDSTRD    E DSSDSTRDPD                                              S01464
     I*                                                                   S01464
     I** Safe Custody Fees ICD                                            S01464
     ISDSCFE    E DSSDSCFEPD                                              S01464
     I*                                                                   S01464
     I** Long data structure for access programs (700 long)               S01464
     IDSSDY     E DSDSSDY                                                 S01464
     I*                                                                   S01464
     C*****************************************************************
     C** CALCULATION SPECIFICATIONS:KEY LISTS
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*  P R O G R A M     S T A R T
     C*****************************************************************
     C*
     C** PERFORM SETUP OF STANDARD FIELDS
     C*
     C                     EXSR INIT
     C*
     C** D O    U N T I L   F 3   O R   E R R O R        -  S T A R T
     C*
     C           AID       DOUEQ'03'
     C*
     C           *IN10     CASEQ'1'       START
     C*
     C           *IN11     CASEQ'1'       REVIEW
     C*
     C           *IN12     CASEQ'1'       UPDATE
     C                     END
     C*
     C                     END
     C*
     C** D O    U N T I L   F 3   O R   E R R O R        -  E N D
     C*
     C** TERMINATE PROGRAM
     C*
     C                     SETON                         LR
     C*****************************************************************
     C*  P R O G R A M     E N D
     C*****************************************************************
      /EJECT
     C*****************************************************************
      ** INDEX OF SUBROUTINES
      **
      ** INIT              INITIALISATION OF STANDARD FIELDS,
      **                   ACCESS OF STANDING DATA
      **
      ** START             OUTPUT AND PROCESS KEY FIELDS SCREEN
      **
      ** REVIEW            PROCESS SUBFILE SELECTION SCREEN
      **
      ** ZSETOF            SETOF ERROR INDICATORS
      **
      ** UPDATE            PROCESS DETAIL SCREEN AND UPDATE FILE
      **
      ** ASCHGS            DETERMINE 'AID' VALUE
      **
      ** VALIDK            VALIDATE KEY FIELDS
      **
      ** VALIDD            VALIDATE DETAIL SCREEN
      **
      ** INITRC            INITIALISE ALL FILE FIELDS TO ZERO/BLANK
      **
      ** TRSFS             FORMAT RECORD FIELDS FOR SCREEN
      **
      ** UPDFLS            UPDATE FILE RECORDS
      **
      ** UPDOWS            PROCESS UPDATE BY ANOTHER WORKSTATION
      **
      ** ZTNLU1            ACCESS DATAAREA FOR NEXT TRANSACTION NO.
      **
      ** ZASNMS            SENDS MESSAGE TO PROGRAM MESSAGE QUEUE.
      **
      ** *PSSR             FILE ERROR HANDLING S/R
      **
      ** INTAB             SET-UP SCREEN TABLES WITH EDITED VALUES
      **
      ** FLDCHK            SUBROUTINE TO VALIDATE REPEATED FIELDS
      **
      ** UPLCHK            CHECK UPPER RANGE LIMIT
      **
      ** PERCHK            VALIDATE PERCENTAGES FIELDS
      **
      ** FLCCHK            VALIDATE FLAT RATE CHARGES
      **
      ** ZMOV              SUBROUTINE TO UPDATE FILE FIELDS
      **
      ** ZA0840            CHECK VALUES ARE NUMERIC OR HAVE CORRECT
      **                   NUMBER OF DECIMAL PLACES
      **
      ** ZEDIT             EDIT NUMERIC FIELDS INTO ALPHA FIELDS WITH
      **                   CORRECT NUMBER OF DECIMAL PLACES
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** INIT S/R - TO INITIALISE STATIC FIELDS AND ACCESS STANDING DATA
     C** CALLED ONCE AT START OF PROGRAM FROM MAIN LINE
     C** CALLS NO OTHER ROUTINES
     C**
     C*****************************************************************
     C*
     C           INIT      BEGSR                           ** INIT  BSR **
     C*
     C*  SFLEND (MSG SUBFILE)
     C                     MOVE '1'       *IN13
     C*
     C** PREPARE LDA
     C*
     C           *NAMVAR   DEFN           LDA                             S01464
     C           *LOCK     IN   LDA                                       S01464
     C***********          MOVEL*BLANK    DBLOT                           S01464
     C                     MOVEL*BLANK    DBFILE                          S01464
     C                     MOVEL*BLANK    DBKEY                           S01464
     C                     Z-ADD*ZEROS    DBASE                           S01464
     C                     MOVEL'SE6070'  DBPGM
     C                     OUT  LDA                                       S01464
     C*                                                                   S01464
     C** Read in RUNDAT and ZMUSER                                        S01464
     C*                                                                   S01464
     C           *NAMVAR   DEFN RUNDAT    RUNDT                           S01464
     C           *NAMVAR   DEFN           ZMUSER                          S01464
     C                     IN   RUNDT                                     S01464
     C                     IN   ZMUSER                                    S01464
     C*
     C** PREPARE COMIT TEXT
     C*
     C                     MOVEL'SE'      MDID
     C                     MOVEL'SE6070'  PGMN
     C                     MOVELWSID      WSIDX
     C                     MOVELUSIDXX    USIDX
     C**
     C***********                                                         S01464
     C****SET*UP*PARAMETER*TO*RETRIEVE*MESSAGE*FROM*MESSAGE*FILE******    S01464
     C***********PLLANG    PLIST                                          S01464
     C***********          PARM           MSMBR4  7                       S01464
     C***********          PARM           MSGER  10                       S01464
     C***********          PARM           MSGTXT 80                       S01464
     C***********          MOVEL'MLGBMSGF'MSGER                           S01464
     C*
     C** HELP PROGRAM PARAMETER
     C*
     C** GET INSTALLATION CONTROL DATA RECORD 1
     C*
     C                     CALL 'AOBANKR0'                                S01464
     C                     PARM '*DBERR ' @RTCD   7                       S01464
     C                     PARM '*FIRST ' @OPTN   7                       S01464
     C           SDBANK    PARM SDBANK    DSSDY                           S01464
     C*                                                                   S01464
     C***********          READ SDBANKPD                 89               S01464
     C************IN89     IFEQ '1'                                       S01464
     C***********          MOVEL'SDBANKPD'DBFILE           ************** S01464
     C***********          Z-ADD1         DBASE            * DBERROR 01 * S01464
     C***********          MOVE *BLANKS   DBKEY            ************** S01464
     C***********          EXSR *PSSR                                     S01464
     C***********          END                                            S01464
     C*
     C** GET SAFE CUSTODY INSTALLATION CONTROL DATA RECORD 1
     C*
     C                     CALL 'AOSCFER0'                                S01464
     C                     PARM '*DBERR ' @RTCD   7                       S01464
     C                     PARM '*FIRST ' @OPTN   7                       S01464
     C           SDSCFE    PARM SDSCFE    DSSDY                           S01464
     C*                                                                   S01464
     C***********          READ SCICDPPD                 89               S01464
     C************IN89     IFEQ '1'                                       S01464
     C***********          MOVEL'SCICDPPD'DBFILE           ************** S01464
     C***********          Z-ADD2         DBASE            * DBERROR 02 * S01464
     C***********          MOVE *BLANKS   DBKEY            ************** S01464
     C***********          EXSR *PSSR                                     S01464
     C***********          END                                            S01464
     C*                                                                   S01464
     C** Get dec pt for Bank Charging Ccy                                 S01464
     C*                                                                   S01464
     C                     CALL 'AOCURRR0'                                S01464
     C                     PARM '*DBERR ' @RTCD   7                       S01464
     C                     PARM '*KEY   ' @OPTN   7                       S01464
     C                     PARM FBBCGC    @AJCD   3                       S01464
     C           SDCURR    PARM SDCURR    DSSDY                           S01464
     C*                                                                   S01464
     C           @RTCD     IFNE *BLANK                                    S01464
     C           *LOCK     IN   LDA                                       S01464
     C                     MOVEL'SDCURRPD'DBFILE           ************** S01464
     C                     MOVEL@OPTN     DBKEY            * DBERROR 04 * S01464
     C                     Z-ADD4         DBASE            ************** S01464
     C                     OUT  LDA                                       S01464
     C                     EXSR *PSSR                                     S01464
     C                     END                                            S01464
     C*
     C** SELECT THE PROGRAM MSGQ FOR ERROR MSG.
     C                     MOVEL'*'       DDPGMQ
     C                     MOVEL'*'       TOPQ
     C                     MOVEL'*PRV'    TOPRQ
     C                     MOVELBJMRDT    DDRUNA
     C*
     C**   Fill in fields for subroutine ZASNMS
     C                     MOVEL*BLANK    ZAPGM  10        Message queue
     C                     MOVEL'SEUSRMSG'ZAMSGF 10        Message file
     C                     MOVEL*BLANK    ZAPGRL  5        Rel queue
     C                     MOVEL*BLANK    ZAMSID  7        Message Id.
     C                     MOVEL*BLANK    ZAMSDA132        Message data.
     C                     MOVEL*BLANK    ZAMSTP  7        Message type.
     C*
     C** PROCEED TO START SCREEN UNLESS DATABASE ERROR
     C           *INU7     IFEQ '0'
     C                     MOVE '1'       *IN10
     C                     ELSE
     C                     MOVEL'03'      AID
     C                     END
     C*                                                                   S01464
     C** Access Securities Trading ICD                                    S01464
     C*                                                                   S01464
     C                     CALL 'AOSTRDR0'                                S01464
     C                     PARM '*DBERR ' @RTCD                           S01464
     C                     PARM '*FIRST ' @OPTN                           S01464
     C           SDSTRD    PARM SDSTRD    DSSDY                           S01464
     C*                                                                   S01464
     C**   Check if Safe Custody Fees is set ON                           S01464
     C*                                                                   S01464
     C           BVCUIN    IFNE 'Y'                                       S01464
     C*                                                                   S01464
     C**   Send message to screen                                         S01464
     C*                                                                   S01464
     C                     MOVEL'SE02100' ZAMSID                          S01464
     C                     EXSR ZASNMS                                    S01464
     C                     EXFMTSE6070F2                                  S01464
     C                     SETON                     LR                   S01464
     C                     RETRN                                          S01464
     C*                                                                   S01464
     C                     END                                            S01464
     C*
     C           XTINIT    ENDSR                           ** XTINIT ESR**
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** START S/R TO OUTPUT AND PROCESS KEY FIELDS SCREEN
     C** CALLED FROM MAIN PROCESSING
     C** CALLS: VALIDK TO VALIDATE KEY FIELDS IF ENTERED
     C**
     C*****************************************************************
     C*
     C           START     BEGSR                           ** START BSR **
     C*
     C** INITIALISE SCREEN DATA
     C                     MOVE '0'       *IN10
     C                     MOVE '0'       *IN21
     C                     MOVE '0'       *IN23
     C                     MOVEL*BLANK    SCRCTL
     C                     MOVE *BLANKS   DDDELT
     C***********          MOVEL'PM90001' MSMBR4                          S01464
     C***********          CALL 'SDRTVTXT'PLLANG                          S01464
     C***********          MOVELMSGTXT    INFMSG                          S01464
     C                     SETON                     22                   S01464
     C                     MOVEA'000'     *IN,28                          S01464
     C*
     C** CLEAR WHOLE SCREEN
     C                     WRITESE6070F3
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N  -  S T A R T
     C           *IN10     DOUEQ'1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** S T A R T   S C R E E N     O U T P U T           -  S T A R T
     C                     WRITESE6070F2
     C                     EXFMTSE6070F1
     C                     MOVEL*BLANK    ZAMSID
     C*
     C**  Clear program message queue.
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ   10
     C                     PARM           TOPRQ   5
     C*
     C** S T A R T   S C R E E N     O U T P U T           -  E N D
     C*
     C** F 3 , H E L P , O R  E N T E R   P R E S S E D  -  S T A R T
     C*
     C** F3 - TERMINATE
     C*
     C** Call S/R to move values into AID
     C*
     C                     EXSR ASCHGS
     C*
     C           AID       IFEQ '03'
     C           AID       OREQ '12'
     C                     MOVE '1'       *IN10
     C                     MOVEL'03'      AID
     C*
     C** ENTER TAKEN VALIDATE KEY INPUT
     C*
     C                     ELSE
     C                     EXSR VALIDK
     C*
     C** D E T E R M I N E    S C R E E N   C H A N G E    -  S T A R T
     C*
     C** IF NO ERRORS, DETERMINE NEXT SCREEN
     C*
     C           ZAMSID    IFEQ *BLANK
     C*
     C**  - IF KEY FIELD IS BLANK, NEXT SCREEN IS REVIEW SCREEN
     C*
     C           DDCGCM    IFEQ *BLANK
     C                     MOVE '1'       *IN11
     C*
     C**  - OTHERWISE, DISPLAY REQUESTED DETAIL SCREEN AS PER KEY INPUT
     C*
     C                     ELSE
     C                     MOVE '1'       *IN12
     C                     END
     C*
     C                     END
     C*
     C** D E T E R M I N E    S C R E E N   C H A N G E    -  E N D
     C*
     C                     END
     C                     END
     C*
     C** F 3  O R  E N T E R   P R E S S E D  -  E N D
     C*
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N  -  E N D
     C*
     C           XTSTAR    ENDSR                           ** XTSTAR ESR**
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** REVIEW S/R TO PROCESS SUBFILE SELECTION SCREEN
     C** CALLED FROM MAIN PROCESSING
     C** CALLS: VALIDK TO VALIDATE KEY FIELDS IF SUBFILE RECORD SELECTED
     C**
     C*****************************************************************
     C*
     C           REVIEW    BEGSR                           ** REVIEW BSR**
     C*
     C                     MOVEL*BLANKS   ZAMSID
     C                     MOVE '0'       *IN11
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N  -  S T A R T
     C           *IN10     DOUEQ'1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** I F  R O L L   U P / D O W N   O R   E N T E R   P R E S S E D
     C*
     C** R E B U I L D   S U B F I L E                     -  S T A R T
     C***********          MOVEL'PM90002' MSMBR4                          S01464
     C***********          CALL 'SDRTVTXT'PLLANG                          S01464
     C***********          MOVELMSGTXT    INFMSG                          S01464
     C                     SETOF                     22                   S01464
     C                     MOVEA'100'     *IN,28                          S01464
     C           AID       IFEQ 'DN'
     C           AID       OREQ 'UP'
     C           AID       OREQ 'RA'
     C*
     C           ZAMSID    IFEQ *BLANKS
     C** NO ERROR ON SUBFILE
     C*
     C** WRITE CONTROL RECORD
     C                     MOVE '0'       *IN01
     C                     MOVE '0'       *IN02
     C                     MOVE '0'       *IN03
     C                     MOVE '1'       *IN09
     C                     Z-ADD*ZERO     RRN
     C                     Z-ADD*ZERO     ROW
     C                     Z-ADD*ZERO     COL
     C*
     C** CLEAR WHOLE SCREEN
     C                     WRITESE6070F3
     C                     WRITESE6070C0
     C                     MOVE '1'       *IN04
     C                     MOVE '0'       *IN09
     C*
     C** SET FILE POINTER - PAGE BACK
     C           AID       IFEQ 'DN'
     C                     MOVEL*BLANK    DDCGCM
     C                     MOVEL'     '   PPAGK   5
     C***********DDCGCM    SETLLSCCGCDXX                                  S01464
     C           DDCGCM    SETLLSECGCDXX                                  S01464
     C*
     C** OTHERWISE        - PAGE FORWARD
     C                     ELSE
     C*
     C                     MOVELDDGCMA    DDCGCM
     C                     MOVELPAGK      PPAGK
     C***********DDCGCM    SETLLSCCGCDXX                                  S01464
     C           DDCGCM    SETLLSECGCDXX                                  S01464
     C                     END
     C*
     C** READ IN DETAILS-FILL UP SUBFILE
     C           RRN       DOUEQ12
     C           *IN03     OREQ '1'
     C*
     C** READ DETAILS UNTIL SUBFILE PAGE IS FULL
     C** OR CCY CHANGES FROM THAT OF 1ST READ
     C***********          READ SCCGCDXX                 03               S01464
     C                     READ SECGCDXX                 03               S01464
     C           *IN03     IFEQ '0'
     C*
     C** IF RECORD IS DELETED, FLAG IT AS SO ON SCREEN
     C           SFRECI    IFEQ '*'
     C                     MOVEL'D'       DDSTAT  1
     C                     ELSE
     C                     MOVEL*BLANK    DDSTAT
     C                     END
     C*
     C** OUTPUT TO SUBFILE
     C                     ADD  1         RRN     40
     C*
     C                     MOVE '0'       *IN04
     C                     WRITESE6070S0
     C*
     C** RECORD NOW WRITTEN TO SUBFILE
     C                     END
     C*
     C** PAGE NOW FULL (OR EOF)
     C                     END
     C*
     C** READ ONE MORE RECORD FOR NEXT SCREEN
     C           *IN03     IFEQ '0'
     C***********          READ SCCGCDXX                 03               S01464
     C                     READ SECGCDXX                 03               S01464
     C           *IN03     IFEQ '0'
     C                     MOVELSFCGCO    DDGCMA
     C                     END
     C                     END
     C*
     C           *IN03     IFEQ '1'
     C*
     C** IF EOF SET NEXT 'REVIEW FROM' KEY TO BLANK
     C                     MOVEL'     '   PAGK
     C                     END
     C*
     C** FOR SUBFILE CONTROL
     C           *IN04     IFEQ '1'
     C                     MOVE '0'       *IN01
     C                     MOVE '1'       *IN02
     C                     MOVE '0'       *IN03
     C                     MOVEL'SE07303' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE '1'       *IN01
     C                     MOVE '1'       *IN02
     C                     END
     C                     END
     C                     END
     C*
     C** R E V I E W   S C R E E N     O U T P U T         -  S T A R T
     C                     WRITESE6070F2
     C                     EXFMTSE6070C0
     C                     MOVEL*BLANK    REVW
     C                     MOVEL*BLANK    ZAMSID
     C*
     C**   Clear program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ
     C                     PARM           TOPRQ
     C*
     C** R E V I E W   S C R E E N     O U T P U T         -  E N D
     C*
     C** F 3 , F 12 , H E L P , R E C O R D  S E L E C T-  S T A R T
     C*
     C** Call S/R to move values into AID
     C                     EXSR ASCHGS
     C*
     C** F3 - TERMINATE
     C           AID       IFEQ '03'
     C                     MOVE '1'       *IN11
     C*
     C** F12 - INITIAL SCREEN
     C                     ELSE
     C           AID       IFEQ '12'
     C                     MOVE '1'       *IN10
     C*
     C** ENTER PRESSED -  PROCESS RECORD SELECTION
     C                     ELSE
     C           AID       IFEQ 'UP'
     C                     MOVE '1'       *IN11
     C*
     C** ROLLUP
     C                     ELSE
     C                     MOVE '1'       *IN89
     C           *IN04     IFEQ '0'
     C                     READCSE6070S0                 89
     C                     END
     C*          *IN89     IFEQ '0'
     C*          DDACTN    ANDEQ*BLANKS
     C*
     C** MUST DO THIS TEST OTHERWISE SEND A MESSAGE WHEN YOU CLEAR
     C** ONE ACTION CODE ON SUBFILE WHICH WAS PREVIOUSLY IN ERROR
     C*                    MOVE '1'       *IN89
     C*                    END
     C*
     C** R E C O R D   S E L E C T   V A L I D A T I O N   -  S T A R T
     C           *IN89     IFEQ '0'
     C                     MOVELSFCGCO    DDCGCM
     C*
     C** MOVE '1' IN *IN27 TO AVOID A TEST IN SR/VALIDK
     C                     MOVE '1'       *IN27
     C                     EXSR VALIDK
     C                     MOVE '0'       *IN27
     C*
     C** NO ERRORS, UPDATE SCREEN CAN BE PROCESSED NEXT
     C           ZAMSID    IFEQ *BLANK
     C                     MOVE '1'       *IN12
     C                     MOVEL'Y'       REVW
     C                     ELSE
     C*
     C** POSITION THE CURSOR ON ERROR FIELD
     C           RRN       DIV  12        WWDIV   30
     C                     MVR            WWREM   30
     C           WWREM     IFEQ 0
     C                     Z-ADD12        WWREM
     C                     END
     C*
     C           WWREM     ADD  8         ROW
     C                     Z-ADD2         COL
     C                     END
     C                     END
     C                     END
     C*
     C** R E C O R D   S E L E C T   V A L I D A T I O N   -  E N D
     C                     END
     C                     END
     C*
     C** F 3 , F 12 , R E C O R D  S E L E C T - E N D
     C                     END
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N   - S T A R T
     C           XTREVI    ENDSR                           ** XTREVI ESR**
     C*****************************************************************===
      /EJECT
     C*****************************************************************===
     C**
     C** ZSETOF S/R TO SET OF ALL ERROR INDICATORS
     C** CALLED FROM S/R  UPDATE
     C**             S/R  VALIDD
     C**
     C*****************************************************************===
     C*
     C           ZSETOF    BEGSR                           ** UPDATE BSR**
     C*
     C                     MOVE '0'       *IN12
     C                     MOVE '0'       *IN21
     C                     MOVE '0'       *IN23
     C                     MOVE '0'       *IN31
     C                     MOVE '0'       *IN32
     C                     MOVE '0'       *IN33
     C                     MOVE '0'       *IN34
     C                     MOVE '0'       *IN37
     C                     MOVE '0'       *IN38
     C                     MOVE '0'       *IN39
     C                     MOVE '0'       *IN40
     C                     MOVE '0'       *IN41
     C                     MOVE '0'       *IN42
     C                     MOVE '0'       *IN43
     C                     MOVE '0'       *IN44
     C                     MOVE '0'       *IN45
     C                     MOVE '0'       *IN46
     C                     MOVE '0'       *IN47
     C                     MOVE '0'       *IN48
     C                     MOVE '0'       *IN49
     C                     MOVE '0'       *IN50
     C                     MOVE '0'       *IN51
     C                     MOVE '0'       *IN52
     C                     MOVE '0'       *IN53
     C                     MOVE '0'       *IN54
     C                     MOVE '0'       *IN55
     C                     MOVE '0'       *IN56
     C                     MOVE '0'       *IN57
     C                     MOVE '0'       *IN58
     C                     MOVE '0'       *IN59
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN61
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN64
     C                     MOVE '0'       *IN65
     C                     MOVE '0'       *IN66
     C                     MOVE '0'       *IN67
     C                     MOVE '0'       *IN68
     C                     MOVE '0'       *IN69
     C                     MOVE '0'       *IN70
     C                     MOVE '0'       *IN71
     C                     MOVE '0'       *IN72
     C                     MOVE '0'       *IN73
     C                     MOVE '0'       *IN74
     C                     MOVE '0'       *IN75
     C                     MOVE '0'       *IN76
     C                     MOVE '0'       *IN77
     C                     MOVE '0'       *IN78
     C                     MOVE '0'       *IN79
     C                     MOVE '0'       *IN80
     C                     MOVE '0'       *IN81
     C                     MOVE '0'       *IN82
     C                     MOVE '0'       *IN86
     C                     ENDSR
     C*****************************************************************
     C**
     C** UPDATE S/R TO PROCESS DETAIL SCREEN AND UPDATE FILE
     C** CALLED FROM MAIN PROCESSING
     C** CALLS: VALIDD, UPDFLS, INITRC, TRSFS.
     C**
     C*****************************************************************
     C*
     C           UPDATE    BEGSR                           ** UPDATE BSR**
     C*
     C** SET SCREEN INDICATORS - PROTECT KEY, SET OFF ERROR INDS,
     C                     EXSR ZSETOF
     C                     MOVE '1'       *IN05
     C*
     C** CLEAR WHOLE SCREEN
     C                     WRITESE6070F3
     C*
     C** ACCESS FILE RECORD FOR OLD TNLU TO CHECK AT UPDATE TIME
     C** IF NO RECORD PRESENTLY ON FILE, ZEROISE STORED TNLU
     C                     Z-ADD*ZERO     STNLU   50
     C***********DDCGCM    CHAINSCCGCDXX             99                   S01464
     C           DDCGCM    CHAINSECGCDXX             99                   S01464
     C           *IN99     IFEQ '0'
     C                     Z-ADDSFTNLU    STNLU
     C*
     C** IF DELETED RECORD REPLACE ACTION 'A' OR 'D' BY 'E' (ACTION 'I'
     C** AUTHORIZED ON A DELETED RECORD)
     C           SFRECI    IFEQ '*'
     C                     MOVEL'DELETED' DDDELT  7
     C                     ELSE
     C                     MOVEL*BLANK    DDDELT
     C                     END
     C*
     C** FOR ROLLUP/ROLLDOWN UPDATE CURRENT CHARGE/COMMISSION CODE
     C                     MOVELSFCGCO    DDCGCM
     C*
     C** TRANSLATE RECORD DETAILS FROM FILE LAYOUT TO SCREEN LAYOUT
     C                     EXSR TRSFS
     C                     END
     C*
     C** IF INSERT (NEW OR OVER DELETED RECORD)
     C** INITIALIZE ALL FIELDS ON THE RECORD (IE ZEROIZE/BLANK OUT)
     C           DDACTN    IFEQ 'I'
     C                     EXSR INITRC
     C                     MOVEL*BLANKS   DDCHGB
     C                     MOVEL*BLANKS   DDCGMT
     C                     MOVEL*BLANKS   DDMINC
     C                     MOVEL*BLANKS   DDCHNR
     C                     MOVEL*BLANKS   DDDELT
     C                     MOVEL*BLANKS   URLTAB
     C                     MOVEL*BLANKS   PERTAB
     C                     MOVEL*BLANKS   FCHTAB
     C                     END
     C*
     C** SET UP DEFAULTS (DONE ON BLANK FIELDS)
     C** IF DELETE/ENQUIRY PROTECT FIELD INPUT ON S/SE6070F0
     C           DDACTN    IFEQ 'D'
     C           DDACTN    OREQ 'E'
     C                     MOVE '1'       *IN06
     C                     END
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N  -  S T A R T
     C           *IN10     DOUEQ'1'
     C           *IN11     OREQ '1'
     C           *IN12     OREQ '1'
     C*
     C** L O A D    U  P    I N F O M E S S A G E S        -  S T A R T
     C           DDACTN    IFEQ 'D'
     C***********          MOVEL'PM90004' MSMBR4                          S01464
     C***********          CALL 'SDRTVTXT'PLLANG                          S01464
     C***********          MOVELMSGTXT    INFMSG                          S01464
     C                     SETOF                     22                   S01464
     C                     MOVEA'001'     *IN,28                          S01464
     C                     ELSE
     C***********          MOVEL'PM90003' MSMBR4                          S01464
     C***********          CALL 'SDRTVTXT'PLLANG                          S01464
     C***********          MOVELMSGTXT    INFMSG                          S01464
     C                     SETOF                     22                   S01464
     C                     MOVEA'010'     *IN,28                          S01464
     C                     END
     C*
     C** L O A D    U  P    I N F O M E S S A G E S        -  E N D
     C** D E T A I L   S C R E E N     O U T P U T         -  S T A R T
     C                     WRITESE6070F2
     C                     WRITESE6070F1
     C                     EXFMTSE6070F0
     C                     MOVEL*BLANK    ZAMSID
     C*
     C**   Clear program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM           TOPQ
     C                     PARM           TOPRQ
     C*
     C** D E T A I L   S C R E E N     O U T P U T         -  E N D
     C** Call S/R to move values into AID
     C                     EXSR ASCHGS
     C*
     C** F 3 , F 12 , H E L P ,  S T A R T
     C** F3 - TERMINATE
     C           AID       IFEQ '03'
     C                     MOVE '1'       *IN12
     C*
     C** F12 - INITIAL SCREEN
     C                     ELSE
     C           AID       IFEQ '12'
     C                     MOVE '1'       *IN10
     C*
     C** NOT F3,F12
     C                     ELSE
     C*
     C** V A L I D A T E   D E T A I L   S C R E E N   I N P U T
     C                     EXSR VALIDD
     C*
     C** N O    D E T A I L   S C R E E N    E R R O R S   -  S T A R T
     C           ZAMSID    IFEQ *BLANK
     C           AID       ANDEQ'RA'
     C*
     C**FOR REC.ADVANCE DETERMINE WHAT SCREEN TO RETURN TO -  S T A R T
     C           REVW      IFEQ 'Y'
     C                     MOVELPPAGK     PAGK
     C                     MOVE '1'       *IN11
     C                     ELSE
     C                     MOVE '1'       *IN10
     C                     END
     C*
     C**FOR REC.ADVANCE DETERMINE WHAT SCREEN TO RETURN TO -  E N D
     C**     U  P  D  A  T  E      F  I  L  E  S
     C           DDACTN    IFEQ 'I'
     C           DDACTN    OREQ 'A'
     C           DDACTN    OREQ 'D'
     C                     EXSR UPDFLS
     C                     END
     C*
     C** N O    D E T A I L   S C R E E N    E R R O R S   -  E N D
     C                     END
     C*
     C** F 3 , F 12 ,  -  E N D
     C                     END
     C                     END
     C*
     C** D O    U N T I L   C H A N G E  O F  S C R E E N  -  E N D
     C                     END
     C*
     C** RESET PROTECT/NON-DISPLAY INDS
     C                     MOVE '0'       *IN05
     C                     MOVE '0'       *IN06
     C           XTUPDT    ENDSR                           ** XTUPDA ESR**
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** ASCHGS S/R TO MOVE THE APPROPRIATE VALUES INTO FIELD AID,
     C** DEPENDING ON WHICH FUNCTION KEY HAS BEEN PRESSED.
     C** CALLED FROM UPDATE
     C**
     C*****************************************************************
     C*
     C           ASCHGS    BEGSR
     C*
     C** If ENTER pressed, the VLDCMDKEY indicator will be off
     C           *IN20     IFEQ '0'
     C                     MOVE 'RA'      AID     2
     C                     END
     C*
     C** If F3
     C           *INKC     IFEQ '1'
     C                     MOVE '03'      AID
     C                     MOVE '0'       *INKC
     C                     END
     C*
     C** If F10
     C           *INKJ     IFEQ '1'
     C                     MOVE '10'      AID
     C                     MOVE '0'       *INKJ
     C                     END
     C*
     C** If F12
     C           *INKL     IFEQ '1'
     C                     MOVE '12'      AID
     C                     MOVE '0'       *INKL
     C                     END
     C*
     C** If ROLLUP pressed
     C           *IN25     IFEQ '1'
     C                     MOVE 'UP'      AID
     C                     MOVE '0'       *IN25
     C                     END
     C*
     C** If ROLLDOWN pressed
     C           *IN26     IFEQ '1'
     C                     MOVE 'DN'      AID
     C                     MOVE '0'       *IN26
     C                     END
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** VALIDK S/R TO VALIDATE KEY FIELDS
     C** CALLED FROM S/R START, REVIEW
     C** CALLS NO OTHER S/R'S
     C**
     C*****************************************************************
     C*
     C           VALIDK    BEGSR                           ** VALIDK BSR**
     C*
     C** RESET ERROR INDICATORS
     C** SET ERROR ARRAY COUNTER TO ZERO
     C                     MOVE '0'       *IN21
     C                     MOVE '0'       *IN23
     C                     MOVE '0'       *IN24
     C*
     C** A C T I O N    C O D E    I N P U T - CANT BE D IF BJAUST IS ON
     C           BJSUC     IFEQ 'Y'
     C           DDACTN    ANDNE*BLANK
     C           DDACTN    ANDNE'I'
     C           DDACTN    ANDNE'A'
     C           DDACTN    ANDNE'E'
     C                     MOVE '1'       *IN21
     C                     MOVEL'SE07102' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C*
     C** A C T I O N    C O D E    I N P U T - MUST BE BLANK,I,A,E,D
     C           DDACTN    IFNE *BLANK
     C           DDACTN    ANDNE'I'
     C           DDACTN    ANDNE'A'
     C           DDACTN    ANDNE'E'
     C           DDACTN    ANDNE'D'
     C                     MOVE '1'       *IN21
     C                     MOVEL'SE07100' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     END
     C*
     C** A C T I O N    C O D E    I N P U T - CHECK KEY FIELD
     C           DDACTN    IFNE *BLANK
     C*                                                                   S01464
     C           DDACTN    IFEQ 'I'                                       S01464
     C           DDACTN    OREQ 'A'                                       S01464
     C           DDACTN    OREQ 'D'                                       S01464
     C           DDACTN    OREQ 'E'                                       S01464
     C*                                                                   S01464
     C** If valid, do SPF validation for branch/action code authority     S01464
     C*                                                                   S01464
     C           AGMBIN    IFNE 'Y'                                       S01464
     C                     CALL 'ZVACTU'                                  S01464
     C                     PARM DDACTN    @ZACTN                          S01464
     C                     PARM           @ERR                            S01464
     C*                                                                   S01464
     C** If action invalid for user (single entity)                       S01464
     C*                                                                   S01464
     C           @ERR      IFEQ 1                                         S01464
     C                     MOVE '1'       *IN21                           S01464
     C                     MOVEL'SEM1019' ZAMSID                          S01464
     C                     EXSR ZASNMS                                    S01464
     C                     END                                            S01464
     C*                                                                   S01464
     C                     ELSE                                           S01464
     C                     CALL 'ZVACTBU'                                 S01464
     C                     PARM DDACTN    @ZACTN  1                       S01464
     C                     PARM DBRN      @BRNCH  3                       S01464
     C                     PARM           @ERR    10                      S01464
     C*                                                                   S01464
     C** If action invalid for user (multientity)                         S01464
     C*                                                                   S01464
     C           @ERR      IFEQ 1                                         S01464
     C                     MOVE '1'       *IN21                           S01464
     C                     MOVEL'SEM1020' ZAMSID                          S01464
     C                     EXSR ZASNMS                                    S01464
     C                     END                                            S01464
     C*                                                                   S01464
     C           @ERR      IFEQ 2                                         S01464
     C                     MOVE '1'       *IN21                           S01464
     C                     MOVEL'SEM1021' ZAMSID                          S01464
     C                     EXSR ZASNMS                                    S01464
     C                     END                                            S01464
     C                     END                                            S01464
     C                     END                                            S01464
     C*
     C** CHARGE CODE MUST BE ENTERED
     C           DDCGCM    IFEQ *BLANKS
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07107' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C** IF ENTERED, THE CHARGE CODE MUST CONSIST OF 2 CHARACTERS
     C** IN THE RANGES 0 TO 9 OR A TO Z
     C                     Z-ADD1         X
     C                     MOVE '0'       *IN89
     C*
     C           DDCG1     LOKUPCHA,X                    89
     C           *IN89     IFEQ '1'
     C                     MOVELDDCG1     SFCGCO
     C                     ELSE
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07107' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     Z-ADD1         X
     C                     MOVE '0'       *IN89
     C*
     C           DDCG2     LOKUPCHA,X                    89
     C           *IN89     IFEQ '1'
     C                     MOVE DDCG2     SFCGCO
     C                     ELSE
     C           *IN23     IFNE '1'
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07107' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
     C*
     C** ACTION CODE BLANK BUT KEY INPUT
     C           DDACTN    IFEQ *BLANK
     C*
     C           DDCGCM    IFNE *BLANK
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07109' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** A C T I O N    C O D E    I
     C           DDACTN    IFEQ 'I'
     C***********DDCGCM    CHAINSCCGCDXX             89                   S01464
     C           DDCGCM    CHAINSECGCDXX             89                   S01464
     C           *IN89     IFEQ '0'
     C           SFRECI    ANDEQ'D'
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07103' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** A C T I O N    C O D E    A , D
     C           DDACTN    IFEQ 'A'
     C           DDACTN    OREQ 'D'
     C***********DDCGCM    CHAINSCCGCDXX             89                   S01464
     C           DDCGCM    CHAINSECGCDXX             89                   S01464
     C           *IN89     IFEQ '1'
     C           SFRECI    OREQ '*'
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07104' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** A C T I O N    C O D E    E
     C           DDACTN    IFEQ 'E'
     C***********DDCGCM    CHAINSCCGCDXX             89                   S01464
     C           DDCGCM    CHAINSECGCDXX             89                   S01464
     C           *IN89     IFEQ '1'
     C                     MOVE '1'       *IN23
     C                     MOVEL'SE07105' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** DDACTN IF NE *BLANK, REVIEW FIELDS MUST BE BLANK
     C           ZAMSID    IFEQ *BLANKS
     C           DDACTN    ANDNE*BLANK
     C           *IN27     ANDEQ'0'
     C           DDGCMA    IFNE *BLANK
     C                     MOVE '1'       *IN24
     C                     MOVEL'SE07110' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** VALIDD S/R - TO VALIDATE DETAIL SCREEN
     C** CALLED FROM UPDATE S/R
     C** CALLS: ZSETOF; ZA0840
     C**
     C*****************************************************************
     C*
     C           VALIDD    BEGSR                           ** VALIDD BSR**
     C*
     C** RESET SCREEN ERROR INDICATORS
     C                     EXSR ZSETOF
     C*
     C** ENTER KEY PRESSSED
     C           AID       IFEQ 'RA'
     C*
     C** ACTION = I OR A
     C           DDACTN    IFEQ 'I'
     C           DDACTN    OREQ 'A'
     C*
     C** DO DEFAULTS
     C** VALIDATION OF FIELDS FOR INSERT/AMEND
     C**    VALIDATE CHARGE BASIS INDICATOR
     C           DDCHGB    IFNE 'F'
     C           DDCHGB    ANDNE'P'
     C           DDCHGB    ANDNE'N'
     C                     MOVE '1'       *IN31
     C                     MOVEL'SE07201' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C** CHARGING METHOD MUST BE 'T' IF CHARGING BASIS F OR N
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C           DDCGMT    IFNE 'T'
     C                     MOVE '1'       *IN32
     C                     MOVEL'SE07222' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** VALIDATE CHARGING METHOD
     C           DDCGMT    IFNE 'T'
     C           DDCGMT    ANDNE'X'
     C                     MOVE '1'       *IN32
     C                     MOVEL'SE07202' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C** VALIDATE MINIMUM CHARGE AMOUNT
     C                     Z-ADD*ZEROS    WWMINC
     C*
     C**   MUST BE BLANK FOR CHARGE BASIS 'F' OR 'N'
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C           DDMINC    IFNE *BLANKS
     C                     MOVE '1'       *IN33
     C                     MOVEL'SE07223' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C**   MUST BE A VALID AMOUNT IN BANK CHARGING CURRENCY
     C           DDCHGB    IFEQ 'P'
     C           DDMINC    ANDNE*BLANKS
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVELDDMINC    @@ALPH
     C***********          Z-ADDSABCGD    @@IDP                           S01464
     C                     Z-ADDA6NBDP    @@IDP                           S01464
     C           15        SUB  @@IDP     @@IINT
     C                     EXSR ZA0840
     C*
     C           @@13WN    IFNE 0
     C                     MOVE '1'       *IN33
     C                     MOVEL'SE07224' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE @@ALPH    DDMINC
     C                     MOVE @@AMT     WWMINC 150
     C                     END
     C                     END
     C*
     C** NARRATIVE MUST BE INPUT
     C           DDCHNR    IFEQ *BLANK
     C                     MOVE '1'       *IN34
     C                     MOVEL'SE07203' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C           ZAMSID    IFEQ *BLANKS
     C*
     C**  EXECUTE FIELD CHECK 16 TIMES VALIDATING THE RANGE UPPER LIMIT
     C**    PERCENTAGE LEVEL AND FLAT CHARGE LEVEL
     C**         Z - IS THE SUM OF FIELDS CURRENTLY BEING VALIDATED
     C**         U - IS THE SUM OF Z + 1
     C**         V - IS THE SUM OF Z - 1
     C**        BS - IS THE SUM OF THE 1ST SET OF FIELD TO BE BLANK
     C                     Z-ADD2         U       30
     C                     Z-ADD0         V       30
     C                     Z-ADD1         Z       30
     C                     Z-ADD0         BS      30
     C*
     C**      MOVE INPUT SCREEN DETS TO ARRAYS
     C                     MOVEAURLTAB    UPL
     C                     MOVEAPERTAB    PER
     C                     MOVEAFCHTAB    FLC
     C           Z         DOWLT16
     C                     Z-ADD36        R       30
     C                     Z-ADD50        P       30
     C                     Z-ADD65        F       30
     C                     EXSR FLDCHK
     C                     ADD  1         U
     C                     ADD  1         V
     C                     ADD  1         Z
     C                     END
     C*
     C**      MOVE ARRAYS TO OUTPUT SCREEN DETS
     C                     MOVEAUPL       URLTAB
     C                     MOVEAPER       PERTAB
     C                     MOVEAFLC       FCHTAB
     C*
     C                     END
     C                     END
     C                     END
     C*
     C** IF ACTION=D WITH ENTER PRESSED THEN ERROR
     C           DDACTN    IFEQ 'D'
     C           AID       ANDNE'10'
     C                     MOVEL'SE07301' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C           DDACTN    IFEQ 'D'
     C           AID       ANDEQ'10'
     C*
     C**  MANDATORY MOVE TO PERMIT THE UPDATE OF FILE
     C                     MOVE 'RA'      AID
     C                     END
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** INITRC S/R TO INITIALISE ALL FILE FIELDS TO ZERO/BLANK
     C** CALLED FROM UPDATE; UPDFLS
     C** CALLS NO OTHER S/R'S
     C**
     C*****************************************************************
     C*
     C           INITRC    BEGSR                           ** INITRC BSR**
     C*
     C** INITIALIZE ALL DATA ON RECORD DEFINED DATA STRUCTURES
     C                     MOVEL*ZEROS    STUTAB
     C                     MOVEL*ZEROS    PLCTAB
     C                     MOVEL*ZEROS    FCLTAB
     C                     Z-ADD*ZERO     SFLCD
     C                     Z-ADD*ZERO     SFTNLU
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** TRSFS S/R TO FORMAT RECORD FIELDS FOR SCREEN
     C** CALLED FROM UPDATE
     C** CALLS ZEDT;
     C**
     C*****************************************************************
     C*
     C           TRSFS     BEGSR                           ** TRSFS BSR **
     C*
     C** TRANSLATE RECORD DETAILS FROM FILE LAYOUT TO SCREEN LAYOUT
     C** TRANSLATE SFCNR1
     C                     MOVELSFCNR1    DDCHNR
     C                     MOVELSFCGBS    DDCHGB
     C                     MOVELSFCGMT    DDCGMT
     C*
     C** TRANSFER MINIMUM CHARGE AMOUNT USING SR/ZEDIT
     C           SFMINC    IFNE 0
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE SFMINC    ZFIELD
     C***********          Z-ADDSABCGD    ZADEC                           S01464
     C                     Z-ADDA6NBDP    ZADEC                           S01464
     C           16        SUB  ZADEC     ZADIG
     C                     EXSR ZEDIT
     C                     MOVELZFIELD    DDMINC
     C                     ELSE
     C                     MOVEL*BLANKS   DDMINC
     C                     END
     C*
     C                     Z-ADD1         Z
     C                     MOVELSTUTAB    FULA
     C                     MOVELPLCTAB    FPRA
     C                     MOVELFCLTAB    FFCA
     C*
     C** GET HIGHEST UPPER LIMIT
     C                     Z-ADD1         XU      20
     C           *ZERO     LOKUPFUL,XU                   99
     C           *IN99     IFEQ '0'
     C                     Z-ADD15        XU
     C                     END
     C*
     C           Z         DOWLT16
     C                     EXSR INTAB
     C                     ADD  1         Z
     C                     END
     C*
     C                     MOVEAUPL       URLTAB
     C                     MOVEAPER       PERTAB
     C                     MOVEAFLC       FCHTAB
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** UPDFLS S/R TO UPDATE FILE RECORDS
     C** CALLED FROM UPDATE
     C** CALLS INITRC; ZTNLU1; *PSSR
     C**
     C*****************************************************************
     C           UPDFLS    BEGSR                           ** UPDFLS BSR**
     C*
     C** U P D A T E   F I L E S
     C** INITIALIZE ALL FIELDS ON THE RECORD (IE ZEROIZE/BLANK OUT)
     C                     EXSR INITRC
     C*
     C** RETRIEVE NEXT TRANSACTION NUMBER
     C                     EXSR ZTNLU1
     C*
     C**               I  N  S  E  R  T  S                 -  S T A R T
     C           DDACTN    IFEQ 'I'
     C***********DDCGCM    CHAINSCCGCDPD             83                   S01464
     C           DDCGCM    CHAINSECGCDPD             83                   S01464
     C           *IN83     IFEQ '0'
     C           SFTNLU    IFNE STNLU
     C                     EXSR UPDOWS
     C*
     C** IF NO PROCESSING OCCURRED EXIT TO SUPPRESS AUDIT UPDATE
     C                     GOTO XTUPDF
     C                     END
     C                     END
     C*
     C** TRANSLATE RECORD DETAILS FROM SCREEN LAYOUT TO FILE LAYOUT
     C                     MOVEL'D'       SFRECI
     C                     Z-ADDBJRDNB    SFLCD
     C                     MOVEL'I'       SFCHTP
     C                     MOVELNATN      SFTNLU
     C                     EXSR ZMOV
     C*
     C           *IN83     IFEQ '1'
     C***********          WRITESCCGCDP0               15                 S01464
     C                     WRITESECGCDP0               15                 S01464
     C*
     C** TEST FOR UPDATE BY ANOTHER W/S, OR A TERMINAL ERROR
     C           *IN15     IFEQ '1'
     C           STATUS    ANDEQ01021
     C***********DDCGCM    CHAINSCCGCDXX             15                   S01464
     C           DDCGCM    CHAINSECGCDXX             15                   S01464
     C           *IN15     IFEQ '0'
     C                     EXSR UPDOWS
     C                     GOTO XTUPDF
     C                     END
     C                     END
     C           *IN15     IFEQ '1'
     C                     EXSR *PSSR
     C                     END
     C*
     C                     ELSE
     C***********          UPDATSCCGCDP0                                  S01464
     C                     UPDATSECGCDP0                                  S01464
     C                     END
     C                     END
     C*
     C**               A  M  E  N  D  S                    -  S T A R T
     C           DDACTN    IFEQ 'A'
     C***********DDCGCM    CHAINSCCGCDPD             83                   S01464
     C           DDCGCM    CHAINSECGCDPD             83                   S01464
     C           *IN83     IFEQ '0'
     C           SFTNLU    IFNE STNLU
     C                     EXSR UPDOWS
     C*
     C** IF NO PROCESSING OCCURRED EXIT TO SUPPRESS AUDIT UPDATE
     C                     GOTO XTUPDF
     C                     END
     C*
     C** TRANSLATE RECORD DETAILS FROM SCREEN LAYOUT TO FILE LAYOUT
     C*
     C** IF THE RECORD INSERT HAS BEEN DONE TODAY NO UPDATE OF ACTION
     C** CODE
     C           SFCHTP    IFNE 'I'
     C           SFLCD     ORNE BJRDNB
     C                     MOVEL'A'       SFCHTP
     C                     END
     C                     Z-ADDBJRDNB    SFLCD
     C                     MOVELNATN      SFTNLU
     C                     EXSR ZMOV
     C***********          UPDATSCCGCDP0                                  S01464
     C                     UPDATSECGCDP0                                  S01464
     C                     END
     C                     END
     C*
     C**               D  E  L  E  T  E  S                 -  S T A R T
     C           DDACTN    IFEQ 'D'
     C***********DDCGCM    CHAINSCCGCDPD             83                   S01464
     C           DDCGCM    CHAINSECGCDPD             83                   S01464
     C           *IN83     IFEQ '0'
     C           SFTNLU    IFNE STNLU
     C                     EXSR UPDOWS
     C*
     C** IF NO PROCESSING OCCURRED EXIT TO SUPPRESS AUDIT UPDATE
     C                     GOTO XTUPDF
     C                     END
     C                     MOVEL'*'       SFRECI
     C                     Z-ADDBJRDNB    SFLCD
     C                     MOVEL'D'       SFCHTP
     C                     MOVELNATN      SFTNLU
     C                     TIME           SFTLUP
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    SFDLUP
     C                     MOVE WWMLUP    SFMLUP
     C                     Z-ADDWWYLUP    SFYLUP
     C***********          UPDATSCCGCDP0                                  S01464
     C                     UPDATSECGCDP0                                  S01464
     C                     END
     C                     END
     C*
     C** GET AUDIT RECORD
     C***********1         CHAINSCCGCDZZ             99                   S01464
     C           1         CHAINSECGCDPA             99                   S01464
     C*
     C** UPDATE AUDIT RECORD IF FOUND
     C           *IN99     IFEQ '0'
     C*
     C** FOR INSERT, UPDATE LIVE RECORDS INSERTED TODAY, AND NO. OF LIVE
     C** RECORDS
     C           DDACTN    IFEQ 'I'
     C                     ADD  1         SFNORE
     C                     END
     C*
     C** FOR DELETIONS, UPDATE NO. DELETIONS TODAY, AND NO. OF LIVE RECS
     C           DDACTN    IFEQ 'D'
     C                     SUB  1         SFNORE
     C                     END
     C*
     C** FORMAT COMIT TEXT
     C                     TIME           MTIME
     C                     MOVELDDACTN    ACTNX
     C*
     C** UPDATE AUDIT RECORD
     C***********          UPDATSCCGCDZ0                                  S01464
     C                     UPDATSECGCDZ0                                  S01464
     C*
     C** C  O  M  I  T
     C           CMTTXT    COMIT
     C*
     C** AUDIT RECORD NOT FOUND
     C                     ELSE
     C           *LOCK     IN   LDA                                       S01464
     C***********          MOVEL'SCCGCDZZ'DBFILE           ************** S01464
     C                     MOVEL'SECGCDPA'DBFILE           ************** S01464
     C                     Z-ADD3         DBASE            * DBERROR 03 *
     C                     MOVE *BLANKS   DBKEY            **************
     C                     OUT  LDA                                       S01464
     C                     EXSR *PSSR
     C                     END
     C*
     C           XTUPDF    ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**
     C** UPDOWS S/R TO PROCESS UPDATE BY ANOTHER WORKSTATION
     C** CALLED FROM UPDFLS
     C** CALLS NO OTHER S/R'S
     C**
     C*****************************************************************
     C           UPDOWS    BEGSR                           ** UPDOWS BSR**
     C*
     C                     ROLBK
     C**   SET UP NEXT SCREEN TO BE DISPLAYED:
     C**   SET SCREEN PROCESSOR TO UPDATE AND MOVE UPDATE MESSAGE TO ERROR
     C                     MOVE '1'       *IN10
     C                     MOVE '0'       *IN11
     C                     MOVE '0'       *IN12
     C                     MOVEL'SE07302' ZAMSID
     C                     EXSR ZASNMS
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**                                                              *
     C**  ZTNLU1 SR. - TO LOCK THE TRANSACTION NUMBER DATA AREA,      *
     C**               ACCESS THE NEXT AVAILABLE TRANSACTION NUMBER,  *
     C**               THEN UPDATE AND RELEASE THE DATA AREA.         *
     C**                                                              *
     C*****************************************************************
     C*
     C           ZTNLU1    BEGSR
     C*
     C           *NAMVAR   DEFN MNATN     DNATN
     C           *LOCK     IN   DNATN
     C                     MOVE FNATN     NATN    50
     C                     MOVE FNATN     ZZWK05  50
     C                     ADD  1         ZZWK05
     C                     MOVE ZZWK05    FNATN
     C                     OUT  DNATN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C* ZASNMS   - Send message to program message queue              *
     C*                                                               *
     C* CALLS    Y2SNMSGC                                             *
     C*                                                               *
     C* CALLED BY  REVIEW - Process subfile selection.                *
     C*            VALIDK - Validate key fields.                      *
     C*            VALIDD - Validate detail screen.                   *
     C*            UPDOWS - Processes update by another workstation.  *
     C*                                                               *
     C*****************************************************************
     C           ZASNMS    BEGSR
     C*
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGM            Program queue
     C                     PARM           ZAPGRL           Rel queue
     C                     PARM           ZAMSID           Message Id.
     C                     PARM           ZAMSGF           Message file.
     C                     PARM           ZAMSDA           Message data.
     C                     PARM           ZAMSTP           Message type.
     C*
     C** Clear all fields for default mechanism next time.
     C                     MOVEL*BLANK    ZAPGM            Message queue
     C                     MOVEL*BLANK    ZAPGRL           Rel queue
     C                     MOVEL*BLANK    ZAMSDA           Message data.
     C                     MOVEL*BLANK    ZAMSTP           Message type.
     C*
     C           ZASNM9    ENDSR                           ZASNM9 TAG
     C*
     C*****************************************************************
      /EJECT
     C****************************************************************
     C**
     C**   S/R  *PSSR FILE EXEPTION/ERROR HANDLING SUBROUTINE
     C**
     C****************************************************************
     C*
     C           *PSSR     BEGSR
     C                     SETON                     U7U8LR
     C*
     C** ROLL BACK CHANGES, PRINT DUMP AND CANCEL PROGRAM
     C                     ROLBK
     C                     DUMP
     C                     RETRN
     C*
     C                     ENDSR
     C****************************************************************
     C**
     C**     PROCEDURE : INTAB
     C**        SETS UP THE SCREEN TABLES WITH THE EDITED VALUES  OF
     C**     THE UPPER RANGE LIMIT ,PERCENTAGE AND FLAT CHARGES USING
     C**     THE ROUTINE ZSEDIT.
     C**
     C**     INPUT FIELDS:
     C**                     Z       2/0
     C**                     FUL,Z   9/15/0
     C**                     FPR,Z   10/7/0
     C**                     FFC,Z   10/15/0
     C**
     C**
     C**     ARRAYS:
     C**                     FUL     9/15/0
     C**                     FPR     10/7/0
     C**                     FFC     10/15/0
     C**                     UPL     9/17/
     C**                     PER     10/8/
     C**                     FLC     10/17/
     C**
     C**     OUTPUT FIELDS:
     C**                     UPL,Z   9/17/
     C**                     PER,Z   10/8/
     C**                     FLC,Z   10/17/
     C**
     C**     CALLED BY        TRSFS
     C**     CALLS            ZSEDIT
     C**
     C****************************************************************
     C           INTAB     BEGSR
     C*
     C           Z         IFNE 15
     C           FUL,Z     IFNE 0
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE FUL,Z     ZFIELD
     C*
     C           SFCGBS    IFEQ 'N'
     C                     Z-ADD0         ZADEC
     C                     ELSE
     C***********          Z-ADDSABCGD    ZADEC                           S01464
     C                     Z-ADDA6NBDP    ZADEC                           S01464
     C                     END
     C           16        SUB  ZADEC     ZADIG
     C                     EXSR ZEDIT
     C                     MOVELZFIELD    UPL,Z
     C                     ELSE
     C                     MOVEL*BLANKS   UPL,Z
     C                     END
     C                     END
     C*
     C           Z         IFLE XU
     C           SFCGBS    ANDEQ'P'
     C           DDACTN    ANDNE'I'
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE FPR,Z     ZFIELD
     C                     Z-ADD7         ZADEC
     C           16        SUB  ZADEC     ZADIG
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    PER,Z
     C                     ELSE
     C           FPR,Z     IFEQ 0
     C                     MOVEL*BLANKS   PER,Z
     C                     END
     C                     END
     C*
     C           Z         IFLE XU
     C           SFCGBS    ANDNE'P'
     C           DDACTN    ANDNE'I'
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE FFC,Z     ZFIELD
     C***********          Z-ADDSABCGD    ZADEC                           S01464
     C                     Z-ADDA6NBDP    ZADEC                           S01464
     C           16        SUB  ZADEC     ZADIG
     C                     EXSR ZEDIT
     C                     MOVELZFIELD    FLC,Z
     C                     ELSE
     C           FFC,Z     IFEQ 0
     C                     MOVEL*BLANKS   FLC,Z
     C                     END
     C                     END
     C*
     C                     ENDSR
     C****************************************************************
      /EJECT
     C****************************************************************
     C**
     C**      SR/FLDCHK
     C**      EXPLANATION OF SUBS
     C**         Q - IS THE INDEX FOR THE ERROR ARRAY ER1 AND ER2
     C**         Z - IS THE SUB OF FIELDS CURRENTLY BEING VALIDATED
     C**         U - IS THE SUB OF Z + 1
     C**         V - IS THE SUB OF Z - 1
     C**        BS - IS THE SUB OF THE 1ST SET OF FIELD TO BE BLANK
     C**
     C**     INDICATORS USED:
     C**                     *IN99 - GENERAL ERROR CONDITION
     C**
     C**     INPUT FIELDS:
     C**                     Q       2/0
     C**                     Z       3/0
     C**                     U       3/0
     C**                     V       3/0
     C**                     BS      2/0
     C**                     UPL     9/17/
     C**                     PER     10/8/
     C**                     FLC     10/17/
     C**                     DDCHGB
     C**
     C**     ARRAYS:
     C**                     UPL     9/17/
     C**                     PER     10/8/
     C**                     FLC     10/17/
     C**
     C**     OUTPUT FIELDS:
     C**
     C**     CALLED BY       VALIDD
     C**     CALLS           UPLCHK
     C**                     PERCHK
     C**                     FLCCHK
     C**
     C****************************************************************
     C*
     C           FLDCHK    BEGSR
     C*
     C**    SET UP BS SUB IF UPPER RANGE LIMIT = BLANKS FOR 1ST TIME
     C           Z         IFLT 15
     C           BS        IFEQ 0
     C           UPL,Z     ANDEQ*BLANKS
     C                     Z-ADDZ         BS
     C                     END
     C                     END
     C*
     C** IF ALL 14 LIMITS ENTERED THE 15TH POSN SHOULD HAVE % OR FLAT
     C** VALUE ENTERED. TO CHECK THIS LATER THE FIELD BS IS SET TO 15
     C           Z         IFEQ 14
     C           BS        ANDEQ0
     C                     Z-ADD15        BS
     C                     END
     C*
     C                     ADD  Z         R
     C                     ADD  Z         P
     C                     ADD  Z         F
     C*
     C**    VALIDATE ENTRY FOR NUMERIC, CURRENCY AND RANGE TESTS
     C           Z         IFLT 15
     C                     EXSR UPLCHK
     C                     END
     C*
     C**    CHECKS THAT IF THE CURRENT UPL IS BLANK THAT ALL THE NEXT
     C**     ONE ARE BLANK AS WELL
     C           Z         IFLT 14
     C           UPL,Z     ANDNE*BLANKS
     C*
     C                     Z-ADD1         X       30
     C           *BLANKS   LOKUPUPL,X                    81
     C           *IN81     IFEQ '1'
     C*
     C** THE FIRST BLANK IN UPPER RANGE LIMIT TABLE IS FOUND
     C** IF INDICE Z (OF TESTED FIELD) IS GREATER THAN INDICE X
     C** ==> IT'S AN ERROR
     C           Z         IFGT X
     C                     MOVE '1'       *IN,R
     C                     MOVEL'SE07208' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C                     END
     C                     END
     C*
     C           Z         IFGT 1
     C           Z         ANDLT15
     C           UPL,Z     ANDNE*BLANKS
     C           @@13WN    ANDEQ0
     C           UPL,Z     ANDLEUPL,V
     C                     MOVE '1'       *IN,R
     C                     MOVEL'SE07209' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C**    PERCENTAGE CHECK
     C           Z         IFLT 15
     C           UPL,Z     IFNE *BLANKS
     C           PER,Z     ANDEQ*BLANKS
     C           DDCHGB    ANDEQ'P'
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07210' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C**    PERCENTAGE CHECK FOR POSITION 15 ONLY
     C           Z         IFEQ 15
     C           UPL,14    IFNE *BLANKS
     C           PER,Z     ANDEQ*BLANKS
     C           DDCHGB    ANDEQ'P'
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07210' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C**    VALIDATE ENTRY FOR NUMERIC, CURRENCY AND RANGE TESTS
     C                     EXSR PERCHK
     C*
     C           Z         IFLT 15
     C           PER,Z     IFNE *BLANKS
     C           UPL,Z     ANDEQ*BLANKS
     C           BS        ANDNEZ
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07213' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** ENTRY IS PROHIBITED IF CHARGE BASIS IS 'F' OR 'N'
     C           Z         IFLT 16
     C           PER,Z     IFNE *BLANKS
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C                     MOVE '1'       *IN,P
     C****                 MOVEL'SE07213' ZAMSID                          S01355
     C                     MOVEL'SE07226' ZAMSID                          S01355
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
     C*
     C** CHECK LAST %
     C           Z         IFEQ 15
     C           DDCHGB    ANDEQ'P'
     C           PER,15    ANDNE*BLANK
     C           UPL,14    ANDEQ*BLANK
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07215' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C**     FLAT CHARGE
     C**    VALIDATE ENTRY FOR NUMERIC, CURRENCY AND RANGE TESTS
     C                     EXSR FLCCHK
     C*
     C           Z         IFLT 15
     C           UPL,Z     IFNE *BLANKS
     C           FLC,Z     ANDEQ*BLANKS
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C                     MOVE '1'       *IN,F
     C                     MOVEL'SE07216' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
     C*
     C           Z         IFLT 15
     C           FLC,Z     IFNE *BLANKS
     C           UPL,Z     ANDEQ*BLANKS
     C           BS        ANDNEZ
     C                     MOVE '1'       *IN,F
     C                     MOVEL'SE07219' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** ENTRY IS PROHIBITED IF CHARGE BASIS IS 'P'
     C           Z         IFLT 16
     C           FLC,Z     IFNE *BLANKS
     C           DDCHGB    ANDEQ'P'
     C                     MOVE '1'       *IN,F
     C****                 MOVEL'SE07219' ZAMSID                          S01355
     C                     MOVEL'SE07227' ZAMSID                          S01355
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** CHECK LAST FLAT CHARGE
     C           Z         IFEQ 15
     C           FLC,15    ANDNE*BLANK
     C           UPL,14    ANDEQ*BLANK
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C                     MOVE '1'       *IN,F
     C                     MOVEL'SE07219' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C** FOR THE FIRST BLANK UPPER LIMIT A % OR FLAT VALUE IS REQUIRED
     C*
     C           BS        IFEQ Z
     C           BS        OREQ 15
     C           Z         ANDEQ15
     C*
     C** FIRST BLANK UPPER LIMIT
     C           DDCHGB    IFEQ 'F'
     C           DDCHGB    OREQ 'N'
     C*
     C** FLAT RATE IS REQUIRED IF TYPE IS F= FLAT OR N=NOMINAL
     C           FLC,Z     IFEQ *BLANKS
     C                     MOVE '1'       *IN,F
     C                     MOVEL'SE07221' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
     C*
     C** IF NOT F=FLAT, PERCENTAGE RATE IS REQUIRED
     C           PER,Z     IFEQ *BLANKS
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07215' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C****************************************************************
     C**
     C**     PROCEDURE : UPLCHK
     C**   CHECKS TO SEE IF UPPER RANGE LIMIT(SUB) IS NUMERIC
     C**   AND VALID FOR CURRENCY
     C**
     C**     INDICATORS USED:
     C**                     *IN99 - GENERAL ERROR CONDITION
     C**
     C**     INPUT FIELDS:
     C**                     UPL,Z   9/17/
     C**                     Z       2/0
     C**                     FUL,Z   9/15/0
     C**
     C**     ARRAYS:
     C**                     UPL     9/17/
     C**                     FLC     10/17/
     C**
     C**     OUTPUT FIELDS:
     C**                     FUL,Z   9/15/0
     C**                     UPL,Z   9/17/
     C**
     C**     CALLED BY       FLDCHK
     C**     CALLS           ZA0840
     C**
     C****************************************************************
     C*
     C           UPLCHK    BEGSR
     C           UPL,Z     IFNE *BLANKS
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVELUPL,Z     @@ALPH
     C           DDCHGB    IFEQ 'N'
     C                     Z-ADD0         @@IDP
     C                     ELSE
     C***********          Z-ADDSABCGD    @@IDP                           S01464
     C                     Z-ADDA6NBDP    @@IDP                           S01464
     C                     END
     C           15        SUB  @@IDP     @@IINT
     C                     EXSR ZA0840
     C*
     C**   CHECK ENTRY IS FOUND TO BE NUMERIC
     C           @@13WN    IFNE 0
     C                     MOVE '1'       *IN,R
     C           DDCHGB    IFEQ 'N'
     C                     MOVEL'SE07204' ZAMSID
     C                     ELSE
     C                     MOVEL'SE07207' ZAMSID
     C                     END
     C                     EXSR ZASNMS
     C                     END
     C*
     C**   CHECK ENTRY IS FOUND TO BE ZERO
     C           @@AMT     IFEQ 0
     C                     MOVE '1'       *IN,R
     C                     MOVEL'SE07207' ZAMSID
     C                     EXSR ZASNMS
     C                     END
     C*
     C**   NO ERROR
     C           @@13WN    IFEQ 0
     C           @@AMT     ANDNE0
     C                     MOVE @@ALPH    UPL,Z
     C                     MOVE @@AMT     FUL,Z
     C                     END
     C                     END
     C*
     C           UPL,Z     IFEQ *BLANKS
     C                     Z-ADD0         FUL,Z
     C                     END
     C                     ENDSR
      ****************************************************************
      /EJECT
     C****************************************************************
     C**
     C**     PROCEDURE : PERCHK
     C**   CHECKS TO SEE IF PERCENTAGE(SUB) IS NUMERIC
     C**   AND VALID FOR CURRENCY
     C**
     C**     INPUT FIELDS:
     C**                     PER,Z   10/8/
     C**
     C**
     C**     ARRAYS:         PER     10/8/
     C**                     FPR     10/7/0
     C**
     C**     OUTPUT FIELDS:
     C**                     PER,Z   10/8/
     C**                     FPR,Z   10/7/0
     C**
     C**
     C**     CALLED BY       FLDCHK
     C**
     C**     CALLS           ZA0840
     C**
     C****************************************************************
     C*
     C           PERCHK    BEGSR
     C           PER,Z     IFNE *BLANKS
     C*
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVELPER,Z     @@ALPH
     C                     Z-ADD7         @@IDP
     C           11        SUB  @@IDP     @@IINT
     C                     EXSR ZA0840
     C*
     C**   CHECK ENTRY IS FOUND TO BE NUMERIC
     C           @@13WN    IFNE 0
     C                     MOVE '1'       *IN,P
     C                     MOVEL'SE07211' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE @@ALPH    PER,Z
     C                     MOVE @@AMT     FPR,Z
     C                     END
     C                     END
     C*
     C           PER,Z     IFEQ *BLANKS
     C                     Z-ADD0         FPR,Z
     C                     END
     C                     ENDSR
      ****************************************************************
      /EJECT
     C****************************************************************
     C**
     C**     PROCEDURE : FLCCHK
     C**   CHECKS TO SEE IF FLAT CHARGE(SUB) IS NUMERIC
     C**   AND VALID FOR CURRENCY
     C**
     C**     INDICATORS USED:
     C**                     *IN99 - GENERAL ERROR CONDITION
     C**
     C**     INPUT FIELDS:
     C*                      FLC,Z   10/17/
     C*
     C*      ARRAYS:
     C*                      FLC     10/17/
     C*                      FFC     10/15/0
     C*
     C*      OUTPUT FIELDS:
     C*                      FLC,Z   10/17/
     C*                      FFC,Z   10/15/0
     C*
     C*
     C*      CALLED BY       FLDCHK
     C*      CALLS           NUMCHK
     C*
     C****************************************************************
     C*
     C           FLCCHK    BEGSR
     C           FLC,Z     IFNE *BLANKS
     C                     MOVE *BLANKS   @@ALPH
     C                     MOVELFLC,Z     @@ALPH
     C***********          Z-ADDSABCGD    @@IDP                           S01464
     C                     Z-ADDA6NBDP    @@IDP                           S01464
     C           15        SUB  @@IDP     @@IINT
     C                     EXSR ZA0840
     C*
     C**   CHECK ENTRY IS FOUND TO BE NUMERIC
     C           @@13WN    IFNE 0
     C                     MOVE '1'       *IN,F
     C                     MOVEL'SE07217' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE @@ALPH    FLC,Z
     C                     MOVE @@AMT     FFC,Z
     C                     END
     C                     END
     C*
     C           FLC,Z     IFEQ *BLANKS
     C                     Z-ADD0         FFC,Z
     C                     END
     C                     ENDSR
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C**                                                              *
     C** ZMOV   - UPDATE FILE FIELDS                                  *
     C**                                                              *
     C*****************************************************************
     C           ZMOV      BEGSR
     C                     MOVE BJMRDT    WWHLUP
     C                     Z-ADDWWDLUP    SFDLUP
     C                     MOVE WWMLUP    SFMLUP
     C                     Z-ADDWWYLUP    SFYLUP
     C                     TIME           SFTLUP
     C*
     C                     MOVELDDCGCM    SFCGCO
     C                     MOVELDDCHGB    SFCGBS
     C                     MOVELDDCGMT    SFCGMT
     C                     MOVE WWMINC    SFMINC
     C                     MOVELDDCHNR    SFCNR1
     C                     MOVELFULA      STUTAB
     C                     MOVELFPRA      PLCTAB
     C                     MOVELFFCA      FCLTAB
     C                     ENDSR
     C*
      ****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  ZA0840 - VALIADTE AND REFORMAT AN INPUT AMOUNT               *
      *                                                               *
      *           This subroutine will take as input a 16A field      *
      *           a 1N number of integers and a 1N number of decimal  *
      *           places. Ignoring the leading and trailing blanks    *
      *           it will ensure that the field contains only numeric *
      *           characters and a decimal point, and that it has no  *
      *           embedded blanks, or more than one decimal point.    *
      *           It will also check that the number of figures before*
      *           and after the decimal point do not exceed the input *
      *           parameters. The subroutine will output the number as*
      *           a 16A field and a 15N field, along with an error    *
      *           code. The alpha field will be right aligned with    *
      *           the leading zeros blanked, and trailing blanks zero *
      *           filled. The number returned will be 15 long with 0  *
      *           decimal places. The error code will contain 0 if    *
      *           there was no error, 1 if there was a non-numeric    *
      *           character found, and 2 if the number of decimal     *
      *           places are wrong.                                   *
      *                                                               *
      *  Input  : @@ALPH - 16A field containing the field to validate *
      *           @@IDP  - number of decimal places                   *
      *           @@IINT - number of integers                         *
      *                                                               *
      *  Output : @@ALPH - 16A field for display                      *
      *           @@AMT  - 15N field for calculation                  *
      *           @@ERCD - 1N error code                              *
      *                                                               *
      *  Uses   : @F     - array of 16 elements 1 character long      *
      *           @G     - array of 16 elements 1 character long      *
      *           @@CADP - calculated number of decimal places        *
      *           @@CINT - calculated number of integers              *
      *           @@PIDP - position of dp in input array              *
      *           @@PODP - position of dp in output array             *
      *           @@C    - index for array @F                         *
      *           @@D    - index for array @G                         *
      *           @@WK7  - workfield used for converting array element*
      *                    to a 1N number.                            *
      *           @H     - array containing powers of 10              *
      *           @@E    - index to array @H                          *
      *           @@WK5  - work field                                 *
      *           @@ALP1 - feild used to right align 0 decimal places *
      *                                                              *
      *     LAST AMEND NO. XXXXXX             DATE   XX/XX/XX        *
      *                                                              *
      *****************************************************************
     C           ZA0840    BEGSR
     C*
     C** initialize the fields and the arrays
     C                     MOVE '0'       *IN81
     C                     MOVE '0'       *IN82
     C                     Z-ADD0         @@13WN  10
     C                     Z-ADD0         @@AMT  150
     C                     MOVEA*BLANKS   @G
     C                     MOVEA@@ALPH    @F
     C                     MOVE *BLANKS   @@ALPH 16
     C                     Z-ADD0         @@WK7   10
     C                     Z-ADD0         @@CADP  30
     C                     Z-ADD0         @@CINT  30
     C                     Z-ADD0         @@PIDP  30
     C                     Z-ADD0         @@PODP  30
     C                     Z-ADD0         @@C     20
     C                     Z-ADD0         @@D     20
     C                     Z-ADD0         @@E     20
      *
      ** define the input fields
     C           *LIKE     DEFN @@CADP    @@IDP
     C           *LIKE     DEFN @@CINT    @@IINT
      *
      ** first check that the number input will not produce a number
      ** output with more than 15 figures.
     C           @@IDP     ADD  @@IINT    @@WK2   20
     C           @@WK2     IFGT 15                         B1
     C                     Z-ADD2         @@13WN           *1
     C                     GOTO ZA0849                     *1
     C                     END                             E1
      *
      ** work through input array, ignoring leading zeros and blanks,
      ** also blanking the leading zeros in the input array.
     C                     MOVE '0'       *IN83
     C                     ADD  1         @@C
     C           @@C       DOWLE16                         B1
     C           *IN83     ANDEQ'0'                        *1
     C           @F,@@C    IFNE ' '                        B*2
     C           @F,@@C    ANDNE'0'                        **2
     C                     MOVE '1'       *IN83            **2
     C                     SUB  1         @@C              **2
     C                     END                             E*2
     C                     ADD  1         @@C              **2
     C                     END                             E1
      *
      ** check the integer part of the number for valid characters.
     C           @@C       DOWLE16                         B1
     C           @F,@@C    ANDNE'.'                        *1
     C           @F,@@C    ANDNE' '                        *1
      *
      ** check for non numeric characters
     C           @F,@@C    IFGT '9'                        B*2
     C           @F,@@C    ORLT '0'                        **2
     C                     Z-ADD0         @@AMT            **2
     C                     Z-ADD1         @@13WN           **2
     C                     GOTO ZA0849                     **2
      *
     C                     ELSE                            X*2
      *
     C                     ADD  1         @@CINT           **2
      *
      ** check number of integers is not greater than that required
     C           @@CINT    IFGT @@IINT                     B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD2         @@13WN           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
      ** multiply the output amount by 10 then add the number in
      ** the input array element being processed.
     C           @@AMT     MULT 10        @@AMT            **2
     C                     MOVE @F,@@C    @@WK7            **2
     C           @@AMT     ADD  @@WK7     @@AMT            **2
     C                     END                             E*2
      *
      ** increase array index
     C                     ADD  1         @@C              *1
     C                     END                             E1
      *
      ** set up position of decimal point in input array
     C                     Z-ADD@@C       @@PIDP
      *
      ** if the character pointed to is a decimal point add 1 to the
      ** index
     C           @@C       IFLE 16                         B1
     C           @F,@@C    ANDEQ'.'                        *1
     C                     ADD  1         @@C              *1
     C                     MOVE '1'       *IN82            *1
     C                     END                             E1
      *
      ** now validate the decimal part of the number
     C           @@C       DOWLE16                         B1
      *
      ** if a blank is found set on the blank input indicator
     C           @F,@@C    IFEQ ' '                        B*2
     C                     MOVE '1'       *IN81            **2
     C                     END                             E*2
      *
      ** if the figure is numeric, check that the number of decimal
      ** places does not exceed that specified, and that no blanks
      ** have been entered.
     C           @F,@@C    IFGE '0'                        B*2
     C           @F,@@C    ANDLE'9'                        **2
     C                     ADD  1         @@CADP           **2
      *
     C           @@CADP    IFGT @@IDP                      B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD2         @@13WN           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
     C           *IN81     IFEQ '1'                        B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD1         @@13WN           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
      ** update output amount
     C           @@AMT     MULT 10        @@AMT            **2
     C                     MOVE @F,@@C    @@WK7            **2
     C                     ADD  @@WK7     @@AMT            **2
      *
     C                     ELSE                            X*2
      *
      ** if the character is not numeric and not a blank then it is
      ** invalid
     C           @F,@@C    IFNE ' '                        B**3
     C                     Z-ADD0         @@AMT            ***3
     C                     Z-ADD1         @@13WN           ***3
     C                     GOTO ZA0849                     ***3
     C                     END                             E**3
      *
     C                     END                             E*2
      *
      ** increase index
     C                     ADD  1         @@C              *1
      *
     C                     END                             E1
      *
      ** correct the output number for any decimal places not input
      ** in the alpha field.
     C           @@IDP     SUB  @@CADP    @@E
      *
      ** increase the index by one to get correct array entry
     C                     ADD  1         @@E
     C           @@AMT     MULT @H,@@E    @@AMT
      *
      ** now format the output alpha field, first calculate where
      ** the decimal point goes
     C           16        SUB  @@IDP     @@PODP
     C           @@PODP    SUB  1         @@PIDP
      *
      ** if there are no decimal points set the position to 17
     C           @@IDP     IFEQ 0                          B1
     C                     Z-ADD17        @@PODP           *1
     C                     END                             E1
      *
      ** move the output number into the input array
     C                     MOVEA*BLANKS   @F
     C                     MOVE @@AMT     @@AMTA 15
     C                     MOVEA@@AMTA    @F
      *
      ** set up indexes
     C                     Z-ADD1         @@C
     C                     Z-ADD1         @@D
     C                     MOVE '0'       *IN80
      *
      ** now fill up the output array
     C           @@D       DOWLE16                         B1
      *
      ** insert decimal point if the position is found
     C           @@D       IFEQ @@PODP                     B*2
     C                     MOVE '.'       @G,@@D           **2
     C                     ADD  1         @@D              **2
     C                     END                             E*2
      *
      ** insert the zero before the decimal point
     C           *IN80     IFEQ '0'                        B*2
     C           @@D       ANDEQ@@PIDP                     **2
     C           @F,@@C    ANDEQ'0'                        **2
     C                     MOVE '1'       *IN80            **2
     C                     MOVE '0'       @G,@@D           **2
     C                     END                             E*2
      *
      ** blank leading zeros
     C           *IN80     IFEQ '0'                        B*2
     C           @F,@@C    ANDEQ'0'                        **2
     C                     MOVE ' '       @G,@@D           **2
     C                     END                             E*2
      *
      ** move a normal character
     C           @F,@@C    IFGE '1'                        B*2
     C           @F,@@C    ANDLE'9'                        **2
     C                     MOVE @F,@@C    @G,@@D           **2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
      *
      ** non blanked zero
     C           @F,@@C    IFEQ '0'                        B*2
     C           *IN80     ANDEQ'1'                        **2
     C                     MOVE '0'       @G,@@D           **2
     C                     END                             E*2
      *
     C                     ADD  1         @@C              *1
     C                     ADD  1         @@D              *1
     C                     END                             E1
      *
      *
      ** put output array into output amount
     C                     MOVEA@G        @@ALPH
      *
      ** align figure with zero decimal places.
     C           @@IDP     IFEQ 0                          B1
     C                     MOVE *BLANKS   @@ALP1 17        *1
     C                     MOVE @@ALPH    @@ALP1           *1
     C                     MOVEL@@ALP1    @@ALPH           *1
     C                     END                             E1
     C*
     C                     MOVE '0'       *IN80
     C           ZA0849    ENDSR                           ZA0849 TAG
     C*
     C*****************************************************************
      /EJECT
     **/COPY ZSRSRC,ZEDITZ2
     C********************************************************************
     C**                                                                 *
     C**  ZEDIT SUBROUTINE TO INSERT A DECIMAL POINT INTO A NUMERIC FIELD*
     C**  AND TO BLANK OUT LEADING ZEROES.                               *
     C**      INPUT FIELDS:   ZFIELD 16/                                 *
     C*                       ZADEC                                      *
     C*                       ZADIG - NOT ACTUALLY USED                  *
     C*                                                                  *
     C*       ARRAYS    ZA1 ,ZA2   BOTH 16 ELEMENTS, EACH ONE BYTE LONG. *
     C*                                                                  *
     C*       OUTPUT FIELD   ZFIELD                                      *
     C*                                                                  *
     C           ZEDIT     BEGSR                           ***  ZEDIT  ***
     C**
     C**   CALCULATION TO DEFINE NUMBER STRUCTURE CONTROL FIELDS.
     C                     Z-ADDZADIG     ZADIG   20
     C                     Z-ADDZADEC     ZADEC   10
     C**                                                                 *
     C*       SET UP WORK FIELDS                                         *
     C*                                                                  *
     C                     MOVEA' '       ZA1                            *
     C                     MOVEA' '       ZA2                            *
     C*                                                                  *
     C                     Z-ADD16        Z1      20                     *
     C                     Z-ADD16        Z2      20                     *
     C*                                                                  *
     C           16        SUB  ZADEC     ZADEC2  20                     *
     C*                                                                  *
     C*
     C                     MOVEAZFIELD    ZA1                            *
     C*                                                                  *
     C*       CHECK TO SEE IF THERE ARE ANY DECIMAL PLACES               *
     C*                                                                  *
     C           ZADEC     COMP 0                        91              *
     C   91                GOTO ZT20                                     *
     C**                                                                 *
     C           ZT10      TAG                             ** ZT10 TAG ***
     C**                                                                 *
     C*                                                                  *
     C*       SET UP DECIMALS                                            *
     C*                                                                  *
     C                     MOVE ZA1,Z1    ZA2,Z2                         *
     C           Z1        SUB  1         Z1                             *
     C           Z2        SUB  1         Z2                             *
     C*                                                                  *
     C           Z2        COMP 0                        90              *
     C   90                GOTO ZT30                                     *
     C*                                                                  *
     C*       CHECK IF END OF DECIMALS                                   *
     C**                                                                 *
     C           Z2        COMP ZADEC2               90                  *
     C   90                GOTO ZT10                                     *
     C*                                                                  *
     C**                                                                 *
     C*       PUT IN DECIMAL PLACE                                       *
     C*                                                                  *
     C                     MOVE '.'       ZA2,Z2                         *
     C           Z2        SUB  1         Z2                             *
     C*                                                                  *
     C           ZT20      TAG                             ** ZT20 TAG ***
     C*                                                                  *
     C*       SET UP INTEGERS                                            *
     C*                                                                  *
     C                     MOVE ZA1,Z1    ZA2,Z2                         *
     C           Z1        SUB  1         Z1                             *
     C           Z2        SUB  1         Z2                             *
     C**                                                                 *
     C           Z2        COMP 0                    90                  *
     C   90                GOTO ZT20                                     *
     C*                                                                  *
     C*       PUT IN LEADING BLANKS                                      *
     C*                                                                  *
     C           ZT30      TAG                             ** ZT30 TAG ***
     C**                                                                 *
     C                     Z-ADD1         Z2                             *
     C**                                                                 *
     C           ZT40      TAG                             ** ZT40 TAG ***
     C*                                                                  *
     C           ZA2,Z2    COMP '0'                  9090                *
     C   90      ZA2,Z2    COMP ' '                  9090                *
     C*                                                                  *
     C   90                GOTO ZT50                                     *
     C*                                                                  *
     C                     MOVE ' '       ZA2,Z2                         *
     C           Z2        ADD  1         Z2                             *
     C*                                                                  *
     C           Z2        COMP 16                     90                *
     C   90                GOTO ZT40                                     *
     C*                                                                  *
     C*       IF NO INTEGERS PUT IN LEADING ZERO                         *
     C*                                                                  *
     C           ZT50      TAG                             ** ZT50 TAG ***
     C*                                                                  *
     C                     Z-ADDZADEC2    Z2                             *
     C  N91      Z2        SUB  1         Z2                             *
     C           ZA2,Z2    COMP ' '                      90              *
     C   90                MOVE '0'       ZA2,Z2                         *
     C*                                                                  *
     C*       SET UP OUTPUT FIELD                                        *
     C*                                                                  *
     C           ZT60      TAG                             ** ZT60 TAG ***
     C*                                                                  *
     C                     MOVEAZA2       ZFIELD 16                      *
     C**                                                                 *
     CSR         ZEND      ENDSR                           ** ZEND **    *
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*
**  CPY@
(c) Finastra International Limited 2001
** array of powers of 10 from 0 to 8
000000000000001
000000000000010
000000000000100
000000000001000
000000000010000
000000000100000
000000001000000
000000010000000
000000100000000
000001000000000
000010000000000
000100000000000
001000000000000
010000000000000
100000000000000
** CHA
ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
