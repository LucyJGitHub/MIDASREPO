     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SE ER Allocation List/Audit')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Securities Trading Module                        *
     F*                                                               *
     F*  SE6800 - SE Early Redemption Allocation List/Audit           *
     F*                                                               *
      *  (c) Finastra International Limited 2001                      *
     F*                                                               *
      *  Last Amend No. MD058285           Date 22Jun21               *
      *  Prev Amend No. AR1075401          Date 01Jun20               *
      *                 MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *                 CRE026             Date 24May06               *
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD027             Date 09Dec05               *
      *                 CSE071             Date 19Jul05               *
      *                 TDA035             Date 02Apr04               *
      *                 208241             Date 17Jan03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.02 -----------------------------------------------*
      *                 CPB001             Date 26Aug99               *
      *                 CGL011             Date 20Sep99               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 CGL008             Date 03Mar99               *
      *                 CAC005             Date 15Dec98               *
      *                 083547             Date 20Feb95               *
      *                 S01496             Date 03Oct94               *
     F*                 S10978             DATE 25MAR93               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  MD058285 - Change base rate code to alphanumeric (Recompile) *
      *  AR1075401 - Increase length of WWNOPO in SE6710.             *
      *              (Child: AR1075402)                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CRE026 - Consumer Banking (Recompile)                        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CSE071 - Multiple Holidays Re Securities (recompile)         *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
      *  208241 - Recompiled over changed /CPY ZSDESCZ3.              *
     F*  CPB001 - 'Private Banking' Module                            *
      *  CGL011 - Collateral Processing for Midas                     *
      *  CGL008 - Security on Journal Entry. Recompile.               *
      *  CAC005 - PCA-SE Enhancement.                                 *
     F*  083547 - RECOMPILED OVER MUSERDD                             *
     F*  S01496 - Incorporation of Jyske Enhancements (S10978)        *
     F*  S10978 - JYSZRH: EARLY REDEMPTIONS                           *
     F*                                                               *
     F*****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
      /EJECT
     F*
     F*****BJ*-*Bank*Details*-*Rtv*Idx*********************************   S01496
     F***SDBANKL1IF  E           K        DISK                            S01496
     F***********                                   KINFSR *PSSR          S01496
     F*
     F*****Modules*Details*-*Rtv*Idx***********************************   S01496
     F***SDMMODL1IF  E           K        DISK                            S01496
     F***********                                   KINFSR *PSSR          S01496
     F*
     F*****Portfolio*Management*ICD*-*Rtv*Idx**************************   S01496
     F***SDPORTL1IF  E           K        DISK                            S01496
     F***********                                   KINFSR *PSSR          S01496
     F*
     F*****Securities*Trading*Data*-*Rtv*Idx***************************   S01496
     F***SDSTRDL1IF  E           K        DISK                            S01496
     F***********                                   KINFSR *PSSR          S01496
     F*
     F**   VA - SE ER Depots - Rtv Idx
     FSEERRFL1IF  E           K        DISK
     F                                              KINFSR *PSSR
     F*
     F**   VB - SE ER References - Rtv Idx
     FSEERDPL1IF  E           K        DISK
     F                                              KINFSR *PSSR
     F*
     F**   VC - SE Allocations - Rtv Idx
     FSEERALL1IF  E           K        DISK
     F                                              KINFSR *PSSR
     F*
     F**   Securities Details
     FSECTY   IF  E           K        DISK
     F                                              KINFSR *PSSR
     F*
     F**   Printer file - SE ER Allocations List/Audit
     F***SE6800P1O***E             70     PRINTER                         S01496
     FSE6800P1O   E             70     PRINTER      KINFDS SPOOL      UC  S01496
     F                                              KINFSR *PSSR
     F*                                                                   S01496
     F**   Printer file - SE ER Allocations Audit List                    S01496
     FSE6800AUO   E                    PRINTER      KINFDS SPOOLU     UC  S01496
     F                                              KINFSR *PSSR          S01496
     ******************************************************************
      /EJECT
     *********************************************************************
      *
      * ID F  C  H  L    Function of indicators
      * ---------------------------------------
      *
      *   40 - Audit or List
      *   41 - First Cycle
      *   45 - Portfolio management indicator                             S01496
      *
      *   50 - 0 Decimal Place
      *   51 - 1 Decimal Places
      *   52 - 2 Decimal Places
      *   53 - 3 Decimal Places
      *   54 - 4 Decimal Places
      *                                                                   S01496
      *   55 - Multibranching indicator                                   S01496
      *
      *   56 - Don't Display the Separator '/'
      *
      *   60 - Ex-Date Position Equal to Zero
      *   61 - Nominal Demanded Equal to Zero
      *   62 - Nominal to be Redeemed Equal to Zero
      *   63 - Nominal Allocated Equal to Zero
      *   64 - Percentage Equal to Zero
      *   65 - Correction Reference Blank
      *   66 - Dummy Customer
      *
      *  68 - CAC005 is on, include profit centre in printer file.    *   CAC005
      *
      *   70 - Page Overflow
      *   79 - Early Redemptions Block Error
      *
      *   87,88 - Work Indicator
      *
      *   89 - Record not Found
      *
      *   LR :    Last record
      *   U7/U8 : Database error
      *
      *   90-99 : Used by Standard Subroutines
      **************************************************************************
      /EJECT
      **************************************************************************
      *
      * Name of the Subroutines
      * -----------------------
      *
      *       P001  - Initial processing
      *       P002  - Main processing
      *       P003  - Termination processing
      *
      *       P005  - Process all Depot Records
      *       P006  - Process all Allocation Records
      *
      *       R001  - Output Title to Printer File
      *       R002  - Output ER Reference Details to Printer File
      *       R003  - Output ER Depot Details to Printer File
      *       R004  - Output ER Allocation Details to Printer File
      *
      *       #LZSFL - Call ZSFILE                                        S01496
      *                                                                   S01496
      *       *PSSR - "Standard" Database error processing
      *
      * Name of the Standard Subroutines
      * --------------------------------
      *
      *       ZSDESC - To Format Security Descriptions
      *       ZDATE2 - Dates Validation and Conversion
      *
     *********************************************************************
      /EJECT
     *********************************************************************
     E*
     E**   FOR COMPILATION - COPYRIGHT INSERTION
     E*
     E                    CPY@    1   1 80
     E*
     E                    ZS1        15  1 0
     E                    ZS2        21  1
     E*
     E**   ARRAYS USED BY ZDATE2
     E*
     E                    ZYDY    4   4  4 0             ZDATE1/2 SR.ARRAY
     E                    ZMDY   13  13  3 0             ZDATE1/2 SR.ARRAY
     E                    ZMNM   12  12  3               ZDATE2 SR. ARRAY
     E*
     E                    TXT     1   5 10               NARRATIVE
     E*
     E                    ASS        20  1               SEC SHRT NAME ARRAY
     E                    AON        50  1               OUTPUT FORMAT ARRAY
     E                    ACR        11  1               COUPON RATE ARRAY
     E                    APR        15  1               REDEMPTION PR ARRAY
     E                    ADT         7  1               MATURITY DATE ARRAY
     *********************************************************************
      /EJECT
     *********************************************************************
     I*
     I**   DATA STRUCTURE FOR COMPILATION - COPYRIGHT INSERTION
     I*
     ICPYR@#      DS
     I                                        1  80 CPY@
     I                                        1  20 CPY@##
     I*
     I**   DATA STRUCTURE FOR DATABASE ERROR
     I*
     ILDA         DS                            256
     I                                      132 183 WWLOT
     I                                      132 141 WWFILE
     I                                      142 170 WWKEY
     I                                      171 180 WWPGM
     I                                      181 1830WWASE
     IAONDS       DS
     I                                        1  50 AON
     I                                        1  50 AONM
     I*
     ISERNP1      DS
     I                                        1  35 FIEL1
     I                                       36  41 FIEL2
     I*                                                                   S01496
     IPGMDS     ESDSY2PGDSP                                               S01496
     I** Program status data structure                                    S01496
     I*                                                                   S01496
     ISPOOL       DS                                                      S01496
     I**  File Information Data Structure - P1 report                     S01496
     I*                                                                   S01496
     I                                       83  92 SFILE1                S01496
     I                                    B 123 1240SFNUM1                S01496
     ISPOOLU      DS                                                      S01496
     I**  File Information Data Structure - AU report                     S01496
     I*                                                                   S01496
     I                                       83  92 SFILEU                S01496
     I                                    B 123 1240SFNUMU                S01496
     ISDBANK    E DSSDBANKPD                                              S01496
     I**  Data structure for bank details                                 S01496
     I*                                                                   S01496
     ISDMMOD    E DSSDMMODPD                                              S01496
     I**  Data structure for module details                               S01496
     I*                                                                   S01496
     ISDSTRD    E DSSDSTRDPD                                              S01496
     I**  Data structure for securities trading details                   S01496
     I*                                                                   S01496
     ISDPORT    E DSSDPORTPD                                              S01496
     I**  Data structure for portfolio management details                 S01496
     I*                                                                   S01496
     ISDUSER    E DSMUSERDD                                               S01496
     I**  Data structure for user details                                 S01496
     I*                                                                   S01496
     IDSFDY     E DSDSFDY                                                 S01496
     I**  Short data structure for access objects                         S01496
     I*                                                                   S01496
     IDSSDY     E DSDSSDY                                                 S01496
     I**  Long data structure for access objects                          S01496
     I*                                                                   S01496
     *********************************************************************
      /EJECT
     C********************************************************************
     C**    P R O G R A M   S T A R T
     C********************************************************************
     C*
     C**   INITIAL PROCESSING
     C*
     C                     EXSR P001
     C*
     C**   MAIN PROCESSING
     C*
     C                     EXSR P002
     C*
     C**   TERMINATION PROCESSING
     C*
     C                     EXSR P003
     C*
     C********************************************************************
     C**    P R O G R A M     E N D
     C********************************************************************
      /EJECT
     ******************************************************************
     C* P001   : INITIAL PROCESSING                                   *
     ******************************************************************
     C*
     C           P001      BEGSR
     C*                                                                   S01496
     C**  Copyright statement                                             S01496
     C*                                                                   S01496
     C                     MOVEACPY@      ACT@   80                       S01496
     C*
     C**   INITIALISE KEY AND WORKING FIELDS
     C*
     C                     MOVE *BLANKS   WWLOT
     C                     MOVEL'SE6800'  DBPGM  10
     C*
     C                     MOVE *BLANKS   WSESN  10
     C*
     C           KEY1      KLIST
     C                     KFLD           #REFN
     C***********          KFLD           #BRCD   30                      S01496
     C                     KFLD           #BRCD   3                       S01496
     C**********           KFLD           #DDPT   60                                          CSD027
     C                     KFLD           #DDPT   6                                           CSD027
     C*
     C**   ENTRY PARAMETERS
     C*
     C           *ENTRY    PLIST
     C                     PARM           #RTCD   1        Return Code
     C                     PARM           #REFN   6        ER Reference
     C                     PARM           @SEQ    5        Rpt Sequence   S01496
     C*
     C**   RESET RETURN CODE TO BLANKS
     C*
     C                     MOVE *BLANKS   #RTCD
     C*
     C**   ACCESS TO BANK DETAILS TO RETRIEVE THE MIDAS RUN DATE
     C*
     C************LOVAL    SETLLSDBANKL1                                  S01496
     C***********          READ SDBANKL1                 89               S01496
     C*                                                                   S01496
     C                     CALL 'AOBANKR0'                                S01496
     C                     PARM *BLANKS   WLRTCD  7                       S01496
     C                     PARM '*FIRST'  WLOPTN  7                       S01496
     C           SDBANK    PARM SDBANK    DSFDY                           S01496
     C*
     C**   IF RECORD NOT FOUND
     C*
     C************IN89     IFEQ '1'                        B*1            S01496
     C           WLRTCD    IFNE *BLANKS                                   S01496
     C                     MOVEL'001'     DBASE   30       *****************
     C***********          MOVEL'SDBANKL1'DBFILE 10        ** DB ERROR 01 S01496
     C                     MOVE 'SDBANKPD'DBFILE 10        * DB ERROR 01 *S01496
     C                     MOVEL*BLANKS   DBKEY  29        *****************
     C                     EXSR *PSSR
     C                     END                             E*1
     C*
     C**   DETERMINE DATE FORMAT
     C*
     C           BJDFIN    IFEQ 'M'                        B*1
     C                     MOVE '1'       *IN98
     C                     END                             E*1
     C*
     C**   ACCESS TO SECURITIES TRADING DATA FILE TO RETRIEVE THE 'ER DUMMY
     C**   CUSTOMER NUMBER'
     C*
     C************LOVAL    SETLLSDSTRDL1                                  S01496
     C***********          READ SDSTRDL1                 89               S01496
     C*                                                                   S01496
     C                     CALL 'AOSTRDR0'                                S01496
     C                     PARM *BLANKS   WLRTCD                          S01496
     C                     PARM '*FIRST'  WLOPTN                          S01496
     C           SDSTRD    PARM SDSTRD    DSSDY                           S01496
     C*
     C**   IF RECORD NOT FOUND
     C*
     C************IN89     IFEQ '1'                        B*1            S01496
     C           WLRTCD    IFNE *BLANKS                                   S01496
     C                     MOVEL'002'     DBASE            *****************
     C***********          MOVEL'SDSTRDL1'DBFILE           ** DB ERROR 02 S01496
     C                     MOVE 'SDSTRDPD'DBFILE           * DB ERROR 02 *S01496
     C                     MOVEL*BLANKS   DBKEY            *****************
     C                     EXSR *PSSR
     C                     END                             E*1
     C*
     C**********           MOVE BVERCU    ERDUM   60                                          CSD027
     C                     MOVE BVERCU    ERDUM   6                                           CSD027
     C*
     C**   ACCESS TO MODULES DETAILS FILE TO RETRIEVE THE 'PORTFOLIO
     C**   MANAGEMENT INDICATOR'
     C*
     C************LOVAL    SETLLSDMMODL1                                  S01496
     C***********          READ SDMMODL1                 89               S01496
     C*                                                                   S01496
     C                     CALL 'AOMMODR0'                                S01496
     C                     PARM *BLANKS   WLRTCD                          S01496
     C                     PARM '*FIRST'  WLOPTN                          S01496
     C           SDMMOD    PARM SDMMOD    DSFDY                           S01496
     C*
     C**   IF RECORD NOT FOUND
     C*
     C************IN89     IFEQ '1'                        B*1            S01496
     C           WLRTCD    IFNE *BLANKS                                   S01496
     C                     MOVEL'003'     DBASE            *****************
     C***********          MOVEL'SDMMODL1'DBFILE           ** DB ERROR 03 S01496
     C                     MOVE 'SDMMODPD'DBFILE           * DB ERROR 03 *S01496
     C                     MOVEL*BLANKS   DBKEY            *****************
     C                     EXSR *PSSR
     C                     END                             E*1
     C*                                                                   S01496
     C**  Setup multibranching indicator                                  S01496
     C*                                                                   S01496
     C           BGMBIN    IFEQ 'Y'                                       S01496
     C                     MOVE '1'       *IN55                           S01496
     C                     END                                            S01496
     C*
     C**   IF 'PORTFOLIO MANAGEMENT' PRESENT
     C*
     C           BGPFMG    IFEQ 'Y'                        B*1
     C           BGN4ST    OREQ 'Y'                                       CPB001
     C*                                                                   S01496
     C**  Setup the portfolio management indicator                        S01496
     C*                                                                   S01496
     C                     MOVE '1'       *IN45                           S01496
     C*
     C**   ACCESS TO PORTFOLIO MANAGEMENT FILE TO RETRIEVE THE 'REFERENCE
     C**   ATTACHED TO "9997"'
     C*
     C************LOVAL    SETLLSDPORTL1                                  S01496
     C***********          READ SDPORTL1                 89               S01496
     C*                                                                   S01496
     C           BGPFMG    IFEQ 'Y'                                       CPB001
     C                     CALL 'AOPORTR0'                                S01496
     C                     PARM *BLANKS   WLRTCD                          S01496
     C                     PARM '*FIRST'  WLOPTN                          S01496
     C           SDPORT    PARM SDPORT    DSFDY                           S01496
     C*
     C**   IF RECORD NOT FOUND
     C*
     C************IN89     IFEQ '1'                        B*2            S01496
     C           WLRTCD    IFNE *BLANKS                                   S01496
     C                     MOVEL'004'     DBASE            *****************
     C***********          MOVEL'SDPORTL1'DBFILE           ** DB ERROR 04 S01496
     C                     MOVE 'SDPORTPD'DBFILE           * DB ERROR 04 *S01496
     C                     MOVEL*BLANKS   DBKEY            *****************
     C                     EXSR *PSSR
     C                     END                             E*2
     C                     ENDIF                                          CPB001
     C                     END                             E*1
      *                                                                   CAC005
      ***  Check if CAC005 - PCA-SE Enhancement is on.                    CAC005
      *                                                                   CAC005
     C                     MOVE 'N'       CAC005  1                       CAC005
     C                     MOVE *OFF      *IN68                           CAC005
     C                     CALL 'AOSARDR0'                                CAC005
     C                     PARM *BLANKS   @RTCD   7                       CAC005
     C                     PARM '*VERIFY' @OPTN   7                       CAC005
     C                     PARM 'CAC005'  @SARD   6                       CAC005
      *                                                                   CAC005
     C           @RTCD     IFEQ *BLANK                                    CAC005
     C                     MOVE 'Y'       CAC005                          CAC005
     C                     MOVE *ON       *IN68                           CAC005
     C                     ENDIF                                          CAC005
     C*
     C                     ENDSR
      *****************************************************************
      /EJECT
     ******************************************************************
     C* P002   : MAIN PROCESSING                                      *
     ******************************************************************
     C*
     C           P002      BEGSR
     C*
     C**   IF 'ER REFERENCE' PARAMETER IS EQUAL TO '*AUDIT'
     C*
     C           #REFN     IFEQ '*AUDIT'                   B*1
     C*
     C                     MOVE '0'       *IN40
     C*
     C**   ACCESS FIRST RECORD IN ER REFERENCE FILE
     C*
     C           *LOVAL    SETLLSEERRFL1
     C                     READ SEERRFL1                 88
     C*
     C**   ELSE, 'ER REFERENCE' PARAMETER CONTAINS A REFERENCE
     C*
     C                     ELSE                            X*1
     C*
     C                     MOVE '1'       *IN40
     C*
     C**   ACCESS FIRST RECORD WITH THE SAME REFERENCE
     C*
     C           #REFN     CHAINSEERRFL1             88
     C                     END                             E*1
     C*
     C**   IF END OF FILE
     C*
     C           *IN88     IFEQ '1'                        B*1
     C***********          WRITEHEADER                                    S01496
     C***********          WRITENODATA                                    S01496
     C                     OPEN SE6800AU                                  S01496
     C                     WRITEHEADAU                                    S01496
     C                     WRITENODTLS                                    S01496
     C*                                                                   S01496
     C**  Ensure audit report file is recorded by RCF                     S01496
     C*                                                                   S01496
     C                     Z-ADDSFNUMU    ZSNUM                           S01496
     C                     MOVELSFILEU    SFILE                           S01496
     C                     EXSR #LZSFL                                    S01496
     C                     CLOSESE6800AU                                  S01496
     C*                                                                   S01496
     C                     ELSE                                           S01496
     C*                                                                   S01496
     C**  Open printer file SE6800P1 and ensure spooled file is           S01496
     C**  recorded by RCF                                                 S01496
     C*                                                                   S01496
     C                     OPEN SE6800P1                                  S01496
     C                     MOVE 'Y'       WLOPN   1                       S01496
     C                     Z-ADDSFNUM1    ZSNUM                           S01496
     C                     MOVELSFILE1    SFILE                           S01496
     C                     EXSR #LZSFL                                    S01496
     C*                                                                   S01496
     C                     END                             E*1
     C*
     C**   WHILE END OF FILE IS NOT REACHED
     C*
     C           *IN88     DOWEQ'0'                        B*1
     C*
     C                     MOVE 'Y'       WNODET  1
     C*
     C**   IF 'SECURITY SHORTNAME' IS NOT EQUAL TO 'SAVED SECURITY'
     C*
     C           VASESN    IFNE WSESN                      B*2
     C*
     C                     MOVE '0'       *IN50
     C                     MOVE '0'       *IN51
     C                     MOVE '0'       *IN52
     C                     MOVE '0'       *IN53
     C                     MOVE '0'       *IN54
     C*
     C**   ACCESS TO SECURITY DETAILS TO RETRIEVE THE NOMINAL DECIMAL PLACES
     C*
     C           VASESN    CHAINSECTY                89
     C*
     C**   IF RECORD IS NOT FOUND
     C*
     C           *IN89     IFEQ '1'                        B*3
     C                     MOVEL'005'     DBASE            *****************
     C***********          MOVEL'SECTY   'DBFILE           ** DB ERROR 05 S01496
     C                     MOVE 'SECTY   'DBFILE           * DB ERROR 05 *S01496
     C                     MOVELVASESN    DBKEY            *****************
     C*
     C           *IN41     IFEQ '0'                        B*4
     C                     EXSR R001
     C                     END                             E*4
     C*
     C                     EXSR *PSSR
     C                     END                             E*3
     C*
     C**   FORMAT SECURITY DESCRIPTION
     C*
     C                     MOVE SRPN      ZSRPN
     C                     MOVE SFN1      ZSFN1
     C                     MOVE SFN2      ZSFN2
     C                     MOVE 'Y'       RSFD    1
     C                     EXSR ZSDESC
     C                     MOVE *BLANKS   SERNP1
     C                     MOVE ZRNME     SERNP1
     C*
     C**   SETON CORRECT INDICATOR FOLLOWING THE NUMBER OF DECIMAL PLACES
     C*
     C           NMDP      IFEQ 0                          B*3
     C                     MOVE '1'       *IN50
     C                     ELSE                            X*3
     C           NMDP      IFEQ 1                          B*4
     C                     MOVE '1'       *IN51
     C                     ELSE                            X*4
     C           NMDP      IFEQ 2                          B*5
     C                     MOVE '1'       *IN52
     C                     ELSE                            X*5
     C           NMDP      IFEQ 3                          B*6
     C                     MOVE '1'       *IN53
     C                     ELSE                            X*6
     C                     MOVE '1'       *IN54
     C                     END                             E*6
     C                     END                             E*5
     C                     END                             E*4
     C                     END                             E*3
     C*
     C**   MOVE 'SECURITY SHORTNAME' INTO 'SAVED SECURITY'
     C*
     C                     MOVE SESN      WSESN
     C                     MOVE '1'       *IN41
     C                     END                             E*2
     C*
     C**   OUTPUT TITLE TO REPORT
     C*
     C                     MOVE '1'       *IN70
     C                     EXSR R001
     C                     MOVE '0'       *IN70
     C*
     C**   OUTPUT ER REFERENCE DETAILS
     C*
     C                     EXSR R002
     C*
     C**   PROCESS ALL DEPOT RECORDS
     C*
     C                     EXSR P005
     C*
     C**   IF NO DETAIL RECORDS ARE PRINTED
     C*
     C           WNODET    IFEQ 'Y'                        B*2
     C*
     C**   WRITE EMPTY RECORD
     C*
     C                     WRITENODEPO
     C                     END                             E*2
     C*
     C**   IF 'ER REFERENCE' IS EQUAL TO '*AUDIT'
     C*
     C           *IN40     IFEQ '0'                        B*2
     C*
     C**   ACCESS NEXT RECORD IN ER REFERENCE FILE
     C*
     C                     READ SEERRFL1                 88
     C*
     C**   ELSE, 'ER REFERENCE' PARAMETER CONTAINS A REFERENCE
     C*
     C                     ELSE                            X*2
     C*
     C**   SETON END OF FILE INDICATOR
     C*
     C                     MOVE '1'       *IN88
     C                     END                             E*2
     C                     END                             E*1
     C*
     C                     ENDSR
     C*****************************************************************
      /EJECT
     ******************************************************************
     C* P003   : TERMINATION PROCESSING                               *
     ******************************************************************
     C*
     C           P003      BEGSR
     C*                                                                   S01496
     C**  If printer file is open                                         S01496
     C*                                                                   S01496
     C           WLOPN     IFEQ 'Y'                                       S01496
     C*
     C**   WRITE END OF REPORT
     C*
     C                     WRITEENDRP
     C                     CLOSESE6800P1                                  S01496
     C                     MOVE *BLANK    WLOPN                           S01496
     C*                                                                   S01496
     C                     END                                            S01496
     C*
     C**   END OF PROGRAM
     C*
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* P005   : PROCESS ALL DEPOT RECORDS                            *
     ******************************************************************
     C*
     C           P005      BEGSR
     C*
     C**   ACCESS FIRST DEPOT RECORD FOR CURRENT ER REFERENCE
     C*
     C           VAERRF    CHAINSEERDPL1             87
     C*
     C**   DO WHILE SAME ER REFERENCE AND NOT END OF FILE
     C*
     C           *IN87     DOWEQ'0'                        B*1
     C*
     C                     MOVE 'N'       WNODET
     C*
     C**   IF OVERFLOW INDICATOR IS ON
     C*
     C           *IN70     IFEQ '1'                        B*2
     C*
     C**   OUTPUT TITLE
     C*
     C                     EXSR R001
     C                     MOVE '0'       *IN70
     C                     END                             E*2
     C*
     C**   OUTPUT DEPOT DETAILS
     C*
     C                     EXSR R003
     C*
     C**   PROCESS ALL ALLOCATION RECORDS
     C*
     C                     EXSR P006
     C*
     C**   ACCESS NEXT DEPOT RECORD FOR CURRENT ER REFERENCE
     C*
     C                     READ SEERDPL1                 87
     C*
     C           *IN87     IFEQ '0'                        B*2
     C           VAERRF    IFNE VBERRF                     B*3
     C                     MOVE '1'       *IN87
     C                     END                             E*3
     C                     END                             E*2
     C                     END                             E*1
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* P006   : PROCESS ALL ALLOCATION RECORDS                       *
     ******************************************************************
     C*
     C           P006      BEGSR
     C*
     C**   ACCESS FIRST ALLOCATION RECORD FOR CURRENT ER REFERENCE, BRANCH CODE,
     C**   DEPOT NUMBER IN ER ALLOCATION FILE
     C*
     C                     MOVE VAERRF    #REFN
     C***********          Z-ADDVBBRCD    #BRCD                           S01496
     C                     MOVE VBBRCD    #BRCD                           S01496
     C**********           Z-ADDVBDDPT    #DDPT                                               CSD027
     C                     MOVE VBDDPT    #DDPT                                               CSD027
     C*
     C           KEY1      CHAINSEERALL1             87
     C*
     C**   DO WHILE NOT END OF FILE AND SAME REFERENCE, BRANCH AND DEPOT
     C*
     C           *IN87     DOWEQ'0'                        B*1
     C*
     C                     MOVE 'N'       WNODET
     C*
     C**   IF OVERFLOW INDICATOR IS ON
     C*
     C           *IN70     IFEQ '1'                        B*2
     C*
     C**   OUTPUT TITLE
     C*
     C                     EXSR R001
     C                     MOVE '0'       *IN70
     C                     END                             E*2
     C*
     C**   PROCESS ALL ALLOCATION RECORDS
     C*
     C                     EXSR R004
     C*
     C**   READ NEXT RECORD
     C*
     C                     READ SEERALL1                 87
     C*
     C**   IF IT'S NOT THE END OF FILE
     C*
     C           *IN87     IFEQ '0'                        B*2
     C*
     C**   IF NOT SAME SECURITY REFERENCE, BRANCH AND DEPOT
     C*
     C           #REFN     IFNE VCERRF                     B*3
     C           #BRCD     ORNE VCBRCD
     C           #DDPT     ORNE VCDDPT
     C                     MOVE '1'       *IN87
     C                     END                             E*3
     C                     END                             E*2
     C                     END                             E*1
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* R001   : OUTPUT TITLE TO PRINTER FILE                         *
     ******************************************************************
     C*
     C           R001      BEGSR
     C*
     C                     MOVE '0'       *IN65
     C*
     C                     MOVE VAERRF    REFNP1
     C                     MOVE VARNAR    NARRP1
     C*
     C**   IF STATUS IS INCOMPLETE
     C*
     C           VAERST    IFEQ 'I'                        B*1
     C                     MOVE TXT,1     STATP1
     C                     END                             E*1
     C*
     C**   IF STATUS IS ALLOCATED
     C*
     C           VAERST    IFEQ 'L'                        B*1
     C                     MOVE TXT,2     STATP1
     C                     END                             E*1
     C*
     C**   IF STATUS IS AUTHORISED
     C*
     C           VAERST    IFEQ 'X'                        B*1
     C                     MOVE TXT,3     STATP1
     C                     END                             E*1
     C*
     C**   IF STATUS IS COMPLETE
     C*
     C           VAERST    IFEQ 'C'                        B*1
     C                     MOVE TXT,4     STATP1
     C                     END                             E*1
     C*
     C**   IF STATUS IS REVERSED
     C*
     C           VAERST    IFEQ 'R'                        B*1
     C                     MOVE TXT,5     STATP1
     C                     END                             E*1
     C*
     C                     MOVE VASESN    SECNP1
     C*
     C           VACORF    IFEQ *BLANKS                    B*1
     C                     MOVE '1'       *IN65
     C                     END                             E*1
     C*
     C                     MOVE VACORF    CORFP1
     C*                                                                   S01496
     C**  Get user's default branch using access object                   S01496
     C*                                                                   S01496
     C                     CALL 'AOUSERR0'                                S01496
     C                     PARM *BLANKS   WLRTCD                          S01496
     C                     PARM '*KEY   ' WLOPTN                          S01496
     C                     PARM ##USR     WLUSER 10                       S01496
     C           SDUSER    PARM SDUSER    DSSDY                           S01496
     C*                                                                   S01496
     C           WLRTCD    IFNE *BLANKS                                   S01496
     C                     Z-ADD6         DBASE            ***************S01496
     C                     MOVE 'MUSERDD 'DBFILE           * DB ERROR 06 *S01496
     C                     MOVEL*BLANKS   DBKEY            ***************S01496
     C                     EXSR *PSSR                                     S01496
     C                     END                                            S01496
     C*
     C**   SEARCH IF THERE IS A GENERAL BLOCK FOR SECURITY
     C*
     C***********          MOVE BVBRCD    WWTDBR                          S01496
     C                     MOVE DBRN      WWTDBR                          S01496
     C                     MOVE VASESN    WWTDSS
     C                     MOVE ' '       WWSPGB
     C                     MOVE ' '       WWSSGB
     C                     CALL 'SE6712'
     C                     PARM           WWTDBR  3        Branch Code
     C                     PARM           WWTDSS           Security
     C                     PARM           WWSPGB  1        Sec. P Gen Block
     C                     PARM           WWSSGB  1        Sec. S Gen Block
     C*
     C           WWSPGB    IFEQ 'Y'                        B*1
     C*
     C           FIEL2     IFEQ *BLANKS                    B*2
     C                     MOVE '1'       *IN78            Block error
     C                     ELSE                            X*2
     C                     MOVE '1'       *IN79            Blk Err
     C                     END                             E*2
     C*
     C                     END                             E*1
     C*
     C**   OUTPUT HEADER
     C*
     C                     WRITEHEADER
     C*
     C                     MOVE '0'       *IN78            Block error
     C                     MOVE '0'       *IN79            Blk Err
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* R002   : OUTPUT ER REFERENCE DETAILS                          *
     ******************************************************************
     C*
     C           R002      BEGSR
     C*
     C**   IF CHANGE TYPE IS INSERT
     C*
     C           VACHTP    IFEQ 'I'                        B*1
     C                     MOVE 'Insert'  CHTPP1
     C                     ELSE
     C                     MOVE 'Amend '  CHTPP1
     C                     END                             E*1
     C*
     C                     Z-ADDVALCD     ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     LCDP1
     C*
     C                     MOVE VALUID    LUIDP1
     C*
     C                     Z-ADDVAEREX    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZADATE    EXDTP1
     C*
     C                     Z-ADDVAERRD    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZADATE    REDTP1
     C*
     C                     Z-ADDVAERPD    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZADATE    PYDTP1
     C*
     C                     Z-ADDVAERAD    ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZADATE    LADTP1
     C*
     C                     MOVE VAFAID    FADTP1
     C                     Z-ADDVAREDP    PRICP1
     C*
     C**   OUTPUT TITLE
     C*
     C                     WRITETITLE
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* R003   : OUTPUT ER DEPOT DETAILS                              *
     ******************************************************************
     C*
     C           R003      BEGSR
     C*
     C                     MOVE VBBRCD    BRCDP1
     C                     MOVE VBDDPT    DEPTP1
     C*
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN61
     C                     MOVE '0'       *IN62
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN64
     C*
     C**    IF 0 DECIMAL PLACE
     C*
     C           *IN50     IFEQ '1'                        B*1
     C                     MOVE VBEXPO    EXPAP0
     C                     MOVE VBNODM    NOMDP0
     C                     MOVE VBNRDM    NOMRP0
     C                     MOVE VBNALL    NOMAP0
     C                     END                             E*1
     C*
     C**    IF 1 DECIMAL PLACE
     C*
     C           *IN51     IFEQ '1'                        B*1
     C                     MOVE VBEXPO    EXPAP1
     C                     MOVE VBNODM    NOMDP1
     C                     MOVE VBNRDM    NOMRP1
     C                     MOVE VBNALL    NOMAP1
     C                     END                             E*1
     C*
     C**    IF 2 DECIMAL PLACES
     C*
     C           *IN52     IFEQ '1'                        B*1
     C                     MOVE VBEXPO    EXPAP2
     C                     MOVE VBNODM    NOMDP2
     C                     MOVE VBNRDM    NOMRP2
     C                     MOVE VBNALL    NOMAP2
     C                     END                             E*1
     C*
     C**    IF 3 DECIMAL PLACES
     C*
     C           *IN53     IFEQ '1'                        B*1
     C                     MOVE VBEXPO    EXPAP3
     C                     MOVE VBNODM    NOMDP3
     C                     MOVE VBNRDM    NOMRP3
     C                     MOVE VBNALL    NOMAP3
     C                     END                             E*1
     C*
     C**    IF 4 DECIMAL PLACES
     C*
     C           *IN54     IFEQ '1'                        B*1
     C                     MOVE VBEXPO    EXPAP4
     C                     MOVE VBNODM    NOMDP4
     C                     MOVE VBNRDM    NOMRP4
     C                     MOVE VBNALL    NOMAP4
     C                     END                             E*1
     C*
     C           VBEXPO    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN60
     C                     END                             E*1
     C*
     C           VBNODM    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN61
     C                     END                             E*1
     C*
     C           VBNRDM    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN62
     C                     END                             E*1
     C*
     C           VBNALL    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN63
     C                     END                             E*1
     C*
     C           VBPRDM    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN64
     C                     END                             E*1
     C*
     C                     Z-ADDVBPRDM    REDEP1
     C*
     C**   IF CHANGE TYPE IS INSERT
     C*
     C           VBCHTP    IFEQ 'I'                        B*1
     C                     MOVE 'Insert'  CHTPP1
     C                     ELSE
     C                     MOVE 'Amend '  CHTPP1
     C                     END                             E*1
     C*
     C                     Z-ADDVBLCD     ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     LCDP1
     C*
     C                     MOVE VBLUID    LUIDP1
     C*
     C                     MOVE '0'       *IN67
     C*
     C**   CALCULATE PERCENTAGE
     C**   IF NOT DIVISION BY ZERO
     C*
     C           VBNRDM    IFGT *ZEROS                     B*1
     C*
     C**   PERCENTAGE = (NOMINAL ALLOCATED * 100) / NOMINAL TO BE REDEEMDED
     C*
     C           VBNALL    MULT 100       WNALL  150
     C           WNALL     DIV  VBNRDM    WTOTF   30H
     C*
     C           WTOTF     IFLT *ZEROS                     B*2
     C                     Z-ADD*ZEROS    PERCP1
     C                     END                             E*2
     C*
     C** IF TOO BIG THEN SET TO +++
     C*
     C           WTOTF     IFGT 999                        B*2
     C                     MOVE '1'       *IN67
     C                     ELSE                            X*2
     C                     Z-ADDWTOTF     PERCP1
     C                     END                             E*2
     C*
     C                     ELSE                            X*1
     C*
     C** IF POSSIBLE DIVISION BY ZERO
     C*
     C                     Z-ADDVBNALL    WNALL
     C*
     C           WNALL     IFGT 0                          B*2
     C                     MOVE '1'       *IN67
     C*
     C** NOTHING ALLOCATED
     C*
     C                     ELSE                            X*2
     C                     Z-ADD*ZEROS    PERCP1
     C                     ENDIF                           E*2
     C                     Z-ADD*ZEROS    WNALL
     C                     ENDIF                           E*1
     C*
     C**   OUTPUT DETAIL1
     C*
     C                     WRITEDET1
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     ******************************************************************
     C* R004   : OUTPUT ER ALLOCATION DETAILS                         *
     ******************************************************************
     C*
     C           R004      BEGSR
     C*
     C                     MOVE *BLANKS   BOCUP2
     C*
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN63
     C                     MOVE '0'       *IN66            Dummy Customer
     C                     MOVE '0'       *IN79            Block error
     C*
     C**   IF RECORD WITH A BOOK CODE
     C*
     C           VCERTP    IFEQ 'B'                        B*1
     C                     MOVELVCBOOK    BOCUP2
      *                                                                   CAC005
      ** If CAC005 is on, retrieve user book from AOBKPCR0.               CAC005
      *                                                                   CAC005
     C           CAC005    IFEQ 'Y'                                       CAC005
     C                     CALL 'AOBKPCR0'                                CAC005
     C                     PARM           PRTCD   7                       CAC005
     C                     PARM '*USER  ' POPTN   7                       CAC005
     C           PMBKCD    PARM *BLANKS   PMBKCD  2                       CAC005
     C           PMPRFC    PARM *BLANKS   PMPRFC  4                       CAC005
     C                     PARM VCBOOK    PMPSBK  2                       CAC005
     C           PRTCD     IFEQ *BLANKS                                   CAC005
     C                     MOVELPMBKCD    BOCUP2                          CAC005
     C                     MOVE PMPRFC    PRPCTR                          CAC005
     C                     ELSE                                           CAC005
     C                     MOVEL*BLANKS   PRPCTR                          CAC005
     C                     ENDIF                                          CAC005
     C                     ENDIF                                          CAC005
      *                                                                   CAC005
     C                     MOVE *BLANKS   PTFRP2
     C                     ELSE                            X*1
     C*
     C**   IF RECORD WITH A CUSTOMER NUMBER
     C**   IF CUSTOMER NUMBER IS THE DUMMY CUSTOMER
     C*
     C           VCCNUM    IFEQ ERDUM
     C                     MOVE '1'       *IN66
     C                     END
     C*
     C                     MOVE VCCNUM    BOCUP2
     C*
     C           VCPTFR    IFEQ '9997'                     B*2
     C           BGN4ST    ANDNE'Y'                                       CPB001
     C***********          MOVE P9R997    PTFRP2                          S01496
     C                     MOVE FCR997    PTFRP2                          S01496
     C                     ELSE                            X*2
     C                     MOVE VCPTFR    PTFRP2
     C                     END                             E*2
     C*
     C                     END                             E*1
     C*
     C**   IF 0 DECIMAL PLACE
     C*
     C           *IN50     IFEQ '1'                        B*1
     C                     MOVE VCEXPO    EXPAP0
     C                     MOVE VCNOMA    NOMAP0
     C                     END                             E*1
     C*
     C**   IF 1 DECIMAL PLACE
     C*
     C           *IN51     IFEQ '1'                        B*1
     C                     MOVE VCEXPO    EXPAP1
     C                     MOVE VCNOMA    NOMAP1
     C                     END                             E*1
     C*
     C**   IF 2 DECIMAL PLACES
     C*
     C           *IN52     IFEQ '1'                        B*1
     C                     MOVE VCEXPO    EXPAP2
     C                     MOVE VCNOMA    NOMAP2
     C                     END                             E*1
     C*
     C**   IF 3 DECIMAL PLACES
     C*
     C           *IN53     IFEQ '1'                        B*1
     C                     MOVE VCEXPO    EXPAP3
     C                     MOVE VCNOMA    NOMAP3
     C                     END                             E*1
     C*
     C**   IF 4 DECIMAL PLACES
     C*
     C           *IN54     IFEQ '1'                        B*1
     C                     MOVE VCEXPO    EXPAP4
     C                     MOVE VCNOMA    NOMAP4
     C                     END                             E*1
     C*
     C           VCEXPO    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN60
     C                     END                             E*1
     C*
     C           VCNOMA    IFEQ *ZEROS                     B*1
     C                     MOVE '1'       *IN63
     C                     END                             E*1
     C*
     C                     MOVE VCTRRF    TRRFP2
     C                     MOVE VCRVRF    RVRFP2
     C*
     C**   DISPLAY THE SEPARATOR '/' ONLY IF THE TWO FIELDS ARE DIFFERENT FROM 0
     C*
     C           VCTRRF    IFEQ *BLANKS                    B*1
     C           VCRVRF    OREQ *BLANKS
     C                     MOVE '1'       *IN56
     C                     ELSE                            X*1
     C                     MOVE '0'       *IN56
     C                     END                             E*1
     C*
     C**   IF CHANGE TYPE IS INSERT
     C*
     C           VCCHTP    IFEQ 'I'                        B*1
     C                     MOVE 'Insert'  CHTPP1
     C                     ELSE
     C                     MOVE 'Amend '  CHTPP1
     C                     END                             E*1
     C*
     C           VCRECI    IFEQ '*'                        B*1
     C                     MOVE 'Delete'  CHTPP1
     C                     END                             E*1
     C*
     C                     Z-ADDVCLCD     ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVE ZDATE     LCDP1
     C*
     C                     MOVE VCLUID    LUIDP1
     C*
     C**   IF RECORD WITH A CUSTOMER NUMBER
     C**   IF CUSTOMER NUMBER IS NOT THE DUMMY CUSTOMER
     C*
     C           VCERTP    IFNE 'B'                        B*1
     C           *IN66     ANDNE'1'
     C*
     C**   SEARCH IF THERE IS A GENERAL BLOCK FOR CUSTOMER
     C*
     C                     MOVE VCBRCD    WWTDBR
     C                     MOVE VCCNUM    WWTCNR
     C                     MOVE VCPTFR    WWPTFR
     C                     MOVE ' '       WWCPGB
     C                     MOVE ' '       WWCSGB
     C                     CALL 'SE6714'
     C                     PARM           WWTDBR  3        Branch Code
     C                     PARM           WWTCNR  6        Customer
     C                     PARM           WWPTFR  4        Portfolio
     C                     PARM           WWCPGB  1        Cust.P Gen Block
     C                     PARM           WWCSGB  1        Cust.S Gen Block
     C*
     C           WWCPGB    IFEQ 'Y'                        B*2
     C                     MOVE '1'       *IN79            Block error
     C                     ELSE                            X*2
     C*
     C**   SEARCH IF THERE IS A SPECIFIC BLOCK ON ALL
     C**   THE CUSTOMER/SECURITY POSITION
     C*
     C                     MOVE BJRDNB    WWRUND
     C                     MOVE 'N'       WWOBPO
     C                     MOVE VCBRCD    WWTDBR
     C                     MOVE VCSESN    WWTDSS
     C                     MOVE VCCNUM    WWTCNR
     C                     MOVE VCPTFR    WWPTFR
     C                     MOVE 'P'       WWBLTY
     C                     MOVE *BLANKS   WWNOBL
     C                     MOVE *BLANKS   WWNOPO
     C                     MOVE 'N'       WWCG11  1                       CGL011
     C                     MOVE *BLANKS   WWCOLA 15                       CGL011
     C*
     C                     CALL 'SE6710'
     C                     PARM           WWRUND  5        Run Date
     C                     PARM           WWOBPO  1        Obtain Position
     C                     PARM           WWTDBR  3        Branch Code
     C                     PARM           WWTDSS 10        Security
     C                     PARM           WWTCNR           Customer
     C                     PARM           WWPTFR           Portfolio
     C                     PARM           WWBLTY  1        Block Type
     C                     PARM           WWNOBL 13        Nom.Already Blck
     C**********           PARM           WWNOPO 13        Nom.Position                    AR1075401
     C                     PARM           WWNOPO 15                                        AR1075401
     C                     PARM           WWCG11                          CGL011
     C                     PARM           WWCOLA                          CGL011
     C*
     C                     MOVE WWNOBL    W1NOBL 130
     C                     MOVE WWCOLA    W1COLA 150                      CGL011
      *                                                                   CGL011
     C           W1NOBL    IFEQ *HIVAL                     B*3
     C                     MOVE '1'       *IN79            Block error
     C                     END                             E*3
     C                     END                             E*2
     C                     END                             E*1
     C*
     C**   OUTPUT DETAIL1
     C*
     C                     WRITEDET2
     C*
     C                     MOVE '0'       *IN79            Block error
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     C*****************************************************************   S01496
     C* #LZSFL - Subroutine to call ZSFILE                            *   S01496
     C*****************************************************************   S01496
     C*                                                                   S01496
     C           #LZSFL    BEGSR                                          S01496
     C*                                                                   S01496
     C                     CALL 'ZSFILE'                                  S01496
     C                     PARM           @SEQ                            S01496
     C                     PARM *BLANK    SENTY   3                       S01496
     C                     PARM           SFILE  10                       S01496
     C                     PARM           ZSNUM   60                      S01496
     C                     PARM           ZSERR   1                       S01496
     C*                                                                   S01496
     C** If an error occurred during ZSFILE processing,                   S01496
     C** return to the calling program.                                   S01496
     C*                                                                   S01496
     C           ZSERR     IFEQ 'Y'                                       S01496
     C                     SETON                     U7U8LR               S01496
     C                     RETRN                                          S01496
     C                     END                                            S01496
     C*                                                                   S01496
     C                     ENDSR                                          S01496
     C*****************************************************************   S01496
     C/EJECT                                                              S01496
     ******************************************************************
     C* *PSSR - TO PROCESS ABNORMAL END OF PROGRAM                    *
     ******************************************************************
     C           *PSSR     BEGSR
     C*
     C**   UPDATE LDA WITH ERROR INFORMATION
     C*
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C***********          MOVELDBFILE    WWFILE                          S01496
     C                     MOVE DBFILE    WWFILE                          S01496
     C                     MOVELDBKEY     WWKEY
     C                     MOVELDBPGM     WWPGM
     C                     MOVELDBASE     WWASE
     C                     OUT  LDA
     C*
     C**   OUTPUT ERROR ON PRINTER FILE
     C*
     C           WLOPN     IFEQ 'Y'                                       S01496
     C                     WRITEERROR
     C                     END                                            S01496
     C*
     C*****WRITE*END*OF*REPORT*****************************************   S01496
     C***********                                                         S01496
     C***********          WRITEENDRP                                     S01496
     C*                                                                   S01496
     C**  Output database error details on audit file                     S01496
     C*                                                                   S01496
     C                     OPEN SE6800AU                                  S01496
     C                     WRITEHEADAU                                    S01496
     C                     WRITEDBERROR                                   S01496
     C*                                                                   S01496
     C**  Ensure audit report file is recorded by RCF                     S01496
     C*                                                                   S01496
     C                     Z-ADDSFNUMU    ZSNUM                           S01496
     C                     MOVELSFILEU    SFILE                           S01496
     C                     EXSR #LZSFL                                    S01496
     C                     CLOSESE6800AU                                  S01496
     C*
     C**   SET RETURN CODE TO ERROR
     C*
     C                     MOVE 'E'       #RTCD
     C*
     C**   PRINT DUMP AND CANCEL PROGRAM
     C*
     C                     DUMP
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     ******************************************************************
      /EJECT
     C********************************************************************
     C**
     C**   ZDATE2 SR. TO CONVERT A DAY NUMBER TO DATE FORMATS.
     C**
     C**   THE YEAR 2000, BEING DIVISIBLE BY 400, IS A LEAP YEAR.
     C**
     C           ZDATE2    BEGSR                           *** ZDATE2 ***
     C**
     C**   CLEAR LEAP YEAR WORK FIELD.
     C                     MOVE 'N'       ZLEAP   1
     C**
     C**   CLEAR DATE FIELDS.
     C                     Z-ADD0         ZDATE   60
     C                     MOVEL'       ' ZADATE  7
     C**
     C**   CALCULATION TO DEFINE INPUT DAY NUMBER.
     C                     Z-ADDZDAYNO    ZDAYNO  50
     C**
     C**   DETERMINE YEAR NUMBER.
     C**
     C**   ADJUST DAY NUMBER IN CASE LAST DAY OF YEAR.
     C           ZDAYNO    SUB  1         ZDAYN1  50
     C           ZDAYN1    IFLT 0
     C                     GOTO ZDEND2
     C                     END
     C**
     C**   CALCULATE NUMBER OF 4 YEAR SPANS SINCE 31/12/1971.
     C           ZDAYN1    DIV  1461      ZLYR    20
     C                     MVR            ZDAYN1           SAVE REMAINING
     C**                                                   DAYS
     C**   CALCULATE NUMBER OF REMAINING YEARS.
     C                     Z-ADD1         ZWRK2   20
     C           ZDTAG1    TAG                             ** ZDTAG1 TAG *
     C           ZDAYN1    IFGE ZYDY,ZWRK2
     C           ZWRK2     ADD  1         ZWRK2
     C                     GOTO ZDTAG1
     C                     END
     C*
     C           ZWRK2     SUB  1         ZWRK2
     C**
     C**   DECREMENT DAY NO. BY DAYS IN REMAINING YEARS.
     C           ZWRK2     IFNE 0
     C           ZDAYN1    SUB  ZYDY,ZWRK2ZDAYN1
     C                     END
     C**
     C**   CALCULATE ACTUAL YEAR NUMBER.
     C           ZLYR      MULT 4         ZWRK3   30
     C           ZWRK3     ADD  72        ZWRK3            BASE IS 1972
     C                     Z-ADDZWRK3     ZYEAR   20
     C           ZYEAR     ADD  ZWRK2     ZYEAR            YEAR
     C**
     C**   DETERMINE MONTH NUMBER.
     C**
     C**   ADJUST DAY NO. IN CASE LAST DAY OF LEAP YEAR FEBRUARY.
     C           ZWRK2     IFEQ 0
     C           ZDAYN1    IFEQ 59
     C                     MOVE 'Y'       ZLEAP
     C                     END
     C           ZDAYN1    IFGE 59
     C           ZDAYN1    SUB  1         ZDAYN1
     C                     END
     C                     END
     C**
     C**   CALCULATE MONTH NUMBER.
     C                     Z-ADD2         ZWRK2
     C           ZDTAG2    TAG                             ** ZDTAG2 TAG *
     C           ZDAYN1    IFGE ZMDY,ZWRK2
     C           ZWRK2     ADD  1         ZWRK2
     C                     GOTO ZDTAG2
     C                     END
     C*
     C           ZWRK2     SUB  1         ZWRK2
     C**
     C                     Z-ADDZWRK2     ZMTH    20       MONTH
     C**
     C**   DETERMINE DAY OF MONTH.
     C**
     C**   ADD BACK LAST DAY OF YEAR ADJUSTMENT.
     C           ZDAYN1    ADD  1         ZDAYN1
     C**
     C**   CALCULATE DAY OF MONTH.
     C           ZDAYN1    SUB  ZMDY,ZWRK2ZDAY    20       DAY
     C**
     C**   ADD BACK LEAP YEAR 29TH FEBUARY ADJUSTMENT, IF REQUIRED.
     C           ZLEAP     IFEQ 'Y'
     C           ZDAY      ADD  1         ZDAY
     C                     END
     C**
     C**   FORMAT DATE, DDMMYY OR MMDDYY.
     C  N98                MOVELZDAY      ZWRK4   40
     C   98                MOVE ZDAY      ZWRK4
     C  N98                MOVE ZMTH      ZWRK4
     C   98                MOVELZMTH      ZWRK4
     C                     MOVELZWRK4     ZDATE
     C                     MOVE ZYEAR     ZDATE
     C**
     C**   FORMAT ALPHA DATE, DDMMMYY.
     C                     MOVELZDAY      ZWRK5   5
     C           ZDAY      IFLT 10
     C                     MOVEL' '       ZWRK5
     C                     END
     C                     MOVE ZMNM,ZMTH ZWRK5
     C                     MOVELZWRK5     ZADATE
     C                     MOVE ZYEAR     ZADATE
     C**
     C           ZDEND2    ENDSR                           * ZDEND2 ENDSR*
     C**
     C**
     C********************************************************************
      /EJECT
     C**********************************************************************
     C**
     C**   ZSDESC- SUBROUTINE TO FORMAT SECURITY DESCRIPTIONS
     C**
     C**   INPUT  - ZSRPN (20) SECURITY REPORT NAME
     C**            ZSFN1 (30) SECURITY FULL NAME 1
     C**            ZSFN2 (30) SECURITY FULL NAME 2
     C**            CPNR  (11,7) COUPON RATE FROM SECURITY
     C**            MATY  (5,0) MATURITY DATE FROM SECURITY
     C**            SCPP  (15,8) REDEMPTION PRICE FROM SECURITY
     C**            SCPD  (5,0) FIRST REDEMPTION DATE FROM SECURITY
     C**            RSFD  (1) REDEMPTION IN SEC.DESC. IND (TABTB36)
     C**            SCPI  (1) PUT/CALL INDICATOR
     C**
     C**  OUTPUT -  ZRNME  (41) SECURITY REPORT NAME DESCRIPTION
     C**            ZFNM1  (30) SECURITY FULL NAME DESCRIPTION 1
     C**            ZFNM2  (50) SECURITY FULL NAME DESCRIPTION 2
     C**            ZFNM3  (50) SECURITY FULL NAME DESCRIPTION 3
     C**
     C**  CALLS  -  ZDATE2
     C**
     C**********************************************************************
     C*
     C           ZSDESC    BEGSR                           ** ZSDESC **
     C*
     C* DEFINE INPUT FIELDS AND CLEAR OUTPUT FIELDS
     C*
     C                     MOVE ZSRPN     ZSRPN  20
     C                     MOVE ZSFN1     ZSFN1  30
     C                     MOVE ZSFN2     ZSFN2  30
     C*
     C                     MOVE *BLANK    ZRNME  41
     C                     MOVE *BLANK    ZFNM1  30
     C                     MOVE *BLANK    ZFNM2  50
     C                     MOVE *BLANK    ZFNM3  50
     C                     MOVEA*BLANK    AON
     C*
     C* CHECK WHICH INPUT FIELD/S ENTERED
     C*
     C* IF REPORT NAME BLANK - FULL NAME FORMAT REQUIRED
     C*
     C           ZSRPN     IFEQ *BLANK
     C                     GOTO FLLFMT
     C                     END
     C*
     C* MOVE REPORT NAME TO ARRAY
     C*
     C                     MOVEAZSRPN     ASS
     C                     Z-ADD20        ZE      20
     C*
     C* FIND FIRST BLANK WORKING BACKWARDS THROUGH NAME ARRAY
     C*
     C           ASS,ZE    DOUNE' '
     C           ZE        OREQ 0
     C           ASS,ZE    IFEQ ' '
     C           ZE        SUB  1         ZE
     C                     END
     C                     END
     C*
     C* MOVE NAME TO OUTPUT DESCRIPTION
     C*
     C                     Z-ADD0         ZO      20
     C                     Z-ADD0         ZS      20
     C           ZE        DOUEQZS
     C                     ADD  1         ZO
     C                     ADD  1         ZS
     C                     MOVE ASS,ZS    AON,ZO
     C                     END
     C*
     C*INSERT SEPARATOR BLANK BETWEEN NAME AND COUPON RATE
     C*
     C                     ADD  1         ZO
     C                     MOVE ' '       AON,ZO
     C*
     C                     GOTO CPRFMT
     C*
     C           FLLFMT    TAG                             **  FLLFMT **
     C*
     C* CHECK THAT FULL NAME HAS BEEN ENTERED
     C*
     C           ZSFN1     IFEQ *BLANK
     C                     GOTO EZDESC
     C                     END
     C*
     C                     Z-ADD0         ZO
     C*
     C* IF REDEMPTION IN SEC.DESC IS 'Y' -
     C*         FORMAT CALL/PUT IND, REDEMPTION PRICE AND REDEMPTION DATE
     C*
     C           RSFD      IFEQ 'Y'
     C*
     C* MOVE PUT/CALL IND TO OUTPUT IF PRESENT
     C*
     C           SCPI      IFNE *BLANK
     C                     MOVE SCPI      AON,1
     C                     MOVE ' '       AON,2
     C                     Z-ADD2         ZO
     C                     END
     C*
     C* MOVE REDEMPTION PRICE TO ARRAY TO FIND LEADING AND TRAILING ZEROS
     C*
     C           SCPP      IFEQ 0
     C                     GOTO RDTFMT
     C                     END
     C*
     C                     MOVE SCPP      ZSCPP  15
     C                     MOVEAZSCPP     APR
     C*
     C                     Z-ADD1         ZS
     C           APR,ZS    DOUNE'0'
     C           ZS        ORGT 7
     C           APR,ZS    IFEQ '0'
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* MOVE 1ST 7 DIGITS TO OUTPUT IGNORING LEADING ZEROS
     C*
     C           ZS        IFLE 7
     C           ZS        DOUGT7
     C                     ADD  1         ZO
     C                     MOVE APR,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* FIND TRAILING ZEROS
     C*
     C                     Z-ADD15        ZE
     C           ZE        DOULT8
     C           APR,ZE    ORNE '0'
     C           APR,ZE    IFEQ '0'
     C           ZE        SUB  1         ZE
     C                     END
     C                     END
     C*
     C* MOVE DIGITS AFTER DEC POINT TO OUTPUT IGNORING TRAILING ZEROS
     C*
     C           ZE        IFGT 7
     C                     ADD  1         ZO
     C                     MOVE '.'       AON,ZO
     C                     Z-ADD8         ZS
     C           ZS        DOUGTZE
     C                     ADD  1         ZO
     C                     MOVE APR,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* INSERT SEPARATOR BLANK BETWEEN REDEMPTION PRICE AND DATE
     C*
     C                     ADD  1         ZO
     C                     MOVE ' '       AON,ZO
     C*
     C           RDTFMT    TAG                             ** RDTFMT **
     C*
     C* CALL ZDATE2 TO CONVERT REDEMPTION DATE TO DDMMMYY
     C*
     C           SCPD      IFEQ 0
     C                     GOTO CPRFMT
     C                     END
     C*
     C                     Z-ADDSCPD      ZDAYNO
     C                     EXSR ZDATE2
     C                     MOVEAZADATE    ADT
     C*
     C* CHECK FOR LEADING BLANK
     C*
     C           ADT,1     IFEQ ' '
     C                     Z-ADD2         ZS
     C                     ELSE
     C                     Z-ADD1         ZS
     C                     END
     C*
     C* MOVE REDEMPTION DATE TO OUTPUT
     C*
     C           ZS        DOUGT7
     C                     ADD  1         ZO
     C                     MOVE ADT,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C*
     C* MOVE SEPARATOR BLANK BETWEEN NAME AND COUPON RATE
     C*
     C                     ADD  1         ZO
     C                     MOVE ' '       AON,ZO
     C*
     C                     END
     C*
     C* MOVE COUPON RATE TO ARRAY TO FIND LEADING AND TRAILING ZEROS
     C*
     C           CPRFMT    TAG                             ** CPRFMT **
     C*
     C           CPNR      IFEQ 0
     C                     GOTO MATFMT
     C                     END
     C*
     C*
     C           *LIKE     DEFN CPNR      ZZCPNR
     C                     Z-ADDCPNR      ZZCPNR
     C           CPNR      IFLT 0
     C                     MULT -1        ZZCPNR
     C                     END
     C                     MOVE ZZCPNR    ZCPNRX 11
     C                     MOVEAZCPNRX    ACR
     C*
     C* FIND LEADING ZEROS
     C*
     C                     Z-ADD1         ZS      20
     C           ACR,ZS    DOUNE'0'
     C           ZS        ORGT 4
     C           ACR,ZS    IFEQ '0'
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* MOVE FIRST 4 DIGITS OF COUPON RATE TO OUTPUT LINE IGNORING
     C*  LEADING ZEROS
     C*
     C           ZS        IFLE 4
     C           ZS        DOUGT4
     C                     ADD  1         ZO
     C                     MOVE ACR,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* FIND TRAILING ZEROS OF COUPON RATE
     C*
     C                     Z-ADD11        ZE      20
     C           ZE        DOULT5
     C           ACR,ZE    ORNE '0'
     C           ACR,ZE    IFEQ '0'
     C           ZE        SUB  1         ZE
     C                     END
     C                     END
     C*
     C* IF DIGITS PRESENT AFTER DECIMAL POINT - MOVE TO OUTPUT LINE
     C*   IGNORING TRAILING ZEROS
     C*
     C           ZE        IFGT 4
     C                     ADD  1         ZO
     C                     MOVE '.'       AON,ZO
     C                     Z-ADD5         ZS
     C           ZS        DOUGTZE
     C                     ADD  1         ZO
     C                     MOVE ACR,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C                     END
     C*
     C* INSERT MINUS SIGN IF COUPON RATE NEGATIVE
     C*
     C           CPNR      IFLT 0
     C                     ADD  1         ZO
     C                     MOVE '-'       AON,ZO
     C                     END
     C*
     C* INSERT SEPARATOR BLANK BETWEEN COUPON RATE AND MATURITY DATE
     C*
     C                     ADD  1         ZO
     C                     MOVE ' '       AON,ZO
     C*
     C* IF MATURITY DATE PRESENT - CONVERT TO DATE DD/MMM/YY
     C*
     C           MATFMT    TAG                             ** MATFMT **
     C*
     C           MATY      IFEQ 00000
     C           MATY      OREQ 99999
     C                     GOTO MDESC
     C                     END
     C*
     C* CALL ZDATE2 TO CONVERT DATE AND MOVE DATE TO ARRAY TO TEST
     C*   FOR LEADING BLANK
     C*
     C                     Z-ADDMATY      ZDAYNO  50
     C                     EXSR ZDATE2
     C                     MOVEAZADATE    ADT
     C*
     C           ADT,1     IFEQ ' '
     C                     Z-ADD2         ZS
     C                     ELSE
     C                     Z-ADD1         ZS
     C                     END
     C*
     C* MOVE MATURITY DATE TO OUTPUT LINE
     C*
     C           ZS        DOUGT7
     C                     ADD  1         ZO
     C                     MOVE ADT,ZS    AON,ZO
     C                     ADD  1         ZS
     C                     END
     C*
     C           MDESC     TAG
     C*
     C* MOVE FORMATTED OUTPUT LINE TO OUTPUT PARAMETER
     C*
     C           ZSRPN     IFNE *BLANK
     C                     MOVELAONM      ZRNME
     C                     ELSE
     C                     MOVE ZSFN1     ZFNM1
     C           ZSFN2     IFNE *BLANK
     C                     MOVELZSFN2     ZFNM2
     C                     MOVELAONM      ZFNM3
     C                     ELSE
     C                     MOVELAONM      ZFNM2
     C                     END
     C                     END
     C*
     C           EZDESC    ENDSR                           ** EZDESC **
     C*****************************************************************
      /EJECT
**  CPY@
(c) Finastra International Limited 2001
**   ZYDY - YEARS IN DAYS CUMULATIVE, FOUR YEAR SPAN
0366073110961461
**   ZMDY - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
000031059090120151181212243273304334365
**   ZMNM - MONTHS SHORT NAMES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
**  TXT
Incomplete
Allocated
Authorised
Complete
Reversed
