     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2007')
      *****************************************************************
/*STD *  RPGLEM                                                       *
      *****************************************************************
      *                                                               *
      *  Midas - (Midas-module name)                                  *
      *                                                               *
      *  ??????  -   ????????????                                     *
      *                                                               *
      *  This module is an ILE/RPG IV conversion of the ??????        *
      *  subroutine.  The subroutine consists of ???? /COPY members.  *
      *  Each of these has been converted to ILE RPG and copied into  *
      *  this member.  Necessary code to make this compileable has    *
      *  been added (entry and exit points and some declares).  The   *
      *  existing code has not been changed except to remove dead     *
      *  lines, and the boundaries of the original /COPY members have *
      *  been marked, to facilitate future maintenance of both the    *
      *  old members and this one.  If this member has to change, the *
      *  change should ALMOST CERTAINLY be implemented by changing    *
      *  the old /COPY member, reconverting it using CVTRPGSRC, and   *
      *  copying it into this member, replacing the existing section. *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2007            *
      *                                                               *
      *  Last Amend No. CAP0nn  *CREATE    Date ddMmmyy               *
      *  Prev Amend No. xxxxxx             Date ddMmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CAP0nn - Conversion of Midas inputs to modular API structure *
      *                                                               *
      *****************************************************************
 
      ** +-----------------------------------------------------------------+
      ** Declares for variables that were defined externally for the
      ** original copy members
      ** +-----------------------------------------------------------------+
 
 
      ** +-----------------------------------------------------------------+
 
      ** +--- The converted ???????1 starts here --------------------------+
 
 
      ** +--- The converted ???????1 ends here ----------------------------+
 
 
 
      ** +--- The converted ???????2 starts here --------------------------+
 
 
      ** +--- The converted ???????2 ends here ----------------------------+
 
 
      ** Processing required before standard subroutine
      **  e.g. putting parameter fields into subroutine fields / indicators
     C                   EVAL      xxxxxx = yyyyyy
 
      ** Execute the standard subroutine
     C                   EXSR      aaaaaa
 
      ** Processing required after standard subroutine
      **  e.g. putting subroutine fields / indicators into parameter fields
     C                   EVAL      yyyyyy = xxxxxx
 
     C                   RETURN
      /EJECT
      ** +--- The converted ???????3 starts here --------------------------+
 
 
      ** +--- The converted ???????3 ends here ----------------------------+
      /EJECT
      **********************************************************************
      *                                                                    *
      *  This subroutine is to cater for the fact that standard subroutine *
      *   aaaaaa in this module executes another standard subroutine,      *
      *   bbbbbb, which has also been converted to a module.               *
      *  This subroutine is also called bbbbbb and simply does a CALLB to  *
      *   the module that contains subroutine bbbbbb                       *
      *                                                                    *
     C     bbbbbb        BEGSR
 
     C                   CALLB     'bbbbbb'
     C                   PARM                    parm1
     C                   PARM                    parm2
 
     C                   ENDSR
      **********************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *INZSR - Program Initialisation routine                       *
      *                                                               *
      * Called by: Implicitly on program activation                   *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     *INZSR        BEGSR
 
     C     *entry        PLIST
     C                   PARM                    wwwwww
     C                   PARM                    yyyyyy
 
     C                   ENDSR
 
      *****************************************************************
 
 
      ** +--- From here to the end, apart from the copyright array, -------+
      ** +---  is the converted ???????4 ----------------------------------+
