/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas SM Shell for database migration - global')      */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Implementation module                            */
/*                                                                   */
/*       SMC000005 - Shell for database migration - global           */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2006           */
/*                                                                   */
/*       Last Amend No. BUG27793*REWRITE   Date 10Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. CUP038             Date 03Oct06              */
/*                      CUP034             Date 03Oct06              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK025  *CREATE    Date 18Jul06              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       BUG27793 - Make migration multi-streamed.                   */
/*       CUP038 - Re-organisation of migration tools.                */
/*       CUP034 - Reduce size of implementation library.             */
/*       CPK025 - MidasPlus 1.3 packaging.  New migration to handle  */
/*                customer number changes.                           */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFXSVAL &OPFXSVAL &ORLVLSVAL)
 
             DCL        VAR(&PFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&OPFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&ORLVLSVAL) TYPE(*CHAR) LEN(20)
 
             DCL        VAR(&SBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&OLDSBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&FMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TOLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ORLVL) TYPE(*CHAR) LEN(22)
 
             DCL        VAR(&SYSTEMVAL) TYPE(*CHAR) LEN(200)
             DCL        VAR(&TOGVLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BLANKSVAL) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
 
             DCLF       FILE(UPGSVALJ0)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2006')
 
/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
             CHGJOB     SWS(XXXXXX00)
 
/* Create data area MIDASMSG in QTEMP for screen error handling. */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                          VALUE(' ')
 
VALIDATE:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(CHECK)
             ENDDO
 
             IF         COND(&GISVAL *EQ &PFXSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&SBSID) VALUE(&GIVAL)
                ENDDO
             ENDDO
 
             IF         COND(&GISVAL *EQ &OPFXSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&OLDSBSID) VALUE(&GIVAL)
                ENDDO
             ENDDO
 
             IF         COND(&GISVAL *EQ &ORLVLSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&ORLVL) VALUE(&GIVAL)
                ENDDO
             ENDDO
 
             GOTO       CMDLBL(VALIDATE)
 
 CHECK:
             IF         COND(&BLANKSVAL *EQ 'Y') THEN(DO)
/* Set up messages for Midas Information Screen  */
                RTVMSG     MSGID(UPM0003) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                RTVMSG     MSGID(UPM0004) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('SMC000005' 'ENTER' ' ')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
             CALL       PGM(GPC000016) PARM(&SBSID)
 
/* Set up library names. */
             CHGVAR     VAR(&FMLIB) VALUE(&OLDSBSID *TCAT 'GMLIB')
             CHGVAR     VAR(&TOLIB) VALUE(&SBSID *TCAT 'GMLIB')
             CHGVAR     VAR(&TOGVLIB) VALUE(&SBSID *TCAT 'GVLIB')
 
/* Store release information in temporary data area .*/
             DLTDTAARA  DTAARA(&FMLIB/SMBRGMIGDA)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(&FMLIB/SMBRGMIGDA) TYPE(*CHAR) +
                          LEN(100) TEXT('Temporary data area for +
                          database migration')
             CHGDTAARA  DTAARA(&FMLIB/SMBRGMIGDA (1 10)) +
                          VALUE(%SST(&ORLVL 1 10))
             CHGDTAARA  DTAARA(&FMLIB/SMBRGMIGDA (11 10)) +
                          VALUE(%SST(&ORLVL 11 10))
             CHGDTAARA  DTAARA(&FMLIB/SMBRGMIGDA (21 2)) +
                          VALUE(%SST(&ORLVL 21 2))
 
             ?          MIGRATEG ?*FROMLIB(&FMLIB) ?*TOLIB(&TOLIB) +
                          ?-CRTFILE(*N) ??RERUN(*NO) ?-SYSPFX(*YES) +
                          ??EXCEPTION(*N) ??THRESHOLD(*N) ??JUMP(*N)
             MONMSG     MSGID(CPF6801) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
/* Update System Values in the 'to' system. */
             OVRDBF     FILE(GPSVALL0) TOFILE(&TOGVLIB/GPSVALL0)
             CHGVAR     VAR(%SST(&SYSTEMVAL 1 2)) VALUE(&SBSID)
             CALL       PGM(GP009510) PARM('BrgMidasGlobalPrefix' +
                          &SYSTEMVAL ' ')
             CHGVAR     VAR(%SST(&SYSTEMVAL 1 2)) VALUE(&OLDSBSID)
             CALL       PGM(GP009510) PARM('BrgOldGlobalPrefix' +
                          &SYSTEMVAL ' ')
             DLTOVR     FILE(GPSVALL0)
 
             GOTO       CMDLBL(ENDPGM)
 
ERROR:
             RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('SMC000005') MSG(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE('Check +
                          joblog for details')
             MONMSG     MSGID(CPF0000)
             CALL       PGM(SCC0010) PARM('SMC000005' 'ENTER' ' ')
             MONMSG     MSGID(CPF0000)
ENDPGM:
             ENDPGM
