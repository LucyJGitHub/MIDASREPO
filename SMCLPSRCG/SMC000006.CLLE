/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas SM Check contents of "to" library')             */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000006 - Check contents of "to" library                  */
/*                                                                   */
/*       (c) Finastra International Limited 2006                     */
/*                                                                   */
/*       Last Amend No. MD054605           Date 17Oct19              */
/*       Prev Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*                      CUP034             Date 03Oct06              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK025  *CREATE    Date 03Jul06              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD054605 - Deliverable Data Split for SDSVALPD              */
/*       MD046248 - Finastra Rebranding                              */
/*       CUP034 - Reduce size of implementation library.             */
/*       CPK025 - MidasPlus 1.3 packaging.  Global layer migration.  */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&LIBTYPE &PFXSVAL &OPFXSVAL)

             DCL        VAR(&LIBTYPE) TYPE(*CHAR) LEN(3)
             DCL        VAR(&PFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&OPFXSVAL) TYPE(*CHAR) LEN(20)

             DCL        VAR(&PREFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&OLDSBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&FROMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TOLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NOTFMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BLANKSVAL) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)

/**********  DCLF       FILE(UPGSVALJ0) */                                              /*MD054605*/
             DCLF       FILE(UPGSVALJ0) ALWNULL(*YES)                                   /*MD054605*/

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2006')

/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             CHGJOB     LOG(4 0 *SECLVL) LOGCLPGM(*YES)
             CHGJOB     SWS(XXXXXX00)

/* Create data area /MIDASMSG in QTEMP */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                          VALUE(' ')

/* Check that System Values have an entry. */
VALIDATE:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(CHECK)
             ENDDO

             IF         COND(&GISVAL *EQ &PFXSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&PREFIX) VALUE(&GIVAL)
                ENDDO
             ENDDO

             IF         COND(&GISVAL *EQ &OPFXSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&OLDSBSID) VALUE(&GIVAL)
                ENDDO
             ENDDO

             GOTO       CMDLBL(VALIDATE)

 CHECK:
             IF         COND(&BLANKSVAL *EQ 'Y') THEN(DO)
/* Set up messages for Midas Information Screen  */
                RTVMSG     MSGID(UPM0003) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                RTVMSG     MSGID(UPM0004) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('SMC000006' 'ENTER' ' ')
                GOTO       CMDLBL(END)
             ENDDO

             CALL       PGM(GPC000016) PARM(&PREFIX)                                      /*CUP034*/

/* Set up variable names. */
             CHGVAR     VAR(&FROMLIB) VALUE(&OLDSBSID *TCAT &LIBTYPE +
                          *TCAT 'LIB')
             CHGVAR     VAR(&TOLIB) VALUE(&PREFIX *TCAT &LIBTYPE +
                          *TCAT 'LIB')
             CHGVAR     VAR(&NOTFMBR) VALUE('SM' *TCAT &LIBTYPE +
                          *TCAT 'NFQF')

/* Delete outfiles if they already exist. */
             DLTF       FILE(QTEMP/UPFLIBOF)
             MONMSG     MSGID(CPF0000)
             DLTF       FILE(QTEMP/UPTLIBOF)
             MONMSG     MSGID(CPF0000)

/* Produce outfiles of files in "from" and "to" library. */
             DSPOBJD    OBJ(&FROMLIB/*ALL) OBJTYPE(*ALL) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/UPFLIBOF)
             DSPOBJD    OBJ(&TOLIB/*ALL) OBJTYPE(*ALL) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/UPTLIBOF)

/* Copy outfile of "from" library to keyed version of the file. */
             CPYF       FROMFILE(QTEMP/UPFLIBOF) TOFILE(UPNOTFPD) +
                          TOMBR(&NOTFMBR) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)

/* Call program to remove records found in both outfiles. */
             OVRDBF     FILE(UPNOTFPD) TOFILE(UPNOTFPD) MBR(&NOTFMBR)
             CALL       PGM(SM0006)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ABNOR)
             ENDDO

/* Call program to produce report of files not in "to" library. */
             CALL       PGM(UP0260)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                GOTO       CMDLBL(ABNOR)
             ENDDO

/* Call program to produce display file for file selection. */
             CALL       PGM(UP0261) PARM(&TOLIB)

             GOTO       CMDLBL(END)
ABNOR:
/* Set up messages for Midas Information Screen  */
             RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('SMC000006') MSG(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE('Check +
                          joblog for details')
             MONMSG     MSGID(CPF0000)
             CALL       PGM(SCC0010) PARM('SMC000006' 'ENTER' ' ')
             MONMSG     MSGID(CPF0000)
             CHGJOB     SWS(XXXXXX11)
             MONMSG     MSGID(CPF0000)
END:
             DLTOVR     FILE(UPNOTFPD)
             MONMSG     MSGID(CPF0000)

             ENDPGM
