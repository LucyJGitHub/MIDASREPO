/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas SM CREATEZONE CPP')                             */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000020 - CPP for CREATEZONE                              */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2005           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. CSM006  *CREATE    Date 22Mar05              */
/*       Prev Amend No. Xnnnnn             Date ddmmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CSM006 - Create new zone based on existing zone.            */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&NEWZONE &GLOBLYR &BASEZONE &ZONE +
                          &ZONECODE &ZONEDESC)
 
             DCL        VAR(&NEWZONE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&GLOBLYR) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BASEZONE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ZONE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ZONECODE) TYPE(*CHAR) LEN(4)
             DCL        VAR(&ZONEDESC) TYPE(*CHAR) LEN(50)
 
             DCL        VAR(&STSPOS) TYPE(*DEC) LEN(2 0) VALUE(0)
             DCL        VAR(&TYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&BATCH) TYPE(*CHAR) LEN(4) VALUE('*NO ')
             DCL        VAR(&STATUS) TYPE(*CHAR) LEN(1)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2005')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
             CHGJOB     SWS(00000000)
 
/* Check whether job is in batch or interactive. */
             RTVJOBA    TYPE(&TYPE)
             IF         COND(&TYPE *EQ '0') THEN(DO)
                CHGVAR     VAR(&BATCH) VALUE('*YES')
             ENDDO
 
/* Check if member for new zone exists in SMNEWZPD.  If it doesn't then */
/* add member and populate from program parameters. */
             CHKOBJ     OBJ(SMNEWZPD) OBJTYPE(*FILE) MBR(&NEWZONE)
             MONMSG     MSGID(CPF9815) EXEC(DO)
                ADDPFM     FILE(SMNEWZPD) MBR(&NEWZONE) TEXT('Details +
                             of new zone' *BCAT &NEWZONE)
                OVRDBF     FILE(SMNEWZPD) MBR(&NEWZONE)
                CALL       PGM(SM000020) PARM('*UPDDTA' 0 ' ' &NEWZONE +
                             &GLOBLYR &BASEZONE &ZONE &ZONECODE &ZONEDESC)
                DLTOVR     FILE(SMNEWZPD)
             ENDDO
 
/* Restore libraries from save files. */
/* Check position 1 of field NZCSTS on SMNEWZPD to see if it has run already.  */
             CHGVAR     VAR(&STSPOS) VALUE(1)
             OVRDBF     FILE(SMNEWZPD) MBR(&NEWZONE)
             CALL       PGM(SM000020) PARM('*CHKSTS' &STSPOS &STATUS +
                          ' ' ' ' ' ' ' ' ' ' ' ')
             DLTOVR     FILE(SMNEWZPD)
             IF         COND(&STATUS *NE 'Y') THEN(DO)
                CALL       PGM(SMC000021) PARM(&NEWZONE &GLOBLYR)
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
                OVRDBF     FILE(SMNEWZPD) MBR(&NEWZONE)
                CALL       PGM(SM000020) PARM('*UPDSTS' &STSPOS 'Y' ' ' +
                             ' ' ' ' ' ' ' ' ' ')
                DLTOVR     FILE(SMNEWZPD)
             ENDDO
 
/* Recreate SQL views. */
/* Check position 2 of field NZCSTS on SMNEWZPD to see if it has run already.  */
             CHGVAR     VAR(&STSPOS) VALUE(2)
             OVRDBF     FILE(SMNEWZPD) MBR(&NEWZONE)
             CALL       PGM(SM000020) PARM('*CHKSTS' &STSPOS &STATUS +
                          ' ' ' ' ' ' ' ' ' ' ' ')
             DLTOVR     FILE(SMNEWZPD)
             IF         COND(&STATUS *NE 'Y') THEN(DO)
                CALL       PGM(SMC000022) PARM(&NEWZONE &GLOBLYR)
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
                OVRDBF     FILE(SMNEWZPD) MBR(&NEWZONE)
                CALL       PGM(SM000020) PARM('*UPDSTS' &STSPOS 'Y' ' ' +
                             ' ' ' ' ' ' ' ' ' ')
                DLTOVR     FILE(SMNEWZPD)
             ENDDO
 
 
             GOTO       CMDLBL(END)
 
ERROR:
END:
             ENDPGM
