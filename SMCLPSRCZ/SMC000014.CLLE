/*********************************************************************/
/*X*I****OVRDBF*FILE(SMTEMPPD)*TOFILE(QSYS/QAFDMBRL)******************/ /*             */ /*CUP003*/
/*XBI    OVRDBF FILE(SMTEMPPD) TOFILE(UPMBRLTPD)                     */                   /*CUP003*/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Update data of mapped files')                */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000014 - Update data of mapped fields correctly          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2004           */
/*                                                                   */
/*       Last Amend No. CUP003             Date 15Sep10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. CUP034             Date 24Jan07              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CSM008  *REWRITE   Date 23Feb06              */
/*                      CSM007             Date 27Oct05              */
/*                      CGL029  *CREATE    Date 13Feb04              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP003 - Keep copies in QTEMP to improve re-runnability.    */
/*       CUP034 - Reduce size of implementation library.             */
/*       CSM008 - Changes to improve error handling.                 */
/*       CSM007 - Add error reporting to Conversion Process          */
/*       CGL029 - Increase Account Code field to 10 digits           */
/*                                                                   */
/*********************************************************************/
/**********  PGM        PARM(&PTFUPG)                                                  */ /*CUP003*/
             PGM                                                                          /*CUP003*/
 
/**********  DCL        VAR(&PTFUPG) TYPE(*CHAR) LEN(10)                               */ /*CUP003*/
 
             DCL        VAR(&LASTFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FAILEDFILE) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&REPLY1) TYPE(*CHAR) LEN(1)
/**********  DCL        VAR(&BKFILE) TYPE(*CHAR) LEN(10)                               */ /*CUP003*/
             DCL        VAR(&TYPE)      TYPE(*CHAR) LEN(1)
             DCL        VAR(&MESSAGE)   TYPE(*CHAR) LEN(50)
             DCL        VAR(&BATCH)     TYPE(*CHAR) LEN(4)   VALUE('*NO ')
/**********  DCL        VAR(&FILE)      TYPE(*CHAR) LEN(10)                            */ /*CUP034*/
/**********  DCL        VAR(&DLTFILE)   TYPE(*CHAR) LEN(10)                            */ /*CUP003*/
 
/* Parameters passed to UP008010 - write/report error message program  */
             DCL        VAR(&GENPGM)    TYPE(*CHAR) LEN(10)  VALUE('SMC000014')
             DCL        VAR(&REPORTMSG) TYPE(*CHAR) LEN(100)
 
             DCLF       FILE(SMTEMPPD)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2004')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Job Attributes (Type)    */
             RTVJOBA    TYPE(&TYPE)
 
/* Check whether job is in batch or interactive. */
             IF         COND(&TYPE *EQ '0') THEN(DO)
                CHGVAR     VAR(&BATCH) VALUE('*YES')
             ENDDO
 
READNEXT:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(LASTDLT))
 
/* If this file failed and has been flagged as failing then do not attempt */
/*  to process any other members for that file.                            */
             IF         COND(&MLFILE *EQ &FAILEDFILE) THEN(DO)
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
/**If*the*file*is*not*the*same*as*the*previous*file*then*delete*the**/ /*              */ /*CUP003*/
/**back*up*of*the*previous*file.*************************************/ /*              */ /*CUP003*/
/**********  IF         COND(&MLFILE *NE &LASTFILE *AND &LASTFILE +                    */ /*CUP003*/
/**********               *NE ' ') THEN(DO)                                            */ /*CUP003*/
/**********     CHGVAR     VAR(&DLTFILE) VALUE('B' *TCAT &LASTFILE)                    */ /*CUP003*/
/**********     DLTF       FILE(&PTFUPG/&DLTFILE)                                      */ /*CUP003*/
/**********     MONMSG     MSGID(CPF0000)                                              */ /*CUP003*/
/**********  ENDDO                                                                     */ /*CUP003*/
 
/* If the file is not the same as the previous file then take a copy of the file. */
             IF         COND(&MLFILE *NE ' ' *AND &MLFILE *NE +
                          &LASTFILE) THEN(DO)
/**********     CHGVAR     VAR(&BKFILE) VALUE('B' *TCAT &MLFILE)                       */ /*CUP003*/
                DLTF       FILE(QTEMP/&MLFILE)                                            /*CUP003*/
                MONMSG     MSGID(CPF0000)                                                 /*CUP003*/
/**********     CPYF       FROMFILE(*LIBL/&MLFILE) +                                   */ /*CUP003*/
/**********                  TOFILE(&PTFUPG/&BKFILE) FROMMBR(*ALL) +                   */ /*CUP003*/
/**********                  TOMBR(*FROMMBR) MBROPT(*REPLACE) +                        */ /*CUP003*/
/**********                  CRTFILE(*YES)                                             */ /*CUP003*/
                CPYF       FROMFILE(*LIBL/&MLFILE) +
                             TOFILE(QTEMP/&MLFILE) FROMMBR(*ALL) +
                             TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                             CRTFILE(*YES)                                                /*CUP003*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868)                                 /*CUP034*/
             ENDDO
RETRY:
             IF         COND(&MLNAME *NE ' ') THEN(DO)
                OVRDBF     FILE(INPFILE) TOFILE(&MLFILE) MBR(&MLNAME) +
                          OVRSCOPE(*JOB)
                CALL       PGM(SM000014) PARM(&MLFILE)
                DLTOVR     FILE(INPFILE) LVL(*JOB)
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
/* Copy back up of file back to original. */
/**********        CPYF       FROMFILE(&PTFUPG/&BKFILE) +                              */ /*CUP003*/
/**********                     TOFILE(*LIBL/&MLFILE) FROMMBR(*ALL) +                  */ /*CUP003*/
/**********                     TOMBR(*FROMMBR) MBROPT(*REPLACE)                       */ /*CUP003*/
                   CPYF       FROMFILE(QTEMP/&MLFILE) TOFILE(&MLFILE) +
                                FROMMBR(*ALL) TOMBR(*FROMMBR) +
                                MBROPT(*REPLACE)                                          /*CUP003*/
                   CHGVAR     VAR(&FAILEDFILE) VALUE(&MLFILE)
                   CHGVAR     VAR(&REPORTMSG) VALUE('Conversion for' *BCAT +
                                &FAILEDFILE *BCAT 'ended abnoramlly.  +
                                Check dump and job log.')
                   CALL       PGM(UP008010) PARM(*WRITE &GENPGM &REPORTMSG)
/* New error handling ..... */
                   IF    COND(&BATCH *EQ '*NO ') THEN(DO)
CHOOSE:
                      CHGVAR     VAR(&REPLY1) VALUE(' ')
/**********           CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&FILE *BCAT +         */ /*CUP034*/
/**********                        'did not convert correctly')                        */ /*CUP034*/
                      CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&FAILEDFILE +
                                   *BCAT 'did not convert correctly')                     /*CUP034*/
                      MONMSG     MSGID(CPF0000)
                      RTVMSG     MSGID(UPM0007) MSGF(UTMSGF) MSG(&MESSAGE)
                      CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                      RTVMSG     MSGID(UPM0011) MSGF(UTMSGF) MSG(&MESSAGE)
                      CHGDTAARA  DTAARA(MIDASMSG (251 50)) VALUE(&MESSAGE)
                      RTVMSG     MSGID(UPM0017) MSGF(UTMSGF) MSG(&MESSAGE)
                      CHGDTAARA  DTAARA(MIDASMSG (301 50)) VALUE(&MESSAGE)
                      RTVMSG     MSGID(UPM0018) MSGF(UTMSGF) MSG(&MESSAGE)
                      CHGDTAARA  DTAARA(MIDASMSG (351 50)) VALUE(&MESSAGE)
                      RTVMSG     MSGID(UPM0009) MSGF(UTMSGF) MSG(&MESSAGE)
                      CHGDTAARA  DTAARA(MIDASMSG (401 50)) VALUE(&MESSAGE)
                      CALL  PGM(SCC0010) PARM('SMC000014' 'OPTION2' &REPLY1)
                      IF         COND(&REPLY1 *EQ 'J') THEN(DO)
                         DSPJOBLOG
                         GOTO       CMDLBL(CHOOSE)
                      ENDDO
                      IF         COND(&REPLY1 *EQ 'C') THEN(DO)
                         CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')
                         GOTO       CMDLBL(END)
                      ENDDO
                      IF         COND(&REPLY1 *EQ 'I') THEN(DO)
                         CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')
                         GOTO       CMDLBL(READNEXT)
                      ENDDO
                      IF         COND(&REPLY1 *EQ 'R') THEN(DO)
                         CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')
                         GOTO       CMDLBL(RETRY)
                      ENDDO
/* If not one of the options then redisplay screen with message */
                      IF         COND(&REPLY1 *NE 'J' *AND &REPLY1 *NE 'I' +
                                   *AND &REPLY1 *NE 'C' *AND &REPLY1 *NE +
                                   'R') THEN(DO)
                         RTVMSG  MSGID(UPM0012) MSGF(UTMSGF) MSG(&MESSAGE)
                         CHGDTAARA DTAARA(MIDASMSG (551 50)) VALUE(&MESSAGE)
                         GOTO       CMDLBL(CHOOSE)
                     ENDDO
                  ENDDO
                ENDDO
             ENDDO
 
             CHGVAR     VAR(&LASTFILE) VALUE(&MLFILE)
             GOTO       CMDLBL(READNEXT)
 
LASTDLT:
/**Delete*the*last*file*on*that*has*been*processed.**/ /*                              */ /*CUP003*/
/**********  DLTF       FILE(&PTFUPG/&BKFILE)                                          */ /*CUP003*/
/**********  MONMSG     MSGID(CPF0000)                                                 */ /*CUP003*/
 
             GOTO       CMDLBL(END)
 
ABNOR:
             CHGJOB     SWS(XXXXXX11)
 
END:
             ENDPGM
