/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas SM Single library database upgrade - zone')     */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000028 - Single library database upgrade                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2006           */
/*                                                                   */
/*       Last Amend No. CSC043             Date 18Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. CUP033  *CREATE    Date 11Sep06              */
/*                      xxxxxx             Date ddMmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CSC043 - MidasPlus IASP Enablement                          */
/*       CUP033 - Replacement for this utility (SMC2010).            */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFXSVAL &BRGSVAL)
 
             DCL        VAR(&PFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&BRGSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&RTNCDE) TYPE(*CHAR) LEN(7)                                   /*CSC043*/
             DCL        VAR(&SVAL1) TYPE(*CHAR) LEN(200)                                  /*CSC043*/
             DCL        VAR(&SVAL2) TYPE(*CHAR) LEN(200)                                  /*CSC043*/
             DCL        VAR(&IASP_YN) TYPE(*CHAR) LEN(1)                                  /*CSC043*/
             DCL        VAR(&IASP) TYPE(*CHAR) LEN(10)                                    /*CSC043*/
 
             DCL        VAR(&SBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BRGLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BLANKSVAL) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&LIBNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBMOV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UPSTAT) TYPE(*CHAR) LEN(256)
             DCL        VAR(&OWNER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&AUTL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UPSTATPOS) TYPE(*DEC) LEN(3 0)
             DCL        VAR(&TODAY) TYPE(*CHAR) LEN(6)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(1)
 
             DCLF       FILE(UPSVALJ0)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2006')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
             CHGJOB     LOG(4 0 *SECLVL) LOGCLPGM(*YES)
             CHGJOB     SWS(XXXXXX00)
 
/* Create data area /MIDASMSG in QTEMP */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                          VALUE(' ')
 
VALIDATE:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(CHECK)
             ENDDO
 
             IF         COND(&GISVAL *EQ &PFXSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&SBSID) VALUE(&GIVAL)
                ENDDO
             ENDDO
 
             IF         COND(&GISVAL *EQ &BRGSVAL) THEN(DO)
                IF         COND(&GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&BRGLIB) VALUE(&GIVAL)
                ENDDO
             ENDDO
 
             GOTO       CMDLBL(VALIDATE)
 
CHECK:
             IF         COND(&BLANKSVAL *EQ 'Y') THEN(DO)
                RTVMSG     MSGID(UPM0003) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                RTVMSG     MSGID(UPM0004) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('SMC000028' 'ENTER' ' ')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
/* Set up library list for system to be upgraded. */
             CALL       PGM(UPC0014) PARM(&SBSID)
 
             CALL       PGM(GPAOSVALR0) PARM(&RTNCDE +
                          'IASPinstallation' &SVAL1 'IASPgroup' +
                          &SVAL2 ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' +
                          ' ' ' ' ' ' ' ' ' ' ' ' ' ' ')                                  /*CSC043*/
 /* Check whether system is in IASP environment. */                                       /*CSC043*/
             CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))                             /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
/** Get name of IASP. */                                                                  /*CSC043*/
                CHGVAR     VAR(&IASP) VALUE(%SST(&SVAL2 1 10))                            /*CSC043*/
             ENDDO                                                                        /*CSC043*/
 
/* Get library name that is to be upgraded. */
LIBNAME:
             ?          LIBNAME
             MONMSG     MSGID(CPF6801) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
             RTVDTAARA  DTAARA(QTEMP/LIBNAME) RTNVAR(&LIBNAME)
 
/* Check that library exists. */
             CHKOBJ     OBJ(&LIBNAME) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE('Library' +
                             *BCAT &LIBNAME *BCAT 'does not exist.')
                CALL       PGM(SCC0010) PARM('SMC000028' 'ENTER' ' ')
                GOTO       CMDLBL(LIBNAME)
             ENDDO
 
/* Create driving file. */
             CRTDLVLST  SRC(&LIBNAME/*ALL) DLVLIB(&BRGLIB) +
                          CRTOPT(*REPLACE)
 
/* Send message to screen to ask if user is ready to run upgrade. */
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE('Do you wish +
                          to run upgrade now?')
             CALL       PGM(SCC0010) PARM('SMC000028' 'OPTION' &RETURN)
             IF         COND(&RETURN *EQ 'N') THEN(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
/* Set up library name where objects are to be moved to. */
             CHGVAR     VAR(&LIBMOV) VALUE('#.' *TCAT &SBSID *TCAT +
                          'DMLIB')
             CHKOBJ     OBJ(&LIBMOV) OBJTYPE(*LIB)
/* If library does not exist then create it; check if user has */
/*  authority to the command. */
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CHKOBJ     OBJ(CRTLIB) OBJTYPE(*CMD) AUT(*USE)
                MONMSG     MSGID(CPF9802) EXEC(DO)
                   RTVMSG     MSGID(UPM0013) MSGF(UTMSGF) MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   RTVMSG     MSGID(UPM0014) MSGF(UTMSGF) +
                          MSGDTA(&LIBMOV) MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('SMC000028' 'ENTER' ' ')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
                RTVJOBA    DATE(&TODAY)
/*                                                                                        /*CSC043*/
/** If IASP environment */                                                                /*CSC043*/
/*                                                                                        /*CSC043*/
             IF         COND(&IASP_YN *EQ 'Y') THEN(DO)                                   /*CSC043*/
             CRTLIB     LIB(&LIBMOV) TEXT('Temporary for BRIDGE' +
                          *BCAT &TODAY) ASPDEV(&IASP)                                     /*CSC043*/
             ENDDO                                                                        /*CSC043*/
             ELSE       CMD(DO)                                                           /*CSC043*/
                CRTLIB     LIB(&LIBMOV) TEXT('Temporary for +
                          BRIDGE' *BCAT &TODAY)
             ENDDO                                                                        /*CSC043*/
                GOTO       CMDLBL(UPGRADE)
             ENDDO
 
UPGRADE:
/* Call program to upgrade database. */
             CHGVAR     VAR(&RETURN) VALUE(' ')
 
             CHGVAR     VAR(&OWNER) VALUE(&SBSID *TCAT 'OWNER')
             CHGVAR     VAR(&AUTL) VALUE(&SBSID *TCAT 'DATABASE')
 
/*******************************************************************/
/*                                                                 */
/*  UPC0200 - Preparatory DSPFDs, DSPDBRs etc.                     */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0200 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 3 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0200) PARM(&BRGLIB &RETURN)
/* If the program ended abnormally then display general message. */
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('UPC0200') MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('UPC0200' 'JOBLOG' 'Y')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
/* If the program encountered errors then display specific messages. */
                CHGVAR     VAR(&UPSTATPOS) VALUE(3)
                CALL       PGM(UPC0015) PARM('UPDLVCL7' 'UPC0200' +
                             &UPSTATPOS &RETURN)
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0205 - Delete logical files                                 */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0205 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 4 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0205) PARM(&RETURN)
/* If the program ended abnormally then display general message. */
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('UPC0205') MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('UPC0205' 'JOBLOG' 'Y')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
/* If the program encountered errors then display specific messages. */
                CHGVAR     VAR(&UPSTATPOS) VALUE(4)
                CALL       PGM(UPC0015) PARM('UPDLVCLA' 'UPC0205' +
                             &UPSTATPOS &RETURN)
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0210 - Manage 'foreign' logical files                       */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0210 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 5 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0210) PARM(&BRGLIB &RETURN)
/* If the program ended with error then take appropriate action. */
                IF         COND(&RETURN *EQ 'C') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
                CHGDTAARA  DTAARA(UPSTAT (5 1)) VALUE('Y')
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0245 - Upgrade physical files                               */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0245 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 6 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0245) PARM(&LIBNAME &LIBMOV &SBSID +
                          &OWNER &AUTL &RETURN)
/* If the program ended abnormally then display general message. */
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('UPC0245') MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('UPC0245' 'JOBLOG' 'Y')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
/* If the program encountered errors then display specific messages. */
                CHGVAR     VAR(&UPSTATPOS) VALUE(6)
                CALL       PGM(UPC0015) PARM('UPDLVCL5' 'UPC0245' +
                             &UPSTATPOS &RETURN)
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0255 - Create logical files                                 */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0255 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 7 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0255) PARM(&LIBNAME &SBSID &OWNER +
                          &AUTL &RETURN)
/* If the program ended abnormally then display general message. */
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('UPC0255') MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('UPC0255' 'JOBLOG' 'Y')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
/* If the program encountered errors then display specific messages. */
                CHGVAR     VAR(&UPSTATPOS) VALUE(7)
                CALL       PGM(UPC0015) PARM('UPDLVCL3' 'UPC0255' +
                             &UPSTATPOS &RETURN)
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0260 - Restore 'foreign' logical files                      */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0260 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 8 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0260) PARM(&BRGLIB &RETURN)
/* If the program ended with error then take appropriate action. */
                IF         COND(&RETURN *EQ 'C') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
                CHGDTAARA  DTAARA(UPSTAT (8 1)) VALUE('Y')
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0265 - Rebuild multi-member logical files                   */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0265 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 9 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0265) PARM(&BRGLIB &RETURN)
/* If the program ended with error then take appropriate action. */
                IF      COND(&RETURN *EQ 'C') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
                CHGDTAARA  DTAARA(UPSTAT (9 1)) VALUE('Y')
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0272 - Upgrade data queues                                  */
/*                                                                 */
/*******************************************************************/
 
/* If UPC0272 has already successfully run then it will not be run */
/* again.                                                          */
             IF         COND(%SST(&UPSTAT 1 1) *NE 'Y') THEN(DO)
                CALL       PGM(UPC0272) PARM(&LIBNAME &LIBMOV &SBSID +
                             &OWNER &AUTL &RETURN)
/* If the program ended abnormally then display general message. */
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                             MSGDTA('UPC0272') MSG(&MESSAGE)
                   CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                   CALL       PGM(SCC0010) PARM('UPC0272' 'JOBLOG' 'Y')
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
/* If the program encountered errors then display specific messages. */
                CHGVAR     VAR(&UPSTATPOS) VALUE(1)
                CALL       PGM(UPC0015) PARM('UPDLVCLL' 'UPC0272' +
                             &UPSTATPOS &RETURN)
                IF         COND(&RETURN *NE ' ') THEN(DO)
                   GOTO       CMDLBL(ENDPGM)
                ENDDO
             ENDDO
 
/*******************************************************************/
/*                                                                 */
/*  UPC0275 - Upgrade data areas                                   */
/*                                                                 */
/*******************************************************************/
 
             CALL       PGM(UPC0275) PARM(&LIBNAME &LIBMOV &SBSID +
                          &OWNER &AUTL &RETURN)
/* If the program ended abnormally then display general message. */
             IF         COND(&RETURN *NE ' ') THEN(DO)
                RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('UPC0275') MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('UPC0275' 'JOBLOG' 'Y')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
/* If the program encountered errors then display specific messages. */
             CHGVAR     VAR(&UPSTATPOS) VALUE(0)
             CALL       PGM(UPC0015) PARM('UPDLVCL6' 'UPC0275' +
                          &UPSTATPOS &RETURN)
             IF         COND(&RETURN *NE ' ') THEN(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
             CHGDTAARA  DTAARA(UPSTAT (1 14)) VALUE(' ')
 
             GOTO       CMDLBL(ENDPGM)
ERROR:
/* Set up messages for Midas Information Screen  */
             RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('SMC000028') MSG(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE('Check +
                          joblog for details')
             MONMSG     MSGID(CPF0000)
             CALL       PGM(SCC0010) PARM('SMC000028' 'JOBLOG' 'Y')
             MONMSG     MSGID(CPF0000)
 
ENDPGM:
             ENDPGM
