/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Process CAR migration for zone')             */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000065 - Process CAR migration for zone                  */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2009           */
/*                                                                   */
/*       Last Amend No. CER059             Date 19Jul10              */
/*       Prev Amend No. BUG27785           Date 09Jul10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/*                      BG26993            Date 26Jan10              */
/*                      CSM011  *CREATE    Date 05May09              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CER059 - German Feature Upgrade to Delhi                    */
/*       BUG27785 -  Remove copy of SDBANKPD.                        */
/*       BG26993 - Delivery of upgrade programs to core.             */
/*               - Copy system SDBANKPD to version in Bridge library.*/
/*       CSM011  - New utility to process CAR migration              */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFXSVAL &PFXSVALO &PSMUFET)
 
             DCL        VAR(&PFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&PFXSVALO) TYPE(*CHAR) LEN(20)
             DCL        VAR(&PSMUFET ) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&ZSBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ZSBSIDO) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BLANKSVAL) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&ERRORMSG) TYPE(*CHAR) LEN(100) VALUE(' ')
             DCL        VAR(&DMLIBF)  TYPE(*CHAR) LEN(10)
/**********  DCL        VAR(&DMLIBT)  TYPE(*CHAR) LEN(10)                 */ /* 26993*/ /*BUG27785*/
 
             DCLF       FILE(UPSVALJ0) OPNID(A)
             DCLF       FILE(SMCARZPD) OPNID(B)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                            2009')
 
 /* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                            CMDLBL(ERROR))
 
             CHGJOB     SWS(XXXXXX00)
 
/* Create data area /MIDASMSG in QTEMP */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                            VALUE(' ')
 
VALIDATE:
             RCVF       OPNID(A)
             MONMSG     MSGID(CPF0864) EXEC(DO)
               GOTO       CMDLBL(CHECK)
             ENDDO
 
             IF         COND(&A_GISVAL *EQ &PFXSVAL) THEN(DO)
                  IF         COND(&A_GIVAL *EQ ' ') THEN(DO)
                     CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                  ENDDO
                 ELSE       CMD(DO)
                    CHGVAR     VAR(&ZSBSID) VALUE(&A_GIVAL)
                 ENDDO
             ENDDO
 
             IF         COND(&A_GISVAL *EQ &PFXSVALO) THEN(DO)
                  IF         COND(&A_GIVAL *EQ ' ') THEN(DO)
                     CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                  ENDDO
                 ELSE       CMD(DO)
                    CHGVAR     VAR(&ZSBSIDO) VALUE(&A_GIVAL)
                 ENDDO
             ENDDO
 
             GOTO       CMDLBL(VALIDATE)
 
 CHECK:
             IF         COND(&BLANKSVAL *EQ 'Y') THEN(DO)
                 RTVMSG     MSGID(UPM0003) MSGF(UTMSGF) MSG(&MESSAGE)
                 CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                 RTVMSG     MSGID(UPM0004) MSGF(UTMSGF) MSG(&MESSAGE)
                 CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                 CALL       PGM(SCC0010) PARM('SMC000065' 'ENTER' ' ')
                 GOTO       CMDLBL(ENDPGM)
             ENDDO
 
             CALL       PGM(UPC0014) PARM(&ZSBSID)
 
             CHGVAR     VAR(&DMLIBF) VALUE(&ZSBSIDO *CAT 'DMLIB')
/**********  CHGVAR     VAR(&DMLIBT) VALUE(&ZSBSID *CAT 'DMLIB')          */ /* 26993*/ /*BUG27785*/
 
/**Copy*SDBANKPD*from*'to'*system*to*the*Bridge*library*so*that*migration**/ /* 26993*/ /*BUG27785*/
/***uses*correct*data.*****************************************************/ /* 26993*/ /*BUG27785*/
/**********  CPYF       FROMFILE(&DMLIBT/SDBANKPD) TOFILE(SDBANKPD) +                */ /*BUG27785*/
/**********               MBROPT(*REPLACE) FMTOPT(*MAP *DROP)             */ /* 26993*/ /*BUG27785*/
 
/* Create temporary file to hold error messages for report. */
             DLTF       FILE(QTEMP/UPERRMQT)
             MONMSG     MSGID(CPF2105)
             CRTPF      FILE(QTEMP/UPERRMQT) RCDLEN(100) +
                          TEXT('Temporary file for holding error +
                          messages')
 READNEXT:
             RCVF       OPNID(B)
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
/* If feature is not to be processed then read next record. */
             IF         COND(&B_SMUFET *NE &PSMUFET) THEN(DO)
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
/* Call program if required. */
             IF         COND(&B_SMACTN *EQ 'P') THEN(DO)
                IF         COND(&B_SMMPGM *EQ '*STANDARD') THEN(DO)
                   CALL       PGM(SMUC00000) PARM(&DMLIBF &B_SMFRFL +
                                &B_SMTOFL &B_SMTEMP &B_SM2PGM &B_SMCLRF)
                   IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                      GOTO       CMDLBL(WRITEERROR)
                   ENDDO
                ENDDO
                ELSE       CMD(DO)
                   CALL       PGM(&B_SMMPGM) PARM(&DMLIBF)
                   IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                      GOTO       CMDLBL(WRITEERROR)
                   ENDDO
                ENDDO
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
/* Perform copy if required. */
             IF         COND(&B_SMACTN *EQ 'C') THEN(DO)
                CPYF       FROMFILE(&DMLIBF/&B_SMFRFL) +
                             TOFILE(&B_SMTOFL) MBROPT(*REPLACE) +
                             FMTOPT(*MAP *DROP)
 
/* If from-file or to-file is locked, or to-file is in use. */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
                   GOTO       CMDLBL(WRITEERROR)
                ENDDO
/* If from-file has no members or its only member is empty, or from-file */
/*  is not found.                                                        */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2802) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2861) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If different FMTOPT required. */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2963) EXEC(DO)
                   GOTO       CMDLBL(WRITEERROR)
                ENDDO
                GOTO CMDLBL(READNEXT)
             ENDDO
 
 WRITEERROR:
             CHGVAR     VAR(&ERRORMSG) VALUE('File' *BCAT &B_SMTOFL +
                          *BCAT 'was not migrated to.')
             CALL       PGM(UP008010) PARM('*WRITE ' 'SMC000065 ' +
                          &ERRORMSG)
             GOTO       CMDLBL(READNEXT)
 
             GOTO       CMDLBL(ENDPGM)
 ERROR:
 /* Set up messages for Midas Information Screen. */
              RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                           MSGDTA('SMC000065') MSG(&MESSAGE)
              MONMSG     MSGID(CPF0000)
              CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
              MONMSG     MSGID(CPF0000)
              CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE('Check +
                           joblog for details')
              MONMSG     MSGID(CPF0000)
              CALL       PGM(SCC0010) PARM('SMC000065' 'JOBLOG' 'Y')
              MONMSG     MSGID(CPF0000)
 
 ENDPGM:
             IF         COND(&ERRORMSG *NE ' ') THEN(DO)
                CALL       PGM(UP008010) PARM('*REPORT' 'SMC000065 ' ' ')
                MONMSG     MSGID(CPF0000)
             ENDDO
 
             ENDPGM
