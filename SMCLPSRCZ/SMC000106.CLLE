/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Set up initial Portfolio Management')        */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000106 - Set up initial Portfolio Management             */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2010           */
/*                                                                   */
/*       Last Amend No. CUP004  *CREATE    Date 07Oct10              */
/*       Prev Amend No. xxxxxx             Date ddMmmyy              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CUP004 - New utility to replace SCBEGIN.                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFX &ERRPGM)
 
             DCL        VAR(&PFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ERRPGM) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&DTALIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&USER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DEPTCODE) TYPE(*CHAR) LEN(3)
             DCL        VAR(&SQLSTR) TYPE(*CHAR) LEN(80)
             DCL        VAR(&QUOTE) TYPE(*CHAR) LEN(1) VALUE('''')
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(7) VALUE(' ')
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE('N')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2010')
 
/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
/* Check if Portfolio Management is switched on - file SDMMODPD. */
             CALL       PGM(AOMMODR0) PARM(&RTNCODE '*FIRST' &FMT)
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('AOMMODR0')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
             IF         COND(%SST(&FMT 65 1) *NE 'Y') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('*NOT ON')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
             CHGVAR     VAR(&DTALIB) VALUE(&PFX *TCAT 'DTALIB')
             CHGVAR     VAR(&USER) VALUE(&PFX *TCAT 'USER')
 
/* Clear relevant files. */
             CLRPFM     FILE(PMBIPNPA)
             CLRPFM     FILE(PMCGCDPA)
             CLRPFM     FILE(PMDCOMPA)
             CLRPFM     FILE(PMDOCCPA)
             CLRPFM     FILE(PMDSPGPA)
             CLRPFM     FILE(PMPGHCPA)
             CLRPFM     FILE(PMPGHDPA)
             CLRPFM     FILE(PMPGHIPA)
             CLRPFM     FILE(PMPGHRPA)
             CLRPFM     FILE(PMPORTPA)
             CLRPFM     FILE(PMPTFTPA)
             CLRPFM     FILE(PMTRSFPA)
             CLRPFM     FILE(PMVLGHPA)
             CLRPFM     FILE(PMCPOSPA)
             CLRPFM     FILE(PMCNSDPA)
             CLRPFM     FILE(PMPCBCPA)
             CLRPFM     FILE(SDPLINPA)
 
/* Update data area PMSTAT. */
             CHGDTAARA  DTAARA(PMSTAT (1 27)) +
                          VALUE('000000000000000OLDNNN900000')
 
/* Remove records from SCSARDPD. */
             CHGVAR     VAR(&SQLSTR) VALUE('delete from SCSARDPD +
                          where SARN =' *BCAT &QUOTE *TCAT 'CPM005' +
                          *TCAT &QUOTE *TCAT ';')
             CALL       PGM(UTWRTSQL) PARM(&SQLSTR '*CLEAR')
             CHGVAR     VAR(&SQLSTR) VALUE('delete from SCSARDPD +
                          where SARN =' *BCAT &QUOTE *TCAT 'CSD001' +
                          *TCAT &QUOTE)
             CALL       PGM(UTWRTSQL) PARM(&SQLSTR '*WRITE')
             OVRDBF     FILE(SCSARDPD) TOFILE(&DTALIB/SCSARDPD)
             RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                          COMMIT(*NONE)
             MONMSG     MSGID(SQL9010)
             DLTOVR     FILE(SCSARDPD)
 
/* Initialise headers / trailers and SARD. */
             CALL       PGM(PM0000)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('PM0000')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Call maintenance of SDDEPTPD. */
             CALL       PGM(SD0120M) PARM(&RTNCODE)
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('SD0120M')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Retrieve department code (*FIRST). */
             CALL       PGM(AODEPTR0) PARM(&RTNCODE '*FIRST' ' ' &FMT)
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('AODEPTR0')
                GOTO       CMDLBL(ERROR)
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&DEPTCODE) VALUE(%SST(&FMT 1 3))
             ENDDO
 
/* Update user (zzUSER) with department code. */
             CHGVAR     VAR(&SQLSTR) VALUE('update MUSERDD set DPPT +
                          =' *BCAT &QUOTE *TCAT &DEPTCODE *TCAT +
                          &QUOTE *BCAT 'where USRP =' *BCAT &QUOTE +
                          *TCAT &USER *TCAT &QUOTE)
             CALL       PGM(UTWRTSQL) PARM(&SQLSTR '*CLEAR')
             RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                          COMMIT(*NONE)
             MONMSG     MSGID(SQL9010)
 
             GOTO       CMDLBL(ENDPGM)
 
ERROR:
             IF         COND(&RECURSIVE *NE 'Y') THEN(DO)
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')
                IF         COND(&ERRPGM *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('SMC000106')
                ENDDO
             ENDDO
 
ENDPGM:
             ENDPGM
