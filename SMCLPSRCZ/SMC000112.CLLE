/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Set up initial Dealing')                     */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC000112 - Set up initial Dealing                          */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2010           */
/*                                                                   */
/*       Last Amend No. CUP004  *CREATE    Date 04Oct10              */
/*       Prev Amend No. xxxxxx             Date ddMmmyy              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CUP004 - New utility to replace SCBEGIN.                    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFX &ERRPGM)
 
             DCL        VAR(&PFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&ERRPGM) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&DLSTAT) TYPE(*CHAR) LEN(256)
             DCL        VAR(&DL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&FMT) TYPE(*CHAR) LEN(200)
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(7) VALUE(' ')
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE('N')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2010')
 
/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
/* Check if Dealing is switched on - data area MMOD and file SDMMODPD. */
             RTVDTAARA  DTAARA(MMOD (2 1)) RTNVAR(&DL)
             CALL       PGM(AOMMODR0) PARM(&RTNCODE '*FIRST' &FMT)
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('AOMMODR0')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
             IF         COND(&DL *NE 'Y' *OR %SST(&FMT 23 1) *NE +
                          'Y') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('*NOT ON')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
 
/* Clear files. */
             CLRPFM     FILE(BROKRBN)
             CLRPFM     FILE(DEALSDA)
             CLRPFM     FILE(DEALSDF)
             CLRPFM     FILE(DEAMSDH)
             CLRPFM     FILE(DEAMSDJ)
             CLRPFM     FILE(FDDLNMPP)
             CLRPFM     FILE(FDDAYSPP)
             CLRPFM     FILE(FDMNTHPP)
             CLRPFM     FILE(FWDRTFD)
             CLRPFM     FILE(CANDLNPP)
             CLRPFM     FILE(FXCDAFPP)
             CLRPFM     FILE(FXMCOMPP)
             CLRPFM     FILE(FXREVCPP)
             CLRPFM     FILE(MMCDAFPP)
             CLRPFM     FILE(MMMCOMPP)
             CLRPFM     FILE(MMREVCPP)
             CLRPFM     FILE(DTRIXDD)
             CLRPFM     FILE(DTRIXHH)
 
/*  Initialise data areas. */
             CHGDTAARA  DTAARA(CASTATAA (1 5)) VALUE('00500')
             CHGDTAARA  DTAARA(DLMMDF (1 16)) VALUE('0000000000000000')
 
/* Update headers and trailers. */
             CALL       PGM(DL0005)
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('DL0005')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(%SWITCH(1XXXXXXX)) THEN(DO)
                CHGDTAARA  DTAARA(DLSTAT) VALUE('99999NN      NNNOLD +
                             YNNN')
             ENDDO
             ELSE       CMD(DO)
                CHGDTAARA  DTAARA(DLSTAT) VALUE('99999NN      NNNOLD +
                             NNNN')
             ENDDO
             CHGDTAARA  DTAARA(DLSTAT (256 1)) VALUE('N')
             RTVDTAARA  DTAARA(DLSTAT) RTNVAR(&DLSTAT)
             CHGDTAARA  DTAARA(DLTEMP) VALUE(&DLSTAT)
 
/* Update DTRIX header. */
             CALL       PGM(DL0020)
 
             GOTO       CMDLBL(ENDPGM)
 
ERROR:
             IF         COND(&RECURSIVE *NE 'Y') THEN(DO)
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')
                IF         COND(&ERRPGM *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('SMC000112')
                ENDDO
             ENDDO
 
ENDPGM:
             ENDPGM
