/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Shell for calling upgrade programs')         */
/*********************************************************************/
/*                                                                   */
/*       Midas - Implementation module                               */
/*                                                                   */
/*       SMC002100 - Shell for calling upgrade programs MidasPlus    */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2007           */
/*                                                                   */
/*       Last Amend No. MD060877           Date 01Jan23              */
/*       Prev Amend No. MD059710           Date 16Mar22              */
/*                      MD059085           Date 08Nov21              */
/*                      MD056350           Date 31Jul20              */
/*                      MD056103           Date 21Jun20              */
/*                      CUP042 *REDUNDANT  Date 21Apr15              */
/*                      CUP023  *REWRITE   Date 22Mar11              */
/*                      CUP007             Date 10Nov10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/*                      BUG27240           Date 12Mar10              */
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*                      CUP037  *CREATE    Date 11May07              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD060877 - Deliverable Data Split for SMRLSLPD and SMBFPRTD */
/*       MD059710 - New view as SMDLVCL8 does not exist anymore      */
/*       MD059085 - Rename field AUPROJ to 'Old System Release'      */
/*       MD056350 - Ignore logically deleted records.                */
/*       MD056103 - Missing program for CUP042. Reinstate program    */
/*                  and change it so SMUPG*TD are used instead.      */
/*       CUP042 - Changes for Bridge deliverable data split          */
/*       CUP023 - Conversion of SMDLVCPD into single member file.    */
/*       CUP007 -  Associate release level with upgrade programs.    */
/*       BUG27240- Applied CPK029 file locking fix                   */
/*       CPK029 - Stop lock on file.                                 */
/*       CUP037 - Additional upgrade paths for MidasPlus.            */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PFXSVAL &ORLVLSVAL)

             DCL        VAR(&PFXSVAL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&ORLVLSVAL) TYPE(*CHAR) LEN(20)

             DCL        VAR(&SBSID) TYPE(*CHAR) LEN(2)
             DCL        VAR(&OLDRLVL) TYPE(*CHAR) LEN(22)
             DCL        VAR(&PROD) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRLS) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BLANKSVAL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(200)
             DCL        VAR(&CMDLEN) TYPE(*DEC) LEN(15 5) VALUE(200)
             DCL        VAR(&STM_STR) TYPE(*CHAR) LEN(80)
             DCL        VAR(&QUOTE) TYPE(*CHAR) LEN(1) VALUE('''')
             DCL        VAR(&USTS) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&REPLY) TYPE(*CHAR) LEN(1)
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)

/**********  DCLF       FILE(UPSVALJ0) OPNID(A) */                                      /*MD056103*/
             DCLF       FILE(UPSVALJ0) OPNID(A) ALWNULL(*YES)                           /*MD056103*/
/**********  DCLF       FILE(SMRLSLPD) OPNID(B) */                                      /*MD060877*/
             DCLF       FILE(SMRLSJW0) OPNID(B)                                         /*MD060877*/
/**********  DCLF       FILE(SMDLVCL8) OPNID(C) */                                      /*MD056103*/
             DCLF       FILE(SMUPGJW0) OPNID(C)                                         /*MD056103*/

             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2007')

/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))

             CHGJOB     LOG(4 0 *SECLVL) LOGCLPGM(*YES)
             CHGJOB     SWS(XXXXXX00)

/* Create and rename temporary source file for RUNSQLSTM. */
             DLTF       FILE(QTEMP/RUNSQLSTM)
             MONMSG     MSGID(CPF0000)
             DLTF       FILE(QTEMP/RUNSQL)
             MONMSG     MSGID(CPF0000)
             CRTSRCPF   FILE(QTEMP/RUNSQLSTM) RCDLEN(112) +
                          MBR(RUNSQLSTM) TEXT('Temporary source +
                          file for SMC002100')
             RNMOBJ     OBJ(QTEMP/RUNSQLSTM) OBJTYPE(*FILE) +
                          NEWOBJ(RUNSQL)

/* Create data area MIDASMSG in QTEMP for error handling. */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                          VALUE(' ')

VALIDATE:
             RCVF       OPNID(A)
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(CHECK)
             ENDDO

             IF         COND(&A_GISVAL *EQ &PFXSVAL) THEN(DO)
                IF         COND(&A_GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&SBSID) VALUE(&A_GIVAL)
                ENDDO
             ENDDO

             IF         COND(&A_GISVAL *EQ &ORLVLSVAL) THEN(DO)
                IF         COND(&A_GIVAL *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&BLANKSVAL) VALUE('Y')
                ENDDO
                ELSE       CMD(DO)
                   CHGVAR     VAR(&OLDRLVL) VALUE(&A_GIVAL)
                ENDDO
             ENDDO

             GOTO       CMDLBL(VALIDATE)

 CHECK:
             IF         COND(&BLANKSVAL *EQ 'Y') THEN(DO)
/* Set up messages for Midas Information Screen  */
                RTVMSG     MSGID(UPM0003) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
                RTVMSG     MSGID(UPM0004) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('SMC002100' 'ENTER' ' ')
                GOTO       CMDLBL(ENDPGM)
             ENDDO

             CALL       PGM(UPC0014) PARM(&SBSID)

/* Break down 'from' release level. */
             CHGVAR     VAR(&PROD) VALUE(%SST(&OLDRLVL 1 10))
             CHGVAR     VAR(&RLS) VALUE(%SST(&OLDRLVL 11 10))
             CHGVAR     VAR(&SRLS) VALUE(%SST(&OLDRLVL 21 2))

RELEASELVL:
             RCVF       OPNID(B)
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(CALL)
             ENDDO

             IF         COND(&B_RLPROD *EQ &PROD *AND &B_RLRLS *EQ +
                          &RLS *AND &B_RLSRLS *EQ &SRLS) THEN(DO)
/* Set all statuses to 'C' apart from the release level that is required. */
/**********     CHGVAR     VAR(&STM_STR) VALUE('update SMDLVCPD set +
                             AUUSTS =' *BCAT &QUOTE *TCAT 'C' *TCAT +
                             &QUOTE *BCAT 'where AUPROJ <>' *BCAT +
                             &QUOTE *TCAT &B_RLUPMB *TCAT &QUOTE) */                    /*MD056103*/
                CHGVAR     VAR(&STM_STR) VALUE('update SMUPGXTD set +
                             AUUSTS =' *BCAT &QUOTE *TCAT 'C' *TCAT +
                             &QUOTE *BCAT 'where AUPROJ <>' *BCAT +
                             &QUOTE *TCAT &B_RLUPMB *TCAT &QUOTE)                       /*MD056103*/
                CALL       PGM(UTWRTSQL) PARM(&STM_STR '*CLEAR')
                RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                             COMMIT(*NONE)
                MONMSG     MSGID(SQL9010)
             ENDDO

             GOTO       CMDLBL(RELEASELVL)

CALL:
             RCVF       OPNID(C)
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(ERRORCHK)
             ENDDO
             IF         COND(&C_AUUSTS *NE ' ') THEN(DO)                                /*MD056103*/
             GOTO       CMDLBL(CALL)                                                    /*MD056103*/
             ENDDO                                                                      /*MD056103*/
                                                                                        /*MD056103*/
             IF         COND(&C_AUDEL *EQ 'Y') THEN(DO)                                 /*MD056350*/
             GOTO       CMDLBL(CALL)                                                    /*MD056350*/
             ENDDO                                                                      /*MD056350*/
                                                                                        /*MD056350*/
             IF         COND(&C_AUFMTO *NE '*AFTER' *OR &C_AULAYR *NE +
                          '*ZONE') THEN(DO)                                             /*MD056103*/
             GOTO       CMDLBL(CALL)                                                    /*MD056103*/
             ENDDO                                                                      /*MD056103*/
                                                                                        /*MD056103*/
             CHGJOB     SWS(XXXXXX00)
             CHGVAR     VAR(&CMD) VALUE(' ')
             CHGVAR     VAR(&CMD) VALUE('CALL PGM(' *TCAT &C_AUMBNM +
                          *TCAT ')')
             IF         COND(&C_AUEXIN *NE ' ') THEN(DO)
                CHGVAR     VAR(&CMD) VALUE(&CMD *BCAT 'PARM(' *TCAT +
                             &C_AUEXIN *TCAT ')')
             ENDDO
             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)
             MONMSG     MSGID(CPF0001 CPF0006) EXEC(DO)
                CHGVAR     VAR(&USTS) VALUE('F')
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(UPDATE)
             ENDDO
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                CHGVAR     VAR(&USTS) VALUE('F')
                CHGVAR     VAR(&ERROR) VALUE('Y')
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&USTS) VALUE('C')
             ENDDO
/* Update logical with status. */
UPDATE:
/**********  CALL       PGM(SM000028) PARM(&C_AUPROJ &C_AUMBNM +
                          &C_AUMBTP &USTS) */                                           /*MD056103*/
                                                                                        /*MD056103*/
             CHGVAR     VAR(&STM_STR) VALUE(' ')                                        /*MD056103*/
             CHGVAR     VAR(&STM_STR) VALUE('update SMUPGXTD set  +
                            AUUSTS = ' *BCAT &QUOTE *TCAT &USTS +
                           *TCAT &QUOTE *BCAT ' where   +
                           AUMBNM = ')                                                  /*MD056103*/
             CALL       PGM(UTWRTSQL) PARM(&STM_STR '*CLEAR')                           /*MD056103*/
             CHGVAR     VAR(&STM_STR) VALUE(' ')                                        /*MD056103*/
             CHGVAR     VAR(&STM_STR) VALUE(&QUOTE *TCAT &C_AUMBNM +
                           *TCAT &QUOTE *BCAT ' and AUPROJ = ' +
                           *TCAT &QUOTE *TCAT &C_AUPROJ *TCAT &QUOTE)                   /*MD056103*/
             CALL       PGM(UTWRTSQL) PARM(&STM_STR '*WRITE')                           /*MD056103*/
             RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                          COMMIT(*NONE)                                                 /*MD056103*/
             MONMSG     MSGID(SQL9010)                                                  /*MD056103*/

             GOTO       CMDLBL(CALL)

ERRORCHK:
             IF         COND(&ERROR *EQ 'Y') THEN(DO)
                RTVMSG     MSGID(UPM0002) MSGF(UTMSGF) +
                             MSGDTA('SMC002100') MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
/**********     RTVMSG     MSGID(UPM0005) MSGF(UTMSGF) +
                             MSGDTA('SMDLVCL8') MSG(&MESSAGE) */                        /*MD059710*/
                RTVMSG     MSGID(UPM0005) MSGF(UTMSGF) +
                             MSGDTA('SMUPGJW1') MSG(&MESSAGE)                           /*MD059710*/
                CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE(&MESSAGE)
/**********     RTVMSG     MSGID(UPM0023) MSGF(UTMSGF) +
                             MSGDTA('SMDLVCL8') MSG(&MESSAGE) */                        /*MD059710*/
                RTVMSG     MSGID(UPM0023) MSGF(UTMSGF) +
                             MSGDTA('SMUPGJW1') MSG(&MESSAGE)                           /*MD059710*/
                CHGDTAARA  DTAARA(MIDASMSG (301 50)) VALUE(&MESSAGE)
                RTVMSG     MSGID(UPM0024) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA  DTAARA(MIDASMSG (351 50)) VALUE(&MESSAGE)
                CALL       PGM(SCC0010) PARM('SMC002100' 'OPTION' &REPLY)
                IF         COND(&REPLY *EQ 'Y') THEN(DO)
/**********        RUNQRY     QRY(*NONE) QRYFILE((SMDLVCL8)) */                         /*MD059710*/
                   RUNQRY     QRY(*NONE) QRYFILE((SMUPGJW1))                            /*MD059710*/
                   DSPJOBLOG  OUTPUT(*PRINT)
                ENDDO
             ENDDO
             ELSE       CMD(DO)
/* If no errors then set statuses back to blank. */
/**********     CHGVAR     VAR(&STM_STR) VALUE('update SMDLVCPD set +
                             AUUSTS =' *BCAT &QUOTE *BCAT &QUOTE) */                    /*MD056103*/
                CHGVAR     VAR(&STM_STR) VALUE('update SMUPGXTD set +
                             AUUSTS =' *BCAT &QUOTE *BCAT &QUOTE)                       /*MD056103*/
                CALL       PGM(UTWRTSQL) PARM(&STM_STR '*CLEAR')
                RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                             COMMIT(*NONE)
                MONMSG     MSGID(SQL9010)
             ENDDO

             GOTO       CMDLBL(ENDPGM)
 ERROR:
             RTVMSG     MSGID(UPM0001) MSGF(UTMSGF) +
                          MSGDTA('SMC002100') MSG(&MESSAGE)
             MONMSG     MSGID(CPF0000)
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
             MONMSG     MSGID(CPF0000)

             CHGDTAARA  DTAARA(MIDASMSG (201 50)) VALUE('Check +
                          joblog for details')
             MONMSG     MSGID(CPF0000)
             CALL       PGM(SCC0010) PARM('SMC002100' 'JOBLOG' 'Y')
             MONMSG     MSGID(CPF0000)

ENDPGM:
             ENDPGM
