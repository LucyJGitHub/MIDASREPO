/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas SM Introduction of integration layer - zone')   */
/*********************************************************************/
/*                                                                   */
/*       Midas - Bridge                                              */
/*                                                                   */
/*       SMUC00422 - Addition of integration libraries               */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2015           */
/*                                                                   */
/*       Last Amend No. MD-35839A*AMEND    Date 14Sep15              */
/*       Prev Amend No. MD-35427 *CREATE   Date 14Aug15              */
/*                                                                   */
/*********************************************************************/
/*       MD-35839A- Create SAVF for the new DI layer library (GD,DD) */
/*                  and addtl fix for bridge for DI layer            */
/*       MD-35427 - Data Interchange Layer                           */
/*                                                                   */
/*********************************************************************/
             PGM

             DCL        VAR(&ZPFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&GPFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&LAYER) TYPE(*CHAR) LEN(1)
             DCL        VAR(&INLLIBL) TYPE(*CHAR) LEN(2750)
             DCL        VAR(&NEWLIBL) TYPE(*CHAR) LEN(2750)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(3000)
             DCL        VAR(&CMDLEN) TYPE(*DEC) LEN(15 5) VALUE(3000)
             DCL        VAR(&STRPOS) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&LIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ALLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GALLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DDLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GDLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OWNER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&AUTL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&IASPGRP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SVAL1) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK1) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL2) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK2) TYPE(*CHAR) LEN(20)
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&DILIB) TYPE(*CHAR) LEN(10)                               /*MD035839A*/
             DCL        VAR(&DDSAVF) TYPE(*CHAR) LEN(10)                              /*MD035839A*/
             DCL        VAR(&GDSAVF) TYPE(*CHAR) LEN(10)                              /*MD035839A*/


/*           DCLF       FILE(SMSETUPD)                     */                         /*MD035839A*/
             DCLF       FILE(SMSETUL0)                                                /*MD035839A*/

             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2015')

/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))

/* Retrieve global and zone prefixes. */
             CHGVAR     VAR(&SVALK1) VALUE('BrgMidasSystemPrefix')
             CHGVAR     VAR(&SVALK2) VALUE('BrgMidasGlobalPrefix')
             CALL       PGM(AOSVALR0) PARM(&RTNCODE &SVALK1 &SVAL1 +
                          &SVALK2 &SVAL2 ' ' ' ' ' ' ' ' ' ' ' ' ' +
                          ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ')
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&SVAL1 *EQ ' ') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&ZPFX) VALUE(%SST(&SVAL1 1 2))
             ENDDO
             IF         COND(&SVAL2 *EQ ' ') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&GPFX) VALUE(%SST(&SVAL2 1 2))
             ENDDO
/* Retrieve IASP values. */
             CHGVAR     VAR(&SVALK1) VALUE('IASPinstallation')
             CHGVAR     VAR(&SVALK2) VALUE('IASPgroup')
             CALL       PGM(GPAOSVALR0) PARM(&RTNCODE &SVALK1 &SVAL1 +
                          &SVALK2 &SVAL2 ' ' ' ' ' ' ' ' ' ' ' ' ' +
                          ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ')
             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(%SST(&SVAL1 1 1) *EQ 'Y' *AND &SVAL2 = +
                          ' ') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
             ELSE       CMD(DO)
                IF         COND(%SST(&SVAL1 1 1) *EQ 'Y') THEN(DO)
                   CHGVAR     VAR(&IASPGRP) VALUE(%SST(&SVAL2 1 10))
                ENDDO
             ENDDO

/* Set variables for library names. */
             CHGVAR     VAR(&ALLIB) VALUE(&ZPFX *TCAT 'ALLIB')
             CHGVAR     VAR(&GALLIB) VALUE(&GPFX *TCAT 'GALLIB')
             CHGVAR     VAR(&DDLIB) VALUE(&ZPFX *TCAT 'DDLIB')
             CHGVAR     VAR(&GDLIB) VALUE(&GPFX *TCAT 'GDLIB')
             CHGVAR     VAR(&OWNER) VALUE(&ZPFX *TCAT 'OWNER')
             CHGVAR     VAR(&AUTL) VALUE(&GPFX *TCAT 'DATABASE')
             CHGVAR     VAR(&DILIB) VALUE(&ZPFX *TCAT 'DILIB')                        /*MD035839A*/
             CHGVAR     VAR(&GDSAVF) VALUE('DBICGD')                                  /*MD035839A*/
             CHGVAR     VAR(&DDSAVF) VALUE('DBICDD')                                  /*MD035839A*/

/* If the SAVF for GD does not exist yet, create corresponding SAVF */                /*MD035839A*/
             CHKOBJ     OBJ(&DILIB/&GDSAVF) OBJTYPE(*FILE)                            /*MD035839A*/
             MONMSG     MSGID(CPF9801) EXEC(DO)                                       /*MD035839A*/
                CRTSAVF FILE(&DILIB/&GDSAVF) AUT(*EXCLUDE)   +
                   TEXT('Midas I.C.T. zzGDLIB backup')                                /*MD035839A*/
                CHGOBJOWN  OBJ(&DILIB/&GDSAVF) OBJTYPE(*FILE) +
                          NEWOWN(&OWNER)                                              /*MD035839A*/
             ENDDO                                                                    /*MD035839A*/
/* If the SAVF for DD does not exist yet, create corresponding SAVF */                /*MD035839A*/
             CHKOBJ     OBJ(&DILIB/&DDSAVF) OBJTYPE(*FILE)                            /*MD035839A*/
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CRTSAVF FILE(&DILIB/&DDSAVF) AUT(*EXCLUDE)   +
                   TEXT('Midas I.C.T. zzDDLIB backup')                                /*MD035839A*/
                CHGOBJOWN  OBJ(&DILIB/&DDSAVF) OBJTYPE(*FILE) +
                          NEWOWN(&OWNER)                                              /*MD035839A*/
             ENDDO                                                                    /*MD035839A*/
/* If the libraries don't already exist then create them. */
             CHKOBJ     OBJ(&DDLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                IF         COND(&IASPGRP *EQ ' ') THEN(DO)
                   CRTLIB     LIB(&DDLIB) TEXT('Bankfusion Midas Zonal +
                                Data Interchange Layer DB') AUT(*USE)
                ENDDO
                ELSE       CMD(DO)
                   CRTLIB     LIB(&DDLIB) TEXT('Bankfusion Midas Zonal +
                                Data Interchange Layer DB') AUT(*USE) +
                                ASPDEV(&IASPGRP)
                ENDDO
                CHGOBJOWN  OBJ(&DDLIB) OBJTYPE(*LIB) NEWOWN(&OWNER)
                CHGLIB     LIB(&DDLIB) CRTAUT(&AUTL)
             ENDDO

             CHKOBJ     OBJ(&GDLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                IF         COND(&IASPGRP *EQ ' ') THEN(DO)
                   CRTLIB     LIB(&GDLIB) TEXT('Bankfusion Midas Global +
                                Data Interchange Layer DB') AUT(*USE)
                ENDDO
                ELSE       CMD(DO)
                   CRTLIB     LIB(&GDLIB) TEXT('Bankfusion Midas Global +
                                Data Interchange Layer DB') AUT(*USE) +
                                ASPDEV(&IASPGRP)
                ENDDO
                CHGOBJOWN  OBJ(&GDLIB) OBJTYPE(*LIB) NEWOWN(&OWNER)
                CHGLIB     LIB(&GDLIB) CRTAUT(&AUTL)
             ENDDO
/* Read file to obtain the names of job descriptions. */
READNEXT:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(ENDPGM)
             ENDDO
/* Identify if the jobd is global or zone */
             CHGVAR     VAR(&LAYER) VALUE(%SST(&DFLIB 1 1))

             IF         COND(&DFTYPE *NE '*JOBD' *OR &DFSTS *NE +
                          ' ' *OR &LAYER *EQ 'G') THEN(DO)
                GOTO       CMDLBL(READNEXT)
             ENDDO

             CHGVAR     VAR(&NEWLIBL) VALUE(' ')
             CHGVAR     VAR(&CMD) VALUE(' ')
             RTVJOBD    JOBD(&DFNAME) INLLIBL(&INLLIBL)
             CHGJOBD    JOBD(&DFNAME) INLLIBL(*NONE)
             CHGVAR     VAR(&STRPOS) VALUE(1)
LOOP:
             CHGVAR     VAR(&LIB) VALUE(%SST(&INLLIBL &STRPOS 10))
/* Ignore libraries if they are already there. */
/*           IF         COND(&LIB *EQ &DDLIB) THEN(DO)      */                        /*MD035839A*/
             IF         COND(&LIB *EQ &DDLIB *OR &LIB *EQ &GDLIB) THEN(DO)            /*MD035839A*/
                CHGVAR     VAR(&STRPOS) VALUE(&STRPOS + 11)
                GOTO       CMDLBL(LOOP)
             ENDDO

             IF         COND(&LIB *EQ ' ') THEN(DO)
                GOTO       CMDLBL(CHANGE)
             ENDDO

             IF         COND(&LIB *EQ &ALLIB) THEN(DO)
                CHGVAR     VAR(&STRPOS) VALUE(&STRPOS + 11)
                CHGVAR     VAR(&NEWLIBL) VALUE(&NEWLIBL *BCAT &LIB +
                        *BCAT &DDLIB)
                GOTO       CMDLBL(LOOP)
             ENDDO
             IF         COND(&LIB *EQ &GALLIB) THEN(DO)
                CHGVAR     VAR(&STRPOS) VALUE(&STRPOS + 11)
                CHGVAR     VAR(&NEWLIBL) VALUE(&NEWLIBL *BCAT &LIB +
                             *BCAT &GDLIB)
                GOTO       CMDLBL(LOOP)
             ENDDO

             CHGVAR     VAR(&NEWLIBL) VALUE(&NEWLIBL *BCAT &LIB)
             CHGVAR     VAR(&STRPOS) VALUE(&STRPOS + 11)
             IF         COND(&STRPOS *LT 2750) THEN(DO)
                GOTO       CMDLBL(LOOP)
             ENDDO

CHANGE:
             CHGVAR     VAR(&CMD) VALUE('CHGJOBD JOBD(' *TCAT +
                          &DFNAME *TCAT ') INLLIBL(' *TCAT &NEWLIBL +
                          *TCAT ')')
             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)
             GOTO       CMDLBL(READNEXT)

             GOTO       CMDLBL(ENDPGM)

ERROR:
             CHGJOB     SWS(XXXXXX11)

ENDPGM:
             ENDPGM
