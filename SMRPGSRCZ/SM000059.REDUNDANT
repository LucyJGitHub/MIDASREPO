     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2009')
      *****************************************************************
/*S*D****RPGBASEBND****************************************************                     AR690511
      *****************************************************************
      *                                                               *
      *  Midas - Implementation Module                                *
      *                                                               *
      *  SM000059 - Midas SM Update MX Files for Bundesbank           *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2009            *
      *                                                               *
      *  Last Amend No. AR690511*REDUNDANT Date 31Jan11               *
      *  Prev Amend No. CER059             Date 19Jul10               *
      *                 BUG26748           Date 26Nov09               *
      *                 CER045  *CREATE    Date 20Jul09               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  AR690511 - Rename from SM000059 to ER000059                  *
      *             (Child: AR690512)                                 *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  BUG26748 - Issue on Flat File Output Splitting               *
      *  CER045 - German Features - Reporting Bundesbank              *
      *                                                               *
      *****************************************************************
 
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
 
      ** MX Export Format Details file
 
     FMXEXFDPD  UF   E             DISK    INFSR(*PSSR)
 
      ** MX Composite Message Details file
 
     FMXCOMDPD  UF   E             DISK    INFSR(*PSSR)
 
      ** SM Update MX files for Bundesbank screen
 
     FSM000059DFCF   E             WORKSTN INFSR(*PSSR)
 
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
 
      ** For case translation
 
     D UpCase          C                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D LoCase          C                   'abcdefghijklmnopqrstuvwxyz'
 
      ** +--------------------------------------+
      ** ¦ D-specs: Arrays and Data Structures  ¦
      ** ¦ =======  ==========================  ¦
      ** +--------------------------------------+
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes (among others) the LDA layout
      ** and the copyright array definition:
     D/COPY ZACPYSRC,STD_D_SPEC
      **--------------------------------------------------------------------------------------------
 
      **--------------------------------------------------------------------------------------------
      ** The following /COPY line includes all the defined fields in the
      ** Program Status Data Structures.  They have meaningful
      ** names, prefixed by 'PS'.
     D/COPY ZACPYSRC,PSDS
      **--------------------------------------------------------------------------------------------
 
      ** Declare MQI structures needed
      ** MQI Constants
 
     D/COPY QMQM/QRPGLESRC,CMQR
 
      ** Object Descriptor
 
     D MQOD            DS
     D/COPY QMQM/QRPGLESRC,CMQODR
 
      ** +--------------------------------------+
      ** ¦ Declared Variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
 
      ** External DS for Bank details
 
     D SDBANK        E DS                  EXTNAME(SDBANKPD)
 
      ** First DS for acces programs - short data structure
 
     D DSFDY         E DS                  EXTNAME(DSFDY)
 
     D ZADATE          S              7A
     D ZDATE           S              6A
     D ZDATEN          S              6S 0
     D ZDATEP          S              6  0
     D ZDATFM          S              1A
     D ZDAYNO          S              5  0
     D ZRETURN         S              7A
     D ZFIELD          S             16A
     D ZADEC           S              1S 0
     D ZADIG           S              2S 0
     D ZAFLD           S             16A
 
     D ZAPGM           S             10A
     D ZAPGRL          S              5A
     D ZAMSID          S             10A
     D ZAMSGF          S             10A   INZ('UTMSGF')
     D ZAMSDA          S            132A
     D ZAMSTP          S              7A
 
     D MQUEUE          S             48A
     D CID             S              9P 0
     D HCONN           S              9P 0
     D OPTS            S              9P 0
     D HOBJ            S              9P 0
     D OCODE           S              9P 0
     D REASON          S              9P 0
 
     D WEMSGQ          S                   LIKE(EXMSGQ)
     D WCMSGQ          S                   LIKE(CDMSGQ)
     D WEEXND          S                   LIKE(EXEXND)
     D WCEXND          S                   LIKE(CDEXND)
 
     D PRtcd           S              7A
     D POptn           S              7A
     D ErrorFlag       S              1A
     D Rundate         S              6S 0
     D WConfirm        S              1A   INZ('N')
     D WQueueOk        S              1A   INZ('N')
     D WDateOk         S              1A   INZ('N')
 
      ** +--------------------------------------+
      ** ¦ End of D-specs                       ¦
      ** ¦ ==============                       ¦
      ** +--------------------------------------+
 
      *****************************************************************
      /EJECT
      *****************************************************************
 
     C                   EXSR      SRInit
 
     C                   DOW       WConfirm = 'N'
     C                   DOW       *IN03 <> *ON  AND
     C                             (WQueueOk = 'N' OR
     C                              WDateOk = 'N')
 
      **  Display the screen
 
     C                   EXSR      SRDspSCRN
 
     C                   ENDDO
 
     C                   IF        *IN12 = *ON
     C                   EVAL      WConfirm = 'N'
     C                   EVAL      WQueueOk = 'N'
     C                   EVAL      WDateOk  = 'N'
     C                   EVAL      *IN28 = *OFF
     C                   ELSE
     C                   EVAL      WConfirm = 'Y'
     C                   ENDIF
 
     C                   ENDDO
 
      **  Update the MX Files
 
     C                   EXSR      SRUpdEXF
     C                   EXSR      SRUpdCOM
      *
     C                   EVAL      *INLR = *ON
     C                   RETURN
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRDspSCRN - Display the Main Screen                          *
      *                                                               *
      *****************************************************************
     C     SRDspSCRN     BEGSR
 
     C                   IF        *IN05 = *ON
     C                   EXSR      SRReset
     C                   ENDIF
 
     C                   IF        SEXND = *BLANKS
     C                   MOVE      Rundate       SEXND
     C                   ENDIF
 
     C                   EVAL      *IN90 = *OFF
 
     C                   WRITE     SM59MSGCTL
     C                   WRITE     SM59FOOT
     C                   EXFMT     SM59DETL
     C                   EXSR      SRClrMSG
 
      ** Not refresh or exit command, process input
 
     C                   IF        *IN03 <> *ON AND
     C                             *IN05 <> *ON
 
      **  Validate the fields
 
     C                   EXSR      SRValMSGQ
     C                   EXSR      SRValEXND
 
     C                   IF        WQueueOk = 'Y' AND
     C                             WDateOk = 'Y'
 
     C                   EVAL      *IN28 = *ON
     C                   EVAL      *IN90 = *ON
     C                   WRITE     SM59MSGCTL
     C                   WRITE     SM59FOOT
     C                   EXFMT     SM59DETL
     C                   EXSR      SRClrMSG
     C                   ENDIF
 
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRValMSGQ - Validate Message Queue                           *
      *                                                               *
      *****************************************************************
     C     SRValMSGQ     BEGSR
 
     C                   EVAL      *IN23  = *OFF
 
     C                   IF        SMSGQ = *BLANKS
     C                   MOVEL     'LEF0016'     ZAMSID
     C                   EXSR      SRSndMSG
     C                   EVAL      *IN23 = *ON
     C                   EVAL      WQueueOk = 'N'
 
     C                   ELSE
 
     C                   EVAL      MQUEUE = SMSGQ
 
      ** Set up MQSeries data necessary to open a queue
 
     C                   EVAL      OPTS = OOOUT + OOFIQ
     C                   EVAL      CID = MQOPEN
 
      ** ODON is a subfield of the MQOD data structure, which holds the
      ** name of the queue to be opened.  It is declared in the CMQODR
      ** include member.
 
     C     LoCase:UpCase XLATE     MQUEUE        ODON
 
      ** It returns OCODE, a completion code, which tells us whether
      ** or not the call was successful, and REASON, which gives details
      ** if there was a failure.
 
     C                   CALL      'QMQM'
     C                   PARM                    CID
     C                   PARM                    HCONN
     C                   PARM                    MQOD
     C                   PARM                    OPTS
     C                   PARM                    HOBJ
     C                   PARM                    OCODE
     C                   PARM                    REASON
 
      ** CCFAIL is a named constant containing the value for OCODE
      ** indicating a failure to open the queue.
 
     C                   IF        OCODE = CCFAIL
     C                   MOVEL     'LEF0014'     ZAMSID
     C                   EXSR      SRSndMSG
     C                   EVAL      *IN23 = *ON
     C                   EVAL      WQueueOk = 'N'
 
     C                   ELSE
 
      **  Valid, move to file fields
 
     C                   MOVE      ODON          WEMSGQ
     C                   MOVE      ODON          WCMSGQ
     C                   EVAL      WQueueOk = 'Y'
 
     C                   ENDIF
 
      **  Close MQ Queue
 
     C                   EVAL      OPTS = CONONE
     C                   EVAL      CID = MQCLOS
     C                   CALL      'QMQM'
     C                   PARM                    CID
     C                   PARM                    HCONN
     C                   PARM                    HOBJ
     C                   PARM                    OPTS
     C                   PARM      *ZERO         OCODE
     C                   PARM      *ZERO         REASON
     C                   ENDIF
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRValEXND - Validate Next Export Date                        *
      *                                                               *
      *****************************************************************
     C     SRValEXND     BEGSR
 
     C                   EVAL      *IN24  = *OFF
 
     C                   IF        SEXND <> *BLANKS
     C                   MOVEL     *BLANK        ZFIELD
     C                   MOVEL     SEXND         ZFIELD
 
     C                   CALL      'ZALIGN'
     C                   PARM      *BLANKS       ZRETURN
     C                   PARM                    ZFIELD
     C                   PARM      0             ZADEC
     C                   PARM      6             ZADIG
     C                   PARM                    ZAFLD
 
     C                   IF        ZRETURN <> *BLANKS
     C                   MOVEL     'LEF0015'     ZAMSID
     C                   EXSR      SRSndMSG
     C                   EVAL      *IN24 = *ON
     C                   EVAL      WDateOk = 'N'
     C                   ELSE
 
     C                   MOVE(P)   ZAFLD         ZDATEP
 
     C                   CALL      'ZDATE1'
     C                   PARM      *BLANKS       ZRETURN
     C                   PARM                    ZDATEP
     C                   PARM      BJDFIN        ZDATFM
     C                   PARM                    ZDAYNO
 
     C                   IF        ZRETURN <> *BLANKS
     C                   MOVEL     'LEF0015'     ZAMSID
     C                   EXSR      SRSndMSG
     C                   EVAL      *IN24 = *ON
     C                   EVAL      WDateOk = 'N'
     C                   ELSE
     C                   IF        ZDAYNO < BJRDNB
     C                   MOVEL     'LEF0017'     ZAMSID
     C                   EXSR      SRSndMSG
     C                   EVAL      *IN24 = *ON
     C                   EVAL      WDateOk = 'N'
     C                   ELSE
 
      **  Valid, move to file fields
 
     C                   Z-ADD     ZDAYNO        WEEXND
     C                   Z-ADD     ZDAYNO        WCEXND
     C                   EVAL      WDateOk = 'Y'
 
     C                   ENDIF
     C                   ENDIF
 
     C                   ENDIF
 
      **  If left blank, default to Rundate
 
     C                   ELSE
 
     C                   Z-ADD     BJRDNB        WEEXND
     C                   Z-ADD     BJRDNB        WCEXND
     C                   MOVE      Rundate       SEXND
     C                   EVAL      WDateOk = 'Y'
 
     C                   ENDIF
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdEXF - Update Format details                             *
      *                                                               *
      *****************************************************************
     C     SRUpdEXF      BEGSR
 
      **  Read MXEXFDPD file
 
     C                   READ      MXEXFDPD
     C                   DOW       NOT %EOF(MXEXFDPD)
 
      **  If Format Name is one of the following update Message Queue Name:
 
     C     EXFMT         IFEQ      'ERERKNEIPD'
     C     EXFMT         OREQ      'ERSDCUSTPD'
     C     EXFMT         OREQ      'ERSDACUSPD'
     C     EXFMT         OREQ      'ERSDCTRYPD'
     C     EXFMT         OREQ      'ERERWHGIPD'
     C     EXFMT         OREQ      'ERSDCURRPD'
     C     EXFMT         OREQ      'ERERGSTIPD'
     C     EXFMT         OREQ      'ERERGSTSPD'
     C     EXFMT         OREQ      'ERERBILIPD'
     C     EXFMT         OREQ      'ERERKGLIPD'
     C     EXFMT         OREQ      'ERERZUSIPD'
     C     EXFMT         OREQ      'ERFCLTYFM'
     C     EXFMT         OREQ      'ERFCLTYFN'
     C     EXFMT         OREQ      'ERACCNTAB'
     C     EXFMT         OREQ      'ERERDVTIPD'
     C     EXFMT         OREQ      'ERDEALSDB'
     C     EXFMT         OREQ      'ERERDETTPD'
     C     EXFMT         OREQ      'EREOMSPD'                                               BUG26748
 
      **  Update the record
 
     C                   EVAL      EXMSGQ = WEMSGQ
     C                   EVAL      EXEXND = WEEXND
 
     C                   UPDATE    MXEXFDP0
     C                   ENDIF
 
     C                   READ      MXEXFDPD
     C                   ENDDO
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRUpdCOM - Update Composite ID details                       *
      *                                                               *
      *****************************************************************
     C     SRUpdCOM      BEGSR
 
      **  Read MXCOMDPD file
 
     C                   READ      MXCOMDPD
     C                   DOW       NOT %EOF(MXCOMDPD)
 
      **  If Composite ID is one of the following update Message Queue Name:
 
     C     CDCOMI        IFEQ      'ERKNEIFF'
     C     CDCOMI        OREQ      'ERWHGIFF'
     C     CDCOMI        OREQ      'ERZUSIFF'
     C     CDCOMI        OREQ      'ERDVTIFF'
 
      **  Update the record
 
     C                   EVAL      CDMSGQ = WCMSGQ
     C                   EVAL      CDEXND = WCEXND
 
     C                   UPDATE    MXCOMDP0
     C                   ENDIF
 
     C                   READ      MXCOMDPD
     C                   ENDDO
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      * SRReset - Clears Input screen
      *
      *****************************************************************
     C     SRReset       BEGSR
 
      ** Clear Error Indicators
 
     C                   EVAL      *IN03 = *OFF
     C                   EVAL      *IN05 = *OFF
     C                   EVAL      *IN23 = *OFF
     C                   EVAL      *IN24 = *OFF
 
      ** Reset Input Fields
 
     C                   EVAL      SMSGQ = *BLANKS
     C                   MOVE      Rundate       SEXND
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      * SRClrMSG - Routine to clear program's message queue.
      *
      *****************************************************************
     C     SRClrMSG      BEGSR
 
     C                   CALL      'ZA0250'
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      * SRSndMSG - Routine to send messages to message subfile.
      *
      *****************************************************************
     C     SRSndMSG      BEGSR
 
     C                   CALL      'ZA0340'
     C                   PARM                    ZAMSGF
     C                   PARM                    ZAMSID
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  SRInit - Program Initialisation Subroutine                   *
      *                                                               *
      *****************************************************************
     C     SRInit        BEGSR
 
     C     *LOCK         IN        LDA
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   OUT       LDA
 
     C                   EVAL      PGMNAM =  PSProcMod
 
     C                   CALL      'AOBANKR0'
     C                   PARM      *Blanks       PRtcd
     C                   PARM      '*FIRST '     POptn
     C     SDBANK        PARM      SDBANK        DSFDY
 
      ** Database error
 
     C                   IF        PRtcd <> *Blanks
     C     *LOCK         IN        LDA
     C                   EVAL      DBKey = POptn
     C                   EVAL      DBFile = 'SDBANKPD'
     C                   EVAL      DBase = 001
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
 
      ** Convert Rundate to date
 
     C                   CALL      'ZDATE2'
     C                   PARM      BJRDNB        ZDAYNO
     C                   PARM      BJDFIN        ZDATFM
     C                   PARM                    ZDATEP
     C                   PARM      *BLANK        ZADATE
 
     C                   MOVE      ZDATEP        Rundate
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  *PSSR - Program Exception Subroutine                         *
      *                                                               *
      *****************************************************************
     C     *PSSR         BEGSR
 
     C                   DUMP
 
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
 
     C                   RETURN
 
     C                   ENDSR
 
      *****************************************************************
      /EJECT
      *****************************************************************
**  CPY@
(c) Misys International Banking Systems Ltd. 2009
