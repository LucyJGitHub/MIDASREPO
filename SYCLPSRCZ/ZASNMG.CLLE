/*********************************************************************/
/********CLP**********************************************************/  /*CAP002*/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas SY Access object message handling')             */
/*********************************************************************/
/*                                                                   */
/*       Midas     - SYNON Module                                */
/*                                                                   */
/*       ZASNMG - ACCESS OBJECT MESSAGE HANDLING PROGRAM             */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*       Prev Amend No. CAP002             Date 01May98              */
/*                      S01314             Date 08Mar91              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CAP002 - Member converted from an OPM program to an ILE     */
/*                module and an ILE *PGM member of the same name has */
/*                been created (in SYPGMSRC).                        */
/*                ILE modules can make a bound call to the module.   */
/*                OPM programs can make a dynamic call to the *PGM.  */
/*       S01314 - CHANGES FOR PTF INCORPORATION                      */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RTCD &PGNM &DEST &MGID &MSGF &MGKY +
                          &MGDA &MGTP)
/* Declare variables :                                          */
 
             DCL        VAR(&RTCD)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&PGNM)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&DEST)   TYPE(*CHAR) LEN(5)
             DCL        VAR(&MGID)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&MGKY)   TYPE(*CHAR) LEN(4)
             DCL        VAR(&MGDA)   TYPE(*CHAR) LEN(50)
             DCL        VAR(&MGTP)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&MGIDS)  TYPE(*CHAR) LEN(3)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2001')
 
/* Global message monitor :                                     */
 
             MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(GOTO +
                          CMDLBL(TAGEND))
 
/* Send message from message file :                             */
 
 DO_1:       IF         COND(&MGID *NE '*CLEAR ') THEN(DO)
 
             CHGVAR     VAR(&MGIDS) VALUE(%SST(&MGID 1 3))
 
/* Determine Queue to send message to :                         */
 
             IF         COND((&DEST *NE '*PRV') *AND +
                             (&DEST *NE '*EXT') *AND +
                             (&DEST *NE '*SAME'))    +
                          THEN(CHGVAR VAR(&DEST) VALUE('*SAME'))
 
/* Check message ID; if blank, use message data as message text :  */
 
             IF         COND(&MGID *EQ ' ') THEN(CHGVAR VAR(&MGID) +
                          VALUE('RQS0001'))
 
/* Check message type :                                         */
 
             IF         COND((&MGTP *NE '*INFO')   *AND +
                             (&MGTP *NE '*INQ')    *AND +
                             (&MGTP *NE '*COMP')   *AND +
                             (&MGTP *NE '*DIAG')   *AND +
                             (&MGTP *NE '*NOTIFY') *AND +
                             (&MGTP *NE '*ESCAPE') *AND +
                             (&MGTP *NE '*RQS')    *AND +
                             (&MGTP *NE '*STATUS'))     +
                          THEN(CHGVAR VAR(&MGTP) VALUE('*DIAG'))
 
/* Check message file from which to send message :              */
 
             IF         COND((&MSGF  *EQ ' ')   *AND +
                            ((&MGIDS *EQ 'CPF') *OR  +
                             (&MGIDS *EQ 'CPD') *OR  +
                             (&MGIDS *EQ 'MCH') *OR  +
                             (&MGIDS *EQ 'RPG') *OR  +
                             (&MGIDS *EQ 'CBL') *OR  +
                             (&MGIDS *EQ 'PLI')))    +
                          THEN(CHGVAR VAR(&MSGF) VALUE('QCPFMSG'))
 
             IF         COND(&MSGF *EQ ' ') THEN(CHGVAR VAR(&MSGF) +
                          VALUE('MIUSRMSG'))
 
/* If to *EXT, send without program name :                      */
 
             IF         COND(&DEST *EQ '*EXT') THEN(SNDPGMMSG +
                          MSGID(&MGID) MSGF(&MSGF) MSGDTA(&MGDA) +
                          TOPGMQ(*EXT) MSGTYPE(&MGTP) KEYVAR(&MGKY))
 
/* Else send message to program queue requested :               */
 
             ELSE       CMD(SNDPGMMSG MSGID(&MGID) MSGF(&MSGF) +
                          MSGDTA(&MGDA) TOPGMQ(&DEST &PGNM) +
                          MSGTYPE(&MGTP) KEYVAR(&MGKY))
 
 OD_1:       ENDDO
 
/* *CLEAR requested - clear the message queue :                 */
 
             ELSE       CMD(RMVMSG PGMQ(&DEST &PGNM) CLEAR(*ALL))
 
             GOTO       CMDLBL(PGMEND)
 
 TAGEND:
             SNDPGMMSG  MSG('Error in message handling program - +
                          contact System Supervisor')
 
 PGMEND:                                                              /*S01314*/
/** PGMEND:     ENDPGM **/                                            /*S01314*/
             ENDPGM                                                   /*S01314*/
