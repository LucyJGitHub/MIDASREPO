     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas TM Update of TM DB by FX deals')                 *
     F****************************************************************
     F*                                                              *
     F*  Midas - Treasury Management Module
     F*                                                              *
     F*     TM0130  -   Update of TM database by FX Trades           *
     F*                                                              *
     F*     Function:   This program updates the Foreign exchange    *
     F*                 equivalents, positions and profit file       *
     F*                 (FXEPOSPP), and the forward book file        *
     F*                 (FXFWDDPP)for every FX transaction entered.  *
     F*                 it is run only during TM Take-on.            *
     F*                                                              *
     F*                 This program is based on FX0320.             *
     F*                                                              *
     F*     Called by:  TM0120 - Control update of TM database by FX *
     F*                          deals.                              *
     F*                                                              *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                              *
      *  Last Amend No. CDL099             Date 06Oct17               *
      *  Prev Amend No. CDL094             Date 11Jun14               *
      *                 CSW212             Date 03May12               *
      *                 CER059             Date 19Jul10               *
      *                 CER043             Date 19May08               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CDL049             Date 11May06               *
      *                 CSD027             Date 09Dec05               *
      *                 CDL038             Date 10May05               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 CLE025             Date 20Oct03               *
      *                 CGL029             Date 01Sep03               *
      *                 CDL010             Date 02Aug02               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.04 -----------------------------------------------*
      *                 CDL008             Date 02May00               *
      * Midas DBA 3.00 ---------------- Base -------------------------*
     F*                 084499             DATE 19APR95              *
     F*                 S01453             DATE 14DEC93              *
     F*                                                              *
     F*****************************************************************
      *  CDL099 - Split Value Date (Recompile)                        *
      *  CDL094 - Enhance  Receive Settlement Instructions            *
      *           (Recompiled)                                        *
      *  CSW212 - SWIFT 2012 Changes (Recompile)                      *
      *  CER059 - German Feature Upgrade to Delhi                     *
      *  CER043 - German Features LF041-00 New Fields and Defaulting  *
      *           (Recompile)                                         *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CDL049 - Addition of a Reference Rate field (recompile)      *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CDL038 - Extended Deal Sub Type (Recompile)                  *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  CDL010 - Prevent last user that actioned the trade from      *
     F*           authorising it.Recompile due to changes in FXDEALPP.*
      *  CDL008 - Continuous Linked Settlement (Recompiled FXDEALPP) *
     F*  084499 - CALL AORETLR0 ONLY IF RETAIL PRESENT               *
     F*  S01453 - MARGIN AND FX POSITIONS/POINTS AND BASE CURRENCY   *
     F*           POSITIONS/POINTS ADDED TO FX INPUT (RECOMPILED)    *
     F*****************************************************************
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*
     F**  Indicator Function Summary
     F*
     F* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     F*       60  FILE ACCESS INDICATOR - FXDEAULL INITIAL READ
     F*       61  FILE ACCESS INDICATOR - FXDWNBLL
     F*       63  FILE ACCESS INDICATOR - GENERAL
     F*       64  FILE ACCESS INDICATOR - FXFWDULL
     F*       65  FILE ACCESS INDICATOR - FXFWMULL
     F*       66  FILE ACCESS INDICATOR - FXEPOULL
     F*       67  FILE ACCESS INDICATOR - FXCRSCLL
     F*       68  FILE ACCESS INDICATOR - FXEPOCLL
     F*       79  TEST NUMERIC INDICATOR
     F*       80  ZA0710 LOKUP RESULTING INDICATOR
     F*       81  ZA0710 LOKUP RESULTING INDICATOR
     F*       U6  PROGRAM ERROR
     F*     U7+U8 DATA BASE ERROR
     F*
     F*****************************************************************
     F*
     FFDCCYPLLIF  E           K        DISK         KINFSR INFSR      UC
     FFXREVHLLIF  E           K        DISK         KINFSR INFSR      UC
     FFXDEAULLUF  E           K        DISK         KINFSR INFSR      UC
     F                                              KCOMIT
      * Only FXDEAULL is opened under commitment control as the other
      * update files are cleared at hte beginning of TMC0110.
     FFXEPOULLUF  E           K        DISK         KINFSR INFSR A    UC
     FFXFWMULLUF  E           K        DISK         KINFSR INFSR A    UC
     FFXFWDULLUF  E           K        DISK         KINFSR INFSR A    UC
     FFXCRSCLLIF  E           K        DISK         KINFSR INFSR
     FFXEPOCLLUF  E           K        DISK         KINFSR INFSR A
     F            FXEPOSP0                          KRENAMEFXEPOCL1
     //EJECT
     E*
     E*
     E**  ARRAY FOR SR. ZA0620 - DECIMAL PLACES CORRECTION
     E**  ( ie 1000  100  10  1  .1  .01  .001)
     E                    @DP     7   7  7 3
     E*
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0A
     E*
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0A
     E*
     E** USED TO PREPARE FIELDS FOR TESTN
     E                    @IA        10  1
     E                    @O         10  1
     E*
     E** TABLES FOR SHORT OR FORWARD P/L
     E                    TAB1    1  12  4   TAB2    2
     E*
     E                    @FK        14 13  A
     E**  Array to store and sort forward book file keys with
     E**  sequence numbers for proposed updates
     E*
     E                    CPY@    1   1 80
     E*   COPYRIGHT ARRAY
     //EJECT
     I*
     ISDMMOD    E DSSDMMODPD                                              084499
     I** DATA STRUCTURE FOR MODULES DETAILS                               084499
     I*                                                                   084499
     ISDBRCH    E DSSDBRCHPD
     I** DATA STRUCTURE FOR BRANCH DETAILS
     I*
     ISDCURR    E DSSDCURRPD
     I** DATA STRUCTURE FOR CURRENCY DETAILS
     I*
     ISDRETL    E DSSDRETLPD
     I** DATA STRUCTURE FOR RETAIL DETAILS
     I*
     ISDBANK    E DSSDBANKPD
     I** DATA STRUCTURE FOR BANK DETAILS
     I*
     ISDCUST    E DSSDCUSTPD
     I              QQDFAC                          CUDFAC                                    CGL029
     I** DATA STRUCTURE FOR CUSTOMER DETAILS
     I*
     ISDBROK    E DSSDBROKPD
     I** DATA STRUCTURE FOR BROKER DETAILS
     I*
     ISDNOST    E DSSDNOSTPD
     I              QQACCD                          NOACCD                                    CGL029
     I** DATA STRUCTURE FOR NOSTRO DETAILS
     I*
     ISDCNST    E DSSDCNSTPD
     I** DATA STRUCTURE FOR COUNTERPARTY NOSTRO DETAILS
     I*
     ISDDEAL    E DSSDDEALPD
     I              QQACCD                          DLACCD                                    CGL029
     I** DATA STRUCTURE FOR DEALING DETAILS
     I*
     ISDTRMA    E DSSDTRMAPD
     I** DATA STRUCTURE FOR TREASURY MANAGEMENT DETAILS
     I*
     IDSFDY     E DSDSFDY
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE
     I*
     IDSSDY     E DSDSSDY
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE
     I*
     IPSDS       SDS
     I**  Program status data structure.
     I*
     I**  Field containing FILE NAME
     I                                      201 208 @FILE
     I**  Field containing user ID.
     I                                      254 263 @USER
     I*
     I           UDS
     I**  Local data area for data base errors.
     I*
     I**  Field containing name of database file in error.
     I                                      134 141 DBFILE
     I**  Field containing key value causing database error.
     I                                      142 170 DBKEY
     I**  Field containing name of program causing database error.
     I                                      171 180 DBPGM
     I**  Field containing number of database error.
     I                                      181 183 DBASE
     IDATE1       DS
     I                                        1   8 @DATE1
     I                                        1   4 @D1YY
     I                                        5   6 @D1MM
     I                                        7   8 @D1DD
     IRUNS1       DS
     I                                        1   7 RUNA
     I                                        1   2 @RUND
     I                                        3   5 @RUNM
     I                                        6   7 @RUNY
     I*
     I** STANDARD DEAL EXTERNALLY DEFINED DATA STRUCTURE
     I@STDDL    E DSFXSTDDPP
     I*
     I**  DATA STRUCTURE FOR SR. ZA0680 - DATE INPUT TO SUBROUTINE
     I            DS
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I*
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@Z71Y
     I            DS
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
     I*
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@VDT
     I            DS
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
     I*
     I@INAMT      DS
     I                                        1  10 @IN
     I                                        1  10 @IA
     I@OUTAM      DS
     I                                        1  10 @OUT
     I                                        1  10 @O
     I*
     I@PRLOS      DS                          2
     I* USED IN REVALUATION PROFIT/LOSS CALCULATION  FOR ADJUSTMENT
     I* TO EXPOSURE,POSITIONS AND P/L FILE WHEN FORWARD BOOK DAILY
     I* RECORDS ARE UPDATED
     I                                        1   3 @PCCY
     I                                        4  180@SPLO
     I                                       19  330@FPLO
     I                                       34  34 @ADJAD
     I*
     I@FBKE       DS                             13
     I**  Forward book file key array element data structure             E
     I**  - used by @FK                                                  E
     I                                        1   3 @FBCY
     I                                        4  11 @FBDT
     I                                       12  13 @FBSQ
     I*
     I*****************************************************************
     //EJECT
     C****************************************************************
     C*                 MAIN PROGRAM
     C*                 ~~~~~~~~~~~~
     C** INITIAL PROCESSING
     C                     EXSR #A
     C*
     C** MAIN PROCESSING
     C           *INU7     IFNE '1'                        B1
     C           @TERM     ANDNE'T'                        *1
     C                     EXSR #B                         *1
     C                     END                             E1
     C*
     C** FINAL PROCESSING
     C           ENDPGM    TAG                                        ***
     C                     EXSR #C
     C*
     C                     RETRN
     C****************************************************************
     //EJECT
     C****************************************************************
     C*                                                              *
     C*            INDEX TO SUBROUTINES                              *
     C*            ~~~~~~~~~~~~~~~~~~~~                              *
     C*   1. #B           MAIN PROCESSING                            *
     C*   2. ZA0680       CONVERT YYYYMMDD TO DAY NUMBER             *
     C*   4. ZA0620       CALCULATE REVALUATION P/L                  *
     C*   5. ZA0640       CALCULATE FORWARD OUTRIGHT RATE            *
     C*   6. #AB          GET DBCE DECIMAL PLACES                    *
     C*   8. #BDB         UPDATE FORWARD BOOK FOR OPTION TAKEDOWN    *
     C*   9. #BDA         UPDATE FORWARD BOOK DAILY SCHEDULE         *
     C*  10. ZA0710       CONVERT DAY NUMBER TO YYYYMMDD             *
     C*  13. #BD          UPDATE FORWARD BOOK DETAILS                *
     C*  14. #BE          UPDATE EQUIVALENTS POSITIONS & PROFITS     *
     C*  15. #BEA         CALCULATE ADJUSTMENTS                      *
     C*  16. #BEB         UPDATE FXEPOULL - ADD THIS DEAL            *
     C*  18. #BAC         UPDATE DEALS FILE                          *
     C*  19. #BEE         UPDATE FXEPOULL - ADD IN TAKEDOWN          *
     C*  20. #BEH         UPDATE FXEPOCLL - CROSS CURRENCIES         *
     C*  23. #ZD          CREATE ZERO RECORD FOR FXEPOULL            *
     C*  24. #A           INITIAL PROCESSING                         *
     C*  25. #BA          UPDATE DEALS FILE                          *
     C*  26. #BAA         UPDATE SUPPLEMENTARY STANDARD DEAL         *
     C*  27. #ZB          PREPARE FIELD FOR TESTN                    *
     C*  28. #BAB         UPDATE SUPP STD DEAL RELATED DEAL FIELDS   *
     C*  30. #C           FINAL PROCESSING                           *
     C*  31. *PSSR        PROGRAM ERROR SUBROUTINE                   *
     C*  32. INFSR        FILE ERROR SUBROUTINE                      *
     C*                                                              *
     C*                                                              *
     C*                                                              *
     C****************************************************************
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #B    MAIN PROCESSING                           *
     C*                                                              *
     C*  FIELDS USED :     @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                                                              *
     C*  CALLED BY :       MAIN PROGRAM                              *
     C*                                                              *
     C*  CALLS :           #BA #BD #BE                               *
     C*                                                              *
     C****************************************************************
     C           #B        BEGSR
     C*
     C** DEALS FILE PROCESSING
     C                     EXSR #BA
     C*
     C** UPDATE FORWARD BOOK DETAILS
     C           *INU7     IFNE '1'                        B1
     C           @TERM     ANDNE'E'                        *1
     C                     EXSR #BD                        *1
     C                     END                             E1
     C*
     C** UPDATE EQUIVALENTS POSITIONS AND PROFITS
     C           *INU7     IFNE '1'                        B1
     C           @TERM     ANDNE'E'                        *1
     C                     EXSR #BE                        *1
     C                     END                             E1
     C*
     C           #B9       ENDSR
     //EJECT
     C*******************************************************************
     C*                                                               *
     C* ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO     *
     C*          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)     *
     C*                                                               *
     C* CALLED BY : #A #BA #BD #BE                                    *
     C*                                                               *
     C* CALLS :                                                       *
     C*                                                               *
     C* INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
     C*                                                               *
     C* OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)                 *
     C*                                                               *
     C* USES :   @@CC   NUMBER OF CENTURIES IN DATE                   *
     C*          @@DAY  DAY NUMBER                                    *
     C*          @@REM  REMAINDER FROM DIVIDE                         *
     C*          @@MTH  MONTH NUMBER                                  *
     C*          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN *
     C*                 MONTH                                         *
     C*          @@WK2  WORK FIELD (2,0)                              *
     C*          @@WK5  WORK FIELD (5,0)                              *
     C*          @@YYYY YEAR (4 CHARACTER)                            *
     C*          @@YY   YEAR (2 CHARACTER)                            *
     C*          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN *
     C*                 A FOUR YEAR PERIOD                            *
     C*                                                               *
     C*******************************************************************
     C*
     C           ZA0680    BEGSR
     C*
     C**  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
     C*
     C**   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
     C*
     C**  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C           @@YYYY    ADD  28        @@WK2
     C*
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
     C*
     C**  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          *1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C**  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
     C*
     C**  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
     C*
     C**  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
     C*
     C           ZA0689    ENDSR                                     AG**
     C*****************************************************************
     //EJECT
     C*****************************************************************
     C*                                                              *
     C* ZA0620 - THIS SUBROUTINE CALCULATES THE REVALUATION PROFIT   *
     C*          AND LOSS (IN BASE CCY)                              *
     C*                                                              *
     C* CALLED BY :   #BEA #BEB #BEC                                 *
     C*                                                              *
     C* CALLS :  ZA0640  TO OBTAIN MARKET OUTRIGHT RATE              *
     C*                                                              *
     C* INPUT  : @@VDT   VALUE DATE(YYYYMMDD)           (ZA0640)     *
     C*          @@AMT   AMOUNT                                      *
     C*          @@DBCE  DEALT BASE CURRENCY EQUIV    (SIZE : 15,0)  *
     C*          @@CCY   CURRENCY CODE                  (ZA0640)     *
     C*          @@BYSL  BUY OR SELL RATE REQUIRED      (ZA0640)     *
     C*          CDP     CURRENCY DECIMAL PLACES       (SDCURRPD)    *
     C*          XRMD    EXCHANGE RATE MULTIPLY/DIVIDE (SDCURRPD)    *
     C*                                                              *
     C* OUTPUT : @@RPL   REVALUATION PROFIT/LOSS    (SIZE : 15,0)    *
     C*                                                              *
     C* USES :   @@RBCE  REVALUED BASE CURRENCY EQUIVALENT           *
     C*          @DP     DECIMAL PLACES CORRECTION ARRAY             *
     C*          @@MOR   MARKET OUTRIGHT RATE                        *
     C*          @@NDPB  BASE CURRENCY DECIMAL PLACES  (FROM #AB)    *
     C*          @@P     DECIMAL PLACES CORRECTION ARRAY INDEX       *
     C*          @@DEC   DECIMAL VALUS OF @@RBCE FIELD.              *
     C*          @@MDEC  DECIMAL VALUS OF @@RBCE FIELD AFTER         *
     C*                  DECIMAL CORRECTION.                         *
     C*                                                              *
     C*****************************************************************
     C*
     C           ZA0620    BEGSR
     C*
     C**   DEFINE @@AMT.
     C                     Z-ADD@@AMT     @@AMT  150
     C*
     C**   OBTAIN MARKET OUTRIGHT RATE
     C                     EXSR ZA0640
     C           *INU7     CABEQ'1'       ZA0629
     C*
     C**   CHECK MULTIPLY/DIVIDE INDICATOR
     C           XRMD      IFEQ 'M'                        B1
     C*
     C**   CALCULATE THE RETURN BASE CURRENCY EQUIVALENT, AND ALSO
     C**   STORE THE RESULTING DECIMAL PLACES.
     C           @@AMT     MULT @@MOR     @@RBCE 150       *1
     C           @@AMT     MULT @@MOR     @@DEC   33H      *1
     C                     ELSE                            X1
     C           @@AMT     DIV  @@MOR     @@RBCE           *1
     C           @@AMT     DIV  @@MOR     @@DEC     H      *1
     C                     END                             E1
     C*
     C**  CORRECT DECIMAL PLACES OF REVALUED BASE CCY EQUIVALENT
     C           CDP       SUB  @@NDPB    @@P     10
     C                     ADD  4         @@P
     C           @@RBCE    MULT @DP,@@P   @@RBCE    H
     C           @@DEC     MULT @DP,@@P   @@MDEC  63
     C*
     C**  CALCULATE EXACT VALUE OF @@RBCE (INCLUDES DEC. PLACES FIGURE)
     C           @@MDEC    ADD  @@RBCE    @@RBCE    H
     C*
     C**  CALCULATE PROFIT/LOSS
     C           @@RBCE    SUB  @@DBCE    @@RPL  150
     C*
     C           ZA0629    ENDSR                                     AG**
     //EJECT
     C*****************************************************************
     C*                                                               *
     C* ZA0640 - THIS SUBROUTINE CALCULATES THE FORWARD OUTRIGHT      *
     C*          RATE FOR A DATE AND CURRENCY                         *
     C*                                                               *
     C* CALLED BY :      ZA0620                                       *
     C*                                                               *
     C* CALLS :  ZA0680  TO CONVERT DATES TO MIDAS DAY NUMBER FORMAT  *
     C*                                                               *
     C* INPUT  : @@CCY   CURRENCY CODE                                *
     C*          @@BYSL  BUY OR SELL RATE REQUIRED                    *
     C*          @@VDT   VALUE DATE(YYYYMMDD)                         *
     C*          XRMD    EXCHANGE RATE MULTIPLY/DIVIDE (SDCURRPD)     *
     C*                                                               *
     C* OUTPUT : @@MOR   FORWARD MARKET OUTRIGHT RATE  (SIZE : 13,8)  *
     C*                                                               *
     C* USES :   @@DATD  DATE EXCESS (VALUE DATE AND LOWER LIMIT DATE)*
     C*          @@DATD  DATE DIFFERENCE BETWEEN THE TWO READ'S       *
     C*          @@FCCY  CURRENCY FROM FIRST READ                     *
     C*          @@FRAT  OUTRIGHT RATE FROM FIRST READ (HIGH OR LOW)  *
     C*          @@HRT1  HIGH OUTRIGHT RATE FROM FIRST READ           *
     C*          @@KREV  KEY FOR READ OF S/FXREVHLL                   *
     C*          @@LRT1  LOW OUTRIGHT RATE FROM FIRST READ            *
     C*          @@PRD1  PERIOD DATE FROM FIRST READ (MIDAS DAY NO.)  *
     C*          @@PRD2  PERIOD DATE FROM SECOND READ (MIDAS DAY NO.) *
     C*          @@RATD  RATE DIFFERENCE BETWEEN THE TWO READ'S       *
     C*          @@SRAT  OUTRIGHT RATE FROM SECOND READ (HIGH OR LOW) *
     C*          @@VDAT  VALUE DATE IN MIDAS DAY NUMBER FORMAT        *
     C*          @@VTE   VALUE DATE IN ZONED FORMAT                   *
     C*          @@WK5   WORK FIELD                                   *
     C*          @@WK6   WORK FIELD                                   *
     C*          BNCYDL  BASE CURRENCY FOR DEALING.    (S/SDDEALPD)   *
     C*          FVCCY   CURRENCY CODE                 (S/FXREVHLL)   *
     C*          FVHORT  HIGH OUTRIGHT RATE            (S/FXREVHLL)   *
     C*          FVLORT  LOW OUTRIGHT RATE             (S/FXREVHLL)   *
     C*          FVPRDT  PERIOD DATE                   (S/FXREVHLL)   *
     C*          XRMD    MULTIPLY/DIVIDE INDICATOR     (SDCURRPD)     *
     C*          *IN85   ERROR/RESULT *IN FOR READ'S (NOT REFERRED TO)*
     C*                                                               *
     C*****************************************************************
     C*
     C           ZA0640    BEGSR
     C*
      *
      **   If the currency requested is Base for dealing, assume
      **     a Rate of 1.00.
     C           BNCYDL    IFEQ @@CCY                      B1
     C                     Z-ADD0001.00   @@MOR            *1
     C                     ELSE                            X1
     C*
     C**  KEY LIST FOR FXREVHLL READ
     C**  DATE KEY MUST BE ZONED NOT PACKED
     C                     Z-ADD@@VDT     @@VTE            *1
     C           @@KREV    KLIST                           *1
     C                     KFLD           @@CCY   3        *1
     C                     KFLD           @@VTE            *1
      *
      **  Clear database field from previous executions.
     C                     MOVE *BLANKS   FVCCY            *1
     C*
     C**  SETLL FOR NEXT READP
     C           @@KREV    SETLLFXREVHP0                   *1
     C           @@CCY     READEFXREVHP0               8685*1
     C*
     C**  If record not found, or locked, try for record
     C**   with date less than that provided. Read last
     C**   record for currency.
     C           *IN85     IFEQ '1'                        B*2
     C           *IN86     OREQ '1'                        **2
     C           @@CCY     SETGTFXREVHP0                   **2
     C                     READPFXREVHP0               8685**2
      *
      **  No record whatsoever exists for the currency,
      **   perform error processing. Set IN85, cause
      **   Non Extrapolation processing.
     C           @@CCY     CABNEFVCCY     ZA0648           **2
     C                     MOVE '1'       *IN85            **2
     C                     END                             E*2
     C*
     C**  RECORD EXISTS FOR CCY
     C**         and VALUE DATE = that on file.
     C**         or  VALUE DATE > than any on file.
      *
     C           @@VTE     IFEQ FVPRDT                     B*2
     C           *IN85     OREQ '1'                        **2
     C*
     C**  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C           XRMD      IFEQ 'M'                        B**3
     C           @@BYSL    ANDEQ'B'                        ***3
     C*
     C           XRMD      OREQ 'D'                        ***3
     C           @@BYSL    ANDEQ'S'                        ***3
     C*
     C**   USE HIGH OUTRATE RATE
     C                     Z-ADDFVHORT    @@MOR            ***3
     C                     ELSE                            X**3
     C*
     C**   USE LOW OUTRATE RATE
     C                     Z-ADDFVLORT    @@MOR            ***3
     C                     END                             E**3
     C*
     C**  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
     C*
     C**  Setting up of  @@VDAT
     C**  Convert the Value Date to MIDAS No. and store in @@VDAT
     C                     Z-ADD@@VDT     @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@VDAT           *1
     C*
     C**  SAVE FIRST READ VALUES
     C                     MOVE FVCCY     @@FCCY           *1
     C                     MOVE *BLANKS   FVCCY            *1
     C*
     C** CONVERT TO MIDAS DAY NUMBER FORMAT
     C                     Z-ADDFVPRDT    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@PRD1           *1
     C                     Z-ADDFVHORT    @@HRT1           *1
     C                     Z-ADDFVLORT    @@LRT1           *1
     C*
     C**  READ PREVIOUS RECORD
     C                     READPFXREVHP0                 85*1
     C*
     C**  MUST EXTRAPOLATE TO GET RATE FOR VALUE DATE
     C           @@FCCY    IFEQ @@CCY                      B*2
     C           FVCCY     ANDEQ@@CCY                      **2
     C           @@PRD1    ANDGT@@VDAT                     **2
     C           *IN85     ANDEQ'0'                        **2
     C*
     C**  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C           XRMD      IFEQ 'M'                        B**3
     C           @@BYSL    ANDEQ'B'                        ***3
     C*
     C           XRMD      OREQ 'D'                        ***3
     C           @@BYSL    ANDEQ'S'                        ***3
     C*
     C**   USE HIGH OUTRATE RATE
     C                     Z-ADDFVHORT    @@SRAT           ***3
     C                     Z-ADD@@HRT1    @@FRAT           ***3
     C                     ELSE                            X**3
     C*
     C**   USE LOW OUTRATE RATE
     C                     Z-ADDFVLORT    @@SRAT           ***3
     C                     Z-ADD@@LRT1    @@FRAT           ***3
     C                     END                             E**3
     C*
     C**  CALCULATION:
     C**  RATE DIFFERENCE
     C           @@FRAT    SUB  @@SRAT    @@RATD           **2
     C*
     C**  DATE DIFFERENCE
     C**  CONVERT TO MIDAS DAY NUMBER FORMAT
     C                     Z-ADDFVPRDT    @@DTIN           **2
     C                     EXSR ZA0680                     **2
     C                     Z-ADD@@MDNO    @@PRD2           **2
     C*
     C**  DATE EXCESS
     C           @@VDAT    SUB  @@PRD2    @@EDAT           **2
     C*
     C           @@PRD1    SUB  @@PRD2    @@DATD           **2
     C*
     C           @@EDAT    DIV  @@DATD    @@WK6  109H      **2
     C           @@WK6     MULT @@RATD    @@MOR     H      **2
     C                     ADD  @@SRAT    @@MOR            **2
     C*
     C**  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
     C*
     C**  ONLY ONE REVALUATION RECORD FOR THIS CCY SO CANNOT EXTRAPOLATE
     C           @@FCCY    IFEQ @@CCY                      B*2
     C           FVCCY     ANDNE@@CCY                      **2
     C*
     C*
     C**  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C           XRMD      IFEQ 'M'                        B**3
     C           @@BYSL    ANDEQ'B'                        ***3
     C*
     C           XRMD      OREQ 'D'                        ***3
     C           @@BYSL    ANDEQ'S'                        ***3
     C*
     C**   USE HIGH OUTRATE RATE
     C                     Z-ADD@@HRT1    @@MOR            ***3
     C                     ELSE                            X**3
     C*
     C**   USE LOW OUTRATE RATE
     C                     Z-ADD@@LRT1    @@MOR            ***3
     C                     END                             E**3
     C*
     C**  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
     C*
     C**  ONLY ONE REVALUATION RECORD FOR THIS CCY SO CANNOT EXTRAPOLATE
     C           FVCCY     IFEQ @@CCY                      B*2
     C           @@FCCY    ANDNE@@CCY                      **2
     C*
     C*
     C**  CHECK IF HIGH OR LOW OUTRIGHT RATE IS REQUIRED
     C           XRMD      IFEQ 'M'                        B**3
     C           @@BYSL    ANDEQ'B'                        ***3
     C*
     C           XRMD      OREQ 'D'                        ***3
     C           @@BYSL    ANDEQ'S'                        ***3
     C*
     C**   USE HIGH OUTRATE RATE
     C                     Z-ADDFVHORT    @@MOR            ***3
     C                     ELSE                            X**3
     C*
     C**   USE LOW OUTRATE RATE
     C                     Z-ADDFVLORT    @@MOR            ***3
     C                     END                             E**3
     C*
     C**  EXIT ROUTINE
     C                     GOTO ZA0649                     **2
     C                     END                             E*2
     C*
     C**  ANY OTHER RESULTS MUST BE A DATABASE ERROR
     C           ZA0648    TAG                             *1
     C                     MOVE @@CCY     DBKEY            ***************
     C                     MOVEL'FXREVHLL'DBFILE           * DB ERROR 920*
     C                     MOVE '920'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
      *
     C                     END                             E1
      *                                                    E1
     C*
     C**  FIELD DEFINITIONS
     C           *LIKE     DEFN @@MDNO    @@EDAT
     C           *LIKE     DEFN FVHORT    @@RATD
     C           *LIKE     DEFN FVCCY     @@FCCY
     C           *LIKE     DEFN @@MDNO    @@VDAT
     C           *LIKE     DEFN A6SPRT    @@MOR
     C           *LIKE     DEFN FVPRDT    @@VTE
     C           *LIKE     DEFN @@MDNO    @@PRD1
     C           *LIKE     DEFN FVHORT    @@HRT1
     C           *LIKE     DEFN FVLORT    @@LRT1
     C           *LIKE     DEFN FVHORT    @@SRAT
     C           *LIKE     DEFN FVHORT    @@FRAT
     C           *LIKE     DEFN @@MDNO    @@PRD2
     C           *LIKE     DEFN @@MDNO    @@DATD
      *
     C                     GOTO ZA0649
      *  FOR DEFN ONLY.
     C                     MOVE @@BYSL    @@BYSL  1
     C                     Z-ADD@@DBCE    @@DBCE 150
     C*
     C           ZA0649    ENDSR
     C*****************************************************************
     //EJECT
     C*****************************************************************
     C*                                                               *
     C*       SUBROUTINE:   #AB      GET DBCE DECIMAL PLACES          *
     C*                                                               *
     C*       FIELDS USED : BNCYDL - CURRENCY CODE FROM SDDEALPD      *
     C*                     @@NDPB - NO.OF DEC.PLACES IN BASE CURR.   *
     C*                                                               *
     C*       INPUT FIELDS: BNCYDL                                    *
     C*                                                               *
     C*       OUTPUT FIELD: @@NDPB                                    *
     C*                                                               *
     C*   CHECKS MADE ARE :                                           *
     C*                                                               *
     C*   A) IF RECORD NOT FOUND ON LOGICAL FILE 'SDCURRPD' OR        *
     C*          'FDINSTLL' SETON INDICATORS U7 , U8 & 80             *
     C*            AND EXIT                                           *
     C*      ELSE                                                     *
     C*           STORE CCY DECIMAL PLACES (A6DANB) IN FIELD @@NDPB.  *
     C*                                                               *
     C*   CALLED BY:  #A                                              *
     C*****************************************************************
     C*
     C           #AB       BEGSR
     C*
     C           *LIKE     DEFN A6NBDP    @@NDPB
     C                     Z-ADD0         @@NDPB
      *
     C**********           CALL 'AODEALR0'                                                    CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C********** SDDEAL    PARM SDDEAL    DSFDY                                               CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C           @RTCD     IFNE *BLANKS                    B1
     C                     SETON                     U7U8  *1
     C                     MOVEL'SDDEALPD'DBFILE           *1
     C                     MOVEL'922'     DBASE            *1
     C                     MOVEL*BLANKS   DBKEY            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #AB9                       *1
     C                     END                             E1
      *
      *  Access Currency file for Base decimal places.
     C                     CALL 'AOCURRR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM BNCYDL    @AJCD   3
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B1
     C                     SETON                     U7U8  *1
     C                     MOVEL'SDCURRPD'DBFILE           ***************
     C                     MOVEL'921'     DBASE            * DBERROR 921 *
     C                     MOVELBNCYDL    DBKEY            ***************
     C                     EXSR *PSSR                      *1
     C                     GOTO #AB9                       *1
     C                     END                             E1
     C*
     C                     Z-ADDA6NBDP    @@NDPB
     C*
     C           #AB9      ENDSR
     C*****************************************************************
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BDB  FXR0048     UPDATE FORWARD BOOK OPTION    *
     C*                    FXR0049     TAKEDOWN SCHEDULE             *
     C*                                                              *
     C*  FIELDS USED :     @RACT8 -  ACTION DATE(NUM)                *
     C*                    @RBCD  -  BCD INPUT                       *
     C*                    @RACT  -  ACTION DATE INPUT               *
     C*                    @RREV  -  REVERSE INDICATOR INPUT         *
     C*                    @RAMT  -  AMOUNT INPUT                    *
     C*                    @RCCY  -  CURRENCY INPUT                  *
     C*                    @R12   -  BUY/SELL FLAG                   *
     C*                    @RDELB -  DBCE INPUT                      *
     C*                    @@DAYN -  INPUT DATE FOR ZA0710           *
     C*                    @@RTN  -  RETURN FLAG FROM ZA0710         *
     C*                    @@VDT  -  OUTPUT DATE FROM ZA0710         *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @DATE1 -  DATA STRUCTURE DATE             *
     C*                    @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                    @TDOWN -  TAKEDOWN PROPORTION             *
     C*                    @TPOO2 -  TAKEDOWN PROP OP ORIG 2ND AMT   *
     C*                    @TPBCE -  TAKEDOWN PROP DBCE              *
     C*                    @OPL  -  'OLD' PROFIT/LOSS                *
     C*                    @PLADJ-  PROFIT/LOSS ADJUSTMENT WORK FIELD*
     C*                                                              *
     C*  CALLED BY :       #BD  UPDATE FORWARD BOOK DETAILS          *
     C*                                                              *
     C*  CALLS :           ZA0710                                    *
     C*                                                              *
     C****************************************************************
     C           #BDB      BEGSR
     C*
     C** FX00048
     C*
     C** ACCESS FXFWDULL
     C*
     C** CONVERT ACTION DATE TO YYYYMMDD FORM
     C                     MOVE @RACT     @@DAYN  50
     C           @@DAYN    IFNE *ZEROS                     B1
     C                     EXSR ZA0710                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BDB9                      **2
     C                     END                             E*2
     C** IF RETURN IS SET THEN DATABASE ERROR
     C           @@RTN     IFEQ 1                          B*2
     C**  Set up error output for screen.
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL*BLANKS   DBFILE           * DB ERROR 025*
     C                     MOVEL'025'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #BDB9                      **2
     C                     END                             E*2
     C                     MOVE @@VDT     @RACT8  80       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @RACT8           *1
     C                     END                             E1
     C                     MOVE @RACT8    @DATE1
     C                     MOVE @D1YY     FPFWBY
     C                     MOVE @D1MM     FPFWBM
     C                     MOVE @D1DD     FPFWBD
     C                     MOVE @RCCY     FPCCY
     C           KEY5      CHAINFXFWDULL             64
     C           *IN64     IFEQ '1'                        B1
     C*
     C** CREATE A ZERO RECORD FOR FXFWDDP0
     C                     MOVE 'FP'      FPRCID           *1
     C                     MOVE *BLANKS   FPDLTF           *1
     C                     MOVE @RUND     FPDLUP           *1
     C                     MOVE @RUNM     FPMLUP           *1
     C                     MOVE @RUNY     FPYLUP           *1
     C                     TIME           FPTLUP           *1
     C                     MOVE 'I'       FPCHTP           *1
     C                     MOVE BJRDNB    FPLCD            *1
     C                     MOVEL@USER     FPLUID           *1
     C                     MOVE *ZEROS    FPDYCI           *1
     C                     MOVE *ZEROS    FPDYCO           *1
     C                     MOVE *ZEROS    FPDYNM           *1
     C                     MOVE *ZEROS    FPDYDE           *1
     C                     END                             E1
     C*
     C**  CALCULATE 'OLD' PROFIT/LOSS FOR
     C                     MOVE @DATE1    @@VDT
     C                     Z-ADDFPDYNM    @@AMT
     C                     Z-ADDFPDYDE    @@DBCE
     C                     MOVE FPCCY     @@CCY
     C           FPDYNM    IFLT 0                          B1
     C                     MOVE 'B'       @@BYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @@BYSL           *1
     C                     END                             E1
     C*
     C** ACCESS CURRENCY RECORD IN PREPARATION FOR ZA0620
     C                     CALL 'AOCURRR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM FPCCY     @AJCD
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B1
     C**  Set up error output for screen.
     C                     MOVELFPCCY     DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 037 *
     C                     MOVEL'037'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #BDB9                      *1
     C                     END                             E1
     C*
     C** CALCULATE THE REVALUATION PROFIT AND LOSS
     C                     MOVELA6MDEX    XRMD    1
     C                     MOVELA6NBDP    CDP     30
     C                     EXSR ZA0620
     C*
     C** SAVE THE 'OLD' PROFIT/LOSS FOR CURRENCY
     C           *LIKE     DEFN @@RPL     @OPL
     C                     Z-ADD@@RPL     @OPL
     C*
     C** CALCULATE THE TAKEDOWN PROPORTION
     C*
     C** DAILY CASH IN AND OUT
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYCI    SUB  @RAMT     FPDYCI           ***3
     C                     ELSE                            X**3
     C           FPDYCO    ADD  @RAMT     FPDYCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION OF OPTION ORIGINAL SECOND AMOUNT
     C           F3OOSA    MULT @TDOWN    @TPOO2 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYCI    SUB  @TPOO2    FPDYCI           ***3
     C                     ELSE                            X**3
     C           FPDYCO    ADD  @TPOO2    FPDYCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYCI    ADD  @RAMT     FPDYCI           ***3
     C                     ELSE                            X**3
     C           FPDYCO    SUB  @RAMT     FPDYCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION OF OPTION ORIGINAL SECOND AMOUNT
     C           F3OOSA    MULT @TDOWN    @TPOO2 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYCI    ADD  @TPOO2    FPDYCI           ***3
     C                     ELSE                            X**3
     C           FPDYCO    SUB  @TPOO2    FPDYCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** DAILY NET MOVEMENT
     C           FPDYCI    SUB  FPDYCO    FPDYNM
     C*
     C** DAILY NET DEALT BASE CCY EQUIV
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYDE    SUB  @TPBCE    FPDYDE           ***3
     C                     ELSE                            X**3
     C           FPDYDE    ADD  @TPBCE    FPDYDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYDE    SUB  @TPBCE    FPDYDE           ***3
     C                     ELSE                            X**3
     C           FPDYDE    ADD  @TPBCE    FPDYDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYDE    ADD  @TPBCE    FPDYDE           ***3
     C                     ELSE                            X**3
     C           FPDYDE    SUB  @TPBCE    FPDYDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE 150H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FPDYDE    ADD  @TPBCE    FPDYDE           ***3
     C                     ELSE                            X**3
     C           FPDYDE    SUB  @TPBCE    FPDYDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C           *IN64     IFEQ '0'                        B1
     C                     MOVE @RUND     FPDLUP           *1
     C                     MOVE @RUNM     FPMLUP           *1
     C                     MOVE @RUNY     FPYLUP           *1
     C                     TIME           FPTLUP           *1
     C                     MOVE 'A'       FPCHTP           *1
     C                     MOVE BJRDNB    FPLCD            *1
     C                     MOVEL@USER     FPLUID           *1
     C                     UPDATFXFWDDP0                   *1
     C                     ELSE                            X1
     C                     WRITEFXFWDDP0                   *1
     C                     END                             E1
     C*
     C**  CALCULATE 'NEW' PROFIT/LOSS
     C                     MOVE @DATE1    @@VDT
     C                     Z-ADDFPDYNM    @@AMT
     C                     Z-ADDFPDYDE    @@DBCE
     C                     MOVE FPCCY     @@CCY
     C           FPDYNM    IFLT 0                          B1
     C                     MOVE 'B'       @@BYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @@BYSL           *1
     C                     END                             E1
     C*
     C** ACCESS CURRENCY RECORD IN PREPERATION FOR ZA0620
     C                     CALL 'AOCURRR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM FPCCY     @AJCD
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B1
     C**  Set up error output for screen.
     C                     MOVELFPCCY     DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 038 *
     C                     MOVEL'038'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #BDB9                      *1
     C                     END                             E1
     C*
     C** CALCULATE THE REVALUATION PROFIT AND LOSS
     C                     MOVELA6MDEX    XRMD
     C                     MOVELA6NBDP    CDP
     C                     EXSR ZA0620
     C*
     C** SAVE THE 'NEW' PROFIT/LOSS FOR CURRENCY
     C           *LIKE     DEFN @@RPL     @PLADJ
     C           *LIKE     DEFN @@RPL     @NPL
     C                     Z-ADD@@RPL     @NPL
     C*
     C**  CALCULATE ADJUSTMENT AND STORE IN MULT OCC. DS. EITHER
     C*   SHORT OR FORWARD FIELD
     C*
     C** DETERMINE IF FIRST OR SECOND CURRENCY BEING PROCESSED AND
     C** SET DATA STRUCTURE OCCURANCE AS APPROPRIATE
     C           1         OCUR @PRLOS
     C           FPCCY     IFNE @PCCY                      B1
     C           2         OCUR @PRLOS                     *1
     C                     END                             E1
     C*
     C** IF ACTION FALLS WITHIN ONE MONTH DATE (@FWD5) ADD P/L INTO
     C** SHORT P/L, ELSE ADD INTO FORWARD P/L
     C           @ACDR5    IFGE BJRDNB                     B1
     C           @ACDR5    ANDLE@FWD5                      *1
     C           @NPL      SUB  @OPL      @PLADJ           *1
     C                     ADD  @PLADJ    @SPLO            *1
     C                     END                             E1
     C*
     C           @ACDR5    IFGT @FWD5                      B1
     C           @NPL      SUB  @OPL      @PLADJ           *1
     C                     ADD  @PLADJ    @FPLO            *1
     C                     END                             E1
     C*
     C** ACCESS FXFWMULL
     C                     MOVE @RACT8    DATE1
     C                     MOVE @D1YY     FQFWBY
     C                     MOVE @D1MM     FQFWBM
     C           @D1DD     IFGE '01'                       B1
     C           @D1DD     ANDLE'15'                       *1
     C                     Z-ADD1         FQFBHM           *1
     C                     ELSE                            X1
     C                     Z-ADD2         FQFBHM           *1
     C                     END                             E1
     C                     MOVE @RCCY     FQCCY
     C           KEY6      CHAINFXFWMULL             65
     C*
     C** CREATE A ZERO RECORD FOR FXFWMHP0
     C           *IN65     IFEQ '1'                        B1
     C                     MOVE 'FQ'      FQRCID           *1
     C                     MOVE *BLANKS   FQDLTF           *1
     C                     MOVE @RUND     FQDLUP           *1
     C                     MOVE @RUNM     FQMLUP           *1
     C                     MOVE @RUNY     FQYLUP           *1
     C                     TIME           FQTLUP           *1
     C                     MOVE 'I'       FQCHTP           *1
     C                     MOVE BJRDNB    FQLCD            *1
     C                     MOVEL@USER     FQLUID           *1
     C                     MOVE *ZEROS    FQHMCI           *1
     C                     MOVE *ZEROS    FQHMCO           *1
     C                     MOVE *ZEROS    FQHMNM           *1
     C                     MOVE *ZEROS    FQHMDE           *1
     C                     END                             E1
     C*
     C** DAILY CASH IN AND OUT
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMCI    SUB  @RAMT     FQHMCI           ***3
     C                     ELSE                            X**3
     C           FQHMCO    ADD  @RAMT     FQHMCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION OF OPTION ORIGINAL SECOND AMOUNT
     C           F3OOSA    MULT @TDOWN    @TPOO2    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMCI    SUB  @TPOO2    FQHMCI           ***3
     C                     ELSE                            X**3
     C           FQHMCO    ADD  @TPOO2    FQHMCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMCI    ADD  @RAMT     FQHMCI           ***3
     C                     ELSE                            X**3
     C           FQHMCO    SUB  @RAMT     FQHMCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION OF OPTION ORIGINAL SECOND AMOUNT
     C           F3OOSA    MULT @TDOWN    @TPOO2    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMCI    ADD  @TPOO2    FQHMCI           ***3
     C                     ELSE                            X**3
     C           FQHMCO    SUB  @TPOO2    FQHMCO           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** DAILY NET MOVEMENT
     C           FQHMCI    SUB  FQHMCO    FQHMNM
     C*
     C** DAILY NET DEALT BASE CCY EQUIV
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMDE    SUB  @TPBCE    FQHMDE           ***3
     C                     ELSE                            X**3
     C           FQHMDE    ADD  @TPBCE    FQHMDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMDE    SUB  @TPBCE    FQHMDE           ***3
     C                     ELSE                            X**3
     C           FQHMDE    ADD  @TPBCE    FQHMDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C*
     C** IF CCY AND AMOUNT ARE 1ST
     C           @R12      IFEQ '1'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMDE    ADD  @TPBCE    FQHMDE           ***3
     C                     ELSE                            X**3
     C           FQHMDE    SUB  @TPBCE    FQHMDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** IF CCY AND AMOUNT ARE 2ND
     C           @R12      IFEQ '2'                        B*2
     C           @RDELB    MULT @TDOWN    @TPBCE    H      **2
     C           @RAMT     IFGE 0                          B**3
     C           FQHMDE    ADD  @TPBCE    FQHMDE           ***3
     C                     ELSE                            X**3
     C           FQHMDE    SUB  @TPBCE    FQHMDE           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C           *IN65     IFEQ '0'                        B1
     C                     MOVE @RUND     FQDLUP           *1
     C                     MOVE @RUNM     FQMLUP           *1
     C                     MOVE @RUNY     FQYLUP           *1
     C                     TIME           FQTLUP           *1
     C                     MOVE 'A'       FQCHTP           *1
     C                     MOVE BJRDNB    FQLCD            *1
     C                     MOVEL@USER     FQLUID           *1
     C                     UPDATFXFWDHP0                   *1
     C                     ELSE                            X1
     C                     WRITEFXFWDHP0                   *1
     C                     END                             E1
     C           #BDB9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BDA  UPDATE FORWARD BOOK DAILY SCHEDULE        *
     C*                                                              *
     C*  FIELDS USED :     @RACT8 -  ACTION DATE(NUM)                *
     C*                    @RBCD  -  BCD INPUT                       *
     C*                    @RACT  -  ACTION DATE INPUT               *
     C*                    @RREV  -  REVERSE INDICATOR INPUT         *
     C*                    @RAMT  -  AMOUNT INPUT                    *
     C*                    @@DAYN -  INPUT DATE FOR ZA0710           *
     C*                    @@RTN  -  RETURN FLAG FROM ZA0710         *
     C*                    @@VDT  -  OUTPUT DATE FROM ZA0710         *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @DATE1 -  DATA STRUCTURE DATE             *
     C*                    @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                    @PLADJ - PROFIT/LOSS ADJUSTMENT WORK FIELD*
     C*                                                              *
     C*  CALLED BY :       #BD  UPDATE FORWARD BOOK DETAILS          *
     C*                                                              *
     C*  CALLS :           ZA0710                                    *
     C*                                                              *
     C****************************************************************
     C           #BDA      BEGSR
     C*
     C** ACCESS FXFWDULL
     C*
     C           KEY5      KLIST
     C                     KFLD           FPCCY
     C                     KFLD           FPFWBY
     C                     KFLD           FPFWBM
     C                     KFLD           FPFWBD
     C*
     C** CONVERT ACTION DATE TO YYYYMMDD FORM
     C                     MOVE @RACT     @@DAYN  50
     C           @@DAYN    IFNE *ZEROS                     B1
     C                     EXSR ZA0710                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BDA9                      **2
     C                     END                             E*2
     C** IF RETURN IS SET THEN DATABASE ERROR
     C           @@RTN     IFEQ 1                          B*2
     C**  Set up error output for screen.
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL*BLANKS   DBFILE           * DB ERROR 024*
     C                     MOVEL'024'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #BDA9                      **2
     C                     END                             E*2
     C                     MOVE @@VDT     @RACT8  80       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @RACT8           *1
     C                     END                             E1
     C                     MOVE @RACT8    @DATE1
     C                     MOVE @D1YY     FPFWBY
     C                     MOVE @D1MM     FPFWBM
     C                     MOVE @D1DD     FPFWBD
     C                     MOVE @RCCY     FPCCY
     C           KEY5      CHAINFXFWDULL             64
     C           *IN64     IFEQ '1'                        B1
     C*
     C** CREATE A ZERO RECORD FOR FXFWDDP0
     C                     MOVE 'FP'      FPRCID           *1
     C                     MOVE *BLANKS   FPDLTF           *1
     C                     MOVE @RUND     FPDLUP           *1
     C                     MOVE @RUNM     FPMLUP           *1
     C                     MOVE @RUNY     FPYLUP           *1
     C                     TIME           FPTLUP           *1
     C                     MOVE 'I'       FPCHTP           *1
     C                     MOVE BJRDNB    FPLCD            *1
     C                     MOVEL@USER     FPLUID           *1
     C                     MOVE *ZEROS    FPDYCI           *1
     C                     MOVE *ZEROS    FPDYCO           *1
     C                     MOVE *ZEROS    FPDYNM           *1
     C                     MOVE *ZEROS    FPDYDE           *1
     C                     END                             E1
     C*
     C**  CALCULATE 'OLD' PROFIT/LOSS
     C                     MOVE @DATE1    @@VDT
     C                     Z-ADDFPDYNM    @@AMT
     C                     Z-ADDFPDYDE    @@DBCE
     C                     MOVE FPCCY     @@CCY
     C           FPDYNM    IFLT 0                          B1
     C                     MOVE 'B'       @@BYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @@BYSL           *1
     C                     END                             E1
     C*
     C** ACCESS CURRENCY RECORD IN PREPERATION FOR ZA0620
     C                     CALL 'AOCURRR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM FPCCY     @AJCD
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B1
     C**  Set up error output for screen.
     C                     MOVELFPCCY     DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 039 *
     C                     MOVEL'039'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #BDA9                      *1
     C                     END                             E1
     C*
     C** CALCULATE THE REVALUATION PROFIT AND LOSS
     C                     MOVELA6MDEX    XRMD
     C                     MOVELA6NBDP    CDP
     C                     EXSR ZA0620
     C*
     C** SAVE THE 'OLD' PROFIT/LOSS FOR CURRENCY
     C                     Z-ADD@@RPL     @OPL
     C*
     C** DAILY CASH IN AND OUT
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FPDYCI    ADD  @RAMT     FPDYCI           **2
     C                     ELSE                            X*2
     C           FPDYCO    SUB  @RAMT     FPDYCO           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FPDYCI    SUB  @RAMT     FPDYCI           **2
     C                     ELSE                            X*2
     C           FPDYCO    ADD  @RAMT     FPDYCO           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** DAILY NET MOVEMENT
     C           FPDYCI    SUB  FPDYCO    FPDYNM
     C*
     C** DAILY NET DEALT BASE CCY EQUIV
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FPDYDE    ADD  @RBCD     FPDYDE           **2
     C                     ELSE                            X*2
     C           FPDYDE    SUB  @RBCD     FPDYDE           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FPDYDE    SUB  @RBCD     FPDYDE           **2
     C                     ELSE                            X*2
     C           FPDYDE    ADD  @RBCD     FPDYDE           **2
     C                     END                             E*2
     C                     END                             E1
     C           *IN64     IFEQ '0'                        B1
     C                     MOVE @RUND     FPDLUP           *1
     C                     MOVE @RUNM     FPMLUP           *1
     C                     MOVE @RUNY     FPYLUP           *1
     C                     TIME           FPTLUP           *1
     C                     MOVE 'A'       FPCHTP           *1
     C                     MOVE BJRDNB    FPLCD            *1
     C                     MOVEL@USER     FPLUID           *1
     C                     UPDATFXFWDDP0                   *1
     C                     ELSE                            X1
     C                     WRITEFXFWDDP0                   *1
     C                     END                             E1
     C*
     C**  CALCULATE 'NEW' PROFIT/LOSS
     C                     MOVE @DATE1    @@VDT
     C                     Z-ADDFPDYNM    @@AMT
     C                     Z-ADDFPDYDE    @@DBCE
     C                     MOVE FPCCY     @@CCY
     C           FPDYNM    IFLT 0                          B1
     C                     MOVE 'B'       @@BYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @@BYSL           *1
     C                     END                             E1
     C*
     C** ACCESS CURRENCY RECORD IN PREPERATION FOR ZA0620
     C                     CALL 'AOCURRR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM FPCCY     @AJCD
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B1
     C**  Set up error output
     C                     MOVELFPCCY     DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 039 *
     C                     MOVEL'039'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #BDA9                      *1
     C                     END                             E1
     C*
     C** CALCULATE THE REVALUATION PROFIT AND LOSS
     C                     MOVELA6MDEX    XRMD
     C                     MOVELA6NBDP    CDP
     C                     EXSR ZA0620
     C*
     C** SAVE THE 'NEW' PROFIT/LOSS FOR CURRENCY
     C                     Z-ADD@@RPL     @NPL
     C*
     C**  CALCULATE ADJUSTMENT AND STORE IN MULT OCC. DS. EITHER
     C*   SHORT OR FORWARD FIELD
     C** DETERMINE IF FIRST OR SECOND CURRENCY BEING PROCESSED AND
     C** SET DATA STRUCTURE OCCURANCE AS APPROPRIATE
     C           1         OCUR @PRLOS
     C           FPCCY     IFNE @PCCY                      B1
     C           2         OCUR @PRLOS                     *1
     C                     END                             E1
     C*
     C** IF ACTION FALLS WITHIN ONE MONTH DATE (@FWD5) ADD P/L INTO
     C** SHORT P/L, ELSE ADD INTO FORWARD P/L
     C           @ACTD5    IFGE BJRDNB                     B1
     C           @ACTD5    ANDLE@FWD5                      *1
     C           @NPL      SUB  @OPL      @PLADJ           *1
     C                     ADD  @PLADJ    @SPLO            *1
     C                     END                             E1
     C*
     C           @ACTD5    IFGT @FWD5                      B1
     C           @NPL      SUB  @OPL      @PLADJ           *1
     C                     ADD  @PLADJ    @FPLO            *1
     C                     END                             E1
     C*
     C** ACCESS FXFWMULL
     C           KEY6      KLIST
     C                     KFLD           FQCCY
     C                     KFLD           FQFWBY
     C                     KFLD           FQFWBM
     C                     KFLD           FQFBHM
     C                     MOVE @RACT8    DATE1
     C                     MOVE @D1YY     FQFWBY
     C                     MOVE @D1MM     FQFWBM
     C*
     C** FORWARD BOOK HALF MONTH
     C           @D1DD     IFGE '01'                       B1
     C           @D1DD     ANDLE'15'                       *1
     C                     Z-ADD1         FQFBHM           *1
     C                     ELSE                            X1
     C                     Z-ADD2         FQFBHM           *1
     C                     END                             E1
     C                     MOVE @RCCY     FQCCY
     C           KEY6      CHAINFXFWMULL             65
     C*
     C** CREATE A ZERO RECORD FOR FXFWDHP0
     C           *IN65     IFEQ '1'                        B1
     C                     MOVE 'FQ'      FQRCID           *1
     C                     MOVE *BLANKS   FQDLTF           *1
     C                     MOVE @RUND     FQDLUP           *1
     C                     MOVE @RUNM     FQMLUP           *1
     C                     MOVE @RUNY     FQYLUP           *1
     C                     TIME           FQTLUP           *1
     C                     MOVE 'I'       FQCHTP           *1
     C                     MOVE BJRDNB    FQLCD            *1
     C                     MOVEL@USER     FQLUID           *1
     C                     MOVE *BLANKS   FQHMCI           *1
     C                     MOVE *BLANKS   FQHMCO           *1
     C                     MOVE *BLANKS   FQHMNM           *1
     C                     MOVE *BLANKS   FQHMDE           *1
     C                     END                             E1
     C*
     C** HALF MONTH CASH IN AND OUT
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FQHMCI    ADD  @RAMT     FQHMCI           **2
     C                     ELSE                            X*2
     C           FQHMCO    SUB  @RAMT     FQHMCO           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FQHMCI    SUB  @RAMT     FQHMCI           **2
     C                     ELSE                            X*2
     C           FQHMCO    ADD  @RAMT     FQHMCO           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** HALF MONTH NET MOVEMENT
     C           FQHMCI    SUB  FQHMCO    FQHMNM
     C*
     C** HALF MONTH NET MM INTEREST NOT UPDATED
     C*
     C** HALF MONTH NET DEALT BASE CCY EQUIV
     C*
     C** IF REVERSE SIGN INDICATOR NOT SET
     C           @RREV     IFNE 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FQHMDE    ADD  @RBCD     FQHMDE           **2
     C                     ELSE                            X*2
     C           FQHMDE    SUB  @RBCD     FQHMDE           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF REVERSE SIGN INDICATOR SET
     C           @RREV     IFEQ 'R'                        B1
     C           @RAMT     IFGE 0                          B*2
     C           FQHMDE    SUB  @RBCD     FQHMDE           **2
     C                     ELSE                            X*2
     C           FQHMDE    ADD  @RBCD     FQHMDE           **2
     C                     END                             E*2
     C                     END                             E1
     C           *IN65     IFEQ '0'                        B1
     C                     MOVE @RUND     FQDLUP           *1
     C                     MOVE @RUNM     FQMLUP           *1
     C                     MOVE @RUNY     FQYLUP           *1
     C                     TIME           FQTLUP           *1
     C                     MOVE 'A'       FQCHTP           *1
     C                     MOVE BJRDNB    FQLCD            *1
     C                     MOVEL@USER     FQLUID           *1
     C                     UPDATFXFWDHP0                   *1
     C                     ELSE                            X1
     C                     WRITEFXFWDHP0                   *1
     C                     END                             E1
     C           #BDA9     ENDSR
     //EJECT
      *****************************************************************
      *                                                               *
      *       TITLE:CALCULATE MIDAS DAY NO. TO DRS (YYYYMMDD) FORMAT. *
      *                                                               *
      *       SUBROUTINE ZA0710 EXPECTS FIELD '@@DAYN' TO BE          *
      *       PASSED TO IT IN 5,0 FORMAT.IF THE ABOVE FIELD IS LESS   *
      *       THAN 1 IT RETURNS 1 IN FIELD '@@RTN'.THE MAIN PROGRAM   *
      *       SHOULD CHECK FOR THIS CONDITION AND DO THE NECESSARY.   *
      *       IF '@@RTN' IS NOT EQUAL TO 1 IT RETURNS THE FIELD       *
      *       '@@VDT'  IN 'YYYYMMDD' FORMAT.                          *
      *                                                               *
      * NOTE: FIELD TO BE DEFINED BY EXTERNAL ROUTINE IS
      *                                                               *
      *       1) @@DAYN   LENGTH 5,0.                                 *
      *                                                               *
      *       FIELDS USED AND ALREADY DEFINED IN THE ROUTINE ARE:     *
      *                                                               *
      *       1) @@VDT    LENGTH 8,0 DEFINED BY A DS.                 *
      *       2) @@RTN    LENGTH 1,0.                                 *
      *       3) @@I      LENGTH 2,0 USED TO ACCESS ARRAY @YD         *
      *       4) @@J      LENGTH 2,0 USED TO ACCESS ARRAY @MD         *
      *       5) @@Z71Y   LENGTH 4,0 DEFINED BY A DS.                 *
      *       6) @@RDAY   LENGTH 5,0.                                 *
      *       7) @@LEAP   LENGTH 1,0.
      *                                                               *
      *       INDICATORS USED ARE:                                    *
      *                                                               *
      *       1) 80       CHECK FOR LOW AND EQUAL ON ARRAY @YD        *
      *       2) 81       CHECK FOR LOW ON ARRAY @MD.                 *
      *                                                               *
      * INPUT FIELD:       @@DAYN                                     *
      *                                                               *
      * OUTPUT FIELD:      @@VDT                                      *
      *                                                               *
      * WORK FIELDS:       @@RTN                                      *
      *                    @@Z71Y                                     *
      *                    @@RDAY                                     *
      *                    @@LEAP                                     *
      *                    @@I                                        *
      *                    @@J                                        *
      *                                                               *
      * ARRAYS USED:       @YD COMPILE TIME ARRAY.                    *
      *                    @MD COMPILE TIME ARRAY.                    *
      *                                                               *
      * CALLED BY:    #BDA #BDB #BE                                   *
      *****************************************************************
     C*
     C           ZA0710    BEGSR
     C*
     C                     SETOF                     8081
     C                     Z-ADD0         @@RTN   10
     C                     Z-ADD0         @@VDT
     C                     Z-ADD1         @@I     20
     C                     Z-ADD1         @@J     20
     C                     Z-ADD1         @@LEAP  10
     C*
     C           @@DAYN    IFLT 1                          B1
     C                     Z-ADD1         @@RTN            *1
     C                     GOTO ZA0719                     *1
     C                     END                             E1
     C*
     C* DIVISION TO DETERMINE WETHER LEAP YEAR.
     C*
     C           @@DAYN    DIV  1461      @@Z71Y
     C                     MVR            @@RDAY  50
     C*
     C* CALCULATING YEAR.
     C*
     C           @@Z71Y    MULT 4         @@Z71Y
     C                     ADD  1972      @@Z71Y
     C*
     C* CHECKING IF YEAR IS GREATER THAN OR EQUAL TO 2100
     C*
     C           @@Z71Y    IFGE 2100                       B1
     C                     ADD  @@SSY2    @@RDAY           *1
     C                     END                             E1
     C*
     C* LOKUP ARRAY @YD TO SEE HOW MANY YEARS OF A FOUR YEAR CYCLE
     C* HAVE PASSED.
     C*
     C           @@RDAY    LOKUP@YD,@@I                8080
     C*
     C* IF YEAR IS A LEAP YEAR SSLEAP IS SET TO ZERO.
     C*
     C           *IN80     IFEQ '0'                        B1
     C                     Z-ADD0         @@LEAP           *1
     C                     END                             E1
     C*
     C* ADD INDEX TO YEAR TO GIVE CORRECT YEAR AND ADJUST '@@RDAY'.
     C*
     C           @@LEAP    IFEQ 1                          B1
     C           @@RDAY    SUB  @YD,@@I   @@RDAY           *1
     C                     ADD  @@I       @@Z71Y           *1
     C                     END                             E1
     C*
     C* PROCESSING FOR A LEAP YEAR.
     C*
     C           @@LEAP    IFEQ 0                          B1
     C*
     C* IF '@@RDAY' = 60 DATE MUST BE 29TH OF FEBRUARY.
     C*
     C           @@RDAY    IFEQ 60                         B*2
     C                     Z-ADD29        @@Z71D           **2
     C                     Z-ADD2         @@Z71M           **2
     C                     GOTO ZA0711                     **2
     C                     END                             E*2
     C*
     C* IF '@@RDAY' > 60 DATE IS AFTER 29TH OF FEBRUARY,CONVERSION CAN
     C* PROCEED AS USUAL AFTER SUBTRACTING THE EXTRA DAY FOR THE LEAP
     C* YEAR. NOTE : '@@RDAY' < 60 CONVERSION PROCEEDS AS USUAL.
     C*
     C           @@RDAY    IFGT 60                         B*2
     C           @@RDAY    SUB  1         @@RDAY           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* IF DAY '@@DAYN' IS EXACTLY DIVISIBLE BY 1461 (NUMBER OF DAYS
     C* IN 4 YEARS) THEN DATE MUST BE LAST DAY OF PREVIOUS FOUR YEAR
     C* GROUP.
     C*
     C           @@RDAY    IFEQ 0                          B1
     C                     Z-ADD31        @@Z71D           *1
     C                     Z-ADD12        @@Z71M           *1
     C                     SUB  1         @@Z71Y           *1
     C                     GOTO ZA0711                     *1
     C                     END                             E1
     C*
     C* LOOK UP ARRAY ARRAY @MD TO DETERMINE WHICH MONTH '@@RDAY'
     C* OCCURS IN
     C*
     C           @@RDAY    LOKUP@MD,@@J                81
     C                     Z-ADD@@J       @@Z71M
     C           @@RDAY    SUB  @MD,@@J   @@Z71D
     C*
     C* DS @@VDT  IS RETURNED IN YYYYMMDD FORMAT
     C*
     C           ZA0711    TAG
     C*
     C                     MOVE @@Z71Y    @@YR
     C*
     C           ZA0719    ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BD   UPDATE FORWARD BOOK DETAILS               *
     C*                                                              *
     C*  FIELDS USED  :    @ACTD  -  DEAL ACTION DATE(CHAR)          *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @DATE1 -  DATA STRUCTURE DATE             *
     C*                    @@DTIN -  INPUT DATE FOR ZA0680           *
     C*                    @@MDNO -  OUTPUT DATE FROM ZA0680         *
     C*                    @ACTD5 -  DEAL ACTION DATE(NUM)           *
     C*                    @VDAT5 -  DEAL VALUE DATE(NUM)            *
     C*                    @ACTDB -  ACTION DATE BEFORE UPDATE(CHAR) *
     C*                    @ACDB5 -  ACTIN DATE BEFORE UPDATE(NUM)   *
     C*                    @VDTB5 -  VALUE DATE BEFORE UPDATE(NUM)   *
     C*                    @ACTR  -  RELATED DEAL ACTION DATE(CHAR)  *
     C*                    @ACDR5 -  RELATED DEAL ACTION DATE(NUM)   *
     C*                    @VDTR5 -  RELATED DEAL VALUE DATE(NUM)    *
     C*                    @DOFLG -  PROCESSING FLAG                 *
     C*                    @BUYA  -  DEAL BUY AMOUNT                 *
     C*                    @SELA  -  DEAL SELL AMOUNT                *
     C*                    @RREV  -  REVERSE INDICATOR               *
     C*                    @RCCY  -  CURRENCY FOR SUBROUTINE         *
     C*                    @RAMT  -  AMOUNT FOR SUBROUTINE           *
     C*                    @RBCD  -  BCDE FOR SUBROUTINE             *
     C*                    @RACT  -  ACTION DATE FOR SUBROUTINE      *
     C*                    @RDELB -  RELATED DEAL BCE                *
     C*                    @BUYC  -  DEAL BUY CURRENCY               *
     C*                    @SELC  -  DEAL SELL CURRENCY              *
     C*                    @TDOWN -  TAKEDOWN PROPORTION             *
     C*                    @B12   -  BUY FLAG                        *
     C*                    @S12   -  SELL FLAG                       *
     C*                    @R12   -  BUY/SELL FLAG FOR SUBROUTINE    *
     C*                    @BUYSL -  BUY OR SELL CCY PROCESS IND     *
     C*                                                              *
     C*  CALLED BY :       #B  MAIN PROCESSING                       *
     C*                                                              *
     C*  CALLS :           #BDA #BDB ZA0680                          *
     C*                                                              *
     C****************************************************************
     C           #BD       BEGSR
     C*
     C** GET ACTION DATE AND CONVERT TO 5N
     C                     MOVE F3VDYY    @D1YY
     C                     MOVE F3VDMM    @D1MM
     C                     MOVE F3VDDD    @D1DD
     C                     MOVE @DATE1    @ACTD   80
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'N'                        *1
     C                     MOVE F3DOEY    @D1YY            *1
     C                     MOVE F3DOEM    @D1MM            *1
     C                     MOVE F3DOED    @D1DD            *1
     C                     MOVE @DATE1    @ACTD            *1
     C                     END                             E1
     C                     MOVE @ACTD     @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BD9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @ACTD5  50       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACTD5           *1
     C                     END                             E1
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'Y'                        *1
     C           @VDAT5    ANDLTBJRDNB                     *1
     C                     MOVE BJRDNB    @ACTD5           *1
     C                     END                             E1
     C*
     C** GET BEFORE ACTION DATE AND CONVERT TO 5N
     C                     MOVE F3BVDT    @ACTDB  80
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'N'                        *1
     C                     MOVE F3BOTD    @ACTDB           *1
     C                     END                             E1
     C                     MOVE @ACTDB    @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BD9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @ACDB5  50       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACDB5           *1
     C                     END                             E1
     C*
     C** CONVERT VALUE DATE TO 5N
     C                     MOVE F3BVDT    @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BD9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @VDTB5  50       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @VDTB5           *1
     C                     END                             E1
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'Y'                        *1
     C           @VDTB5    ANDLTBJRDNB                     *1
     C                     MOVE BJRDNB    @ACDB5           *1
     C                     END                             E1
     C*
     C** GET RELATED ACTION DATE AND CONVERT TO 5N
     C           F3DTYP    IFEQ 'T'                        B1
     C           F3DTYP    OREQ 'S'                        *1
     C                     MOVE F3RVDT    @ACTR            *1
     C           F3DTYP    IFEQ 'T'                        B*2
     C           EROVDI    ANDEQ'N'                        **2
     C                     MOVE F3ROTD    @ACTR   80       **2
     C                     END                             E*2
     C                     MOVE @ACTR     @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @ACDR5  50       **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @ACDR5           **2
     C                     END                             E*2
     C*
     C** CONVERT RELATED VALUE DATE TO 5N
     C                     MOVE F3RVDT    @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @VDTR5  50       **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @VDTR5           **2
     C                     END                             E*2
     C           F3DTYP    IFEQ 'T'                        B*2
     C           EROVDI    ANDEQ'Y'                        **2
     C           @VDTR5    ANDLTBJRDNB                     **2
     C                     MOVE BJRDNB    @ACDR5           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** Initialise forward book file keys array, process count
     C** and array index.
     C                     MOVE *BLANK    @FK
     C                     Z-ADD*ZERO     @C      20
     C                     Z-ADD*ZERO     @X      20
     C*
     C** Set up forward book file keys array with currency/date/
     C** sequence number for each update required.
     C** (there will be up to 14 events)
     C*
     C** IF INSERT OR AMEND WITH CHANGES
     C                     MOVE 'N'       @DOFLG  1
     C           F3LACT    IFEQ 'I'                        B1
     C                     MOVE 'Y'       @DOFLG           *1
     C                     END                             E1
     C*
     C** iii) check if insertion of new deal amounts, etc is
     C**      required.
     C           @DOFLG    IFEQ 'Y'                        B1
     C           @ACTD5    ANDGEBJRDNB                     A1
     C*
     C**     set up key for new buy currency record.
     C                     MOVE @BUYC     @FBCY            *1
     C                     MOVE @ACTD5    @FBDT            *1
     C                     MOVE '05'      @FBSQ            *1
     C                     MOVE @FBKE     @FK,5            *1
     C                     ADD  1         @C               *1
     C*
     C**     set up key for new sell currency record.
     C                     MOVE @SELC     @FBCY            *1
     C                     MOVE @ACTD5    @FBDT            *1
     C                     MOVE '06'      @FBSQ            *1
     C                     MOVE @FBKE     @FK,6            *1
     C                     ADD  1         @C               *1
     C*
     C                     END                             E1
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B1
     C           @ACDR5    ANDGEBJRDNB                     *1
     C*
     C**  iv) check if insertion of takedown - ie. removal of
     C**      part of option.
     C           F3LACT    IFEQ 'I'                        B*2
     C*
     C**     set up key for new option buy currency record.
     C                     MOVE @BUYC     @FBCY            **2
     C                     MOVE @ACDR5    @FBDT            **2
     C                     MOVE '07'      @FBSQ            **2
     C                     MOVE @FBKE     @FK,7            **2
     C                     ADD  1         @C               **2
     C*
     C**     set up key for new option sell currency record.
     C                     MOVE @SELC     @FBCY            **2
     C                     MOVE @ACDR5    @FBDT            **2
     C                     MOVE '08'      @FBSQ            **2
     C                     MOVE @FBKE     @FK,8            **2
     C                     ADD  1         @C               **2
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C** Sort forward book file keys array in ascending order.
     C** (SORTA will place empty elements at front of array)
     C                     SORTA@FK
     C*
     C** Calculate array index of first required event.
     C           15        SUB  @C        @X
     C*
     C** Execute DO processing for the number of required events.
     C                     DO   @C                         B1
     C*
     C** Move array element into array element data structure.
     C                     MOVE @FK,@X    @FBKE            *1
     C*
     C** iii) insertion of new deal amounts, etc.
     C*
     C** FOR BUY CCY
     C           @FBSQ     IFEQ '05'                       B*2
     C                     MOVE ' '       @RREV   1        **2
     C                     MOVE @BUYC     @RCCY   3        **2
     C                     MOVE @BUYA     @RAMT  150       **2
     C                     MOVE F3BCDE    @RBCD  150       **2
     C                     MOVE @ACTD5    @RACT            **2
     C                     EXSR #BDA                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     GOTO #BD7                       **2
     C                     END                             E*2
     C*
     C** FOR SELL CCY
     C           @FBSQ     IFEQ '06'                       B*2
     C                     MOVE ' '       @RREV            **2
     C                     MOVE @SELC     @RCCY            **2
     C                     MOVE @SELA     @RAMT            **2
     C                     MOVE F3BCDE    @RBCD            **2
     C                     MOVE @ACTD5    @RACT            **2
     C                     EXSR #BDA                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     GOTO #BD7                       **2
     C                     END                             E*2
     C*
     C**  iv) insertion of takedown - use 'removal of option
     C*       takedown' schedules to remove part of the option.
     C*
     C** FOR BUY CCY CURRENT AMOUNTS
     C           @FBSQ     IFEQ '07'                       B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION
     C           F3DAM1    DIV  F3OOFA    @TDOWN 109H      **2
     C*
     C                     MOVE ' '       @RREV            **2
     C                     MOVE @BUYC     @RCCY            **2
     C                     MOVE @BUYA     @RAMT            **2
     C                     MOVE @B12      @R12    1        **2
     C                     MOVE F3BCDE    @RBCD            **2
     C                     MOVE @ACDR5    @RACT            **2
     C                     MOVE F3DAM1    @RTPA1 150       **2
     C                     EXSR #BDB                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     GOTO #BD7                       **2
     C                     END                             E*2
     C*
     C** FOR SELL CCY CURRENT AMOUNTS
     C           @FBSQ     IFEQ '08'                       B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION
     C           F3DAM1    DIV  F3OOFA    @TDOWN    H      **2
     C*
     C                     MOVE ' '       @RREV            **2
     C                     MOVE @SELC     @RCCY            **2
     C                     MOVE @SELA     @RAMT            **2
     C                     MOVE @S12      @R12    1        **2
     C                     MOVE F3BCDE    @RBCD            **2
     C                     MOVE @ACDR5    @RACT            **2
     C                     EXSR #BDB                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     GOTO #BD7                       **2
     C                     END                             E*2
     C*
     C** FOR BUY CCY
     C           @FBSQ     IFEQ '13'                       B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION
     C           F3DAM1    DIV  F3OOFA    @TDOWN    H      **2
     C*
     C                     MOVE ' '       @RREV            **2
     C                     MOVE @BUYC     @RCCY            **2
     C                     MOVE @BUYA     @RAMT            **2
     C                     MOVE @B12      @R12             **2
     C                     MOVE F3BCDE    @RBCD            **2
     C                     MOVE @ACDR5    @RACT   80       **2
     C                     MOVE F3DAM1    @RTPA1           **2
     C                     EXSR #BDB                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     GOTO #BD7                       **2
     C                     END                             E*2
     C*
     C*
     C** FXR0048 & FXR0049 FOR SELL CCY
     C           @FBSQ     IFEQ '14'                       B*2
     C*
     C** CALCULATE TAKEDOWN PROPORTION
     C           F3DAM1    DIV  F3OOFA    @TDOWN    H      **2
     C*
     C                     MOVE ' '       @RREV            **2
     C                     MOVE @SELC     @RCCY            **2
     C                     MOVE @SELA     @RAMT            **2
     C                     MOVE @S12      @R12             **2
     C                     MOVE F3BCDE    @RBCD            **2
     C                     MOVE @ACDR5    @RACT            **2
     C                     EXSR #BDB                       **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BD9                       ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C           #BD7      TAG                             *1
     C                     ADD  1         @X               *1
     C                     END                             E1
     C*
     C           #BD9      ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BE   UPDATE EQUIVALENTS POSITIONS AND PROFITS  *
     C*                                                              *
     C*  FIELDS USED  :    @ACTD  -  DEAL ACTION DATE(CHAR)          *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @DATE1 -  DATA STRUCTURE DATE             *
     C*                    @@DTIN -  INPUT DATE FOR ZA0680           *
     C*                    @@MDNO -  OUTPUT DATE FROM ZA0680         *
     C*                    @ACTD5 -  DEAL ACTION DATE(NUM)           *
     C*                    @VDAT  -  DEAL VALUE DATE(CHAR)           *
     C*                    @VDAT5 -  DEAL VALUE DATE(NUM)            *
     C*                    @@DAYN -  INPUT DATE FOR ZA0710           *
     C*                    @@RTN  -  RETURN FLAG FROM ZA0710         *
     C*                    @@VDT  -  OUTPUT DATE FROM ZA0710         *
     C*                    @ACTDB -  ACTION DATE BEFORE UPDATE(CHAR) *
     C*                    @ACDB5 -  ACTIN DATE BEFORE UPDATE(NUM)   *
     C*                    @VDTB5 -  VALUE DATE BEFORE UPDATE(NUM)   *
     C*                    @ACTR  -  RELATED DEAL ACTION DATE(CHAR)  *
     C*                    @ACTR5 -  RELATED DEAL ACTION DATE(NUM)   *
     C*                    @VDTR5 -  RELATED DEAL VALUE DATE(NUM)    *
     C*                    @DOFLG -  PROCESSING FLAG                 *
     C*                    @BUYA  -  DEAL BUY AMOUNT                 *
     C*                    @SELA  -  DEAL SELL AMOUNT                *
     C*                    @RREV  -  REVERSE INDICATOR               *
     C*                    @RCCY  -  CURRENCY FOR SUBROUTINE         *
     C*                    @RAMT  -  AMOUNT FOR SUBROUTINE           *
     C*                    @RBCD  -  BCDE FOR SUBROUTINE             *
     C*                    @RACT  -  ACTION DATE FOR SUBROUTINE      *
     C*                    @RDBCE -  BCDE FOR SUBROUTINE             *
     C*                    @RAMTO -  OPTION ORIGINAL AMT FOR SUBR'TINE
     C*                    @BUYC  -  DEAL BUY CURRENCY               *
     C*                    @SELC  -  DEAL SELL CURRENCY              *
     C*                    @TDOWN -  TAKEDOWN PROPORTION             *
     C*                    @B12   -  BUY FLAG                        *
     C*                    @S12   -  SELL FLAG                       *
     C*                    @R12   -  BUY/SELL FLAG FOR SUBROUTINE    *
     C*                    @NPA   -  NET POSITION ADJUSTMENT         *
     C*                    @DBCEA -  DBCE ADJUSTMENT                 *
     C*                    @DSBCA -  DSBCE ADJUSTMENT                *
     C*                    @OPTPL -  OPTION DEAL P/L                 *
     C*                    @DELPL -  DEAL P/L                        *
     C*                    @ABNPA -  BUY CCY NET POSITION ADJUSTMENT *
     C*                    @ABDBC -  BUY CCY DBCE ADJUSTMENT         *
     C*                    @ABDSB -  BUY CCY DSBCE ADJUSTMENT        *
     C*                    @ABOPL -  BUY CCY OPTION DEAL P/L         *
     C*                    @ABDPL -  BUY CCY DEAL P/L                *
     C*                    @ASNPA -  SELL CCY NET POSITION ADJUSTMENT*
     C*                    @ASDBC -  SELL CCY DBCE ADJUSTMENT        *
     C*                    @ASDSB -  SELL CCY DSBCE ADJUSTMENT       *
     C*                    @ASOPL -  SELL CCY OPTION DEAL P/L        *
     C*                    @ASDPL -  SELL CCY DEAL P/L               *
     C*                    @RNPA  -  NET POSN ADJ FOR SUBROUTINE     *
     C*                    @RDBC  -  DBCE ADJUSTMENT FOR SUBROUTINE  *
     C*                    @RDSB  -  DSBCE ADJUSTMENT FOR SUBROUTINE *
     C*                    @ROPL  -  OPTION DEAL P/L FOR SUBROUTINE  *
     C*                    @RDPL  -  DEAL P/L FOR SUBROUTINE         *
     C*                    @TBNPA -  TOTAL BUY CCY NET POSN ADJ      *
     C*                    @TBDBC -  TOTAL BUY CCY DBCE ADJUSTMENT   *
     C*                    @TBDSB -  TOTAL BUY CCY DSBCE ADJUSTMENT  *
     C*                    @TSNPA -  TOTAL SELL CCY NET POSN ADJ     *
     C*                    @TSDBC -  TOTAL SELL CCY DBCE ADJUSTMENT  *
     C*                    @TSDSB -  TOTAL SELL CCY DSBCE ADJUSTMENT *
     C*                    @BUYSL -  BUY OR SELL PROCESS INDICATOR   *
     C*                                                              *
     C*  CALLED BY :       #B   MAIN PROCESSING                      *
     C*                                                              *
     C*  CALLS :           #BEA #BEB #BEE #BEH                       *
     C*                    ZA0680 ZA0710                             *
     C*                                                              *
     C****************************************************************
     C           #BE       BEGSR
     C*
     C** GET ACTION DATE AND CONVERT TO 5N
     C                     MOVE F3VDYY    @D1YY
     C                     MOVE F3VDMM    @D1MM
     C                     MOVE F3VDDD    @D1DD
     C                     MOVE @DATE1    @ACTD
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'N'                        *1
     C                     MOVE F3DOEY    @D1YY            *1
     C                     MOVE F3DOEM    @D1MM            *1
     C                     MOVE F3DOED    @D1DD            *1
     C                     MOVE @DATE1    @ACTD            *1
     C                     END                             E1
     C                     MOVE @ACTD     @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @ACTD5           *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACTD5           *1
     C                     END                             E1
     C*
     C** CONVERT VALUE DATE TO 5N
     C                     MOVE @VDAT     @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @VDAT5           *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @VDAT5           *1
     C                     END                             E1
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'Y'                        *1
     C           BJRDNB    IFGT @VDAT5                     B*2
     C                     MOVE BJRDNB    @ACTD5           **2
     C                     ELSE                            X*2
     C                     MOVE @VDAT5    @ACTD5           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** GET ACTION DATE IN YYYYMMDD FORM
     C                     MOVE @ACTD5    @@DAYN
     C           @@DAYN    IFNE *ZEROS                     B1
     C                     EXSR ZA0710                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C** IF RETURN IS SET THEN DATABASE ERROR
     C           @@RTN     IFEQ 1                          B*2
     C**  Set up error output
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL*BLANKS   DBFILE           * DB ERROR 026*
     C                     MOVEL'026'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@VDT     @ACTD            *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACTD            *1
     C                     END                             E1
     C*
     C** GET BEFORE ACTION DATE AND CONVERT TO 5N
     C                     MOVE F3BVDT    @ACTDB
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'N'                        *1
     C                     MOVE F3BOTD    @ACTDB           *1
     C                     END                             E1
     C                     MOVE @ACTDB    @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @ACDB5           *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACDB5           *1
     C                     END                             E1
     C*
     C** CONVERT VALUE DATE TO 5N
     C                     MOVE F3BVDT    @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @VDTB5           *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @VDTB5           *1
     C                     END                             E1
     C           F3DTYP    IFEQ 'O'                        B1
     C           EROVDI    ANDEQ'Y'                        *1
     C           BJRDNB    IFGT @VDTB5                     B*2
     C                     MOVE BJRDNB    @ACDB5           **2
     C                     ELSE                            X*2
     C                     MOVE @VDAT5    @ACDB5           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** GET BEFORE ACTION DATE IN YYYYMMDD FORM
     C                     MOVE @ACDB5    @@DAYN
     C           @@DAYN    IFNE *ZEROS                     B1
     C                     EXSR ZA0710                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C** IF RETURN IS SET THEN DATABASE ERROR
     C           @@RTN     IFEQ 1                          B*2
     C**  Set up error output for screen.
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL*BLANKS   DBFILE           * DB ERROR 027*
     C                     MOVEL'027'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C                     MOVE @@VDT     @ACTDB           *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ACTDB           *1
     C                     END                             E1
     C*
     C** GET RELATED DEAL ACTION DATE AND CONVERT TO 5N
     C** ONLY IF DEAL IS A TAKEDOWN OR A SWAP
     C           F3DTYP    IFEQ 'T'                        B1
     C           F3DTYP    OREQ 'S'                        *1
     C                     MOVE F3RVDT    @ACTR            *1
     C           F3DTYP    IFEQ 'T'                        B*2
     C           EROVDI    ANDEQ'N'                        **2
     C                     MOVE F3ROTD    @ACTR            **2
     C                     END                             E*2
     C                     MOVE @ACTR     @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BE9                       ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @ACTR5  50       **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @ACTR5           **2
     C                     END                             E*2
     C*
     C** CONVERT RELATED VALUE DATE TO 5N
     C                     MOVE F3RVDT    @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BE9                       ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @VDTR5           **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @VDTR5           **2
     C                     END                             E*2
     C           F3DTYP    IFEQ 'T'                        B*2
     C           EROVDI    ANDEQ'Y'                        **2
     C           BJRDNB    IFGT @VDTR5                     B**3
     C                     MOVE BJRDNB    @ACTR5           ***3
     C                     ELSE                            X**3
     C                     MOVE @VDTR5    @ACTR5           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** GET ACTION DATE IN YYYYMMDD FORM
     C                     MOVE @ACTR5    @@DAYN           *1
     C           @@DAYN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0710                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BE9                       ***3
     C                     END                             E**3
     C** IF RETURN IS SET THEN DATABASE ERROR
     C           @@RTN     IFEQ 1                          B**3
     C**  Set up error output for screen.
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL*BLANKS   DBFILE           * DB ERROR 036*
     C                     MOVEL'036'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #BE9                       ***3
     C                     END                             E**3
     C                     MOVE @@VDT     @ACTR            **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @ACTR            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** to stop program locking problem do the update twice
     C** once for buy and once for sell currency. The currency
     C** is sorted alphabatically and the lowest currency is done
     C** on the first DO.
     C                     MOVE ' '       @BUYSL  1
     C           @BUYC     IFLT @SELC                      B1
     C                     MOVE 'B'       @BUYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @BUYSL           *1
     C                     END                             E1
     C*
     C                     DO   2                          B1
     C** IF DEAL TYPE INDICATOR NE T
     C           F3DTYP    IFNE 'T'                        B*2
     C*
     C** IF INSERT ADD IN EXPOSURES FOR THIS DEAL
     C           F3LACT    IFEQ 'I'                        B**3
     C*
     C** check buy/sell indicator before start of update
     C           @BUYSL    IFEQ 'B'                        B***4
     C                     MOVE @BUYC     @RCCY            ****4
     C                     MOVE @BUYA     @RAMT            ****4
     C                     EXSR #BEB                       ****4
     C           *INU7     IFEQ '1'                        B****5
     C                     GOTO #BE9                       *****5
     C                     END                             E****5
     C                     ELSE                            X***4
     C                     MOVE @SELC     @RCCY            ****4
     C                     MOVE @SELA     @RAMT            ****4
     C                     EXSR #BEB                       ****4
     C           *INU7     IFEQ '1'                        B****5
     C                     GOTO #BE9                       *****5
     C                     END                             E****5
     C                     END                             E***4
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B*2
     C*
     C           @BUYSL    IFEQ 'B'                        B**3
     C** CALCULATE TAKEDOWN PROPORTION
     C           F3DAM1    DIV  F3OOFA    @TDOWN    H      ***3
     C*
     C** PROCESS CALCULATE ADJUSTMENTS FOR BUY CCY
     C                     MOVE @BUYC     @RCCY            ***3
     C                     MOVE @BUYA     @RAMT            ***3
     C                     MOVE @ACTD     @RACT            ***3
     C                     MOVE F3BCDE    @RDBCE 150       ***3
     C                     MOVE F3DSBE    @RDSBE 150       ***3
     C           @B12      IFEQ '1'                        B***4
     C                     MOVE F3OOFA    @RAMTO 150       ****4
     C                     ELSE                            X***4
     C                     MOVE F3OOSA    @RAMTO           ****4
     C                     END                             E***4
     C                     MOVE @B12      @R12             ***3
     C                     EXSR #BEA                       ***3
     C           *INU7     IFEQ '1'                        B***4
     C                     GOTO #BE9                       ****4
     C                     END                             E***4
     C*
     C** SAVE VALUES OF BUY CCY FIELDS
     C                     MOVE @NPA      @ABNPA 150       ***3
     C                     MOVE @DBCEA    @ABDBC 150       ***3
     C                     MOVE @DSBCA    @ABDSB 150       ***3
     C*
     C** PUT SAVE VALUES INTO SUBROUTINE FIELDS
     C                     MOVE @ABNPA    @RNPA  150       ***3
     C                     MOVE @ABDBC    @RDBC  150       ***3
     C                     MOVE @ABDSB    @RDSB  150       ***3
     C*
     C** IF INSERT UPDATE FXEPOULL
     C           F3LACT    IFEQ 'I'                        B***4
     C                     EXSR #BEE                       ****4
     C           *INU7     IFEQ '1'                        B****5
     C                     GOTO #BE9                       *****5
     C                     END                             E****5
     C                     END                             E***4
     C                     ELSE                            X**3
     C*
     C** PROCESS CALCULATE ADJUSTMENTS FOR SEL CCY
     C                     MOVE @SELC     @RCCY            ***3
     C                     MOVE @SELA     @RAMT            ***3
     C                     MOVE @ACTD     @RACT            ***3
     C                     MOVE F3BCDE    @RDBCE           ***3
     C                     MOVE F3DSBE    @RDSBE           ***3
     C           @S12      IFEQ '1'                        B***4
     C                     MOVE F3OOFA    @RAMTO           ****4
     C                     ELSE                            X***4
     C                     MOVE F3OOSA    @RAMTO           ****4
     C                     END                             E***4
     C                     MOVE @S12      @R12             ***3
     C                     EXSR #BEA                       ***3
     C           *INU7     IFEQ '1'                        B***4
     C                     GOTO #BE9                       ****4
     C                     END                             E***4
     C*
     C** SAVE VALUES OF SELL CCY FIELDS
     C                     MOVE @NPA      @ASNPA 150       ***3
     C                     MOVE @DBCEA    @ASDBC 150       ***3
     C                     MOVE @DSBCA    @ASDSB 150       ***3
     C*
     C** PUT SAVED FIELDS INTO SUBROUTINE FIELDS
     C                     MOVE @ASNPA    @RNPA  150       ***3
     C                     MOVE @ASDBC    @RDBC  150       ***3
     C                     MOVE @ASDSB    @RDSB  150       ***3
     C*
     C** IF INSERT UPDATE FXEPOULL
     C           F3LACT    IFEQ 'I'                        B***4
     C                     EXSR #BEE                       ****4
     C           *INU7     IFEQ '1'                        B****5
     C                     GOTO #BE9                       *****5
     C                     END                             E****5
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C** change buy/sell indicator for second round of update
     C           @BUYSL    IFEQ 'B'                        B*2
     C                     MOVE 'S'       @BUYSL           **2
     C                     ELSE                            X*2
     C                     MOVE 'B'       @BUYSL           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** CROSS CURRENCIES POSITION UPDATE PROCESSING
     C*
     C** If first currency of deal is not base currency for
     C** dealing check cross currency file to see whether
     C** a position is being kept for this currency combination.
     C*
     C           F3CCY1    IFNE BNCYDL                     B1
     C*
     C                     MOVE F3CCY1    @CPCCY
     C                     MOVE F3CCY2    @CSCCY
     C*
     C           @CCKEY    CHAINFXCRSCLL             67
     C*
     C** If record found then a position is being kept
     C** which needs updating for this deal.
     C*
     C           *IN67     IFEQ '0'                        B*2
     C*
     C                     MOVE F3CCY2    @RCCY
     C                     MOVE F3CCY2    @EECCY
     C                     MOVE F3CCY1    @EPCCY
     C                     Z-ADDF3DAM2    @CCAMT 150
     C                     Z-ADDF3DAM1    @CCEQV 150
     C                     Z-ADDF3DSEL    @CCOAM 150
     C                     Z-ADDF3DBUY    @CCOEQ 150
     C*
     C                     EXSR #BEH
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C** If second currency of deal is not base currency for
     C** dealing check cross currency file to see whether
     C** a position is being kept for this currency combination.
     C*
     C           F3CCY2    IFNE BNCYDL                     B1
     C*
     C                     MOVE F3CCY2    @CPCCY
     C                     MOVE F3CCY1    @CSCCY
     C*
     C           @CCKEY    CHAINFXCRSCLL             67
     C*
     C** If record found then a position is being kept
     C** which needs updating for this deal.
     C*
     C           *IN67     IFEQ '0'                        B*2
     C*
     C                     MOVE F3CCY1    @RCCY
     C                     MOVE F3CCY1    @EECCY
     C                     MOVE F3CCY2    @EPCCY
     C                     Z-ADDF3DAM1    @CCAMT 150
     C                     Z-ADDF3DAM2    @CCEQV 150
     C                     Z-ADDF3DBUY    @CCOAM 150
     C                     Z-ADDF3DSEL    @CCOEQ 150
     C*
     C                     EXSR #BEH
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C           #BE9      ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BEA  CALCULATE ADJUSTMENTS                     *
     C*                                                              *
     C*  FIELDS USED :     @NPA   -  NET POSITION ADJUSTMENT         *
     C*                    @DBCEA -  DBCE ADJUSTMENT                 *
     C*                    @DSBCA -  DSBCE ADJUSTMENT                *
     C*                    @RDBCE -  BCDE                            *
     C*                    @RDSBE -  DSBE                            *
     C*                    @RAMTO -  OPTION ORIGINAL AMT             *
     C*                    @RAMT  -  DEAL AMOUNT                     *
     C*                    @RDELB -  RELATED DEAL BCE                *
     C*                    @WORK1 -  WORK FIELD                      *
     C*                    @ACTR  -  RELATED DEAL ACTION DATE        *
     C*                    @RCCY  -  CURRENCY                        *
     C*                    @RDELB -  RELATED DEAL BCE                *
     C*                    @OPTPL -  OPTION DEAL P/L                 *
     C*                    @DELPL -  DEAL P/L                        *
     C*                    @RACT  -  ACTION DATE                     *
     C*                                                              *
     C*  CALLED BY :       #BE  UPDATE EQUIV POSITIONS & PROFITS     *
     C*                                                              *
     C*                                                              *
     C****************************************************************
     C           #BEA      BEGSR
     C*
     C** IF CURRENCY IS DEAL 1ST CURRENCY
     C           @R12      IFEQ '1'                        B1
     C           F3LACT    ANDNE'A'                        *1
     C                     Z-ADD0         @NPA   150       *1
     C                     Z-ADD0         @DBCEA 150       *1
     C                     Z-ADD0         @DSBCA 150       *1
     C*
     C** IF CURRENCY IS DEAL 2ND CURRENCY
     C                     ELSE                            X1
     C*
     C** NET POSITION ADJUSTMENT
     C** IF THIS IS A TAKEDOWN DON'T WANT TO ADD IN THIS AGAIN
     C** BECAUSE THIS IS A TOTAL - ALREADY IN
     C           F3LACT    IFNE 'A'                        B*2
     C           @TDOWN    MULT F3OOSA    @WORK1 150H      **2
     C           @RAMT     SUB  @WORK1    @NPA             **2
     C                     ELSE                            X*2
     C                     Z-ADD0         @NPA             **2
     C                     END                             E*2
     C*
     C** DEALT BASE CCY EQUIV
     C*
     C** DEALT SPOT BASE CCY EQUIV
     C           @RDSBE    SUB  @WORK1    @DSBCA           *1
     C*
     C                     END                             E1
     C*
     C           #BEA9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BEB  UPDATE FXEPOULL                           *
     C*                    ADD IN EXPOSURES FOR THIS DEAL            *
     C*                    CURRENT AMOUNTS AND NOT REVERSING SIGNS   *
     C*                                                              *
     C*  FIELDS USED :     @RCCY  -  CURRENCY                        *
     C*                    @ACTD5 -  ACTION DATE                     *
     C*                    @RAMT  -  AMOUNT                          *
     C*                    @FWD5  -  1 MONTH FORWARD DATE LOCAL CCY  *
     C*                    @ACTD  -  ACTION DATE(CHAR)               *
     C*                    @@CCY  -  INPUT CCY FOR ZA0620            *
     C*                    @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                                                              *
     C*  CALLED BY :       #BE  UPDATE EQUIV POSITIONS & PROFITS     *
     C*                                                              *
     C*  CALLS :           #ZD                                       *
     C*                                                              *
     C****************************************************************
     C           #BEB      BEGSR
     C*
     C** ACCESS FXEPOULL
     C           @RCCY     CHAINFXEPOULL             66
     C           *IN66     IFEQ '1'                        B1
     C*
     C** CREATE A ZERO RECORD FOR FXEPOSP0
     C                     EXSR #ZD                        *1
     C                     END                             E1
     C                     MOVE @RCCY     FOCCY
     C*
     C** IF ACTION DATE LT RUN DATE
     C           @ACTD5    IFLT BJRDNB                     B1
     C           FONNCP    ADD  @RAMT     FONNCP           *1
     C*
     C           @RAMT     IFGE 0                          B*2
     C           FONDBC    ADD  F3BCDE    FONDBC           **2
     C                     ELSE                            X*2
     C           FONDBC    SUB  F3BCDE    FONDBC           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C           FOTNTP    ADD  @RAMT     FOTNTP
     C*
     C           @RAMT     IFGE 0                          B1
     C           FOTDPE    ADD  F3BCDE    FOTDPE           *1
     C                     ELSE                            X1
     C           FOTDPE    SUB  F3BCDE    FOTDPE           *1
     C                     END                             E1
     C*
     C           @RAMT     IFGE 0                          B1
     C           FOBDSE    ADD  F3DSBE    FOBDSE           *1
     C                     ELSE                            X1
     C           FOBDSE    SUB  F3DSBE    FOBDSE           *1
     C                     END                             E1
     C                     MOVE @RCCY     @@CCY
     C*
     C**  CALCULATE PROFIT/LOSS FIGURES
     C           1         OCUR @PRLOS
     C           @RCCY     IFNE @PCCY                      B1
     C           2         OCUR @PRLOS                     *1
     C                     END                             E1
     C*
     C** ONLY ADD AJUSTMENTS TO FILE FIELDS IF NOT ALREADY DONE
     C           @ADJAD    IFEQ 'N'                        B1
     C                     ADD  @SPLO     FOSHPL           *1
     C                     ADD  @FPLO     FOFWPL           *1
     C                     MOVE 'Y'       @ADJAD           *1
     C                     END                             E1
     C*
     C           *IN66     IFEQ '1'                        B1
     C                     WRITEFXEPOSP0                   *1
     C                     ELSE                            X1
     C                     MOVE @RUND     FODLUP           *1
     C                     MOVE @RUNM     FOMLUP           *1
     C                     MOVE @RUNY     FOYLUP           *1
     C                     TIME           FOTLUP           *1
     C                     MOVE 'A'       FOCHTP           *1
     C                     MOVE BJRDNB    FOLCD            *1
     C                     MOVEL@USER     FOLUID           *1
     C                     UPDATFXEPOSP0                   *1
     C                     END                             E1
     C           #BEB9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BAC UPDATE DEALS FILE SCHEDULE                 *
     C*                                                              *
     C*  FIELDS USED :     @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                    @DATE1 -  DATA STRUCTURE DATE             *
     C*                                                              *
     C*  CALLED BY :       #BA UPDATE DEALS FILE                     *
     C*                                                              *
     C*  CALLS :                                                     *
     C*                                                              *
     C****************************************************************
     C           #BAC      BEGSR
     C*
     C** FXDEALPP record already set up in input cycle. Only need to
     C** set up fields specific to treasury management here.
     C*
     C** Only do any processing if the current deal has not already been
     C** taken on; this allows for restarting.
     C           FHDSBE    IFEQ *ZERO                      B1
     C           FHBCDE    OREQ *ZERO
     C*
     C                     MOVE F3BCDE    FHBCDE
     C                     MOVE F3DSBE    FHDSBE
     C*
     C                     UPDATFXDEALP0                   *1
     C*
     C                     END                             E1
     C*
     C           #BAC9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BEE  UPDATE FXEPOULL                           *
     C*                    NOT REVERSING SIGNS                       *
     C*                                                              *
     C*  FIELDS USED :     @RCCY  -  CURRENCY                        *
     C*                    @ACTD5 -  ACTION DATE                     *
     C*                    @RAMT  -  AMOUNT                          *
     C*                    @FWD5  -  1 MONTH FORWARD DATE LOCAL CCY  *
     C*                    @ACTR5 -  ACTION DATE RELATED DEAL        *
     C*                    @VDAT5 -  DEAL VALUE DATE                 *
     C*                    @RNPA  -  NET POSITION ADJUSTMENT         *
     C*                    @RDBC  -  DBCE ADJUSTMENT                 *
     C*                    @RDSB  -  DSBCE ADJUSTMENT                *
     C*                    @ROPL  -  OPTION P/L ADJUSTMENT           *
     C*                    @RDPL  -  DEAL P/L ADJUSTMENT             *
     C*                    @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                                                              *
     C*  CALLED BY :       #BE  UPDATE EQUIV POSITIONS & PROFITS     *
     C*                                                              *
     C*  CALLS :           #ZD                                       *
     C*                                                              *
     C****************************************************************
     C           #BEE      BEGSR
     C*
     C** ACCESS FXEPOULL
     C           @RCCY     CHAINFXEPOULL             66
     C           *IN66     IFEQ '1'                        B1
     C*
     C** CREATE A ZERO RECORD FOR FXEPOUP0
     C                     EXSR #ZD                        *1
     C                     END                             E1
     C                     MOVE @RCCY     FOCCY
     C           @ACTD5    IFLT BJRDNB                     B1
     C           FONNCP    ADD  @RAMT     FONNCP           *1
     C           @RAMT     IFGE 0                          B*2
     C           FONDBC    ADD  F3BCDE    FONDBC           **2
     C                     ELSE                            X*2
     C           FONDBC    SUB  F3BCDE    FONDBC           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** TOTAL NET POSITION
     C           FOTNTP    ADD  @RNPA     FOTNTP
     C*
     C*   FOR BUY CCY
     C           @BUYC     IFEQ @RCCY                      B1
     C           FOTDPE    ADD  @RDBC     FOTDPE           *1
     C*
     C*   FOR SELL CCY
     C                     ELSE                            X1
     C           FOTDPE    SUB  @RDBC     FOTDPE           *1
     C                     END                             E1
     C*
     C**  FOR OPTION TAKEDOWNS MUST INVERT THE SIGN OF THE
     C**  SELL ADJUSTMENT. B'COS ALL BCE ARE +VE ON DEALS FILE
     C           F3DTYP    IFEQ 'T'                        B1
     C           @RAMT     ANDLT0                          *1
     C                     Z-SUB@RDSB     @RDSB            *1
     C                     END                             E1
     C*
     C           FOBDSE    ADD  @RDSB     FOBDSE
     C*
     C**  CALCULATE PROFIT/LOSS FIGURES
     C           1         OCUR @PRLOS
     C           @RCCY     IFNE @PCCY                      B1
     C           2         OCUR @PRLOS                     *1
     C                     END                             E1
     C*
     C** ONLY ADD AJUSTMENTS TO FILE FIELDS IF NOT ALREADY DONE
     C           @ADJAD    IFEQ 'N'                        B1
     C                     ADD  @SPLO     FOSHPL           *1
     C                     ADD  @FPLO     FOFWPL           *1
     C                     MOVE 'Y'       @ADJAD           *1
     C                     END                             E1
     C           *IN66     IFEQ '1'                        B1
     C                     WRITEFXEPOSP0                   *1
     C                     ELSE                            X1
     C                     MOVE @RUND     FODLUP           *1
     C                     MOVE @RUNM     FOMLUP           *1
     C                     MOVE @RUNY     FOYLUP           *1
     C                     TIME           FOTLUP           *1
     C                     MOVE 'A'       FOCHTP           *1
     C                     MOVE BJRDNB    FOLCD            *1
     C                     MOVEL@USER     FOLUID           *1
     C                     UPDATFXEPOSP0                   *1
     C                     END                             E1
     C           #BEE9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BEH  UPDATE FXEPOCLL                           *
     C*                    ADD IN EXPOSURES FOR THIS DEAL            *
     C*                    CURRENT AMOUNTS AND NOT REVERSING SIGNS   *
     C*                                                              *
     C*  FIELDS USED :                                               *
     C*                    @RUND  -  RUN DATE (DAY)                  *
     C*                    @RUNM  -  RUN DATE (MONTH)                *
     C*                    @RUNY  -  RUN DATE (YEAR)                 *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                                                              *
     C*  CALLED BY :       #BE  UPDATE EQUIV POSITIONS & PROFITS     *
     C*                                                              *
     C*  CALLS :           #ZD                                       *
     C*                                                              *
     C****************************************************************
     C           #BEH      BEGSR
     C*
     C** Access positions file.
     C*
     C           @EPKEY    CHAINFXEPOCLL             68
     C*
     C** If record not found currency combination is newly
     C** set up so need to initialise record
     C*
     C           *IN68     IFEQ '1'                        B1
     C                     EXSR #ZD                        *1
     C                     END                             E1
     C*
     C** Set up Cross currency total net position (FOCTNP) and
     C** Cross currency equivalent in primary currency (FOCTEP)
     C*
     C** If action code is insert:
     C*
     C           F3LACT    IFEQ 'I'                        B1
     C           FOCTNP    ADD  @CCAMT    FOCTNP
     C           FOCTEP    SUB  @CCEQV    FOCTEP
     C                     MOVE @EPCCY    FOPCCY
     C                     END                             E1
     C*
     C           *IN68     IFEQ '1'                        B1
     C                     WRITEFXEPOCL1                   *1
     C                     ELSE                            X1
     C                     MOVE @RUND     FODLUP           *1
     C                     MOVE @RUNM     FOMLUP           *1
     C                     MOVE @RUNY     FOYLUP           *1
     C                     TIME           FOTLUP           *1
     C                     MOVE 'A'       FOCHTP           *1
     C                     MOVE BJRDNB    FOLCD            *1
     C                     MOVEL@USER     FOLUID           *1
     C                     UPDATFXEPOCL1                   *1
     C                     END                             E1
     C           #BEH9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #ZD   CREATE ZERO RECORD FOR FXEPOULL           *
     C*                                                              *
     C*  FIELDS USED :     @RUND  -  RUN DATE DAY                    *
     C*                    @RUNM  -  RUN DATE MONTH                  *
     C*                    @RUNY  -  RUN DATE YEAR                   *
     C*                    @USER  -  USER FROM PSDS                  *
     C*                    @RCCY  -  CURRENCY                        *
     C*                                                              *
     C*  CALLED BY :       #BEB UPDATE FXEPOULL FXR0017              *
     C*                    #BEE UPDATE FXEPOULL FXR0050              *
     C*  CALLS :                                                     *
     C*                                                              *
     C****************************************************************
     C           #ZD       BEGSR
     C                     MOVE 'FO'      FORCID
     C                     MOVE *BLANKS   FODLTF
     C                     MOVE @RUND     FODLUP
     C                     MOVE @RUNM     FOMLUP
     C                     MOVE @RUNY     FOYLUP
     C                     TIME           FOTLUP
     C                     MOVE 'I'       FOCHTP
     C                     MOVE BJRDNB    FOLCD
     C                     MOVEL@USER     FOLUID
     C                     MOVE @RCCY     FOCCY
     C                     MOVE *ZEROS    FONNCP
     C                     MOVE *ZEROS    FONDBC
     C                     MOVE *ZEROS    FOTNTP
     C                     MOVE *ZEROS    FOTDPE
     C                     MOVE *ZEROS    FOBDSE
     C                     MOVE *ZEROS    FOSHPL
     C                     MOVE *ZEROS    FOFWPL
     C                     MOVE *ZEROS    FOCTNP
     C                     MOVE *ZEROS    FOCTEP
     C                     MOVE *BLANKS   FOPCCY
     C           #ZD9      ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #A    INITIAL PROCESSING                        *
     C*                                                              *
     C*  FIELDS USED :     @TERM  -  TERMINATION PARAMETER           *
     C*                    @STDDL -  STANDARD DEAL PARAMETER         *
     C*                    @FIRST -  FIRST TIME CALLED FLAG          *
     C*                    @@DTIN -  INPUT DATE FOR ZA0680           *
     C*                    @@MDNO -  OUTPUT DATE FROM ZA0680         *
     C*                    @FWD5  -  ONE MONTH FORWARD DATE LOCAL CCY*
     C*                    @DECA  -  BCA DECIMAL PLACES              *
     C*                    @BUYA  -  BUY AMOUNT                      *
     C*                    @BUYC  -  BUY CURRENCY                    *
     C*                    @B12   -  BUY FLAG                        *
     C*                    @SELA  -  SELL AMOUNT                     *
     C*                    @SELC  -  SELL CURRENCY                   *
     C*                    @S12   -  SELL FLAG                       *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @VDAT  -  VALUE DATE(CHAR)                *
     C*                    @VDAT5 -  VALUE DATE(NUM)                 *
     C*                    @ODAT  -  OPTION TO DATE(CHAR)            *
     C*                    @ODAT5 -  OPTION TO DATE(NUM)             *
     C*                    @PRLOS -  REVALUATION PROFIT AND LOSS     *
     C*                              DATA STRUCTURE (2 OCURS)        *
     C*                              CONTAINING:                     *
     C*                       @PCCY  -  CURRENCY                     *
     C*                       @SPLO  -  SHORT PROFIT/LOSS ADJUSTMENT *
     C*                       @FPLO  -  FORWARD PROFIT/LOSS ADJUSTMT *
     C*                       @ADJAD -  ADJUSTMENT HAS BEEN ADDED    *
     C*                                 INDICATOR (Y OR N)           *
     C*                                                              *
     C*                                                              *
     C*  CALLED BY :       MAIN PROGRAM                              *
     C*                                                              *
     C*  CALLS :           ZA0680                                    *
     C*                                                              *
     C****************************************************************
     C           #A        BEGSR
     C**  INPUT PARAMETERS
     C           *ENTRY    PLIST
     C                     PARM           @TERM   1
     C                     PARM           @STDDL
     C*
     C** Keylist for FXCRSCLL
     C*
     C           @CCKEY    KLIST
     C                     KFLD           @CPCCY  3
     C                     KFLD           @CSCCY  3
     C*
     C** Keylist for FXEPOCLL
     C*
     C           @EPKEY    KLIST
     C                     KFLD           @EECCY  3
     C                     KFLD           @EPCCY  3
     C*
     C**  Define field to store update run time
     C           *LIKE     DEFN FHTLUP    @RUNT
     C*
     C**  IF TERMINATION FLAG SET MUST TERMINATE PROGRAM IMMEDIATELY
     C           @TERM     IFEQ 'T'                        B1
     C                     GOTO #A9                        *1
     C                     END                             E1
     C*
     C**  CHECK IF THIS IS THE FIRST RUN OF THE PGM
     C           @FIRST    IFEQ *BLANK                     B1
     C                     MOVE 'N'       @FIRST  1        *1
     C                     MOVEL'TM0130'  DBPGM            *1
     C                     OPEN FDCCYPLL                   *1
     C                     OPEN FXREVHLL                   *1
     C                     OPEN FXDEAULL                   *1
     C                     OPEN FXFWDULL                   *1
     C                     OPEN FXEPOULL                   *1
     C                     OPEN FXFWMULL                   *1
     C*
     C** ACCESS BANK DETAILS VIA ACCESS PROGRAM TO GET RUN DATES
     C                     CALL 'AOBANKR0'                 *1
     C                     PARM '*MSG   ' @RTCD            *1
     C                     PARM '*FIRST ' @OPTN            *1
     C           SDBANK    PARM SDBANK    DSFDY
     C*
     C           @RTCD     IFNE *BLANK                     B*2
     C**  Set up error output.
     C                     MOVEL@OPTN     DBKEY            **************
     C                     MOVEL'SDBANKPD'DBFILE           * DBERROR 001
     C                     MOVEL'001'     DBASE            ***************
     C                     MOVEL'TM0130'  DBPGM            **2
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C                     MOVE BJMRDT    RUNA    7
     C*                                                                   084499
     C** Only call AORETLR0 if RETAIL present.                            084499
     C*                                                                   084499
     C** First check RETAIL indicator.                                    084499
     C                     CALL 'AOMMODR0'                                084499
     C                     PARM '*MSG   ' @RTCD   7                       084499
     C                     PARM '*FIRST ' @OPTN   7                       084499
     C           SDMMOD    PARM SDMMOD    DSFDY                           084499
     C*                                                                   084499
     C           BGRTBN    IFEQ 'Y'                        FULL RETAIL    084499
     C           BGIOAC    OREQ 'Y'                        INT. ON ACC.   084499
     C                     CALL 'AORETLR0'                 *1
     C                     PARM '*MSG   ' @RTCD            *1
     C                     PARM '*FIRST ' @OPTN            *1
     C           SDRETL    PARM SDRETL    DSFDY
     C*
     C           @RTCD     IFNE *BLANK                     B*2
     C**  Set up error output.
     C                     MOVEL@OPTN     DBKEY            ***************
     C                     MOVEL'SDRETLPD'DBFILE           * DBERROR 003 *
     C                     MOVEL'003'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C                     END                                            084499
     C*
     C                     CALL 'AOTRMAR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDTRMA    PARM SDTRMA    DSFDY
     C           @RTCD     IFNE *BLANKS                    B1
     C                     MOVEL'1'       DBKEY            ***************
     C                     MOVEL'SDTRMAPD'DBFILE           * DB ERROR 004*
     C                     MOVEL'004'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C*
     C           KEY1      KLIST                           *1
     C                     KFLD           XPCCY            *1
     C                     KFLD           XPTPRD           *1
     C                     KFLD           XPPRD            *1
     C                     MOVELBJLCCY    XPCCY            *1
     C                     CALL 'AOTRMAR0'
     C                     PARM '*MSG   ' @RTCD   7
     C                     PARM '*FIRST ' @OPTN   7
     C           SDTRMA    PARM SDTRMA    DSFDY
     C           @RTCD     IFNE *BLANKS                    B1
     C                     MOVEL*BLANKS   DBKEY            ***************
     C                     MOVEL'SDTRMAPD'DBFILE           * DB ERROR 037*
     C                     MOVEL'037'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C           ERSPRE    IFNE 'SP'                       B*2
     C           ERSPRE    LOKUPTAB1      TAB2           50**2
     C                     MOVELTAB2      @TEMP   1        **2
     C                     MOVE TAB2      XPTPRD           **2
     C                     MOVE @TEMP     XPPRD            **2
     C           KEY1      CHAINFDCCYPLL             63    **2
     C           *IN63     IFEQ '1'                        B**3
     C           XPDLTF    OREQ '*'                        **2
     C**  Set up error output.
     C                     MOVELXPPRD     DBKEY            ***************
     C                     MOVE XPTPRD    DBKEY            ***************
     C                     MOVEL'FDCCYPLL'DBFILE           * DB ERROR 005*
     C                     MOVEL'005'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C*
     C**  Set up error output.
     C                     ELSE                            X*2
     C                     CALL 'AOCURRR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM XPCCY     @AJCD            **2
     C           SDCURR    PARM SDCURR    DSSDY
     C           @RTCD     IFNE *BLANK                     B**3
     C                     MOVELXPCCY     DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 042 *
     C                     MOVEL'042'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #A9                        ***3
     C                     END                             E**3
      *
     C                     MOVELA6FXSD    XPPRDD           **2
     C                     END                             E*2
      *
     C*
     C** CONVERT 1 MONTH FORWARD DATE TO 5N
     C                     MOVE XPPRDD    @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #A9                        ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @FWD5   50       **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @FWD5            **2
     C                     END                             E*2
     C*
     C** OBTAIN BASE CURRENCY FOR DEALING DECIMAL PLACES FOR IT
     C** IDCYDL & @@NDPB
     C                     EXSR #AB                        *1
     C*
     C** ACCESS CURRENCY DETAILS TO GET DECIMAL PLACES FOR ACCOUNTING
     C                     CALL 'AOCURRR0'                 *1
     C                     PARM '*MSG   ' @RTCD            *1
     C                     PARM '*KEY   ' @OPTN            *1
     C                     PARM BJCYCD    @AJCD            *1
     C           SDCURR    PARM SDCURR    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B*2
     C**  Set up error output.
     C                     MOVELBJCYCD    DBKEY            ***************
     C                     MOVEL'SDCURRPD'DBFILE           * DBERROR 006 *
     C                     MOVEL'006'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C                     MOVE A6NBDP    @DECA   10       *1
     C                     END                             E1
     C*
     C** FIND AND STORE DEAL BUY AMOUNT AND SELL AMOUNT AND CURRENCY
     C** ALSO STORE INDICATION OF WHICH AMOUNT (1 OR 2) IS BUY AND SELL
     C           F3DAM1    IFGE 0                          B1
     C                     MOVE F3DAM1    @BUYA  150       *1
     C                     MOVE F3CCY1    @BUYC   3        *1
     C                     MOVE '1'       @B12    1        *1
     C                     MOVE F3DAM2    @SELA  150       *1
     C                     MOVE F3CCY2    @SELC   3        *1
     C                     MOVE '2'       @S12    1        *1
     C                     ELSE                            X1
     C                     MOVE F3DAM2    @BUYA            *1
     C                     MOVE F3CCY2    @BUYC            *1
     C                     MOVE '2'       @B12    1        *1
     C                     MOVE F3DAM1    @SELA            *1
     C                     MOVE F3CCY1    @SELC            *1
     C                     MOVE '1'       @S12    1        *1
     C                     END                             E1
     C*
     C** GET AND STORE VALUE DATE FROM STANDARD DEAL
     C                     MOVE F3VDYY    @D1YY
     C                     MOVE F3VDMM    @D1MM
     C                     MOVE F3VDDD    @D1DD
     C                     MOVE DATE1     @VDAT   80
     C*
     C** CONVERT VALUE DATE TO 5N
     C                     MOVE @VDAT     @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @VDAT5  50       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @VDAT5           *1
     C                     END                             E1
     C*
     C** GET AND STORE OPTION TO DATE FROM STANDARD DEAL
     C                     MOVE F3DOEY    @D1YY
     C                     MOVE F3DOEM    @D1MM
     C                     MOVE F3DOED    @D1DD
     C                     MOVE @DATE1    @ODAT   80
     C*
     C** CONVERT OPTION DATE TO 5N
     C                     MOVE @ODAT     @@DTIN
     C           @@DTIN    IFNE *ZEROS                     B1
     C                     EXSR ZA0680                     *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C                     MOVE @@MDNO    @ODAT5  50       *1
     C                     ELSE                            X1
     C                     MOVE *ZEROS    @ODAT5           *1
     C                     END                             E1
     C*
     C** INITIALISE P/L ACCUMULATORS
     C           1         OCUR @PRLOS
     C                     Z-ADD0         @SPLO
     C                     Z-ADD0         @FPLO
     C                     MOVE @BUYC     @PCCY
     C                     MOVE 'N'       @ADJAD
     C           2         OCUR @PRLOS
     C                     Z-ADD0         @SPLO
     C                     Z-ADD0         @FPLO
     C                     MOVE @SELC     @PCCY
     C                     MOVE 'N'       @ADJAD
     C                     MOVEACPY@      BIS@   80
      *
     C           #A9       ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BA   UPDATE DEALS FILE                         *
     C*                                                              *
     C*  FIELDS USED :     @DLANO -  DEAL ASSOCIATED DEAL NO         *
     C*                    @OOFA  -  OPTION ORIGINAL FIRST AMOUNT    *
     C*                    @OOSA  -  OPTION ORIGINAL SECOND AMOUNT   *
     C*                    @D1YY  -  DATE FIELD - YEAR               *
     C*                    @D1MM  -  DATE FIELD - MONTH              *
     C*                    @D1DD  -  DATE FIELD - DAY                *
     C*                    @DATOB -  RELATED DEAL OPTION TO DATE     *
     C*                    @VDTOB -  RELATED DEAL VALUE DATE(CHAR)   *
     C*                    @VDOB5 -  RELATED DEAL VALUE DATE(NUM)    *
     C*                    @RDELB -  RELATED DEAL BCE BEFORE UPDATE  *
     C*                    @RAM1B -  RELATED DEAL AMT 1 BEFORE UPDATE*
     C*                    @RAM2B -  RELATED DEAL AMT 2 BEFORE UPDATE*
     C*                    @RCUSB -  RELATED DEAL CUSTOMER SHORTNAME *
     C*                                                              *
     C*  CALLED BY :       #B MAIN PROCESSING                        *
     C*                                                              *
     C*  CALLS :           #BAA #BAB #BAC ZA0680                     *
     C*                                                              *
     C****************************************************************
     C           #BA       BEGSR
     C*
     C** ACCESS FXDEALL
     C           F3DN38    CHAINFXDEAULL             60
     C*
     C**  If record not found we have a serious problem here.
     C**  Files are not in sequence. (All deals on DEALSDB should
     C**  have a matching record on FXDEALPP before I/C).
     C*
     C           *IN60     IFEQ '1'                        B1
     C**  Set up error output
     C                     MOVELF3DN38    DBKEY            ***************
     C                     MOVEL'FXDEAULL'DBFILE           * DB ERROR 008*
     C                     MOVEL'008'     DBASE            ***************
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     EXSR *PSSR                      *1
     C                     GOTO #BA9                       *1
     C                     END                             E1
     C*
     C** SET UP BEFORE UPDATE PART OF STANDARD DEAL
     C                     MOVE FHORCM    F3BORM           *1
     C                     MOVE FHMORI    F3BORI           *1
     C                     MOVE FHMCPI    F3BCPI           *1
     C                     MOVE FHMOPM    F3BOPM           *1
     C                     MOVE FHMOPI    F3BOPI           *1
     C                     MOVE FHMCRI    F3BCRI           *1
     C                     MOVE FHROBR    F3BROB           *1
     C                     MOVE FHPOBR    F3BPOB           *1
     C*
     C** BUY AND SELL AMOUNT AND CCY
     C           FHDAM1    IFGE 0                          B*2
     C                     MOVE FHDAM1    F3DBUY           **2
     C                     MOVE FHCCY1    F3BBCY           **2
     C                     MOVE FHDAM2    F3DSEL           **2
     C                     MOVE FHCCY2    F3BSCY           **2
     C                     ELSE                            X*2
     C                     MOVE FHDAM1    F3DSEL           **2
     C                     MOVE FHCCY1    F3BSCY           **2
     C                     MOVE FHDAM2    F3DBUY           **2
     C                     MOVE FHCCY2    F3BBCY           **2
     C                     END                             E*2
     C*
     C                     MOVE FHDCNO    F3BCNM           *1
     C*
     C** VALUE DATE
     C                     MOVE FHVDDD    @D1DD            *1
     C                     MOVE FHVDMM    @D1MM            *1
     C                     MOVE FHVDYY    @D1YY            *1
     C                     MOVE DATE1     F3BVDT           *1
     C*
     C** OPTION DATE
     C                     MOVE FHDOED    @D1DD            *1
     C                     MOVE FHDOEM    @D1MM            *1
     C                     MOVE FHDOEY    @D1YY            *1
     C                     MOVE DATE1     F3BOTD           *1
     C*
     C** SET UP SUPPLEMENTARY PART OF STANDARD DEAL FILE
     C** NON RELATED DEAL DEPENDANT FIELDS ONLY AND OPTION FIRST AND SECOND
     C** ORIGINAL AMOUNTS
     C                     EXSR #BAA
     C           *INU7     IFEQ '1'                        B1
     C                     GOTO #BA9                       *1
     C                     END                             E1
     C*
     C** UPDATE FXDEALLS
     C                     EXSR #BAC
     C           *INU7     IFEQ '1'                        B1
     C                     GOTO #BA9                       *1
     C                     END                             E1
     C*
     C** RELATED DEAL PROCESSING
     C           F3DTYP    IFEQ 'S'                        B1
     C           F3DTYP    OREQ 'T'                        *1
     C*
     C** ACCESS FXDEALL USING ASSOCIATED DEAL NUMBER
     C                     MOVE F3DADN    @DLANO  60       *1
     C           @DLANO    CHAINFXDEAULL             63    *1
     C           *IN63     IFEQ '1'                        B*2
     C**  Set up error output for screen.
     C                     MOVEL@DLANO    DBKEY            ***************
     C                     MOVEL'FXDEAULL'DBFILE           * DB ERROR 010*
     C                     MOVEL'010'     DBASE            ***************
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     EXSR *PSSR                      **2
     C                     GOTO #BA9                       **2
     C                     END                             E*2
     C*
     C** SAVE RELATED DEAL OPTION TO DATE BEFORE UPDATE
     C                     MOVE FHDOEY    @D1YY            *1
     C                     MOVE FHDOEM    @D1MM            *1
     C                     MOVE FHDOED    @D1DD            *1
     C                     MOVE DATE1     @DATOB  80       *1
     C*
     C** SAVE RELATED DEAL VALUE DATE BEFORE UPDATE
     C                     MOVE FHVDYY    @D1YY            *1
     C                     MOVE FHVDMM    @D1MM            *1
     C                     MOVE FHVDDD    @D1DD            *1
     C                     MOVE DATE1     @VDTOB  80       *1
     C*
     C** CONVERT VALUE DATE ABOVE TO 5N
     C                     MOVE @VDTOB    @@DTIN           *1
     C           @@DTIN    IFNE *ZEROS                     B*2
     C                     EXSR ZA0680                     **2
     C           *INU7     IFEQ '1'                        B**3
     C                     GOTO #BA9                       ***3
     C                     END                             E**3
     C                     MOVE @@MDNO    @VDOB5  50       **2
     C                     ELSE                            X*2
     C                     MOVE *ZEROS    @VDOB5           **2
     C                     END                             E*2
     C*
     C** SAVE RELATED DEAL DEALT BCE BEFORE UPDATE
     C                     MOVE FHBCDE    @RDELB 150       *1
     C*
     C** SAVE RELATED DEAL DEALT SPOT BCE BEFORE UPDATE
     C                     MOVE FHDSBE    @RDSPB 150       *1
     C*
     C** SAVE RELATED DEAL 1ST AMOUNT BEFORE UPDATE
     C                     MOVE FHDAM1    @RAM1B 150       *1
     C*
     C** SAVE RELATED DEAL 2ND AMOUNT BEFORE UPDATE
     C                     MOVE FHDAM2    @RAM2B 150       *1
     C*
     C** SAVE RELATED DEAL CUSTOMER SHORT NAME
     C**********           MOVE FHDCNO    @RCUSB  60       *1                                 CSD027
     C                     MOVE FHDCNO    @RCUSB  6        *1                                 CSD027
     C*
     C** UPDATE SUPPLEMENTARY PART OF STANDARD DEAL
     C** REALATED DEAL DEPENDANT FIELDS ONLY
     C                     EXSR #BAB                       *1
     C           *INU7     IFEQ '1'                        B*2
     C                     GOTO #BA9                       **2
     C                     END                             E*2
     C*
     C** UPDATE RELATED DEAL PART OF SUPPLEMENTARY DEAL
     C                     Z-ADDFHORCM    F3RORM           *1
     C                     MOVE FHMORI    F3RORI           *1
     C                     MOVE FHMCPI    F3RCPI           *1
     C                     MOVE FHMOPM    F3ROPM           *1
     C                     MOVE FHMOPI    F3ROPI           *1
     C                     MOVE FHMCRI    F3RCRI           *1
     C                     Z-ADDFHDBUY    F3RBAT           *1
     C                     Z-ADDFHDSEL    F3RSAT           *1
     C           FHDAM1    IFGE 0                          B*2
     C                     MOVE FHCCY1    F3RBCY           **2
     C                     MOVE FHCCY2    F3RSCY           **2
     C                     ELSE                            X*2
     C                     MOVE FHCCY2    F3RBCY           **2
     C                     MOVE FHCCY1    F3RSCY           **2
     C                     END                             E*2
     C                     MOVE FHDCNO    F3RCNM           *1
     C                     MOVE FHVDYY    @D1YY            *1
     C                     MOVE FHVDMM    @D1MM            *1
     C                     MOVE FHVDDD    @D1DD            *1
     C                     MOVE DATE1     F3RVDT           *1
     C                     MOVE FHDOEY    @D1YY            *1
     C                     MOVE FHDOEM    @D1MM            *1
     C                     MOVE FHDOED    @D1DD            *1
     C                     MOVE DATE1     F3ROTD           *1
     C                     END                             E1
     C           #BA9      ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BAA  UPDATE SUPPLEMENTARY PART OF STANDARD DEAL*
     C*                    NON RELATED DEAL DEPENDANT FIELDS ONLY    *
     C*                                                              *
     C*  FIELDS USED :     @BUYC  -  BUY CURRENCY                    *
     C*                    @SELC  -  SELL CURRENCY                   *
     C*                    @WK6   -  WORK FIELD                      *
     C*                    @IN    -  INPUT FIELD FOR #ZB             *
     C*                    @OUT   -  OUTPUT FIELD FROM #ZB           *
     C*                    @WK8   -  WORK FIELD                      *
     C*                    @OOFA  -  OPTION ORIGINAL FIRST AMOUNT    *
     C*                    @OOSA  -  OPTION ORIGINAL SECOND AMOUNT   *
     C*                                                              *
     C*  CALLED BY :       #BA UPDATE DEALS FILE                     *
     C*                                                              *
     C*  CALLS :           #ZB                                       *
     C*                                                              *
     C****************************************************************
     C           #BAA      BEGSR
     C*
     C** CUSTOMER NUMBER
     C********** F3CNUM    IFEQ *ZEROS                     B1                                 CSD027
     C           F3CNUM    IFEQ *BLANKS                    B1                                 CSD027
     C           F3DCSN    ANDNE*BLANKS                    *1
     C           F3DCSN    IFNE FHDCSN                     B*2
     C*
     C** ACCESS SNAME USING DEAL CUSTOMER SHORTNAME
     C                     CALL 'AOCUSTR0'
     C                     PARM '*MSG   ' @RTCD
     C                     PARM '*KEY   ' @OPTN
     C                     PARM F3DCSN    @KEY1  10
     C                     PARM *BLANKS   @KYST   7
     C           SDCUST    PARM SDCUST    DSSDY
     C*
     C           @RTCD     IFNE *BLANK                     B**3
     C**  Set up error output for screen.
     C                     MOVELF3DCSN    DBKEY            ***************
     C                     MOVEL'SDCUSTPD'DBFILE           * DBERROR 011 *
     C                     MOVEL'011'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #BAA9                      ***3
     C                     END                             E**3
     C                     MOVE BBCUST    F3CNUM           **2
     C                     ELSE                            X*2
     C                     MOVE FHDCNO    F3CNUM           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** BROKER CURRENCY
     C           F3BROK    IFNE *BLANKS                    B0.5
     C           F3BROK    IFEQ 'PHON'                     B1
     C           F3BROK    OREQ 'TELX'                     *1
     C           F3BROK    OREQ 'MAIL'                     *1
     C           F3BROK    OREQ 'SWAP'                     *1
     C                     MOVE *BLANKS   F3BKCY           *1
     C                     MOVE *ALL'9'   F3BRKG           *1
     C                     ELSE                            X1
     C           F3BKCY    IFEQ *BLANKS                    B*2
     C           F3BROK    IFNE FHBROK                     B**3
     C*
     C** ACCESS BROKER FILE VIA ACCESS PROGRAM
     C                     CALL 'AOBROKR0'                 ***3
     C                     PARM '*MSG   ' @RTCD            ***3
     C                     PARM '*KEY   ' @OPTN            ***3
     C                     PARM F3BROK    @BQTX   4        ***3
     C           SDBROK    PARM SDBROK    DSFDY
     C*
     C           @RTCD     IFNE *BLANK                     B***4
     C**  Set up error output for screen.
     C                     MOVELF3BROK    DBKEY            ***************
     C                     MOVEL'SDBROKPD'DBFILE           * DBERROR 012 *
     C                     MOVEL'012'     DBASE            ***************
     C                     MOVE '1'       *INU7            ****4
     C                     MOVE '1'       *INU8            ****4
     C                     EXSR *PSSR                      ****4
     C                     GOTO #BAA9                      ****4
     C                     END                             E***4
     C                     MOVE A9BRCY    F3BKCY           ***3
     C                     ELSE                            X**3
     C                     MOVE FHBKCY    F3BKCY           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
     C                     END                             E0.5
     C*
     C** DEAL MIDAS BRANCH CODE
     C           F3MBCA    IFEQ *ZEROS                     B1
     C           F3DBRC    IFNE FHDBRC                     B*2
     C*
     C** ACCESS BRANCH DETAILS VIA ACCESS PROGRAM
     C**********           CALL 'AOBRCHR0'                 **2                                CGL029
     C                     CALL 'AOBRCHR1'                                                    CGL029
     C                     PARM '*MSG   ' @RTCD   7        **2
     C                     PARM '*KEY   ' @OPTN   7        **2
     C                     PARM F3DBRC    @DSNB   3        **2
     C********** SDBRCH    PARM SDBRCH    DSFDY                                               CGL029
     C           SDBRCH    PARM SDBRCH    DSSDY                                               CGL029
     C*
     C           @RTCD     IFNE *BLANK                     B***3
     C**  Set up error output for screen.
     C                     MOVELF3DBRC    DBKEY            ***************
     C                     MOVEL'SDBRCHPD'DBFILE           * DBERROR 013 *
     C                     MOVEL'013'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ****4
     C                     GOTO #BAA9                      ***3
     C                     END                             E**3
     C                     MOVE F3BROK    F3MBCA           **2     S01194
     C                     ELSE                            X*2
     C                     MOVE FHMBCA    F3MBCA           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** MIDAS OUR RECEIVE METHOD
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3ORCM    IFEQ *ZEROS                     B1
     C           F3DORM    IFNE FHDORM                     B*2
     C           F3DORM    IFEQ 'NA'                       B**3
     C           F3DORM    OREQ *BLANKS                    ***3
     C                     Z-ADD0         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'TELX '                    B**3
     C                     Z-ADD1         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'CHIPS'                    B**3
     C                     Z-ADD7         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'SWIFT'                    B**3
     C                     Z-ADD8         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'CSENT'                    B**3
     C                     Z-ADD2         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'CCOLL'                    B**3
     C                     Z-ADD12        F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'COMP '                    B**3
     C                     Z-ADD3         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'PCURR'                    B**3
     C                     Z-ADD4         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'CURR '                    B**3
     C                     Z-ADD14        F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'MACC '                    B**3
     C                     Z-ADD5         F3ORCM           ***3
     C                     END                             E**3
     C           F3DORM    IFEQ 'SUSP '                    B**3
     C                     Z-ADD6         F3ORCM           ***3
     C                     END                             E**3
     C                     ELSE                            X*2
     C                     MOVE FHORCM    F3ORCM           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** MIDAS OUR RECEIVE INSTRUCTIONS
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C*
     C           F3MORI    IFEQ *BLANKS                    B1
     C           F3MORI    OREQ '00'                       *1
     C*
     C           F3DORI    IFNE FHDORI                     B*2
     C           F3DORM    ORNE FHDORM                     **2
     C           @BUYC     ORNE F3BBCY                     **2
     C*
     C           F3DORM    IFNE 'TELX '                    B**3
     C           F3DORM    ANDNE'CHIPS'                    ***3
     C           F3DORM    ANDNE'SWIFT'                    ***3
     C           F3DORM    ANDNE'CCOLL'                    ***3
     C           F3DORM    ANDNE'CSENT'                    ***3
     C           F3DORM    ANDNE'PCURR'                    ***3
     C           F3DORI    ANDNE'NODEF'                    ***3
     C                     MOVE F3DORI    F3MORI           ***3
     C                     END                             E**3
     C*
     C           F3DORM    IFEQ 'TELX'                     B**3
     C           F3DORM    OREQ 'CHIPS'                    ***3
     C           F3DORM    OREQ 'SWIFT'                    ***3
     C           F3DORM    OREQ 'CCOLL'                    ***3
     C           F3DORM    OREQ 'CSENT'                    ***3
     C*
     C*
     C** ACCESS NOSTRO DETAILS USING DEAL BRANCH CODE
     C                     MOVELF3DORI    @CSSN            ***3
     C                     CALL 'AONOSTR0'                 ***3
     C                     PARM '*MSG   ' @RTCD            ***3
     C                     PARM '*KEY   ' @OPTN            ***3
     C                     PARM *BLANKS   @CUST   6        ***3
     C                     PARM @BUYC     @CYCD   3        ***3
     C**********           PARM *BLANKS   @ACCD   4        ***3                               CGL029
     C                     PARM *BLANKS   @ACCD  10                                           CGL029
     C                     PARM *BLANKS   @ACSN   2        ***3
     C                     PARM *BLANKS   @NONB   2        ***3
     C                     PARM *BLANKS   @BRCD   3        ***3
     C                     PARM           @CSSN  10        ***3
     C                     PARM 'P'       @PNOI   1        ***3
     C           SDNOST    PARM SDNOST    DSFDY
     C*
     C** IF ACCESS FAILS THEN USE BLANK PRIME NOSTRO INDICATOR
     C*
     C           @RTCD     IFNE *BLANK                     B***4
     C                     CALL 'AONOSTR0'                 ****4
     C                     PARM '*MSG   ' @RTCD            ****4
     C                     PARM '*KEY   ' @OPTN            ****4
     C                     PARM *BLANKS   @CUST   6        ****4
     C                     PARM @BUYC     @CYCD   3        ****4
     C**********           PARM *BLANKS   @ACCD   4        ****4                              CGL029
     C                     PARM *BLANKS   @ACCD  10                                           CGL029
     C                     PARM *BLANKS   @ACSN   2        ****4
     C                     PARM *BLANKS   @NONB   2        ****4
     C                     PARM *BLANKS   @BRCD   3        ****4
     C                     PARM           @CSSN  10        ****4
     C                     PARM *BLANKS   @PNOI   1        ****4
     C           SDNOST    PARM SDNOST    DSFDY
     C                     END                             E***4
     C           @RTCD     IFNE *BLANK                     B***4
     C                     MOVE *BLANKS   F3MORI           ****4
     C                     ELSE                            X***4
     C                     MOVELA7NONB    F3MORI           ****4
     C                     END                             E***4
     C                     END                             E**3
     C*
     C           F3DORM    IFEQ 'PCURR'                    B**3
     C                     MOVELF3CNUM    F3MORI           ***3
     C                     MOVELBMACCD    @WK6    6        ***3
     C                     MOVE '01'      @WK6             ***3
     C                     MOVE @WK6      F3MORI           ***3
     C                     END                             E**3
     C*
     C           F3DORI    IFEQ 'NODEF'                    B**3
     C                     MOVE *BLANKS   F3MORI           ***3
     C                     END                             E**3
     C                     ELSE                            X*2
     C                     MOVE FHMORI    F3MORI           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** MIDAS OUR PAY METHOD
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3DMPM    IFEQ *ZEROS                     B1
     C           F3DOPM    IFNE FHDOPM                     B*2
     C           F3DOPM    IFEQ 'NA'                       B**3
     C           F3DOPM    OREQ *BLANKS                    ***3
     C                     Z-ADD0         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'TELX '                    B**3
     C                     Z-ADD1         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'CHIPS'                    B**3
     C                     Z-ADD7         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'SWIFT'                    B**3
     C                     Z-ADD8         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'CSENT'                    B**3
     C                     Z-ADD2         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'CCOLL'                    B**3
     C                     Z-ADD12        F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'COMP '                    B**3
     C                     Z-ADD3         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'PCURR'                    B**3
     C                     Z-ADD4         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'CURR '                    B**3
     C                     Z-ADD14        F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'MACC '                    B**3
     C                     Z-ADD5         F3DMPM           ***3
     C                     END                             E**3
     C           F3DOPM    IFEQ 'SUSP '                    B**3
     C                     Z-ADD6         F3DMPM           ***3
     C                     END                             E**3
     C                     ELSE                            X*2
     C                     MOVE FHMOPM    F3DMPM           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** MIDAS OUR PAY INSTRUCTIONS
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3MOPI    IFEQ *BLANKS                    B1
     C           F3MOPI    OREQ '00'                       *1
     C*
     C           F3DOPI    IFNE FHDOPI                     B*2
     C           F3DOPM    ORNE FHDOPM                     **2
     C           @SELC     ORNE F3BSCY                     **2
     C*
     C           F3DOPM    IFNE 'TELX '                    B**3
     C           F3DOPM    ANDNE'CHIPS'                    ***3
     C           F3DOPM    ANDNE'SWIFT'                    ***3
     C           F3DOPM    ANDNE'CCOLL'                    ***3
     C           F3DOPM    ANDNE'CSENT'                    ***3
     C           F3DOPM    ANDNE'PCURR'                    ***3
     C           F3DOPI    ANDNE'NODEF'                    ***3
     C                     MOVE F3DOPI    F3MOPI           ***3
     C                     END                             E**3
     C*
     C           F3DOPM    IFEQ 'TELX'                     B**3
     C           F3DOPM    OREQ 'CHIPS'                    ***3
     C           F3DOPM    OREQ 'SWIFT'                    ***3
     C           F3DOPM    OREQ 'CCOLL'                    ***3
     C           F3DOPM    OREQ 'CSENT'                    ***3
     C*
     C*
     C** ACCESS NOSTRO DETAILS USING DEAL BRANCH CODE
     C                     MOVELF3DOPI    @CSSN            ***3
     C                     CALL 'AONOSTR0'                 ***3
     C                     PARM '*MSG   ' @RTCD            ***3
     C                     PARM '*KEY   ' @OPTN            ***3
     C                     PARM *BLANKS   @CUST   6        ***3
     C                     PARM @SELC     @CYCD   3        ***3
     C**********           PARM *BLANKS   @ACCD   4        ***3                               CGL029
     C                     PARM *BLANKS   @ACCD  10                                           CGL029
     C                     PARM *BLANKS   @ACSN   2        ***3
     C                     PARM *BLANKS   @NONB   2        ***3
     C                     PARM *BLANKS   @BRCD   3        ***3
     C                     PARM           @CSSN  10        ***3
     C                     PARM 'P'       @PNOI   1        ***3
     C           SDNOST    PARM SDNOST    DSFDY
     C*
     C** IF ACCESS FAILS THEN USE BLANK PRIME NOSTRO INDICATOR
     C           @RTCD     IFNE *BLANKS                    B***4
     C                     CALL 'AONOSTR0'                 ****4
     C                     PARM '*MSG   ' @RTCD            ****4
     C                     PARM '*KEY   ' @OPTN            ****4
     C                     PARM *BLANKS   @CUST   6        ****4
     C                     PARM @SELC     @CYCD   3        ****4
     C**********           PARM *BLANKS   @ACCD   4        ****4                              CGL029
     C                     PARM *BLANKS   @ACCD  10                                           CGL029
     C                     PARM *BLANKS   @ACSN   2        ****4
     C                     PARM *BLANKS   @NONB   2        ****4
     C                     PARM *BLANKS   @BRCD   3        ****4
     C                     PARM           @CSSN  10        ****4
     C                     PARM *BLANKS   @PNOI   1        ****4
     C           SDNOST    PARM SDNOST    DSFDY
     C                     END                             E***4
     C           @RTCD     IFNE *BLANKS                    B***4
     C                     MOVE *BLANKS   F3MOPI           ****4
     C                     ELSE                            X***4
     C                     MOVELA7NONB    F3MOPI           ****4
     C                     END                             E***4
     C                     END                             E**3
     C*
     C           F3DOPM    IFEQ 'PCURR'                    B**3
     C                     MOVELF3CNUM    F3MOPI           ***3
     C                     MOVELBMACCD    @WK6    6        ***3
     C                     MOVE '01'      @WK6             ***3
     C                     MOVE @WK6      F3MOPI           ***3
     C                     END                             E**3
     C*
     C           F3DOPI    IFEQ 'NODEF'                    B**3
     C                     MOVE *BLANKS   F3MOPI           ***3
     C                     END                             E**3
     C*
     C                     ELSE                            X*2
     C                     MOVE FHMOPI    F3MOPI           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** MIDAS CUSTOMER PAY INSTRUCTIONS
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3MCPI    IFEQ *BLANKS                    B1
     C           F3DCPI    IFNE FHDCPI                     B*2
     C           F3DCPI    IFEQ 'NODEF'                    B**3
     C           F3DCPI    OREQ *BLANKS                    ***3
     C                     MOVE *BLANKS   F3MCPI           ***3
     C                     GOTO #BAA1                      ***3
     C                     END                             E**3
     C*
     C** TEST DEAL CUST PAY INSTR IS A NUMBER
     C*
     C** REMOVE TRAILING BLANKS SO TESTN WORKS
     C                     MOVE F3DCPI    @IN              **2
     C                     EXSR #ZB                        **2
     C***********          TESTN          @OUT       7979  **2                                CSD027
     C************IN79     IFEQ '1'                        B**3                               CSD027
     C***********          MOVE F3DCPI    F3MCPI           ***3                               CSD027
     C***********          GOTO #BAA1                      ***3                               CSD027
     C***********          END                             E**3                               CSD027
     C*
     C** ACCESS SNAME USING DEAL CUSTOMER PAY INSTR
     C                     CALL 'AOCUSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DCPI    @KEY1            **2
     C                     PARM *BLANKS   @KYST            **2
     C           SDCUST    PARM SDCUST    DSSDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C                     MOVELBBCUST    F3MCPI           ***3
     C                     GOTO #BAA1                      ***3
     C                     END                             E**3
     C*
     C** ACCESS NOSTRO DETAILS USING DCPI
     C                     CALL 'AOCNSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DCPI    @ARCD   8        **2
     C           SDCNST    PARM SDCNST    DSFDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C**  Set up error output for screen.
     C                     MOVE F3DCPI    DBKEY            ***************
     C                     MOVEL'SDCNSTPD'DBFILE           * DBERROR 014 *
     C                     MOVEL'014'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #BAA9                      ***3
     C                     END                             E**3
     C*
     C** MOVE COUNTER PARTY SHORT NAME TO PAY INSTRUCTION
     C                     MOVE AWCPNC    @WK8    8        **2
     C                     MOVEL@WK8      F3MCPI           **2
     C                     ELSE                            X*2
     C                     MOVE FHMCPI    F3MCPI           **2
     C                     END                             E*2
     C                     END                             E1
     C           #BAA1     TAG
     C*
     C** MIDAS CUSTOMER RECEIVE INSTRUCTIONS
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3MCRI    IFEQ *BLANKS                    B1
     C           F3DCRI    IFNE FHDCRI                     B*2
     C           F3DCRI    IFEQ 'NODEF'                    B**3
     C           F3DCRI    OREQ *BLANKS                    ***3
     C                     MOVE *BLANKS   F3MCRI           ***3
     C                     GOTO #BAA2                      ***3
     C                     END                             E**3
     C*
     C** TEST DEAL CUST RECEIVE INSTR IS A NUMBER
     C                     MOVE F3DCRI    @IN              **2
     C                     EXSR #ZB                        **2
     C***********          TESTN          @OUT       7979  **2                                CSD027
     C************IN79     IFEQ '1'                        B**3                               CSD027
     C***********          MOVE F3DCRI    F3MCRI           ***3                               CSD027
     C***********          GOTO #BAA2                      ***3                               CSD027
     C***********          END                             E**3                               CSD027
     C*
     C** ACCESS SNAME USING DEAL CUSTOMER RECEIVE INSTR
     C                     CALL 'AOCUSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DCRI    @KEY1            **2
     C                     PARM *BLANKS   @KYST            **2
     C           SDCUST    PARM SDCUST    DSSDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C                     MOVELBBCUST    F3MCRI           ***3
     C                     GOTO #BAA2                      ***3
     C                     END                             E**3
     C*
     C                     CALL 'AOCNSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DCRI    @ARCD            **2
     C           SDCNST    PARM SDCNST    DSFDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C**  Set up error output for screen.
     C                     MOVELF3DCRI    DBKEY            ***************
     C                     MOVEL'AOCNSTPD'DBFILE           * DBERROR 015 *
     C                     MOVEL'015'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #BAA9                      ***3
     C                     END                             E**3
     C*
     C** MOVE COUNTER PARTY SHORT NAME TO RECEIVE INSTRUCTION
     C                     MOVE AWCPNC    @WK8    8        **2
     C                     MOVEL@WK8      F3MCRI           **2
     C                     ELSE                            X*2
     C                     MOVE FHMCRI    F3MCRI           **2
     C                     END                             E*2
     C                     END                             E1
     C           #BAA2     TAG
     C*
     C** MIDAS FOR ACCOUNT OF
     C**  Extended settlement fields for PC are set up
     C**  at the end of the subroutine.
     C           F3MFAC    IFEQ *BLANKS                    B1
     C           F3DFAC    IFNE FHDFAC                     B*2
     C           F3DFAC    IFEQ 'NODEF'                    B**3
     C           F3DFAC    OREQ *BLANKS                    ***3
     C                     MOVE *BLANKS   F3MFAC           ***3
     C                     GOTO #BAA3                      ***3
     C                     END                             E**3
     C*
     C** TEST DEAL FOR A/C OF IS A NUMBER
     C                     MOVE F3DFAC    @IN              **2
     C                     EXSR #ZB                        **2
     C***********          TESTN          @OUT       7979  **2                                CSD027
     C************IN79     IFEQ '1'                        B**3                               CSD027
     C***********          MOVE F3DFAC    F3MFAC           ***3                               CSD027
     C***********          GOTO #BAA3                      ***3                               CSD027
     C***********          END                             E**3                               CSD027
     C*
     C** ACCESS SNAME USING DEAL FOR A/C OF
     C                     CALL 'AOCUSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DFAC    @KEY1            **2
     C                     PARM *BLANKS   @KYST            **2
     C           SDCUST    PARM SDCUST    DSSDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C                     MOVELBBCUST    F3MFAC           ***3
     C                     GOTO #BAA3                      ***3
     C                     END                             E**3
     C*
     C                     CALL 'AOCNSTR0'                 **2
     C                     PARM '*MSG   ' @RTCD            **2
     C                     PARM '*KEY   ' @OPTN            **2
     C                     PARM F3DFAC    @ARCD            **2
     C           SDCNST    PARM SDCNST    DSFDY
     C           @RTCD     IFNE *BLANKS                    B**3
     C**  Set up error output for screen.
     C                     MOVELF3DFAC    DBKEY            ***************
     C                     MOVEL'SDCNSTPD'DBFILE           * DBERROR 016 *
     C                     MOVEL'016'     DBASE            ***************
     C                     MOVE '1'       *INU7            ***3
     C                     MOVE '1'       *INU8            ***3
     C                     EXSR *PSSR                      ***3
     C                     GOTO #BAA9                      ***3
     C                     END                             E**3
     C*
     C** MOVE COUNTER PARTY SHORT NAME TO FOR A/C OF
     C                     MOVE AWCPNC    @WK8    8        **2
     C                     MOVEL@WK8      F3MFAC           **2
     C                     ELSE                            X*2
     C                     MOVE FHMFAO    F3MFAC           **2
     C                     END                             E*2
     C                     END                             E1
     C           #BAA3     TAG
     C*
     C** OPTION - ORIGINAL FIRST AMOUNTS
     C           F3OOFA    IFEQ *ZEROS                     B1
     C*
     C** IF DEAL IS AN OPTION
     C           F3DTYP    IFEQ 'O'                        B*2
     C*
     C** AND DEAL IS AN INSERT
     C           F3LACT    IFEQ 'I'                        B**3
     C                     MOVE F3DAM1    F3OOFA           ***3
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B*2
     C*
     C** AND DEAL IS AN INSERT
     C           F3LACT    IFEQ 'I'                        B**3
     C                     MOVE FHOOFA    F3OOFA           ***3
     C                     END                             E**3
     C*
     C                     END                             E*2
     C                     END                             E1
     C*
     C** OPTION - ORIGINAL SECOND AMOUNTS
     C           F3OOSA    IFEQ *ZEROS                     B1
     C*
     C** IF DEAL IS AN OPTION
     C           F3DTYP    IFEQ 'O'                        B*2
     C                     MOVE F3DAM2    F3OOSA           **2
     C                     END                             E*2
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B*2
     C                     MOVE FHOOSA    F3OOSA           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C           #BAA9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #ZB   PREPARES FIELD FOR TESTN                  *
     C*                    REMOVES TRAILING BLANKS                   *
     C*                                                              *
     C*  FIELDS USED :     @OUT   -  FIELD OUTPUT                    *
     C*                    @IP    -  INPUT INDEX                     *
     C*                    @END   -                                  *
     C*                    @STP   -  STOP FLAG                       *
     C*                    @IA    -  INPUT AMOUNT                    *
     C*                    @O     -  OUTPUT FIELD                    *
     C*                    @OP    -  OUTPUT INDEX                    *
     C*                                                              *
     C*  CALLED BY :       #BAA  UPDATE SUPPLEMENTARY STANDARD DEAL  *
     C*                                                              *
     C*  CALLS :                                                     *
     C*                                                              *
     C****************************************************************
     C           #ZB       BEGSR
     C                     MOVE *BLANKS   @OUT
     C                     Z-ADD11        @IP     20
     C                     Z-ADD10        @END    20
     C                     MOVE 'N'       @STP    1
     C           @STP      DOWNE'Y'                        B1
     C           @IP       SUB  1         @IP              *1
     C           @IA,@IP   IFNE ' '                        B*2
     C                     MOVE 'Y'       @STP             **2
     C                     END                             E*2
     C                     END                             E1
     C                     Z-ADD10        @OP     20
     C                     MOVE 'N'       @STP    1
     C           @STP      DOWNE'Y'                        B1
     C                     MOVE @IA,@IP   @O,@OP           *1
     C           @IP       SUB  1         @IP              *1
     C           @OP       SUB  1         @OP              *1
     C           @IP       IFEQ 0                          B*2
     C                     MOVE 'Y'       @STP             **2
     C                     END                             E*2
     C                     END                             E1
     C           #ZB9      ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #BAB  UPDATE SUPPLEMENTARY PART OF STANDARD DEAL*
     C*                    RELATED DEAL DEPENDENT FIELDS ONLY        *
     C*  FIELDS INPUT :                                              *
     C*                                                              *
     C*  FIELDS USED :                                               *
     C*                                                              *
     C*  CALLED BY :       #BA UPDATE DEALS FILE                     *
     C*                                                              *
     C*  CALLS :                                                     *
     C*                                                              *
     C*  FIELDS OUTPUT :                                             *
     C*                                                              *
     C****************************************************************
     C           #BAB      BEGSR
     C*
     C** OPTION DSBCE
     C           F3ODSB    IFEQ *ZEROS                     B1
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B*2
     C                     MOVE FHDSBE    F3ODSB           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C** OPTION DBCE
     C           F3ODBE    IFEQ *ZEROS                     B1
     C*
     C** IF DEAL IS A TAKEDOWN
     C           F3DTYP    IFEQ 'T'                        B*2
     C                     MOVE FHBCDE    F3ODBE           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C           @BAB9     ENDSR
     //EJECT
     C****************************************************************
     C*                                                              *
     C*  SUBROUTINE: #C    FINAL PROCESSING                          *
     C*                                                              *
     C*  FIELDS USED :     @TERM  -  TERMINATION PARAMETER           *
     C*                                                              *
     C*  CALLED BY :       MAIN PROGRAM                              *
     C*                                                              *
     C*  CALLS :                                                     *
     C*                                                              *
     C****************************************************************
     C           #C        BEGSR
     C           *INU7     IFEQ '1'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     MOVE 'E'       @TERM            *1
     C                     END                             E1
     C           @TERM     IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     END                             E1
     C           #C9       ENDSR
     //EJECT
     C*****************************************************************
     C*                                                               *
     C* *PSSR - PROGRAM ERROR SUBROUTINE                              *
     C*                                                               *
     C* CALLED BY:   EXECUTES WHENEVER PROGRAM ERROR OCCURS           *
     C*                                                               *
     C* CALLS:                                                        *
     C*                                                               *
     C* USES :  @ERR1  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
     C*         @TERM  - TERMINATION PARAMETER                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C** SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR1     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR1   1        *1
     C*
     C           DBASE     IFEQ *BLANKS                    B*2
      ** IF CALLED FOR DBASE ERROR THIS WILL NOT BE RUN
     C** SET UP FIELDS IN LOCAL DATA AREA                  **2
     C                     MOVE '991'     DBASE            **2
     C                     MOVE '1'       *INU6            **2
     C                     END                             E*2
     C*
     C** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     MOVE 'E'       @TERM            *1
     C                     END                             E1
     C*
     C** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     //EJECT
     C*****************************************************************
     C*                                                               *
     C* INFSR - FILE EXCEPTION/ERROR SUBROUTINE                       *
     C*                                                               *
     C* CALLED BY:   EXECUTES WHENEVER FILE EXCEPTION/ERROR OCCURS    *
     C*                                                               *
     C* CALLS:                                                        *
     C*                                                               *
     C* USES :  @ERR2  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
     C*         @FILE  - FILENAME FOR WHICH EXCEPTION/ERROR           *
     C*                  OCCURRED (POSNS 201-208 OF PSDS)             *
     C*         @TERM  - TERMINATION PARAMETER                        *
     C*                                                               *
     C*****************************************************************
     C*
     C           INFSR     BEGSR
     C*
     C** SET @ERR2 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR2     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR2   1        *1
     C*                                                    *1
     C** SET UP FIELDS IN LOCAL DATA AREA                  *1
     C                     MOVEL@FILE     DBFILE           *1
     C                     MOVE '992'     DBASE            *1
     C*                                                    *1
     C** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     MOVE 'E'       @TERM            *1
     C                     END                             E1
     C*
     C** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
** @DP USED BY SR. ZA0680 - DECIMAL PLACES CORRECTION ARRAY
1000000010000000100000001000000010000000100000001
** @YD  USED BY SR. ZA0680 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZA0680 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
** TAB1 AND TAB2 TO DETERMINE SHORT OR FORWARD P/L PERIOD
OVR 0D
TOMN1D
SPN 2D
SP1W1W
SP2W2W
SP3W3W
SP1M1M
SP2M2M
SP3M3M
SP6M6M
SP9M9M
SPYR1Y
**  CPY@
(c) Misys International Banking Systems Ltd. 2001
