     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FX Book - Monthly Summary (was DL3110)')
     F****************************************************************
     F*                                                              *
     F*                                                              *
     F*  Midas - Treasury Management Module
     F*                                                              *
     F*      TM3110 - FOREIGN EXCHANGE BOOK  - MONTHLY SUMMARY       *
     F*               (FORMERLY DL3110)                              *
     F*                                                              *
     F*     Function: This enquiry shows cash flow movements in half *
     F*     (I/C)     monthly and monthly periods.                   *
     F*                                                              *
     F*     Called by: TMC0311 - TM Enquiry control                  *
     F*           via: DL3100  - Treasury management controller      *
     F*                                                              *
     F*     Calls    : ZA0250  - Clear program message queue.        *
     F*              : ZA0240  - Display program message queue.      *
     F*              : ZA0270  - Convert date to Midas day number.   *
     F*                                                              *
     F*     Linked enquiries: TM3120 - FX Daily summary              *
     F*                       TM3130 - FX Daily deals                *
     F*                       DL0170 - FX Deal details               *
     F*                                                              *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*                                                              *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD031             Date 10Apr06               *
      *  Prev Amend No. CSD027             Date 09Dec05               *
      *                 TDA035             Date 02Apr04               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 092366             Date 27Jun96               *
      *                 S01319             Date 13Aug91               *
     F*                     S01280         DATE 08NOV90              *
     F*                     S01194         DATE 06NOV90              *
     F*                     S01117         DATE 06NOV90              *
     F*                     E20774         DATE 15MAR90              *
     F*                     S01199         DATE 27FEB90              *    S01199
     F*                                                              *
     F****************************************************************
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
     F*      092366  -  Change date passed from TM3120 (Daily Summ.) *
     F*                 correctly from MMMDDYY to DDMMMYY to prevent *
     F*                 month being rejected as invalid if date      *
     F*                 format of system is set to 'M'.              *
     F*      S01319  -  Remove redundant processing
     F*
     F*      S01280  -  GENERAL TREASURY MGT ERROR FIXES:            *
     F*              -  HAVE TO PRESS ENTER TWICE ON INITIAL SCREEN  *
     F*                 FOR PROGRAM TO RESPOND                       *
     F*              -  IF NO RECORDS TO DISPLAY FOR PROMPTS         *
     F*                 HEADER SHOULD BE UPDATED WITH PROMPT         *
     F*                 CURRENCY WHEN SUBFILE IS CLEARED             *
     F*                                                              *
     F*      S01194  -  NEW STANDING DATA PROCESSING                 *    S01194
     F*                                                              *
     F*      S01117  -  NEW COPYRIGHT STATEMENT                           S01117
     F*                 DEALING PROGRAMS USED ONLY IN TREASURY MGMT. *    S01117
     F*                 MODULE NOW PREFIXED WITH 'TM'                *    S01117
     F*                                                              *
     F*      E20774  -  REPLACE QCAEXEC WITH QCMDEXC                 *    E20774
     F*                                                              *
     F*      S01199  -  HELP SYSTEM.                             *        S01199
     F*                                                              *
     F****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F/EJECT
     F****************************************************************
     F*
     F* ID F  C  H  L    FUNCTION OF INDICATORS
     F*       01         EXIT PROGRAM                                     S01166
     F*       05         REFRESH SCREEN                                   S01166
     F*       10         HELP KEY HAS BEEN PRESSED                        S01166
     F*       15         PROTECT SELECT FIELD                             S01166
     F*       25         ROLLUP REQUESTED                                 S01166
     F*       26         ROLLDOWN REQUESTED                               S01166
     F*       27         INHIBIT ROLL KEYS                                S01166
     F*
     F*       30         ACTIVATE SUBFILE END                             S01166
     F*       35         ACTIVATE SUBFILE DISPLAY                         S01166
     F*       36         ACTIVATE SUBFILE DISPLAY CONTROL                 S01166
     F*                                                                   S01166
     F*       40         ACTIVATE MESSAGE SUBFILE END                     S01166
     F*       46         ACTIVATE MESSAGE SUBFILE DISPLAY CONTROL         S01166
     F*                                                                   S01166
     F*       60         ERROR ON CURRENCY SELECTED                       S01166
     F*       61         ERROR ON DATE SELECTED                           S01166
     F*       69         GENERAL ERROR ON VALIDATION OF PROMPT SCREEN     S01166
     F*                                                                   S01166
     F*                                                                   S01166
     F*       72         SUCCESSFULL LOKUP OF @MTH
     F*       76         READ/CHAIN FAIL
     F*
     F*       U6         PROGRAM ERROR
     F*       U7         DATA BASE OR EXCEPTION ERROR
     F*       U8         DATA BASE OR EXCEPTION ERROR
     F*
     F*****************************************************************
     F/EJECT
     F***FDICDRLLIF**E***        K        DISK         KINFSR INFSR  U C  S01194
     F**********  TABTB11F                          KIGNORE               S01194
     F**********  TABTB20F                          KIGNORE               S01194
     FFDMNTHLLIF  E                    DISK         KINFSR INFSR      UC
     F*A38CPLLUF**E                    DISK         KINFSR INFSR      UC  S01166
     F***FDCCYTLLIF**E***        K        DISK  KINFSR INFSR  U C  S01166 S01194
     FFXFWMHLLIF  E           K        DISK         KINFSR INFSR      UC  S01166
     F*FDUSSILLIF**E**********K********DISK*********KINFSR*INFSRUC**S01166S01319
     FMUSER   IF  E           K        DISK         KINFSR INFSR      UC  S01319
     F***DL3110DDCF**E***                 WORKSTN             U C  S01166 S01117
     F**********                              RRN   KSFILE DL3110S1S01166 S01117
     F**********                                    KNUM        1  S01166 S01117
     FTM3110DDCF  E                    WORKSTN                        UC  S01117
     F                                        RRN   KSFILE TM3110S1       S01117
     F                                              KNUM        1         S01117
     F/EJECT
     E***                 @NARR   1   3 30                                S01166
     E***                                                                 S01166
     E****NARRATIVE ARRAY                                                 S01166
     E                    @PW     1   9 10 0
     E*
     E**  ARRAY OF POWERS OF TEN
     E                    @MTH       12  3                                S01166
     E*                                                                   S01166
     E**  MONTH SHORTNAME ARRAY                                           S01166
     E***                 @AM         3156                                S01166
     E*
     E**  ARRAY OF FXFWHMLL INFORMATION FOR EACH MONTH
     E***                 @YY         3  2 0                              S01166
     E                    @YY         4  2 0                              S01166
     E*
     E**  ARRAY OF DATE YEARS IN NUMERIC FORMAT
     E***                 @CC         3  2 0                              S01166
     E                    @CC         4  2 0                              S01166
     E*
     E**  ARRAY OF DATE CENTURIES
     E***                 @MM         3  2 0                              S01166
     E                    @MM         4  2 0                              S01166
     E*
     E**  ARRAY OF DATE MONTHS
     E                    @WI         2 15                                S01166
     E*
     E**  WORK ARRAY OF EDITED HALF-MTH 'IN' AMOUNTS
     E                    @WO         2 15
     E*
     E**  WORK ARRAY OF EDITED HALF-MTH 'OUT' AMOUNTS
     E                    @WN         2 16
     E*
     E**  WORK ARRAY OF EDITED HALF-MTH 'NET' AMOUNTS
     E                    @TI         2 15 0
     E*
     E**  WORK ARRAY OF NUMERIC HALF-MTH 'IN' AMOUNTS
     E                    @TO         2 15 0
     E*
     E**  WORK ARRAY OF NUMERIC HALF-MTH 'OUT' AMOUNTS
     E                    @TN         2 15 0
     E*
     E**  WORK ARRAY OF NUMERIC HALF-MTH 'NET' AMOUNTS
     E***                 @DT         3  5                                S01166
     E                    @DT         4  5                                S01166
     E*                                                                   S01166
     E****ARRAY*OF ALPHA DATES OUTPUT TO AMENQ1AA
     E                    @K         16  1
     E*
     E**  ARRAY TO HOLD OUTPUT AMOUNT FOR ZA0860
     E                    @OVR    1   1 36                                S01166
     E*                                                                   S01166
     E****ARRAY*TO*SET*UP*PARAMETER*FOR*CALL*TO*QCAEXEC             S01166E20774
     E**  ARRAY TO SET UP PARAMETER FOR CALL TO QCMDEXC                   E20774
     E*                                                                   S01166
     E                    @DD    12  12  2 0                              S01166
     E*                                                                   S01166
     E**  ARRAY OF DAYS IN A MONTH                                        S01166
     E*                                                                   S01117
     E                    CPY@    1   1 80                                S01117
     E* Copyright array                                                   S01117
     I/EJECT
     I*AMENQ******DS                            728                       S01166
     I*
     I** DATA STRUCTURE FOR DATA AREA AMENQ1AA
     I***                                     1  30 @NARR1                S01166
     I***                                    40  42 @ACCY                 S01166
     I***                                    45  74 @NARR2                S01166
     I***                                    99 103 @STEND                S01166
     I***                                   122 151 @NARR3                S01166
     I***                                   157 624 @AM                   S01166
     I@DETLS      DS                            156
     I*
     I**  DATA STRUCTURE WHICH HOLDS FXFWHMLL
     I**  INFORMATION FOR EACH CALULATED DATE
     I                                        1   5 @DTH
     I                                        6   7 @ONE
     I                                       10  19 @I1
     I                                       21  30 @O1
     I                                       32  42 @N1
     I                                       58  59 @TWO
     I                                       62  71 @I2
     I                                       73  82 @O2
     I                                       84  94 @N2
     I                                      107 111 @DTM
     I                                      114 123 @IT
     I                                      125 134 @OT
     I                                      136 146 @NT
     I@RDAT       DS
     I*
     I**  DATA STRUCTURE TO CONCATENATE DATE ON FXFWMHLL RECORD
     I                                        1   40FQFWBY
     I                                        5   60FQFWBM
     I@GDAT       DS
     I*
     I**  DATA STRUCTURE TO CONCATENATE GENERATED DATE
     I                                        1   20@GDAT1
     I                                        3   40@GDAT2
     I                                        5   60@GDAT3
     I*AEPT1      DS                                                      S01166
     I*
     I*** DATA STRUCTURE TO SUBDIVIDE FIELD FAEPT1 ON FX38CPLL            S01166
     I***                                     2   4 @FCCY                 S01166
     I***                                     8  10 @FMTH                 S01166
     I***                                    11  12 @FYR                  S01166
     I@RRFSH      DS                              4                       S01166
     I*
     I**  DATA STRUCTURE TO SUBDIVIDE ROLL/REFRESH INPUT PARAMETER
     I                                        1   2 @RRMTH                S01166
     I                                        3   4 @RRYR                 S01166
     I@MONTH    E DSFDMNTHPP
     I*
     I**  MONTH SHORTNAME DATA STRUCTURE
     I                                       24  59 @MTH
     I***@CCYKY******DS**                                                 S01194
     I**********                                                          S01194
     I****DATA*STRUCTURE*FOR*FDCCYTLL*KEY***                              S01194
     I**********                              9  12 @CCYK1                S01194
     I*                                                                   S01166
     I*                                                                   S01166
     I@STRNG      DS                            256                       S01166
     I*                                                                   S01166
     I** DATA STRUCTURE FOR INPUT PARAMETERS (SUBDIVIDE DATE)             S01166
     I*                                                                   S01166
     I                                        1   3 @STCCY                S01166
     I                                        4   5 @STDAY                S01166
     I                                        6   8 @STMTH                S01166
     I                                        9  10 @STYR                 S01166
     I                                       11  160@STDNO                S01166
     I                                       17 256 @STREM                S01166
     I*                                                                   S01166
     I*                                                                   S01166
     I@PRMCP      DS                             16                       S01166
     I*                                                                   S01166
     I** DATA STRUCTURE FOR PROMPT FIELDS FOR CONTROL PROGRAM             S01166
     I*                                                                   S01166
     I                                        1   3 @CPCCY                S01166
     I                                        4   5 @CPDAY                S01166
     I                                        6  10 @CPDAT                S01166
     I                                       11  16 @CPDNO                S01166
     I*                                                                   S01166
     I@SRDAT      DS                                                      S01166
     I*                                                                   S01166
     I*   DATA STRUCTURE FOR PROMPT DATE                                  S01166
     I                                        1   3 @SRMTH                S01166
     I                                        4   5 @SRYR                 S01166
     I*                                                                   S01166
     I*                                                                   S01166
     I*                                                                   S01166
     I@OVRID      DS                             36                       S01166
     I*                                                                   S01166
     I*   DATA STRUCTURE FOR COMMAND IN ARRAY @OVR                        S01166
     I                                       32  350@WAIT                 S01166
     I*                                                                   S01166
     IPSDS       SDS                                                      S01166
     I*                                                                   S01166
     I**  PROGRAM STATUS DATA STRUCTURE
     I                                      201 208 @FILE
     I                                      244 253 @JOB
     I                                      254 263 @USER
     I           UDS
     I*
     I**  LOCAL DATA AREA FOR DATA BASE ERROR
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     ISDCURR    E DSSDCURRPD                                              S01194
     I* External DS for Currency Details                                  S01194
     ISDBANK    E DSSDBANKPD                                              S01194
     I* External DS for Bank Details                                      S01194
     IDSSDY     E DSDSSDY                                                 S01194
     I* DS used by Access Objects (long records)                          S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* DS used by Access Objects (short records)                         S01194
     C                     MOVEACPY@      BIS@   80                       S01117
     C/EJECT
     C**CHECK PC STATUS
     C*****************************************************************
     C*                                                               *
     C* CONTROL PROCESSING - THIS ROUTINE CONTROLS THE WHOLE PROGRAM  *
     C*                                                               *
     C* CALLED BY :                                                   *
     C*                                                               *
     C* CALLS :      #A                                               *
     C*              #B                                               *
     C*              #C                                               *
     C*                                                               *
     C* USES :                                                        *
     C*                                                               *
     C*****************************************************************
     C*
     C**  INITIAL PROCESSING
     C                     EXSR #A
     C*
     C**  MAIN PROCESSING
     C*
     C                     EXSR #B
     C*
     C**  FINAL PROCESSING
     C                     EXSR #C
     C*
     C           ENDPGM    TAG
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C* SUBROUTINES USED                                              *
     C* ----------------                                              *
     C*                                                               *
     C*  1 #B     -   MAIN PROCESSING                                 *
     C*  2 ZA0860 -   CONVERT SHORT AMOUNT TO DISPLAY FORMAT          *
     C*  3 #ZA    -   CALCULATE NEXT 2 MONTHS DATES                   *
     C*  4 #ZB    -   CALCULATE PREVIOUS 2 MONTHS DATES               *
     C*  5 #BA    -   CURRENT PROMPT / REFRESH PROCESSING             *
     C*  6 #BB    -   FIRST PAGE PROCESSING                           *
     C*  7 #BC    -   LAST PAGE PROCESSING                            *
     C*  8 #BD    -   ROLL UP PROCESSING                              *
     C*  9 #BE    -   ROLL DOWN PROCESSING                            *
     C* 10 #BF    -   FIELD SET UP PROCESS                            *
     C* 11 #BFA   -   HALF-MONTH PROCESS                              *
     C* 12 #BFB   -   TOTAL MONTH PROCESS                             *
     C* 13 #A     -   INITIAL PROCESSING                              *   S01166
     C* 14 #C     -   FINAL PROCESSING                                *
     C**15*ZA0150*****READ*FDICDRLL************************************   S01194
     C* 16 ZA0280 -   READ FDMNTHLL                                   *
     C* 17 *PSSR  -   PROGRAM EXCEPTION/ERROR SUBROUTINE              *
     C* 18 INFSR  -   FILE EXCEPTION/ERROR ROUTINE                    *
     C*                                                               *
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #B - THIS ROUTINE CONTROLS THE MAIN PROCESSING OF THE        *
     C*       PROGRAM.                                                *
     C*                                                               *
     C*  CALLED BY : CONTROL PROCESSING                               *
     C*                                                               *
     C*  CALLS :     #BA                                              *
     C*              #BB                                              *
     C*              #BC                                              *
     C*              #BD                                              *
     C*              #BE                                              *
     C*              #BF                                              *
     C*                                                               *
     C***USES :      @FCCY  - CURRENCY FROM FX38CPLL RECORD           *   S01166
     C***************@CCYKY***KEY*TO*ACCESS*FDCCYTLL*******************   S01194
     C*              @CCYK1 - PART OF @CCYKY ABOVE                    *
     C*              @SCALE - SCALE FACTOR                            *
     C*              @PWR   - ARRAY OF POWERS OF TEN                  *
     C*              @S     - INDEX TO ABOVE ARRAY                    *
     C***            @NARR  - FIXED NARRATIVES ARRAY                  *   S01166
     C***            @NARR1 - 1ST FIXED NARRATIVE                     *   S01166
     C***            @NARR2 - 2ND FIXED NARRATIVE                     *   S01166
     C***            @NARR3 - 3RD FIXED NARRATIVE                     *   S01166
     C***            @ENQ   - ENQUIRY UPDATED INPUT PARAMETER         *   S01166
     C***            @NODAT - NO DATES GENERATED FLAG                 *   S01166
     C***            @NORIP - NO RECORDS IN PERIOD FLAG               *   S01166
     C*                                                               *
     C*****************************************************************
     C*
     C           #B        BEGSR
     C*
     C**  IF LAST RECORD INDICATOR IS SET, NO FURTHER PROCESSING
     C**  IN THIS ROUTINE
     C           *INLR     CABEQ'1'       #B9
     C*                                                                   S01166
     C*   CONTINUE PROCESSING UNTIL CMD/3 IS PRESSED                      S01166
     C           *IN01     DOWNE'1'                        B1             S01166
     C*
     C**  SET OFF THE SELECTION-PROCESSED INDICATOR                       S01166
     C*                                                                   S01166
     C                     MOVE 'N'       @@SLCT  1        *1             S01166
     C*                                                                   S01166
     C*   CLEAR THE MESSAGE QUEUE OF ANY OLD MESSAGES AND RESET           S01166
     C*   ANY ERROR INDICATORS                                            S01166
     C                     EXSR #ZC                        *1             S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C**  READ FX38CPLL - IF NO RECORD FOUND, THIS IS A DATA BASE
     C**  ERROR
     C*          1         SETLLFX38CPLL                                  S01166
     C*                    READ FX38CPLL                 76
     C***        1         SETLLCA38CPLL                                  S01166
     C***                  READ CA38CPLL                 76               S01166
     C***        *IN76     IFEQ '1'                        B1             S01166
     C***                  MOVEL'001'     DBASE            *1             S01166
     C*                    MOVEL'FX38CPLL'DBFILE           ***************S01166
     C***                  MOVEL'CA38CPLL'DBFILE           ***************S01166
     C***                  MOVE '1'       *INU7            * DB ERROR 001*S01166
     C***                  MOVE '1'       *INU8            ***************S01166
     C***                  MOVE '1'       *INLR            *1             S01166
     C***                  GOTO #B9                        *1             S01166
     C***                  END                             E1             S01166
     C*
     C**  READ THE CURRENCIES FILE USING POSITIONS 2-4 OF FAEPT1 FROM
     C**  THE FX38CPLL RECORD JUST ACCESSED
     C***                  MOVEL'20'      @CCYKY                          S01166
     C***                  MOVE '1'       @CCYK1                          S01166
     C***                  MOVEL@FCCY     @CCYK1                          S01166
     C***        @CCYKY    CHAINFDCCYTLL             80                   S01166
     C*                                                                   S01166
      * The following processing is now performed in screen validation    S01194
      * routine #BAA to avoid wrongly producing a database error if an    S01194
      * invalid currency is entered                                       S01194
     C****ACCESS*THE*CURRENCIES*FILE*TO*GET*CDP***                 S01166 S01194
     C**********           MOVEL'20'      @CCYKY                   S01166 S01194
     C**********           MOVE '1'       @CCYK1                   S01166 S01194
     C**********           MOVEL@SRCCY    @CCYK1                   S01166 S01194
     C********** @CCYKY    CHAINFDCCYTLL             80            S01166 S01194
     C**********                                                   S01166 S01194
     C****SET*UP*SCALE*FACTOR*BY*WHICH*NUMERIC*AMOUNTS*ARE*TO*BE*DIVIDED. S01194
     C********** CDP       ADD  3         @S      10       *1             S01194
     C**********           Z-ADD@PW,@S    @SCALE 100       *1             S01194
     C*                                                                   S01166
     C*                                                                   S01166
     C*   IF REFRESH REQUESTED USE TOP RECORD AND PROCESS AS FOR ENTER    S01166
     C*                                                                   S01166
     C           *IN05     IFEQ '1'                        B*2            S01166
     C                     MOVE @TOPRD    @RRFSH           **2            S01166
     C                     EXSR #BA                        **2            S01166
     C*                                                                   S01166
     C*   IF NOT REFRESH,IT MUST EITHER BE 'ENTER',ROLLUP OR              S01166
     C*   ROLLDOWN. IN THIS CASE SELECTION TAKES PRIORITY.IE,IF           S01166
     C*   A SELECTION HAS BEEN MADE,ROLLUP/ROLLDOWN BEHAVE AS 'ENTER'     S01166
     C*   AND THE SELECTION IS PROCESSED OVER AND ABOVE ANY PROMPTS       S01166
     C*   THAT MIGHT HAVE BEEN ENTERED                                    S01166
     C*                                                                   S01166
     C                     ELSE                            X*2            S01166
     C*                                                                   S01166
     C*   IF NO SUBFILE WRITTEN YET,IE STILL ON PROMPT SCREEN             S01166
     C*   THEN CANNOT READ SUBFILE                                        S01166
     C           *IN27     IFNE '1'                        B**3           S01166
     C*                                                                   S01166
     C*   DO UNTIL EITHER A SELECTION IS FOUND ON THE SUBFILE OR          S01166
     C*   THE END OF THE SUBFILE IS REACHED                               S01166
     C           @@SLCT    DOUEQ'Y'                        B***4          S01166
     C           *IN70     OREQ '1'                        X***4          S01166
     C*                                                                   S01166
     C*   READ THE SUBFILE FOR THE FIRST CHANGED RECORD                   S01166
     C*                                                                   S01166
     C**********           READCDL3110S1                 70***4    S01166 S01117
     C                     READCTM3110S1                 70***4           S01117
     C*                                                                   S01166
     C*   IF RECORD FOUND AND SELECT FIELD NOT BLANK RETURN TO            S01166
     C*   CONTROLLING PROGRAM WITH PARAMETERS SET UP AS DATA OF           S01166
     C*   RECORD SELECTED FROM SUBFILE                                    S01166
     C                     MOVE DDDAT     @HALF   2                       S01166
     C           @HALF     IFEQ '-1'                       B***5          S01166
     C                     MOVE '01'      @CPDAY           ****5          S01166
     C                     ELSE                            X***5          S01166
     C                     MOVE '15'      @CPDAY           ****5          S01166
     C                     END                             E***5          S01166
     C           *IN70     IFNE '1'                        B***5          S01166
     C           SSSLCT    ANDNE' '                        X***5          S01166
     C                     MOVE 'D'       @TERM            ****5          S01166
     C                     MOVE @SCCY     @CPCCY           ****5          S01166
     C                     MOVE DDDAT2    @CPDAT           ****5          S01166
     C                     MOVEL@PRMCP    @STRNG           ****5          S01166
     C*                                                                   S01166
     C*   SET THE SELECT FIELD FOR THE RECORD JUST PROCESSED TO           S01166
     C*   BLANK AND UPDATE THE SUBFILE.                                   S01166
     C*   SET ON THE SELECTION PROCESSED INDICATOR FOR WHEN THIS          S01166
     C*   PROGRAM IS RECALLED                                             S01166
     C*                                                                   S01166
     C                     MOVE ' '       SSSLCT           ****5          S01166
     C**********           UPDATDL3110S1                   ****5   S01166 S01117
     C                     UPDATTM3110S1                   ****5          S01117
     C                     MOVE 'Y'       @@SLCT           ****5          S01166
     C                     RETRN                           ****5          S01166
     C*                                                                   S01166
     C*   SET OFF ROLLUP/ROLLDOWN INDICATORS SO THAT IF PROGRAM IS        S01166
     C*   RECALLED A ROLL WILL NOT BE PROCESSED                           S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN25            ****5          S01166
     C                     MOVE '0'       *IN26            ****5          S01166
     C*                                                                   S01166
     C                     END                             E****5         S01166
     C                     END                             E***4          S01166
     C                     END                             E**3           S01166
     C*                                                                   S01166
     C*   IF NO SELECTION HAS BEEN FOUND IN THE SUBFILE THEN PROCESS      S01166
     C*   AN 'ENTER',ROLLUP OR ROLLDOWN.                                  S01166
     C*                                                                   S01166
     C*   'ENTER' PROCESSING                                              S01166
     C*                                                                   S01166
     C           *IN25     IFNE '1'                        B**3           S01166
     C           *IN26     ANDNE'1'                        X**3           S01166
     C           *IN05     ANDNE'1'                        B**3           S01166
     C                     EXSR #BA                        ***3           S01166
     C                     END                             E**3           S01166
     C*                                                                   S01166
     C*   IF ROLLUP HAS BEEN PRESSED                                      S01166
     C*                                                                   S01166
     C           *IN25     IFEQ '1'                        B**3           S01166
     C                     MOVE @BOTRD    @RRFSH           ***3           S01166
     C                     EXSR #BD                        ***3           S01166
     C                     END                             E**3           S01166
     C*                                                                   S01166
     C*   IF ROLLDOWN HAS BEEN PRESSED                                    S01166
     C*                                                                   S01166
     C           *IN26     IFEQ '1'                        B**3           S01166
     C                     MOVE @TOPRD    @RRFSH           ***3           S01166
     C                     EXSR #BE                        ***3           S01166
     C                     END                             E**3           S01166
     C**  SET UP FIXED NARRATIVE FIELDS
     C***                  MOVE @NARR,1   @NARR1                          S01166
     C***                  MOVE @NARR,2   @NARR2                          S01166
     C***                  MOVE @NARR,3   @NARR3                          S01166
     C*
     C*** SET UP CURRENCY NARRATIVE                                       S01166
     C***                  MOVE @FCCY     @ACCY                           S01166
     C***                                                                 S01166
     C**  GENERATE 3 DATES ACCORDING TO VALUE OF ENQUIRY UPDATED
     C**  INPUT PARAMETER.
     C***        @ENQ      CASEQ' '       #BA              B1             S01166
     C***        @ENQ      CASEQ'F'       #BB              *1             S01166
     C***        @ENQ      CASEQ'L'       #BC              *1             S01166
     C***        @ENQ      CASEQ'U'       #BD              *1             S01166
     C***        @ENQ      CASEQ'D'       #BE              *1             S01166
     C***        @ENQ      CASEQ'R'       #BA              *1             S01166
     C***                  END                             E1             S01166
     C*
     C**  IF DATES HAVE BEEN GENERATED, AND THE 'NO-RECORDS-IN-
     C**  PERIOD-FLAG' IS NOT SET, SET UP FIELDS IN @AMENQ.
     C***        @NODAT    IFEQ 'N'                        B1             S01166
     C***        @NORIP    ANDEQ'N'                        *1             S01166
     C***                  EXSR #BF                        *1             S01166
     C***                  END                             E1             S01166
     C*
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C*   IF THE ROLL/REFRESH KEYS ARE STILL INHIBITED THEN               S01166
     C*   SET OFF THE INDICATOR AND WRITE HEADER                          S01166
     C*                                                                   S01166
      * (only enable rollup/rolldown if subfile has been written)         S01280
     C           @SFILE    IFEQ 'Y'                        B2             S01280
     C                     MOVE '0'       *IN27            *1             S01166
     C                     END                             E2             S01280
      *                                                                   S01280
     C**********           WRITEDL3110F0               63  *1      S01166 S01117
     C                     WRITETM3110F0               63  *1             S01117
     C*                                                                   S01166
     C*   WRITE THE MESSAGE SUBFILE - IF THERE IS AN ERROR TO             S01166
     C*   DISPLAY OTHERWISE IT WILL REMOVE ANY PREVIOUS ERROR             S01166
     C*   MESSAGES ON THE SCREEN                                          S01166
     C*                                                                   S01166
     C                     MOVE '1'       *IN46            *1             S01166
     C**********           WRITEDL3110C0               63  *1      S01166 S01117
     C                     WRITETM3110C0               63  *1             S01117
     C*                                                                   S01166
     C*   WRITE THE COMMAND KEYS TEXT IF NO ERROR                         S01166
     C*                                                                   S01166
     C           @@ERMS    IFEQ 'N'                        B*2            S01166
     C**********           WRITEDL3110F1               63  **2     S01166 S01117
     C                     WRITETM3110F1               63  **2            S01117
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*    IF ERROR  LEAVE PREVIOUS SUBFILE ON SCREEN                     S01166
     C*    IF STILL ON PROMPT SCREEN (IE TOP RIGHT HAND CURRENCY          S01166
     C*    FIELD IS BLANK) JUST WRITE SUBFILE CONTROL                     S01166
     C*                                                                   S01166
     C*****      @SCCY     IFEQ *BLANKS                    B*2     S01166 S01280
     C           @SFILE    IFNE 'Y'                        **2            S01280
     C           @RRFSH    ANDEQ*BLANKS                    **2            S01166
     C                     MOVE '0'       *IN35            **2            S01166
     C                     MOVE '1'       *IN27            **2            S01166
     C                     ELSE                            X*2            S01166
     C                     MOVE '1'       *IN35            **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*    SET UP PROMPT FIELD FOR COMPARISON                             S01166
     C                     MOVEL@SRCCY    @COMP1  8        *1             S01166
     C                     MOVE @SRDAT    @COMP1           *1             S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C*    WRITE THE SUBFILE CONTROL                                      S01166
     C*                                                                   S01166
     C                     MOVE '1'       *IN36            *1             S01166
     C**********           WRITEDL3110C1               63  *1      S01166 S01117
     C                     WRITETM3110C1               63  *1             S01117
     C*                                                                   S01166
     C*   READ THE ENQUIRY SUBFILE CONTROL FOR ROLLS/REFRESH/PROMPTS      S01166
     C*                                                                   S01166
     C**                   READ DL3110C1                 73*1             S01166
     C**********           READ DL3110DD               0573*1      S01166 S01117
     C                     READ TM3110DD               0573*1             S01117
     C*                                                                   S01166
     C*    SET UP PROMPT FIELD FOR COMPARISON                             S01166
     C                     MOVEL@SRCCY    @COMP2  8        *1             S01166
     C                     MOVE @SRDAT    @COMP2           *1             S01166
     C*                                                                   S01166
     C*    SET UP THE CONDITIONS AND SETON @1ERR SO THAT IF FIRST         S01166
     C*    FIELDS ENTERED IN ERROR AND REFRESH REQUESTED,THE PROMPTS      S01166
     C*    WILL BE REDISPLAYED WITH NO PROCESSING UNTIL NEW PROMPTS       S01166
     C*    ENTERED                                                        S01166
     C*                                                                   S01166
     C                     MOVE 'N'       @1ERR   1         *1            S01166
     C           @SCCY     IFEQ *BLANKS                     B*2           S01166
     C           @RRFSH    ANDEQ*BLANKS                     **2           S01166
     C           @COMP1    ANDEQ@COMP2                      **2           S01166
     C                     MOVE 'Y'       @1ERR             **2           S01166
     C                     END                              E*2           S01166
     C*                                                                   S01166
     C*   PROCESS HELP WHILE IT IS REQUESTED AND RE-READ THE SCREEN       S01166
     C*                                                                   S01166
     C**         *IN10     DOWEQ'1'                         B*2    S01166 S01199
     C**                   CALL 'SDMENU'                    **2    S01166 S01199
     C**                   MOVE '0'       *IN10             **2    S01166 S01199
     C**********           READ DL3110DD               0573 **2    S01166 S01117
     C                     READ TM3110DD               0573 **2           S01117
     C**                   END                              E*2    S01166 S01199
     C*                                                                   S01166
     C                     END                              E1            S01166
     C           #B9       ENDSR                                          S01166
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************   S01166
     C*                                                               *   S01166
     C* #ZC      - RESET ERROR INDICATORS AND CLEAR MESSAGE QUEUE     *   S01166
     C*                                                               *   S01166
     C*                                                               *   S01166
     C* CALLS    - ZA0250  -  CLEAR PROGRAM SUBFILE MESSAGE QUEUE     *   S01166
     C*                                                               *   S01166
     C* CALLED BY  #B      -  MAIN PROCESSING                         *   S01166
     C*                                                               *   S01166
     C* FLDS USED  @@ERMS  - ERROR-MESSAGE-TO-DISPLAY INDICATOR       *   S01166
     C*                                                               *   S01166
     C*****************************************************************   S01166
     C*                                                                   S01166
     C           #ZC       BEGSR                                          S01166
     C*                                                                   S01166
     C** RESET ALL FIELD ERROR INDICATORS.                                S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN60                           S01166
     C                     MOVE '0'       *IN61                           S01166
     C*                                                                   S01166
     C** RESET THE GENERAL-ERROR-IN-VALIDATION INDICATOR                  S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN69                           S01166
     C*                                                                   S01166
     C** RESET THE ERROR RETURN CODE FROM ZA0270                          S01166
     C*                                                                   S01166
     C                     MOVE ' '       @RTCDE                          S01166
     C*                                                                   S01166
     C** RESET THE ERROR-MESSAGE-TO-DISPLAY INDICATOR                     S01166
     C*                                                                   S01166
     C                     MOVE 'N'       @@ERMS  1                       S01166
     C*                                                                   S01166
     C** CLEAR SCREEN MESSAGE QUEUE.                                      S01166
     C*                                                                   S01166
     C                     CALL 'ZA0250'                                  S01166
     C*                                                                   S01166
     C           #ZC9      ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     C*****************************************************************   S01166
     C****************************************************************
     C*                                                              *
     C*     ZA0860 -  CONVERT SHORT AMOUNT TO DISPLAY FORMAT         *
     C*                                                              *
     C*       CALLS:                                                 *
     C*                                                              *
     C*       INPUT: @@NUM  15N    (NUMERIC INPUT AMOUNT)            *
     C*                                                              *
     C*      OUTPUT: @@ALPH 16A    (ALPHA OUTPUT AMOUNT)             *
     C*                                                              *
     C*        USES: @K     15A  - ARRAY TO HOLD INPUT AMOUNT        *
     C*              @@I     1N  - INDEX TO @K                       *
     C*              @@WORK 15A  - ALPHA INPUT AMOUNT                *
     C*                                                              *
     C*     AMEND NO. 000001                  DATE   14/07/86        *
     C*       Amendment to correct output if its value is zero.      *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA0860    BEGSR
     C*
     C                     Z-ADD@@NUM     @@NUM  150
     C*
     C**  IF THE NUMBER IS ZERO, PLACE A SINGLE ZERO IN THE LAST PLACE
     C**  OF THE ARRAY, AND SET THE SIGN TO BLANK.  THEN BY-PASS
     C**  FURTHER SUBROUTINE PROCESSING.
     C           @@NUM     IFEQ 0                          B1
     C                     MOVEA*BLANKS   @K               *1
     C                     MOVE '0'       @K,15            *1
     C                     GOTO ZA0868                     *1
     C                     END                             E1
     C*
     C** SET UP SIGN OF OUTPUT AMOUNT
     C           @@NUM     IFLT 0                          B1
     C                     MOVE '-'       @K,16            *1
     C                     Z-SUB@@NUM     @@NUM            *1
     C                     ELSE                            X1
     C                     MOVE '+'       @K,16            *1
     C                     END                             E1
     C*
     C**  SET UP INPUT AMOUNT ARRAY
     C                     MOVE @@NUM     @@WORK 15
     C                     MOVEA@@WORK    @K
     C*
     C**  BLANK OUT EACH ELEMENT OF @K FROM LEFT TO RIGHT
     C**  UNTIL FIRST NON-ZERO ELEMENT OR 15TH ELEMENT
     C                     MOVE '0'       *IN90
     C                     Z-ADD1         @@I     20
     C           *IN90     DOUEQ'1'                        B1
     C           @@I       OREQ 15                         *1
     C*                                                    *1
     C** IF ARRAY ELEMENT ZERO, SET TO BLANKS              *1
     C           @K,@@I    IFEQ '0'                        B*2
     C                     MOVE *BLANK    @K,@@I           **2
     C                     ELSE                            X*2
     C                     MOVE '1'       *IN90            **2
     C                     END                             E*2
     C                     ADD  1         @@I              *1
     C                     END                             E1
     C*
     C** TAG ZA0868
     C           ZA0868    TAG                             **ZA0868**
     C*
     C** SET UP OUTPUT AMOUNT
     C                     MOVEA@K        @@ALPH 16
     C*
     C           ZA0869    ENDSR                           **ZA0869**
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #ZA - THIS ROUTINE CALCULATES THE DATE COMPONENTS OF THE     *
     C*        NEXT TWO CONSECUTIVE MONTHS, GIVEN THAT THE DATE       *
     C*        COMPONENTS OF THE FIRST MONTH HAVE ALREADY BEEN        *
     C*        CALCULATED.                                            *
     C*                                                               *
     C*  CALLED BY : #BA                                              *
     C*              #BB                                              *
     C*              #BD                                              *
     C*                                                               *
     C*  CALLS :                                                      *
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZA       BEGSR
     C*
     C**  CALCULATE THE DATE COMPONENTS FOR THE SECOND CONSECUTIVE
     C**  MONTH
     C           @MM,1     ADD  1         @MM,2
     C                     Z-ADD@YY,1     @YY,2
     C                     Z-ADD@CC,1     @CC,2
     C           @MM,2     IFGT 12                         B1
     C                     Z-ADD01        @MM,2            *1
     C           @YY,1     IFEQ 99                         B*2
     C                     Z-ADD0         @YY,2            **2
     C                     Z-ADD20        @CC,2            **2
     C                     ELSE                            X*2
     C           @YY,2     ADD  1         @YY,2            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C**  CALCULATE THE DATE COMPONENTS FOR THE THIRD CONSECUTIVE
     C**  MONTH
     C           @MM,2     ADD  1         @MM,3
     C                     Z-ADD@YY,2     @YY,3
     C                     Z-ADD@CC,2     @CC,3
     C           @MM,3     IFGT 12                         B1
     C                     Z-ADD01        @MM,3            *1
     C           @YY,2     IFEQ 99                         B*2
     C                     Z-ADD0         @YY,3            **2
     C                     Z-ADD20        @CC,3            **2
     C                     ELSE                            X*2
     C           @YY,2     ADD  1         @YY,3            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C**  CALCULATE THE DATE COMPONENTS FOR THE FOURTH CONSECUTIVE        S01166
     C**  MONTH                                                           S01166
     C           @MM,3     ADD  1         @MM,4                           S01166
     C                     Z-ADD@YY,3     @YY,4                           S01166
     C                     Z-ADD@CC,3     @CC,4                           S01166
     C           @MM,4     IFGT 12                         B1             S01166
     C                     Z-ADD01        @MM,4            *1             S01166
     C           @YY,3     IFEQ 99                         B*2            S01166
     C                     Z-ADD0         @YY,4            **2            S01166
     C                     Z-ADD20        @CC,4            **2            S01166
     C                     ELSE                            X*2            S01166
     C           @YY,3     ADD  1         @YY,4            **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C           #ZA9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #ZB - THIS ROUTINE CALCULATES THE DATE COMPONENTS OF THE     *
     C*        PREVIOUS TWO CONSECUTIVE MONTHS, GIVEN THAT THE DATE   *
     C*        COMPONENTS OF THE THIRD MONTH HAVE ALREADY BEEN        *
     C*        CALCULATED.                                            *
     C*                                                               *
     C*  CALLED BY : #BC                                              *
     C*              #BE                                              *
     C*                                                               *
     C*  CALLS :                                                      *
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZB       BEGSR
     C*                                                                   S01166
     C**  CALCULATE THE DATE COMPONENTS FOR THE THIRD CONSECUTIVE         S01166
     C**  MONTH                                                           S01166
     C           @MM,4     SUB  1         @MM,3                           S01166
     C                     Z-ADD@YY,4     @YY,3                           S01166
     C                     Z-ADD@CC,4     @CC,3                           S01166
     C           @MM,3     IFLT 01                         B1             S01166
     C                     Z-ADD12        @MM,3            *1             S01166
     C           @YY,4     IFEQ 00                         B*2            S01166
     C                     Z-ADD99        @YY,3            **2            S01166
     C                     Z-ADD19        @CC,3            **2            S01166
     C                     ELSE                            X*2            S01166
     C           @YY,4     SUB  1         @YY,3            **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*
     C**  CALCULATE THE DATE COMPONENTS FOR THE SECOND CONSECUTIVE
     C**  MONTH
     C           @MM,3     SUB  1         @MM,2
     C                     Z-ADD@YY,3     @YY,2
     C                     Z-ADD@CC,3     @CC,2
     C           @MM,2     IFLT 01                         B1
     C                     Z-ADD12        @MM,2            *1
     C           @YY,3     IFEQ 00                         B*2
     C                     Z-ADD99        @YY,2            **2
     C                     Z-ADD19        @CC,2            **2
     C                     ELSE                            X*2
     C           @YY,3     SUB  1         @YY,2            **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C**  CALCULATE THE DATE COMPONENTS FOR THE FIRST CONSECUTIVE
     C**  MONTH
     C*
     C           @MM,2     SUB  1         @MM,1
     C                     Z-ADD@YY,2     @YY,1
     C                     Z-ADD@CC,2     @CC,1
     C           @MM,1     IFLT 01                         B1
     C                     Z-ADD12        @MM,1            *1
     C           @YY,2     IFEQ 00                         B*2
     C                     Z-ADD99        @YY,1            **2
     C                     Z-ADD19        @CC,1            **2
     C                     ELSE                            X*2
     C           @YY,2     SUB  1         @YY,1            **2
     C                     END                             E*2
     C                     END                             E1
     C           #ZB9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BA - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
     C*        REFRESH AND BLANK INPUT PARAMETERS                     *   S01166
     C*******  THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETERS VALUES: *   S01166
     C*                                                               *
     C*******      ' ' - CURRENT PROMPT                               *   S01166
     C*******      'R' - REFRESH                                      *   S01166
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #ZA                                              *
     C*                                                               *
     C*  USES :******@ENQ   - ENQUIRY UPDATED INPUT PARAMETER         *   S01166
     C*******        @FYR   - YEAR FROM FX38CPLL RECORD               *   S01166
     C*              @RRFSH - ROLL/REFRESH INPUT PARAMETER            *   S01166
     C*              @RRYR  - YEAR FROM ROLL/REFRESH PARAMETER        *   S01166
     C*              @YY    - ARRAY OF DATE NUMERIC FMT. DATE YEARS   *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C***            @FMTH  - MONTH FROM FX38CPLL RECORD              *   S01166
     C*              @MTH   - MONTH SHORTNAME ARRAY                   *
     C*              @M     - MONTH NUMBER CORRESPONDING TO @MTH      *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C***            @FCCY  - CURRENCY FROM FX38CPLL RECORD           *   S01166
     C*              @STEND - 'START'/'END' NARRATIVE                 *
     C***            @NODAT - NO DATES GENERATED FLAG                 *   S01166
     C***            @NORIP - NO RECORDS IN PERIOD FLAG               *   S01166
     C*              @RDAT  - CONCATENATED DATE ON FXFWMHLL RECORD    *
     C*              @GDAT  - CONCATENATED FORM OF GENERATED DATE     *
     C*              @GDAT1 - @GDAT CENTURY                           *
     C*              @GDAT2 - @GDAT YEAR                              *
     C*              @GDAT3 - @GDAT MONTH                             *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BA       BEGSR
     C*                                                                   S01166
     C*   VALIDATE THE PROMPTS ENTERED                                    S01166
     C*                                                                   S01166
     C           *IN05     IFEQ '0'                        B1             S01166
     C                     EXSR #BAA                       *1             S01166
     C                     ELSE                            X1             S01166
     C           @RRFSH    IFEQ *BLANKS                    B*2            S01166
     C           @1ERR     OREQ 'Y'                        **2            S01166
     C           @SCCY     ORNE @SRCCY                     **2            S01166
     C                     MOVE '1'       *IN30            **2            S01166
     C                     GOTO #BA9                       **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*   IF THERE WAS AN ERROR SET THE SUBFILE END INDICATOR ON          S01166
     C*   (ALSO IF THERE IS AN ERROR LEFT ON THE FIRST PROMPTS SCREEN)    S01166
     C           *IN69     IFEQ '1'                        B1             S01166
     C                     MOVE '1'       *IN30            *1             S01166
     C                     GOTO #BA9                       *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*   ELSE CLEAR THE SUBFILE AND WRITE ENQUIRY SUBFILE CONTROL        S01166
     C*   FORMAT                                                          S01166
     C                     MOVE '0'       *IN35                           S01166
     C                     MOVE '0'       *IN36                           S01166
     C**********           WRITEDL3110C1               63          S01166 S01117
     C                     WRITETM3110C1               63                 S01117
     C                     MOVE '0'       *IN36                           S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C****IF*THE*ENQUIRY UPDATED PARAMETER IS ' ', SET UP THE FIRST       S01166
     C****DATE*YEAR IN NUMERIC FORMAT, USING POSNS. 9-10 OF FAEPT1        S01166
     C****UNLESS*THIS IS BLANK, IN WHICH CASE USE THE LAST 2 CHAS. OF     S01166
     C****THE*ALPHA RUN DATE FROM TABTB10.                                S01166
     C***        @ENQ      IFEQ ' '                        B1             S01166
     C***        @FYR      IFEQ ' '                        B*2            S01166
     C*   IF NEW ENQUIRY,SET UP THE FIRST DATE YEAR FROM THE INPUT        S01166
     C*   PARAMETER UNLESS THIS IS BLANK,IN WHICH CASE USE THE LAST       S01166
     C*   2 CHARACTERS FROM THE RUN DATE ON TABTB10                       S01166
     C***        @SRYR     IFEQ '  '                       B1             S01166
     C***                  MOVE RUNA      @YY,1            *1             S01166
     C***                  ELSE                            X1             S01166
     C***                  MOVE @FYR      @YY,1            *1             S01166
     C                     MOVE @SRYR     @YY,1            *1             S01166
     C***                  END                             E1             S01166
     C*
     C****IF*THE*ENQUIRY*UPDATED PARAMETER IS 'R', SET UP THE FIRST       S01166
     C*   IF REFRESH REQUESTED, SET UP THE FIRST                          S01166
     C*   DATE YEAR IN NUMERIC FORMAT, USING POSNS. 4-5 OF THE            S01166
     C*   ROLL/REFRESH INPUT PARAMETER.                                   S01166
     C***        @ENQ      IFEQ 'R'                        B1             S01166
     C           *IN05     IFEQ '1'                        B1             S01166
     C                     MOVE @RRYR     @YY,1            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C**  SET UP FIRST DATE CENTURY
     C           @YY,1     IFGE 72                         B1
     C                     Z-ADD19        @CC,1            *1
     C                     ELSE                            X1
     C                     Z-ADD20        @CC,1            *1
     C                     END                             E1
     C*
     C****IF THE ENQUIRY UPDATED PARAMETER IS ' ', SET UP THE FIRST       S01166
     C****DATE MONTH NUMBER AS THE MONTH NUMBER OF THE MONTH SHORTNAME    S01166
     C****IN POSNS. 6-8 OF FAEPT1.                                        S01166
     C***        @ENQ      IFEQ ' '                        B1             S01166
     C***                  Z-ADD1         @M      20       *1             S01166
     C***        @FMTH     LOKUP@MTH,@M                  60*1             S01166
     C***                  Z-ADD@M        @MM,1            *1             S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C****IF*THE*ENQUIRY UPDATED PARAMETER IS 'R', SET UP THE FIRST       S01166
     C**  IF REFRESH REQUESTED,SET UP THE FIRST                           S01166
     C**  DATE MONTH NUMBER AS THE MONTH NUMBER OF THE MONTH SHORTNAME
     C**  IN POSNS. 1-3 OF THE ROLL/REFRESH PARAMETER.
     C***        @ENQ      IFEQ 'R'                        B1             S01166
     C           *IN05     IFEQ '1'                        B1             S01166
     C***                  Z-ADD1         @M               *1             S01166
     C***        @RRMTH    LOKUP@MTH,@M                  60*1             S01166
     C***                  Z-ADD@M        @MM,1            *1             S01166
     C                     MOVE @RRMTH    @MM,1            *1             S01166
     C                     ELSE                            X1             S01166
     C*
     C**  SET UP THE FIRST DATE MONTH NUMBER AS THE MONTH NUMBER OF       S01166
     C**  THE MONTH SHORTNAME                                             S01166
     C                     Z-ADD1         @M      20       *1             S01166
     C           @SRMTH    LOKUP@MTH,@M                  72*1             S01166
     C**         *IN72     IFNE '1'                        B*2            S01166
     C**                   GOTO #BA9                       **2            S01166
     C**                   END                             E*2            S01166
     C                     Z-ADD@M        @MM,1            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C**  THE NUMERIC COMPONENTS OF THE FIRST DATE ARE NOW SET UP. NOW
     C**  CHECK IF THERE ARE ANY RECORDS ON FXFWMHLL FOR THIS CURRENCY,
     C**  BEYOND AND INCLUDING THE FIRST DATE JUST CALCULATED.
     C***                  MOVE @FCCY     @FQCCY                          S01166
     C                     MOVE @SRCCY    @FQCCY                          S01166
     C                     MOVEL@CC,1     @FQFWY
     C                     MOVE @YY,1     @FQFWY
     C                     MOVE @MM,1     @FQFWM
     C                     Z-ADD01        @FQFBH                          S01166
     C           @FQKEY    SETLLFXFWMHLL
     C                     READ FXFWMHLL                 76
     C*
     C**  IF THERE ARE NO FURTHER RECORDS ON FXFWMHLL FOR THIS CURRENCY,
     C**  SET 'NO DATES GENERATED' FLAG AND EXIT FROM THIS ROUTINE.
     C           *IN76     IFEQ '1'                        B1
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C           FQCCY     ORNE @SRCCY                     *1             S01166
     C***                  MOVE 'Y'       @NODAT           *1             S01166
     C                     MOVE 'END  '   @STEND           *1
     C*                                                                   S01166
     C*   SET SUBFILE END INDICATOR ON                                    S01166
     C           *IN05     IFEQ '0'                        B*2
     C                     MOVEL'RTM0006' @MSGID           **2            S01166
     C                     CALL 'ZA0240'                   **2            S01166
     C                     PARM           @MSGID           **2            S01166
     C                     MOVE 'Y'       @@ERMS           **2            S01166
      *                                                                   S01280
      * Ensure header currency changed in case of new selections          S01280
     C                     MOVEL@SRCCY    @SCCY                           S01280
     C                     END                             E*2
     C                     MOVE '1'       *IN30            *1             S01166
     C                     GOTO #BA9                       *1
     C                     ELSE                            X1             S01166
     C                     MOVE *BLANKS   @STEND           *1             S01166
     C                     END                             E1
     C*
     C**  NOW CALCULATE THE NUMERIC COMPONENTS OF THE DATES FOR THE
     C****NEXT*TWO CONSECUTIVE MONTHS.                                    S01166
     C**  NEXT THREE CONSECUTIVE MONTHS.                                  S01166
     C                     EXSR #ZA
     C*
     C**  IF NO RECORD EXISTS FOR THIS CURRENCY ON FXFWMHLL PRIOR TO THE
     C**  FIRST CALCULATED DATE, THEN THIS IS THE START OF THE DATA FOR
     C**  THIS CURRENCY.
     C           @FQKEY    SETLLFXFWMHLL
     C                     READPFXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B1
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C           FQCCY     ORNE @SRCCY                     *1             S01166
     C                     MOVE 'START'   @STEND           *1
     C                     ELSE                            X1             S01166
     C                     MOVE *BLANKS   @STEND           *1             S01166
     C                     END                             E1
     C*
     C**  IF NO RECORD EXISTS FOR THIS CURRENCY ON
     C**  FXFWMHLL AFTER THE LAST CALCULATED DATE, THEN
     C**  THIS IS THE END OF THE DATA FOR THIS CURRENCY.
     C***                  MOVEL@CC,3     @FQFWY                          S01166
     C***                  MOVE @YY,3     @FQFWY                          S01166
     C***                  MOVE @MM,3     @FQFWM                          S01166
     C                     MOVEL@CC,4     @FQFWY                          S01166
     C                     MOVE @YY,4     @FQFWY                          S01166
     C                     MOVE @MM,4     @FQFWM                          S01166
     C                     Z-ADD02        @FQFBH
     C           @FQKEY    SETGTFXFWMHLL
     C                     READ FXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B1
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C           FQCCY     ORNE @SRCCY                     *1             S01166
     C                     MOVE 'END  '   @STEND           *1
     C**                   ELSE                            X1             S01166
     C**                   MOVE *BLANKS   @STEND           *1             S01166
     C                     END                             E1
     C*
     C**  IF THERE ARE NO RECORDS ON FXFWMHLL FOR THIS CURRENCY IN
     C**  THE PERIOD DEFINED BY THE GENERATED DATES AND THE 'START/
     C**  END' NARRATIVE IS 'START', ENSURE THAT NO DATE NARRATIVES
     C**  ARE SENT TO AMENQ1AA AS THESE WOULD BE OUT OF THE RANGE OF
     C**  THE FXFWMHLL RECORD DATES FOR THIS CURRENCY.
     C           @STEND    IFEQ 'START'                    B1
     C           @STEND    OREQ *BLANKS                    *1
     C*                                                    *1
     C****SET UP CONCATENATED FORM OF 3RD GENERATED DATE   *1             S01166
     C****IN THE DATA STRUCTURE @GDAT                      *1             S01166
     C***                  MOVE @CC,3     @GDAT1           *1             S01166
     C***                  MOVE @YY,3     @GDAT2           *1             S01166
     C***                  MOVE @MM,3     @GDAT3           *1             S01166
     C*                                                    *1
     C**  SET UP CONCATENATED FORM OF 4TH GENERATED DATE   *1             S01166
     C**  IN THE DATA STRUCTURE @GDAT                      *1             S01166
     C                     MOVE @CC,4     @GDAT1           *1             S01166
     C                     MOVE @YY,4     @GDAT2           *1             S01166
     C                     MOVE @MM,4     @GDAT3           *1             S01166
     C**  FIND THE FIRST FXFWMHLL DATE (CONCATENATED IN    *1
     C**  THE DATA STRUCTURE @RDAT )                       *1
     C***                  MOVE @FCCY     @FQCCY           *1             S01166
     C                     MOVE @SRCCY    @FQCCY           *1             S01166
     C                     MOVEL@CC,1     @FQFWY           *1
     C                     MOVE @YY,1     @FQFWY           *1
     C                     MOVE @MM,1     @FQFWM           *1
     C                     Z-ADD01        @FQFBH           *1
     C           @FQKEY    SETLLFXFWMHLL                   *1
     C                     READ FXFWMHLL                 76*1
     C*                                                    *1
     C****IF*THE*1ST FXFWMHLL DATE IS BEYOND THE  3RD      *1             S01166
     C**  IF THE 1ST FXFWMHLL DATE IS BEYOND THE  4TH      *1             S01166
     C**  GENERATED DATE, THEN SET THE 'NO-RECORDS-IN-     *1
     C**  PERIOD-FLAG'                                     *1
     C           @RDAT     IFGT @GDAT                      B*2
     C***                  MOVE 'Y'       @NORIP           **2            S01166
     C*                                                                   S01166
     C*   SET SUBFILE END INDICATOR ON                                    S01166
     C           *IN05     IFEQ '0'                        B**3
     C                     MOVEL'RTM0006' @MSGID           ***3           S01166
     C                     CALL 'ZA0240'                   ***3           S01166
     C                     PARM           @MSGID           ***3           S01166
     C                     MOVE 'Y'       @@ERMS           ***3           S01166
      *                                                                   S01280
      * Ensure header currency changed in case of new selection           S01280
     C                     MOVEL@SRCCY    @SCCY                           S01280
     C                     END                             E**3           S01166
     C                     MOVE '1'       *IN30            **2            S01166
     C                     GOTO #BA9                       **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*    STORE THE FIRST AND LAST RECORDS IN CASE THERE                 S01166
     C*    NO MORE                                                        S01166
     C                     MOVE @YY,1     @TOPRD                          S01166
     C                     MOVEL@MM,1     @TOPRD                          S01166
     C                     MOVE @YY,4     @BOTRD                          S01166
     C                     MOVEL@MM,4     @BOTRD                          S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C*   DO THE CALCULATIONS AND WRITE THE SUBFILE                       S01166
     C*                                                                   S01166
     C                     EXSR #BF                                       S01166
     C*                                                                   S01280
     C* Set on subfile written flag used in #B                            S01280
     C                     MOVEL'Y'       @SFILE  1                       S01280
     C*                                                                   S01280
     C           #BA9      ENDSR
     C*
     C*****************************************************************
     C/EJECT                                                              S01166
     C*****************************************************************   S01166
     C*                                                               *   S01166
     C*  #BAA- THIS ROUTINE CONTROLS THE VALIDATION OF THE PROMPTS    *   S01166
     C*                                                               *   S01166
     C*                                                               *   S01166
     C*****************************************************************   S01166
     C*                                                                   S01166
     C           #BAA      BEGSR                                          S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C*   VALIDATE THE CURRENCY USING CURRENCY PROMPT                     S01166
     C**********           MOVEL'20'      @CCYKY                   S01166 S01194
     C**********           MOVE '1'       @CCYK1                   S01166 S01194
     C**********           MOVEL@SRCCY    @CCYK1                   S01166 S01194
     C********** @CCYKY    CHAINFDCCYTLL             80            S01166 S01194
      *                                                                   S01194
      * Call Access Object for currency details                           S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM *BLANKS   @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @SRCCY  3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01166
     C*   IF ERROR HAS OCCURRED                                           S01166
     C********** *IN80     IFEQ '1'                        B1      S01166 S01194
     C           @RTCD     IFNE *BLANKS                    B1             S01194
     C*                                                                   S01166
     C*   DISPLAY MESSAGE,SET ON ERROR ON VALIDATION INDICATOR,REVERSE    S01166
     C*   IMAGE THE FIELD AND POSITION THE CURSOR TO SHOW ERROR           S01166
     C*                                                                   S01166
     C                     MOVEL'RTM0002' @MSGID 10        *1             S01166
     C                     CALL 'ZA0240'                   *1             S01166
     C                     PARM           @MSGID           *1             S01166
     C*                                                                   S01166
     C                     MOVE '1'       *IN69            *1             S01166
     C                     MOVE '1'       *IN60            *1             S01166
     C                     MOVE 'Y'       @@ERMS           *1             S01166
      *                                                                   S01194
      * else if currency valid, set up scaling factor using CDP           S01194
      * by which numeric amounts are to be divided                        S01194
      * (this was previously done in routine #B)                          S01194
     C                     ELSE                            X1             S01194
     C           A6NBDP    ADD  3         @S      10       *1             S01194
     C                     Z-ADD@PW,@S    @SCALE 100       *1             S01194
      *                                                                   S01194
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*   VALIDATE MONTH                                                  S01166
     C           @SRMTH    LOKUP@MTH                     71               S01166
     C*                                                                   S01166
     C*   VALIDATE YEAR - IT MUST BE NUMERIC                              S01166
     C                     TESTN          @SRYR      7373                 S01166
     C*                                                                   S01166
     C*   IF ERROR HAS OCCURRED                                           S01166
     C           *IN71     IFEQ '0'                        B1             S01166
     C           *IN73     OREQ '0'                        *1             S01166
     C*                                                                   S01166
     C*   DISPLAY MESSAGE,SET ON ERROR ON VALIDATION INDICATOR,REVERSE    S01166
     C*   IMAGE THE FIELD AND POSITION THE CURSOR TO SHOW ERROR           S01166
     C*                                                                   S01166
     C                     MOVEL'RTM0003' @MSGID 10        *1             S01166
     C                     CALL 'ZA0240'                   *1             S01166
     C                     PARM           @MSGID           *1             S01166
     C*                                                                   S01166
     C                     MOVE '1'       *IN69            *1             S01166
     C                     MOVE '1'       *IN61            *1             S01166
     C                     MOVE 'Y'       @@ERMS           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*   DATE MUST NOT BE BEFORE TODAY'S DATE,SO COMPARE DATE            S01166
     C*   ENTERED WITH THE RUN DATE.                                      S01166
     C*   PUT DATE INTO DDMMYY FORMAT TO CALL ZA0270                      S01166
     C*                                                                   S01166
     C           @@ERMS    IFEQ 'N'                        B1             S01166
     C                     Z-ADD1         @M               *1             S01166
     C           @SRMTH    LOKUP@MTH,@M                  71*1             S01166
     C                     Z-ADD@M        @SRMM   20       *1             S01166
     C*   SET THE DAY TO THE LAST DAY OF THE MONTH                        S01166
     C*                                                                   S01166
     C                     Z-ADD@DD,@M    @SRDY   20       *1             S01166
     C                     MOVE @SRYR     @SRYY   20       *1             S01166
     C                     EXSR #BAB                       *1             S01166
     C*   IF DATE IS BEFORE TODAY'S DATE                                  S01166
     C********** @DAYNO    IFLT RUND                       B*2     S01166 S01194
     C           @DAYNO    IFLT BJRDNB                     B*2            S01194
     C           @RTCDE    OREQ '1'                        **2            S01166
     C*                                                                   S01166
     C*   DISPLAY MESSAGE,SET ON ERROR ON VALIDATION INDICATOR,REVERSE    S01166
     C*   IMAGE THE FIELD AND POSITION THE CURSOR TO SHOW ERROR           S01166
     C*                                                                   S01166
     C                     MOVEL'RTM0005' @MSGID           **2            S01166
     C                     CALL 'ZA0240'                   **2            S01166
     C                     PARM           @MSGID           **2            S01166
     C*                                                                   S01166
     C                     MOVE '1'       *IN69            **2            S01166
     C                     MOVE '1'       *IN61            **2            S01166
     C                     MOVE 'Y'       @@ERMS           **2            S01166
     C                     END                             E*2            S01166
     C*
     C                     END                             E1
     C*                                                                   S01166
     C           #BAA9     ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     C*****************************************************************   S01166
     C*                                                               *   S01166
     C*  #BAB- THIS ROUTINE CONVERTS THE DATE TO A MIDAS DAY NUMBER   *   S01166
     C*        FOR THE PURPOSE OF COMPARISON                          *   S01166
     C*                                                               *   S01166
     C*  CALLED BY : #BAA                                             *   S01166
     C*                                                               *   S01166
     C*  CALLS :     ZA0270                                           *   S01166
     C*                                                               *   S01166
     C*****************************************************************   S01166
     C*                                                                   S01166
     C           #BAB      BEGSR                                          S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C           @SRMM     IFEQ 2                          B1             S01166
     C*                                                                   S01166
     C*   IF MONTH IS FEBRUARY,TEST FOR LEAP YEAR                         S01166
     C                     ADD  28        @SRYY            *1             S01166
     C           @SRYY     DIV  4         @@YY    20       *1             S01166
     C                     MVR            @REM    10       *1             S01166
     C           @REM      IFEQ 0                          B*2            S01166
     C                     Z-ADD29        @SRDY            **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C                     MOVE 'D'       @DATF   1                       S01166
     C*   MOVE DATE FIELDS INTO 1 FIELD                                   S01166
     C*                                                                   S01166
     C                     MOVEL@SRDY     @WORK   40                      S01166
     C                     MOVE @SRMM     @WORK                           S01166
     C                     MOVEL@WORK     @SRUND  60                      S01166
     C                     MOVE @SRYY     @SRUND                          S01166
     C*                                                                   S01166
     C*   CONVERT TO MIDAS DAY NO.                                        S01166
     C                     CALL 'ZA0270'                                  S01166
     C                     PARM           @SRUND                          S01166
     C                     PARM           @DATF                           S01166
     C           @RTCDE    PARM           @RTCDE  1                       S01166
     C           @DAYNO    PARM           @DAYNO  50                      S01166
     C*                                                                   S01166
     C           #BAB9     ENDSR                                          S01166
     ******************************************************************   S01166
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BB - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
     C*        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
     C*                                                               *
     C*            'F' - FIRST PAGE                                   *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #ZA                                              *
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @FCCY  - CURRENCY FROM FX38CPLL RECORD           *
     C*              @NODAT - 'NO DATES GENERATED' FLAG               *
     C*              @STEND - 'START'/'END' NARRATIVE                 *
     C*                                                               *
     C*****************************************************************
     C*
     C***        #BB       BEGSR                                          S01166
     C*
     C**  IF THERE ARE NO RECORDS FOR THIS CURRENCY  ON FXFWMHLL, SET
     C**  'NO DATES GENERATED' FLAG AND EXIT THIS ROUTINE
     C***                  MOVE @FCCY     @FQCCY                          S01166
     C***                  MOVE *LOVAL    @FQFWY                          S01166
     C***                  MOVE *LOVAL    @FQFWM                          S01166
     C***                  MOVE *LOVAL    @FQFBH                          S01166
     C***        @FQKEY    SETLLFXFWMHLL                                  S01166
     C***                  READ FXFWMHLL                 76               S01166
     C***        *IN76     IFEQ '1'                        B1             S01166
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C***                  MOVE 'Y'       @NODAT           *1             S01166
     C***                  MOVE 'END  '   @STEND           *1             S01166
     C***                  GOTO #BB9                       *1             S01166
     C***                  END                             E1             S01166
     C*
     C**  SET 'START'/'END' NARRATIVE TO 'START'
     C***                  MOVE 'START'   @STEND                          S01166
     C*
     C**  SET UP FIRST DATE COMPONENTS FROM FXFWMHLL RECORD JUST READ.
     C***                  MOVELFQFWBY    @CC,1                           S01166
     C***                  MOVE FQFWBY    @YY,1                           S01166
     C***                  MOVE FQFWBM    @MM,1                           S01166
     C*
     C**  NOW CALCULATE THE NEXT TWO CONSECUTIVE DATE COMPONENTS
     C***                  EXSR #ZA                                       S01166
     C*
     C**  IF NO RECORD EXISTS FOR THIS CURRENCY ON
     C**  FXFWMHLL AFTER THE LAST CALCULATED DATE, THEN
     C**  THIS IS THE END OF THE DATA FOR THIS CURRENCY.
     C***                  MOVEL@CC,3     @FQFWY                          S01166
     C***                  MOVE @YY,3     @FQFWY                          S01166
     C***                  MOVE @MM,3     @FQFWM                          S01166
     C***                  Z-ADD02        @FQFBH                          S01166
     C***        @FQKEY    SETGTFXFWMHLL                                  S01166
     C***                  READ FXFWMHLL                 76               S01166
     C***        *IN76     IFEQ '1'                        B1             S01166
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C***                  MOVE 'END  '   @STEND           *1             S01166
     C***                  END                             E1             S01166
     C*
     C***        #BB9      ENDSR                                          S01166
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BC - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
     C*        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
     C*                                                               *
     C*            'L' - LAST PAGE                                    *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #ZB                                              *
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @FCCY  - CURRENCY FROM FX38CPLL RECORD           *
     C*              @NODAT - 'NO DATES GENERATED' FLAG               *
     C*              @STEND - 'START'/'END' NARRATIVE                 *
     C*                                                               *
     C*****************************************************************
     C*
     C***        #BC       BEGSR                                          S01166
     C*
     C**  IF THERE ARE NO RECORDS FOR THIS CURRENCY  ON FXFWMHLL, SET
     C**  'NO DATES GENERATED' FLAG AND EXIT THIS ROUTINE
     C***                  MOVE @FCCY     @FQCCY                          S01166
     C***                  MOVE @SRCCY    @FQCCY                          S01166
     C***                  MOVE *HIVAL    @FQFWY                          S01166
     C***                  MOVE *HIVAL    @FQFWM                          S01166
     C***                  MOVE *HIVAL    @FQFBH                          S01166
     C***        @FQKEY    SETGTFXFWMHLL                                  S01166
     C***                  READPFXFWMHLL                 76               S01166
     C***        *IN76     IFEQ '1'                        B1             S01166
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C***        FQCCY     ORNE @SRCCY                     *1             S01166
     C***                  MOVE 'Y'       @NODAT           *1             S01166
     C***                  MOVE 'END  '   @STEND           *1             S01166
     C***                  GOTO #BC9                       *1             S01166
     C***                  END                             E1             S01166
     C*
     C**  SET 'START'/'END' NARRATIVE TO 'END'
     C***                  MOVE 'END  '   @STEND                          S01166
     C*
     C**  SET UP THIRD DATE COMPONENTS FROM FXFWMHLL RECORD JUST READ.
     C***                  MOVELFQFWBY    @CC,3                           S01166
     C***                  MOVE FQFWBY    @YY,3                           S01166
     C***                  MOVE FQFWBM    @MM,3                           S01166
     C*
     C**  NOW CALCULATE THE PREVIOUS TWO CONSECUTIVE DATE COMPONENTS
     C***                  EXSR #ZB                                       S01166
     C*
     C***        #BC9      ENDSR                                          S01166
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BD - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
     C*        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
     C*                                                               *
     C*            'U' - ROLL UP                                      *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #ZA                                              *   S01166
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*              @RRYR  - YEAR FROM ROLL/REFRESH INPUT PARM.      *
     C*              @RRMTH - MONTH FROM ROLL/REFRESH INPUT PARM.     *
     C*              @MTH   - MONTH SHORTNAME ARRAY                   *
     C*              @M     - MONTH NUMBER CORRESPONDING TO @MTH      *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @FCCY  - CURRENCY FROM FX38CPLL RECORD           *
     C*              @STEND - 'START'/'END' NARRATIVE                 *
     C*              @NODAT - 'NO DATES GENERATED' FLAG               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BD       BEGSR
     C*   NO PROCESSING IF THE ROLL/REFRESH PARAMETER IS BLANK            S01166
     C*                                                                   S01166
     C           @RRFSH    IFEQ *BLANKS                    B1             S01166
     C                     MOVE '1'       *IN30            *1             S01166
     C                     ELSE                            X1             S01166
     C*                                                                   S01166
     C**  SET UP FIRST DATE YEAR FROM ROLL/REFRESH INPUT PARAMETER
     C                     MOVE @RRYR     @YY,1                           S01166
     C*
     C**  CALCULATE FIRST DATE CENTURY
     C           @YY,1     IFGE 72                         B*2            S01166
     C                     Z-ADD19        @CC,1            **2            S01166
     C                     ELSE                            X*2            S01166
     C                     Z-ADD20        @CC,1            **2            S01166
     C                     END                             E*2            S01166
     C*
     C**  SET UP FIRST DATE MONTH FROM ROLL/REFRESH INPUT PARM.
     C***                  Z-ADD1         @M                              S01166
     C***        @RRMTH    LOKUP@MTH,@M                  60               S01166
     C***                  Z-ADD@M        @MM,1                           S01166
     C                     MOVE @RRMTH    @MM,1                           S01166
     C*
     C**  IF NO RECORDS ON FXFWMHLL FOR THIS CURRENCY BEYOND DATE
     C**  JUST CALCULATED, SET 'NO DATES GENERATED' FLAG AND EXIT
     C**  FROM THIS ROUTINE
     C***                  MOVE @FCCY     @FQCCY                          S01166
     C                     MOVE @SRCCY    @FQCCY                          S01166
     C                     MOVEL@CC,1     @FQFWY
     C                     MOVE @YY,1     @FQFWY
     C                     MOVE @MM,1     @FQFWM
     C                     MOVE *HIVAL    @FQFBH
     C           @FQKEY    SETGTFXFWMHLL
     C                     READ FXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B*2            S01166
     C***        FQCCY     ORNE @FCCY                      **2            S01166
     C           FQCCY     ORNE @SRCCY                     **2            S01166
     C***                  MOVE 'Y'       @NODAT           **2            S01166
     C*                                                                   S01166
     C*   SET SUBFILE END INDICATOR ON                                    S01166
     C                     MOVEL'RTM0001' @MSGID           **2            S01166
     C                     CALL 'ZA0240'                   **2            S01166
     C                     PARM           @MSGID           **2            S01166
     C                     MOVE '1'       *IN30            **2            S01166
     C                     MOVE 'Y'       @@ERMS           **2            S01166
     C                     GOTO #BD9                       **2            S01166
     C                     END                             E*2            S01166
     C*
     C*   IF NOT END OF FILE THEN CLEAR THE SUBFILE,SET OFF THE           S01166
     C*   SUBFILE END INDICATOR                                           S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN35                           S01166
     C                     MOVE '0'       *IN36                           S01166
     C**********           WRITEDL3110C1               63          S01166 S01117
     C                     WRITETM3110C1               63                 S01117
     C                     MOVE '0'       *IN30                           S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C**  MODIFY FIRST CALCULATED DATE TO NEXT MONTH DATE
     C                     ADD  1         @MM,1
     C           @MM,1     IFGT 12                         B*2            S01166
     C                     Z-ADD01        @MM,1            **2            S01166
     C           @YY,1     IFEQ 99                         B**3           S01166
     C                     Z-ADD0         @YY,1            ***3           S01166
     C                     Z-ADD20        @CC,1            ***3           S01166
     C                     ELSE                            X**3           S01166
     C                     ADD  1         @YY,1            ***3           S01166
     C                     END                             E**3           S01166
     C                     END                             E*2            S01166
     C*
     C**  CALCULATE DATES FOR NEXT 2 CONSECUTIVE MONTHS
     C                     EXSR #ZA
     C*
     C**  IF THERE ARE NO MORE RECORDS ON FXFWMHLL FOR THIS
     C**  CURRENCY BEYOND THE THIRD CALCULATED DATE, SET
     C**  'START'/'END' NARRATIVE TO 'END'
     C***                  MOVEL@CC,3     @FQFWY                          S01166
     C***                  MOVE @YY,3     @FQFWY                          S01166
     C***                  MOVE @MM,3     @FQFWM                          S01166
     C***                  MOVE *HIVAL    @FQFBH                          S01166
     C                     MOVEL@CC,4     @FQFWY                          S01166
     C                     MOVE @YY,4     @FQFWY                          S01166
     C                     MOVE @MM,4     @FQFWM                          S01166
     C                     MOVE *HIVAL    @FQFBH                          S01166
     C           @FQKEY    SETGTFXFWMHLL
     C                     READ FXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B*2            S01166
     C***        FQCCY     ORNE @FCCY                      **2            S01166
     C           FQCCY     ORNE @SRCCY                     **2            S01166
     C                     MOVE 'END  '   @STEND           **2            S01166
     C                     ELSE                            X*2            S01166
     C                     MOVE *BLANKS   @STEND           **2            S01166
     C                     END                             E*2            S01166
     C*    STORE THE FIRST AND LAST RECORDS IN CASE THERE                 S01166
     C*    NO MORE                                                        S01166
     C                     MOVE @YY,1     @TOPRD  4                       S01166
     C                     MOVEL@MM,1     @TOPRD                          S01166
     C                     MOVE @YY,4     @BOTRD  4                       S01166
     C                     MOVEL@MM,4     @BOTRD                          S01166
     C*
     C*   DO CALCULATIONS AND THEN WRITE THE RECORD TO THE SUBFILE        S01166
     C                     EXSR #BF                                       S01166
     C*                                                                   S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           #BD9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BE - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
     C*        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
     C*                                                               *
     C*            'D' - ROLL DOWN                                    *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #ZB                                              *
     C*                                                               *
     C*  USES:       @YY    - ARRAY OF DATE YEARS                     *
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*              @RRYR  - YEAR FROM ROLL/REFRESH INPUT PARM.      *
     C*              @RRMTH - MONTH FROM ROLL/REFRESH INPUT PARM.     *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @FCCY  - CURRENCY FROM FX38CPLL RECORD           *
     C*              @STEND - 'START'/'END' NARRATIVE                 *
     C*              @NODAT - 'NO DATES GENERATED' FLAG               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BE       BEGSR
     C*
     C*   NO PROCESSING IF THE ROLL/REFRESH PARAMETER IS BLANK            S01166
     C*                                                                   S01166
     C           @RRFSH    IFEQ *BLANKS                    B1             S01166
     C                     MOVE '1'       *IN30            *1             S01166
     C                     ELSE                            X1             S01166
     C*                                                                   S01166
     C**  SET UP THIRD DATE YEAR FROM ROLL/REFRESH INPUT PARAMETER
     C***                  MOVE @RRYR     @YY,3                           S01166
     C***                                                                 S01166
     C*** CALCULATE THIRD DATE CENTURY                                    S01166
     C***        @YY,3     IFGE 72                         B1             S01166
     C***                  Z-ADD19        @CC,3            *1             S01166
     C***                  ELSE                            X1             S01166
     C***                  Z-ADD20        @CC,3            *1             S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C*** SET UP THIRD DATE MONTH FROM ROLL/REFRESH INPUT PARM.           S01166
     C***                  Z-ADD1         @M                              S01166
     C***        @RRMTH    LOKUP@MTH,@M                  60               S01166
     C***                  Z-ADD@M        @MM,3                           S01166
     C***                                                                 S01166
     C*** IF NO RECORDS ON FXFWMHLL FOR THIS CURRENCY BEFORE DATE         S01166
     C*** JUST CALCULATED, SET 'NO DATES GENERATED' FLAG AND EXIT         S01166
     C*** FROM THIS ROUTINE                                               S01166
     C***                  MOVE @FCCY     @FQCCY                          S01166
     C***                  MOVEL@CC,3     @FQFWY                          S01166
     C***                  MOVE @YY,3     @FQFWY                          S01166
     C***                  MOVE @MM,3     @FQFWM                          S01166
     C***        @FQKEY    SETLLFXFWMHLL                                  S01166
     C***                  READPFXFWMHLL                 76               S01166
     C***        *IN76     IFEQ '1'                        B1             S01166
     C***        FQCCY     ORNE @FCCY                      *1             S01166
     C***                  MOVE 'Y'       @NODAT           *1             S01166
     C***                  GOTO #BE9                       *1             S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C*** MODIFY THIRD CALCULATED DATE TO PREVIOUS MONTH DATE             S01166
     C***                  SUB  1         @MM,3                           S01166
     C***        @MM,3     IFLT 01                         B1             S01166
     C***                  Z-ADD12        @MM,3            *1             S01166
     C***        @YY,3     IFEQ 00                         B*2            S01166
     C***                  Z-ADD99        @YY,3            **2            S01166
     C***                  Z-ADD19        @CC,3            **2            S01166
     C***                  ELSE                            X*2            S01166
     C***                  SUB  1         @YY,3            **2            S01166
     C***                  END                             E*2            S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C**  CALCULATE DATES FOR PREVIOUS 2 CONSECUTIVE MONTHS
     C**  SET UP FOURTH DATE YEAR FROM ROLL/REFRESH INPUT PARAMETER       S01166
     C                     MOVE @RRYR     @YY,4                           S01166
     C*                                                                   S01166
     C**  CALCULATE FOURTH DATE CENTURY                                   S01166
     C           @YY,4     IFGE 72                         B*2            S01166
     C                     Z-ADD19        @CC,4            **2            S01166
     C                     ELSE                            X*2            S01166
     C                     Z-ADD20        @CC,4            **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C**  SET UP FOURTH DATE MONTH FROM ROLL/REFRESH INPUT PARM.          S01166
     C***                  Z-ADD1         @M                              S01166
     C***        @RRMTH    LOKUP@MTH,@M                  60               S01166
     C***                  Z-ADD@M        @MM,4                           S01166
     C                     MOVE @RRMTH    @MM,4                           S01166
     C*   SET UP PREVIOUS MONTH                                           S01166
     C*                                                                   S01166
     C           @MM,4     SUB  1         @MM,3                           S01166
     C           @MM,3     IFGE 01                         B*2            S01166
     C                     Z-ADD@YY,4     @YY,3            **2            S01166
     C                     ELSE                            X*2            S01166
     C                     Z-ADD12        @MM,3            **2            S01166
     C           @YY,4     IFEQ 00                         B**3           S01166
     C                     Z-ADD99        @YY,3            ***3           S01166
     C                     Z-ADD19        @CC,3            ***3           S01166
     C                     ELSE                            X**3           S01166
     C           @YY,4     SUB  1         @YY,3            ***3           S01166
     C                     END                             E**3           S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*   CALCULATE THE MIDAS DAY NO FOR THE PREVIOUS DATE                S01166
     C*                                                                   S01166
     C                     MOVE @MM,3     @SRMM                           S01166
     C                     MOVE @MM,3     @M                              S01166
     C                     Z-ADD@DD,@M    @SRDY                           S01166
     C                     Z-ADD@YY,3     @SRYY                           S01166
     C                     EXSR #BAB                                      S01166
     C*                                                                   S01166
     C**  IF NO RECORDS ON FXFWMHLL FOR THIS CURRENCY BEFORE DATE         S01166
     C**  JUST CALCULATED, SET 'NO DATES GENERATED' FLAG AND EXIT         S01166
     C**  FROM THIS ROUTINE                                               S01166
     C                     MOVE @SRCCY    @FQCCY                          S01166
     C                     MOVEL@CC,4     @FQFWY                          S01166
     C                     MOVE @YY,4     @FQFWY                          S01166
     C                     MOVE @MM,4     @FQFWM                          S01166
     C           @FQKEY    SETLLFXFWMHLL                                  S01166
     C                     READPFXFWMHLL                 76               S01166
     C           *IN76     IFEQ '1'                        B*2            S01166
     C********** @DAYNO    ORLT RUND                       **2     S01166 S01194
     C           @DAYNO    ORLT BJRDNB                     **2            S01194
     C           FQCCY     ORNE @SRCCY                     **2            S01166
     C***                  MOVE 'Y'       @NODAT           **2            S01166
     C*                                                                   S01166
     C*   SET SUBFILE END INDICATOR ON                                    S01166
     C                     MOVEL'RTM0001' @MSGID           **2            S01166
     C                     CALL 'ZA0240'                   **2            S01166
     C                     PARM           @MSGID           **2            S01166
     C                     MOVE '1'       *IN30            **2            S01166
     C                     MOVE 'Y'       @@ERMS           **2            S01166
     C                     GOTO #BE9                       **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*   IF NOT END OF FILE THEN CLEAR THE SUBFILE,SET OFF THE           S01166
     C*   SUBFILE END INDICATOR                                           S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN35                           S01166
     C                     MOVE '0'       *IN36                           S01166
     C**********           WRITEDL3110C1               63          S01166 S01117
     C                     WRITETM3110C1               63                 S01117
     C                     MOVE '0'       *IN30                           S01166
     C*                                                                   S01166
     C**  MODIFY FOURTH CALCULATED DATE TO PREVIOUS MONTH DATE            S01166
     C*                                                                   S01166
     C                     Z-ADD@MM,3     @MM,4                           S01166
     C                     Z-ADD@YY,3     @YY,4                           S01166
     C*                                                                   S01166
     C*   CALCULATE DATES FOR PREVIOUS 3 CONSECUTIVE MONTHS               S01166
     C                     EXSR #ZB
     C*
     C*                                                                   S01166
     C**  IF THERE ARE NO MORE RECORDS ON FXFWMHLL FOR THIS
     C**  CURRENCY BEFORE THE FIRST CALCULATED DATE, SET
     C**  'START'/'END' NARRATIVE TO 'START'
     C                     MOVEL@CC,1     @FQFWY
     C                     MOVE @YY,1     @FQFWY
     C                     MOVE @MM,1     @FQFWM
     C                     MOVE *LOVAL    @FQFBH
     C           @FQKEY    SETLLFXFWMHLL
     C                     READPFXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B*2            S01166
     C***        FQCCY     ORNE @FCCY                      **2            S01166
     C           FQCCY     ORNE @SRCCY                     **2            S01166
     C                     MOVE 'START'   @STEND           **2            S01166
     C                     ELSE                            X*2            S01166
     C                     MOVE *BLANKS   @STEND           **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C**  IF NO RECORD EXISTS FOR THIS CURRENCY ON
     C**  FXFWMHLL AFTER THE LAST CALCULATED DATE, THEN
     C**  THIS IS THE END OF THE DATA FOR THIS CURRENCY.
     C***                  MOVEL CC,3     @FQFWY                          S01166
     C***                  MOVE @YY,3     @FQFWY                          S01166
     C***                  MOVE @MM,3     @FQFWM                          S01166
     C                     MOVEL@CC,4     @FQFWY                          S01166
     C                     MOVE @YY,4     @FQFWY                          S01166
     C                     MOVE @MM,4     @FQFWM                          S01166
     C                     Z-ADD02        @FQFBH
     C           @FQKEY    SETGTFXFWMHLL
     C                     READ FXFWMHLL                 76
     C           *IN76     IFEQ '1'                        B*2            S01166
     C***        FQCCY     ORNE @FCCY                      **2            S01166
     C           FQCCY     ORNE @SRCCY                     **2            S01166
     C                     MOVE 'END  '   @STEND           **2            S01166
     C                     END                             E*2            S01166
     C*
     C*    STORE THE FIRST AND LAST RECORDS IN CASE THERE                 S01166
     C*    NO MORE                                                        S01166
     C                     MOVE @YY,1     @TOPRD                          S01166
     C                     MOVEL@MM,1     @TOPRD                          S01166
     C                     MOVE @YY,4     @BOTRD                          S01166
     C                     MOVEL@MM,4     @BOTRD                          S01166
     C*                                                                   S01166
     C*   DO CALCULATIONS AND THEN WRITE THE RECORD TO THE SUBFILE        S01166
     C                     EXSR #BF                                       S01166
     C*                                                                   S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           #BE9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BF - THIS ROUTINE SETS UP FIELDS DERIVED FROM FXFWMHLL      *
     C*        IN THE DATA STRUCTURE @AMENQ AS FOLLOWS:               *
     C*                                                               *
     C*        FOR EACH CALCULATED DATE, 1ST AND 2ND HALF-MTH         *
     C*        DETAILS ARE ACCESSED FROM THEIR CORRESPONDING          *
     C*        FXFWMHLL RECORDS AND EDITED AS NECESSARY.              *
     C*                                                               *
     C*        TOTAL AMOUNTS ARE CALCULATED AND EDITED FOR EACH       *
     C*        DATE.                                                  *
     C*                                                               *
     C***      ALL EDITED AMOUNTS SO OBTAINED ARE PLACED IN THEIR     *   S01166
     C***      CORRESPONDING POSITIONS OF THE DATA STRUCTURE @DETLS,  *   S01166
     C***      WHICH IS THEN MOVED INTO THE RELEVANT POSITION FOR     *   S01166
     C***      THIS DATE IN THE DATA STRUCTURE @AMENQ USING THE       *   S01166
     C***      ARRAY @AM.                                             *   S01166
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*                                                               *
     C*  CALLS :     #BFA                                             *
     C*              #BFB                                             *
     C*                                                               *
     C*  USES:       @D     - DATE INDEX                              *
     C***            @FCCY  - CURRENCY FROM FX38CPLL RECORD           *   S01166
     C*              @CC    - ARRAY OF DATE CENTURIES                 *
     C*              @YY    - ARRAY OF DATE YEARS                     *
     C*              @MM    - ARRAY OF DATE MONTH NUMBERS             *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @H     - HALF-MONTH INDEX                        *
     C*              @WI    - WORK ARRAY OF EDITED HALF-MTH 'IN'      *
     C*                       AMOUNTS                                 *
     C*              @WO    - WORK ARRAY OF EDITED HALF-MTH 'OUT'     *
     C*                       AMOUNTS                                 *
     C*              @WN    - WORK ARRAY OF EDITED HALF-MTH 'NET'     *
     C*                       AMOUNTS                                 *
     C*              @I1    - 1ST HALF-MTH 'IN' AMOUNT OUTPUT TO      *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @O1    - 1ST HALF-MTH 'OUT' AMOUNT OUTPUT TO     *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @N1    - 1ST HALF-MTH 'NET' AMOUNT OUTPUT TO     *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @I2    - 2ND HALF-MTH 'IN' AMOUNT OUTPUT TO      *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @O2    - 2ND HALF-MTH 'OUT' AMOUNT OUTPUT TO     *
     C***                     AMENQIAA FOR THIS DATE                  *   S01166
     C*              @N2    - 2ND HALF-MTH 'NET' AMOUNT OUTPUT TO     *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @ONE   - 1ST   HALF-MONTH FIXED NARRATIVE '-1'   *
     C*              @TWO   - 2ND   HALF-MONTH FIXED NARRATIVE '-2'   *
     C*              @DTH   - HALF-MTH ALPHA DATE OUTPUT TO           *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @DTM   - MONTHLY  ALPHA DATE OUTPUT TO           *
     C***                     AMENQ1AA FOR THIS DATE                  *   S01166
     C*              @DT    - ARRAY OF ALPHA DATES OUTPUT TO          *
     C***                     AMENQ1AA                                *   S01166
     C*              @MTH   - MONTH SHORTNAME ARRAY                   *
     C*              @M     - MONTH NUMBER CORRESPONDING TO @MTH      *
     C*              @DETLS - DATA STRUCTURE WHICH HOLDS FXFWHMLL     *
     C*                       INFORMATION FOR EACH CALCULATED DATE    *
     C*              @AM    - ARRAY OF FXFWHMLL DATA FOR EACH         *
     C*                       CALCULATED DATE                         *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BF       BEGSR
     C*
     C*   RESET RRN                                                       S01166
     C                     Z-ADD0         RRN     20                      S01166
     C*                                                                   S01166
     C**  SET UP THE FIELDS FOR EACH OF THE MONTH DATES AS GENERATED
     C**  IN PREVIOUSLY CALLED SUBROUTINES.
     C***                  DO   3         @D      10       B1             S01166
     C                     DO   4         @D      10       B1             S01166
     C*                                                                   S01166
     C*                                                    *1
     C**   SET UP PARTIAL FXFWMHLL KEY FOR THIS MONTH      *1
     C***                  MOVE @FCCY     @FQCCY           *1             S01166
     C                     MOVE @SRCCY    @FQCCY           *1             S01166
     C                     MOVEL@CC,@D    @FQFWY           *1
     C                     MOVE @YY,@D    @FQFWY           *1
     C                     MOVE @MM,@D    @FQFWM           *1
     C*                                                    *1
     C**  SET UP THE ALPHA MONTH NARRATIVE FOR THIS DATE   *1             S01166
     C                     Z-ADD@MM,@D    @M               *1             S01166
     C                     MOVEL@MTH,@M   @DTH             *1             S01166
     C                     MOVE @YY,@D    @DTH             *1             S01166
     C                     MOVE @DTH      @DTM             *1             S01166
     C                     MOVE @DTH      @DT,@D           *1             S01166
     C*                                                    *1             S01166
     C**  ACCESS AND EDIT INFORMATION (IF ANY) FOR THE     *1
     C**  FIRST HALF-MONTH.                                *1
     C                     Z-ADD01        @FQFBH           *1
     C                     Z-ADD1         @H      10       *1
     C                     EXSR #BFA                       *1
     C*                                                    *1
     C**  MOVE FIRST HALF-MONTH AMOUNTS INTO THEIR         *1
     C**  CORRESPONDING @DETLS POSITIONS.                  *1             S01166
     C                     MOVE @WI,@H    @I1              *1
     C                     MOVE @WO,@H    @O1              *1
     C                     MOVE @WN,@H    @N1              *1
     C*                                                    *1
     C**  ACCESS AND EDIT INFORMATION (IF ANY) FOR THE     *1
     C**  SECOND HALF-MONTH.                               *1
     C                     Z-ADD02        @FQFBH           *1
     C                     Z-ADD2         @H               *1
     C                     EXSR #BFA                       *1
     C*                                                    *1
     C**  MOVE SECOND HALF-MONTH AMOUNTS INTO THEIR        *1
     C**  CORRESPONDING @DETLS POSITIONS.                  *1
     C                     MOVE @WI,@H    @I2              *1
     C                     MOVE @WO,@H    @O2              *1
     C                     MOVE @WN,@H    @N2              *1
     C*                                                    *1
     C**  SET UP FIXED NARRATIVES                          *1
     C                     MOVE '-1'      @ONE             *1
     C                     MOVE '-2'      @TWO             *1
     C*                                                    *1
     C**  SET UP THE TOTAL AMOUNTS FOR THIS MONTH          *1
     C                     EXSR #BFB                       *1
     C*                                                    *1
     C**  SET UP THE ALPHA MONTH NARRATIVE FOR THIS DATE   *1
     C***                  Z-ADD@MM,@D    @M               *1             S01166
     C***                  MOVEL@MTH,@M   @DTH             *1             S01166
     C***                  MOVE @YY,@D    @DTH             *1             S01166
     C***                  MOVE @DTH      @DTM             *1             S01166
     C***                  MOVE @DTH      @DT,@D           *1             S01166
     C*                                                    *1
     C**   SET UP DETAILS ARRAY ELEMENT FOR THIS DATE      *1
     C***                  MOVE @DETLS    @AM,@D           *1             S01166
     C*   SET UP DETAILS AND WRITE TO THE SUBFILE          *1             S01166
     C                     ADD  1         RRN              *1             S01166
     C                     MOVEL@DTH      DDDAT            *1             S01166
     C                     MOVE @ONE      DDDAT            *1             S01166
     C                     MOVE @DTM      DDDAT2           *1             S01166
     C                     MOVE @I1       DDIN             *1             S01166
     C                     MOVE @O1       DDOUT            *1             S01166
     C                     MOVE @N1       DDNET            *1             S01166
     C**********           WRITEDL3110S1                 63*1      S01166 S01117
     C                     WRITETM3110S1                 63*1             S01117
     C                     ADD  1         RRN              *1             S01166
     C                     MOVE *BLANKS   DDDAT            *1             S01166
     C                     MOVE @TWO      DDDAT            *1             S01166
     C                     MOVE @DTM      DDDAT2           *1             S01166
     C                     MOVE @I2       DDIN             *1             S01166
     C                     MOVE @O2       DDOUT            *1             S01166
     C                     MOVE @N2       DDNET            *1             S01166
     C**********           WRITEDL3110S1                 63*1      S01166 S01117
     C                     WRITETM3110S1                 63*1             S01117
     C                     ADD  1         RRN              *1             S01166
     C                     MOVE '1'       *IN15            *1             S01166
     C                     MOVE @DTM      DDDAT            *1             S01166
     C                     MOVE @DTM      DDDAT2           *1             S01166
     C                     MOVE @IT       DDIN             *1             S01166
     C                     MOVE @OT       DDOUT            *1             S01166
     C                     MOVE @NT       DDNET            *1             S01166
     C**********           WRITEDL3110S1                 63*1      S01166 S01117
     C                     WRITETM3110S1                 63*1             S01117
     C                     ADD  1         RRN              *1             S01166
     C                     MOVE '1'       *IN15            *1             S01166
     C                     MOVE *BLANKS   DDDAT            *1             S01166
     C                     MOVE *BLANKS   DDDAT2           *1             S01166
     C                     MOVE *BLANKS   DDIN             *1             S01166
     C                     MOVE *BLANKS   DDOUT            *1             S01166
     C                     MOVE *BLANKS   DDNET            *1             S01166
     C**********           WRITEDL3110S1                 63*1      S01166 S01117
     C                     WRITETM3110S1                 63*1             S01117
     C                     MOVE '0'       *IN15            *1             S01166
     C*                                                                   S01166
     C*    SET UP CURRENCY TO DISPLAY ON SCREEN                           S01166
     C                     MOVE @SRCCY    @SCCY            *1             S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C                     END                             E1
     C*
     C           #BF9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BFA - THIS ROUTINE READS AN FXFWMHLL RECORD FOR A SPECIFIC  *
     C*         CURRENCY, DATE AND HALF-MONTH FOR THAT DATE.          *
     C*         ALL AMOUNTS READ ARE EDITED AND PLACED INTO THEIR     *
     C*         RESPECTIVE HALF-MONTHLY WORK ARRAY.                   *
     C*         ALL AMOUNTS READ ARE SAVED IN HALF-MONTH NUMERIC      *
     C*         WORK ARRAYS FOR LATER USE IN MONTHLY TOTAL CALCS.     *
     C*                                                               *
     C*  CALLED BY : #BF                                              *
     C*                                                               *
     C*  CALLS :     ZA0860                                           *
     C*                                                               *
     C*  USES :      @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @H     - HALF-MONTH INDEX                        *
     C*              @WI    - WORK ARRAY OF EDITED HALF-MTH 'IN'      *
     C*                       AMOUNTS                                 *
     C*              @WO    - WORK ARRAY OF EDITED HALF-MTH 'OUT'     *
     C*                       AMOUNTS                                 *
     C*              @WN    - WORK ARRAY OF EDITED HALF-MTH 'NET'     *
     C*                       AMOUNTS                                 *
     C*              @TI    - WORK ARRAY OF NUMERIC HALF-MTH 'IN'     *
     C*                       AMOUNTS                                 *
     C*              @TO    - WORK ARRAY OF NUMERIC HALF-MTH 'OUT'    *
     C*                       AMOUNTS                                 *
     C*              @TN    - WORK ARRAY OF NUMERIC HALF-MTH 'NET'    *
     C*                       AMOUNTS                                 *
     C*              @SCALE - SCALE FACTOR                            *
     C*              @@NUM  - INPUT TO ZA0860                         *
     C*              @@ALPH - OUTPUT FROM ZA0860                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BFA      BEGSR
     C*
     C**  READ SPECIFIC FXFWMHLL RECORD FOR CURRENCY, DATE AND HALF-MTH.
     C           @FQKEY    CHAINFXFWMHLL             76
     C           *IN76     IFEQ '1'                        B1
     C*
     C**  IF RECORD NOT FOUND, BLANK OUT ALL EDITED HALF-MONTHLY AMOUNT
     C**  FIELDS AND ZEROIZE HALF-MONTHLY TOTAL WORK FIELDS.
     C                     MOVE *BLANKS   @WI,@H           *1
     C                     MOVE *BLANKS   @WO,@H           *1
     C                     MOVE *BLANKS   @WN,@H           *1
     C                     Z-ADD0         @TI,@H           *1
     C                     Z-ADD0         @TO,@H           *1
     C                     Z-ADD0         @TN,@H           *1
     C                     ELSE                            X1
     C*
     C**  SAVE THE HALF-MONTH 'IN' AMOUNT FOR LATER USE IN MONTHLY
     C**  TOTALS CALCULATION.
     C                     Z-ADDFQHMCI    @TI,@H           *1
     C*
     C**  EDIT THE HALF-MONTH 'IN' AMOUNT BY FIRSTLY DIVIDING BY THE
     C**  SCALE FACTOR, AND THEN REMOVING ALL LEADING ZEROES USING
     C**  STANDARD SUBROUTINE ZA0860. THE SIGN OF THIS AMOUNT IS REMOVED
     C**  USING THE 'MOVEL' OP. CODE
     C           FQHMCI    DIV  @SCALE    FQHMCI    H      *1
     C                     Z-ADDFQHMCI    @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVEL@@ALPH    @WI,@H           *1
     C*
     C**  SAVE THE HALF-MONTH 'OUT' AMOUNT FOR LATER USE IN MONTHLY
     C**  TOTALS CALCULATION.
     C                     Z-ADDFQHMCO    @TO,@H           *1
     C*
     C**  EDIT THE HALF-MONTH 'OUT' AMOUNT BY FIRSTLY DIVIDING BY THE
     C**  SCALE FACTOR, AND THEN REMOVING ALL LEADING ZEROES USING
     C**  STANDARD SUBROUTINE ZA0860. THE SIGN OF THIS AMOUNT IS REMOVED
     C**  USING THE 'MOVEL' OP. CODE
     C           FQHMCO    DIV  @SCALE    FQHMCO    H      *1
     C                     Z-ADDFQHMCO    @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVEL@@ALPH    @WO,@H           *1
     C*
     C**  SAVE THE HALF-MONTH 'NET' AMOUNT FOR LATER USE IN MONTHLY
     C**  TOTALS CALCULATION.
     C                     Z-ADDFQHMNM    @TN,@H           *1
     C*
     C**  EDIT THE HALF-MONTH 'NET' AMOUNT BY FIRSTLY DIVIDING BY THE
     C**  SCALE FACTOR, AND THEN REOMOVING ALL LEADING ZEROES USING
     C**  STANDARD SUBROUTINE ZA0860.
     C           FQHMNM    DIV  @SCALE    FQHMNM    H      *1
     C                     Z-ADDFQHMNM    @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVE @@ALPH    @WN,@H           *1
     C                     END                             E1
     C*
     C           #BFA9     ENDSR
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BFB - THIS ROUTINE CALCULATES, EDITS AND PLACES IN @DETLS   *
     C*         THE TOTAL 'IN', 'OUT' AND 'NET' AMOUNTS FOR A GIVEN   *
     C*         DATE.                                                 *
     C*                                                               *
     C*  CALLED BY : #BF                                              *
     C*                                                               *
     C*  CALLS :     ZA0860                                           *
     C*                                                               *
     C*  USES :      @WI    - WORK ARRAY OF EDITED HALF-MTH 'IN'      *
     C*                       AMOUNTS                                 *
     C*              @WO    - WORK ARRAY OF EDITED HALF-MTH 'OUT'     *
     C*                       AMOUNTS                                 *
     C*              @WN    - WORK ARRAY OF EDITED HALF-MTH 'NET'     *
     C*                       AMOUNTS                                 *
     C*              @TI    - WORK ARRAY OF NUMERIC HALF-MTH 'IN'     *
     C*                       AMOUNTS                                 *
     C*              @TO    - WORK ARRAY OF NUMERIC HALF-MTH 'OUT'    *
     C*                       AMOUNTS                                 *
     C*              @TN    - WORK ARRAY OF NUMERIC HALF-MTH 'NET'    *
     C*                       AMOUNTS                                 *
     C***            @IT    - TOTAL 'IN' AMOUNT OUTPUT TO AMENQ1AA    *   S01166
     C*                       FOR THIS DATE                           *
     C***            @OT    - TOTAL 'OUT' AMOUNT OUTPUT TO AMENQ1AA   *   S01166
     C*                       FOR THIS DATE                           *
     C***            @NT    - TOTAL 'NET' AMOUNT OUTPUT TO AMENQ1AA   *   S01166
     C*                       FOR THIS DATE                           *
     C*              @SCALE - SCALE FACTOR                            *
     C*              @@NUM  - INPUT TO ZA0860                         *
     C*              @@ALPH - OUTPUT FROM ZA0860                      *
     C*              @D     - DATE INDEX                              *
     C*              @WTOT  - FIELD USED TO REMOVE SIGN FROM 'IN'     *
     C*                       AND 'OUT' TOTAL AMOUNTS                 *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BFB      BEGSR
     C*
     C**  MONTHLY TOTAL PROCESSING FOR HALF-MONTHLY 'IN' AMOUNTS
     C           @WI,1     IFEQ *BLANKS                    B1
     C           @WI,2     ANDEQ*BLANKS                    *1
     C*                                                    *1
     C**  IF BOTH EDITED 'IN' HALF-MTH AMOUNTS ARE BLANK,  *1
     C**  NO 'IN' TOTAL PROCESSING FOR THIS DATE.          *1
     C                     MOVE *BLANKS   @IT              *1
     C                     ELSE                            X1
     C*                                                    *1
     C**  CALCULATE, EDIT AND SET UP IN @DETLS THE TOTAL   *1
     C**  'IN' AMOUNT FOR THIS DATE                        *1
     C           @TI,1     ADD  @TI,2     @TI,2            *1
     C           @TI,2     DIV  @SCALE    @TI,2     H      *1
     C                     Z-ADD@TI,2     @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVEL@@ALPH    @WTOT  15        *1
     C                     MOVE @WTOT     @IT              *1
     C                     END                             E1
     C*
     C**  MONTHLY TOTAL PROCESSING FOR HALF-MONTHLY 'OUT' AMOUNTS
     C           @WO,1     IFEQ *BLANKS                    B1
     C           @WO,2     ANDEQ*BLANKS                    *1
     C*                                                    *1
     C**  IF BOTH EDITED 'OUT' HALF-MTH AMOUNTS ARE BLANK, *1
     C**  NO 'OUT' TOTAL PROCESSING FOR THIS DATE.         *1
     C                     MOVE *BLANKS   @OT              *1
     C                     ELSE                            X1
     C*                                                    *1
     C**  CALCULATE, EDIT AND SET UP IN @DETLS THE TOTAL   *1
     C**  'OUT' AMOUNT FOR THIS DATE                       *1
     C           @TO,1     ADD  @TO,2     @TO,2            *1
     C           @TO,2     DIV  @SCALE    @TO,2     H      *1
     C                     Z-ADD@TO,2     @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVEL@@ALPH    @WTOT            *1
     C                     MOVE @WTOT     @OT              *1
     C                     END                             E1
     C*
     C**  MONTHLY TOTAL PROCESSING FOR HALF-MONTHLY 'NET' AMOUNTS
     C           @WN,1     IFEQ *BLANKS                    B1
     C           @WN,2     ANDEQ*BLANKS                    *1
     C*                                                    *1
     C**  IF BOTH EDITED 'NET' HALF-MTH AMOUNTS ARE BLANK, *1
     C**  NO 'NET' TOTAL PROCESSING FOR THIS DATE.         *1
     C                     MOVE *BLANKS   @NT              *1
     C                     ELSE                            X1
     C*                                                    *1
     C**  CALCULATE, EDIT AND SET UP IN @DETLS THE TOTAL   *1
     C**  'OUT' AMOUNT FOR THIS DATE                       *1
     C           @TN,1     ADD  @TN,2     @TN,2            *1
     C           @TN,2     DIV  @SCALE    @TN,2     H      *1
     C                     Z-ADD@TN,2     @@NUM            *1
     C                     EXSR ZA0860                     *1
     C                     MOVE @@ALPH    @NT              *1
     C                     END                             E1
     C*
     C           #BFB9     ENDSR
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #A - THIS ROUTINE PERFORMS INITIAL PROCESSING                *
     C*                                                               *
     C*  CALLED BY : CONTROL PROCESSING                               *
     C*                                                               *
     C***CALLS*******ZA0150********************************************   S01194
     C*  CALLS :                                                      *   S01194
     C*              ZA0280                                           *
     C*                                                               *
     C*                                                               *
     C*  USES :      @TERM  - TERMINATION INPUT PARAMETER             *
     C*              @ENQ   - ENQUIRY UPDATED INPUT PARAMETER         *
     C*              @RRFSH - ROLL/REFRESH INPUT PARAMETER            *
     C*              @FQKEY - COMPOSITE KEY FOR FXFWMHLL              *
     C*              @FQCCY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWY - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFWM - KEY FIELD OF FXFWMHLL                   *
     C*              @FQFBH - KEY FIELD OF FXFWMHLL                   *
     C*              @FCYC  - FIRST TIME PROGRAM CALLED IN CURRENT    *
     C*                       INVOCATION                              *
     C***            @AMENQ - SCREEN ENQUIRY DATA AREA                *   S01166
     C*              @NODAT - NO DATES GENERATED FLAG                 *
     C*              @NORIP - NO RECORDS IN PERIOD FLAG               *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #A        BEGSR
     C*
     C**  INITIALISE SCREEN MESSAGE QUEUE                                 S01166
     C                     MOVEL'*'       DDPGMQ                          S01166
     C*                                                                   S01166
     C**  RECEIVE THE INPUT PARAMETERS
     C           *ENTRY    PLIST
     C***                  PARM           @TERM   1                       S01166
     C***                  PARM           @ENQ    1                       S01166
     C***                  PARM           @RRFSH                          S01166
     C                     PARM           @TERM   1                       S01166
     C                     PARM           @STRNG                          S01166
     C*                                                                   S01166
     C**  DEFINE FXFWMHLL KEY
     C           @FQKEY    KLIST
     C                     KFLD           @FQCCY  3
     C                     KFLD           @FQFWY  40
     C                     KFLD           @FQFWM  20
     C                     KFLD           @FQFBH  20
     C*
     C**  IF TERMINATION PARAMETER IS 'T', SET LR. NO FURTHER
     C**  PROCESSING IN THIS ROUTINE.
     C           @TERM     IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #A9                        *1
     C                     END                             E1
     C*
     C**  CHECK IF THIS IS THE FIRST TIME THIS PROGRAM HAS BEEN
     C**  CALLED IN THE CURRENT INVOCATION AND PERFORM THE APPROPRIATE
     C**  PROCESSING.
     C           @FCYC     IFNE 'Y'                        B1
     C*                                                    *1
     C**  SET UP PROGRAM NAME IN *LDA IN CASE OF DATA BASE *1
     C**  ERROR                                            *1
     C***                  MOVEL'FX0520'  DBPGM            *1             S01166
     C**********           MOVEL'DL3110'  DBPGM            *1      S01166 S01117
     C                     MOVEL'TM3110'  DBPGM            *1             S01117
     C*                                                    *1
     C** OPEN ALL FILES UNDER USER CONTROL                 *1
     C*                    OPEN FX38CPLL                   *1
     C***                  OPEN CA38CPLL                   *1             S01166
     C                     OPEN FDMNTHLL                   *1
     C                     OPEN FXFWMHLL                   *1
     C**********           OPEN FDCCYTLL                   *1             S01194
     C**********           OPEN FDICDRLL                   *1             S01194
     C*********************OPEN*FDUSSILL********************1*******S01166S01319
     C                     OPEN MUSER                                     S01319
     C********************************************************************S01319
     C*********************MOVEL@USER*****@USER3**3*********1*******S01166S01319
     C**************************************************************S01166S01319
     C***********@USER3****CHAINFDUSSILL*************71*****1*******S01166S01319
     C**************************************************************S01166S01319
     C**DATABASE*ERROR*IF*USER*NOT*FOUND:***************************S01166S01319
     C************IN71*****IFEQ*'1'************************B*2******S01166S01319
     C*********************MOVE*'901'*****DBASE**************2******S01166S01319
     C*********************MOVE*'FDUSSILL'DBFILE*************2******S01166S01319
     C*********************MOVEL@USER3****DBKEY**************2*ERRORS01166S01319
     C*********************MOVE*'1'********INU7**************2**901*S01166S01319
     C*********************MOVE*'1'********INU8**************2******S01166S01319
     C*********************GOTO*#A9**************************2******S01166S01319
     C*********************END*****************************E*2******S01166S01319
     C*                                                                   S01166
     C           @USER     CHAINMUSER                71                   S01319
     C*                                                                   S01319
     C           *IN71     IFEQ '1'                        B*2            S01319
     C*                                                                   S01319
     C                     MOVEL'MUSER'   DBFILE           ***************S01319
     C                     MOVE '901'     DBASE            *             *S01319
     C                     MOVEL@USER     DBKEY            * DBERROR 901 *S01319
     C                     MOVE '1'       *INU7                           S01319
     C                     MOVE '1'       *INU8            ************** S01319
     C                     GOTO #A9                                       S01319
     C*                                                                   S01319
     C                     END                             E*2            S01319
     C* DO DISPLAY FILE OVERRIDE BEFORE OPEN                              S01166
     C***********USREF*****IFEQ*'Y'                        B*2      S01166S01319
     C           AURF      IFEQ 'Y'                        B*2            S01319
     C                     MOVEL@OVR,1    @OVRID           **2            S01166
     C*********************Z-ADDUSRFPD****@WAIT**************2******S01166S01319
     C                     Z-ADDREFP      @WAIT            **2            S01319
     C                     Z-ADD36        QCALEN 155       **2            S01166
     C*********************CALL 'QCAEXEC'                  **2      S01166E20774
     C                     CALL 'QCMDEXC'                  **2            E20774
     C                     PARM           @OVRID           **2            S01166
     C                     PARM           QCALEN           **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C**********           OPEN DL3110DD                           S01166 S01117
     C                     OPEN TM3110DD                                  S01117
     C*                                                                   S01166
     C****READ*THE*I*C*D**FILE***                          *1             S01194
     C**********           EXSR ZA0150                     *1             S01194
     C**********                                           *1             S01194
     C****IF*A*DATA*BASE*ERROR*HAS*OCCURRED**SET*U7**U8*****1             S01194
     C****AND*LR**NO*FURTHER*PROCESSING*IN*THIS*ROUTINE*****1             S01194
     C********** *IN80     IFEQ '1'                        B*2            S01194
     C**********           MOVE '1'       *INU7            **2            S01194
     C**********           MOVE '1'       *INU8            **2            S01194
     C**********           MOVE '1'       *INLR            **2            S01194
     C**********           GOTO #A9                        **2            S01194
     C**********           END                             E*2            S01194
      *                                                                   S01194
      * Get Bank's details from SDBANKPD via Access Object                S01194
      * (Note that *DBERR is used as standard return code although        S01194
      * this will not normally produce a DB error due to access           S01194
      * object having already been called in SD1600)                      S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
     C*                                                    *1
     C** If BJDFIN is 'M' arranged the date as DDMMMYY                    092366
     C*                                                                   092366
     C           BJDFIN    IFEQ 'M'                                       092366
     C                     MOVEL@STDAY    TMP     5                       092366
     C                     MOVE @STMTH    TMP                             092366
     C                     MOVE TMP       @STDAY                          092366
     C                     MOVELTMP       @STMTH                          092366
     C                     END                                            092366
     C*                                                                   092366
     C**  READ THE MONTH SHORTNAMES FILE                   *1
     C                     EXSR ZA0280                     *1
     C*                                                    *1
     C**  IF A DATA BASE ERROR HAS OCCURRED, SET U7, U8    *1
     C**  AND LR. NO FURTHER PROCESSING IN THIS ROUTINE.   *1
     C           *IN80     IFEQ '1'                        B*2
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     MOVE '1'       *INLR            **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C*                                                    *1
     C**  SET FLAG THAT FIRST INVOCATION PROCESSING HAS    *1
     C**  BEEN SUCCESSFULLY COMPLETED                      *1
     C                     MOVE 'Y'       @FCYC   1        *1
     C                     END                             E1
     C*
     C*   SET OFF ALL INDICATORS                                          S01166
     C                     MOVE '0'       *IN,01                          S01166
     C*                                                                   S01166
     C*   INHIBIT ROLL KEYS AND SET ON END OF MESSAGE AND ENQUIRY         S01166
     C*   SUBFILE INDICATORS                                              S01166
     C                     MOVE '1'       *IN27                           S01166
     C                     MOVE '1'       *IN40                           S01166
     C                     MOVE '1'       *IN30                           S01166
     C*                                                                   S01166
     C*   RETRIEVE WORKSTATION ID AND WRITE OUT THE SCREEN HEADER         S01166
     C*   AND COMMAND KEY TEXT                                            S01166
     C                     MOVEL@JOB      @WSID                           S01166
     C**********           WRITEDL3110F0               63          S01166 S01117
     C                     WRITETM3110F0               63                 S01117
     C**********           WRITEDL3110F1               63          S01166 S01117
     C                     WRITETM3110F1               63                 S01117
     C*                                                                   S01166
     C*   CLEAR THE SUBFILE BY SETTING OFF THE SUBFILE DISPLAY            S01166
     C*   AND SUBFILE CONTROL INDICATORS, THEN WRITE ENQUIRY              S01166
     C*   SUBFILE CONTROL FORMAT                                          S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN35                           S01166
     C                     MOVE '0'       *IN36                           S01166
     C**********           WRITEDL3110C1               63          S01166 S01117
     C                     WRITETM3110C1               63                 S01117
     C*                                                                   S01166
     C*  SET UP PROMPTS                                                   S01166
     C                     MOVE @STCCY    @SRCCY                          S01166
     C                     MOVE @STMTH    @SRMTH                          S01166
     C                     MOVE @STYR     @SRYR                           S01166
     C                     MOVE @SRCCY    @SCCY                           S01166
     C*                                                                   S01166
     C*  IF PARAMETERS BLANK,WRITE THE PROMPT SCREEN BY SETTING           S01166
     C*  ON THE SUBFILE DISPLAY CONTROL INDICATOR                         S01166
     C           @STRNG    IFEQ *BLANKS                                   S01166
     C                     MOVE '1'       *IN36                           S01166
     C**********           EXFMTDL3110C1               63          S01166 S01117
     C                     EXFMTTM3110C1               63                 S01117
     C                     ELSE                                           S01166
     C                     MOVE @STDNO    @CPDNO                          S01166
     C                     MOVE *BLANKS   @STRNG                          S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C** PROCESS HELP WHILE IT IS REQUESTED AND RE-READ THE SCREEN        S01166
     C*                                                                   S01166
     C**         *IN10     DOWEQ'1'                        B1      S01166 S01199
     C**                   CALL 'SDMENU'                   *1      S01166 S01199
     C**                   MOVE '0'       *IN10            *1      S01166 S01199
     C**********           READ DL3110C1               0573*1      S01166 S01280
     C**                   END                             E1      S01166 S01199
     C*** DEFINE, READ AND INITIALIZE THE DATA AREA AMENQ1AA              S01166
     C***        *NAMVAR   DEFN AMENQ1AA  @AMENQ                          S01166
     C***        *LOCK     IN   @AMENQ                                    S01166
     C***                  MOVE *BLANKS   @AMENQ                          S01166
     C*
     C**  INITIALIZE 'NO DATES GENERATED FLAG' AND 'NO-RECORDS-IN-
     C**  PERIOD-FLAG'
     C***                  MOVE 'N'       @NODAT  1                       S01166
     C***                  MOVE 'N'       @NORIP  1                       S01166
     C*
     C           #A9       ENDSR
     C*
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     C*****************************************************************
     C*                                                               *
     C*  #C - THIS ROUTINE PERFORMS FINAL PROCESSING                  *
     C*                                                               *
     C*  CALLED BY :  CONTROL PROCESSING                              *
     C*                                                               *
     C***CALLS :      CM0020                                          *   S01166
     C*                                                               *
     C***USES :       @AMENQ    -  SCREEN ENQUIRY DATA AREA           *   S01166
     C*               @NODAT    -  NO DATES GENERATED FLAG            *
     C*               @NORIP    -  NO RECORDS IN  PERIOD FLAG         *
     C*               @ENQ      -  ENQUIRY UPDATED INPUT PARAMETER    *
     C***             @TERM     -  CM0020 PARAMETER                   *   S01166
     C***             @EMID     -  CM0020 PARAMETER                   *   S01166
     C***             @SWER     -  CM0020 PARAMETER                   *   S01166
     C***             @PARM3    -  CM0020 PARAMETER                   *   S01166
     C***             @PARM4    -  CM0020 PARAMETER                   *   S01166
     C***             @PARM5    -  CM0020 PARAMETER                   *   S01166
     C*               @YY       -  ARRAY OF DATE YEARS                *
     C*               @MM       -  ARRAY OF DATE MONTHS               *
     C*               @MTH      -  MONTH SHORTNAME ARRAY              *
     C*               @M        -  MONTH NUMBER CORRESPONDING TO      *
     C*                            @MTH                               *
     C***             @DT       -  ARRAY OF ALPHA DATES OUTPUT TO     *   S01166
     C*                            AMENQ1AA                           *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C           #C        BEGSR
     C*
     C**  IF LAST RECORD INDICATOR SET, NO FURTHER PROCESSING
     C           *INLR     CABEQ'1'       #C9
     C           *IN01     IFEQ '1'                        B1             S01166
     C                     MOVE 'Q'       @TERM            *1             S01166
     C                     MOVE '1'       *INLR            *1             S01166
     C                     END                             E1             S01166
     C*
     C**  PROCESSING FOR WHEN NO-DATES-GENERATED-FLAG SET
     C***        @NODAT    IFEQ 'Y'                        B1             S01166
     C*                                                    *1
     C****IF ENQUIRY-UPDATED INPUT PARM IS ONE OF '','R',  *1             S01166
     C****'F' OR 'L' THE PROCESSING IS AS FOLLOWS:         *1             S01166
     C***        @ENQ      IFEQ *BLANK                     B*2            S01166
     C***        @ENQ      OREQ 'R'                        **2            S01166
     C***        @ENQ      OREQ 'F'                        **2            S01166
     C***        @ENQ      OREQ 'L'                        **2            S01166
     C***                                                  **2            S01166
     C*** UPDATE FARKT1 AND FARKB1 ON FX38CPLL TO          **2            S01166
     C*** BLANKS.                                          **2            S01166
     C***                  MOVE *BLANKS   FARKT1           **2            S01166
     C***                  MOVE *BLANKS   FARKB1           **2            S01166
     C***                  EXCPT@UPD01                     **2            S01166
     C***                                                  **2            S01166
     C*** UPDATE AMENQ1AA (SHOULD ONLY CONTAIN HEADER      **2            S01166
     C*** NARRATIVES)                                      **2            S01166
     C***                  OUT  @AMENQ                     **2            S01166
     C***                                                  **2            S01166
     C*** CALL PC FORMAT/TRANSMISSION PROGRAM              **2            S01166
     C***                  CALL 'CM0020'                   **2            S01166
     C***                  PARM *BLANK    @TERM   1        **2            S01166
     C***                  PARM 'ER'      @EMID   2        **2            S01166
     C***                  PARM '1'       @SWER   1        **2            S01166
     C***                  PARM @ENQ      @PARM2  1        **2            S01166
     C***                  PARM '009'     @PARM3  3        **2            S01166
     C***                  PARM *BLANK    @PARM4  1        **2            S01166
     C***        @TERM     CABEQ'E'       #C8                             S01166
     C***                  END                             E*2            S01166
     C***                                                  *1             S01166
     C*** IF ENQUIRY-UPDATED INPUT PARM IS ONE OF 'U' OR   *1             S01166
     C*** 'D' THE PROCESSING IS AS FOLLOWS:                *1             S01166
     C***        @ENQ      IFEQ 'U'                        B*2            S01166
     C***        @ENQ      OREQ 'D'                        **2            S01166
     C***                                                  **2            S01166
     C*** RELEASE THE FX38CPLL RECORD                      **2            S01166
     C***                  EXCPT@RLS01                     **2            S01166
     C***                                                  **2            S01166
     C*** UNLOCK AMENQ1AA                                  **2            S01166
     C***                  UNLCK@AMENQ                     **2            S01166
     C***                                                  **2            S01166
     C*** CALL PC FORMAT/TRANSMISSION PROGRAM              **2            S01166
     C***                  CALL 'CM0020'                   **2            S01166
     C***                  PARM *BLANK    @TERM   1        **2            S01166
     C***                  PARM 'ER'      @EMID            **2            S01166
     C***                  PARM '1'       @SWER            **2            S01166
     C***                  PARM @ENQ      @PARM2           **2            S01166
     C***                  PARM '999'     @PARM3           **2            S01166
     C***                  PARM *BLANK    @PARM4           **2            S01166
     C***        @TERM     CABEQ'E'       #C8                             S01166
     C***                  END                             E*2            S01166
     C***                  GOTO #C8                        *1             S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C**  PROCESSING FOR WHEN NO-RECORDS-IN-PERIOD-FLAG SET
     C***        @NORIP    IFEQ 'Y'                        B1             S01166
     C*                                                    *1
     C**  SET FARKT1 TO 1ST GENERATED DATE DETAILS         *1
     C***                  Z-ADD@MM,1     @M               *1             S01166
     C***                  MOVEL@MTH,@M   @DT,1            *1             S01166
     C***                  MOVE @YY,1     @DT,1            *1             S01166
     C***                  MOVEL@DT,1     FARKT1           *1             S01166
     C*                                                    *1
     C**  SET FARKB1 TO 3RD GENERATED DATE DETAILS         *1
     C***                  Z-ADD@MM,3     @M               *1             S01166
     C***                  MOVEL@MTH,@M   @DT,3            *1             S01166
     C***                  MOVE @YY,3     @DT,3            *1             S01166
     C***                  MOVEL@DT,3     FARKB1           *1             S01166
     C*                                                    *1
     C**  UPDATE FX38CPLL                                  *1
     C***                  EXCPT@UPD01                     *1             S01166
     C***                                                  *1             S01166
     C*** UPDATE AMENQ1AA (SHOULD ONLY CONTAIN HEADER      *1             S01166
     C*** NARRATIVES)                                      *1             S01166
     C***                  OUT  @AMENQ                     *1             S01166
     C***                                                  *1             S01166
     C*** CALL PC FORMAT/TRANSMISSION PROGRAM              *1             S01166
     C***                  CALL 'CM0020'                   *1             S01166
     C***                  PARM *BLANK    @TERM   1        *1             S01166
     C***                  PARM 'ER'      @EMID            *1             S01166
     C***                  PARM '1'       @SWER            *1             S01166
     C***                  PARM @ENQ      @PARM2           *1             S01166
     C***                  PARM '009'     @PARM3           *1             S01166
     C***                  PARM *BLANK    @PARM4           *1             S01166
     C***                  GOTO #C8                        *1             S01166
     C***                  END                             E1             S01166
     C***                                                                 S01166
     C*** PROCESSING FOR NORMAL UPDATE OF AMENQ1AA                        S01166
     C***                                                                 S01166
     C*** UPDATE FX38CPLL                                                 S01166
     C***                  MOVEL@DT,1     FARKT1                          S01166
     C***                  MOVEL@DT,3     FARKB1                          S01166
     C***                  EXCPT@UPD01                                    S01166
     C***                                                                 S01166
     C*** UPDATE AMENQ1AA                                                 S01166
     C***                  OUT  @AMENQ                                    S01166
     C***                                                                 S01166
     C*** CALL PC FORMAT/TRANSMISSION PROGRAM                             S01166
     C***                  CALL 'CM0020'                                  S01166
     C***                  PARM *BLANK    @TERM   1                       S01166
     C***                  PARM 'ER'      @EMID                           S01166
     C***                  PARM '1'       @SWER                           S01166
     C***                  PARM @ENQ      @PARM2                          S01166
     C***                  PARM '009'     @PARM3                          S01166
     C***                  PARM *BLANK    @PARM4                          S01166
     C***                                                                 S01166
     C***        #C8       TAG                              ** #C8 **     S01166
     C           *INU7     IFEQ '1'                        B1             S01166
     C                     MOVE 'E'       @TERM            *1             S01166
     C                     END                             E1             S01166
     C*
     C**  RETURN TO CALLING PROGRAM
     C                     RETRN
     C*
     C           #C9       ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************   S01194
     C**********                                                      *   S01194
     C********SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF/  *   S01194
     C********FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD *   S01194
     C********1*(HELD ON PF/TABTB10)                                  *   S01194
     C********INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD *   S01194
     C********IS FLAGGED FOR DELETION.                                *   S01194
     C********IF INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED      *   S01194
     C********ACCESS ARE PLACED IN THE LDA.                           *   S01194
     C**********                                                      *   S01194
     C********FIELDS USED : SS0150 - KEY USED TO ACCESS FDICDRLL      *   S01194
     C**********                                                      *   S01194
     C*****************************************************************   S01194
     C**********                                                          S01194
     C********** ZA0150    BEGSR                                          S01194
     C**********                                                          S01194
     C***SET*UP*KEY TO OBTAIN FORMAT TABTB10F '01        10'              S01194
     C**********           MOVEL'01'      SS0150 12                       S01194
     C**********           MOVE '10'      SS0150                          S01194
     C**********                                                          S01194
     C***CHAIN*TO FILE FDICDRLL                                           S01194
     C********** SS0150    CHAINFDICDRLL             80                   S01194
     C********** RECI      IFNE 'D'                        B1             S01194
     C**********           MOVE '1'       *IN80            *1             S01194
     C**********           END                             E1             S01194
     C**********                                                          S01194
     C***DEAL*WITH DATA BASE ERROR                                        S01194
     C********** *IN80     IFEQ '1'                        ***************S01194
     C**********           MOVEL'FDICDRLL'DBFILE           *             *S01194
     C**********           MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C**********           MOVELSS0150    DBKEY            *             *S01194
     C**********           END                             ***************S01194
     C**********                                                          S01194
     C********** ZA0159    ENDSR                                          S01194
     C*****************************************************************   S01194
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       SUBROUTINE ZA0280 - THIS SUBROUTINE READS THE ONLY      *
     C*       RECORD ON LF/FDMNTHLL TO GET MONTH NAMES AND SHORTNAMES.*
     C*       INDICATOR 80 IS SET ON IF THE RECORD IS NOT PRESENT OR  *
     C*       IS FLAGGED FOR DELETION.                                *
     C*       IF INDICATOR IS SET ON INFORMATION ABOUT THE NATURE     *
     C*       OF THE ATTEMPTED FILE ACCESS WILL BE PLACED IN THE LDA. *
     C*                                                               *
     C*       FIELDS USED : SS0280 - KEY USED TO ACCESS FDMNTHLL      *
     C*                                                               *
     C*****************************************************************
     C*
     C           ZA0280    BEGSR
     C*
     C**  READ FIRST RECORD ON FILE LF/FDINSTPP
     C                     Z-ADD1         SS0280  10
     C           SS0280    CHAINFDMNTHLL             80
     C*
     C**  CHECK LOGICAL DELETE FLAG BLANK
     C           MNDLTF    IFNE ' '                        B1
     C                     MOVE '1'       *IN80            *1
     C                     END                             E1
     C*
     C** DEAL WITH DATA BASE ERROR
     C           *IN80     IFEQ '1'                        ***************
     C                     MOVEL'FDMNTHLL'DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 906 *
     C                     MOVEL'906'     DBASE            *             *
     C                     END                             ***************
     C*
     C           ZA0289    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* *PSSR - PROGRAM ERROR SUBROUTINE                              *
     C*                                                               *
     C* CALLED BY:   EXECUTES WHENEVER PROGRAM ERROR OCCURS           *
     C*                                                               *
     C* CALLS:                                                        *
     C*                                                               *
     C* USES :  @ERR1  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C** SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR1     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR1   1        *1
     C                     MOVE '1'       *INU6            *1
     C                     MOVE 'E'       @TERM   1                       S01166
     C*                                                    *1
     C** SET UP FIELDS IN LOCAL DATA AREA                  *1
     C                     MOVE '991'     DBASE            *1
     C*                                                    *1
     C** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     END                             E1
     C*
     C** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* INFSR - FILE EXCEPTION/ERROR SUBROUTINE                       *
     C*                                                               *
     C* CALLED BY:   EXECUTES WHENEVER FILE EXCEPTION/ERROR OCCURS    *
     C*                                                               *
     C* CALLS:                                                        *
     C*                                                               *
     C* USES :  @ERR2  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
     C*         @FILE  - FILENAME FOR WHICH EXCEPTION/ERROR           *
     C*                  OCCURRED (POSNS 201-208 OF PSDS)             *
     C*                                                               *
     C*****************************************************************
     C*
     C           INFSR     BEGSR
     C*
     C** SET @ERR2 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR2     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR2   1        *1
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
     C                     MOVE 'E'       @TERM
     C*                                                    *1
     C** SET UP FIELDS IN LOCAL DATA AREA                  *1
     C                     MOVEL@FILE     DBFILE           *1
     C                     MOVE '992'     DBASE            *1
     C*                                                    *1
     C** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     END                             E1
     C*
     C** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR
     C*
     C*****************************************************************
     O/EJECT
     O*X38CPP0E                @RLS01
     O*A38CPP0E                @RLS01                                     S01166
     O*
     O**  RELEASE OF FX38CPLL RECORD
     O*X38CPP0E                @UPD01
     O*A38CPP0E                @UPD01                                     S01166
     O*
     O**  UPDATE OF FX38CPLL RECORD
     O***                      FARKT1                                     S01166
     O***                      FARKB1                                     S01166
**  @PWR - ARRAY OF POWERS OF 10
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
** @OVR  CL COMMAND FOR CALL TO QCMDEXC                                   E20774
OVRDSPF FILE(TM3110DD) WAITRCD(    )                                      S01117
** @DD - DAYS IN A MONTH
312831303130313130313031
** CPY@ - COPYRIGHT STATEMENT                                             S01117
(c) Misys International Banking Systems Ltd. 2001
