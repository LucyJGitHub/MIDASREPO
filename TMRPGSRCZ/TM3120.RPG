     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FX - Daily Summary Enquiry.')
     F****************************************************************
     F*                                                              *
     F*  Midas - TREASURY MANAGEMENT
     F*                                                              *
     F*     TM3120 - FX FORWARD BOOK - DAILY SUMMARY.                *
     F*                                                              *
     F*     Function: This enquiry shows cash flow movements for each*
     F*     (I/C)     day forward including today.                   *
     F*                                                              *
     F*     Called by: TMC0311 - TM Enquiry control                  *
     F*           via: DL3100  - Treasury management controller      *
     F*                                                              *
     F*     Calls    : ZA0250  - Clear program message queue.        *
     F*              : ZA0240  - Display program message queue.      *
     F*                                                              *
     F*     Linked enquiries: TM3110 - FX Monthly summary            *
     F*                       TM3130 - FX Daily deals                *
     F*                       DL0170 - FX Deal details               *
     F*                                                              *
      *  (c) Finastra International Limited 2001                      *
     F*                                                              *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *  Prev Amend No. CRE026             Date 09Jun06               *
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CSD027             Date 09Dec05               *
      *                 TDA035             Date 02Apr04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 E42669             Date 17Feb93               *
      *                 E41813             Date 03Feb93               *
     F*                 E45825              DATE 03FEB93              *
     F*                 E38194              DATE 03FEB93              *
     F*                 S01319              DATE 09DEC91              *
     F*                 S01319              DATE 14AUG91              *
     F*          AMEND NO. S01280              DATE 12FEB91          *
     F*          AMEND NO. E22279              DATE 18JAN91          *
     F*          AMEND NO. S01117              DATE 15OCT90          *
     F*          AMEND NO. S01194              DATE 15OCT90          *
     F*          AMEND NO. E20774              DATE 15MAR90          *
     F*          AMEND NO. S01199              DATE 28FEB90          *    S01199
     F*          AMEND NO. E19997              DATE 21NOV89          *
     F*          AMEND NO. E20177              DATE 20NOV89          *
     F*          AMEND NO. E20301              DATE 20NOV89          *
     F*          AMEND NO. E20302              DATE 20NOV89          *
     F*          AMEND NO. E18917              DATE 07NOV89          *
     F*                                                              *
     F*                                                              *
     F*****************************************************************
     F*                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CRE026 - Consumer Banking                                    *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  E42669 - Selection parameter defaulting does not function    *
     F*  (SDC096) as described in Instruction Manual. Should          *
     F*           default CCY to Base CCY for Dealing, and date       *
     F*           to Spot Date for the CCY.                           *
     F*  E41813 - The funky spec says that if a figure is approxed    *
     F*           to zero for the enquiry, but is actually just a     *
     F*           small amount, then a sign will appear on the        *
     F*           screen next to the zero. This does not happen       *
     F*           for FX NET field.                                   *
     F*  E45825 - Market rate displayed incorrectly if over 999       *
     F*           and with decimal points. Only set decimal point     *
     F*           if field is not too large.                          *
     F*  E38194 - Make @X non-zero, increase array @MK from           *
     F*           length 6 to 7.                                      *
     F*     S01319  -  (HY0020) If a currency has records for        *
     F*                selection but one does not appear on first    *
     F*                subfile screen then spot rates do not appear. *
     F*     S01319  -  Remove redundant processing                   *
     F*     S01280   General error fixes during upgrade project:     *
     F*            - Low/high spot rate and currency should be       *
     F*              displayed for a valid currency even if there    *
     F*              are no records to display.                      *
     F*            - ? processing not working correctly - returned   *
     F*              currency not moved to prompt field.             *
     F*            - If only one page of data to display, start/end  *
     F*              field displayed as 'STEND'                      *
     F*            - If no records for prompts selected and F12      *
     F*              taken, device error occurs                      *
     F*                                                              *
     F*     E22279 - Buy/Sell Indicator incorrectly checked for      *
     F*              value of 'M' in #ZB.SR                          *
     F*                                                              *
     F*     S01194 - R10 STANDING DATA                               *
     F*                                                              *
     F*     S01117 - R10 CHANGES                                     *
     F*              PROGRAM RENAMED FROM DL3120                     *
     F*                                                              *
     F*     E20774 - REPLACE QCAEXEC WITH QCMDEXC                    *    E20774
     F*                                                              *
     F*     S01199  -  HELP SYSTEM.                              *        S01199
     F*                                                              *
     F*     E19997 - WHEN CALCULATING P/L, THE PROGRAM DOES NOT TAKE *
     F*              INTO ACCOUNT FOR THE DIFFERENT IN DECIMAL PLACES*
     F*              FOR THE DEAL AND BASE CURRENCY.                 *
     F*                                                              *
     F*     E20177 - WHEN CALCULATING AVERAGE RATE,THE NET CURRENCY  *
     F*              AMOUNT AND THE BASE CURRENCY AMOUNT IS BEING    *
     F*              ROUNDED INTO INTEGER BEFORE DOING THE  DIVISION *
     F*              THIS CAUSES ROUNDING ERROR.                     *
     F*                                                              *
     F*     E20301 - WRONG MULTIPLY/DIVIDE INDICATOR IS BEING USED.  *
     F*              MULTIPLY/DIVIDE INDICATOR (MDIN) AGAINST        *
     F*              ACCOUNTING BASE CURRENCY IS BEING USED INSTEAD  *
     F*              OF THE INDICATOR (XRMD) AGAINST DEALING BASE    *
     F*              CURRENCY.                                       *
     F*                                                              *
     F*     E20302 - MARKET POINT DISPLAY FIELD IS NOT BEING CLEARED *
     F*              BETWEEN DAYS AND SELECTIONS.                    *
     F*                                                              *
     F*     E18917 - IF THE AVERAGE RATE IS EQUAL TO THE SPOT RATE   *
     F*              @DEALP BECOMES ZERO. IT WOULD CAUSE AN ARRAY    *
     F*              INDEX ERROR                                     *
     F*                                                              *
     F****************************************************************
     F*
     F* ID F  C  H  L    FUNCTION OF INDICATORS
     F*       01         EXIT PROGRAM
     F*       05         REFRESH SCREEN
     F*       10         HELP KEY HAS BEEN PRESSED
     F*       15         PROTECT SELECT FIELD
     F*       25         ROLLUP REQUESTED
     F*       26         ROLLDOWN REQUESTED
     F*       27         INHIBIT ROLL KEYS
     F*
     F*       30         ACTIVATE SUBFILE END
     F*       35         ACTIVATE SUBFILE DISPLAY
     F*       36         ACTIVATE SUBFILE DISPLAY CONTROL
     F*
     F*       40         ACTIVATE MESSAGE SUBFILE END
     F*       46         ACTIVATE MESSAGE SUBFILE DISPLAY CONTROL
     F*
     F*       50         SUBFILE HAS BEEN SET UP                          S01280
     F*                                                                   S01280
     F*       60         ERROR ON CURRENCY SELECTED
     F*       61         ERROR ON DATE SELECTED
     F*       69         GENERAL ERROR ON VALIDATION OF PROMPT SCREEN
     F*
     F*       71         CHAIN AND DB ERROR INDICATOR
     F*       U6         PROGRAM ERROR - *PSSR EXECUTED
     F*       U7         DATA BASE ERROR
     F*       U8         DATA BASE ERROR
     F*
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*FDINSTLLIF**E*******************DISK***************************UC**S01319
     F*FDICDRLLIF  E           K        DISK         KINFSR INFSR      UC S01194
     F*****       TABTB11F                          KIGNORE               S01194
     F*****       TABTB20F                          KIGNORE               S01194
     F*FDCCYTLLIF  E           K        DISK         KINFSR INFSR      UC S01194
     FFDMNTHLLIF  E                    DISK         KINFSR INFSR      UC
     FFXFWDTLLIF  E           K        DISK         KINFSR INFSR      UC
     FFDCCYPLLIF  E           K        DISK         KINFSR INFSR      UC
     FFXCCYPLLIF  E           K        DISK         KINFSR INFSR      UC
     F            FDCCYPP0                          KRENAMEFXCCYPP0
     F*FDUSSILLIF**E**********K********DISK*********KINFSR*INFSR******UC**S01319
     FMUSER   IF  E           K        DISK         KINFSR INFSR      UC  S01319
     F*DL3120DDCF  E                    WORKSTN                        UC S01117
     F*****                                   RRN   KSFILE DL3120S1       S01117
     FTM3120DDCF  E                    WORKSTN                        UC  S01117
     F                                        RRN   KSFILE TM3120S1       S01117
     F                                              KNUM        1
     E*
     E** COMPILE TIME ARRAY FOR COPYRIGHT STATEMENT                       S01117
     E                    CPY@    1   1 80                                S01117
     E*                                                                   S01117
     E**  ARRAY TO EDIT AMOUNT FIELDS
     E                    @IN        15  1  A
     E*
     E**  ARRAY TO INPUT FORWARD POINTS FOR EDIT
     E                    @IN2        7  1  A
     E*
     E**  ARRAY OUTPUT BY FORWARD POINTS EDIT
     E                    @OT         7  1  A
     E*
     E**  ARRAY TO EDIT AMOUNT FIELDS
     E                    @BL         9  1
     E*
     E**  ARRAY TO EDIT AVERAGE RATE
     E                    @OR        14  1
     E*
     E**  ARRAY TO EDIT DEALT FORWARD POINTS
     E                    @EP        13  1
     E*
     E**  ARRAY TO EDIT DEALT FORWARD POINTS
     E                    @EP2        6  1
     E*
     E**  ARRAY TO EDIT MARKET FORWARD POINTS
     E********************@MK         6  1                                E38194
     E                    @MK         7  1                                E38194
     E*
     E**  USED BY SR. ZA0720 - MONTH SHORTNAME
     E                    @MT        12  3
     E*
     E** ARRAY TO HOLD CALCULATED DATES
     E                    @CD        16  8 0
     E*
     E**  ARRAY FOR SR. ZA0710 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0A
     E*
     E**  ARRAY FOR SR. ZA0710 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0A
     E*
     E**  ARRAY FOR SR. ZA0780 - POWERS OF TEN.
     E                    @@AY    1  10 10 0
     E*
     E**  Array of scaling factors.
     E                    @SF     1  10 10 0
     E*
     E**  ARRAY TO HOLD INPUT RATE (ZA0880)
     E                    @A         13  1  A
     E*
     E**  ARRAY TO HOLD OUTPUT RATE (ZA0880)
     E                    @B          8  1
     E*
     E**  ARRAY FOR RATE INPUT (ZA0760) RENAMED FOR THIS PROGRAM
     E                    @I         13  1
     E*
     E**  ARRAY FOR RATE OUTPUT (ZA0760) RENAMED FOR THIS PROGRAM
     E                    @O         14  1
     E*
     E** CHARACTER ARRAY CONTAINING FORWARD POINTS INPUT
     E                    @@7         7  1
     E*
     E** ARRAY HOLDING FORMATTED FORWARD POINTS
     E                    @7         14  1
     E*
     E**  ARRAY TO HOLD OUTPUT AMOUNT FOR ZA0860
     E                    @K         16  1
     E*
     E****ARRAY*TO*SET*UP*PARAMETER*FOR*CALL*TO*QCAEXEC                   E20774
     E**  ARRAY TO SET UP PARAMETER FOR CALL TO QCMDEXC                   E20774
     E                    @OVR    1   1 36
     I*
     I**  RENAME FIELDS ON FDMNTHLL AS ARRAY
     IFDMNTHP0
     I              MNNM1                           @MT,1
     I              MNNM2                           @MT,2
     I              MNNM3                           @MT,3
     I              MNNM4                           @MT,4
     I              MNNM5                           @MT,5
     I              MNNM6                           @MT,6
     I              MNNM7                           @MT,7
     I              MNNM8                           @MT,8
     I              MNNM9                           @MT,9
     I              MNNM10                          @MT,10
     I              MNNM11                          @MT,11
     I              MNNM12                          @MT,12
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@Z71Y
     I            DS
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@VDT
     I            DS
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
     I**  DATA STRUCTURE FOR SR. ZA0720 - DATE INPUT TO SUBROUTINE
     I            DS
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I*
     I*   INPUT TO EDIT DATA STRUCTURE
     I            DS
     I                                        1  138@@RIN
     I                                        1  13 @A
     I**  D/S TO HOLD CURRENT PROMPT
     I*
     I            DS
     I                                        1   7 @CPDAY
     I                                        1   20@DD
     I                                        3   5 @MMM
     I                                        6   70@YY
     I                                        6   7 @YYA
     I*
     I**  DATA STRUCTURE TO SUBDIVIDE ROLL/REFRESH INPUT PARAMETER
     I                                        1   80@RRFSH
     I                                        1   40@RRYR
     I                                        5   60@RRMTH
     I                                        7   80@RRDAY
     I**  D/S TO KLIST DATE
     I*
     I            DS                              8
     I                                        1   80@DTIN
     I                                        1   40FPFWBY
     I                                        5   60FPFWBM
     I                                        7   80FPFWBD
     I**  DATE FORMAT DATA STRUCTURE
     I*
     I            DS                             15
     I                                        1  150@INPUT
     I                                        6  15 @INPUA
     I**  INPUT TO EDIT DATA STRUCTURE
     I            DS
     I                                        1   80@KDATE
     I                                        1   40@KCCYY
     I                                        5   60@KMM
     I                                        7   80@KDD
     I**  INPUT TO EDIT DATA STRUCTURE
     I            DS
     I                                        1   80@GDATE
     I                                        1   40@CCYY
     I                                        5   60@MM
     I            DS
     I*
     I**  USED BY SR. ZA0890 - Input Points Field
     I                                        1   72@@PNTS
     I                                        1   7 @@7
     I                                        1   5 @@INTP
     I                                        6   7 @@DECP
     I                                        7   7 @@BITO
     I*
     I*
     I*
     I@STRNG      DS                            256
     I*
     I** DATA STRUCTURE FOR INPUT PARAMETERS (SUBDIVIDE DATE)
     I*
     I                                        1   3 @STCCY
     I                                        4   5 @STDAY
     I                                        6   8 @STMTH
     I                                        9  10 @STYR
     I                                       11  160@STDNO
     I                                       17 256 @STREM
     I*
     I*
     I@PRMCP      DS                             16
     I*
     I** DATA STRUCTURE FOR PROMPT FIELDS FOR CONTROL PROGRAM
     I*
     I*
     I                                        1   3 @CPCCY
     I                                        4  10 @CPDAT
     I                                       11  16 @CPDNO
     I*
     I@SRDAT      DS
     I*
     I*   DATA STRUCTURE FOR PROMPT DATE
     I                                        1   2 @SRDAY
     I                                        3   5 @SRMTH
     I                                        6   7 @SRYR
     I*
     I@WORK       DS
     I*
     I** DATA STRUCTURE FOR DISPLAY FIELDS
     I*
     I                                        1   9 DDIN
     I                                       10  18 DDOUT
     I                                       19  27 DDNET
     I                                       28  36 DDAVR
     I                                       37  43 DDDEAL
     I                                       44  50 DDMKT
     I                                       51  61 DDPLU
     I*
     I@DEL        DS
     I*
     I*   DATA STRUCTURE TO SUBDIVIDE DDDEAL
     I                                        1   6 @DELA
     I                                        7   7 @DELS
     I*
     I@MKT        DS
     I*
     I*   DATA STRUCTURE TO SUBDIVIDE DDMKT
     I                                        1   6 @MKTA
     I                                        7   7 @MKTS
     I*
     I*   DATASTUCTURE TO CONVERT @@IRAT DECIMAL FIELD TO ALPHA FIELD
     I@@RTDS      DS                             13
     I                                        1  138@@IRAT
     I*
     I** DATA STRUCTURE TO HOLD INFORMATION ON DATABASE ERROR.
     I           UDS                            256
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     I*
     I@OVRID      DS                             36
     I*
     I*   DATA STRUCTURE FOR COMMAND IN ARRAY @OVR
     I                                       32  350@WAIT
     I*
     I** PROGRAM STATUS D/S TO HOLD FILE NAME FOR FILE ERROR.
     IPSDS       SDS
     I                                      201 208 @FILE
     I                                      244 253 @JOB
     I                                      254 263 @USER
     I*
     ISDBANK    E DSSDBANKPD                                              S01194
     I** EXTERNAL DS FOR BANK DETAILS                                     S01194
     I*                                                                   S01194
     ISDCURR    E DSSDCURRPD                                              S01194
     I** EXTERNAL DS FOR CURRENCY DETAILS                                 S01194
     I*                                                                   S01319
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     I*                                                                   S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* FIRST DS FOR ACCESS PROGRAMS, SHORT DATA STRUCTURE                S01194
     I*                                                                   S01117
     IDSSDY     E DSDSSDY                                                 S01194
     I* SECOND DS FOR ACCESS PROGRAMS, LONG DATA STRUCTURE                S01194
     I*                                                                   S01194
      *
     C/EJECT
     C**VERSION**
     C*
     C                     MOVEACPY@      BIS@   80                       S01117
     C*                                                                   S01117
     C**  Initial processing.
     C                     EXSR #A
     C*
     C**  Main processing
     C           *INLR     CASEQ'0'       #B
     C                     END
     C*
     C**  Termination processing
     C                     EXSR #C
     C*
     C           ENDPGM    TAG                             **ENDPGM**
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  Index to subroutines - Order of listing due to frequency of  *
     C*                         usage.                                *
     C*                                                               *
     C*   1. #ZB    - Edit fields for display.                        *
     C*   2. #ZBA   - Edit fields for display.                        *
     C*   3. ZA0860 - Convert short amount to display format.         *
     C*   4. ZA0880 - Convert short rate to display format.           *
     C*   5. ZA0700 - Calculate Forward Points.                       *
     C*   6. ZA0760 - Convert rate to display.                        *
     C*   7. ZA0780 - Calculate decimals for cross rate.              *
     C*   8. ZA0790 - Edit Forward Points.                            *
     C*   9. ZA1150 - Convert Rate to a scaled rate.                  *
     C*   10.ZA1160 - Convert scaled rate to unscaled rate.           *
     C*   11.ZA0890 - Edit Forward Points.
     C*   12.#B     - Main processing.                                *
     C*   13.#BA    - Read forward processing.                        *
     C*   14.#BB    - Read backward processing.                       *
     C*   15.#BC    - ENTER processing.                               *
     C*   16.#BCA   - Validate prompts.                               *
     C*   17.#BD    - Rollup processing.                              *
     C*   18.#BE    - Rolldown processing.                            *
     C*   19 #ZE    - Retreive database records FXFWDTLL.             *
     C*   20.#ZA    - Reset Error indicators and clear message queue. *
     C*   21.ZA0720 - Convert YYYYMMDD to DDMMMYY or MMMDDYYYY.       *
     C*   22.#A     - Initial processing.                             *
     C*   23.#C     - Termination processing.                         *
     C****24.ZA0150 - Accesses ICD file.                              *   S01194
     C*   25.ZA0710 - Calculate YYYYMMDD from Midas day number.       *
     c*   26.ZA0680 - Convert Midas day number to YYYYMMDD.
     C*****7.#ZD    - Database file error handling sub- routine.      *   S01194
     C*   28.INFSR  - File error handling sub- routine.               *
     C*   29.*PSSR  - Program error handling sub- routine.            *
     C*                                                               *
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #ZB EDIT FIELDS FOR DISPLAY                               *
     C*        CALLED BY  : #BA #BB                                  *
     C*        CALLS      : #ZBA                                     *
     C*                                                              *
     C*        WORK FIELDS: @INPUT- AMOUNT INPUT TO FIELD EDIT       *
     C*                   : @INC  - EDITED DAILY CASH IN             *
     C*                   : @OUTC - EDITED DAILY CASH OUT            *
     C*                   : @NET  - EDITED NET CURRENCY              *
     C*                   : @SIGN - SIGN FOR NET CURRENCY            *
     C*                                                              *
     C****************************************************************
     C*
     C           #ZB       BEGSR
     C*
     C                     MOVE '0'       *IN15
     C*
     C**  EDIT SPOT RATES FOR DISPLAY (AS LONG AS CURRENCY IS NOT BASE)
     C**
     C***********@SRCCY****IFNE*IDCYDL*********************B1*************S01319
     C           @SRCCY    IFNE BNCYDL                     B1             S01319
     C*****                Z-ADDHGSP      @@RIN            *1             S01194
     C                     Z-ADDA6HSRT    @@RIN            *1             S01194
     C                     Z-ADD0         @PAD    10       *1
     C*****      @PAD      DOWNESEXP                       B*2            S01194
     C           @PAD      DOWNEA6SCEX                     B*2            S01194
     C                     MULT 10        @@RIN            **2
     C                     ADD  1         @PAD             **2
     C                     END                             E*2
     C                     EXSR ZA0880                     *1
     C                     MOVEA@B        DDHISP           *1
     C*****                Z-ADDLOSP      @@RIN            *1             S01194
     C                     Z-ADDA6LSPR    @@RIN            *1             S01194
     C                     Z-ADD0         @PAD    10       *1
     C*****      @PAD      DOWNESEXP                       B*2            S01194
     C           @PAD      DOWNEA6SCEX                     B*2            S01194
     C                     MULT 10        @@RIN            **2
     C                     ADD  1         @PAD             **2
     C                     END                             E*2
     C                     EXSR ZA0880                     *1
     C                     MOVEA@B        DDLOSP           *1
     C                     ELSE                            X1
     C                     MOVE *BLANKS   DDHISP           *1
     C                     MOVE *BLANKS   DDLOSP           *1
     C                     END                             E1
     C*
     C**  EDIT DATE
     C                     MOVEL@DTIN     @@DTIN
     C                     EXSR ZA0720
     C                     MOVE @@DATE    DDDAT
     C*
     C**  EDIT DAILY CASH IN - REMOVE SIGN USING THE 'MOVEL' OP.CODE
     C           FPDYCI    DIV  @SCALE    @@DYCI  90H
     C                     Z-ADD@@DYCI    @@NUM
     C                     EXSR ZA0860
     C                     MOVEL@@ALPH    @@IN   15
     C                     MOVE @@IN      DDIN
     C*
     C**  EDIT DAILY CASH OUT
     C           FPDYCO    DIV  @SCALE    @@DYCO  90H
     C                     Z-ADD@@DYCO    @@NUM
     C                     EXSR ZA0860
     C                     MOVEL@@ALPH    @@OUT  15
     C                     MOVE @@OUT     DDOUT
     C*
     C**  SET UP BUY/SELL INDICATOR FOR NET MOVEMENT
     C           FPDYNM    IFLT *ZERO                      B1
     C                     MOVE 'B'       @@BYSL           *1
     C                     ELSE                            X1
     C                     MOVE 'S'       @@BYSL  1        *1
     C                     END                             E1
     C*
     C           FPDYNM    IFEQ *ZERO                      B1
     C                     MOVE *BLANK    DDNET            *1
     C                     END                             E1
     C*
     C**  DAILY NET CURRENCY MOVEMENT
     C           FPDYNM    DIV  @SCALE    @@DYNM  80H
     C                     Z-ADD@@DYNM    @@NUM
     C                     EXSR ZA0860
     C*                                                                   E41813
     C** Set up sign +/- if amount is very small but not zero             E41813
     C*                                                                   E41813
     C           FPDYNM    IFGT 0                                         E41813
     C           @@DYNM    ANDEQ0                                         E41813
     C                     MOVE '0+'      @@ALPH                          E41813
     C                     END                                            E41813
     C*                                                                   E41813
     C           FPDYNM    IFLT 0                                         E41813
     C           @@DYNM    ANDEQ0                                         E41813
     C                     MOVE '0-'      @@ALPH                          E41813
     C                     END                                            E41813
     C*                                                                   E41813
     C                     MOVE @@ALPH    DDNET
     C*
     C*   FIND AVERAGE RATE (USING DEALT BASE CURRENCY EQUIVALENT AND
     C*   DAILY NET CURRENCY MOVEMENT - DIVIDE ONE BY THE OTHER
     C*   DEPENDING ON THE MULTIPLY/DIVIDE INDICATOR) AS LONG AS
     C*   CURRENCY IS NOT BASE
     C*
     C***********@SRCCY****IFEQ*IDCYDL*********************B1*************S01319
     C           @SRCCY    IFEQ BNCYDL                     B1             S01319
     C                     MOVE *BLANKS   DDAVR            *1
     C                     MOVE *BLANKS   DDDEAL           *1
     C                     MOVE *BLANKS   DDMKT            *1
     C                     MOVE *BLANKS   DDPLU            *1
     C                     GOTO #ZB9                       *1
     C                     END                             E1
     C*
     C           FPDYNM    IFEQ 0                          B1
     C           FPDYDE    OREQ 0                          *1
     C                     MOVE *BLANKS   DDAVR            *1
     C                     MOVE *ZERO     @AVRAT           *1
     C                     ELSE                            X1
     C*
     C*  DIVIDE DAILY NET MOVEMENT BY FACTOR OF ACTUAL
     C*  DEC.PLACES,AND DIVIDE DBCE BY A FACTOR OF BASE CURRENCY
     C*  DECIMAL PLACES
     C*****                Z-ADDCDP       @@CDP                           S01194
     C                     Z-ADDA6NBDP    @@CDP                           S01194
     C*
     C**  E20177 - ONLY ROUNDED ONE OF THE AMOUNT TO AN INTEGER           E20177
     C**           USING THE DIFF. BETWEEN THE DECIMAL POINTS             E20177
     C**           FOR THE TWO AMOUNT TO MINIMIZE ROUNDING ERROR.         E20177
     C********** 1         ADD  @@CDP     @D      10                      E20177
     C********** FPDYNM    DIV  @SF,@D    @PDYNM 150                      E20177
     C*
     C********** 1         ADD  @BCDP     @D      10       **2            E20177
     C********** FPDYDE    DIV  @SF,@D    @PDYDE 150       **2            E20177
     C                     Z-ADDFPDYNM    @PDYNM           *1             E20177
     C                     Z-ADDFPDYDE    @PDYDE           *1             E20177
     C           @P        IFLT 0                          B*2            E20177
     C           @PDYNM    DIV  @SF,@Q    @PDYNM 150H      **2            E20177
     C                     ELSE                            X*2            E20177
     C           @PDYDE    DIV  @SF,@Q    @PDYDE 150H      **2            E20177
     C                     END                             E*2            E20177
     C*
     C           @MDIN     IFEQ 0                          B*2
     C           @PDYNM    DIV  @PDYDE    @AVRAT 158H      **2
     C                     ELSE                            X*2
     C           @PDYDE    DIV  @PDYNM    @AVRAT    H      **2
     C                     END                             E*2
     C*
     C**  CHECK FOR NEGATIVE AVERAGE RATE
     C           @AVRAT    IFLT *ZERO                      B*2
     C                     Z-SUB@AVRAT    @AVRAT           **2
     C                     END                             E*2
     C*
     C*  CONVERT AVERAGE RATE VIA SUBROUTINE ZA0760
     C*
     C                     Z-ADD@AVRAT    @@IRAT           *1
     C                     MOVE @SRCCY    @@CCY1           *1
     C                     MOVE @@CDP     @@NDP1           *1
     C                     EXSR ZA0760                     *1
     C*  EDIT RATE SO THAT IT IS HALF ADJUSTED TO FILL 9A FIELD
     C*  FIND FIRST NON-BLANK POSITION OF ARRAY
     C*
     C                     MOVEA@O        @OR              *1             SO1166
     C                     Z-ADD1         @V      20       *1
     C           @OR,@V    DOWEQ*BLANKS                    B*2
     C                     ADD  1         @V               **2
     C                     END                             E*2
     C           @OR,@V    IFNE *BLANKS                    B*2
     C           @V        ANDLT6                          **2
     C           @V        ADD  9         @Z      20       **2
     C                     MOVE @OR,@Z    @ORZ    10       **2
     C*
     C*   CHECK IF TENTH FIGURE GREATER THAN 5; IF SO ADD 1 TO PREVIOUS
     C*   FIGURE, ENSURING THAT THIS IS NOT '.' OR 9. IF IT IS, ADD 1
     C*   TO PREVIOUS FIGURE ETC.
     C*
     C           @ORZ      IFGE 5                          B**3
     C           @Z        SUB  1         @X      20       ***3
     C                     TESTN          @OR,@X     21    ***3
     C           *IN21     IFEQ '0'                        B***4
     C           @X        SUB  1         @X               ****4
     C                     END                             E***4
     C                     MOVE @OR,@X    @ORX    20       ***3
     C           @ORX      ADD  1         @ORX             ***3
     C           @ORX      DOWEQ10                         B***4
     C           @X        SUB  1         @X               ****4
     C                     TESTN          @OR,@X     21    ****4
     C           *IN21     IFEQ '0'                        B****5
     C           @X        SUB  1         @X               *****5
     C                     END                             E****5
     C                     MOVE @OR,@X    @ORX    20       ****4
     C           @ORX      ADD  1         @ORX             ****4
     C                     END                             E***4
     C                     MOVE @ORX      @OR,@X           ***3
     C                     END                             E**3
     C                     END                             E*2
     C                     MOVEA@OR,@V    @AVR    9        *1
     C                     MOVE @AVR      DDAVR            *1
     C*
     C                     END                             E1
     C*
     C*  CALCULATE DEALT FORWARD POINTS (AVERAGE RATE - APPROPRIATE
     C*  SPOT RATE)
     C**  IF AVERAGE RATE FIELD IS ZERO DEAL FORWARD POINT IS ZERO
     C           @AVRAT    IFEQ *ZERO                      B1
     C                     Z-ADD*ZERO     @DEALP 158       *1
     C                     ELSE                            X1
     C                     EXSR #ZBA                       *1
     C                     MOVE @DEL      DDDEAL           *1
     C                     END                             E1
     C*
     C**  EDIT FORWARD POINTS
     C**    BUT ONLY IF CCY IS NOT BASE CCY FOR DEALING.
     C**  ENSURE *IN80,81 IS NOT ON FROM PREVIOUS ZA SUBROUTINES
     C                     MOVE '0'       *IN80
     C                     MOVE '0'       *IN81
     C                     Z-ADD@@DTIN    @@VDT            *1
     C                     MOVE @SRCCY    @@CCY            *1
     C                     EXSR ZA0700                     *1
     C*
     C**  IF DATABASE ERROR FOUND IN ZA0700 EXECUTE ERROR S/R.
     C*****      *IN80     CASEQ'1'       #ZD                             S01194
     C*****      *IN81     CASEQ'1'       #ZD                             S01194
     C           *IN80     CASEQ'1'       *PSSR                           S01194
     C           *IN81     CASEQ'1'       *PSSR                           S01194
     C                     END
     C*
     C                     MOVE *BLANK    @@FPTA  7
     C***********          Z-ADD@@FPT     @@PAD1  50H                     E45825
     C                     Z-ADD@@FPT     @@PAD1  72H                     E45825
     C                     Z-ADD@@PAD1    @@FPT
     C*
     C**  MUST ENSURE A +VE VALUE IS DISPLAYED
     C           *LIKE     DEFN @@FPT     @FPTW
     C           @@FPT     IFLT *ZERO                      B1
     C                     Z-SUB@@FPT     @FPTW            *1
     C                     MOVE @FPTW     @@FPTA           *1
     C                     ELSE                            X1
     C                     MOVE @@FPT     @@FPTA           *1
     C                     END                             E1
     C*
     C**  IF FORWARD POINTS ARE ZERO DO NOT DISPLAY SIGN
     C           @@FPT     IFEQ *ZERO                      B1
     C                     MOVE *BLANK    @MKTS            *1
     C**  E20302 - CLEAR OUT THE FORWARD POINTS DISPLAY FIELD             E20302
     C**           COMPLETELY BEFORE MOVE OPERATION.                      E20302
     C                     MOVE *BLANKS   @MKTA            *1             E20302
     C                     MOVE '0'       @MKTA            *1
     C                     ELSE                            X1
     C*
     C*** EDIT RETURNED FORWARD POINTS TO SHOW 5 DIGITS > 0
     C                     MOVEA@@FPTA    @IN2             *1
     C                     MOVEA*ALL'0'   @OT              *1
     C*
     C                     Z-ADD1         @W      10       *1
     C                     Z-ADD*ZERO     @Z      20       *1
     C*
     C**  ADD SIGN TO FORWARD POINTS AND FIND FIRST NON ZERO POSITION
     C           @@FPT     IFGT *ZERO                      B*2
     C                     MOVE '+'       @MKTS            **2
     C           *ZERO     LOKUP@IN2,@W              71    **2
     C                     ELSE                            X*2
     C                     MOVE '-'       @MKTS            **2
     C           *ZERO     LOKUP@IN2,@W                71  **2
     C                     END                             E*2
     C*** MOVE FORWARD POINTS TO  OUTPUT ARRAY
     C           @Z        DOWLT7                          B*2
     C           @W        ANDLT8                          **2
     C                     MOVE @IN2,@W   @OT,@W           **2
     C                     ADD  1         @W               **2
     C                     ADD  1         @Z               **2
     C                     END                             E*2
     C***
     C*  IF LAST 2 POSITIONS ARE ZERO, DO NOT DISPLAY DECIMAL POINT.
     C*  INSTEAD MOVE THE 5TH ELEMENT OF ARRAY @OT INTO THE
     C*  7TH ELEMENT OF @MK ETC.
     C*
     C           @OT,1     IFEQ *ZERO                      B*2            E45825
     C           @OT,2     ANDEQ*ZERO                      **2            E45825
     C           @OT,6     ANDNE*ZERO                      **2            E45825
     C           @OT,7     ANDNE*ZERO                      **2            E45825
     C                     MOVE '0'       *IN45            **2            E45825
     C                     ELSE                            X*2            E45825
     C                     MOVE '1'       *IN45            **2            E45825
     C                     END                             E*2            E45825
     C*                                                                   E45825
     C***********@OT,6     IFEQ *ZERO                      B*2            E45825
     C***********@OT,7     ANDEQ*ZERO                      **2            E45825
     C           *IN45     IFEQ '1'                        B*2            E45825
     C                     MOVE *BLANKS   @MK              **2
     C                     Z-ADD1         @W               **2
     C           *ZERO     LOKUP@OT,@W               71    **2
     C           @W        ADD  1         @X               **2
     C           @X        DOWLT7                          B**3
     C                     MOVE @OT,@W    @MK,@X           ***3
     C                     ADD  1         @W               ***3
     C                     ADD  1         @X               ***3
     C                     END                             E**3
     C                     MOVE *BLANKS   @MKTA            **2
     C                     MOVEA@MK       @MKTA            **2
     C                     ELSE                            X*2
     C*   ELSE PUT IN DECIMAL POINT
     C*
     C                     MOVE *BLANKS   @MK              **2
     C                     Z-ADD1         @W               **2
     C           *ZERO     LOKUP@OT,@W               71    **2
     C*                                                                   E38194
     C           @W        IFGT 2                                         E38194
     C           @W        SUB  2         @X               **2
     C                     ELSE                                           E38194
     C                     Z-ADD1         @X               **2            E38194
     C                     END                                            E38194
     C*                                                                   E38194
     C           @W        DOWLT8                          B**3
     C           @X        IFEQ 4                          B***4
     C                     MOVE @DSEP     @MK,@X           ****4
     C                     ADD  1         @X               ****4          E45825
     C                     ELSE                            X***4
     C                     MOVE @OT,@W    @MK,@X           ****4
     C                     ADD  1         @W               ****4
     C                     ADD  1         @X               ****4
     C                     END                             E***4
     C                     END                             E**3
     C                     END                             E*2
     C*
     C*  MOVE EDITED FORWARD POINTS INTO FIELD FOR DISPLAY
     C*
     C                     MOVEA@MK       @MKTA            *1
     C                     END                             E1
     C                     MOVE @MKT      DDMKT
     C*
     C*  CALCULATE PROFIT AND LOSS
     C*   IF NET POSITION ZERO DISPLAY BLANKS
     C           FPDYNM    IFEQ *ZERO                      B1
     C                     MOVE *BLANKS   DDPLU            *1
     C                     GOTO #ZB9                       *1
     C                     END                             E1
     C*
     C*   FIRST CALCULATE OUTRIGHT RATE BY APPLYING THE FORWARD
     C*   POINTS TO THE SPOT RATE (HIGH SPOT IF NET POSITION
     C*   LONG,LOW SPOT IF NET POSITION SHORT)
      * N.B. 'Long' means selling the CCY so use the Low Spot Rate        E22279
      *      'Short' means buying the CCY so use the High Spot Rate       E22279
     C           @@BYSL    IFEQ 'B'                        B1
     C           @MDIN     ANDEQ0                          *1
     C*****                Z-ADDLOSP      @@IRAT           *1             S01194
     C                     Z-ADDA6LSPR    @@IRAT           *1             S01194
     C                     ELSE                            X1
      *
     C********** @@BYSL    IFEQ 'M'                        B*2            E22279
     C           @@BYSL    IFEQ 'S'                        B*2            E22279
     C           @MDIN     ANDEQ1                          **2
     C*****                Z-ADDLOSP      @@IRAT           **2            S01194
     C                     Z-ADDA6LSPR    @@IRAT           **2            S01194
     C                     ELSE                            X*2
     C*****                Z-ADDHGSP      @@IRAT           **2            S01194
     C                     Z-ADDA6HSRT    @@IRAT           **2            S01194
     C                     END                             E*2
     C                     END                             E1
     C*****                MOVE CCY       @@CCY1                          S01194
     C*****                Z-ADDNQDP      @@NDP1                          S01194
     C*****                Z-ADDSEXP      @@SXP1                          S01194
     C                     MOVE A6CYCD    @@CCY1                          S01194
     C                     Z-ADDA6NQDP    @@NDP1                          S01194
     C                     Z-ADDA6SCEX    @@SXP1                          S01194
     C           @MDIN     IFEQ 0                          B1
     C                     MOVE 'D'       @@FCMD           *1
     C                     ELSE                            X1
     C                     MOVE 'M'       @@FCMD           *1
     C                     END                             E1
     C                     EXSR ZA0780
     C*
     C*  NOW CALCULATE REVALUED BASE CURRENCY EQUIVALENT (IF MULT/DIV
     C*  INDICATOR 'D',RBCE = NET POSITION DIV OUTRIGHT RATE,OTHERWISE
     C*  RBCE = NET POSITION X OUTRIGHT RATE)
     C*
     C                     Z-ADDFPDYNM    @@NET  130
     C           @MDIN     IFEQ 0                          B1
     C           @@NEWR    ANDNE0                          *1
     C**  E19997 - DEFINE @@RBCE AS 15N TO ALLOW FOR DECIMAL PLACES       E19997
     C********** @@NET     DIV  @@NEWR    @@RBCE 130H      *1             E19997
     C           @@NET     DIV  @@NEWR    @@RBCE 150H      *1             E19997
     C                     END                             E1
     C           @MDIN     IFEQ 1                          B1
     C           @@NET     MULT @@NEWR    @@RBCE           *1
     C                     END                             E1
     C*
     C**  E19997 - TAKE INTO ACCOUNT FOR THE DIFFERENT IN DECIMAL         E19997
     C**           PLACES FOR DEALING AND BASE CURRENCY.                  E19997
     C           @P        IFLT 0                          B1             E19997
     C           @@RBCE    DIV  @SF,@Q    @@RBCE           *1             E19997
     C                     ELSE                            X1             E19997
     C           @@RBCE    MULT @SF,@Q    @@RBCE           *1             E19997
     C                     END                             E1             E19997
     C*   PROFIT/LOSS = RBCE - DBCE
     C           @@RBCE    SUB  FPDYDE    @PLOSS 150
     C*
     C*   SET UP SCALING  FACTOR ACCORDING TO CURRENCY DECIMAL PLACES
     C*
     C**  E19997 - THE SCALING FACTOR SHOULD BE WITH BASE CURRENCY        E19997
     C**           BECAUSE THE P/L AMOUNT IS IN BASE CURRENCY.            E19997
     C********** 1         ADD  @@CDP     @S               *1             E19997
     C           1         ADD  @BCDP     @S                              E19997
     C                     Z-ADD@SF,@S    @SCAL1 100       *1
     C           @PLOSS    DIV  @SCAL1    @PLOSS    H      *1
     C                     Z-ADD@PLOSS    @@NUM
     C                     EXSR ZA0860
     C                     MOVE @@ALPH    DDPLU
     C*
     C           #ZB9      ENDSR                           ****#ZB9****
     C*
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #ZBA CALCULATE DEALT FORWARD POINTS                       *
     C*        CALLED BY  : #ZB                                      *
     C*        CALLS      :                                          *
     C*                                                              *
     C****************************************************************
     C*
     C           #ZBA      BEGSR
     C*
     C*  WORK OUT SPOT RATE
     C*
     C*****                Z-ADDHGSP      @XISP  158                      S01194
     C*****                Z-ADDLOSP      @XOSP  158                      S01194
     C                     Z-ADDA6HSRT    @XISP  158                      S01194
     C                     Z-ADDA6LSPR    @XOSP  158                      S01194
     C                     Z-ADD@AVRAT    @XRAT  158
     C                     Z-ADD*ZERO     @AA
     C*****      @AA       DOWNESEXP                       B1             S01194
     C           @AA       DOWNEA6SCEX                     B1             S01194
     C                     MULT 10        @XISP            *1
     C                     ADD  1         @AA              *1
     C                     END                             E1
     C                     Z-ADD*ZERO     @AA
     C*****      @AA       DOWNESEXP                       B1             S01194
     C           @AA       DOWNEA6SCEX                     B1             S01194
     C                     MULT 10        @XOSP            *1
     C                     ADD  1         @AA              *1
     C                     END                             E1
     C                     Z-ADD*ZERO     @AA
     C*****      @AA       DOWNESEXP                       B1             S01194
     C           @AA       DOWNEA6SCEX                     B1             S01194
     C                     MULT 10        @XRAT            *1
     C                     ADD  1         @AA              *1
     C                     END                             E1
     C           @XRAT     IFLT 10                         B1
     C                     Z-ADD@XRAT     @6     156H      *1
     C                     Z-ADD@6        @XRAT            *1
     C                     END                             E1
     C           @XRAT     IFGE 10                         B1
     C           @XRAT     ANDLT100                        *1
     C                     Z-ADD@XRAT     @5     155H      *1
     C                     Z-ADD@5        @XRAT            *1
     C                     END                             E1
     C           @XRAT     IFGE 100                        B1
     C           @XRAT     ANDLT1000                       *1
     C                     Z-ADD@XRAT     @4     154H      *1
     C                     Z-ADD@4        @XRAT            *1
     C                     END                             E1
     C           @XISP     IFLT 10                         B1
     C                     Z-ADD@XISP     @6     156H      *1
     C                     Z-ADD@6        @XISP            *1
     C                     END                             E1
     C           @XISP     IFGE 10                         B1
     C           @XISP     ANDLT100                        *1
     C                     Z-ADD@XISP     @5     155H      *1
     C                     Z-ADD@5        @XISP            *1
     C                     END                             E1
     C           @XISP     IFGE 100                        B1
     C           @XISP     ANDLT1000                       *1
     C                     Z-ADD@XISP     @4     154H      *1
     C                     Z-ADD@4        @XISP            *1
     C                     END                             E1
     C           @XOSP     IFLT 10                         B1
     C                     Z-ADD@XOSP     @6     156H      *1
     C                     Z-ADD@6        @XOSP            *1
     C                     END                             E1
     C           @XOSP     IFGE 10                         B1
     C           @XOSP     ANDLT100                        *1
     C                     Z-ADD@XOSP     @5     155H      *1
     C                     Z-ADD@5        @XOSP            *1
     C                     END                             E1
     C           @XOSP     IFGE 100                        B1
     C           @XOSP     ANDLT1000                       *1
     C                     Z-ADD@XOSP     @4     154H      *1
     C                     Z-ADD@4        @XOSP            *1
     C                     END                             E1
     C*
     C**  IF NET CURR IS SHORT & M/D IND. IS 'M' OR NET CURR IS LONG &
     C**  M/D IND. IS 'D' SUBTRACT HIGH SPOT RATE FORM AVERAGE DEAL.
     C           @MDIN     IFEQ 1                          B1
     C           @@BYSL    ANDEQ'B'                        *1
     C           @MDIN     OREQ 0                          *1
     C           @@BYSL    ANDEQ'S'                        *1
     C*
     C           @XRAT     SUB  @XISP     @DEALP           *1
     C                     ELSE                            X1
     C           @XRAT     SUB  @XOSP     @DEALP           *1
     C*
     C                     END                             E1
     C*
     C*
     C**  FIND SCALING FOR FORWARD POINTS USING NUMBER OF DEC PLACES
     C                     Z-ADD*ZERO     @AA
     C*****      @AA       DOWNENQDP                       B1             S01194
     C           @AA       DOWNEA6NQDP                     B1             S01194
     C                     MULT 10        @DEALP           *1
     C                     ADD  1         @AA              *1
     C                     END                             E1
      *
      **  STORE 15,8 DATA IN 7,2 FORMAT
     C                     Z-ADD@DEALP    @DEAL   72
     C*
     C*   EDIT FORWARD POINTS VIA SUBROUTINE ZA0890
     C*
     C                     Z-ADD@DEAL     @@PNTS
     C           @@NDP     ADD  1         @F      20
     C                     EXSR ZA0890
     C*
     C*   MOVE THE 14 LONG ARRAY RETURNED FROM ZA0890 INTO A 13
     C*   LONG ARRAY. MOVE THE 14TH  ELEMENT INTO THE 'SIGN' FIELD
     C*
     C                     MOVE *BLANKS   @EP
     C                     MOVE *BLANKS   @DELA
     C                     MOVEA@7,1      @EP
     C                     MOVE @7,14     @DELS
     C*
     C*  IF THE 13TH ELEMENT IS BLANK,FIND THE FIRST NON BLANK POSITION
     C*  WORKING BACKWARDS
     C           @EP,13    IFEQ *BLANKS                    B1
     C                     Z-ADD12        @V               *1
     C           @EP,@V    DOWEQ*BLANKS                    B*2
     C           @V        SUB  1         @V               **2
     C                     END                             E*2
     C*
     C*  SET UP THE SIGN (THIS WILL BE THE FIRST NON-BLANK
     C*  POSITION IF NOT THE 14TH POSIITON) THEN MOVE SIX FIGURES
     C*  OF THE ARRAY INTO THE AMOUNT FIELD
     C*
     C                     MOVE @EP,@V    @DELS            *1
     C           @V        SUB  7         @W               *1
     C           @EP,@W    IFEQ *BLANK                     B*2
     C           @W        ADD  1         @W               **2
     C                     MOVEA@EP,@W    @DELA            **2
     C                     GOTO #ZBA9                      **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C*  FIND THE FIRST NON-BLANK ELEMENT,STARTING FROM THE FRONT
     C*
     C                     Z-ADD1         @V
     C           @EP,@V    DOWEQ*BLANKS                    B1
     C                     ADD  1         @V               *1
     C                     END                             E1
     C           @EP,@V    IFNE *BLANK                     B1
     C           @V        ANDLT8                          *1
     C           @V        ADD  6         @Z      20       *1
     C                     MOVE @EP,@Z    @EPZ    10       *1
     C*
     C*  IF THE SEVENTH FIGURE IS 5 OR MORE,ROUND UP PREVIOUS
     C*  FIGURE,MAKING SURE THIS IS NOT A DECIMAL POINT
     C*
     C           @EPZ      IFGE 5                          B*2
     C           @Z        SUB  1         @X      20       **2
     C                     TESTN          @EP,@X     21    **2
     C           *IN21     IFEQ '0'                        B**3
     C           @X        SUB  1         @X               ***3
     C                     END                             E**3
     C                     MOVE @EP,@X    @EPX    20       **2
     C           @EPX      ADD  1         @EPX             **2
     C*
     C*  IF THE SEVENTH FIGURE IS 5 OR GREATER,ROUND UP THE
     C*  PREVIOUS FIGURE,ENSURING THAT THIS IS NOT A DECIMAL POINT
     C*  (IE IT MUST BE NUMERIC)
     C           @EPX      DOWEQ10                         B**3
     C           @X        SUB  1         @X               ***3
     C                     TESTN          @EP,@X     21    **2
     C           *IN21     IFEQ '0'                        B**3
     C           @X        SUB  1         @X               ****4
     C                     END                             E***4
     C                     MOVE @EP,@X    @EPX    20       ***3
     C           @EPX      ADD  1         @EPX             ***3
     C                     END                             E**3
     C                     MOVE @EPX      @EP,@X           **2
     C                     END                             E*2
     C*
     C*  IF THE FIRST NON-BLANK POSITION IS GREATER THAN OR
     C*  EQUAL TO 8,MOVE THE ARRAY INTO THE AMOUNT FIELD
     C*  FROM POSITION 8,SO THAT IT IS RIGHT ADJUSTED
     C                     ELSE                            X1
     C                     MOVEA@EP,8     @DELA            *1
     C                     GOTO #ZBA9                      *1
     C                     END                             E1
     C                     MOVE *BLANKS   @EP2
     C                     MOVEA@EP,@V    @EP2
     C*
     C*  IF THE LAST TWO FIGURES ARE '.0',JUST SHOW THE WHOLE NUMBER
     C*  BY MOVING THE ARRAY INTO A 4-LONG FIELD
     C*
     C           @EP2,6    IFEQ '0'                        B1
     C                     TESTN          @EP,5      21    *1
     C           *IN21     IFEQ '0'                        B*2
     C                     MOVEA@EP2      @EP4    4        **2
     C                     MOVE @EP4      @DELA            **2
     C                     GOTO #ZBA9                      **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C*  IF THE LAST FIGURE IS A DECIMAL POINT,GET RID OF THIS BY
     C*  THE ARRAY INTO A 5-LONG FIELD
     C*
     C                     TESTN          @EP2,6     21
     C           *IN21     IFEQ '0'                        B1
     C                     MOVEA@EP2      @EP3    5        *1
     C                     MOVE @EP3      @DELA            *1
     C                     ELSE                            X1
     C                     MOVEA@EP,@V    @DELA            *1
     C                     END                             E1
     C*
     C           #ZBA9     ENDSR
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA0860 -  CONVERT SHORT AMOUNT TO DISPLAY FORMAT         *
     C*                                                              *
     C*       CALLS:                                                 *
     C*                                                              *
     C*       INPUT: @@NUM  15N    (NUMERIC INPUT AMOUNT)            *
     C*                                                              *
     C*      OUTPUT: @@ALPH 16A    (ALPHA OUTPUT AMOUNT)             *
     C*                                                              *
     C*        USES: @K     15A  - ARRAY TO HOLD INPUT AMOUNT        *
     C*              @@I     1N  - INDEX TO @K                       *
     C*              @@WORK 15A  - ALPHA INPUT AMOUNT                *
     C*                                                              *
     C*     AMEND NO. 000001                  DATE   14/07/86        *
     C*       Amendment to correct output if its value is zero.      *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA0860    BEGSR
     C*
     C                     Z-ADD@@NUM     @@NUM  150
     C*
     C**  IF THE NUMBER IS ZERO, PLACE A SINGLE ZERO IN THE LAST PLACE
     C**  OF THE ARRAY, AND SET THE SIGN TO BLANK.  THEN BY-PASS
     C**  FURTHER SUBROUTINE PROCESSING.
     C           @@NUM     IFEQ 0                          B1
     C                     MOVEA*BLANKS   @K               *1
     C                     MOVE '0'       @K,15            *1
     C                     GOTO ZA0868                     *1
     C                     END                             E1
     C*
     C** SET UP SIGN OF OUTPUT AMOUNT
     C           @@NUM     IFLT 0                          B1
     C                     MOVE '-'       @K,16            *1
     C                     Z-SUB@@NUM     @@NUM            *1
     C                     ELSE                            X1
     C                     MOVE '+'       @K,16            *1
     C                     END                             E1
     C*
     C**  SET UP INPUT AMOUNT ARRAY
     C                     MOVE @@NUM     @@WORK 15
     C                     MOVEA@@WORK    @K
     C*
     C**  BLANK OUT EACH ELEMENT OF @K FROM LEFT TO RIGHT
     C**  UNTIL FIRST NON-ZERO ELEMENT OR 15TH ELEMENT
     C                     MOVE '0'       *IN90
     C                     Z-ADD1         @@I     20
     C           *IN90     DOUEQ'1'                        B1
     C           @@I       OREQ 15                         *1
     C*                                                    *1
     C** IF ARRAY ELEMENT ZERO, SET TO BLANKS              *1
     C           @K,@@I    IFEQ '0'                        B*2
     C                     MOVE *BLANK    @K,@@I           **2
     C                     ELSE                            X*2
     C                     MOVE '1'       *IN90            **2
     C                     END                             E*2
     C                     ADD  1         @@I              *1
     C                     END                             E1
     C*
     C** TAG ZA0868
     C           ZA0868    TAG                             **ZA0868**
     C*
     C** SET UP OUTPUT AMOUNT
     C                     MOVEA@K        @@ALPH 16
     C*
     C           ZA0869    ENDSR                           **ZA0869**
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE ZA0880 - CONVERT SHORT RATE TO DISPLAY            *
     C*                                                               *
     C*                      THIS SUBROUTINE RECEIVES A 13/8 INPUT    *
     C*                      RATE @@RIN & OUTPUTS A 8A RATE WITH      *
     C*                      DECIMAL SEPERATOR @B                     *
     C*                                                               *
     C*  CALLED BY   :                                                *
     C*                                                               *
     C*  INPUT       : @@RIN  - INPUT RATE ARRAY  (13A)               *
     C*  OUTPUT      : @B     - OUTPUT RATE ARRAY (8A)                *
     C*                                                               *
     C*  WORK FIELDS : @@1    - ARRAY INDEX FOR @@C1 (2,0)            *
     C*              : @@B    - ARRAY INDEX FOR @@C2 (1,0)            *
     C*                                                               *
     C*   INDICATOR  :  82    - LOOKUP ARRAY                          *
     C*                                                               *
     C*****************************************************************
     C*
     C           ZA0880    BEGSR
     C*
     C**  LOKUP FOR FIRST NON-ZERO ELEMENT.
     C                     Z-ADD1         @@1     20
     C           *ZERO     LOKUP@A,@@1               82
     C*
     C**  IF NON-ZERO ELEMENT FOUND AFTER POSITION 5 RESET INDEX TO 5
     C           @@1       IFGT 5                          B1
     C                     Z-ADD5         @@1              *1
     C                     END                             E1
     C*
     C**  RESET INDEX TO OUTPUT RATE ARRAY
     C                     Z-ADD*ZERO     @@B     10
     C*
     C**  LOAD 8 POSITION OUTPUT ARRAY
     C           @@B       DOUEQ8                          B1
     C*
     C**  INCREMENT INDEX AND MOVE INPUT ELEMENT TO OUTPUT RATE ARRAY
     C                     ADD  1         @@B              *1
     C                     MOVE @A,@@1    @B,@@B           *1
     C*
     C**  IF INDEX TO INPUT RATE ARRAY = 5 MOVE DEC. SEP. TO OUTPUT
     C**  ARRAY AND SETON INDICATOR TO STOP THIS BEING REPEATED.
     C           @@1       IFEQ 5                          B*2
     C*
     C                     ADD  1         @@B              **2
     C*********************MOVE*IDDCSP****@B,@@B*************2************S01319
     C                     MOVE BNDCSP    @B,@@B           **2            S01319
     C           @@B       ADD  1         @@CHK   10       **2
     C                     END                             E*2
     C*
     C                     ADD  1         @@1              *1
     C*
     C                     END                             E1
     C*
     C** Coding to remove trailing zeros from rates
     C           @B,@@B    DOWEQ'0'                        B1
     C           @@B       ANDNE@@CHK                      B1
     C                     MOVE *BLANK    @B,@@B           *1
     C                     SUB  1         @@B              *1
     C                     END                             E1
     C*
     C           ZA0889    ENDSR                           ***ZA0889***
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0700 - THIS SUBROUTINE CALCULATES FORWARD POINTS           *
     C*                                                              *
     C* CALLED BY:ZA0630                                             *
     C*                                                              *
     C* CALLS :   ZA0680                                             *
     C*                                                              *
     C* INPUT  :  @@VDT  VALUE DATE                            (8N)  *
     C*           @@CCY  CURRENCY CODE                         (3A)  *
     C*           @@BYSL BUY/SELL RATE                         (1A)  *
     C*                                                              *
     C*                                                              *
     C* OUTPUT :  @@FPT  FORWARD POINTS                        (7N)  *
     C*                                                              *
     C*                                                              *
     C* ADDITIONAL WORK FIELDS USED WITHIN THIS ROUTINE :
     C*                                                              *
     C*           @@SPDT SPOT DATE             (MIDAS DAY NO.)       *
     C*           @@VDAT VALUE DATE            (MIDAS DAY NO.)       *
     C*           @@TPRD TYPE OF PERIOD        ('W' IS WEEKS)        *
     C*           @@PRD  NUMBER OF PERIODS                           *
     C*           @@FP1  FORWARD POINTS FROM 1ST REC. USED IN CALC.  *
     C*           @@FP2  FORWARD POINTS FROM 2ND REC. USED IN CALC.  *
     C*           @@D1   MIDAS DAY NO. CORRESPONDING WITH @@FP1      *
     C*           @@D2   MIDAS DAY NO. CORRESPONDING WITH @@FP2      *
     C*           @@WF1  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@WF2  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@MDNO MIDAS DAY NUMBER RETURNED FROM SR @@MDNO    *
     C*           @@DTWF DATE WORKFIELD                              *
     C*                                                              *
     C*                                                              *
     C*     AMEND NO. S01136                   DATE 11/12/87         *
     C*                                                              *
     C*****************************************************************
     C*
     C           ZA0700    BEGSR
     C*
     C**  Find first record on file for currency.
     C                     MOVE *LOVAL    @@DTWF  80
     C*
     C**  Load key used to access LF/FXCCYPLL.
     C           CCYLOW    KLIST
     C                     KFLD           @@CCY
     C                     KFLD           @@DTWF
     C           CCYLOW    SETLLFXCCYPLL
     C                     READ FXCCYPLL                 81
     C*
     C** If currency for record has not been found
     C** then there is a database error.
     C           @@CCY     IFNE XPCCY                      B1
     C                     MOVEL'FXCCYPLL'DBFILE           *1
     C                     MOVEL'924'     DBASE            ***************
     C                     MOVEL@@CCY     DBKEY            *             *
     C                     MOVE '1'       *INU7            * DBERROR 924 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C** If the value date is spot date , or before the first record
     C** on file for the currency then the points are zero.
     C*
     C*****      @@VDT     IFEQ FXSP                       B1             S01194
     C           @@VDT     IFEQ A6FXSD                     B1             S01194
     C           @@VDT     ORLT XPPRDD                     *1
     C                     Z-ADD0         @@FPT   72       *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C**  Load key used to access LF/FXCCYPLL.
     C           CCYVDT    KLIST
     C                     KFLD           @@CCY
     C                     KFLD           @@VDT
     C           CCYVDT    SETLLFXCCYPLL
     C                     READ FXCCYPLL                 81
     C*
     C** If currency has not been found check previous record.
     C           @@CCY     IFNE XPCCY                       B1
     C           *IN81     OREQ '1'                         *1
     C**                                                                  E12292
     C** IF *IN81 IS ON, EOF IS ECOUNTERED AND NEED REPOSITION FILE       E12292
     C** TO EOF MARK AND RESET THE EOF STATUS SAVE UP BY SYSTEM.          E12292
     C           *IN81     IFEQ '1'                         B*2           E12292
     C           CCYVDT    SETGTFXCCYPLL                    **2           E12292
     C                     END                              E*2           E12292
     C                     GOTO ZA0708                      *1
     C                     END                              E1
     C*
     C** Find midas day number of value date.
     C                     Z-ADD@@VDT     @@DTIN
     C                     EXSR ZA0680
     C                     Z-ADD@@MDNO    @@VDAT  50
     C*
     C** IF    record with = date found
     C           @@VDT     IFEQ XPPRDD                     B1
     C*
     C** IF Type of period is not 'D'
     C           XPTPRD    IFNE 'D'                        B*2
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B**3
     C*****      XRMD      ANDEQ'D'                        ***3           S01194
     C           A6MDEX    ANDEQ'D'                        ***3           S01194
     C                     MOVE XPLOPT    @@FPT            ***3
     C                     GOTO ZA0709                     ***3
     C                     END                             E**3
     C*
     C           @@BYSL    IFEQ 'S'                        B**3
     C*****      XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FPT            ***3
     C                     GOTO ZA0709                     ***3
     C                     END                             E**3
     C*
     C                     MOVE XPHIPT    @@FPT            **2
     C                     GOTO ZA0709                     **2
     C                     END                             E*2
     C*
     C** The type of period is 'D'.
     C** Date is spot + 1 , spot - 1 or spot - 2 days.
     C** Linear interpolation or extrapolation used between one week
     C** rate & 0 on the spot date.
     C*
     C*
     C** Find the one week rate.
     C** Define search argument for chain to LF/FDCCYPLL.
     C                     MOVE 'W'       @@TPRD  1        *1
     C                     Z-ADD1         @@PRD   20       *1
     C           WEEKRT    KLIST                           *1
     C                     KFLD           @@CCY            *1
     C                     KFLD           @@TPRD           *1
     C                     KFLD           @@PRD            *1
     C*
     C** CHAIN TO FILE FDCCYPLL
     C           WEEKRT    CHAINFDCCYPLL             80    *1
     C           XPDLTF    IFEQ '*'                        B*2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
     C*
     C** DEAL WITH DATA BASE ERROR
     C           *IN80     IFEQ '1'                        B1
     C                     MOVEL'FDCCYPLL'DBFILE           *1
     C                     MOVEL'923'     DBASE            ***************
     C                     MOVEL@@CCY     DBKEY            *             *
     C                     MOVE '1'       *INU7            * DBERROR 923 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B*2
     C*****      XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP2   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C*****      XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP2            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP2            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** Find 1 week date & spot date as a day number.
     C                     Z-ADDXPPRDD    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D2    50       *1
     C*
     C*****                Z-ADDFXSP      @@DTIN           *1             S01194
     C                     Z-ADDA6FXSD    @@DTIN           *1             S01194
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@SPDT  50       *1
     C*
     C*
     C** Forward points can now be calculated.
     C           @@VDAT    SUB  @@SPDT    @@WF1  158       *1
     C*******    @@FP2     MULT @@WF1     @@WF1            *1
     C           @@FP2     MULT @@WF1     @@WF1     H      *1
     C           @@D2      SUB  @@SPDT    @@WF2   80       *1
     C*******    @@WF1     DIV  @@WF2     @@FPT            *1
     C           @@WF1     DIV  @@WF2     @@FPT     H      *1
     C                     GOTO ZA0709                     *1
     C*
     C                     END                             E1
     C*
     C*
     C** IF    record with > date found
     C           XPPRDD    IFGT @@VDT                      B1
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B*2
     C*****      XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP2   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C*****      XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP2            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP2            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** Find day number of date.
     C                     Z-ADDXPPRDD    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D2    50       *1
     C*
     C** READ PREVIOUS record on LF/FXCCYPLL
     C                     READPFXCCYPLL               8180*1
     C*
     C** IF read prior was unsuccessful then there is a database error.
     C           *IN80     IFEQ '1'                        B*2
     C           *IN81     OREQ '1'                        **2
     C                     MOVEL'FXCCYPLL'DBFILE           **2
     C                     MOVEL'927'     DBASE            ***************
     C                     MOVE '1'       *INU7            *             *
     C                     MOVE '1'       *INU8            * DBERROR 927 *
     C                     GOTO ZA0709                     *             *
     C                     END                             E*2************
     C*                                                                   S01136
     C**  If the record just read is  for the spot +1 period, set the     S01136
     C**  points and date to the spot date.                               S01136
     C           XPTPRD    IFEQ 'D'                        B*2            S01136
     C                     Z-ADD0         @@FP1            **2            S01136
     C*****                Z-ADDFXSP      @@DTIN           **2     S01136 S01194
     C                     Z-ADDA6FXSD    @@DTIN           **2            S01194
     C*                                                                   S01136
     C**  Otherwise.....                                                  S01136
     C                     ELSE                            X*2            S01136
     C*
     C           @@BYSL    IFEQ 'B'                        B*2
     C*****      XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP1   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C*****      XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP1            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP1            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*                                                                   S01136
     C                     Z-ADDXPPRDD    @@DTIN           **2            S01136
     C                     END                             E*2            S01136
     C*
     C** Find day number of date.
     C******************** Z-ADDXPPRDD    @@DTIN           *1             S01136
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D1    50       *1
     C*
     C** Forward points can now be calculated.
     C           @@FP2     SUB  @@FP1     @@WF1            *1
     C           @@VDAT    SUB  @@D1      @@WF2            *1
     C           @@WF1     MULT @@WF2     @@WF1            *1
     C           @@D2      SUB  @@D1      @@WF2            *1
     C********   @@WF1     DIV  @@WF2     @@WF1            *1
     C           @@WF1     DIV  @@WF2     @@WF1     H      *1
     C********** @@WF1     ADD  @@FP1     @@FPT            *1
     C           @@WF1     ADD  @@FP1     @@FPT     H      *1
     C                     GOTO ZA0709                     *1
     C*
     C                     END                             E1
     C*
     C** No record with > or = date has been found at this stage
     C** of processing so the points on the furthest forward
     C** record are used.
     C** Find the furthest forward record
     C*
     C** READ PREVIOUS record on LF/FXCCYPLL
     C           ZA0708    TAG
     C                     READPFXCCYPLL               8081
     C           @@CCY     IFNE XPCCY                      B1
     C                     MOVE '1'       *IN80            *1
     C                     END                             E1
     C*
     C** IF read prior was unsuccessful then there is a database error.
     C           *IN80     IFEQ '1'                        B1
     C           *IN81     OREQ '1'                        *1
     C                     MOVEL'FXCCYPLL'DBFILE           ***************
     C                     MOVEL'928'     DBASE            *             *
     C                     MOVE '1'       *INU7            * DBERROR 928 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B1
     C*****      XRMD      ANDEQ'D'                        *1             S01194
     C           A6MDEX    ANDEQ'D'                        *1             S01194
     C                     MOVE XPLOPT    @@FPT            *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C           @@BYSL    IFEQ 'S'                        B1
     C*****      XRMD      ANDEQ'M'                        *1             S01194
     C           A6MDEX    ANDEQ'M'                        *1             S01194
     C                     MOVE XPLOPT    @@FPT            *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C                     MOVE XPHIPT    @@FPT
     C*
     C                     GOTO ZA0709
     C*
     C** Unexecuted processing to define fields used by this subroutine.
     C                     MOVE @@MDNO    @@MDNO  50
     C*
     C           ZA0709    ENDSR
     C****************************************************************
      /EJECT
     C****************************************************************    SO1166
     C*                                                              *    SO1166
     C*                                                              *    SO1166
     C*     MIDAS/DRS - STANDING DATA MODULE                         *    SO1166
     C*                                                              *    SO1166
     C*     ZA0760 -  CONVERT RATE TO DISPLAY -38                    *    SO1166
     C*                                                              *    SO1166
     C*       CALLS: SUBROUTINE ZA0790                               *    SO1166
     C*                                                              *    SO1166
     C*       INPUT: @@IRAT 13,8N  (INPUT RATE)                      *    SO1166
     C*              @@CCY1 3A     (INPUT CURRENCY 1)                *    SO1166
     C*              @@CCY2 3A     (INPUT CURRENCY 2)                *    SO1166
     C*              @@NDP1 1,0    (DECIMAL PLACES FOR CURRENCY 1)   *    SO1166
     C*              @@NDP2 1,0    (DECIMAL PLACES FOR CURRENCY 2)   *    SO1166
     C*                                                              *    SO1166
     C*      OUTPUT: @@ORAT 14A    (OUTPUT RATE)                     *    SO1166
     C*                                                              *    SO1166
     C*        USES:                                                 *    SO1166
     C*                                                              *    SO1166
     C*      N.B. - THE ARRAY NAMES @A AND @B HAVE BEEN CHANGED FOR  *    SO1166
     C*             THIS PROGRAM ONLY TO AVOID CONFUSION WITH THE    *    SO1166
     C*             ARRAYS OF THE SAME NAME IN ZA0880.               *    SO1166
     C****************************************************************    SO1166
     C*                                                                   SO1166
     C           ZA0760    BEGSR                                          SO1166
     C*                                                                   SO1166
     C*          PUT INPUT RATE INTO @A & BLANKS INTO @B                  SO1166
     C*                                                                   SO1166
     C***                  MOVEA@@RTDS    @A                              SO1166
     C***                  MOVEA*BLANKS   @B                              SO1166
     C                     MOVEA@@RTDS    @I                              SO1166
     C                     MOVEA*BLANKS   @O                              SO1166
     C*                                                                   SO1166
     C*          FIND IF EITHER CCY IS BASE                               SO1166
     C*                                                                   SO1166
     C           @@CCY     IFEQ *BLANKS                    B1             SO1166
     C*********************MOVE*IDCYDL****@@CCY*************1*******SO1166S01319
     C                     MOVE BNCYDL    @@CCY            *1             S01319
     C                     END                             E1             SO1166
     C*****                                                               SO1166
     C*****      @@CCY2    IFEQ *BLANKS                    B1             SO1166
     C*****                MOVE IDCYDL    @@CCY2           *1             S01166
     C*****                END                             E1             SO1166
     C*****                                                               SO1166
     C*****      FIND HOW MANY DECIMAL PLACES TO REPORT/EDIT              SO1166
     C*****                                                               SO1166
     C***********@@CCY*****IFEQ*IDCYDL*********************B1*******SO1166S01319
     C           @@CCY     IFEQ BNCYDL                     B1             S01319
     C                     MOVE @@NDP1    @@NDP   10       *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C*****      @@CCY2    IFEQ IDCYDL                     B1             S01166
     C*****                MOVE @@NDP1    @@NDP   10       *1             SO1166
     C*****                END                             E1             SO1166
     C*                                                                   SO1166
     C*          IF NEITHER CCY IS BASE - CALL SUBROUTINE ZA0790          SO1166
     C*          RETURNS WITH NO. OF DECIMAL PLACES TO EDIT.              SO1166
     C*                                                                   SO1166
     C***********IDCYDL****IFNE*@@CCY**********************B1*******SO1166S01319
     C           BNCYDL    IFNE @@CCY                      B1             S01319
     C*****      IDCYDL    ANDNE@@CCY2                     *1             S01166
     C                     EXSR ZA0790                     *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C*          MOVE 4 LEFTMOST CHARACTERS FROM @A TO CORRESPONDING      SO1166
     C*          POSITION IN @B - IF LEFTMOST CHARACTER IS '0' A BLANK    SO1166
     C*          IS MOVED.                                                SO1166
     C*                                                                   SO1166
     C                     Z-ADD1         @@C     20                      SO1166
     C                     Z-ADD1         @@D     20                      SO1166
     C                     MOVE '0'       *IN81                           SO1166
     C           @@C       DOWLT5                          B1             SO1166
     C           *IN81     IFEQ '0'                        B*2            SO1166
     C***        @A,@@C    ANDEQ'0'                        **2            SO1166
     C***                  MOVE ' '       @B,@@C           **2            SO1166
     C           @I,@@C    ANDEQ'0'                        **2            SO1166
     C                     MOVE ' '       @O,@@C           **2            SO1166
     C                     ELSE                            X*2            SO1166
     C***                  MOVE @A,@@C    @B,@@D           **2            SO1166
     C                     MOVE @I,@@C    @O,@@D           **2            SO1166
     C                     END                             E*2            SO1166
     C*                                                                   SO1166
     C*          SET FLAG ON IF LEFTMOST CHARACTER IS NON ZERO            SO1166
     C*                                                                   SO1166
     C***        @A,@@C    IFNE '0'                        B*2            SO1166
     C           @I,@@C    IFNE '0'                        B*2            SO1166
     C                     MOVE '1'       *IN81            **2            SO1166
     C                     END                             E*2            SO1166
     C                     ADD  1         @@C              *1             SO1166
     C                     ADD  1         @@D              *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C*          AFTER FIFTH CHARACTER IS MOVED - MOVE DECIMAL            SO1166
     C*          SEPARATOR TO @B.                                         SO1166
     C*                                                                   SO1166
     C***                  MOVE @A,@@C    @B,@@D                          SO1166
     C                     MOVE @I,@@C    @O,@@D                          SO1166
     C                     ADD  1         @@C                             SO1166
     C                     ADD  1         @@D                             SO1166
     C***                  MOVE IDDCSP    @B,@@D                          SO1166
     C*********************MOVE*IDDCSP****@O,@@D********************SO1166S01319
     C                     MOVE BNDCSP    @O,@@D                          S01319
     C                     ADD  1         @@D                             SO1166
     C*                                                                   SO1166
     C*          MOVE REMAINING CHARACTERS STOPPING WHEN REMAINDER        SO1166
     C*          =0 OR NO.OF DEC.PLACES NORMALLY QUOTED HAS BEEN          SO1166
     C*          REACHED.                                                 SO1166
     C*                                                                   SO1166
     C                     Z-ADD13        @@E     20                      SO1166
     C           5         ADD  @@NDP     LIMIT   20                      SO1166
     C           @@E       DOWGTLIMIT                      B1             SO1166
     C***        @A,@@E    IFEQ '0'                        B*2            SO1166
     C***                  MOVE ' '       @A,@@E           **2            SO1166
     C           @I,@@E    IFEQ '0'                        B*2            SO1166
     C                     MOVE ' '       @I,@@E           **2            SO1166
     C                     SUB  1         @@E              **2            SO1166
     C                     ELSE                            X*2            SO1166
     C                     Z-ADDLIMIT     @@E              **2            SO1166
     C                     END                             E*2            SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C*          MOVE REMAIDER OF @A TO @B                                SO1166
     C*                                                                   SO1166
     C           @@D       DOWLT15                         B1             SO1166
     C******     @@C       ANDLELIMIT                      B1             SO1166
     C***                  MOVE @A,@@C    @B,@@D           *1             SO1166
     C                     MOVE @I,@@C    @O,@@D           *1             SO1166
     C                     ADD  1         @@C              *1             SO1166
     C                     ADD  1         @@D              *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C** Coding to remove trailing zeros from rates                       SO1166
     C                     Z-ADD14        @@E                             SO1166
     C***        @B,@@E    DOWEQ' '                        B1             SO1166
     C           @O,@@E    DOWEQ' '                        B1             SO1166
     C                     SUB  1         @@E              *1             SO1166
     C                     END                             E1             SO1166
     C***        @B,@@E    DOWEQ'0'                        B1             SO1166
     C           @O,@@E    DOWEQ'0'                        B1             SO1166
     C           @@E       ANDGT7                          B1             SO1166
     C***                  MOVE *BLANK    @B,@@E           *1             SO1166
     C                     MOVE *BLANK    @O,@@E           *1             SO1166
     C                     SUB  1         @@E              *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C***                  MOVEA@B        @@ORAT 14                       SO1166
     C                     MOVEA@O        @@ORAT 14                       SO1166
     C           ZA0769    ENDSR                                          SO1166
     C*****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0780 - APPLY FORWARD POINTS TO A RATE.                     *
     C*                                                              *
     C*  This subroutine calculates an outright rate given rate ,    *
     C*  points & the two currencies.                                *
     C*                                                              *
     C* CALLED BY:                                                   *
     C*                                                              *
     C* CALLS:    ZA0790                                             *
     C*           ZA1150 - CONVERT RATE TO SCALED RATE.              *
     C*           ZA1160 - CONVERT SCALED RATE TO UNSCALED RATE.     *
     C*                                                              *
     C* INPUT  :  @@IRAT INPUT RATE                          (13 8)  *
     C*           @@CCY1 CURRENCY CODE                         (3A)  *
     C*           @@CCY2 CURRENCY CODE                         (3A)  *
     C*           @@FPT  FORWARD POINTS                        (7N)  *
     C*           @@NDP1 NORMALLY QUOTED DECIMAL PLACES(@@CCY1)(1N)  *
     C*           @@NDP2 NORMALLY QUOTED DECIMAL PLACES(@@CCY2)(1N)  *
     C*           @@SXP1 SCALING EXPONENT FOR CCY1             (1N)  *
     C*           @@SXP2 SCALING EXPONENT FOR CCY2             (1N)  *
     C*           @@FCMD FIRST CURRENCY MULT/DIV INDICATOR     (1A)  *
     C*                                                              *
     C*                                                              *
     C* OUTPUT :  @@NEWR NEW RATE                             (13N)  *
     C*                                                              *
     C*                                                              *
     C* ADDITIONAL WORK FIELDS USED WITHIN THIS ROUTINE :            *
     C*                                                              *
     C*           @@WF1  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@NDP  NORMAL DECIMAL PLACES                  (1 0)*
     C*           @@C    INDEX TO ARRAY                              *
     C*           @@AY   ARRAY OF POWERS OF 10                       *
     C*                                                              *
     C*     AMEND NO. S1132                    DATE 07/05/87         *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA0780    BEGSR
     C*                                                                    S1132
     C**  SCALE THE RATE PRIOR TO APPLYING THE FORWARD POINTS.             S1132
     C                     Z-ADD@@IRAT    @@INRT                           S1132
     C                     EXSR ZA1150                                     S1132
     C*                                                                    S1132
     C**  IF THE ERROR CODE FROM ZA1150 IS 1, OR 3, THEN A DATA BASE       S1132
     C**  ERROR HAS OCCURRED.                                              S1132
     C           @@ERCD    IFEQ 1                          B1              S1132
     C           @@ERCD    OREQ 3                          B1              S1132
     C                     MOVEL*BLANKS   DBFILE           *1 *************S1132
     C                     MOVEL'950'     DBASE            *1 *DBERROR 950*S1132
     C                     MOVEL'@@SCRT'  DBKEY            *1 *************S1132
     C                     MOVE '1'       *INU7            *1              S1132
     C                     MOVE '1'       *INU8            *1              S1132
     C                     GOTO ZA0789                     *1              S1132
     C                     END                             E1              S1132
     C                     Z-ADD@@SCRT    @@IRAT                           S1132
     C*
     C** IF EITHER CURRENCY IS BLANK ASSUME IT IS THE BASE CURRENCY
     C** FOR DEALING.
     C*
     C** IF EITHER CURRENCY IS THE BASE CURRENCY OBTAIN NUMBER OF
     C** NORMALLY QUOTED DECIMAL PLACES FOR THE OTHER CURRENCY.
     C***********@@CCY1****IFEQ*IDCYDL*********************B1*************S01319
     C           @@CCY1    IFEQ BNCYDL                     B1             S01319
     C           @@CCY1    OREQ *BLANKS                    B1
     C***********@@CCY2****OREQ*IDCYDL*********************B1*************S01319
     C           @@CCY2    OREQ BNCYDL                     B1             S01319
     C           @@CCY2    OREQ *BLANKS                    B1
     C*
     C***********@@CCY1****IFEQ*IDCYDL*********************B*2************S01319
     C           @@CCY1    IFEQ BNCYDL                     B*2            S01319
     C           @@CCY1    OREQ *BLANKS                    B*2
     C                     MOVE @@NDP2    @@NDP   10       **2
     C                     ELSE                            X*2
     C                     MOVE @@NDP1    @@NDP            **2
     C                     END                             E*2
     C*
     C** IF NEITHER IS BASE CURRENCY OBTAIN THE NUMBER OF QUOTED
     C** DECIMAL PLACES USING ZA0790.
     C**  NOTE: THE RATE USED IS SCALED.                                   S1132
     C                     ELSE                            X1
     C                     EXSR ZA0790                     *1
     C                     END                             E1
     C*
     C** NOW APPLY FORWARD POINTS TO EXCHANGE RATE.
     C                     Z-ADD@@NDP     @@C     20
     C                     ADD  1         @@C
     C           @@FPT     DIV  @@AY,@@C  @@WF1  158
     C           @@WF1     ADD  @@IRAT    @@NEWR 138
     C*                                                                    S1132
     C**  UNSCALE THE RATE FOR OUTPUT.                                     S1132
     C           @@FCMD    IFEQ 'M'                        B1              S1132
     C                     Z-ADD@@SXP1    @@SEXP           *1              S1132
     C                     ELSE                            X1              S1132
     C                     Z-ADD@@SXP2    @@SEXP           *1              S1132
     C                     END                             E1              S1132
     C                     Z-ADD@@NEWR    @@INRT                           S1132
     C                     EXSR ZA1160                                     S1132
     C                     Z-ADD@@USRT    @@NEWR                           S1132
     C*
     C                     GOTO ZA0789
     C*
     C** UNEXECUTED PROCESSING TO DEFINE WORKFIELDS USED BY SUBROUTINE.
     C                     MOVE @@CCY1    @@CCY1  3
     C                     MOVE @@CCY2    @@CCY2  3
     C                     MOVE @@NDP1    @@NDP1  10
     C                     MOVE @@NDP2    @@NDP2  10
     C                     MOVE @@IRAT    @@IRAT 138
     C                     MOVE @@FPT     @@FPT   72
     C           ZA0789    ENDSR
     C****************************************************************
      /EJECT
     C*****************************************************************
     F*                                                               *
     F*       TITLE:CALCULATE NO.OF DECIMALS FOR QUOTING A CROSS      *
     F*             RATE - ZA0790                                     *
     F*                                                               *
     C*     AMEND NO. 000001                  DATE   04/07/86        *
     F*                                                               *
     F*       SUBROUTINE ZA0790 EXPECTS TWO READ OPERATIONS TO        *
     F*       HAVE BEEN DONE ON LIGICAL FILE "FDCCYTLL" AND THE       *
     F*       FIELD "NQDP MOVED INTO @@NDP1 OR @@NDP2 DEPENDING       *
     F*       ON THE READ OPERATION.IT ALSO EXPECTS THE EXCHANGE      *
     F*       RATE TO BE MOVED INTO FIELD @@IRAT.THE ROUTINE WILL     *
     F*       THEN RETURN THE NUMBER OF DECIMAL PLACES FOR QUOTING    *
     F*       A CROSS RATE IN FIELD @@NDP.                            *
     F*                                                               *
     C*****************************************************************   SO1166
     C*                                                               *
     C*       FIELDS USED : @@NDP1 - NO.OF DEC.PLACES IN CURRENCY-1   *
     C*                     @@NDP2 - NO.OF DEC.PLACES IN CURRENCY-2   *
     C*                     @@IRAT - EXCHANGE RATE                    *
     C*                     @@NDP  - NO.OF DEC.PLACES IN CROSS RATE   *
     C*                                                               *
     C*       INPUT FIELDS: @@NDP1                                    *
     C*                     @@NDP2                                    *
     C*                     @@IRAT                                    *
     C*                                                               *
     C*       OUTPUT FIELD: @@NDP                                     *
     C*                                                               *
     C*   CHECKS MADE ARE :                                           *
     C*                                                               *
     C*   A) IF @@NDP1 = @@NDP2 = 5                                   *
     C*      THEN @@NDP = 5.                                          *
     C*   B) IF @@NDP1 *NE @@NDP2                                     *
     C*             OR
     C*      IF @@NDP1 = @@NDP2 AND *NE 5
     C*      THEN                                                     *
     C*      1:- IF @@IRAT *GE 100                                    *
     C*          THEN @@NDP = 2.                                      *
     C*      2:- IF 100 *GT @@IRAT *GE 20                             *
     C*          THEN @@NDP = 3.                                      *
     C*      3:- IF 20 *GT @@IRAT *GE 1                               *
     C*          THEN @@NDP = 4.                                      *
     C*      4:- IF 1 *GT @@IRAT                                      *
     C*          THEN @@NDP = 5.                                      *
     C*****************************************************************
     C*
     C           ZA0790    BEGSR
     C*
     C           @@NDP1    IFEQ @@NDP2                     B1
     C           @@NDP1    ANDEQ5                          *1
     C                     Z-ADD5         @@NDP   10       *1
     C                     GOTO ZA0799                     *1
     C                     END                             E1
     C*
     C           @@IRAT    IFGE 100                        B1
     C                     Z-ADD2         @@NDP            *1
     C                     ELSE                            X1
     C           @@IRAT    IFLT 100                         B2
     C           @@IRAT    ANDGE20                          *2
     C                     Z-ADD3         @@NDP             *2
     C                     ELSE                             X2
     C           @@IRAT    IFLT 20                           B3
     C           @@IRAT    ANDGE1                            *3
     C                     Z-ADD4         @@NDP              *3
     C                     ELSE                              X3
     C           @@IRAT    IFLT 1                             B4
     C                     Z-ADD5         @@NDP               *4
     C                     END                                E4
     C                     END                               E3
     C                     END                              E2
     C                     END                             E1
     C*
     C** DUMMY MOVE STATEMENTS FOR FIELD DEFINITION PURPOSES.
     C                     GOTO ZA0799
     C                     MOVE @@NDP1    @@NDP1  10
     C                     MOVE @@NDP2    @@NDP2  10
     C                     MOVE @@IRAT    @@IRAT 138
     C*
     C           ZA0799    ENDSR
     C*****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1150 -  Convert rate to scaled rate.                   *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SXP1 - First currency scaling exponent.       *
     C*              @@SXP2 - Second currency scaling exponent.      *
     C*              @@INRT - Rate to be scaled.                     *
     C*              @@FCMD - First Currency Multiply/Divide Ind.    *
     C*                                                              *
     C*     OUTPUT:  @@SCRT - Scaled rate.                           *
     C*              @@ISRT - Inverse of scaled rate.                *
     C*              @@ERCD - Error code.                            *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCF1 - Scaling factor for currency 1.         *
     C*              @@SCF2 - Scaling factor for currency 2.         *
     C*              @@WKA  - Work field, 15,0N.                     *
     C*              @@WKB  - Work field, 15,0N.                     *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1150    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SXP1    @@SXP1  10
     C                     Z-ADD@@SXP2    @@SXP2  10
     C                     Z-ADD@@INRT    @@INRT 128
     C                     MOVE @@FCMD    @@FCMD  1
     C*
     C                     Z-ADD*ZEROS    @@SCRT 128
     C                     Z-ADD*ZEROS    @@ISRT 128
     C                     Z-ADD*ZEROS    @@ERCD  10
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCF1 100
     C                     Z-ADD*ZEROS    @@SCF2 100
     C                     Z-ADD*ZEROS    @@WKA  150
     C                     Z-ADD*ZEROS    @@WKB  150
     C*
     C**  If the input rate is zero, the two output rates are zero,
     C**  by-pass further processing.
     C           @@INRT    CABEQ0         ZA1159
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the first currency.
     C                     Z-ADD@@SXP1    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF1
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the second currency.
     C                     Z-ADD@@SXP2    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF2
     C*
     C**  If the M/D indicator is M, then the scaled rate is calculated
     C**  as follows....
     C           @@FCMD    IFEQ 'M'                        B1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF1    @@SCRT           *1
     C           @@SCF2    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF1    @@WKA            *1
     C           @@SCF2    DIV  @@INRT    @@WKB     H      *1
     C*
     C**  Otherwise, calculate the rate as follows....
     C                     ELSE                            X1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF2    @@SCRT           *1
     C           @@SCF1    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF2    @@WKA            *1
     C           @@SCF1    DIV  @@INRT    @@WKB     H      *1
     C*
     C                     END                             E1
     C*
     C**  If the work fields are greater than 9999.99999999, set up the
     C**  error codes.
     C           @@WKA     IFGE 10000                      B1
     C                     Z-ADD1         @@ERCD           *1
     C                     END                             E1
     C           @@WKB     IFGE 10000                      B1
     C                     Z-ADD2         @@ERCD           *1
     C                     END                             E1
     C           @@WKA     IFGE 10000                      B1
     C           @@WKB     ANDGE10000                      B1
     C                     Z-ADD3         @@ERCD           *1
     C                     END                             E1
     C*
     C           ZA1159    ENDSR                           **ZA1159**
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1160 -  Convert scaled rate to unscaled rate.          *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SEXP - Scaling exponent.                      *
     C*              @@INRT - Rate to be unscaled.                   *
     C*                                                              *
     C*     OUTPUT:  @@USRT - Unscaled rate.                         *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCAF - Scaling factor.                        *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1160    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SEXP    @@SEXP  10
     C                     Z-ADD@@INRT    @@INRT 128
     C*
     C                     Z-ADD*ZEROS    @@USRT 128
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCAF 100
     C*
     C**  If the input rate is zero, the output rate is zero, by-pass
     C**  further processing.
     C           @@INRT    CABEQ0         ZA1169
     C*
     C**  Determine the scaling factor from the scaling exponent.
     C                     Z-ADD@@SEXP    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCAF
     C*
     C**  Calculate the unscaled rate.
     C           @@INRT    DIV  @@SCAF    @@USRT    H
     C*
     C           ZA1169    ENDSR                           **ZA1169**
     C*****************************************************************   SO1166
     C/EJECT
     C*****************************************************************   SO1166
     C*                                                               *   SO1166
     C* ZA0890   - EDIT FORWARD POINTS FOR SIGN, DECIMAL POINT AND    *   SO1166
     C*            ZERO SUPPRESSION                                   *   SO1166
     C*                                                               *   SO1166
     C* CALLS             -                                           *   SO1166
     C*                                                               *   SO1166
     C* CALLED BY  MAIN   - MAIN CONTROLLING SUBROUTINE               *   SO1166
     C*                                                               *   SO1166
     C* FLDS USED  @@PNTS - UNEDITED FORWARD POINTS INPUT - NOTE THIS *   SO1166
     C*                     FIELD MAY BE EITHER (5,0) OR (5,2)        *   SO1166
     C*            @@EPNT - EDITED FORWARD POINTS RETURNED FROM ZA0890*   SO1166
     C*            @@7    - CHARACTER ARRAY OF INPUT FORWARD POINTS   *   SO1166
     C*            @7     - CHARACTER ARRAY OF EDITED FORWARD POINTS  *   SO1166
     C*            @H     - INDEX TO ARRAY OF EDITED FORWARD POINTS   *   SO1166
     C*            @@TRIL - INDICATES LEADING ZERO LOCATED            *   SO1166
     C*            @@A    - INDEX TO UNEDITED ARRAY OF FORWARD POINTS *   SO1166
     C*            @@PSNV - FORWARD POINTS POSITIVE (P) / NEGATIVE (N)*   SO1166
     C*            @@INTP - CONTAINS INTEGER PORTION OF FORWARD POINTS*   SO1166
     C*            @@DECP - CONTAINS DECIMAL PORTION OF FORWARD POINTS*   SO1166
     C*   NB - INDEX @@B RENAMED FOR THIS PROGRAM ONLY TO AVOID       *   SO1166
     C*        CONFUSION WITH THE INDEX OF THE SAME NAME IN ZA0880    *   SO1166
     C*****************************************************************   SO1166
     C           ZA0890    BEGSR                                          SO1166
     C*                                                                   SO1166
     C** IF FORWARD POINTS ARE ZERO MOVE BLANKS INTO FIELD RETURNED TO    SO1166
     C** CALLING PROGRAM                                                  SO1166
     C           @@PNTS    IFEQ 0                          B1             SO1166
     C*                                                                   E18917
     C** E18917 - WHEN @@PNTS = 0 MOVE 0 TO @@EPNT INSTEAD OF *BLANK      E18917
     C*                                                                   E18917
     C*******              MOVE *BLANKS   @@EPNT           *1    S01166   E18917
     C                     MOVE '0+     ' @@EPNT           *1             E18917
     C                     MOVEA@@EPNT    @7               *1             E18917
     C                     GOTO ZA0899                     *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C*
     C** CHECK WHETHER FORWARD POINTS POSITIVE OR NEGATIVE.
     C** MAKE LAST NUMBER OF ARRAY @@7  POSITIVE ALLOWING EASIER
     C** MANIPULATION
     C                     TESTB'2'       @@BITO     80
     C*
     C           *IN80     IFEQ '1'                        B1
     C                     MOVE 'N'       @@PSNV  1        *1
     C                     BITON'2'       @@BITO           *1
     C                     ELSE                            X1
     C                     MOVE 'P'       @@PSNV           *1
     C                     END                             E1
     C*
     C*
     C** SET UP OFFSET OF POINTS TO SPOT AND CLEAR ARRAY OF OUTPUT DATA
     C                     MOVEA*BLANKS   @7,1
     C*
     C** RESET FIELDS ALTERED WHEN ZA0890 PREVIOUSLY CALLED
     C                     MOVE 'N'       @@TRIL  1
     C*
     C** REMOVE LEADING ZEROES AND AND SET UP INTEGER PORTION OF
     C** REFORMATTED FORWARD POINTS
     C           @@INTP    IFNE '00000'                    B1
     C*
     C           1         DO   5         @@A     10       B*2
     C           @@7,@@A   IFNE '0'                        B**3
     C           @@TRIL    OREQ 'Y'                        ***3
     C                     MOVE 'Y'       @@TRIL           ***3
     C           @@A       ADD  @F        @@C     20       ***3
     C           @@C       IFLT 15                         B***4
     C                     MOVE @@7,@@A   @7,@@C           ****4
     C                     END                             E***4
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** CHECK WHETHER DECIMAL POINT AND DECIMAL DETAILS REQUIRED AND
     C** IF REQUIRED SET DETAILS UP.
     C*
     C                     ELSE                            X1
     C           5         ADD  @F        @@C              *1
     C*
     C** IF INTEGER PORTION OF FORWARD POINTS IS ZERO MOVE ZERO INTO
     C** FORMATTED ARRAY BEFORE DECIMAL SEPARATOR
     C           @@DECP    IFNE '00'                       B*2
     C                     MOVE '0'       @7,@@C           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** SET UP DECIMAL SEPARATOR
     C                     ADD  1         @@C
     C           @@DECP    IFNE '00'                       B1
     C*********************MOVE*IDDCSP****@7,@@C************1*************S01319
     C                     MOVE BNDCSP    @7,@@C            1             S01319
     C                     ADD  1         @@C              *1
     C*
     C** NOW MOVE FIELDS AFTER DECIMAL SEPARATOR INTO ARRAY
     C           @@C       IFLT 15                         B*2
     C                     MOVEA@@DECP    @7,@@C
     C                     ADD  2         @@C              **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF NEGATIVE MOVE '-' SIGN INTO NEXT FIELD OF ARRAY
     C           @@C       IFGT 14                         B1
     C                     Z-ADD14        @@C              *1
     C                     END                             E1
     C*
     C           @@PSNV    IFEQ 'N'                        B1
     C                     MOVE '-'       @7,@@C           *1
     C                     ELSE                            X1
     C                     MOVE '+'       @7,@@C           *1
     C                     END                             E1
     C*
     C** SET UP FIELD CONTAINING REFORMATTED DATA FOR OUTPUT
     C                     MOVEA@7,1      @@EPNT 14
     C*
     C           ZA0899    ENDSR
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #B CARRIES OUT THE MAIN PROCESSING.                      *
     C*        CALLED BY  : MAIN PROGRAM.                            *
     C*        CALLS      : #BC #BD #BE                              *
     C*                                                              *
     C*        WORK FIELDS: @CPDAT- DATE FOR FILE KEY                *
     C*                   : @RRFSH- INPUT PARAMETER FOR ROLL REFRESH *
     C*                   : @STEND- START/END FIELD FOR DISPLAY      *
     C*                   : @@DTIN- INPUT FIELD TO ZA0720            *
     C*                   : @@SLCT- SELECTION PROCESSED INDICATOR    *
     C*                   : @STRNG- PARAMETER STRING                 *
     C*                                                              *
     C****************************************************************
     C*
     C           #B        BEGSR
     C*
     C**  IF TERMINATION CODE = T, TERMINATE PROGRAM.
     C           @T        IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #B9                        *1
     C                     END                             E1
     C*
     C*   CONTINUE PROCESSING UNTIL CMD/3 OR CMD/12 IS PRESSED
     C           *IN01     DOWNE'1'                        B1
     C           *IN02     ANDNE'1'                        *1
     C*
     C**  SET OFF THE SELECTION-PROCESSED INDICATOR
     C*
     C                     MOVE 'N'       @@SLCT  1        *1
     C*
     C*   SET UP ERROR INDICATOR
     C                     MOVE '0'       @ERROR  1
     C           *IN69     IFEQ '1'                        B*2
     C                     MOVE '1'       @ERROR           **2
     C                     END                             E*2
     C*
     C*   CLEAR THE MESSAGE QUEUE OF ANY OLD MESSAGES AND RESET
     C*   ANY ERROR INDICATORS
     C                     EXSR #ZA                        *1
     C*
     C*
     C*   IF REFRESH REQUESTED USE TOP RECORD AND PROCESS AS FOR ROLLUP
     C*
     C           *IN05     IFEQ '1'                        B*2
     C                     Z-ADD@TOPRD    @RRFSH           **2
     C*
     C                     EXSR #BD                        **2
     C*
     C*   IF NOT REFRESH,IT MUST EITHER BE 'ENTER',ROLLUP OR
     C*   ROLLDOWN. IN THIS CASE SELECTION TAKES PRIORITY.IE,IF
     C*   A SELECTION HAS BEEN MADE,ROLLUP/ROLLDOWN BEHAVE AS 'ENTER'
     C*   AND THE SELECTION IS PROCESSED OVER AND ABOVE ANY PROMPTS
     C*   THAT MIGHT HAVE BEEN ENTERED
     C*
     C                     ELSE                            X*2
     C*
     C*   IF NO SUBFILE WRITTEN YET,IE STILL ON PROMPT SCREEN
     C*   THEN CANNOT READ SUBFILE
     C           *IN27     IFNE '1'                        B**3
     C*
     C*   DO UNTIL EITHER A SELECTION IS FOUND ON THE SUBFILE OR
     C*   THE END OF THE SUBFILE IS REACHED
     C           @@SLCT    DOUEQ'Y'                        B***4
     C           *IN70     OREQ '1'                        X***4
     C*
     C*   READ THE SUBFILE FOR THE FIRST CHANGED RECORD
     C*
     C*****                READCDL3120S1                 70***4           S01117
     C                     READCTM3120S1                 70***4           S01117
     C*
     C*   IF RECORD FOUND AND SELECT FIELD NOT BLANK RETURN TO
     C*   CONTROLLING PROGRAM WITH PARAMETERS SET UP AS DATA OF
     C*   RECORD SELECTED FROM SUBFILE
     C           *IN70     IFNE '1'                        B***5
     C           SSSLCT    ANDNE' '                        X***5
     C                     MOVE 'D'       @T               ****5
     C                     MOVE @SCCY     @CPCCY           ****5
     C                     MOVE DDDAT     @CPDAT           ****5
     C                     MOVEL@PRMCP    @STRNG           ****5
     C*
     C*   SET THE SELECT FIELD FOR THE RECORD JUST PROCESSED TO
     C*   BLANK AND UPDATE THE SUBFILE.
     C*   SET ON THE SELECTION PROCESSED INDICATOR FOR WHEN THIS
     C*   PROGRAM IS RECALLED
     C*
     C                     MOVE ' '       SSSLCT           ****5
     C*****                UPDATDL3120S1                   ****5          S01117
     C                     UPDATTM3120S1                   ****5          S01117
     C                     MOVE 'Y'       @@SLCT           ****5
     C                     MOVE '1'       *INLR            ****5
     C                     RETRN                           ****5
     C*
     C*   SET OFF ROLLUP/ROLLDOWN INDICATORS SO THAT IF PROGRAM IS
     C*   RECALLED A ROLL WILL NOT BE PROCESSED
     C*
     C                     MOVE '0'       *IN25            ****5
     C                     MOVE '0'       *IN26            ****5
     C*
     C                     END                             E****5
     C                     END                             E***4
     C                     END                             E**3
     C*
     C*   IF NO SELECTION HAS BEEN FOUND IN THE SUBFILE THEN PROCESS
     C*   AN 'ENTER',ROLLUP OR ROLLDOWN.
     C*
     C*   'ENTER' PROCESSING
     C*
     C           *IN25     IFNE '1'                        B**3
     C           *IN26     ANDNE'1'                        X**3
     C           *IN05     ANDNE'1'                        ***3
     C                     EXSR #BC                        ***3
     C                     END                             E**3
     C*
     C*   IF ROLLUP HAS BEEN PRESSED
     C*
     C           *IN25     IFEQ '1'                        B**3
     C                     Z-ADD@BOTRD    @RRFSH           ***3
     C                     EXSR #BD                        ***3
     C                     END                             E**3
     C*
     C*   IF ROLLDOWN HAS BEEN PRESSED
     C*
     C           *IN26     IFEQ '1'                        B**3
     C                     Z-ADD@TOPRD    @RRFSH           ***3
     C                     EXSR #BE                        ***3
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C*   IF THE ROLL/REFRESH KEYS ARE STILL INHIBITED THEN
     C*   SET OFF THE INDICATOR AND WRITE HEADER
     C*
     C                     MOVE '0'       *IN27            *1
     C*****                WRITEDL3120F0               63  *1             S01117
     C                     WRITETM3120F0               63  *1             S01117
     C*
     C*   WRITE THE MESSAGE SUBFILE - IF THERE IS AN ERROR TO
     C*   DISPLAY OTHERWISE IT WILL REMOVE ANY PREVIOUS ERROR
     C*   MESSAGES ON THE SCREEN
     C*
     C                     MOVE '1'       *IN46            *1
     C*****                WRITEDL3120C0               63  *1             S01117
     C                     WRITETM3120C0               63  *1             S01117
     C*
     C*   WRITE THE COMMAND KEYS TEXT IF NO ERROR
     C*
     C           @@ERMS    IFEQ 'N'                        B*2
     C*****                WRITEDL3120F1               63  **2            S01117
     C                     WRITETM3120F1               63  **2            S01117
     C                     END                             E*2
     C*
     C*    IF ERROR  LEAVE PREVIOUS SUBFILE ON SCREEN
     C*    IF STILL ON PROMPT SCREEN (IE TOP RIGHT HAND CURRENCY
     C*    FIELD IS BLANK) JUST WRITE SUBFILE CONTROL
     C*
     C*****      @SCCY     IFEQ *BLANKS                    B*2            S01280
     C*****      @RRFSH    ANDEQ*ZERO                      **2            S01280
     C           *IN50     IFEQ '0'                        **2            S01280
     C                     MOVE '0'       *IN35            **2
     C                     MOVE '1'       *IN27            **2
     C                     ELSE                            X*2
     C                     MOVE '1'       *IN35            **2
     C                     END                             E*2
     C*
     C*    WRITE THE SUBFILE CONTROL
     C*
     C                     MOVE '1'       *IN36            *1
     C*****                WRITEDL3120C1               63  *1             S01117
      *                                                                   S01319
     C           @STEND    IFEQ '  END'                                   S01319
     C                     MOVE '1'       *IN30                           S01319
     C                     ELSE                                           S01319
     C                     MOVE '0'       *IN30                           S01319
     C                     END                                            S01319
     C                     WRITETM3120C1               63  *1             S01117
     C*
     C*   READ THE ENQUIRY SUBFILE CONTROL FOR ROLLS/REFRESH/PROMPTS
     C*
     C*****                READ DL3120DD               0573*1             S01117
     C                     READ TM3120DD               0573*1             S01117
     C*
     C*   PROCESS HELP WHILE IT IS REQUESTED AND RE-READ THE SCREEN
     C*
     C**         *IN10     DOWEQ'1'                         B*2           S01199
     C**                   CALL 'SDMENU'                    **2           S01199
     C**                   MOVE '0'       *IN10             **2           S01199
     C**                   READ DL3120DD               0573 **2           S01199
     C**                   END                              E*2           S01199
     C*
     C                     END                              E1
     C*
     C           #B9       ENDSR                           ****#B9****
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                              *
     C*    #BA CARRIES OUT READ FORWARDS PROCESSING.                 *
     C*        CALLED BY  : #BC   #BD                                *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS: @CD   - ARRAY OF DATES                   *
     C*                   : @STEND- START/END FOR DISPLAY            *
     C*                   : @DTIN - DATE OF RECORD ON FILE           *
     C*                                                              *
     C****************************************************************
     C*
     C           #BA       BEGSR
     C**   Generate dates for the enquiry, going forwards.
     C**    Store start Date.
     C                     Z-ADD@SDAY     @CD,1
     C                     MOVE @SDAY     @@DTIN
     C                     EXSR ZA0680
     C                     MOVE @@MDNO    @@MNO   50
     C                     Z-ADD2         @V
     C*
     C**  STORE NEXT 15 DATES
     C                     DO   15                         B1
     C                     ADD  1         @@MNO            *1
     C                     Z-ADD@@MNO     @@DAYN           *1
     C                     EXSR ZA0710                     *1
     C                     Z-ADD@@VDT     @CD,@V           *1
     C                     ADD  1         @V               *1
     C                     END                             E1
     C*
     C**  READ FORWARD BOOK FILE
     C                     EXSR #ZE
     C*
     C           #BA9      ENDSR                           ****#BA9****
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #BB CARRIES OUT READ BACKWARDS PROCESSING.                *
     C*        CALLED BY  : #BE                                      *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS: @CD   - ARRAY OF DATES                   *
     C*                   : @STEND- START/END FOR DISPLAY            *
     C*                   : @DTIN - DATE OF RECORD ON FILE           *
     C*                                                              *
     C****************************************************************
     C*
     C           #BB       BEGSR
     C**   Generate dates for the enquiry, going backwards.
     C**    Store start Date.
     C                     Z-ADD@SDAY     @CD,16
     C                     MOVE @SDAY     @@DTIN
     C                     EXSR ZA0680
     C                     MOVE @@MDNO    @@MNO
     C                     Z-ADD15        @Y
     C*
     C**  CALCULATE PREVIOUS 15 DATES
     C                     DO   15                         B1
     C                     SUB  1         @@MNO            *1
     C                     Z-ADD@@MNO     @@DAYN           *1
     C                     EXSR ZA0710                     *1
     C                     Z-ADD@@VDT     @CD,@Y           *1
     C                     SUB  1         @Y               *1
     C                     END                             E1
     C*
     C**  READ FORWARD BOOK FILE
     C                     EXSR #ZE
     C*
     C           #BB9      ENDSR                           ****#BB9****
     C*
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #BC CARRIES OUT 'ENTER' PROCESSING                        *
     C*        CALLED BY  : #B                                       *
     C*        CALLS      : #BA #BCA                                 *
     C*                                                              *
     C****************************************************************
     C*
     C           #BC       BEGSR
     C*
      * Enable CMD12 in case it was previously inhibited                  S01280
     C                     MOVE '1'       *IN28                           S01280
     C*
     C*   VALIDATE THE PROMPTS ENTERED
     C*
     C                     EXSR #BCA
     C*
     C*   IF THERE WAS AN ERROR SET THE SUBFILE END INDICATOR ON
     C           *IN69     IFEQ '1'                        B1
     C                     MOVE '1'       *IN30            *1
     C                     GOTO #BC9                       *1
     C                     END                             E1
     C*
     C*   ELSE CLEAR THE SUBFILE AND WRITE ENQUIRY SUBFILE CONTROL
     C*   FORMAT
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C*****                WRITEDL3120C1               63                 S01117
      *                                                                   S01319
     C           @STEND    IFEQ '  END'                                   S01319
     C                     MOVE '1'       *IN30                           S01319
     C                     ELSE                                           S01319
     C                     MOVE '0'       *IN30                           S01319
     C                     END                                            S01319
     C                     WRITETM3120C1               63                 S01117
     C                     MOVE '0'       *IN36
     C*
     C**  IF CURRENT YEAR IS LESS THAN 72 ADD 1 TO CURRENT CENTURY
     C                     MOVE @SRYR     @@SRYR  20
     C           @@SRYR    IFLT 72                         B1
     C                     ADD  1         @CC              *1
     C                     END                             E1
     C                     Z-ADD@@SRYR    @CCYY
     C                     MOVEL@CC       @CCYY
     C*
     C                     Z-ADD1         X       20
     C           @SRMTH    LOKUP@MT,X                    71
     C                     Z-ADDX         @MM
     C                     MOVE @SRDAY    @GDATE
     C*
     C**  See if any records exist for enquiry.
     C           @SRCCY    SETGTFXFWDTLL
     C                     READPFXFWDTLL                 71
     C*
     C**  IF NO RECORDS FOUND SET ON SUBFILE END INDICATOR AND SET
     C**  START/END INDICATOR TO 'END',ELSE SAVE LAST DATE
     C           *IN71     IFEQ '1'                        B1
     C           @SRCCY    ORNE FPCCY                      *1
     C                     MOVE '1'       *IN30            *1
      *                                                                   S01280
      * Inhibit CMD12 to avoid device error                               S01280
     C                     MOVE '0'       *IN28            *1             S01280
     C**********           MOVE 'END'     @STEND           *1             S01280
     C                     MOVE '  END'   @STEND           *1             S01280
     C                     MOVEL'RTM0009' @MSGID 10        *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C                     MOVE 'Y'       @@ERMS  1        *1
     C*                                                                   S01280
     C**  Currency and spot rates must be displayed for valid dealing     S01280
     C**  currency even if no details to display.                         S01280
     C**  Edit spot rates for display (as long as currency is not base)   S01280
     C*                                                                   S01280
     C***********@SRCCY****IFNE*IDCYDL*********************B*2******S01280S01319
     C           @SRCCY    IFNE BNCYDL                     B*2            S01319
     C                     Z-ADDA6HSRT    @@RIN            **2            S01280
     C                     Z-ADD0         @PAD    10       **2            S01280
     C           @PAD      DOWNEA6SCEX                     B**3           S01280
     C                     MULT 10        @@RIN            ***3           S01280
     C                     ADD  1         @PAD             ***3           S01280
     C                     END                             E**3           S01280
     C                     EXSR ZA0880                     **2            S01280
     C                     MOVEA@B        DDHISP           **2            S01280
     C                     Z-ADDA6LSPR    @@RIN            **2            S01280
     C                     Z-ADD0         @PAD    10       **2            S01280
     C           @PAD      DOWNEA6SCEX                     B**3           S01280
     C                     MULT 10        @@RIN            ***3           S01280
     C                     ADD  1         @PAD             ***3           S01280
     C                     END                             E**3           S01280
     C                     EXSR ZA0880                     **2            S01280
     C                     MOVEA@B        DDLOSP           **2            S01280
     C                     ELSE                            X*2            S01280
     C                     MOVE *BLANKS   DDHISP           **2            S01280
     C                     MOVE *BLANKS   DDLOSP           **2            S01280
     C                     END                             E*2            S01280
     C*                                                                   S01280
     C** Move currency from prompt field.                                 S01280
     C                     MOVE @SRCCY    @SCCY                           S01280
     C*                                                                   S01280
     C                     GOTO #BC9                       *1
     C                     ELSE                            X1
      *
      * Spot rates must be displayed unless currency is base dealing      S01319
      * currency.                                                         S01319
     C           @SRCCY    IFNE BNCYDL                     B*2            S01319
     C                     Z-ADDA6HSRT    @@RIN            **2            S01319
     C                     Z-ADD0         @PAD    10       **2            S01319
     C           @PAD      DOWNEA6SCEX                     B**3           S01319
     C                     MULT 10        @@RIN            ***3           S01319
     C                     ADD  1         @PAD             ***3           S01319
     C                     END                             E**3           S01319
     C                     EXSR ZA0880                     **2            S01319
     C                     MOVEA@B        DDHISP           **2            S01319
     C                     Z-ADDA6LSPR    @@RIN            **2            S01319
     C                     Z-ADD0         @PAD    10       **2            S01319
     C           @PAD      DOWNEA6SCEX                     B**3           S01319
     C                     MULT 10        @@RIN            ***3           S01319
     C                     ADD  1         @PAD             ***3           S01319
     C                     END                             E**3           S01319
     C                     EXSR ZA0880                     **2            S01319
     C                     MOVEA@B        DDLOSP           **2            S01319
     C                     ELSE                            X*2            S01319
     C                     MOVE *BLANKS   DDHISP           **2            S01319
     C                     MOVE *BLANKS   DDLOSP           **2            S01319
     C                     END                             E*2            S01319
      *                                                                   S01319
     C                     MOVE '1'       *IN50                           S01280
     C                     Z-ADD@DTIN     @LDAY   80       *1
     C                     MOVE *BLANKS   @STEND           *1
     C                     END                             E1
     C                     MOVE @SRCCY    @@CCY
     C*
     C*  USE DATE FROM PROMPTS AND CONVERT IT TO A
     C*  MIDAS DAY NUMBER
     C*
     C*****                Z-ADDRUND      @@DAYN                   E12937 S01194
     C                     Z-ADDBJRDNB    @@DAYN                          S01194
     C                     EXSR ZA0710
     C                     Z-ADD@@VDT     @FDAY   80
     C                     MOVE @GDATE    @@DTIN
     C                     EXSR ZA0680
     C                     Z-ADD@@MDNO    @@DAYN                          E12937
     C                     EXSR ZA0710
     C                     Z-ADD@@VDT     @SDAY   80
     C*
     C** If a Date was entered for a new enquiry, see if
     C** is past the last on file. If so perform as LAST.
     C           @SDAY     IFGT @LDAY                      B1
     C                     Z-ADD@LDAY     @SDAY            *1
     C**********           MOVE 'END'     @STEND           *1             S01280
     C                     MOVE '  END'   @STEND           *1             S01280
     C                     END                             E1
     C** If Date prior to file Start, set to Start.
     C           @SDAY     IFLT @FDAY                      B1
     C                     Z-ADD@FDAY     @SDAY            *1
     C                     MOVE 'START'   @STEND           *1
     C                     END                             E1
     C*
     C                     MOVE 'N'       @EQUAL  1        *1
     C*
     C                     EXSR #BA
     C*
     C           #BC9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  #BCA- THIS ROUTINE CONTROLS THE VALIDATION OF THE PROMPTS    *
     C*                                                               *
     C*  CALLED BY - #BC                                              *
     C*****************************************************************
     C*
     C           #BCA      BEGSR
     C*
     C** If ccy is blanks, default to base ccy for dealing                E42669
     C*                                                                   E42669
     C           @SRCCY    IFEQ *BLANKS                    B1             E42669
     C                     MOVELBNCYDL    @SRCCY           *1             E42669
     C                     END                             E1             E42669
     C*
     C***SET UP KEY TO OBTAIN FORMAT TABTG10F '20      CCY1'              S01194
     C*****                MOVEL'20'      @KEY   12                       S01194
     C*****                MOVEL@SRCCY    @ENDKY  4                       S01194
     C*****                MOVE '1'       @ENDKY                          S01194
     C*****                MOVE @ENDKY    @KEY                            S01194
     C*****                                                               S01194
     C***CHAIN TO FILE FDCCYTLL                                           S01194
     C*****      @KEY      CHAINFDCCYTLL             80                   S01194
     C*                                                                   S01194
     C** ACCESS CURRENCY FILE                                             S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '       ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM @SRCCY    @AJCD   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01194
     C**  SET UP SCALE FACTOR BY WHICH NUMERIC AMOUNTS ARE TO BE DIVIDED.
     C*   AND SET UP MULTIPY/DIVIDE INDICATOR
     C*****      *IN80     IFNE '1'                        B1             S01194
     C           @RTCD     IFEQ *BLANKS                    B1             S01194
     C*                                                                   S01280
     C**  Record found must be a valid dealing currency.                  S01280
     C           A6DLCI    IFEQ 'Y'                        B2             S01280
     C*                                                                   S01280
     C* Set up currency key                                               S01280
     C                     MOVE @AJCD     @SRCCY                          S01280
     C*****      CDP       ADD  4         @S      10       *1             S01194
     C           A6NBDP    ADD  4         @S      10       *2             S01194
     C                     Z-ADD@SF,@S    @SCALE 100       *1
     C**  E20301 - SHOULD USE MULTI/DIVIDE INDICATOR FOR DEALING,         E20301
     C**           NOT THE ONE FOR ACCOUNTING BASE CURRENCY               E20301
     C**********           Z-ADDMDIN      @MDIN   10       *1             E20301
     C*****      XRMD      IFEQ 'D'                        B*2     E20301 S01194
     C           A6MDEX    IFEQ 'D'                        B*3            S01194
     C                     Z-ADD0         @MDIN   10       **3            E20301
     C                     ELSE                            X*3            E20301
     C                     Z-ADD1         @MDIN            **3            E20301
     C                     END                             E*3            E20301
     C**  E20177 - WORKING OUT THE DIFF. BETWEEN THE NUMBER OF            E20177
     C**           DECIMAL POINTS BETWEEN THE DEALING CURRENCY            E20177
     C**           AND BASE CURRENCY.                                     E20177
     C*****      @BCDP     SUB  CDP       @P      10       *1      E20177 S01194
     C           @BCDP     SUB  A6NBDP    @P      10       *2             S01194
     C           @P        IFLT 0                          B*3            E20177
     C                     Z-SUB@P        @Q      20       **3            E20177
     C                     ELSE                            X*3            E20177
     C                     Z-ADD@P        @Q               **3            E20177
     C                     END                             E*3            E20177
     C                     ADD  1         @Q               *2             E20177
     C*                                                                   S01280
     C                     ELSE                            X*2            S01280
     C*                                                                   S01280
     C                     MOVEL'MMM0202' @MSGID           **2            S01280
     C                     CALL 'ZA0240'                   **2            S01280
     C                     PARM           @MSGID           **2            S01280
     C*                                                                   S01280
     C                     MOVE '1'       *IN69            **2            S01280
     C                     MOVE '1'       *IN60            **2            S01280
     C                     MOVE 'Y'       @@ERMS  1        **2            S01280
     C                     END                             E*2            S01280
     C*                                                                   S01280
     C*   IF ERROR HAS OCCURRED
     C                     ELSE                            X1
     C*
     C*   DISPLAY MESSAGE,SET ON ERROR ON VALIDATION INDICATOR,REVERSE
     C*   IMAGE THE FIELD AND POSITION THE CURSOR TO SHOW ERROR
     C*
     C                     MOVEL'RTM0002' @MSGID 10        *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C*
     C                     MOVE '1'       *IN69            *1
     C                     MOVE '1'       *IN60            *1
     C                     MOVE 'Y'       @@ERMS  1        *1
     C                     END                             E1
     C*                                                                   E42669
     C** If date is blank and valid ccy entered default                   E42669
     C** to the spot date for the ccy                                     E42669
     C*                                                                   E42669
     C           @SRDAT    IFEQ *BLANKS                    B1             E42669
     C           *IN60     ANDEQ'0'                        B1             E42669
     C                     MOVE A6FXSD    @KDATE           *1             E42669
     C                     MOVE @KDD      @SRDAY           *1             E42669
     C                     MOVE @KCCYY    @SRYR            *1             E42669
     C                     MOVE @MT,@KMM  @SRMTH           *1             E42669
     C                     END                             E1             E42669
     C*                                                                   E42669
     C*
     C*   VALIDATE MONTH
     C           @SRMTH    LOKUP@MT                      71
     C*
     C*   VALIDATE YEAR - IT MUST BE NUMERIC
     C                     TESTN          @SRYR      7373
     C*
     C*   VALIDATE DAY - IT MUST BE NUMERIC
     C                     TESTN          @SRDAY     7373
     C*
     C*   IF ERROR HAS OCCURRED
     C           *IN71     IFEQ '0'                        B1
     C           *IN73     OREQ '0'                        *1
     C*
     C*   DISPLAY MESSAGE,SET ON ERROR ON VALIDATION INDICATOR,REVERSE
     C*   IMAGE THE FIELD AND POSITION THE CURSOR TO SHOW ERROR
     C*
     C                     MOVEL'RTM0003' @MSGID 10        *1
     C                     CALL 'ZA0240'                   *1
     C                     PARM           @MSGID           *1
     C*
     C                     MOVE '1'       *IN69            *1
     C                     MOVE '1'       *IN61            *1
     C                     MOVE 'Y'       @@ERMS           *1
     C                     END                             E1
     C*
     C           #BCA9     ENDSR
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #BD CARRIES OUT ROLLUP PROCESSING                         *
     C*        CALLED BY  : #B                                       *
     C*        CALLS      : #BA                                      *
     C*                                                              *
     C****************************************************************
     C*
     C           #BD       BEGSR
     C*
     C*  IF BOTTOM LINE WAS BLANK OR IF THERE ARE NO RECORDS ON
     C*  FILE AFTER THE LAST RECORD,THERE ARE NO RECORDS TO ROLLUP
     C           @RRFSH    IFEQ *ZERO                      B1
     C           @ERROR    OREQ '1'                        *1
     C                     MOVE '1'       *IN30            *1
     C                     ELSE                            X1
     C                     Z-ADD@RRFSH    @SDAY            *1
     C                     Z-ADD@RRFSH    @KDATE           *1
     C*
     C**  See if any records exist for enquiry.
     C           @KEY1     SETLLFXFWDTLL                   *1
     C                     READ FXFWDTLL                 71*1
     C*
     C*  CHECK IF THIS IS LAST RECORD ON FILE
     C*
     C           *IN71     IFEQ '1'                        B*2
     C           @SDAY     ANDEQ@LDAY                      **2
     C           @EQUAL    ANDNE'Y'                        **2
     C                     MOVE '1'       *IN71            **2
     C                     MOVE 'Y'       @EQUAL           **2
     C                     END                             E*2
     C*
     C*  IF NO RECORDS FOR ROLLUP,OR PARAMETERS BLANK
     C           *IN71     IFEQ '1'                        B*2
     C           @SRCCY    ORNE FPCCY                      **2
     C           @TOPRD    OREQ @BOTRD                     **2
     C*  SET SUBFILE END INDICATOR ON AND DISPLAY MESSAGE
     C           *IN05     IFEQ '0'                        B**3
     C                     MOVEL'RTM0001' @MSGID           ***3
     C                     CALL 'ZA0240'                   ***3
     C                     PARM           @MSGID           ***3
     C                     MOVE 'Y'       @@ERMS           ***3
     C                     END                             E**3
     C                     MOVE '1'       *IN30            **2
     C                     GOTO #BD9                       **2
     C                     END                             E*2
     C                     MOVE *BLANKS   @STEND
     C*
     C*   IF NOT END OF FILE THEN CLEAR THE SUBFILE,SET OFF THE
     C*   SUBFILE END INDICATOR
     C*
     C                     MOVE '0'       *IN35            *1
     C                     MOVE '0'       *IN36            *1
     C*****                WRITEDL3120C1               63  *1             S01117
      *                                                                   S01319
     C           @STEND    IFEQ '  END'                                   S01319
     C                     MOVE '1'       *IN30                           S01319
     C                     ELSE                                           S01319
     C                     MOVE '0'       *IN30                           S01319
     C                     END                                            S01319
     C                     WRITETM3120C1               63  *1             S01117
     C                     MOVE '0'       *IN30            *1
     C*
     C                     EXSR #BA                        *1
     C*
     C                     END                             E1
     C*
     C           #BD9      ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #BE CARRIES OUT ROLLDOWN PROCESSING                       *
     C*        CALLED BY  : #B                                       *
     C*        CALLS      : #BB                                      *
     C*                                                              *
     C****************************************************************
     C*
     C           #BE       BEGSR
     C*
     C*  IF TOP LINE WAS BLANK OR IF THERE ARE NO RECORDS ON
     C*  FILE AFTER THE LAST RECORD,THERE ARE NO RECORDS TO ROLLUP
     C           @RRFSH    IFNE *ZERO                      B1
     C                     Z-ADD@RRFSH    @SDAY            *1
     C*
     C*  IF RECORD BEFORE FIRST RECORD ON FILE
     C*
     C           @SDAY     IFLE @FDAY                      B*2
     C*
     C*  SET SUBFILE END INDICATOR ON AND DISPLAY MESSAGE
     C                     MOVEL'RTM0001' @MSGID           **2
     C                     CALL 'ZA0240'                   **2
     C                     PARM           @MSGID           **2
     C                     MOVE '1'       *IN30            **2
     C                     MOVE 'Y'       @@ERMS           **2
     C                     GOTO #BE9                       **2
     C                     END                             E*2
     C*
     C*   IF NOT END OF FILE THEN CLEAR THE SUBFILE,SET OFF THE
     C*   SUBFILE END INDICATOR
     C*
     C                     MOVE '0'       *IN35            *1
     C                     MOVE '0'       *IN36            *1
     C*****                WRITEDL3120C1               63  *1             S01117
      *                                                                   S01319
     C           @STEND    IFEQ '  END'                                   S01319
     C                     MOVE '1'       *IN30                           S01319
     C                     ELSE                                           S01319
     C                     MOVE '0'       *IN30                           S01319
     C                     END                                            S01319
     C                     WRITETM3120C1               63  *1             S01117
     C                     MOVE '0'       *IN30            *1
     C*
     C                     EXSR #BB                        *1
     C*
     C           @STEND    IFNE 'START'                    B*2
     C                     MOVE *BLANKS   @STEND           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C           #BE9      ENDSR
     C*
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #ZE Retreive FXFWDTLL records.                            *
     C*        CALLED BY  : #BA #BB                                  *
     C*        CALLS      : #ZB                                      *
     C*                                                              *
     C*        WORK FIELDS: @WORK - DATA STRUCTURE OF DISPLAY FIELDS *
     C*                     @CD   - ARRAY OF DATES                   *
     C*                                                              *
     C****************************************************************
     C*
     C           #ZE       BEGSR
     C*
     C                     Z-ADD0         RRN     20
     C                     DO   16        @Y      20       B1
     C                     MOVE *BLANKS   @WORK            *1
     C                     Z-ADD@CD,@Y    @KDATE           *1
     C           @KEY1     CHAINFXFWDTLL             71    *1
      *  Store/edit fields.
     C           *IN71     IFEQ '0'                        B*2
     C                     EXSR #ZB                        **2
     C                     ELSE                            X*2
      *  If no record found, Convert date and store.
     C                     Z-ADD@CD,@Y    @@DTIN           **2
     C                     EXSR ZA0720                     **2
     C                     MOVE @@DATE    DDDAT            **2
     C*
     C                     MOVE *BLANKS   @WORK            **2
     C                     MOVE '1'       *IN15            **2
     C                     END                             E*2
      *
     C*
     C*   MAKE SURE LAST SUBFILE RECORD IS BLANK (TO AVOID THE +
     C*   OBSCURING SOME OF THE DATA)
     C*
     C           @Y        IFEQ 16                         B*2
     C                     MOVE *BLANKS   @WORK            **2
     C                     MOVE *BLANKS   DDDAT            **2
     C                     MOVE '1'       *IN15            **2
     C                     END                             E*2
      *
      *  Store Roll Top/Bottom.
     C           @Y        IFEQ 1                          B*2
     C                     MOVEL@CD,@Y    @TOPRD  80       **2
     C                     END                             E*2
     C           @Y        IFEQ 16                         B*2
     C                     MOVEL@CD,@Y    @BOTRD  80       **2
     C                     END                             E*2
     C*  IF THE START DATE IS THE LAST RECORD ON FILE,SET THE
     C*  BOTTOM RECORD TO THE START DATE
     C*
     C           @SDAY     IFEQ @LDAY                      B*2
     C                     MOVE @SDAY     @BOTRD           **2
     C                     END                             E*2
     C*
     C*  Set START/END of Currency legend.
     C           @LDAY     IFEQ @CD,@Y                     B*2
     C**********           MOVE 'END'     @STEND           **2            S01280
     C                     MOVE '  END'   @STEND           **2            S01280
     C                     END                             E*2
     C           @FDAY     IFEQ @CD,@Y                     B*2
     C********** @STEND    ANDNE'END'                      B*2            S01280
     C           @STEND    ANDNE'  END'                    B*2            S01280
     C                     MOVE 'START'   @STEND           **2
     C                     END                             E*2
     C*
     C                     MOVE *ZEROS    @DTIN            *1
     C*
     C*    SET UP CURRENCY TO DISPLAY ON SCREEN
     C                     MOVE @SRCCY    @SCCY            *1
     C*
     C                     ADD  1         RRN              *1
     C*****                WRITEDL3120S1                   *1             S01117
     C                     WRITETM3120S1                   *1             S01117
     C                     END                             E1
     C*
     C           #ZE9      ENDSR
     C*
     C****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* #ZA      - RESET ERROR INDICATORS AND CLEAR MESSAGE QUEUE     *
     C*                                                               *
     C*                                                               *
     C* CALLS    - ZA0250  -  CLEAR PROGRAM SUBFILE MESSAGE QUEUE     *
     C*                                                               *
     C* CALLED BY  #B      -  MAIN PROCESSING                         *
     C*                                                               *
     C* FLDS USED  @@ERMS  - ERROR-MESSAGE-TO-DISPLAY INDICATOR       *
     C*                                                               *
     C*****************************************************************
     C*
     C           #ZA       BEGSR
     C*
     C** RESET ALL FIELD ERROR INDICATORS.
     C*
     C                     MOVE '0'       *IN60
     C                     MOVE '0'       *IN61
     C*
     C** RESET THE GENERAL-ERROR-IN-VALIDATION INDICATOR
     C*
     C                     MOVE '0'       *IN69
     C*
     C*
     C** RESET THE ERROR-MESSAGE-TO-DISPLAY INDICATOR
     C*
     C                     MOVE 'N'       @@ERMS  1
     C*
     C** CLEAR SCREEN MESSAGE QUEUE.
     C*
     C                     CALL 'ZA0250'
     C*
     C           #ZA9      ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*
     C* ZA0720 - THIS SUBROUTINE CONVERTS DATE FORMAT YYYYMMDD TO
     C*          DDMMMYY OR TO MMMDDYY DEPENDING UPON THE VALUE OF
     C*          TABTB10 - ICDR1.
     C*
     C* CALLED BY :
     C*
     C* CALLS :
     C*
     C* INPUT  : @@DTIN DATE INPUT (YYYYMMDD)  - IN DATA STRUCTURE
     C*
     C* OUTPUT : @@DATE DATE OUTPUT 7 DIGIT FORMAT EITHER
     C*          DDMMMYY OR MMMDDYY
     C*
     C* USES :   @@MTH  MONTH NUMBER
     C*          @@MNM  MONTH SHORTNAME
     C*          @@DAY  DAY NUMBER
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @MT    RUN TIME ARRAY FOR MONTH SHORTNAMES
     C*          @@DAY5 DAY NUMBER WITH THREE LEADING BLANKS
     C*          @@MTH5 MONTH SHORTNAME WITH TWO LEADING BLANKS
     C*          @@DATE OUTPUT DATE FIELD
     C********************************************************************
     C           ZA0720    BEGSR
     C*
     C**   TABTB10F  IS EXPECTED FILE MOVE CODING 2 LEFT TO REMOVE **
     C**           KEY       CHAINTABTB10F             80
     C*
     C**   FDMNTHP0  IS EXPECTED FILE MOVE CODING 2 LEFT TO REMOVE **
     C**           SS0720    CHAINFDMNTHP0             80
     C*
     C**  CONVERT DATE FORMAT
     C*****      DATF      IFEQ 'M'                        B1             S01194
     C           BJDFIN    IFEQ 'M'                        B1             S01194
     C*
     C**  CONVERT TO MMMDDYY
     C                     MOVE @@DAY     @@DAY5  5        *1
     C                     MOVE @@YYYY    @@DATE  7        *1
     C                     MOVEL@@DAY5    @@DATE           *1
     C                     MOVEL@MT,@@MTH @@DATE           *1
     C                     ELSE                            X1
     C*
     C**  CONVERT TO DDMMMYY
     C                     MOVE @MT,@@MTH @@MTH5  5
     C                     MOVE @@YYYY    @@DATE  7        *1
     C                     MOVEL@@MTH5    @@DATE           *1
     C                     MOVEL@@DAY     @@DATE           *1
     C                     END                             E1
     C*
     C**  END OF SUBROUTINE
     C           ZA0729    ENDSR                              *** ZA0720 T
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #A CARRIES OUT INITIALISATION PROCESSING.                *
     C*        CALLED BY  : MAIN PROGRAM                             *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS: @T       - TERMINATION INPUT PARAMETER   *
     C*                   : @STRNG   - ENTRY PARAMETER (CURRENCY,    *
     C*                                DATE AND DEAL NO.)            *
     C****************************************************************
     C           #A        BEGSR
     C*
     C**  INITIALISE SCREEN MESSAGE QUEUE
     C                     MOVEL'*'       DDPGMQ
     C*
     C**  RECEIVE INPUT PARAMETERS
     C           *ENTRY    PLIST
     C                     PARM           @T      1
     C                     PARM           @STRNG
     C*
     C**  MOVE PROGRAM NAME INTO STATUS DATA STRUCTURE FIELD.
     C*****                MOVEL'DL3120'  DBPGM                           S01117
     C                     MOVEL'TM3120'  DBPGM                           S01117
     C*
     C**  IF TERMINATION PARAMETER IS 'T', SET LR. NO FURTHER
     C**  PROCESSING IN THIS ROUTINE.
     C           @T        IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #A9                        *1
     C                     END                             E1
     C*
     C**  KEY LIST FOR LF/FXFDDLLL
     C           @KEY1     KLIST
     C                     KFLD           @SRCCY
     C                     KFLD           @KCCYY  40
     C                     KFLD           @KMM    20
     C                     KFLD           @KDD    20
     C*
     C*****      *LIKE     DEFN RUND      @@DAYN                          S01194
     C           *LIKE     DEFN BJRDNB    @@DAYN                          S01194
     C           *LIKE     DEFN @SRCCY    @@CCY
     C*****      *LIKE     DEFN CDP       @AA                             S01194
     C*****      *LIKE     DEFN CDP       @@CDP                           S01194
     C           *LIKE     DEFN A6NBDP    @AA                             S01194
     C           *LIKE     DEFN A6NBDP    @@CDP                           S01194
     C*
     C*
     C**  CHECK IF THIS IS THE FIRST TIME THIS PROGRAM HAS BEEN
     C**  CALLED IN THE CURRENT INVOCATION AND PERFORM THE APPROPRIATE
     C**  PROCESSING.
     C           @FCYC     IFNE 'Y'                        B1
     C*                                                    *1
     C*
     C**  OPEN FILES
     C*****                OPEN FDICDRLL                   *1             S01194
     C*********************OPEN*FDINSTLL********************1*************S01319
     C*****                OPEN FDCCYTLL                   *1             S01194
     C                     OPEN FDMNTHLL                   *1
     C                     OPEN FXFWDTLL                   *1
     C                     OPEN FXCCYPLL                   *1
     C                     OPEN FDCCYPLL                   *1
     C*********************OPEN*FDUSSILL********************1*************S01319
     C                     OPEN MUSER                                     S01319
     C******************************************************1*************S01319
     C*********************MOVEL@USER*****@USER3**3*********1*************S01319
     C********************************************************************S01319
     C***********@USER3****CHAINFDUSSILL*************71*****1*************S01319
     C********************************************************************S01319
     C**DATABASE*ERROR*IF*USER*NOT*FOUND:*********************************S01319
     C************IN71*****IFEQ*'1'************************B*2************S01319
     C*********************MOVE*'901'*****DBASE**************2************S01319
     C*********************MOVE*'FDUSSILL'DBFILE*************2************S01319
     C*********************MOVEL@USER3****DBKEY**************2*ERROR******S01319
     C*********************MOVE*'1'********INU7**************2**901*******S01319
     C*********************MOVE*'1'********INU8**************2************S01319
     C*********************GOTO*#A9**************************2************S01319
     C*********************END*****************************E*2************S01319
     C********************************************************************S01319
     C*
     C           @USER     CHAINMUSER                71                   S01319
     C*                                                                   S01319
     C           *IN71     IFEQ '1'                        B*2            S01319
     C*                                                                   S01319
     C                     MOVEL'MUSER'   DBFILE           ***************S01319
     C                     MOVE '901'     DBASE            *             *S01319
     C                     MOVEL@USER     DBKEY            * DBERROR 901 *S01319
     C                     MOVE '1'       *INU7                           S01319
     C                     MOVE '1'       *INU8            ************** S01319
     C                     GOTO #A9                                       S01319
     C*                                                                   S01319
     C                     END                             E*2            S01319
     C* DO DISPLAY FILE OVERRIDE BEFORE OPEN
     C***********USREF*****IFEQ*'Y'                        B*2            S01319
     C           AURF      IFEQ 'Y'                        B*2            S01319
     C                     MOVEL@OVR,1    @OVRID           **2
     C*********************Z-ADDUSRFPD****@WAIT**************2************S01319
     C                     Z-ADDREFP      @WAIT            **2            S01319
     C                     Z-ADD36        QCALEN 155       **2
     C*********************CALL 'QCAEXEC'                  **2            E20774
     C                     CALL 'QCMDEXC'                  **2            E20774
     C                     PARM           @OVRID           **2
     C                     PARM           QCALEN           **2
     C                     END                             E*2
     C*
     C*****                OPEN DL3120DD                                  S01117
     C                     OPEN TM3120DD                                  S01117
     C*
     C********************************************************************S01319
     C****Get*Installation*control*record*for*decimal*separator.**********S01319
     C***********1*********CHAINFDINSTLL*************71*******************S01319
     C*********************MOVE*IDDCSP****@DSEP***1***********************S01319
     C********************************************************************S01319
     C****DEAL*WITH*DATA*BASE*ERROR***************************************S01319
     C************IN71*****IFEQ*'1'************************B*2************S01319
     C***********MNDLTF****OREQ*'*'**************************2************S01319
     C*********************MOVE*'FDINSTLL'DBFILE*************2************S01319
     C*********************MOVE*'004'*****DBASE**************2*DB*ERR*004*S01319
     C*****                EXSR #ZD                        **2*********** S01194
     C*********************EXSR**PSSR*******************************S01194S01319
     C*********************GOTO*#A9**************************2************S01319
     C*********************END*****************************E*2************S01319
     C*                                                                   S01319
     C** Access Deal details via access program                           S01319
      *  (database error handling done in access program)                 S01319
     C**********           CALL 'AODEALR0'                                             S01319 CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*DBERR ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                                        S01319 CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C                     MOVE BNDCSP    @DSEP   1                       S01319
     C*
     C*  CHAIN TO CURRENCY FILE FOR BASE CURRENCY DECIMAL PLACES
     C*
     C***SET UP KEY TO OBTAIN FORMAT TABTG10F '20      CCY1'              S01194
     C*****                MOVEL'20'      @KEY   12                       S01194
     C*****                MOVELIDCYDL    @ENDKY  4                       S01194
     C*****                MOVE '1'       @ENDKY                          S01194
     C*****                MOVE @ENDKY    @KEY                            S01194
     C*****                                                               S01194
     C*****      @KEY      CHAINFDCCYTLL             71                   S01194
     C*                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C*********************PARM*IDCYDL****@AJCD***3*****************S01194S01319
     C                     PARM BNCYDL    @AJCD   3                       S01319
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01194
     C**  DEAL WITH DATA BASE ERROR
     C*****      *IN71     IFEQ '1'                        B*2            S01194
     C           @RTCD     IFNE *BLANKS                    B*2            S01194
     C*********************MOVELIDCYDL****DBKEY*********************S01194S01319
     C                     MOVELBNCYDL    DBKEY                           S01319
     C*********************MOVE 'FDCCYTLL'DBFILE           **2*********** S01319
     C                     MOVE 'SDCURRPD'DBFILE           **2*********** S01319
     C                     MOVE '005'     DBASE            **2 DB ERR 005
     C*****                EXSR #ZD                        **2*********** S01194
     C                     EXSR *PSSR                                     S01194
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C*
     C*****                Z-ADDCDP       @BCDP   30                      S01194
     C                     Z-ADDA6NBDP    @BCDP   30                      S01194
     C*
     C**  ACCESS MONTH SHORTNAMES FILE
     C           1         CHAINFDMNTHLL             71
     C*
     C**  DEAL WITH DATA BASE ERROR
     C           *IN71     IFEQ '1'                        B*2
     C           MNDLTF    OREQ '*'                        **2
     C                     MOVE 'FDMNTHLL'DBFILE           **2*********
     C                     MOVE '001'     DBASE            * DB ERR 001
     C*****                EXSR #ZD                        **2*********** S01194
     C                     EXSR *PSSR                                     S01194
     C                     GOTO #A9                        **2
     C                     END                             E*2
     C*
     C***CALL S/R TO ACCESS ICD FILE                                      S01194
     C*****                EXSR ZA0150                     *1             S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
     C           @RTCD     IFNE *BLANK                                    S01194
     C                     MOVEL'SDBANKPD'DBFILE           ************   S01194
     C                     MOVEL'003'     DBASE            * DBERR 03 *   S01194
     C                     MOVEL@OPTN     DBKEY            ************   S01194
     C                     SETON                     U7U8LR               S01194
     C                     EXSR *PSSR                                     S01194
     C                     END                                            S01194
     C*                                                                   S01194
     C****CHECK FOR DATABASE ERROR                                        S01194
     C*****      *IN80     IFEQ '1'                        B*2            S01194
     C*****                EXSR #ZD                        **2            S01194
     C*****                GOTO #A9                        **2            S01194
     C*****                END                             E*2            S01194
     C*
     C**  SET FLAG THAT FIRST INVOCATION PROCESSING HAS    *1
     C**  BEEN SUCCESSFULLY COMPLETED                      *1
     C                     MOVE 'Y'       @FCYC   1        *1
     C                     END                             E1
     C*
     C**  FIND CURRENT CENTURY
     C*****                Z-ADDRUND      @@DAYN                          S01194
     C                     Z-ADDBJRDNB    @@DAYN                          S01194
     C                     EXSR ZA0710
     C                     MOVEL@@SSY1    @CC     20
     C                     MOVE @@SSY2    @CC
     C*
     C                     MOVEA*BLANK    @BL
      *  Initialize Data Structure.
     C                     Z-ADD*ZEROS    @GDATE
     C                     Z-ADD*ZEROS    @DD
     C                     Z-ADD*ZEROS    @YY
     C*
     C*   SET OFF ALL INDICATORS
     C                     MOVE '0'       *IN,01
     C*
     C*   INHIBIT ROLL KEYS AND SET ON END OF MESSAGE AND ENQUIRY
     C*   SUBFILE INDICATORS
     C                     MOVE '1'       *IN27
     C                     MOVE '1'       *IN40
     C                     MOVE '1'       *IN30
     C*
     C*   RETRIEVE WORKSTATION ID AND WRITE OUT THE SCREEN HEADER
     C*   AND COMMAND KEY TEXT
     C                     MOVEL@JOB      @WSID
     C*****                WRITEDL3120F0               63                 S01117
     C                     WRITETM3120F0               63                 S01117
     C                     WRITETM3120F1               63                 S01319
     C*
     C*   CLEAR THE SUBFILE BY SETTING OFF THE SUBFILE DISPLAY
     C*   AND SUBFILE CONTROL INDICATORS, THEN WRITE ENQUIRY
     C*   SUBFILE CONTROL FORMAT
     C*
     C                     MOVE '0'       *IN35
     C                     MOVE '0'       *IN36
     C*****                WRITEDL3120C1               63                 S01117
      *                                                                   S01319
     C           @STEND    IFEQ '  END'                                   S01319
     C                     MOVE '1'       *IN30                           S01319
     C                     ELSE                                           S01319
     C                     MOVE '0'       *IN30                           S01319
     C                     END                                            S01319
     C                     WRITETM3120C1               63                 S01117
     C*
     C*  SET UP PROMPTS
     C                     MOVE @STCCY    @SRCCY
     C                     MOVE @STDAY    @SRDAY
     C                     MOVE @STMTH    @SRMTH
     C                     MOVE @STYR     @SRYR
     C                     MOVE @SRCCY    @SCCY
     C*
     C*  IF PARAMETERS BLANK,WRITE THE PROMPT SCREEN BY SETTING
     C*  ON THE SUBFILE DISPLAY CONTROL INDICATOR,OTHERWISE SET ON
     C*  THE 'PARAMETERS PASSED' FIELD.
     C           @STRNG    IFEQ *BLANKS                    B1
     C                     MOVE '1'       *IN36            *1
     C*****                EXFMTDL3120C1               63  *1             S01117
     C                     EXFMTTM3120C1               63  *1             S01117
     C                     ELSE                            X1
     C                     MOVE @STDNO    @CPDNO           *1
     C                     MOVE *BLANKS   @STRNG           *1
     C                     END                             E1
     C*
     C** PROCESS HELP WHILE IT IS REQUESTED AND RE-READ THE SCREEN
     C*
     C**         *IN10     DOWEQ'1'                        B1             S01199
     C**                   CALL 'SDMENU'                   *1             S01199
     C**                   MOVE '0'       *IN10            *1             S01199
     C**                   READ DL3120C1               0573*1             S01199
     C**                   END                             E1             S01199
     C*
     C           #A9       ENDSR                           ***#A9***
     C****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     #C CARRIES OUT THE TERMINATION PROCESSING.               *
     C*        CALLED BY  : MAIN PROGRAM                             *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS:                                          *
     C*                                                              *
     C****************************************************************
     C           #C        BEGSR
     C*
     C           *INU7     IFEQ '1'                        B1
     C                     MOVE 'E'       @T               *1
     C                     MOVE '1'       *INLR            *1
     C                     END                             E1
     C*
     C           @T        IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     END                             E1
     C*
     C           *IN01     IFEQ '1'                        B1
     C                     MOVE 'Q'       @T               *1
     C                     MOVE '1'       *INLR            *1
     C                     END                             E1
     C*
     C*  IF CMD/12 PRESSED,SET UP PARAMETERS TO CALL NEXT ENQUIRY
     C*
     C           *IN02     IFEQ '1'                        B1
     C                     MOVE @SCCY     @CPCCY           *1
     C                     MOVEL@TOPRD    @@DTIN
     C                     EXSR ZA0720
     C                     MOVE @@DATE    @CPDAT
     C                     MOVEL@PRMCP    @STRNG           *1
     C                     MOVE 'U'       @T               *1
     C                     MOVE '1'       *INLR            *1
     C                     END                             E1
     C*
     C                     RETRN
     C*
     C           #C9       ENDSR                           ***#C9***
     C/EJECT
     C*****************************************************************   S01194
     C*****                                                           *   S01194
     C***SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF        *   S01194
     C***FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD 1    *   S01194
     C***(HELD ON PF/TABTB10)                                         *   S01194
     C***INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD IS   *   S01194
     C***FLAGGED FOR DELETION.                                        *   S01194
     C***IF INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED ACCESS    *   S01194
     C***ARE PLACED IN THE LDA.                                       *   S01194
     C*****                                                           *   S01194
     C***FIELDS USED : SS0150 - KEY USED TO ACCESS FDICDRLL           *   S01194
     C*****                                                           *   S01194
     C*****************************************************************   S01194
     C*****                                                           *   S01194
     C*****      ZA0150    BEGSR                                      *   S01194
     C*****                                                           *   S01194
     C***Set up key to obtain format TABTB10F '01        10'          *   S01194
     C*****                MOVEL'01'      SS0150 12                   *   S01194
     C*****                MOVE '10'      SS0150                      *   S01194
     C*****                                                           *   S01194
     C***CHAIN TO FILE FDICDRLL                                       *   S01194
     C*****      SS0150    CHAINFDICDRLL             80               *   S01194
     C*****      RECI      IFNE 'D'                        B1         *   S01194
     C*****                MOVE '1'       *IN80            *1         *   S01194
     C*****                END                             E1         *   S01194
     C*****                                                           *   S01194
     C***DEAL WITH DATA BASE ERROR                                    *   S01194
     C*****      *IN80     IFEQ '1'                        ***************S01194
     C*****                MOVEL'FDICDRLL'DBFILE           *          *  *S01194
     C*****                MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C*****                MOVELSS0150    DBKEY            *          *  *S01194
     C*****                END                             ***************S01194
     C*****                                                           *   S01194
     C*****      ZA0159    ENDSR                                      *   S01194
     C/EJECT
     C*****************************************************************
      *                                                               *
      *       TITLE:CALCULATE MIDAS DAY NO. TO DRS (YYYYMMDD) FORMAT. *
      *                                                               *
      *       SUBROUTINE ZA0710 EXPECTS FIELD '@@DAYN' TO BE          *
      *       PASSED TO IT IN 5,0 FORMAT.IF THE ABOVE FIELD IS LESS   *
      *       THAN 1 IT RETURNS 1 IN FIELD '@@RTN'.THE MAIN PROGRAM   *
      *       SHOULD CHECK FOR THIS CONDITION AND DO THE NECESSARY.   *
      *       IF '@@RTN' IS NOT EQUAL TO 1 IT RETURNS THE FIELD       *
      *       '@@VDT'  IN 'YYYYMMDD' FORMAT.                          *
      *                                                               *
      * NOTE: FIELD TO BE DEFINED BY EXTERNAL ROUTINE IS
      *                                                               *
      *       1) @@DAYN   LENGTH 5,0.                                 *
      *                                                               *
      *       FIELDS USED AND ALREADY DEFINED IN THE ROUTINE ARE:     *
      *                                                               *
      *       1) @@VDT    LENGTH 8,0 DEFINED BY A DS.                 *
      *       2) @@RTN    LENGTH 1,0.                                 *
      *       3) @@I      LENGTH 2,0 USED TO ACCESS ARRAY @YD         *
      *       4) @@J      LENGTH 2,0 USED TO ACCESS ARRAY @MD         *
      *       5) @@Z71Y   LENGTH 4,0 DEFINED BY A DS.                 *
      *       6) @@RDAY   LENGTH 5,0.                                 *
      *       7) @@LEAP   LENGTH 1,0.
      *                                                               *
      *       INDICATORS USED ARE:                                    *
      *                                                               *
      *       1) 80       CHECK FOR LOW AND EQUAL ON ARRAY @YD        *
      *       2) 81       CHECK FOR LOW ON ARRAY @MD.                 *
      *                                                               *
      * INPUT FIELD:       @@DAYN                                     *
      *                                                               *
      * OUTPUT FIELD:      @@VDT                                      *
      *                                                               *
      * WORK FIELDS:       @@RTN                                      *
      *                    @@Z71Y                                     *
      *                    @@RDAY                                     *
      *                    @@LEAP                                     *
      *                    @@I                                        *
      *                    @@J                                        *
      *                                                               *
      * ARRAYS USED:       @YD COMPILE TIME ARRAY.
      *                    @MD COMPILE TIME ARRAY.
      *
      *****************************************************************
     C*
     C           ZA0710    BEGSR
     C*
     C                     SETOF                     8081
     C                     Z-ADD0         @@RTN   10
     C                     Z-ADD0         @@VDT
     C                     Z-ADD1         @@I     20
     C                     Z-ADD1         @@J     20
     C                     Z-ADD1         @@LEAP  10
     C*
     C           @@DAYN    IFLT 1
     C                     Z-ADD1         @@RTN
     C                     GOTO ZA0719
     C                     END
     C*
     C* DIVISION TO DETERMINE WETHER LEAP YEAR.
     C*
     C           @@DAYN    DIV  1461      @@Z71Y
     C                     MVR            @@RDAY  50
     C*
     C* CALCULATING YEAR.
     C*
     C           @@Z71Y    MULT 4         @@Z71Y
     C                     ADD  1972      @@Z71Y
     C*
     C* CHECKING IF YEAR IS GREATER THAN OR EQUAL TO 2100
     C*
     C           @@Z71Y    IFGE 2100
     C                     ADD  @@SSY2    @@RDAY
     C                     END
     C*
     C* LOKUP ARRAY @YD TO SEE HOW MANY YEARS OF A FOUR YEAR CYCLE
     C* HAVE PASSED.
     C*
     C           @@RDAY    LOKUP@YD,@@I                8080
     C*
     C* IF YEAR IS A LEAP YEAR SSLEAP IS SET TO ZERO.
     C*
     C           *IN80     IFEQ '0'
     C                     Z-ADD0         @@LEAP
     C                     END
     C*
     C* ADD INDEX TO YEAR TO GIVE CORRECT YEAR AND ADJUST '@@RDAY'.
     C*
     C           @@LEAP    IFEQ 1
     C           @@RDAY    SUB  @YD,@@I   @@RDAY
     C                     ADD  @@I       @@Z71Y
     C                     END
     C*
     C* PROCESSING FOR A LEAP YEAR.
     C*
     C           @@LEAP    IFEQ 0
     C*
     C* IF '@@RDAY' = 60 DATE MUST BE 29TH OF FEBRUARY.
     C*
     C           @@RDAY    IFEQ 60
     C                     Z-ADD29        @@Z71D
     C                     Z-ADD2         @@Z71M
     C                     GOTO ZA0711
     C                     END
     C*
     C* IF '@@RDAY' > 60 DATE IS AFTER 29TH OF FEBRUARY,CONVERSION CAN
     C* PROCEED AS USUAL AFTER SUBTRACTING THE EXTRA DAY FOR THE LEAP
     C* YEAR. NOTE : '@@RDAY' < 60 CONVERSION PROCEEDS AS USUAL.
     C*
     C           @@RDAY    IFGT 60
     C           @@RDAY    SUB  1         @@RDAY
     C                     END
     C*
     C                     END
     C*
     C* IF DAY '@@DAYN' IS EXACTLY DIVISIBLE BY 1461 (NUMBER OF DAYS
     C* IN 4 YEARS) THEN DATE MUST BE LAST DAY OF PREVIOUS FOUR YEAR
     C* GROUP.
     C*
     C           @@RDAY    IFEQ 0
     C                     Z-ADD31        @@Z71D
     C                     Z-ADD12        @@Z71M
     C                     SUB  1         @@Z71Y
     C                     GOTO ZA0711
     C                     END
     C*
     C* LOOK UP ARRAY ARRAY @MD TO DETERMINE WHICH MONTH '@@RDAY'
     C* OCCURS IN
     C*
     C           @@RDAY    LOKUP@MD,@@J                81
     C                     Z-ADD@@J       @@Z71M
     C           @@RDAY    SUB  @MD,@@J   @@Z71D
     C*
     C* DS @@VDT  IS RETURNED IN YYYYMMDD FORMAT
     C*
     C           ZA0711    TAG
     C*
     C                     MOVE @@Z71Y    @@YR
     C*
     C           ZA0719    ENDSR
     C*
     C*****************************************************************   SO1166
     C/EJECT
     C*****************************************************************
     C*
     C* ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO
     C*          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)
     C*
     C* CALLED BY :
     C*
     C* CALLS :
     C*
     C* INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
     C*
     C* OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)
     C*
     C* USES :   @@CC   NUMBER OF CENTURIES IN DATE
     C*          @@DAY  DAY NUMBER
     C*          @@REM  REMAINDER FROM DIVIDE
     C*          @@MTH  MONTH NUMBER
     C*          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 MONTH
     C*          @@WK2  WORK FIELD (2,0)
     C*          @@WK5  WORK FIELD (5,0)
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @@YY   YEAR (2 CHARACTER)
     C*          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 A FOUR YEAR PERIOD
     C*
     C*******************************************************************
     C*
     C           ZA0680    BEGSR
     C*
     C**  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
     C*
     C**   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
     C*
     C**  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C           @@YYYY    ADD  28        @@WK2
     C*
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
     C*
     C**  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          B1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C**  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
     C*
     C**  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
     C*
     C**  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
     C*
     C           ZA0689    ENDSR                           **ZA0689 TAG**
     C*****************************************************************
     C*****************************************************
     C*                                                   *
     C*   EXCEPTION ERROR SUBROUTINE                      *
     C*                                                   *
     C*   SUBROUTINE CALLED: EXECUTES WHENEVER            *
     C*   A DATABASE FILE ERROR OCCURS                    *
     C*                                                   *
     C*   SUBROUTINE CALLS : NO OTHER SUBROUTINES         *
     C*                                                   *
     C*****************************************************
     C*****      #ZD       BEGSR                                          S01194
     C           *PSSR     BEGSR                                          S01194
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE 'E'       @T
     C*****                MOVEL'DL3120'  DBPGM                           S01117
     C                     MOVEL'TM3120'  DBPGM                           S01117
     C*
     C                     DUMP
     C*
     C**  TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C*****                ENDSR                           ****#ZD*****   S01194
     C                     ENDSR                           ****PSSR****   S01194
     C/EJECT
     C*                                                                   S01194
     C*****************************************************               S01194
     C*****                                               *               S01194
     C****EXCEPTION ERROR SUBROUTINE                      *               S01194
     C*****                                               *               S01194
     C****SUBROUTINE CALLED: EXECUTES WHENEVER            *               S01194
     C****A PROGRAM ERROR OCCURS                          *               S01194
     C*****                                               *               S01194
     C****SUBROUTINE CALLS : NO OTHER SUBROUTINES         *               S01194
     C****                                                *               S01194
     C*****************************************************               S01194
     C*****      *PSSR     BEGSR                                          S01194
     C*****                                                               S01194
     C****SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS           S01194
     C*****      @ERR1     IFNE 'Y'                        B1             S01194
     C*****                MOVE 'Y'       @ERR1   1        *1             S01194
     C*****                MOVE '1'       *INU6            *1             S01194
     C*****                MOVE 'E'       @T               *1             S01194
     C*****                                                               S01194
     C****SET UP FIELDS IN LOCAL DATA AREA                                S01194
     C*****                MOVEL'DL3120'  DBPGM            *1             S01194
     C*****                MOVE '991'     DBASE            *1             S01194
     C*****                                                               S01194
     C*****                DUMP                            *1             S01194
     C*****                END                             E1             S01194
     C*****                                                               S01194
     C****TERMINATE THE PROGRAM                                           S01194
     C*****                MOVE '1'       *INLR                           S01194
     C*****                RETRN                                          S01194
     C*****                                                               S01194
     C*****                ENDSR                           ****PSSR****   S01194
     C/EJECT
     C*****************************************************
     C*                                                   *
     C*   EXCEPTION ERROR SUBROUTINE                      *
     C*                                                   *
     C*   SUBROUTINE CALLED: EXECUTES WHENEVER            *
     C*   A FILE ERROR OCCURS                             *
     C*                                                   *
     C*   SUBROUTINE CALLS : NO OTHER SUBROUTINES         *
     C*                                                   *
     C*****************************************************
     C           INFSR     BEGSR
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     MOVE 'E'       @T
     C*
     C**  SET UP FIELDS IN LOCAL DATA AREA
     C*****                MOVEL'DL3120'  DBPGM                           S01117
     C                     MOVEL'TM3120'  DBPGM                           S01117
     C                     MOVE '992'     DBASE
     C                     MOVE @FILE     DBFILE
     C*
     C                     DUMP
     C*
     C**  TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR                           ***INFSR***
     C/EJECT
**  CPY@  **      OBJECT COPYRIGHT
(c) Finastra International Limited 2001
** @YD  USED BY SR. ZA0710 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZA0710 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
**   @@C    - Array of powers of 10.
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
** Scaling factors array - @SF
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
** @OVR  CL COMMAND FOR CALL TO QCMDEXC                                   E20774
OVRDSPF FILE(TM3120DD) WAITRCD(    )
