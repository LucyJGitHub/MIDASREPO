     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas FX Fwd Book Near Dates (was DL3140)')
     F*****************************************************************
     F*                                                               *
     F*  Midas - Treasury Management Module
     F*                                                               *
     F*  TM3140 - FX FORWARD BOOK - NEAR DATES SUMMARY                *
     F*           (FORMERLY DL3140)                                   *
     F*                                                               *
     F*  Function: This enquiry supports the management of short      *
     F*  (I/C)     date dealing activity.                             *
     F*                                                               *
     F*  Called by: TMC0311 - TM Enquiry control                      *
     F*        via: DL3100  - Treasury management controller          *
     F*                                                               *
     F*  Calls    : ZA0250  - Clear program message queue.            *
     F*           : ZA0240  - Display program message queue.          *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
     F*      1988,1990                                                *
     F*                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *  Last Amend No. CRE026             Date 09Jun06               *
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CSD031             Date 10Apr06               *
      *                 CSE071             Date 19Jul05               *
      *                 TDA035             Date 02Apr04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 E37006             Date 05Feb93               *
      *                 E35996             Date 04Sep92               *
     F*                 S01319             DATE 13AUG91               *
     F*                 S01280             DATE 11FEB91               *
     F*                 S01195             DATE 12NOV90               *
     F*                 S01194             DATE 12NOV90               *
     F*                 S01117             DATE 12NOV90               *
     F*                 E20774             DATE 15MAR90               *
     F*                 S01199             DATE 28FEB90               *
     F*                 S01166             DATE 14APR88               *
     F*                 E12560             DATE 12APR88               *
     F*                 S01136             DATE 09DEC87               *
     F*                                                               *
     F*---------------------------------------------------------------*
     F*                                                               *
      *  CRE026 - Consumer Banking                                    *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSE071 - Multiple Holidays Re Securities (recompile)         *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*  E37006 - When enquiring on a currency with open position 0   *
     F*           program does not blank out open net, average rate   *
     F*           and dealt BCE fields, leaves amounts from previous  *
     F*           currency in fields                                  *
     F*   E35996 - (Astec No. 046-010)                                *
     F*            The MKT field values does not show the             *
     F*            rates that have been specifically entered          *
     F*            for today, tomorrow, spot, and spot/next.          *
     F*            The fix done was to access the rates in            *
     F*            LF/FDCCYPLL and output these.                      *
     F*     S01319 - Remove redundant processing                      *
     F*     S01280 - General Treasury Management fixes during project:*
     F*            - ADD VALIDATION FOR DEALING CURRENCY              *
     F*            - TIME NOT BEING UPDATED WHEN SCREEN REFRESHED     *
     F*              (N.B. CHANGE TO DISPLAY FILE ONLY)               *
     F*            - FIELD RECI DOES NOT EXIST ON FDCCYPLL SO CHECK   *
     F*              LOGICAL DELETE FLAG INSTEAD                      *
     F*                                                               *
     F*     S01195 - NEW HOLIDAY PROCESSING                           *   S01195
     F*                                                               *
     F*     S01194 - NEW STANDING DATA PROCESSING                     *   S01194
     F*                                                               *
     F*     S01117 - NEW COPYRIGHT STATEMENT                          *   S01117
     F*              DEALING PROGRAMS USED ONLY IN TREASURY MGMT.     *   S01117
     F*              MODULE NOW PREFIXED WITH 'TM'                    *   S01117
     F*                                                               *
     F*     E20774 - REPLACE QCAEXEC WITH QCMDEXC                     *   E20774
     F*                                                               *
     F*     S01199 - HELP SYSTEM.                                 *       S01199
     F*     S01166 - DISPLAY OUTPUT ON AS400 SCREEN INSTEAD OF        *   S01166
     F*                 PC THROUGH VIA DATA AREA                      *   S01166
     F*                                                               *   S01166
     F*     E12560 - REM FIGURE IS IS SIGNED BEFORE DIVIDING BY 1000  *   S01166
     F*                                                               *   S01166
     F*     S01136 - WHEN ACCESSING 1W RECORD FROM EXCHANGE RATES     *   S01166
     F*              FILE, PGM CALCULATES RUND +7. IT SHOULD USE RUND *   S01166
     F*              + 7 WORKING DAYS                                 *   S01166
     F*                                                               *
     F/EJECT
     F*****************************************************************
     F*                                                               *
     F* ID F  C  H  L    FUNCTION OF INDICATORS                       *
     F*                                                               *
     F*       61         Chain and DB error indicator                 *
     F*       62         Check whether ofward points exist for ccy    *
     F*       63         Low points are output in MKT field           *   E35996
     F*       64         SETLL to LF/FDCCYPLL                         *   E35996
     F*       U6         Program error - *PSSR executed               *
     F*       U7         Database error                               *
     F*       U8         Database error                               *
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F*FDINSTLLIF**E*******************DISK*********KINFSR*INFSR******UC**S01319
     F***FDTABJLLIF**E***        K        DISK         KINFSR INFSR   UC  S01194
     F***FDICDRLLIF**E***        K        DISK         KINFSR INFSR   UC  S01194
     F**********  TABTB11F                          KIGNORE               S01194
     F**********  TABTB20F                          KIGNORE               S01194
     F***CA38CPLLIF  E                 DISK         KINFSR INFSR      UC  S01166
     FFDMNTHLLIF  E                    DISK         KINFSR INFSR      UC
     F***FDCCYTLLIF**E***        K        DISK         KINFSR INFSR   UC  S01194
     F***FXCCYPLLIF**E***********K       DISK       KINFSR INFSR      UC  S01136
     FFDCCYPLLIF  E           K        DISK         KINFSR INFSR      UC  S01136
     F************FDCCYPP0                          KRENAMEFXCCYPP0
     FFXEPOSLLIF  E           K        DISK         KINFSR INFSR      UC
     FFXFWDTLLIF  E           K        DISK         KINFSR INFSR      UC
     F***DL3140DDCF**E***                 WORKSTN              UC  S01166 S01117
     FTM3140DDCF  E                    WORKSTN                        UC  S01117
     F                                              KNUM        1         S01166
     F*FDUSSILLIF**E**********K********DISK*********KINFSR*INFSRUC**S01166S01319
     FMUSER   IF  E           K        DISK         KINFSR INFSR      UC  S01319
     F*                                                                   S01166
     E*
     E****USED*BY*SR**ZA0830***CURRENCY*RECORDS***                        S01195
     E**********          @CY        50  3                                S01195
     E                    @@AA       13  1  A                             S01166
     E*
     E**  ARRAY TO HOLD INPUT RATE
     E                    @G          8  1                                S01166
     E*
     E**  ARRAY TO HOLD OUTPUT RATE
     E*                                                                   S01166
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0A
     E*
     E**  ARRAY FOR SR. ZA0680 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0A
     E*
     E**  ARRAY FOR DATA AREA NARRATIVE                                IOD
     E***                 @NAR    1   2 50                                S01166
     E*
     E**  ARRAY FOR DECIMAL POINTS CORRECTION                          IOD
     E                    @DP     4   4  4 0
     E*                                                                   S01166
     E                    @OVR    1   1 36                                S01166
     E****Array*to*set*up*parameter*for*call*to*QCAEXEC             S01166E20774
     E**  Array to set up parameter for call to QCMDEXC                   E20774
     E*                                                                   S01166
     E** CHARACTER ARRAY CONTAINING FORWARD POINTS INPUT                  S01166
     E                    @@7I        7  1                                S01166
     E*                                                                   S01166
     E** ARRAY HOLDING FORMATTED FORWARD POINTS                           S01166
     E                    @7         14  1                                S01166
     E*                                                                   S01166
     E**  ARRAY FOR RATE INPUT                                            S01166
     E                    @A         13  1                                S01166
     E*                                                                   S01166
     E**  ARRAY FOR RATE OUTPUT                                           S01166
     E                    @B         14  1                                S01166
     E*                                                                   S01166
     E**  ARRAY FOR AMOUNT INPUT                                          S01166
     E                    @Q         15  1                                S01166
     E*                                                                   S01166
     E**  ARRAY FOR DISPLAY AMOUNT                                        S01166
     E                    @E         21  1                                S01166
     E*                                                                   S01166
     E**  WORK ARRAY                                                      S01166
     E                    @C         21  1                                S01166
     E*                                                                   S01166
     E*ARRAY TO HOLD OUTPUT TO DISPLAY FILE                               S01166
     E*                                                                   S01166
     E                    @NT         8 11                                S01166
     E                    @AR         8 14                                S01166
     E                    @DB         8 11                                S01166
     E                    @DL         8  8                                S01166
     E                    @FP         8  8                                S01166
     E*                                                                   S01166
     E                    CPY@    1   1 80                                S01117
     E* Copyright array                                                   S01117
     E/COPY ZSRSRC,ZHOLE                                                  S01195
      * New holiday array                                                 S01195
     E*****************************************************************   S01166
     E/EJECT                                                              S01166
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@Z71Y
     I            DS
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@VDT
     I            DS
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
     I**  DATA STRUCTURE FOR SR. ZA0680 - DATE INPUT TO SUBROUTINE
     I            DS
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I*
     I            DS
     I                                        1  138@@RIN
     I                                        1  13 @@AA                  S01166
     I** DATA STRUCTURE TO CONVERT DECIMAL RATE IN TO CHARACTER
     I*
     I*
     I            DS
     I*
     I****USED*BY*SR**ZA0830***ARRAY*DATA*STRUCTURE***                    S01195
     I**********                              1 150 @CY                   S01195
     I**********                              1  75 @@CY1                 S01195
     I**********                             76 150 @@CY2                 S01195
     I*                                                                   S01166
     I@@RTDS      DS                             13                       S01166
     I                                        1  138@@IRAT                S01166
     I**  DATASTUCTURE TO CONVERT @@IRAT DECIMAL FIELD TO ALPHA FIELD     S01166
     I*                                                                   S01166
     I@@AMDS      DS                             15                       S01166
     I                                        1  150@@IAMT                S01166
     I**  DATASTRUCTURE TO CONVERT @@IAMT DECIMAL FIELD TO ALPHA FIELD    S01166
     I*                                                                   S01166
     I**  USED BY SR. ZA0890 - Input Points Field                         S01166
     I                                        1   72@@PNTS                S01166
     I                                        1   7 @@7I                  S01166
     I                                        1   5 @@INTP                S01166
     I                                        6   7 @@DECP                S01166
     I                                        7   7 @@BITO                S01166
     I*                                                                   S01166
     I*
     I***AMENQ1      DS                            728                    S01166
     I***                                     1  29 @NAR1                 S01166
     I***                                    40  42 @CURR                 S01166
     I***                                    45  51 @ZER                  S01166
     I***                                    65  68 @SPOT                 S01166
     I***                                    70  77 @LOSP                 S01166
     I***                                    78  78 @HYP                  S01166
     I***                                    79  86 @HISP                 S01166
     I***                                   117 155 @NAR2                 S01166
     I***                                   157 191 @NOSTR                S01166
     I***                                   209 259 @TODAY                S01166
     I***                                   261 311 @TOD1                 S01166
     I***                                   313 363 @TOD2                 S01166
     I***                                   365 415 @TOD3                 S01166
     I***                                   417 467 @TOD4                 S01166
     I***                                   469 503 @OPEN                 S01166
     I***                                   573 607 @REM                  S01166
     I**  DATA AREA MASK - AMENQ1AA
     I*
     I@WORK       DS                          8  51
     I                                        1  100@NET
     I                                       11  11 @NETS
     I                                       12  248@AVRAT
     I                                       25  340@DBCE
     I                                       35  35 @DBCES
     I                                       36  422@DEAL
     I                                       43  43 @DEALS
     I                                       44  502@@FPT
     I                                       51  51 @FPTS
     I*                                                                   S01166
     I***         DS                                                      S01166
     I***                                     1  80 FAEPT1                S01166
     I***                                     2   4 DDCCY                 S01166
     I**  DATA STRUCTURE TO SET UP FILE KEY.
     I*
     I*
     I** DATA STRUCTURE TO HOLD INFORMATION ON DATABASE ERROR.
     I           UDS
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     I*
     IPSDS       SDS
     I**  Program status data structure.                                  S01166
     I**  Field containing file in process.                               S01166
     I                                      201 208 @FILE
     I**  Field containing workstaion  ID.                                S01166
     I                                      244 253 @JOB                  S01166
     I**  Field containing user ID.                                       S01166
     I                                      254 263 @USER                 S01166
     I*                                                                   S01166
     I**********  DS                             12                S01166 S01194
     I**********                              1  12 CCYKEY         S01166 S01194
     I**********                              1   2 K20            S01166 S01194
     I**********                              9  11 KCCY           S01166 S01194
     I**********                             12  12 K1             S01166 S01194
     I*                                                                   S01166
     I@OVRID      DS                             36                       S01166
     I*   Data structure for command in array @OVR                        S01166
     I                                       32  350@WAIT                 S01166
     I*                                                                   S01166
     I*                                                                   S01166
     ISDCURR    E DSSDCURRPD                                              S01194
     I* External DS for Currency Details                                  S01194
     ISDBANK    E DSSDBANKPD                                              S01194
     I* External DS for Bank Details                                      S01194
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     IDSSDY     E DSDSSDY                                                 S01194
     I* DS used by Access Objects (long records)                          S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* DS used by Access Objects (short records)                         S01194
      /COPY ZSRSRC,ZHOLI                                                  S01195
     I* Copy standard holiday data structure                              S01195
     C                     MOVEACPY@      BIS@   80                       S01117
     C/EJECT
     C*
     C**  Initial processing.
     C           @PLUS     CASNE'+'       #A
     C                     END
     C*
     C**  Main processing
     C           *INLR     IFEQ '0'                        b01            S01166
     C**  Do subroutine #B until cmd/3                                    S01166
     C           *IN01     DOWEQ'0'                        b02            S01166
     C                     EXSR #B                                        S01166
     C                     END                             e02            S01166
     C                     END                             e01            S01166
     C*
     C**  Termination processing
     C                     EXSR #C
     C*
     C           ENDPGM    TAG                             **ENDPGM**
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  Index to subroutines - Order of listing due to frequency of  *
     C*                         usage.                                *
     C*                                                               *
     C*   1. #B     - Main processing.                                *
     C*   2. #Z     - Loads edited data into d/s.                     *
     C*   3. #ZA    - Edits input before it is loaded into d/s.       *
     C*   4. #BA    - Edits forward points.                           *
     C*   5. ZA0710 - Calculates midas day number to YYYYMMDD         *
     C*   6. ZA0730 - Determines next working day.                    *
     C*   7. ZA0680 - Convert YYYYMMDD to midas day number format.    *
     C****8**ZA0830***Determines*if*day*is*a*holiday*******************   S01195
     C*   8. ZCHKH  - Determine if date is a holiday in a given CCY   *   S01195
     C****8.*ZA0700 - Calculates forward points.                      *
     C*   9. ZA0880 - Converts spot rates for display.                *
     C*  10. #BB    - Performs end processing                         *
     C*  11. #A     - Initial processing.                             *
     C*  12. #C     - Termination processing.                         *
     C***13**ZA0150***Accesses*ICD*file********************************   S01194
     C*  14. #ZB    - Database error handling sub- routine.           *
     C*  15. INFSR  - File error handling sub- routine.               *
     C*  16. *PSSR  - Program error handling sub- routine.            *
     C*  17. ZA0750 - Full Amount to Display Format                   *   S01166
     C*  18. ZA0760 - Full Rate t Display Format                      *   S01166
     C*  19. ZA0790 - Calculate Decimal Places for Cross Rate         *   S01166
     C*  20. ZA0890 - Forward Points to Display Format                *   S01166
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #B CARRIES OUT THE MAIN PROCESSING.                      *
     C*        CALLED BY  : MAIN PROGRAM.                            *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS: @WORK - OCUR DATA STRUCTURE              *
     C*                   : @X    - OCUR                             *
     C*                   : @KEY1 - KEY TO FXFWDTLL                  *
     C*                   : @@VDT - NEXT WORKING DAY                 *
     C*                   : @@DTIN- INPUT FIELD TO ZA0730            *
      *                     @WKMN - 1 WEEK FROM SPOT DATE (5,0)      *
      *                     @WKPT - POINTS FOR 1 WEEK DATE           *
      *                     @WKPT - POINTS PER DAY                   *
      *                     @DAYS - DAYS BETWEEN SPOT & DATE (3,0)   *
      *                      MUST BE 3,0 B'COS CAN HAVE 999 SPOT DAYS*
      *                     @DATE - WORKING DAY BEING PROCESSED (5,0)*
      *                     @SPMN - SPOT DATE IN MIDAS DAY NO   (5,0)*
     C*                                                              *
     C****************************************************************
     C*
     C           #B        BEGSR
     C*                                                                   S01166
     C                     Z-ADD11        @@CRET  20                      S01166
     C*
     C*                                                                   S01166
     C           *IN05     IFEQ '0'                                       S01166
     C**********           WRITEDL3140S0               30          S01166 S01117
     C                     WRITETM3140S0               30                 S01117
     C                     END                                            S01166
     C*                                                                   S01166
     C**********           WRITEDL3140F1        30  display screen S01166 S01117
     C                     WRITETM3140F1               30  display screen S01117
     C*                                                                   S01166
     C**********           READ DL3140DD        0530read screen    S01166 S01117
     C                     READ TM3140DD               0530read screen    S01117
     C*                                                                   S01166
     C**         *IN10     DOWEQ'1'                        help    S01166 S01199
     C**                   SETOF                     10            S01166 S01199
     C**                   CALL 'SDMENU'                           S01166 S01199
     C**                   READ DL3140DD               0530        S01166 S01199
     C**                   END                                     S01166 S01199
     C*                                                                   S01166
     C           *IN05     IFEQ '1'                        cmd/5          S01166
     C                     MOVELDDCURR    DDCCY              refresh      S01166
     C                     SETOF                     05                   S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C           DDCCY     IFEQ *BLANKS                    B1             S01166
     C*********************MOVELIDCYDL****DDCCY*************1BASECCYS01166S01319
     C                     MOVELBNCYDL    DDCCY            *1BASE CCY     S01319
     C                     END                             E1             S01166
     C*                                                                   S01166
     C                     SETOF                     40                   S01166
     C                     CALL 'ZA0250'                                  S01166
     C*                                                                   S01166
     C**********           MOVEL'20'      K20                      S01166 S01194
     C**********           MOVELDDCCY     KCCY                     S01166 S01194
     C**********           MOVEL'1'       K1                       S01166 S01194
     C**********                                                   S01166 S01194
     C********** CCYKEY    CHAINTABTG10F             40            S01166 S01194
     C********** *IN40     IFEQ '1'                                S01166 S01194
      *                                                                   S01194
      * Validate currency via call to access object                       S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM *BLANKS   @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           DDCCY   3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
      *                                                                   S01194
     C           @RTCD     IFNE *BLANKS                                   S01194
     C                     MOVE '1'       *IN40                           S01194
     C                     MOVEL'BBM0013' @MSGID 10        **2            S01166
     C                     CALL 'ZA0240'                   **2            S01166
     C                     PARM           @MSGID           **2            S01166
     C                     GOTO #B9                                       S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C** Currency must be a valid dealing currency                        S01280
     C*                                                                   S01280
     C           A6DLCI    IFEQ 'N'                                       S01280
     C                     MOVE '1'       *IN40                           S01280
     C                     MOVEL'MMM0202' @MSGID                          S01280
     C                     CALL 'ZA0240'                                  S01280
     C                     PARM           @MSGID                          S01280
     C                     GOTO #B9                                       S01280
     C                     END                                            S01280
     C*                                                                   S01166
     C**  IF TERMINATION CODE = T, TERMINATE PROGRAM.
     C***        @T        IFEQ 'T'                        B1             S01166
     C***                  MOVE '1'       *INLR            *1             S01166
     C***                  GOTO #B9                        *1             S01166
     C***                  END                             E1             S01166
     C*
     C**  ACCESS CURRENT PROMPTS FILE
     C*          1         CHAINFX38CPLL             61
     C***        1         CHAINCA38CPLL             61                   S01166
     C*                                                                   S01166
     C**  DEAL WITH DATA BASE ERROR
     C***        *IN61     IFEQ '1'                        B1             S01166
     C*                    MOVE 'FX38CPLL'DBFILE           *1*********** SS01166
     C***                  MOVE 'FX38CPLL'DBFILE           *1*********** SS01166
     C***                  MOVE '002'     DBASE            *1DB ERR 002*  S01166
     C***                  EXSR #ZB                        *1***********  S01166
     C***                  GOTO #B9                        *1             S01166
     C***                  END                             E1             S01166
     C*
     C***SET*UP*KEY*TO*OBTAIN*FORMAT*TABTG10F**20******CCY1****           S01194
     C**********           MOVEL'20'      @KEY   12                       S01194
     C**********           MOVELDDCCY     @ENDKY  4                S01166 S01194
     C**********           MOVE '1'       @ENDKY                          S01194
     C**********           MOVE @ENDKY    @KEY                            S01194
     C**********                                                          S01194
     C***CHAIN*TO*FILE*FDCCYTLL***                                        S01194
     C********** @KEY      CHAINFDCCYTLL             61                   S01194
     C**********                                                          S01194
     C***DEAL*WITH*DATA*BASE*ERROR***                                     S01194
     C********** *IN61     IFEQ '1'                        B1           **S01194
     C********** RECI      ORNE 'D'                        *1             S01194
     C***                  MOVEL'FDCCYTLL'DBFILE           *1*********** *S01166
     C***                  MOVEL'003'     DBASE            *1DB ERR 003* *S01166
     C***                  MOVEL@KEY      DBKEY            *1*********** *S01166
     C***                  EXSR #ZB                        *1             S01166
     C**********           GOTO #B9                        *1      S01166 S01194
     C**********           END                             E1           **S01194
     C*
     C**  ACCESS DATA AREA
     C***        *LOCK     IN   AMENQ1                                    S01166
     C***                  MOVE *BLANK    AMENQ1                          S01166
     C*
     C**  RESET TOTAL COUNTERS
     C                     Z-ADD*ZERO     @NETA
     C                     Z-ADD*ZERO     @BCEA
     C                     Z-ADD*ZERO     @NETAU
     C                     Z-ADD*ZERO     @BCEAU
     C*
     C****MOVE*CURRENCY TO S/R WORK FIELD & MIDAS RUNDATE TO NEXT
     C****DAY*FIELD
     C**  MOVE CURRENCY TO S/R WORK FIELD
     C                     MOVE DDCCY     @@CCY                           S01166
     C***********          Z-ADDRUND      @@DAYN
     C***********          EXSR ZA0710
     C*
     C**  LOAD NARRATIVE INTO DATA AREA MASK
     C***                  MOVEL@NAR,1    @NAR1                           S01166
     C***                  MOVEL@NAR,2    @NAR2                           S01166
     C***                  MOVEL'SPOT'    @SPOT                           S01166
     C***                  MOVEL'/'       @HYP                            S01166
     C                     MOVELDDCCY     DDCURR                          S01166
     C***                  MOVEL'(000''S)'@ZER                            S01166
     C*
     C*                                                                   S01166
     C**  EDIT HIGH AND LOW SPOT RATES
     C***********DDCCY*****IFEQ*IDCYDL*********************B1*******S01166S01319
     C           DDCCY     IFEQ BNCYDL                     B1             S01319
     C                     MOVE *BLANKS   DDLOSP           *1             S01166
     C                     MOVE *BLANKS   DDHISP           *1             S01166
     C                     ELSE                            X1             S01166
     C**********           Z-ADDHGSP      @@RIN            *1      S01166 S01194
     C                     Z-ADDA6HSRT    @@RIN            *1             S01194
     C                     Z-ADD0         @PAD    10       *1             S01166
     C********** @PAD      DOWNESEXP                       B2      S01166 S01194
     C           @PAD      DOWNEA6SCEX                     B2             S01194
     C                     MULT 10        @@RIN            *2             S01166
     C                     ADD  1         @PAD             *2             S01166
     C                     END                             E2             S01166
     C                     EXSR ZA0880                     *1             S01166
     C                     MOVEA@G        DDHISP           *1             S01166
     C*
     C**********           Z-ADDLOSP      @@RIN            *1      S01166 S01194
     C                     Z-ADDA6LSPR    @@RIN            *1             S01194
     C                     Z-ADD0         @PAD    10       *1             S01166
     C********** @PAD      DOWNESEXP                       B2      S01166 S01194
     C           @PAD      DOWNEA6SCEX                     B2             S01194
     C                     MULT 10        @@RIN            *2             S01166
     C                     ADD  1         @PAD             *2             S01166
     C                     END                             E2             S01166
     C                     EXSR ZA0880                     *1             S01166
     C                     MOVEA@G        DDLOSP           *1             S01166
     C                     END                             E1             S01166
     C*
     C**  RESET DATA STRUCTURE TO FIRST OCUR
     C                     Z-ADD1         @X
     C           @X        OCUR @WORK                                     S01166
     C*
     C**  CHAIN TO BANKS EQUIVALENTS, POSITIONS & PROFITS FILE
     C           DDCCY     CHAINFXEPOSLL             61                   S01166
     C*
     C           *IN61     IFEQ '0'                        B1             S01166
     C*
     C**  MOVE NET CURRENCY POSITION & DEALT BCE TO COMMON EDIT FIELDS
     C                     Z-ADDFONNCP    FPDYNM           *1             S01166
     C                     Z-ADDFONDBC    FPDYDE           *1             S01166
     C                     ELSE                            X1             S01166
     C                     Z-ADD0         FPDYNM                          S01166
     C                     Z-ADD0         FPDYDE                          S01166
     C                     Z-ADD0         FOTDPE                          S01166
     C                     Z-ADD0         FONNCP                          S01166
     C                     Z-ADD0         FONDBC                          S01166
     C                     Z-ADD0         FOTNTP                          S01166
     C                     Z-ADD0         FOFWPL                          S01166
     C                     Z-ADD0         FOBDSE                          S01166
     C                     Z-ADD0         FOSHPL                          S01166
     C*******              EXSR #Z                         *1
     C                     END                             E1             S01166
     C                     EXSR #Z
      *
      *  Market forward points are now calculated by finding the 1 week
      *  points (ie 7 working days from spot) and calculating the
      *  points for each day using a fraction of this (ie 1 day is 1/7
      *  of this).
      *  Previously the mkt points for each day were calculated
      *  separately, but MARKETING (in ACT) wanted it done the other
      *  way because it gave a better overall average. Hence this fix
      *
      *                       ******
      *
      ** If this is base ccy dealing there are no current mrkt points
     C***********DDCCY*****IFNE*IDCYDL*********************B1*******S01166S01319
     C           DDCCY     IFNE BNCYDL                     B1             S01319
      *
     C*                                                                   S01166
      ** Must calculate 1 week forward from spot
      ** Convert from YYYYMMDD format to midas day number
     C**********           MOVE FXSP      @@DTIN           *1             S01194
     C                     MOVE A6FXSD    @@DTIN           *1             S01194
     C                     EXSR ZA0680                     *1
      *
      ** Save midas day no version of spot date
     C                     Z-ADD@@MDNO    @SPMN   50       *1
     C           @@MDNO    ADD  7         @WKMN   50       *1
      *
      ** Look at fwd book file to see if net buy or sell
      ** must convert date from midas day no. to YYYYMMDD for key
     C                     Z-ADD@WKMN     @@DAYN           *1
     C                     EXSR ZA0710                     *1
      *
     C           @KFWD     KLIST                           *1
     C                     KFLD           DDCCY            *1             S01166
     C                     KFLD           @@YR             *1
     C                     KFLD           @@Z71M           *1
     C                     KFLD           @@Z71D           *1
      *
     C           @KFWD     CHAINFXFWDTLL             61    *1
      *
      ** If no record, ie no movements,  for this date assume a buy
     C           *IN61     IFEQ '1'                        B*2
     C                     MOVE 'B'       @@BYSL  1        **2
     C                     ELSE                            X*2
      *
      ** if net ccy > 0 move sell to buy/sell field
     C           FPDYNM    IFGT *ZERO                      B**3
     C                     MOVE 'S'       @@BYSL           ***3
     C                     ELSE                            X**3
     C                     MOVE 'B'       @@BYSL           ***3
     C                     END                             E**3
      *
     C                     END                             E*2
      *
      ** Chain to exchange rates and Points file for this 1 wk record
      *  to pick up the points
      *                                                                   S01136
     C           @KWEEK    CHAINFDCCYPLL             61    *1             S01136
      ** All dealing ccys MUST have exchg rates & points set up           S01136
      ** (except base ccy for dealing)                                    S01136
     C           *IN61     IFEQ '1'                        B*2            S01136
     C********** RECI      ORNE 'D'                        **2     S01136 S01280
     C           XPDLTF    OREQ '*'                        **2            S01280
     C                     MOVEL'FDCCYPLL'DBFILE           ************* *S01136
     C                     MOVEL'008'     DBASE            * DB ERR 008* *S01136
     C                     MOVELDDCCY     DBKEY            ************* *S01136
     C                     MOVE 'W01'     DBKEY            ************* *S01136
     C                     EXSR #ZB                        **2            S01136
     C                     GOTO #B9                        **2            S01136
     C                     END                             E*2            S01136
      *                                                                   S01136
     C***********@KWEEK    KLIST                           *1             S01136
     C**********           KFLD           DDCCY            *1             S01136
     C**********           KFLD           @@VDT            *1             S01136
      **********                                                          S01136
     C********** @KWEEK    CHAINFXCCYPLL             61    *1             S01136
      **********                                                          S01136
      ** All dealing ccys MUST have exchg rates & points set up
      ** (except base ccy for dealing)
     C*********  *IN61     IFEQ '1'                        B*2            S01136
     C********** RECI      ORNE 'D'                        **2            S01136
     C************         MOVEL'FXCCYPLL'DBFILE           ************* *S01136
     C***********          MOVEL'008'     DBASE            * DB ERR 008* *S01136
     C***********          MOVELDDCCY     DBKEY            ************* *S01136
     C**********           MOVE @@VDT     DBKEY            ************* *S01136
     C**********           EXSR #ZB                        **2            S01136
     C*********            GOTO #B9                        **2            S01136
     C**********           END                             E*2            S01136
      *
      ** Save high or low points
     C           *LIKE     DEFN XPLOPT    @WKPT
     C           @@BYSL    IFEQ 'B'                        B*2
     C********** XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
      *
     C           @@BYSL    OREQ 'S'                        B*2
     C********** XRMD      ANDEQ'M'                        B*2            S01194
     C           A6MDEX    ANDEQ'M'                        B*2            S01194
     C                     Z-ADDXPLOPT    @WKPT            **2
     C                     MOVE '1'       *IN63                           E35996
      *
     C                     ELSE
     C                     Z-ADDXPHIPT    @WKPT            **2
     C                     END                             E*2
      *
      **  Calculate the 'points per day'
     C           @WKPT     DIV  7         @DAPT  136H      *1
      *
      **  Initialise the date field with rund for first run through
     C**********           Z-ADDRUND      @DATE   50       *1             S01194
     C                     Z-ADDBJRDNB    @DATE   50       *1             S01194
      *
     C                     END                             E1
      *
      ** Move midas rundate to YYYYMMDD format, this is used by @KEY1
      ** keylist to FXFWDTLL
     C**********           Z-ADDRUND      @@DAYN                          S01194
     C                     Z-ADDBJRDNB    @@DAYN                          S01194
     C                     EXSR ZA0710
     C*
     C**  ACCESS FILE FOR DETAILS OF TODAY & NEXT FOUR WORKING DAYS
     C**  NB... @X = 1  AT BEFORE FIRST EXECUTION OF DO GROUP
     C*                                                                   E35996
     C           KDAY0     SETLLFDCCYPP0                 64               E35996
     C*                                                                   E35996
     C           *IN64     IFEQ '1'                                       E35996
     C*                                                                   E35996
     C           @X        DOUEQ6                          B1
     C*
     C**  INCREMENT OCUR
     C                     ADD  1         @X      10       *1
     C           @X        OCUR @WORK                      *1             S01166
     C           @KEY1     CHAINFXFWDTLL             61    *1
     C*                                                                   S01166
     C**  IF RECORD FOUND PERFORM EDIT AND FORWARD POINTS ROUTINES
      **  (not current market points, only deal points)
     C           *IN61     IFEQ '0'                        B*2
     C*                                                                   S01166
     C                     EXSR #Z                         **2
     C                     EXSR #BA                        **2
     C*
     C**  IF D.B. ERROR END PROGRAM
     C           *INU8     CABEQ'1'       #B9              **2            S01166
     C*
     C                     ELSE                            X*2
      *
      **  If no record found, initialize unused line.
     C                     Z-ADD0         FPDYNM           **2            S01166
     C                     Z-ADD0         FPDYDE           **2            S01166
     C                     EXSR #Z                         **2            S01166
     C                     EXSR #BA                        **2            S01166
     C                     MOVE *BLANKS   @WORK            **2            S01166
     C                     MOVE '+'       @NETS            **2
     C                     MOVE '+'       @DBCES           **2
     C                     MOVE '+'       @DEALS           **2
     C*
      ************************************************************
     C***CHECK WHETHER FORWARD POINTS EXIST FOR CURRENCY
     C***IF FORWARD POINTS EDIT CURRENT MARKET FORWARD POINTS USING
     C***ZA0700 OTHERWISE SET UP AS ZERO
     C********   DDCCY     CHAINFXCCYPLL             62    **2            S01166
     C********   *IN62     IFEQ '0'                        B**3
     C*********
     C****EDIT CURRENT MARKET FORWARD POINTS if FXFWDD not found.
     C****no movements, so assume Buy.
     C*********            MOVE 'B'       @@BYSL  1        ***3
     C*********
     C****MOVE CURR CODE TO INPUT & PERFORM MARKET FORWARD POINTS EDIT
     C*********            MOVE DDCCY     @@CCY            ***3           S01166
     C*********            EXSR ZA0700                     ***3
     C*********
     C****IF D.B. ERROR FOUND IN ZA0700 PERFORM INFSR & END PROGRAM
     C*********  *INU8     IFEQ '1'                        B***4
     C*********            EXSR #ZB                        ****4
     C*********            GOTO #B9                        ****4
     C*********            END                             E***4
     C*********
     C****IF CURRENT MARKET FORWARD POINTS > 0 MOVE '+' TO SIGN
     C*********  @@FPT     IFGT *ZERO                      B***4
     C*********            MOVE @PLUS     @FPTS            ****4
     C*********            END                             E***4
     C*********
     C****IF CURRENT MARKET FORWARD POINTS < 0 MOVE '-' TO SIGN
     C*********  @@FPT     IFLT *ZERO                      B***4
     C*********            MOVE @MINUS    @FPTS            ****4
     C*********            Z-SUB@@FPT     @@FPT            ****4
     C*********            END                             E***4
     C*********
     C****IF CURRENT MARKET FORWARD POINTS = 0 MOVE   +   TO SIGN
     C*********  @@FPT     IFEQ *ZERO                      B***4
     C*********            MOVE '+'       @FPTS            ****4
     C*********            END                             E***4
     C*********
     C***SET FORWARD POINTS TO ZERO
     C*********            ELSE                            X**3
     C*********            MOVE *ZEROS    @@FPT            ***3
     C*********            MOVE '+'       @FPTS            ***3
     C*********            END                             E**3
      *************************************************************
     C*
     C                     END                             E*2
      *****************************************************************   E35996
      ***Calculate*Current*Market*Points*using*'points*per*day*amount'*   E35996
      ***and*total*number*of*days*between*spot*and*date****************   E35996
      ***if*date*is*spot*the*current*market*points*will*be*zero********   E35996
      ***if*date*is*before*spot*the*current*market*points*will*be*-ve**   E35996
      ***so*must*invert*the*sign*of*@WDAYS*****************************   E35996
      *
      ** If this is base ccy dealing there are no current mrkt points
     C*                                                                   E35996
     C***********DDCCY*****IFNE*IDCYDL*********************B*2******S01166S01319
     C           DDCCY     IFNE BNCYDL                     B*2            S01319
     C*                                                                   E35996
      *****************************************************************   E35996
     C***********@SPMN     SUB  @DATE     @DAYS   30       **2            E35996
      ***********                                                         E35996
     C***********          Z-SUB@DAYS     @DAYS            **2            E35996
      ***********                                                         E35996
     C***********@DAYS     MULT @DAPT     @@FPT     H      **2            E35996
      ***********                                                         E35996
      ***Find*next*working*day*for*next*run*through********************   E35996
      *                                                                   S01195
      * Set ZLOC to system location                                       S01195
     C                     MOVELBJSLCD    ZLOC                            S01195
     C                     MOVELDDCCY     ZCCY                            S01195
     C********** @@HIND    DOUNE'H'                        B**3           S01195
     C***********ZIND      DOUNE'H'                        B**3     S01195E35996
     C***********          ADD  1         @DATE            ***3           E35996
     C**********           Z-ADD@DATE     @@MNO            ***3           S01195
     C***********          Z-ADD@DATE     ZDAYNO           ***3     S01195E35996
     C**********           EXSR ZA0830                     ***3           S01195
     C***********          EXSR ZCHKH                      ***3     S01195E35996
     C***********          END                             E**3           E35996
      ***********                                                         E35996
     C** Spot points are retrieved from a different file                  E35996
     C*                                                                   E35996
     C           @X        IFNE 4                                         E35996
     C                     READ FDCCYPP0                 65               E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C** If low points are to be used                                     E35996
     C*                                                                   E35996
     C           *IN63     IFEQ '1'                                       E35996
     C*                                                                   E35996
     C** Display low points                                               E35996
     C*                                                                   E35996
     C           @X        IFEQ 4                                         E35996
     C                     Z-ADDA6LSPR    @@FPT     H                     E35996
     C                     ELSE                                           E35996
     C                     Z-ADDXPLOPT    @@FPT                           E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C** Convert Spot/Next period date                                    E35996
     C*                                                                   E35996
     C           @X        IFEQ 5                                         E35996
     C                     MOVE XPPRDD    @@DTIN                          E35996
     C                     EXSR ZA0680                                    E35996
     C*                                                                   E35996
     C** Store Spot/Next period date & its low point for interpolation    E35996
     C*                                                                   E35996
     C                     Z-ADD@@MDNO    @SNDT                           E35996
     C                     Z-ADDXPLOPT    @SNPT                           E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C** Else, if high points are to be used                              E35996
     C*                                                                   E35996
     C                     ELSE                                           E35996
     C*                                                                   E35996
     C** Display high points                                              E35996
     C*                                                                   E35996
     C           @X        IFEQ 4                                         E35996
     C                     Z-ADDA6HSRT    @@FPT     H                     E35996
     C                     ELSE                                           E35996
     C                     Z-ADDXPHIPT    @@FPT                           E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C** Convert Spot/Next period date                                    E35996
     C*                                                                   E35996
     C           @X        IFEQ 5                                         E35996
     C                     MOVE XPPRDD    @@DTIN                          E35996
     C                     EXSR ZA0680                                    E35996
     C*                                                                   E35996
     C** Store Spot/Next period date & its high point for interpolation   E35996
     C*                                                                   E35996
     C                     Z-ADD@@MDNO    @SNDT                           E35996
     C                     Z-ADDXPHIPT    @SNPT                           E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C** Convert 1 Week period date                                       E35996
     C*                                                                   E35996
     C           @X        IFEQ 6                                         E35996
     C                     MOVE XPPRDD    @@DTIN                          E35996
     C                     EXSR ZA0680                                    E35996
     C                     Z-ADD@@MDNO    @WKDT                           E35996
     C*                                                                   E35996
     C** On the 4th day, the MKT field shows the result of an             E35996
     C**    interpolation between the Spot/Next points and the            E35996
     C**    1 Week points. This is achieved by the following              E35996
     C**    formula:                                                      E35996
     C**                                                                  E35996
     C**                     (1 Wk. pts. - S/N pts.)                      E35996
     C**    4th day points = ----------------------- + S/N pts.           E35996
     C**                     (1 Wk. date - S/N date)                      E35996
     C**                                                                  E35996
     C*                                                                   E35996
     C           @@FPT     SUB  @SNPT     @DPTS                           E35996
     C           @WKDT     SUB  @SNDT     @DDAT                           E35996
     C           @DPTS     DIV  @DDAT     @TEMP     H                     E35996
     C           @TEMP     ADD  @SNPT     @FWPT                           E35996
     C*                                                                   E35996
     C** Move 4th day points to the field to be formatted                 E35996
     C*                                                                   E35996
     C                     Z-ADD@FWPT     @@FPT                           E35996
     C*                                                                   E35996
     C                     END                                            E35996
     C*                                                                   E35996
     C                     Z-ADD@@FPT     @@PNTS           **2            S01166
     C                     EXSR ZA0890                     **2            S01166
     C                     MOVE @@EPNT    @FP,@X           **2            S01166
     C*                                                                   S01166
      ** If current market points are >= 0 move + to sign
     C           @@FPT     IFLT *ZERO                      B**3           S01166
     C                     MOVE '-'       @FPTS            ***3           S01166
      *
     C                     ELSE                            X**3           S01166
     C                     MOVE '+'       @FPTS            ***3           S01166
     C                     END                             E**3           S01166
      *
      ** Ensure current market points are +ve for display
     C           @@FPT     IFLT *ZERO                      B**3           S01166
     C                     Z-SUB@@FPT     @@FPT            ***3           S01166
     C                     END                             E**3           S01166
      *                                                                   S01166
     C                     END                             E*2            S01166
     C*
     C**  EXECUTE S/R FOR NEXT WORKING DAY
     C                     MOVE @@VDT     @@DTIN           *1
     C                     EXSR ZA0730                     *1
     C*
     C                     END                             E1
     C*                                                                   E35996
     C                     END                                            E35996
     C*
     C**  PERFORM END PROCESSING
     C                     EXSR #BB
     C*
     C           #B9       ENDSR                           ***#B9***
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #Z LOADS EDITED DATA INTO DATA STRUCTURE.                *
     C*        CALLED BY  : #B #BB                                   *
     C*        CALLS      : #ZA                                      *
     C*                                                              *
     C*        WORK FIELDS: @INPUT - AMOUNT TO BE EDITED             *
     C*                   : @NET   - D/S FIELD - NET CURRENCY        *
     C*                   : @NETS  - D/S FIELD - NET CURRENCY SIGN   *
     C*                   : @DBCE  - D/S FIELD - DEALT BCE           *
     C*                   : @DBCES - D/S FIELD - DEALT BCE SIGN      *
     C*                   : @AVRAT - D/S FIELD - AVERAGE RATE        *
     C*                   : @NETA  - NET CURRENCY ACCUMULATOR        *
     C*                   : @BCEA  - DEALT BCE ACCUMULATOR           *
     C*                   : @NETAU - NET CURRENCY ACCUMULATOR UNITS  *
     C*                   : @BCEAU - DEALT BCE ACCUMULATOR IN UNITS  *
     C*                   : @SIGN  - SIGN WORK FIELD                 *
     C*                                                              *
     C****************************************************************
     C           #Z        BEGSR
     C*
     C                     Z-ADDFPDYNM    @INPUT                          S01166
     C*
     C                     EXSR #ZA                                       S01166
     C*
     C**  EDIT NET CURRENCY IF NOT = ZERO                                 S01166
     C*                                                                   S01166
     C           FPDYNM    IFNE *ZERO                      B1             S01166
     C**  LOAD EDITED NET CURRENCY & SIGN TO D/S
     C                     Z-ADD@UNITS    @NETU            *1
     C                     Z-ADD@INPUT    @NET             *1
     C                     MOVE @SIGN     @NETS            *1
     C                     ELSE                            X1
     C                     Z-ADD*ZERO     @NET             *1
     C                     Z-ADD*ZERO     @NETU            *1
     C                     END                             E1
     C*
     C                     Z-ADDFPDYDE    @INPUT                          S01166
     C*                                                                   S01166
     C                     EXSR #ZC                                       S01166
     C*                                                                   S01166
     C**  EDIT DEALT BASE CURRENCY EQUIVALENT                             S01166
     C           FPDYDE    IFNE *ZERO                      B1             S01166
     C*                                                                   S01166
     C**  LOAD EDITED DEALT BCE & SIGN TO D/S
     C                     Z-ADD@UNITS    @DBCEU           *1
     C                     Z-ADD@INPUT    @DBCE            *1
     C                     MOVE @OSIGN    @DBCES           *1
     C                     ELSE                            X1
     C                     Z-ADD*ZERO     @DBCEU           *1
     C                     Z-ADD*ZERO     @DBCE            *1
     C                     END                             E1
     C*
     C**  IF EITHER NET CURRENCY POSITION OR DEALT BCE FIELD ZERO
     C**  THAN AVERAGE RATE FIELD IS ZERO
     C           @NET      IFEQ *ZERO                      B1
     C           @DBCE     OREQ *ZERO                      *1
     C                     Z-ADD*ZERO     @AVRAT           *1
     C                     ELSE                            X1
     C*
     C**  IF EXCHANGE RATE MULTIPLY/DIVIDE INDICATOR = 'D' DIVIDE NET
     C**  CURR BY DEALT BCE - ELSE DIVIDE DEALT BCE BY NET CURR
     C********** XRMD      IFEQ @D                         B*2            S01194
     C           A6MDEX    IFEQ @D                         B*2            S01194
     C********** @NETU     DIV  @DBCEU    @AVRAT           **2
     C           @NETU     DIV  @DBCEU    @AVRAT    H      **2
     C                     ELSE                            X*2
     C********** @DBCEU    DIV  @NETU     @AVRAT           **2
     C           @DBCEU    DIV  @NETU     @AVRAT    H      **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C**  CHECK FOR NEGATIVE AVERAGE RATE
     C           @AVRAT    IFLT *ZERO                      B1
     C                     Z-SUB@AVRAT    @AVRAT           *1
     C                     END                             E1
     C*                                                                   S01166
     C                     Z-ADD@AVRAT    @@IRAT                          S01166
     C                     EXSR ZA0760                                    S01166
     C                     MOVE @@ORAT    @AR,@X                          S01166
     C*
     C**  ACCUMULATE NET CURR & DEALT BCE - EXCEPT ON TOTALS PROCESSING
     C           @X        IFLT 7                          B1
     C           @DBCES    IFEQ '-'                        B*2
     C                     SUB  @DBCE     @BCEA            **2
     C                     SUB  @DBCEU    @BCEAU           **2
     C                     ELSE                            X*2
     C                     ADD  @DBCE     @BCEA            *1
     C                     ADD  @DBCEU    @BCEAU           *1
     C                     END                             E*2
     C*
     C           @NETS     IFEQ '-'                        B*2
     C                     SUB  @NET      @NETA            **2
     C                     SUB  @NETU     @NETAU           **2
     C                     ELSE                            X*2
     C                     ADD  @NET      @NETA            *1
     C                     ADD  @NETU     @NETAU           *1
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C           #Z9       ENDSR                           ****#Z9****
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #ZA EDITS INPUT BEFORE IT IS LOADED INTO DATA STRUCTURE. *
     C*        CALLED BY  : #Z                                       *
     C*        CALLS      : ZA0750                                   *    S01166
     C*                                                              *
     C*        WORK FIELDS: @INPUT - AMOUNT TO BE EDITED             *
     C*                   : @SIGN  - SIGN WORK FIELD                 *
     C*                   : @W     - WORK FIELD FOR DP CORRECTION    *
     C*                   : @AA    - COUNTER                         *
     C*                                                              *
     C****************************************************************
     C           #ZA       BEGSR
     C*
     C                     Z-ADD*ZERO     @UNITS 153
     C*
     C*                                                                   S01166
     C** CORRECT DECIMAL PLACES
     C********** *LIKE     DEFN CDP       @W                              S01194
     C           *LIKE     DEFN A6NBDP    @W                              S01194
     C           @INPUT    IFNE *ZERO                      B1
     C********** CDP       ADD  1         @W               *1             S01194
     C           A6NBDP    ADD  1         @W               *1             S01194
     C           @INPUT    DIV  @DP,@W    @UNITS           *1
     C                     END                             E1
      *
      **  Store Currency amount in units.
     C           @UNITS    IFLT *ZERO                      B1
     C                     Z-SUB@UNITS    @UNITS           *1
     C                     END                             E1
     C*
     C****USING*NO**OF*DECIMAL*PLACES*FROM*TABTG10*EVALUATE*REAL*VALUE    S01194
     C**  USING NO. OF DECIMAL PLACES FROM SDCURRPD EVALUATE REAL VALUE   S01194
     C                     Z-ADD*ZERO     @AA
     C*
     C           @X        IFLT 8                          B1             S01166
     C********** @AA       DOWNECDP                        B*2     S01166 S01194
     C           @AA       DOWNEA6NBDP                     B*2            S01194
     C                     DIV  10        @INPUT           **2            S01166
     C                     ADD  1         @AA              **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C***********                                                         E12560
     C****DIVIDE*INPUT*AMOUNT*BY*1000*AND*HALF*ADJUST*RESULT***********   E12560
     C***********          DIV  1000      @INPUT    H                     E12560
     C*
     C**  DIVIDE INPUT AMOUNT BY 1000 AND HALF ADJUST RESULT              E12560
     C           @INPUT    IFNE *ZERO                      B1             S01166
     C                     DIV  1000      @INPUT    H      *1             E12560
     C                     END                             E1             S01166
     C*                                                                   S01166
     C                     Z-ADD@INPUT    @@IAMT                          S01166
     C                     Z-ADD0         @@CDP                           S01166
     C                     MOVE DDCCY     @@CCY                           S01166
     C                     EXSR ZA0750                                    S01166
     C                     MOVE @@ADSP    @NT,@X                          S01166
     C*                                                                   S01166
     C**  IF THE RESULT IS > 0 THAN ZERO MOVE '+' TO SIGN FIELD           S01166
     C           @INPUT    IFGT *ZERO                      B1             S01166
     C                     MOVE @PLUS     @SIGN            *1             S01166
     C                     MOVE @MINUS    @OSIGN           *1             S01166
     C                     ELSE                            X1             S01166
     C                     MOVE @MINUS    @SIGN            *1             S01166
     C                     MOVE @PLUS     @OSIGN           *1             S01166
     C                     Z-SUB@INPUT    @INPUT           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   E12560
     C           #ZA9      ENDSR                            ***#ZA9***
     C*
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #ZC EDITS INPUT BEFORE IT IS LOADED INTO DATA STRUCTURE. *
     C*        CALLED BY  : #Z                                       *
     C*        CALLS      : ZA0750                                   *    S01166
     C*                                                              *
     C*        WORK FIELDS: @INPUT - AMOUNT TO BE EDITED             *
     C*                   : @SIGN  - SIGN WORK FIELD                 *
     C*                   : @AA    - COUNTER                         *
     C*                                                              *
     C****************************************************************
     C           #ZC       BEGSR
     C*
     C                     Z-ADD*ZERO     @UNITS
     C*
     C*                                                                   S01166
     C** CORRECT DECIMAL PLACES
     C           @INPUT    IFNE *ZERO                      B1
     C           @BCDP     ADD  1         @W               *1
     C           @INPUT    DIV  @DP,@W    @UNITS           *1
     C                     END                             E1
      *
      **  Store Currency amount in units.
     C           @UNITS    IFLT *ZERO                      B1
     C                     Z-SUB@UNITS    @UNITS           *1
     C                     END                             E1
     C*
     C****USING*NO**OF*DECIMAL*PLACES*FROM*TABTG10*EVALUATE*REAL*VALUE    S01194
     C**  USING NO. OF DECIMAL PLACES FROM SDCURRPD EVALUATE REAL VALUE   S01194
     C                     Z-ADD*ZERO     @AA
     C*
     C           @X        IFNE 8                          B1
     C           @AA       DOWNE@BCDP                      B*2            S01166
     C                     DIV  10        @INPUT           **2            S01166
     C                     ADD  1         @AA              **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C**  DIVIDE INPUT AMOUNT BY 1000 AND HALF ADJUST RESULT
     C           @INPUT    IFNE *ZERO                      B1             S01166
     C                     DIV  1000      @INPUT    H      *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           @X        IFEQ 8                          B1             S01166
     C                     Z-ADD@INPUT    @@IAMT           *1             S01166
     C                     ELSE                            X1             S01166
     C                     Z-SUB@INPUT    @@IAMT           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C                     Z-ADD0         @@CDP                           S01166
     C*                                                                   S01166
     C                     MOVE DDCCY     @@CCY                           S01166
     C                     EXSR ZA0750                                    S01166
     C                     MOVE @@ADSP    @DB,@X                          S01166
     C*
     C**  IF THE RESULT IS > 0 THAN ZERO MOVE '+' TO SIGN FIELD
     C           @INPUT    IFGT *ZERO                      B1
     C                     MOVE @PLUS     @SIGN            *1
     C                     MOVE @MINUS    @OSIGN           *1
     C                     ELSE                            X1
     C                     MOVE @MINUS    @SIGN            *1
     C                     MOVE @PLUS     @OSIGN           *1
     C                     Z-SUB@INPUT    @INPUT           *1
     C                     END                             E1
     C*
     C           #ZC9      ENDSR                            ***#ZC9***
     C*
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #BA EDITS FORWARD POINTS FIELDS                          *
     C*        CALLED BY  : #B                                       *
     C*        CALLS      : ZA0890                                   *    S01166
     C*                                                              *
     C*        WORK FIELDS: @AA    - COUNTER                         *
     C*                     @DEAL  - DEAL FORWARD POINTS             *
     C*                     @DEAL  - DEAL FORWARD POINTS SIGN        *
     C*                     @NETS  - NET CURRENMCY SIGN              *
     C*                     @AVRAT - AVEAGE RATE                     *
     C*                     @@BYSL - BUY/SELL INDICATOR              *
     C*                     @@FPT  - MARKET FORWARD POINTS           *
     C*                     @FPTS  - MARKET FORWARD POINTS SIGN      *
     C*                     @@CCY  - INPUT FIELD FOR ZA0700          *    S01166
     C*                                                              *
     C****************************************************************
     C           #BA       BEGSR
     C*
     C**  IF AVERAGE RATE FIELD IS ZERO DEAL FORWARD POINT IS ZERO
     C           @AVRAT    IFEQ *ZERO                      B1
     C                     Z-ADD*ZERO     @DEALP 158       *1
     C                     ELSE                            X1
     C**********           Z-ADDHGSP      @XISP  158       *1             S01194
     C                     Z-ADDA6HSRT    @XISP  158       *1             S01194
     C**********           Z-ADDLOSP      @XOSP  158       *1             S01194
     C                     Z-ADDA6LSPR    @XOSP  158       *1             S01194
     C                     Z-ADD@AVRAT    @XRAT  158       *1
     C                     Z-ADD*ZERO     @AA              *1
     C********** @AA       DOWNESEXP                       B*2            S01194
     C           @AA       DOWNEA6SCEX                     B*2            S01194
     C                     MULT 10        @XISP            **2
     C                     ADD  1         @AA              **2
     C                     END                             E*2
     C                     Z-ADD*ZERO     @AA              *1
     C********** @AA       DOWNESEXP                       B*2            S01194
     C           @AA       DOWNEA6SCEX                     B*2            S01194
     C                     MULT 10        @XOSP            **2
     C                     ADD  1         @AA              **2
     C                     END                             E*2
     C                     Z-ADD*ZERO     @AA              *1
     C********** @AA       DOWNESEXP                       B*2            S01194
     C           @AA       DOWNEA6SCEX                     B*2            S01194
     C                     MULT 10        @XRAT            **2
     C                     ADD  1         @AA              **2
     C                     END                             E*2
     C           @XRAT     IFLT 10                         B*2
     C                     Z-ADD@XRAT     @6     156H      **2
     C                     Z-ADD@6        @XRAT            **2
     C                     END                             E*2
     C           @XRAT     IFGE 10                         B*2
     C           @XRAT     ANDLT100                        **2
     C                     Z-ADD@XRAT     @5     155H      **2
     C                     Z-ADD@5        @XRAT            **2
     C                     END                             E*2
     C           @XRAT     IFGE 100                        B*2
     C           @XRAT     ANDLT1000                       **2
     C                     Z-ADD@XRAT     @4     154H      **2
     C                     Z-ADD@4        @XRAT            **2
     C                     END                             E*2
     C           @XISP     IFLT 10                         B*2
     C                     Z-ADD@XISP     @6     156H      **2
     C                     Z-ADD@6        @XISP            **2
     C                     END                             E*2
     C           @XISP     IFGE 10                         B*2
     C           @XISP     ANDLT100
     C                     Z-ADD@XISP     @5     155H
     C                     Z-ADD@5        @XISP
     C                     END
     C           @XISP     IFGE 100
     C           @XISP     ANDLT1000
     C                     Z-ADD@XISP     @4     154H
     C                     Z-ADD@4        @XISP
     C                     END
     C           @XOSP     IFLT 10
     C                     Z-ADD@XOSP     @6     156H
     C                     Z-ADD@6        @XOSP
     C                     END
     C           @XOSP     IFGE 10
     C           @XOSP     ANDLT100
     C                     Z-ADD@XOSP     @5     155H
     C                     Z-ADD@5        @XOSP
     C                     END
     C           @XOSP     IFGE 100
     C           @XOSP     ANDLT1000
     C                     Z-ADD@XOSP     @4     154H
     C                     Z-ADD@4        @XOSP
     C                     END
     C*
     C**  IF NET CURR IS SHORT & M/D IND. IS 'M' OR NET CURR IS LONG &
     C**  M/D IND. IS 'D' SUBTRACT HIGH SPOT RATE FORM AVERAGE DEAL.
     C********** XRMD      IFEQ @M                         B*2            S01194
     C           A6MDEX    IFEQ @M                         B*2            S01194
     C           @NETS     ANDEQ@MINUS                     **2
     C********** XRMD      OREQ @D                         **2            S01194
     C           A6MDEX    OREQ @D                         **2            S01194
     C           @NETS     ANDEQ@PLUS                      **2
     C*
     C*********  @AVRAT    SUB  HISP      @DEALP           **2
     C           @XRAT     SUB  @XISP     @DEALP           **2
     C                     ELSE                            X*2
     C*********  @AVRAT    SUB  LOSP      @DEALP           **2
     C           @XRAT     SUB  @XOSP     @DEALP           **2
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C**  FIND SCALING FOR FORWARD POINTS USING NUMBER OF DEC PLACES
     C                     Z-ADD*ZERO     @AA
     C********** @AA       DOWNENQDP                       B1             S01194
     C           @AA       DOWNEA6NQDP                     B1             S01194
     C                     MULT 10        @DEALP           *1
     C                     ADD  1         @AA              *1
     C                     END                             E1
      *
      **  STORE 15,8 DATA IN 7,2 FORMAT
     C****************     Z-ADD@DEALP    @DEAL
     C                     Z-ADD@DEALP    @DEAL     H
      *
     C                     Z-ADD@DEAL     @@PNTS                          S01166
     C                     EXSR ZA0890                                    S01166
     C                     MOVE @@EPNT    @DL,@X                          S01166
     C*
     C**  IF DEAL FORWARD POINTS > 0 MOVE '+' TO SIGN
     C           @DEAL     IFGT *ZERO                      B1
     C                     MOVE @PLUS     @DEALS           *1
     C                     END                             E1
     C*
     C**  IF DEAL FORWARD POINTS < 0 MOVE '-' TO SIGN
     C           @DEAL     IFLT *ZERO                      B1
     C                     MOVE @MINUS    @DEALS           *1
     C                     Z-SUB@DEALP    @DEALP           *1
     C                     Z-SUB@DEAL     @DEAL            *1
     C                     END                             E1
     C*
     C**  IF DEAL FORWARD POINTS = 0 MOVE   +   TO SIGN
     C           @DEAL     IFEQ *ZERO                      B1
     C                     MOVE '+'       @DEALS           *1
     C                     END                             E1
     C*                                                                   S01166
      ***********************************************************8
     C****EDIT CURRENT MARKET FORWARD POINTS
     C****IF NET CURRENCY > 0 MOVE SELL TO BUY/SELL FIELD
     C***********FPDYNM    IFGT *ZERO                      B1
     C*********            MOVE 'S'       @@BYSL           *1
     C*********            ELSE                            X1
     C*********            MOVE 'B'       @@BYSL  1        *1
     C*********            END                             E1
     C*********
     C****MOVE CURR CODE TO INPUT & PERFORM MARKET FORWARD POINTS EDIT
     C*********            MOVE DDCCY     @@CCY                           S01166
     C*********            EXSR ZA0700
     C*********
     C****IF D.B. ERROR FOUND IN ZA0770 PERFORM INFSR & END PROGRAM
     C*********  *INU8     IFEQ '1'                        B1
     C*********            EXSR #ZB                        *1
     C*********            GOTO #BA9                       *1
     C*********            END                             E1
     C*********
     C****IF CURRENT MARKET FORWARD POINTS > 0 MOVE '+' TO SIGN
     C*********  @@FPT     IFGT *ZERO                      B1
     C*********            MOVE @PLUS     @FPTS            *1
     C*********            END                             E1
     C*********
     C****IF CURRENT MARKET FORWARD POINTS < 0 MOVE '-' TO SIGN
     C*********  @@FPT     IFLT *ZERO                      B1
     C*********            MOVE @MINUS    @FPTS            *1
     C*********            Z-SUB@@FPT     @@FPT            *1
     C*********            END                             E1
     C*********
     C****IF CURRENT MARKET FORWARD POINTS = 0 MOVE  +    TO SIGN
     C*********  @@FPT     IFEQ *ZERO                      B1
     C*********            MOVE '+'       @FPTS            *1
     C*********            END                             E1
      ***********************************************************
     C*
     C           #BA9      ENDSR                           ****#BA9****
     C/EJECT
      *****************************************************************
      *                                                               *
      *       TITLE:CALCULATE MIDAS DAY NO. TO DRS (YYYYMMDD) FORMAT. *
      *                                                               *
      *       SUBROUTINE ZA0710 EXPECTS FIELD '@@DAYN' TO BE          *
      *       PASSED TO IT IN 5,0 FORMAT.IF THE ABOVE FIELD IS LESS   *
      *       THAN 1 IT RETURNS 1 IN FIELD '@@RTN'.THE MAIN PROGRAM   *
      *       SHOULD CHECK FOR THIS CONDITION AND DO THE NECESSARY.   *
      *       IF '@@RTN' IS NOT EQUAL TO 1 IT RETURNS THE FIELD       *
      *       '@@VDT'  IN 'YYYYMMDD' FORMAT.                          *
      *                                                               *
      * NOTE: FIELD TO BE DEFINED BY EXTERNAL ROUTINE IS
      *                                                               *
      *       1) @@DAYN   LENGTH 5,0.                                 *
      *                                                               *
      *       FIELDS USED AND ALREADY DEFINED IN THE ROUTINE ARE:     *
      *                                                               *
      *       1) @@VDT    LENGTH 8,0 DEFINED BY A DS.                 *
      *       2) @@RTN    LENGTH 1,0.                                 *
      *       3) @@I      LENGTH 2,0 USED TO ACCESS ARRAY @YD         *
      *       4) @@J      LENGTH 2,0 USED TO ACCESS ARRAY @MD         *
      *       5) @@Z71Y   LENGTH 4,0 DEFINED BY A DS.                 *
      *       6) @@RDAY   LENGTH 5,0.                                 *
      *       7) @@LEAP   LENGTH 1,0.
      *                                                               *
      *       INDICATORS USED ARE:                                    *
      *                                                               *
      *       1) 80       CHECK FOR LOW AND EQUAL ON ARRAY @YD        *
      *       2) 81       CHECK FOR LOW ON ARRAY @MD.                 *
      *                                                               *
      * INPUT FIELD:       @@DAYN                                     *
      *                                                               *
      * OUTPUT FIELD:      @@VDT                                      *
      *                                                               *
      * WORK FIELDS:       @@RTN                                      *
      *                    @@Z71Y                                     *
      *                    @@RDAY                                     *
      *                    @@LEAP                                     *
      *                    @@I                                        *
      *                    @@J                                        *
      *                                                               *
      * ARRAYS USED:       @YD COMPILE TIME ARRAY.
      *                    @MD COMPILE TIME ARRAY.
      *
     C*****************************************************************
     C*
     C           ZA0710    BEGSR
     C*
     C                     SETOF                     8081
     C                     Z-ADD0         @@RTN   10
     C                     Z-ADD0         @@VDT
     C                     Z-ADD1         @@I     20
     C                     Z-ADD1         @@J     20
     C                     Z-ADD1         @@LEAP  10
     C*
     C           @@DAYN    IFLT 1
     C                     Z-ADD1         @@RTN
     C                     GOTO ZA0719
     C                     END
     C*
     C* DIVISION TO DETERMINE WETHER LEAP YEAR.
     C*
     C           @@DAYN    DIV  1461      @@Z71Y
     C                     MVR            @@RDAY  50
     C*
     C* CALCULATING YEAR.
     C*
     C           @@Z71Y    MULT 4         @@Z71Y
     C                     ADD  1972      @@Z71Y
     C*
     C* CHECKING IF YEAR IS GREATER THAN OR EQUAL TO 2100
     C*
     C           @@Z71Y    IFGE 2100
     C                     ADD  @@SSY2    @@RDAY
     C                     END
     C*
     C* LOKUP ARRAY @YD TO SEE HOW MANY YEARS OF A FOUR YEAR CYCLE
     C* HAVE PASSED.
     C*
     C           @@RDAY    LOKUP@YD,@@I                8080
     C*
     C* IF YEAR IS A LEAP YEAR SSLEAP IS SET TO ZERO.
     C*
     C           *IN80     IFEQ '0'
     C                     Z-ADD0         @@LEAP
     C                     END
     C*
     C* ADD INDEX TO YEAR TO GIVE CORRECT YEAR AND ADJUST '@@RDAY'.
     C*
     C           @@LEAP    IFEQ 1
     C           @@RDAY    SUB  @YD,@@I   @@RDAY
     C                     ADD  @@I       @@Z71Y
     C                     END
     C*
     C* PROCESSING FOR A LEAP YEAR.
     C*
     C           @@LEAP    IFEQ 0
     C*
     C* IF '@@RDAY' = 60 DATE MUST BE 29TH OF FEBRUARY.
     C*
     C           @@RDAY    IFEQ 60
     C                     Z-ADD29        @@Z71D
     C                     Z-ADD2         @@Z71M
     C                     GOTO ZA0711
     C                     END
     C*
     C* IF '@@RDAY' > 60 DATE IS AFTER 29TH OF FEBRUARY,CONVERSION CAN
     C* PROCEED AS USUAL AFTER SUBTRACTING THE EXTRA DAY FOR THE LEAP
     C* YEAR. NOTE : '@@RDAY' < 60 CONVERSION PROCEEDS AS USUAL.
     C*
     C           @@RDAY    IFGT 60
     C           @@RDAY    SUB  1         @@RDAY
     C                     END
     C*
     C                     END
     C*
     C* IF DAY '@@DAYN' IS EXACTLY DIVISIBLE BY 1461 (NUMBER OF DAYS
     C* IN 4 YEARS) THEN DATE MUST BE LAST DAY OF PREVIOUS FOUR YEAR
     C* GROUP.
     C*
     C           @@RDAY    IFEQ 0
     C                     Z-ADD31        @@Z71D
     C                     Z-ADD12        @@Z71M
     C                     SUB  1         @@Z71Y
     C                     GOTO ZA0711
     C                     END
     C*
     C* LOOK UP ARRAY ARRAY @MD TO DETERMINE WHICH MONTH '@@RDAY'
     C* OCCURS IN
     C*
     C           @@RDAY    LOKUP@MD,@@J                81
     C                     Z-ADD@@J       @@Z71M
     C           @@RDAY    SUB  @MD,@@J   @@Z71D
     C*
     C* DS @@VDT  IS RETURNED IN YYYYMMDD FORMAT
     C*
     C           ZA0711    TAG
     C*
     C                     MOVE @@Z71Y    @@YR
     C*
     C           ZA0719    ENDSR
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       TITLE:DETERMINE NEXT WORKING DAY.                       *
     C*                                                               *
     C*       SUBROUTINE ZA0730 EXPECTS FIELD '@@DTIN' TO BE          *
     C*       PASSED TO IT IN 'YYYYMMDD' FORMAT.IT THEN DETERMINES    *
     C*       THE NEXT WORKING DAY AND RETURNS.                       *
     C*                                                               *
     C* INPUT  :@@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)*
     C*         @@CCY  CURRENCY CODE   - IN FORMAT(3A)                *   S01166
     C*                                                               *
     C* OUTPUT :@@VDT  DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)*
     C*                                                               *
     C* USES :   @@MDNO MIDAS DAY NO USED BY SR ZA0680                *
     C*          @@DAYN MIDAS DAY NO USED BY SR ZA0710                *
     C***********@@MNO**MIDAS*DAY*NO*USED*BY*SR*ZA0830*****************   S01195
     C*          ZDAYNO MIDAS DAY NO USED BY SR ZA0830                *   S01195
     C***********@@HIND*HOLIDAY*IND*RETURNED*BY*ZA0830*****************   S01195
     C*          ZIND   HOLIDAY IND.RETURNED BY ZCHKH                 *   S01195
     C*          ZCCY   CURRENCY FIELD USED BY ZCHKH                  *   S01195
     C*          ZLOC   LOCATION CODE FOR CURRENCY USED BY ZCHKH      *   S01195
     C*          BJSLCD SYSTEM LOCATION CODE FROM SDBANKPD            *   S01195
     C*                                                               *
     C*****************************************************************
     C           ZA0730    BEGSR
     C*
     C* CONVERT YYYYMMDD FORMAT TO MIDAS DAY NO.
     C*
     C                     EXSR ZA0680
     C*
      * Set up location code as system location and currency code         S01195
      * for input to ZCHKH holiday routine                                S01195
     C                     MOVEL@@CCY     ZCCY                            S01195
     C                     MOVELBJSLCD    ZLOC                            S01195
      *
     C           ZA0731    TAG
     C*
     C                     ADD  1         @@MDNO  50
     C*
     C* CHECK IF DAY NO. IS A HOLIDAY          .
     C*
     C**********           Z-ADD@@MDNO    @@MNO   50                      S01195
     C                     Z-ADD@@MDNO    ZDAYNO                          S01195
     C*
     C**********           EXSR ZA0830                                    S01195
     C                     EXSR ZCHKH                                     S01195
     C*
     C********** @@HIND    IFEQ 'H'                                       S01195
     C           ZIND      IFEQ 'H'                                       S01195
     C                     GOTO ZA0731
     C                     END
     C*
     C* CONVERT MIDAS DAY NO. TO YYYYMMDD FORMAT.
     C*
     C                     Z-ADD@@MDNO    @@DAYN  50
     C*
     C                     EXSR ZA0710
     C*
     C           ZA0739    ENDSR                                       **
     C/EJECT
     C*******************************************************************
     C*
     C* ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO
     C*          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)
     C*
     C* CALLED BY :
     C*
     C* CALLS :
     C*
     C* INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
     C*
     C* OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)
     C*
     C* USES :   @@CC   NUMBER OF CENTURIES IN DATE
     C*          @@DAY  DAY NUMBER
     C*          @@REM  REMAINDER FROM DIVIDE
     C*          @@MTH  MONTH NUMBER
     C*          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 MONTH
     C*          @@WK2  WORK FIELD (2,0)
     C*          @@WK5  WORK FIELD (5,0)
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @@YY   YEAR (2 CHARACTER)
     C*          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 A FOUR YEAR PERIOD
     C*
     C*******************************************************************
     C*
     C           ZA0680    BEGSR
     C*
     C**  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
     C*
     C**   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
     C*
     C**  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C           @@YYYY    ADD  28        @@WK2
     C*
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
     C*
     C**  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          B1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C**  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
     C*
     C**  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
     C*
     C**  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
     C*
     C           ZA0689    ENDSR                           **ZA0689 TAG**
     C/EJECT
     C********************************************************************S01195
     C**********                                                          S01195
     C**ZA0830*- THIS SUBROUTINE FINDS OUT WHETHER A PARTICULAR DAY       S01195
     C********** IS A HOLIDAY IN A PARTICULAR CURRENCY                    S01195
     C**********                                                          S01195
     C**CALLED*BY :                                                       S01195
     C**********                                                          S01195
     C**CALLS*:*                                                          S01195
     C**********                                                          S01195
     C**INPUT**: @@MNO  MIDAS DAY NUMBER 5N                               S01195
     C********** @@CCY  CURRENCY CODE 3A                                  S01166
     C**********                                                          S01195
     C**OUTPUT*: @@HIND HOLIDAY/WORKING DAY INDICATOR 1A                  S01195
     C**********                                                          S01195
     C**USES*:** @@MNO  MIDAS DAY NUMBER                                  S01195
     C********** @@CCY  CURRENCY CODE                                     S01166
     C********** @@ONCE FIRST TIME THROUGH INDICATOR                      S01195
     C********** @@CY1  FIRST HALF OF CURRENCY ARRAY                      S01195
     C********** @@CY2  SECOND HALF OF CURRENCY ARRAY                     S01195
     C********** @@MNO6 MIDAS NUMBER WITH TRAILING BLANK                  S01195
     C********** @@HIND HOLIDAY/WORKING DAY INDICATOR                     S01195
     C********** @@INEX INCLUDE/EXCLUDE INDICATOR                         S01195
     C**********                                                          S01195
     C********** INDICATORS                                               S01195
     C********** 80 RECORD NOT FOUND                                      S01195
     C********** 81 CURRENCY NOT FOUND ON RECORD                          S01195
     C**********                                                          S01195
     C********************************************************************S01195
     C********** ZA0830    BEGSR                                          S01195
     C**********                                                          S01195
     C***OPEN*CURRENCY/HOLIDAY FILE IF FIRST TIME THROUGH                 S01195
     C********** @@ONCE    IFNE 'Y'                        B1             S01195
     C**********           OPEN FDTABJLL                   *1             S01195
     C**********           MOVE 'Y'       @@ONCE  1        *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***BLANK*OUT ARRAY                                                  S01195
     C**********           MOVE *BLANKS   @@CY1                           S01195
     C**********           MOVE *BLANKS   @@CY2                           S01195
     C**********                                                          S01195
     C***ACCESS*TABLE ON FIRST KEY                                        S01195
     C**********           MOVEL@@MNO     @@MNO6  6                       S01195
     C**********           MOVE @@MNO6    SS0830 12                       S01195
     C**********           MOVEL'22    '  SS0830                          S01195
     C**********           MOVE '1'       SS0830                          S01195
     C********** SS0830    CHAINTABLETJF             80                   S01195
     C**********                                                          S01195
     C***IF*RECORD NOT FOUND OR DELETED                                   S01195
     C********** *IN80     IFEQ '1'                        B1             S01195
     C********** RECI      OREQ '*'                        *1             S01195
     C**********           MOVE 'W'       @@HIND           *1             S01195
     C**********           GOTO ZA0839                     *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***MOVE*FIRST 25 CURRENCIES TO ARRAY                                S01195
     C**********           MOVE HCCY      @@CY1                           S01195
     C**********                                                          S01195
     C***ACCESS*TABLE ON SECOND KEY                                       S01195
     C**********           MOVE '2'       SS0830                          S01195
     C********** SS0830    CHAINTABLETJF             80                   S01195
     C**********                                                          S01195
     C***IF*SECOND RECORD FOUND AND NOT DELETED                           S01195
     C********** *IN80     IFEQ '0'                        B1             S01195
     C********** RECI      ANDNE'*'                        *1             S01195
     C**********           MOVE HCCY      @@CY2            *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***SEARCH*ARRAY FOR INPUT CURRENCY                                  S01195
     C********** @@CCY     LOKUP@CY                      81               S01166
     C**********                                                          S01195
     C***IF*INPUT CURRENCY IS IN ARRAY                                    S01195
     C********** *IN81     IFEQ '1'                        B1             S01195
     C**********                                                          S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'E'                              S01195
     C********** INEX      IFEQ 'E'                        B*2            S01195
     C**********           MOVE 'W'       @@HIND  1        **2            S01195
     C**********           ELSE                            X*2            S01195
     C**********           MOVE 'H'       @@HIND           **2            S01195
     C**********           END                             E*2            S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***IF*INPUT CURRENCY IS NOT IN ARRAY                                S01195
     C********** *IN81     IFEQ '0'                        B1             S01195
     C**********                                                          S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'I'                              S01195
     C********** INEX      IFEQ 'I'                        B*2            S01195
     C**********           MOVE 'W'       @@HIND           **2            S01195
     C**********           ELSE                            X*2            S01195
     C**********           MOVE 'H'       @@HIND           **2            S01195
     C**********           END                             E*2            S01195
     C**********           END                             E1             S01195
     C********** ZA0839    ENDSR                                          S01195
     C/EJECT
     C/COPY ZSRSRC,ZCHKH                                                  S01195
     C/COPY ZSRSRC,ZACCH                                                  S01195
     C****************************************************************
     C*******                                                        *
     C**ZA0700 - THIS SUBROUTINE CALCULATES FORWARD POINTS           *
     C*******                                                        *
     C* CALLED BY:ZA0630                                             *
     C*******                                                        *
     C* CALLS :   ZA0680                                             *
     C******                                                         *
     C* INPUT  :  @@VDT  VALUE DATE                            (8N)  *
     C******      @@CCY  CURRENCY CODE                         (3A)  *    S01166
     C*           @@BYSL BUY/SELL RATE                         (1A)  *
     C*                                                              *
     C*                                                              *
     C* OUTPUT :  @@FPT  FORWARD POINTS                        (7N)  *
     C*                                                              *
     C*                                                              *
     C* ADDITIONAL WORK FIELDS USED WITHIN THIS ROUTINE :
     C*                                                              *
     C*           @@SPDT SPOT DATE             (MIDAS DAY NO.)       *
     C*           @@VDAT VALUE DATE            (MIDAS DAY NO.)       *
     C*           @@TPRD TYPE OF PERIOD        ('W' IS WEEKS)        *
     C*           @@PRD  NUMBER OF PERIODS                           *
     C*           @@FP1  FORWARD POINTS FROM 1ST REC. USED IN CALC.  *
     C*           @@FP2  FORWARD POINTS FROM 2ND REC. USED IN CALC.  *
     C*           @@D1   MIDAS DAY NO. CORRESPONDING WITH @@FP1      *
     C*           @@D2   MIDAS DAY NO. CORRESPONDING WITH @@FP2      *
     C*           @@WF1  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@WF2  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@MDNO MIDAS DAY NUMBER RETURNED FROM SR @@MDNO    *
     C*           @@DTWF DATE WORKFIELD                              *
     C*                                                              *
     C*                                                              *
     C*     AMEND NO. XXXXX                    DATE XX/XX/XX         *
     C*                                                              *
     C*****************************************************************
     C******
     C******     ZA0700    BEGSR
     C******
     C****Find first record on file for currency.
     C******               MOVE *LOVAL    @@DTWF  80
     C******
     C****Load key used to access LF/FXCCYPLL.
     C******     CCYLOW    KLIST
     C******               KFLD           @@CCY                           S01166
     C******               KFLD           @@DTWF
     C*******    CCYLOW    SETLLFXCCYPLL
     C******               READ FXCCYPLL                 81
     C******
     C** If currency for record has not been found
     C** then there is a database error.
     C******     @@CCY     IFNE XPCCY                      B1             S01166
     C******               MOVEL'FXCCYPLL'DBFILE           *1
     C******               MOVEL'924'     DBASE            ***************
     C******               MOVEL@@CCY     DBKEY            *             *S01166
     C******               MOVE '1'       *INU7            * DBERROR 924 *
     C******               MOVE '1'       *INU8            *             *
     C******               GOTO ZA0709                     ***************
     C******               END                             E1
     C*******
     C** If the value date is spot date , or before the first record
     C** on file for the currency then the points are zero.
     C******
     C******     @@VDT     IFEQ SPDT                       B1
     C*****      @@VDT     ORLT XPPRDD                     *1
     C*******              Z-ADD0         @@FPT   72       *1
     C******               GOTO ZA0709                     *1
     C******               END                             E1
     C******
     C****Load key used to access LF/FXCCYPLL.
     C******     CCYVDT    KLIST
     C******               KFLD           @@CCY                           S01166
     C******               KFLD           @@VDT
     C******     CCYVDT    SETLLFXCCYPLL
     C******               READ FXCCYPLL                 81
     C******
     C** If currency has not been found check previous record.
     C******     @@CCY     IFNE XPCCY                       B1            S01166
     C******     *IN81     OREQ '1'                         *1
     C******               GOTO ZA0708                      *1
     C******               END                              E1
     C******
     C** Find midas day number of value date.
     C******               Z-ADD@@VDT     @@DTIN
     C******               EXSR ZA0680
     C******               Z-ADD@@MDNO    @@VDAT  50
     C*
     C** IF    record with = date found
     C******     @@VDT     IFEQ XPPRDD                     B1
     C*
     C** IF Type of period is not 'D'
     C******     XPTPRD    IFNE 'D'                        B*2
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C*******    @@BYSL    IFEQ 'B'                        B**3
     C******     XRMD      ANDEQ@D                         ***3
     C******               MOVE XPLOPT    @@FPT            ***3
     C******               GOTO ZA0709                     ***3
     C******               END                             E**3
     C******
     C******     @@BYSL    IFEQ 'S'                        B**3
     C******     XRMD      ANDEQ@M                         ***3
     C*****                MOVE XPLOPT    @@FPT            ***3
     C******               GOTO ZA0709                     ***3
     C******               END                             E**3
     C******
     C******               MOVE XPHIPT    @@FPT            **2
     C******               GOTO ZA0709                     **2
     C******               END                             E*2
     C*
     C** The type of period is 'D'.
     C** Date is spot + 1 , spot - 1 or spot - 2 days.
     C** Linear interpolation or extrapolation used between one week
     C** rate & 0 on the spot date.
     C*
     C*
     C** Find the one week rate.
     C** Define search argument for chain to LF/FDCCYPLL.
     C******               MOVE 'W'       @@TPRD  1        *1
     C******               Z-ADD1         @@PRD   20       *1
     C******     WEEKRT    KLIST                           *1
     C******               KFLD           @@CCY            *1             S01166
     C******               KFLD           @@TPRD           *1
     C*****                KFLD           @@PRD            *1
     C*
     C** CHAIN TO FILE FDCCYPLL
     C******     WEEKRT    CHAINFDCCYPLL             80    *1
     C******     XPDLTF    IFEQ '*'                        B*2
     C******               MOVE '1'       *IN80            **2
     C******               END                             E*2
     C*
     C** DEAL WITH DATA BASE ERROR
     C******     *IN80     IFEQ '1'                        B1
     C******               MOVEL'FDCCYPLL'DBFILE           *1
     C*******              MOVEL'923'     DBASE            ***************
     C******               MOVEL@@CCY     DBKEY            *             *S01166
     C******               MOVE '1'       *INU7            * DBERROR 923 *
     C******               MOVE '1'       *INU8            *             *
     C******               GOTO ZA0709                     ***************
     C******               END                             E1
     C******
     C******
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C******     @@BYSL    IFEQ 'B'                        B*2
     C*******    XRMD      ANDEQ@D                         **2
     C******               MOVE XPLOPT    @@FP2   72       **2
     C*
     C******               ELSE                            X*2
     C******     @@BYSL    IFEQ 'S'                        B**3
     C*******    XRMD      ANDEQ@M                         ***3
     C******               MOVE XPLOPT    @@FP2            ***3
     C*
     C******               ELSE                            X**3
     C******               MOVE XPHIPT    @@FP2            ***3
     C******               END                             E**3
     C******               END                             E*2
     C******
     C** Find 1 week date & spot date as a day number.
     C******               Z-ADDXPPRDD    @@DTIN           *1
     C*******              EXSR ZA0680                     *1
     C******               Z-ADD@@MDNO    @@D2    50       *1
     C******
     C******               Z-ADDSPDT      @@DTIN           *1
     C*******              EXSR ZA0680                     *1
     C******               Z-ADD@@MDNO    @@SPDT  50       *1
     C******
     C*******
     C** Forward points can now be calculated.
     C******     @@VDAT    SUB  @@SPDT    @@WF1  158       *1
     C*******    @@FP2     MULT @@WF1     @@WF1            *1
     C*****      @@D2      SUB  @@SPDT    @@WF2   80       *1
     C*******    @@WF1     DIV  @@WF2     @@FPT            *1
     C******               GOTO ZA0709                     *1
     C******
     C******               END                             E1
     C*
     C*
     C** IF    record with > date found
     C*******    XPPRDD    IFGT @@VDT                      B1
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C*******    @@BYSL    IFEQ 'B'                        B*2
     C******     XRMD      ANDEQ@D                         **2
     C******               MOVE XPLOPT    @@FP2   72       **2
     C****
     C****                 ELSE                            X*2
     C******     @@BYSL    IFEQ 'S'                        B**3
     C****       XRMD      ANDEQ@M                         ***3
     C****                 MOVE XPLOPT    @@FP2            ***3
     C****
     C****                 ELSE                            X**3
     C****                 MOVE XPHIPT    @@FP2            ***3
     C****                 END                             E**3
     C****                 END                             E*2
     C****
     C** Find day number of date.
     C****                 Z-ADDXPPRDD    @@DTIN           *1
     C****                 EXSR ZA0680                     *1
     C****                 Z-ADD@@MDNO    @@D2    50       *1
     C****
     C** READ PREVIOUS record on LF/FXCCYPLL
     C****                 READPFXCCYPLL               8180*1
     C****
     C** IF read prior was unsuccessful then there is a database error.
     C****       *IN80     IFEQ '1'                        B*2
     C****       *IN81     OREQ '1'                        **2
     C****                 MOVEL'FXCCYPLL'DBFILE           **2
     C****                 MOVEL'927'     DBASE            ***************
     C****                 MOVE '1'       *INU7            *             *
     C****                 MOVE '1'       *INU8            * DBERROR 927 *
     C****                 GOTO ZA0709                     *             *
     C****                 END                             E*2************
     C****
     C****       @@BYSL    IFEQ 'B'                        B*2
     C****       XRMD      ANDEQ@D                         **2
     C****                 MOVE XPLOPT    @@FP1   72       **2
     C****
     C****                 ELSE                            X*2
     C****       @@BYSL    IFEQ 'S'                        B**3
     C****       XRMD      ANDEQ@M                         ***3
     C****                 MOVE XPLOPT    @@FP1            ***3
     C****
     C****                 ELSE                            X**3
     C****                 MOVE XPHIPT    @@FP1            ***3
     C****                 END                             E**3
     C****                 END                             E*2
     C****
     C** Find day number of date.
     C****                 Z-ADDXPPRDD    @@DTIN           *1
     C****                 EXSR ZA0680                     *1
     C****                 Z-ADD@@MDNO    @@D1    50       *1
     C****
     C** Forward points can now be calculated.
     C****       @@FP2     SUB  @@FP1     @@WF1            *1
     C****       @@VDAT    SUB  @@D1      @@WF2            *1
     C****       @@WF1     MULT @@WF2     @@WF1            *1
     C****       @@D2      SUB  @@D1      @@WF2            *1
     C****       @@WF1     DIV  @@WF2     @@WF1            *1
     C********** @@WF1     ADD  @@FP1     @@FPT            *1      FE0106
     C****       @@WF1     ADD  @@FP1     @@FPT     H      *1      FE0106
     C****                 GOTO ZA0709                     *1
     C****
     C****                 END                             E1
     C****
     C** No record with > or = date has been found at this stage
     C** of processing so the points on the furthest forward
     C** record are used.
     C** Find the furthest forward record
     C****
     C** READ PREVIOUS record on LF/FXCCYPLL
     C****       ZA0708    TAG
     C****                 MOVE *HIVAL    @@VDT
     C****       CCYVDT    SETGTFXCCYPLL
     C****                 READPFXCCYPLL               8081
     C****       @@CCY     IFNE XPCCY                      B1             S01166
     C****                 MOVE '1'       *IN80            *1
     C****                 END                             E1
     C****
     C** IF read prior was unsuccessful then there is a database error.
     C****       *IN80     IFEQ '1'                        B1
     C****       *IN81     OREQ '1'                        *1
     C****                 MOVEL'FXCCYPLL'DBFILE           ***************
     C****                 MOVEL'928'     DBASE            *             *
     C****                 MOVE '1'       *INU7            * DBERROR 928 *
     C****                 MOVE '1'       *INU8            *             *
     C****                 GOTO ZA0709                     ***************
     C****                 END                             E1
     C****
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C****       @@BYSL    IFEQ 'B'                        B1
     C****       XRMD      ANDEQ@D                         *1
     C****                 MOVE XPLOPT    @@FPT            *1
     C****                 GOTO ZA0709                     *1
     C****                 END                             E1
     C****
     C****       @@BYSL    IFEQ 'S'                        B1
     C****       XRMD      ANDEQ@M                         *1
     C****                 MOVE XPLOPT    @@FPT            *1
     C****                 GOTO ZA0709                     *1
     C****                 END                             E1
     C*
     C****                 MOVE XPHIPT    @@FPT
     C*
     C****                 GOTO ZA0709
     C*
     C** Unexecuted processing to define fields used by this subroutine.
     C****                 MOVE @@MDNO    @@MDNO  50
     C*
     C****       ZA0709    ENDSR
     C/EJECT                                                              S01166
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE ZA0880 - CONVERT SHORT RATE TO DISPLAY            *
     C*                                                               *
     C*                      THIS SUBROUTINE RECEIVES A 13/8 INPUT    *
     C*                      RATE @@RIN & OUTPUTS A 8A RATE WITH      *
     C*                      DECIMAL SEPERATOR @G                     *   S01166
     C*                                                               *
     C*  CALLED BY   :                                                *
     C*                                                               *
     C*  INPUT       : @A     - INPUT RATE ARRAY  (13A)               *
     C*  OUTPUT      : @G     - OUTPUT RATE ARRAY (8A)                *   S01166
     C*                                                               *
     C*  WORK FIELDS : @@1    - ARRAY INDEX FOR @@C1 (2,0)            *
     C*              : @@B    - ARRAY INDEX FOR @@C2 (1,0)            *
     C*                                                               *
     C*   INDICATOR  :  82    - LOOKUP ARRAY                          *
     C*                                                               *
     C*****************************************************************
     C*
     C           ZA0880    BEGSR
     C*
     C**  LOKUP FOR FIRST NON-ZERO ELEMENT.
     C                     Z-ADD1         @@1     20
     C           *ZERO     LOKUP@@AA,@@1             82                   S01166
     C*
     C**  IF NON-ZERO ELEMENT FOUND AFTER POSITION 5 RESET INDEX TO 5
     C           @@1       IFGT 5                          B1
     C                     Z-ADD5         @@1              *1
     C                     END                             E1
     C*
     C**  RESET INDEX TO OUTPUT RATE ARRAY
     C                     Z-ADD*ZERO     @@B     10
     C*
     C**  LOAD 8 POSITION OUTPUT ARRAY
     C           @@B       DOUEQ8                          B1
     C*
     C**  INCREMENT INDEX AND MOVE INPUT ELEMENT TO OUTPUT RATE ARRAY
     C                     ADD  1         @@B              *1
     C                     MOVE @@AA,@@1  @G,@@B           *1             S01166
     C*
     C**  IF INDEX TO INPUT RATE ARRAY = 5 MOVE DEC. SEP. TO OUTPUT
     C**  ARRAY AND SETON INDICATOR TO STOP THIS BEING REPEATED.
     C           @@1       IFEQ 5                          B*2
     C*
     C                     ADD  1         @@B              **2
     C*********************MOVE*IDDCSP****@G,@@B*************2*****S01166 S01319
     C                     MOVE BNDCSP    @G,@@B           **2            S01319
     C                     END                             E*2
     C*
     C                     ADD  1         @@1              *1
     C*
     C                     END                             E1
     C                     Z-ADD8         @@B
     C           @G,@@B    DOWEQ'0'                                       S01166
     C                     MOVE ' '       @G,@@B                          S01166
     C                     SUB  1         @@B
     C                     END
     C           ZA0889    ENDSR                           ***ZA0889***
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*    #BB CARRIES OUT END PROCESSING.                           *
     C*        CALLED BY  : #B                                       *
     C*        CALLS      : #Z                                       *
     C*                   : #ZA                                      *    S01166
     C*                   : #ZC                                      *    S01166
     C*                                                              *    S01166
     C*        WORK FIELDS: @WORK  - D/S TO HOLD ENQUIRY DATA        *
     C*                   : @X     - D/S OCUR                        *
     C*                   : @NET   - D/S FIELD NET CURRENCY          *
     C*                   : @NETS  - D/S FIELD NET CURRENCY SIGN     *
     C*                   : @DBCE  - D/S FIELD DEALT BCE             *
     C*                   : @DBCES - D/S FIELD DEALT BCE SIGN        *
     C*                   : @AVRAT - D/S FIELD AVERAGE RATE          *
     C*                   : @INPUT - AMOUNT INPUT FIELD TO #ZA       *
     C*                   : @SIGN  - SIGN WORK FIELD                 *
     C*                   : @NETX  - NET CURRENCY WORK FIELD         *
     C*                   : @DBCEX - DEALT BCE WORK FIELD            *
     C*                                                              *
     C****************************************************************
     C           #BB       BEGSR
     C*
     C**  INCREMENT OCUR
     C                     ADD  1         @X
     C           @X        OCUR @WORK                                     S01166
     C                     MOVE *BLANKS   @WORK                           S01166
     C                     MOVE '+'       @NETS                           S01166
     C                     MOVE '+'       @DBCES                          S01166
     C                     MOVE '+'       @DEALS                          S01166
     C                     MOVE '+'       @FPTS                           S01166
     C*
     C**  EDIT TOTAL NET CURRENCY
     C**  DO THIS EVEN IF ZERO TO OVERWRITE PREVIOUS VALUES               E37006
     C*                                                                   E37006
     C***********FOTNTP    IFNE *ZERO                      B1             E37006
     C                     Z-ADDFOTNTP    FPDYNM           *1
     C                     EXSR #Z                         *1
     C***********          END                             E1             E37006
     C*
     C**  EDIT TOTAL BASE CURRENCY EQUIVALENT
     C**  DO THIS EVEN IF ZERO TO OVERWRITE PREVIOUS VALUES               E37006
     C*                                                                   E37006
     C***********FOTDPE    IFNE *ZERO                      B1             E37006
     C                     Z-ADDFOTDPE    FPDYDE           *1
     C                     EXSR #Z                         *1
     C***********          END                             E1             E37006
     C*
     C**  SUBTRACT ACCUMULATED NET FROM TOTAL NET ON FILE FOR REMAINDER
     C**  ALLOW FOR SIGN OF TOTAL, @NETS IS SIGN FOR @NET
     C           *LIKE     DEFN @NET      @NETWK
     C           *LIKE     DEFN @NETU     @NETWU
     C           @NETS     IFEQ '-'                        B1
     C                     Z-SUB@NET      @NETWK           *1
     C                     Z-SUB@NETU     @NETWU           *1
     C                     ELSE                            X1
     C                     Z-ADD@NET      @NETWK           *1
     C                     Z-ADD@NETU     @NETWU           *1
     C                     END                             E1
     C           @NETWU    SUB  @NETAU    @NETXU
     C           @NETWK    SUB  @NETA     @NETX
     C*
     C**  SUB ACCUMULATED DBCE FROM TOTAL DBCE ON FILE FOR REMAINDER
     C**  ALLOW FOR SIGN OF TOTAL
     C           *LIKE     DEFN @DBCE     @DBCWK
     C           *LIKE     DEFN @DBCEU    @DBCWU
     C           @DBCES    IFEQ '-'                        B1
     C                     Z-SUB@DBCEU    @DBCWU           *1
     C                     Z-SUB@DBCE     @DBCWK           *1
     C                     ELSE                            X1
     C                     Z-ADD@DBCE     @DBCWK           *1
     C                     Z-ADD@DBCEU    @DBCWU           *1
     C                     END                             E1
     C           @DBCWK    SUB  @BCEA     @DBCEX
     C           @DBCWU    SUB  @BCEAU    @DBCXU
     C*
     C**  IF EXCHANGE RATE MULT/DIV IND. = 'D' DIVIDE TOTAL NET CURR/
     C**  TOTAL DEALT BCE - ELSE DIVIDE TOTAL DEALT BCE/TOTAL NET CURR
     C           @NETU     IFEQ *ZERO                      B1
     C           @DBCEU    OREQ *ZERO                      B1
     C*
     C                     Z-ADD*ZERO     @AVRAT           *1
     C*
     C                     ELSE                            X1
     C********** XRMD      IFEQ @D                         B*2            S01194
     C           A6MDEX    IFEQ @D                         B*2            S01194
     C********** @NETU     DIV  @DBCEU    @AVRAT           **2
     C           @NETU     DIV  @DBCEU    @AVRAT    H      **2
     C                     ELSE                            X*2
     C********** @DBCEU    DIV  @NETU     @AVRAT           **2
     C           @DBCEU    DIV  @NETU     @AVRAT    H      **2
     C                     END                             E*2
     C                     END                             E1
     C*                                                                   S01166
     C                     ADD  1         @X
     C           @X        OCUR @WORK                                     S01166
      *
      **  Clear this (8th) occurance of WORK, prevent DDE.
     C                     MOVE *BLANKS   @WORK                           S01166
     C                     MOVE '+'       @NETS
     C                     MOVE '+'       @DBCES
     C                     MOVE '+'       @DEALS
     C                     MOVE '+'       @FPTS
     C*                                                                   S01166
     C*  EDIT THE REM VALUES                                              S01166
     C*                                                                   S01166
     C                     Z-ADD@NETXU    @INPUT                          S01166
     C                     EXSR #ZA                                       S01166
     C                     Z-ADD@DBCXU    @INPUT                          S01166
     C                     EXSR #ZC                                       S01166
     C*                                                                   S01166
     C**  IF THE RESULT IS > THAN ZERO MOVE '+' TO SIGN FIELD             S01166
     C           @NETX     IFGT *ZERO                      B1
     C                     Z-ADD@NETX     @NET             *1
     C                     MOVE @PLUS     @NETS            *1
     C                     END                             E1
     C*
     C           @NETX     IFLT *ZERO                      B1
     C                     Z-SUB@NETX     @NET             *1
     C                     MOVE @MINUS    @NETS            *1
     C                     END                             E1
     C*
     C**  IF THE RESULT IS > THAN ZERO MOV
     C********** @DBCEX    IFGT *ZERO                      B1
     C           @DBCEX    IFGE *ZERO                      B1
     C**************       MOVE @MINUS    @DBCES           *1
     C                     MOVE @PLUS     @DBCES           *1
     C                     Z-ADD@DBCEX    @DBCE            *1
     C                     ELSE                            X1
     C                     MOVE @MINUS    @DBCES           *1
     C                     Z-SUB@DBCEX    @DBCE            *1
     C                     END                             E1
     C*
     C*********  @DBCEX    IFLE *ZERO                      B1
     C********             Z-SUB@DBCEX    @DBCE            *1
     C**********           MOVE @PLUS     @DBCES           *1
     C*********            END                             E1
     C*
     C**  IF EXCHANGE RATE MULT/DIV IND. = 'D' DIVIDE REM   NET CURR/
     C**  REM   DEALT BCE - ELSE DIVIDE REM   DEALT BCE/REM   NET CURR
     C***********@NET      IFEQ *ZERO                      B1
     C***********@DBCE     OREQ *ZERO                      B1
     C********   @NETU     IFEQ *ZERO                      B1
     C********   @DBCEU    OREQ *ZERO                      B1
     C           @NETXU    IFEQ *ZERO                      B1
     C           @DBCXU    OREQ *ZERO                      B1
     C*
     C                     Z-ADD*ZERO     @AVRAT           *1
     C*
     C                     ELSE                            X1
     C********** XRMD      IFEQ @D                         B*2            S01194
     C           A6MDEX    IFEQ @D                         B*2            S01194
     C***********@NET      DIV  @DBCE     @AVRAT           **2
     C********** @NETU     DIV  @DBCEU    @AVRAT           **2
     C********** @NETXU    DIV  @DBCXU    @AVRAT           **2
     C           @NETXU    DIV  @DBCXU    @AVRAT           **2
     C                     ELSE                            X*2
     C***********@DBCE     DIV  @NET      @AVRAT           **2
     C********** @DBCEU    DIV  @NETU     @AVRAT           **2
     C********** @DBCXU    DIV  @NETXU    @AVRAT           **2
     C           @DBCXU    DIV  @NETXU    @AVRAT           **2
     C                     END                             E*2
     C                     END                             E1
     C*                                                                   S01166
     C**  CHECK AVERAGE RATE FOR NEGATIVE
     C           @AVRAT    IFLT *ZERO                      B1
     C                     Z-SUB@AVRAT    @AVRAT           *1
     C                     END                             E1
     C*                                                                   S01166
     C                     Z-ADD@AVRAT    @@IRAT                          S01166
     C                     EXSR ZA0760                                    S01166
     C                     MOVE @@ORAT    @AR,@X                          S01166
     C*                                                                   S01166
     C***********DDCCY*****IFEQ*IDCYDL*********************B1*******S01166S01319
     C           DDCCY     IFEQ BNCYDL                     B1             S01319
     C                     MOVEA*BLANKS   @AR,1            *1             S01166
     C                     MOVEA*BLANKS   @DB,1            *1             S01166
     C                     MOVEA*BLANKS   @DL,1            *1             S01166
     C                     MOVEA*BLANKS   @FP,1            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C* MOVE DATA TO DISPLAY FILE                                         S01166
     C*                                                                   S01166
     C                     MOVE @NT,1     DDNONT                          S01166
     C                     MOVE @AR,1     DDNOAR                          S01166
     C                     MOVE @DB,1     DDNODB                          S01166
     C                     MOVE @NT,2     DDTYNT                          S01166
     C                     MOVE @AR,2     DDTYAR                          S01166
     C                     MOVE @DB,2     DDTYDB                          S01166
     C                     MOVE @DL,2     DDTYDL                          S01166
     C                     MOVE @FP,2     DDTYMT                          S01166
     C                     MOVE @NT,3     DDT1NT                          S01166
     C                     MOVE @AR,3     DDT1AR                          S01166
     C                     MOVE @DB,3     DDT1DB                          S01166
     C                     MOVE @DL,3     DDT1DL                          S01166
     C                     MOVE @FP,3     DDT1MT                          S01166
     C                     MOVE @NT,4     DDT2NT                          S01166
     C                     MOVE @AR,4     DDT2AR                          S01166
     C                     MOVE @DB,4     DDT2DB                          S01166
     C                     MOVE @DL,4     DDT2DL                          S01166
     C                     MOVE @FP,4     DDT2MT                          S01166
     C                     MOVE @NT,5     DDT3NT                          S01166
     C                     MOVE @AR,5     DDT3AR                          S01166
     C                     MOVE @DB,5     DDT3DB                          S01166
     C                     MOVE @DL,5     DDT3DL                          S01166
     C                     MOVE @FP,5     DDT3MT                          S01166
     C                     MOVE @NT,6     DDT4NT                          S01166
     C                     MOVE @AR,6     DDT4AR                          S01166
     C                     MOVE @DB,6     DDT4DB                          S01166
     C                     MOVE @DL,6     DDT4DL                          S01166
     C                     MOVE @FP,6     DDT4MT                          S01166
     C                     MOVE @NT,7     DDOPNT                          S01166
     C                     MOVE @AR,7     DDOPAR                          S01166
     C                     MOVE @DB,7     DDOPDB                          S01166
     C                     MOVE @NT,8     DDRENT                          S01166
     C                     MOVE @AR,8     DDREAR                          S01166
     C                     MOVE @DB,8     DDREDB                          S01166
     C*                                                                   S01166
     C**  MOVE DATA STRUCTURE FIELDS INTO DATA AREA MASK
     C*          1         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDNOST                          S01166
     C*          2         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDTODY                          S01166
     C*          3         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDTOD1                          S01166
     C*          4         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDTOD2                          S01166
     C*          5         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDTOD3                          S01166
     C*          6         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDTOD4                          S01166
     C*          7         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDOPEN                          S01166
     C*          8         OCUR @WORK                                     S01166
     C***                  MOVE @WORK     DDREM                           S01166
     C*                                                                   S01166
     C**  WRITE OUT DATA AREA MASK                                        S01166
     C***                  OUT  AMENQ1                                    S01166
     C*
     C**  SEND DATA TO CONTROL MODULE
     C***                  CALL 'CM0020'                                  S01166
     C***                  PARM @T        @TERM   1                       S01166
     C***                  PARM 'ER'      @EMID   2                       S01166
     C***                  PARM '1'       @SWER   1                       S01166
     C***                  PARM @ENQ      @ENQU   1                       S01166
     C***                  PARM '005'     @ENQN   3                       S01166
     C***                  PARM *BLANK    @PARM5  1                       S01166
     C*
     C           #BB9      ENDSR                           ****#BB9****
     C/EJECT                                                              S01166
     C****************************************************************    S01166
     C*                                                              *    S01166
     C*                                                              *    S01166
     C*     MIDAS/DRS - STANDING DATA MODULE                         *    S01166
     C*                                                              *    S01166
     C*     ZA0750 -  CONVERT AMOUNT TO DISPLAY -38                  *    S01166
     C*                                                              *    S01166
     C*                                                              *    S01166
     C*       CALLS:                                                 *    S01166
     C*                                                              *    S01166
     C*       INPUT: @@IAMT 15,0 (INPUT AMOUNT)                      *    S01166
     C*              @@CCY  3A   (INPUT CURRENCY)                    *    S01166
     C*              @@CRET 2,0  (NUMBER OF CHARACTERS TO RETURN)    *    S01166
     C*              @@CDP  1,0  (CURRENCY DECIMAL PLACES)           *    S01166
     C*                                                              *    S01166
     C*      OUTPUT: @@ADSP 21A    (AMOUNT TO DISPLAY)               *    S01166
     C*                                                              *    S01166
     C*        USES:                                                 *    S01166
     C*                                                              *    S01166
     C****************************************************************    S01166
     C*                                                                   S01166
     C           ZA0750    BEGSR                                          S01166
     C*                                                                   S01166
     C*          INITIALISE ARRAYS                                        S01166
     C*                                                                   S01166
     C                     MOVEA*BLANKS   @E                              S01166
     C                     MOVEA*BLANKS   @C                              S01166
     C*                                                                   S01166
     C*          MOVE SIGN TO DISPLAY AMOUNT                              S01166
     C*                                                                   S01166
     C           @@IAMT    IFGT 0                          B1             S01166
     C                     MOVE '+'       @E,21            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          AFTER '-' SIGN PLACED IN  @E CHANGE @@IAMT TO +VE        S01166
     C*                                                                   S01166
     C           @@IAMT    IFLT 0                          B1             S01166
     C                     MOVE '-'       @E,21            *1             S01166
     C                     Z-SUB@@IAMT    @@IAMT           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           @@IAMT    IFEQ 0                          B1             S01166
     C                     MOVE ' '       @E,21            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE INPUT AMOUNT TO @Q                                  S01166
     C*                                                                   S01166
     C                     MOVEA@@AMDS    @Q                              S01166
     C*                                                                   S01166
     C*          MOVE DECIMAL PORTION OF AMOUNT TO @E                     S01166
     C*                                                                   S01166
     C                     Z-ADD15        @@C     20                      S01166
     C                     Z-ADD20        @@D     20                      S01166
     C*                                                                   S01166
     C*                                                                   S01166
     C           20        SUB  @@CDP     @@MAX   20                      S01166
     C           @@D       DOWGT@@MAX                      B1             S01166
     C                     MOVE @Q,@@C    @E,@@D           *1             S01166
     C                     SUB  1         @@C              *1             S01166
     C                     SUB  1         @@D              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE DECIMAL SEPARATOR TO @E                             S01166
     C*                                                                   S01166
     C           @@CDP     IFNE 0                          B1             S01166
     C*********************MOVE*IDDCSP****@E,@@D************1*******S01166S01319
     C                     MOVE BNDCSP    @E,@@D           *1             S01319
     C                     SUB  1         @@D              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C* IF AMOUNT IS ZERO THEN MOVE A ZERO AND EXIT                       S01166
     C           @@IAMT    IFEQ 0                          B1             S01166
     C                     MOVE '0'       @E,@@D           *1             S01166
     C                     GOTO ZA0755                     *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          FIND POSITION OF LAST CHARACTER TO BE MOVED              S01166
     C*                                                                   S01166
     C                     Z-ADD1         @@E     20                      S01166
     C*                                                                   S01166
     C           @@E       DOWLT@@MAX                      B1             S01166
     C           @Q,@@E    ANDEQ'0'                        *1             S01166
     C                     ADD  1         @@E              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE INTEGER PORTION OF AMOUNT TO @E                     S01166
     C*                                                                   S01166
     C*                    Z-ADD0         @@CNT1  20                      S01166
     C*                    Z-ADD0         @@CNT2  20                      S01166
     C*                                                                   S01166
     C           @@C       DOWGT@@E                        B1             S01166
     C                     MOVE @Q,@@C    @E,@@D           *1             S01166
     C*                    ADD  1         @@CNT1           *1             S01166
     C                     SUB  1         @@C              *1             S01166
     C                     SUB  1         @@D              *1             S01166
     C*                                                                   S01166
     C*          INSERT THOUSAND SEPARATORS                               S01166
     C*                                                                   S01166
     C*          @@CNT1    DIV  3         @@RES   20       *1             S01166
     C*                    MVR            @@REMD  10       *1             S01166
     C*          @@REMD    IFEQ 0                          B*2            S01166
     C*          @@CNT2    ANDLT5                          **2            S01166
     C*                    MOVE IDTHSP    @E,@@D           **2            S01166
     C*                    ADD  1         @@CNT2           **2            S01166
     C*                    Z-ADD@@D       @@F     20       **2            S01166
     C*                    SUB  1         @@D              **2            S01166
     C*                    END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE LAST CHARACTER                                      S01166
     C*                                                                   S01166
     C                     MOVE @Q,@@C    @E,@@D                          S01166
     C*                                                                   S01166
     C*          IF NUMBER OF CHARACTERS MOVED IS GREATER THAN NUMBER     S01166
     C*        TO BE RETURNED DROP THOUSAND SEPARATORS TILL SATISFIED     S01166
     C*                                                                   S01166
     C*                    Z-ADD@@D       @@F     20                      S01166
     C*          22        SUB  @@D       @@CMOV  20                      S01166
     C*          @@CMOV    SUB  @@CRET    @@DIFF  20                      S01166
     C*          @@DIFF    IFGT 0                          B1             S01166
     C*                    DO   @@DIFF                     B*2            S01166
     C*                    Z-ADD1         @@G     20       **2            S01166
     C*                    Z-ADD2         @@H     20       **2            S01166
     C*          @@G       DOWLE21                         B**3           S01166
     C*                    MOVE @E,@@G    @C,@@H           ***3           S01166
     C*                    ADD  1         @@G              ***3           S01166
     C*                    ADD  1         @@H              ***3           S01166
     C*          @@G       IFEQ @@F                        B***4          S01166
     C*                    ADD  1         @@G              ****4          S01166
     C*                    END                             E***4          S01166
     C*                    END                             E**3           S01166
     C*                    MOVEA@C        @E               **2            S01166
     C*                    ADD  4         @@F              **2            S01166
     C*                    END                             E*2            S01166
     C*                    END                             E1             S01166
     C*                                                                   S01166
     C           ZA0755    TAG                                            S01166
     C*                                                                   S01166
     C*          MOVE @E TO DISPLAY FIELD                                 S01166
     C*                                                                   S01166
     C                     MOVEA@E        @@ADSP 21                       S01166
     C           ZA0759    ENDSR                                          S01166
     C****************************************************************    S01166
     C/EJECT                                                              S01166
     C****************************************************************    S01166
     C*                                                              *    S01166
     C*                                                              *    S01166
     C*     MIDAS/DRS - STANDING DATA MODULE                         *    S01166
     C*                                                              *    S01166
     C*     ZA0760 -  CONVERT RATE TO DISPLAY -38                    *    S01166
     C*                                                              *    S01166
     C*       CALLS: SUBROUTINE ZA0790                               *    S01166
     C*                                                              *    S01166
     C*       INPUT: @@IRAT 13,8N  (INPUT RATE)                      *    S01166
     C*              @@CCY1 3A     (INPUT CURRENCY 1)                *    S01166
     C*              @@CCY2 3A     (INPUT CURRENCY 2)                *    S01166
     C*              @@NDP1 1,0    (DECIMAL PLACES FOR CURRENCY 1)   *    S01166
     C*              @@NDP2 1,0    (DECIMAL PLACES FOR CURRENCY 2)   *    S01166
     C*                                                              *    S01166
     C*      OUTPUT: @@ORAT 14A    (OUTPUT RATE)                     *    S01166
     C*                                                              *    S01166
     C*        USES:                                                 *    S01166
     C*                                                              *    S01166
     C****************************************************************    S01166
     C*                                                                   S01166
     C           ZA0760    BEGSR                                          S01166
     C*                                                                   S01166
     C*          PUT INPUT RATE INTO @A & BLANKS INTO @B                  S01166
     C*                                                                   S01166
     C                     MOVEA@@RTDS    @A                              S01166
     C                     MOVEA*BLANKS   @B                              S01166
     C*                                                                   S01166
     C*          FIND IF EITHER CCY IS BASE                               S01166
     C*                                                                   S01166
     C           @@CCY     IFEQ *BLANKS                    B1             S01166
     C*********************MOVE*IDCYDL****@@CCY*************1*******S01166S01319
     C                     MOVE BNCYDL    @@CCY            *1             S01319
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          @@CCY2    IFEQ *BLANKS                    B1             S01166
     C*                    MOVE IDCYDL    @@CCY2           *1             S01166
     C*                    END                             E1             S01166
     C*                                                                   S01166
     C*          FIND HOW MANY DECIMAL PLACES TO REPORT/EDIT              S01166
     C*                                                                   S01166
     C***********@@CCY*****IFEQ*IDCYDL*********************B1*******S01166S01319
     C           @@CCY     IFEQ BNCYDL                     B1             S01319
     C                     MOVE @@NDP1    @@NDP   10       *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          @@CCY2    IFEQ IDCYDL                     B1             S01166
     C*                    MOVE @@NDP1    @@NDP   10       *1             S01166
     C*                    END                             E1             S01166
     C*                                                                   S01166
     C*          IF NEITHER CCY IS BASE - CALL SUBROUTINE ZA0790          S01166
     C*          RETURNS WITH NO. OF DECIMAL PLACES TO EDIT.              S01166
     C*                                                                   S01166
     C***********IDCYDL****IFNE*@@CCY**********************B1******S01166 S01319
     C           BNCYDL    IFNE @@CCY                      B1             S01319
     C*          IDCYDL    ANDNE@@CCY2                     *1             S01166
     C                     EXSR ZA0790                     *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE 4 LEFTMOST CHARACTERS FROM @A TO CORRESPONDING      S01166
     C*          POSITION IN @B - IF LEFTMOST CHARACTER IS '0' A BLANK    S01166
     C*          IS MOVED.                                                S01166
     C*                                                                   S01166
     C                     Z-ADD1         @@C     20                      S01166
     C                     Z-ADD1         @@D     20                      S01166
     C                     MOVE '0'       *IN81                           S01166
     C           @@C       DOWLT5                          B1             S01166
     C           *IN81     IFEQ '0'                        B*2            S01166
     C           @A,@@C    ANDEQ'0'                        **2            S01166
     C                     MOVE ' '       @B,@@C           **2            S01166
     C                     ELSE                            X*2            S01166
     C                     MOVE @A,@@C    @B,@@D           **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C*          SET FLAG ON IF LEFTMOST CHARACTER IS NON ZERO            S01166
     C*                                                                   S01166
     C           @A,@@C    IFNE '0'                        B*2            S01166
     C                     MOVE '1'       *IN81            **2            S01166
     C                     END                             E*2            S01166
     C                     ADD  1         @@C              *1             S01166
     C                     ADD  1         @@D              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          AFTER FIFTH CHARACTER IS MOVED - MOVE DECIMAL            S01166
     C*          SEPARATOR TO @B.                                         S01166
     C*                                                                   S01166
     C                     MOVE @A,@@C    @B,@@D                          S01166
     C                     ADD  1         @@C                             S01166
     C                     ADD  1         @@D                             S01166
     C*********************MOVE*IDDCSP****@B,@@D********************S01166S01319
     C                     MOVE BNDCSP    @B,@@D                          S01319
     C                     ADD  1         @@D                             S01166
     C*                                                                   S01166
     C*          MOVE REMAINING CHARACTERS STOPPING WHEN REMAINDER        S01166
     C*          =0 OR NO.OF DEC.PLACES NORMALLY QUOTED HAS BEEN          S01166
     C*          REACHED.                                                 S01166
     C*                                                                   S01166
     C                     Z-ADD13        @@E     20                      S01166
     C           5         ADD  @@NDP     LIMIT   20                      S01166
     C           @@E       DOWGTLIMIT                      B1             S01166
     C           @A,@@E    IFEQ '0'                        B*2            S01166
     C                     MOVE ' '       @A,@@E           **2            S01166
     C                     SUB  1         @@E              **2            S01166
     C                     ELSE                            X*2            S01166
     C                     Z-ADDLIMIT     @@E              **2            S01166
     C                     END                             E*2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C*          MOVE REMAIDER OF @A TO @B                                S01166
     C*                                                                   S01166
     C           @@D       DOWLT15                         B1             S01166
     C******     @@C       ANDLELIMIT                      B1             S01166
     C                     MOVE @A,@@C    @B,@@D           *1             S01166
     C                     ADD  1         @@C              *1             S01166
     C                     ADD  1         @@D              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** Coding to remove trailing zeros from rates                       S01166
     C                     Z-ADD14        @@E                             S01166
     C           @B,@@E    DOWEQ' '                        B1             S01166
     C                     SUB  1         @@E              *1             S01166
     C                     END                             E1             S01166
     C           @B,@@E    DOWEQ'0'                        B1             S01166
     C           @@E       ANDGT7                          B1             S01166
     C                     MOVE *BLANK    @B,@@E           *1             S01166
     C                     SUB  1         @@E              *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C                     MOVEA@B        @@ORAT 14                       S01166
     C           ZA0769    ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     F*****************************************************************   S01166
     F*                                                               *   S01166
     F*       TITLE:CALCULATE NO.OF DECIMALS FOR QUOTING A CROSS      *   S01166
     F*             RATE.                                             *   S01166
     F*                                                               *   S01166
     F********SUBROUTINE*ZA0790*EXPECTS*TWO*READ*OPERATIONS*TO***  S01166 S01194
     F********HAVE*BEEN*DONE*ON*LOGICAL*FILE*"FDCCYTLL"*AND*THE**  S01166 S01194
     F********FIELD*"NQDP*MOVED*INTO*@@NDP1*OR*@@NDP2*DEPENDING**  S01166 S01194
     F********ON*THE*READ*OPERATION.IT*ALSO*EXPECTS*THE*EXCHANGE***S01166 S01194
     F********RATE*TO*BE*MOVED*INTO*FIELD*@@IRAT.THE*ROUTINE*WILL**S01166 S01194
     F********THEN*RETURN*THE*NUMBER*OF*DECIMAL*PLACES*FOR*QUOTING*S01166 S01194
     F********A*CROSS*RATE*IN*FIELD*@@NDP.*************************S01166 S01194
     F*                                                               *   S01194
     F*       ZA0790.SR - INPUT IS NORMALLY QUOTED DEC. PLACES FOR    *   S01194
     F*       ONE OF TWO CURRENCIES CONCERNED AND EXCHANGE RATE       *   S01194
     F*       OBTAINED FROM PF/SDCURRPD VIA ACCESS OBJECT AOCURRR0    *   S01194
     F*       RETURNS NO. OF DECIMAL PLACES FOR QUOTING A CROSS RATE  *   S01194
     F*       IN FIELD @@NDP                                          *   S01194
     F*                                                               *   S01166
     F* NOTE: @@NDP1 , @@NDP2 AND @@NDP HAVE BEEN DEFINED AS 1,0.     *   S01166
     F*       @@IRAT HAS TO BEEN DEFINED AS 13,8.                     *   S01166
     F*                                                               *   S01166
     F****FDCCYTLLIF**E***********K********DISK******************* S01166 S01194
     F*--------*************************************************** S01166 S01194
     F***********KEY*******CHAINFDCCYTLL************************** S01166 S01194
      *                    -----                                      *   S01166
     F*****************************************************************   S01166
     C*                                                               *   S01166
     C*       FIELDS USED : @@NDP1 - NO.OF DEC.PLACES IN CURRENCY-1   *   S01166
     C*                     @@NDP2 - NO.OF DEC.PLACES IN CURRENCY-2   *   S01166
     C*                     @@IRAT - EXCHANGE RATE                    *   S01166
     C*                     @@NDP  - NO.OF DEC.PLACES IN CROSS RATE   *   S01166
     C*                                                               *   S01166
     C*       INPUT FIELDS: @@NDP1                                    *   S01166
     C*                     @@NDP2                                    *   S01166
     C*                     @@IRAT                                    *   S01166
     C*                                                               *   S01166
     C*       OUTPUT FIELD: @@NDP                                     *   S01166
     C*                                                               *   S01166
     C*   CHECKS MADE ARE :                                           *   S01166
     C*                                                               *   S01166
     C*   A) IF @@NDP1 = @@NDP2 = 5                                   *   S01166
     C*      THEN @@NDP = 5.                                          *   S01166
     C*   B) IF @@NDP1 *NE @@NDP2                                     *   S01166
     C*             OR                                                *   S01166
     C*      IF @@NDP1 = @@NDP2 AND *NE 5                             *   S01166
     C*      THEN                                                     *   S01166
     C*      1:- IF @@IRAT *GE 100                                    *   S01166
     C*          THEN @@NDP = 2.                                      *   S01166
     C*      2:- IF 100 *GT @@IRAT *GE 20                             *   S01166
     C*          THEN @@NDP = 3.                                      *   S01166
     C*      3:- IF 20 *GT @@IRAT *GE 1                               *   S01166
     C*          THEN @@NDP = 4.                                      *   S01166
     C*      4:- IF 1 *GT @@IRAT                                      *   S01166
     C*          THEN @@NDP = 5.                                      *   S01166
     C*****************************************************************   S01166
     C*                                                                   S01166
     C           ZA0790    BEGSR                                          S01166
     C*                                                                   S01166
     C*          @@NDP1    IFEQ @@NDP2                     B1             S01166
     C           @@NDP1    IFEQ 5                          *1             S01166
     C                     Z-ADD5         @@NDP   10       *1             S01166
     C                     GOTO ZA0799                     *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           @@IRAT    IFGE 100                        B1             S01166
     C                     Z-ADD2         @@NDP            *1             S01166
     C                     ELSE                            X1             S01166
     C           @@IRAT    IFLT 100                         B2            S01166
     C           @@IRAT    ANDGE20                          *2            S01166
     C                     Z-ADD3         @@NDP             *2            S01166
     C                     ELSE                             X2            S01166
     C           @@IRAT    IFLT 20                           B3           S01166
     C           @@IRAT    ANDGE1                            *3           S01166
     C                     Z-ADD4         @@NDP              *3           S01166
     C                     ELSE                              X3           S01166
     C           @@IRAT    IFLT 1                             B4          S01166
     C                     Z-ADD5         @@NDP               *4          S01166
     C                     END                                E4          S01166
     C                     END                               E3           S01166
     C                     END                              E2            S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C           ZA0799    ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     C*****************************************************************   S01166
     C*                                                               *   S01166
     C* ZA0890   - EDIT FORWARD POINTS FOR SIGN, DECIMAL POINT AND    *   S01166
     C*            ZERO SUPPRESSION                                   *   S01166
     C*                                                               *   S01166
     C* CALLS             -                                           *   S01166
     C*                                                               *   S01166
     C* CALLED BY  MAIN   - MAIN CONTROLLING SUBROUTINE               *   S01166
     C*                                                               *   S01166
     C* FLDS USED  @@PNTS - UNEDITED FORWARD POINTS INPUT - NOTE THIS *   S01166
     C*                     FIELD MAY BE EITHER (5,0) OR (5,2)        *   S01166
     C*            @@EPNT - EDITED FORWARD POINTS RETURNED FROM ZA0890*   S01166
     C*            7      - CHARACTER ARRAY OF INPUT FORWARD POINTS   *   S01166
     C*            @7     - CHARACTER ARRAY OF EDITED FORWARD POINTS  *   S01166
     C*            @H     - INDEX TO ARRAY OF EDITED FORWARD POINTS   *   S01166
     C*            @@TRIL - INDICATES LEADING ZERO LOCATED            *   S01166
     C*            @@A    - INDEX TO UNEDITED ARRAY OF FORWARD POINTS *   S01166
     C*            @@PSNV - FORWARD POINTS POSITIVE (P) / NEGATIVE (N)*   S01166
     C*            @@INTP - CONTAINS INTEGER PORTION OF FORWARD POINTS*   S01166
     C*            @@DECP - CONTAINS DECIMAL PORTION OF FORWARD POINTS*   S01166
     C*                                                               *   S01166
     C*****************************************************************   S01166
     C           ZA0890    BEGSR                                          S01166
     C*                                                                   S01166
     C** IF FORWARD POINTS ARE ZERO MOVE BLANKS INTO FIELD RETURNED TO    S01166
     C** CALLING PROGRAM                                                  S01166
     C           @@PNTS    IFEQ 0                          B1             S01166
     C                     MOVE '0+     ' @@EPNT           *1             S01166
     C                     GOTO ZA0899                     *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** SET UP ARRAY OF INPUT DATA AND CLEAR ARRAY OF OUTPUT DATA        S01166
     C                     MOVE @@PNTS    @@EPNT                          S01166
     C                     MOVEA@@EPNT    @@7I,1                          S01166
     C                     MOVEA*BLANKS   @7,1                            S01166
     C*                                                                   S01166
     C** RESET FIELDS ALTERED WHEN ZA0890 PREVIOUSLY CALLED               S01166
     C                     Z-ADD1         @H      10                      S01166
     C                     MOVE 'N'       @@TRIL  1                       S01166
     C*                                                                   S01166
     C** REMOVE LEADING ZEROES AND AND SET UP INTEGER PORTION OF          S01166
     C** REFORMATTED FORWARD POINTS                                       S01166
     C           1         DO   5         @@A     10       B1             S01166
     C*                                                                   S01166
     C           @@7I,@@A  IFNE '0'                        B*2            S01166
     C           @@TRIL    OREQ 'Y'                        **2            S01166
     C                     MOVE 'Y'       @@TRIL           **2            S01166
     C                     MOVE @@7I,@@A  @7,@H            **2            S01166
     C                     ADD  1         @H               **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** CHECK WHETHER FORWARD POINTS POSITIVE OR NEGATIVE.               S01166
     C                     TESTB'2'       @@7I,7     80                   S01166
     C*                                                                   S01166
     C           *IN80     IFEQ '1'                        B1             S01166
     C                     MOVE 'N'       @@PSNV  1        *1             S01166
     C                     ELSE                            X1             S01166
     C                     MOVE 'P'       @@PSNV           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** MAKE LAST NUMBER OF ARRAY 7    POSITIVE ALLOWING EASIER          S01166
     C** MANIPULATION                                                     S01166
     C           @@PSNV    IFEQ 'N'                        B1             S01166
     C                     BITON'2'       @@7I,7           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** CHECK WHETHER DECIMAL POINT AND DECIMAL DETAILS REQUIRED AND     S01166
     C** IF REQUIRED SET DETAILS UP.                                      S01166
     C*                    MOVEA@@7I,1    @@INTP  5                       S01166
     C*                    MOVEA@@7I,6    @@DECP  2                       S01166
     C*                                                                   S01166
     C           @@DECP    IFNE '00'                       B1             S01166
     C*                                                                   S01166
     C** IF INTEGER PORTION OF FORWARD POINTS IS ZERO MOVE ZERO INTO      S01166
     C** FORMATTED ARRAY BEFORE DECIMAL SEPARATOR                         S01166
     C           @@INTP    IFEQ '00000'                    B*2            S01166
     C                     MOVE '0'       @7,@H            **2            S01166
     C                     ADD  1         @H               **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C** SET UP DECIMAL SEPARATOR                                         S01166
     C*********************MOVE*IDDCSP****@7,@H*************1*******S01166S01319
     C                     MOVE BNDCSP    @7,@H            *1             S01319
     C                     ADD  1         @H               *1             S01166
     C*                                                                   S01166
     C** NOW MOVE FIELDS AFTER DECIMAL SEPARATOR INTO ARRAY               S01166
     C                     MOVEA@@7I,6    @7,@H            *1             S01166
     C                     ADD  1         @H               *1             S01166
     C                     MOVEA@@7I,7    @7,@H            *1             S01166
     C                     ADD  1         @H               *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** IF NUMBER INPUT HAS 4 INTEGERS AND ONE DECIMAL PLACE SET ARRAY   S01166
     C** INDEX TO 7 BEFORE SETTING UP SIGN.                               S01166
     C           @H        IFGT 8                          B1             S01166
     C                     Z-ADD6         @H               *1             S01166
     C                     MOVE ' '       @7,7             *1             S01166
     C                     ELSE                            X1             S01166
     C           @H        IFEQ 8                          B2             S01166
     C                     Z-ADD7         @H               *2             S01166
     C                     END                             E2             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** IF NEGATIVE MOVE '-' SIGN INTO NEXT FIELD OF ARRAY               S01166
     C           @@PSNV    IFEQ 'N'                        B1             S01166
     C                     MOVE '-'       @7,@H            *1             S01166
     C                     ELSE                            X1             S01166
     C                     MOVE '+'       @7,@H            *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C** SET UP FIELD CONTAINING REFORMATTED DATA FOR OUTPUT              S01166
     C                     MOVEA@7        @@EPNT  7                       S01166
     C*                                                                   S01166
     C           ZA0899    ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
     C****************************************************************
     C*                                                              *
     C*     #A CARRIES OUT INITIALISATION PROCESSING.                *
     C*        CALLED BY  : MAIN PROGRAM                             *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS: @T       - TERMINATION INPUT PARAMETER   *
     C*                   : @ENQ     - ENQUIRY TYPE INPUT PARAMETER  *
     C*                   : @WORK    - D/S FOR ENQUIRY DATA          *
     C*                   : @NAR1    - NARRATIVE FOR DATA AREA MASK  *
     C*                   : @NAR2    - NARRATIVE FOR DATA AREA MASK  *
     C*                   : @SPOT    - NARRATIVE FOR DATA AREA MASK  *
     C*                   : @HYP     - NARRATIVE FOR DATA AREA MASK  *
     C*                   : @@RTIN   - HIGH/LOW SPOT RATE FOR EDIT   *
     C*                   : @B       - HIGH/LOW SPOT RATE AFTER EDIT *
     C*                   : DDHISP   - HIGH SPOT RATE FOR DISPLAY    *    S01166
     C*                   : DDLOSP   - LOW SPOT RATE FOR DISPLAY     *    S01166
     C*                                                              *
     C****************************************************************
     C           #A        BEGSR
     C*
     C**  RECEIVE INPUT PARAMETERS
     C***        *ENTRY    PLIST                                          S01166
     C***                  PARM           @T      1                       S01166
     C***                  PARM           @ENQ    1                       S01166
     C*
     C**  MOVE PROGRAM NAME INTO STATUS DATA STRUCTURE FIELD.
     C**********           MOVEL'DL3140'  DBPGM                    S01166 S01117
     C                     MOVEL'TM3140'  DBPGM                           S01117
     C*
     C**  Set on Message Subfile end indicator.                           S01166
     C                     MOVE '1'       *IN20                           S01166
     C*                                                                   S01166
     C**  Initialise screen msg queue.                                    S01166
     C                     MOVEL'*'       DDPGMQ                          S01166
     C*                                                                   S01166
     C**  Move workstation ID to screen field.                            S01166
     C                     MOVEL@JOB      DDWSID                          S01166
     C*                                                                   S01166
     C**  DEFINE DATA AREA FOR PROGRAM
     C***        *NAMVAR   DEFN AMENQ1AA  AMENQ1                          S01166
     C*
      *
     C**  @UNITS IS DEFINED AS 15,3
     C           *LIKE     DEFN @UNITS    @NETU
     C           *LIKE     DEFN @UNITS    @DBCEU
     C           *LIKE     DEFN @UNITS    @NETAU
     C           *LIKE     DEFN @UNITS    @BCEAU
      *
     C           *LIKE     DEFN @NET      @NETX
     C           *LIKE     DEFN @DBCE     @DBCEX
     C           *LIKE     DEFN @NETU     @NETXU
     C           *LIKE     DEFN @DBCEU    @DBCXU
     C           *LIKE     DEFN FONNCP    @INPUT
     C           *LIKE     DEFN FONNCP    @BCEA
     C           *LIKE     DEFN FONNCP    @NETA
     C           *LIKE     DEFN @NETS     @SIGN
     C           *LIKE     DEFN @NETS     @OSIGN
     C           *LIKE     DEFN DDCCY     @@CCY                           S01166
     C********** *LIKE     DEFN CDP       @AA                             S01194
     C           *LIKE     DEFN A6NBDP    @AA                             S01194
     C********** *LIKE     DEFN CDP       @@CDP                    S01166 S01194
     C           *LIKE     DEFN A6NBDP    @@CDP                           S01194
     C*
     C********** *LIKE     DEFN NQDP      @@NDP1                   S01166 S01194
     C           *LIKE     DEFN A6NQDP    @@NDP1                          S01194
     C*                                                                   S01166
     C**  KEY LIST FOR LF/FXFWDTLL
     C           @KEY1     KLIST
     C                     KFLD           DDCCY                           S01166
     C                     KFLD           @@YR
     C                     KFLD           @@Z71M
     C                     KFLD           @@Z71D
     C*
     C**  OPEN FILES
     C*********************OPEN*FDINSTLL**********************************S01319
     C**********           OPEN FDICDRLL                                  S01194
     C                     OPEN FDMNTHLL
     C*                    OPEN FX38CPLL
     C***                  OPEN CA38CPLL                                  S01166
     C**********           OPEN FDCCYTLL                                  S01194
     C*********************OPEN FXCCYPLL                                  S01136
     C                     OPEN FDCCYPLL                                  S01136
     C                     OPEN FXEPOSLL
     C                     OPEN FXFWDTLL
     C*********************OPEN*FDUSSILL****************************S01166S01319
     C                     OPEN MUSER                                     S01319
     C********************************************************************S01319
     C**************************************************************S01166S01319
     C*********************MOVEL@USER*****@USER3**3****************S01166*S01319
     C**************************************************************S01166S01319
     C***********@USER3****CHAINFDUSSIP0*************61*************S01166S01319
     C**************************************************************S01166S01319
     C**db*err*if*user*not*found************************************S01166S01319
     C************IN61*****IFEQ*'1'************************B1*******S01166S01319
     C*********************MOVE*'FDUSSIP0'DBFILE************1*******S01166S01319
     C*********************MOVE*'009'*****DBASE*************1DB*ERR*S01166S01319
     C*********************MOVEL@USER3****DBKEY*********************S01166S01319
     C*********************EXSR*#ZB*************************1*******S01166S01319
     C*********************END*****************************E1*******S01166S01319
     C**************************************************************S01166S01319
     C           @USER     CHAINMUSER                61                   S01319
     C*                                                                   S01319
     C           *IN61     IFEQ '1'                        B1             S01319
     C*                                                                   S01319
     C                     MOVEL'MUSER'   DBFILE           ***************S01319
     C                     MOVE '009'     DBASE            *             *S01319
     C                     MOVEL@USER     DBKEY            * DBERROR 009 *S01319
     C                     EXSR #ZB                                       S01319
     C*                                                                   S01319
     C                     END                             E1             S01319
     C* do file overide before open                                       S01166
     C***********USREF*****IFEQ*'Y'                        B1       S01166S01319
     C           AURF      IFEQ 'Y'                        B1             S01319
     C                     MOVEL@OVR,1    @OVRID           *1             S01166
     C*********************Z-ADDUSRFPD****@WAIT*************1*******S01166S01319
     C                     Z-ADDREFP      @WAIT            *1             S01319
     C                     Z-ADD36        QCALEN 155       *1             S01166
     C*********************CALL 'QCAEXEC'                  *1       S01166E20774
     C                     CALL 'QCMDEXC'                  *1             E20774
     C                     PARM           @OVRID           *1             S01166
     C                     PARM           QCALEN           *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01166
     C**********           OPEN DL3140DD                           S01166 S01117
     C                     OPEN TM3140DD                                  S01117
     C*                                                                   S01166
     C**  ACCESS MONTH SHORTNAMES FILE
     C           MNRCID    IFEQ *BLANKS                    B1
     C           1         CHAINFDMNTHLL             61    *1
     C                     END                             E1
     C*
     C**  DEAL WITH DATA BASE ERROR
     C           *IN61     IFEQ '1'                        B1
     C           MNDLTF    OREQ '*'                        *1
     C                     MOVE 'FDMNTHLL'DBFILE           *1**********
     C                     MOVE '001'     DBASE            *1DB ERR 001
     C                     EXSR #ZB                        *1**********
     C                     GOTO #A9                        *1
     C                     END                             E1
     C*
     C****ACCESS*INSTALLATION*FILE****************************************S01319
     C***********IDRCID****IFEQ**BLANKS********************B1*************S01319
     C***********1*********CHAINFDINSTLL*************61*****1*************S01319
     C*********************END*****************************E1*************S01319
     C********************************************************************S01319
     C****DEAL*WITH*DATA*BASE*ERROR***************************************S01319
     C************IN61*****IFEQ*'1'************************B1*************S01319
     C***********IDDLTF****OREQ*'*'*************************1*************S01319
     C*********************MOVE*'FDINSTLL'DBFILE************1*************S01319
     C*********************MOVE*'004'*****DBASE*************1DB*ERR*004***S01319
     C*********************EXSR*#ZB*************************1*************S01319
     C*********************GOTO*#A9*************************1*************S01319
     C*********************END*****************************E1*************S01319
     C*                                                                   S01319
     C** Access Deal details via access program                           S01319
      *  (database error handling done in access program)                 S01319
     C**********           CALL 'AODEALR0'                                             S01319 CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*DBERR ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                                        S01319 CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C*
     C**  ACCESS CURRENCY FILE FOR BASE CCY FOR DEALING DECIMAL PLACES
     C**  VIA ACCESS OBJECT                                               S01194
     C***SET*UP*KEY*TO*OBTAIN*FORMAT*TABTG10F*'20******CCY1'***           S01194
     C**********           MOVEL'20'      @KEY   12                       S01194
     C**********           MOVE '1'       @ENDKY                          S01194
     C**********           MOVELIDCYDL    @ENDKY                          S01194
     C**********           MOVE @ENDKY    @KEY                            S01194
     C********** @KEY      CHAINFDCCYTLL             61                   S01194
     C**********                                                          S01194
     C****DEAL*WITH*DATA*BASE*ERROR****                                   S01194
     C********** *IN61     IFEQ '1'                        B1             S01194
     C********** MNDLTF    OREQ '*'                        *1             S01194
     C**********           MOVE 'FDCCYTLL'DBFILE           *1**********   S01194
     C**********           MOVE '007'     DBASE            *1DB ERR 007   S01194
     C**********           EXSR #ZB                        *1**********   S01194
     C**********           GOTO #A9                        *1             S01194
     C**********                                                          S01194
     C**********           ELSE                            X1             S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C*********************PARM*IDCYDL****CCYKEY**3*****************S01194S01319
     C                     PARM BNCYDL    CCYKEY  3                       S01319
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
      *                                                                   S01194
     C**********           MOVE CDP       @BCDP   10       *1             S01194
     C                     MOVE A6NBDP    @BCDP   10       *1             S01194
     C**********           END                             E1             S01194
     C*
     C***CALL*S/R*TO*ACCESS*ICD*FILE***                                   S01194
     C**********           EXSR ZA0150                                    S01194
     C**********                                                          S01194
     C****CHECK*FOR*DATABASE*ERROR***                                     S01194
     C********** *IN80     IFEQ '1'                        B1             S01194
     C**********           EXSR #ZB                        *1             S01194
     C**********           GOTO #A9                        *1             S01194
     C**********           END                             E1             S01194
      *                                                                   S01194
      * Get Bank's details from SDBANKPD via Access Object                S01194
      * (Note that *DBERR is used as standard return code although        S01194
      * this will not normally produce a DB error due to access           S01194
      * object having already been called in SD1600)                      S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
     C*
     C**  SET UP WORK FIELDS
     C                     MOVE '+'       @PLUS   1
     C                     MOVE '-'       @MINUS  1
     C                     MOVE 'D'       @D      1
     C                     MOVE 'M'       @M      1
     C*                                                                   S01166
     C**********           Z-ADDNQDP      @@NDP1                   S01166 S01194
     C                     Z-ADDA6NQDP    @@NDP1                          S01194
     C*                                                                   S01166
     C**  KEY LIST FOR LF/FDCCYPLL                                        S01136
     C                     MOVE 'W'       @WEK    1                       S01136
     C                     MOVE '01'      @01     20                      S01136
     C           @KWEEK    KLIST                                          S01136
     C                     KFLD           DDCCY                           S01136
     C                     KFLD           @WEK                            S01136
     C                     KFLD           @01                             S01136
     C*                                                                   E35996
     C** Key list for SETLL operation to LF/FDCCYPLL                      E35996
     C*                                                                   E35996
     C                     MOVE 'D'       @DAY    1                       E35996
     C                     MOVE '00'      @00     20                      E35996
     C           KDAY0     KLIST                                          E35996
     C                     KFLD           DDCCY                           E35996
     C                     KFLD           @DAY                            E35996
     C                     KFLD           @00                             E35996
     C*                                                                   E35996
     C** Initialise temporary fields used in interpolation processing     E35996
     C*                                                                   E35996
     C                     Z-ADD0         @DPTS  132                      E35996
     C                     Z-ADD0         @DDAT  132                      E35996
     C                     Z-ADD0         @TEMP  132                      E35996
     C                     Z-ADD0         @SNDT  132                      E35996
     C                     Z-ADD0         @WKDT  132                      E35996
     C                     Z-ADD0         @SNPT  132                      E35996
     C                     Z-ADD0         @FWPT  132                      E35996
     C*                                                                   E35996
     C           #A9       ENDSR                           ***#A9***
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*     #C CARRIES OUT THE TERMINATION PROCESSING.               *
     C*        CALLED BY  : MAIN PROGRAM                             *
     C*        CALLS      :                                          *
     C*                                                              *
     C*        WORK FIELDS:                                          *
     C*                                                              *
     C****************************************************************
     C           #C        BEGSR
     C*
     C***        *INU7     IFEQ '1'                        B1             S01166
     C***                  MOVE 'E'       @T               *1             S01166
     C                     MOVE '1'       *INLR            *1
     C***                  END                             E1             S01166
     C*
     C***        @T        IFEQ 'T'                        B1             S01166
     C***                  MOVE '1'       *INLR            *1             S01166
     C***                  END                             E1             S01166
     C*
     C                     RETRN
     C*
     C           #C9       ENDSR                           ***#C9***
     C/EJECT
     C*****************************************************************   S01194
     C**********                                                      *   S01194
     C***SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF/       *   S01194
     C***FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD 1    *   S01194
     C***(HELD*ON PF/TABTB10)                                         *   S01194
     C***INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD IS   *   S01194
     C***FLAGGED FOR DELETION.                                        *   S01194
     C***IF*INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED ACCESS    *   S01194
     C***ARE*PLACED IN THE LDA.                                       *   S01194
     C**********                                                      *   S01194
     C***FIELDS*USED : SS0150 - KEY USED TO ACCESS FDICDRLL           *   S01194
     C**********                                                      *   S01194
     C*****************************************************************   S01194
     C**********                                                          S01194
     C********** ZA0150    BEGSR                                          S01194
     C**********                                                          S01194
     C***Set*up*key to obtain format TABTB10F '01        10'              S01194
     C**********           MOVEL'01'      SS0150 12                       S01194
     C**********           MOVE '10'      SS0150                          S01194
     C**********                                                          S01194
     C***CHAIN*TO FILE FDICDRLL                                           S01194
     C********** SS0150    CHAINFDICDRLL             80                   S01194
     C********** RECI      IFNE 'D'                        B1             S01194
     C**********           MOVE '1'       *IN80            *1             S01194
     C**********           END                             E1             S01194
     C**********                                                          S01194
     C***DEAL*WITH DATA BASE ERROR                                        S01194
     C********** *IN80     IFEQ '1'                        ***************S01194
     C**********           MOVEL'FDICDRLL'DBFILE           *             *S01194
     C**********           MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C**********           MOVELSS0150    DBKEY            *             *S01194
     C**********           END                             ***************S01194
     C**********                                                          S01194
     C********** ZA0159    ENDSR                                          S01194
     C/EJECT
     C*****************************************************
     C*                                                   *
     C*   EXCEPTION ERROR SUBROUTINE                      *
     C*                                                   *
     C*   SUBROUTINE CALLED: EXECUTES WHENEVER            *
     C*   A DATABASE FILE ERROR OCCURS                    *
     C*                                                   *
     C*   SUBROUTINE CALLS : NO OTHER SUBROUTINES         *
     C*                                                   *
     C*****************************************************
     C           #ZB       BEGSR
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C***                  MOVE 'E'       @T                              S01166
     C**********           MOVEL'DL3140'  DBPGM                    S01166 S01117
     C                     MOVEL'TM3140'  DBPGM                           S01117
     C*
     C                     DUMP
     C*
     C**  TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR                           ***#ZB   ***
     C/EJECT
     C*****************************************************
     C*                                                   *
     C*   EXCEPTION ERROR SUBROUTINE                      *
     C*                                                   *
     C*   SUBROUTINE CALLED: EXECUTES WHENEVER            *
     C*   A FILE ERROR OCCURS                             *
     C*                                                   *
     C*   SUBROUTINE CALLS : NO OTHER SUBROUTINES         *
     C*                                                   *
     C*****************************************************
     C           INFSR     BEGSR
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C***                  MOVE 'E'       @T                              S01166
     C*
     C**  SET UP FIELDS IN LOCAL DATA AREA
     C**********           MOVEL'DL3140'  DBPGM                    S01166 S01117
     C                     MOVEL'TM3140'  DBPGM                           S01117
     C                     MOVE '992'     DBASE
     C                     MOVE @FILE     DBFILE
     C*
     C                     DUMP
     C*
     C**  TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR                           ***INFSR***
     C/EJECT
     C*****************************************************
     C*                                                   *
     C*   EXCEPTION ERROR SUBROUTINE                      *
     C*                                                   *
     C*   SUBROUTINE CALLED: EXECUTES WHENEVER            *
     C*   A PROGRAM ERROR OCCURS                          *
     C*                                                   *
     C*   SUBROUTINE CALLS : NO OTHER SUBROUTINES         *
     C*                                                   *
     C*****************************************************
     C           *PSSR     BEGSR
     C*
     C**  SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR1     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR1   1        *1
     C                     MOVE '1'       *INU6            *1
     C*
     C**  SET UP FIELDS IN LOCAL DATA AREA
     C**********           MOVEL'DL3140'  DBPGM            *1      S01166 S01117
     C                     MOVEL'TM3140'  DBPGM            *1             S01117
     C                     MOVE '991'     DBASE            *1
     C*
     C                     DUMP                            *1
     C                     END                             E1
     C*
     C**  TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C                     ENDSR                           ****PSSR****
     C/EJECT
** @YD  USED BY SR. ZA0680 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZA0680 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
**  @DP DECIMAL PLACES CORRECTION ARRAY
0001001001001000
** @OVR  CL COMMAND FOR CALL TO QCMDEXC                             S01166E20774
OVRDSPF FILE(TM3140DD) WAITRCD(    )                                S01166S01117
** CPY@ - COPYRIGHT STATEMENT                                             S01117
(c) Misys International Banking Systems Ltd. 2001
