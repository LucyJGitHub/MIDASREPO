     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas Exchange rates enquiry (was DL3160)')
     F****************************************************************
     F*                                                              *
     F*  Midas - Treasury Management Module
     F*                                                              *
     F*     TM3160    - EXCHANGE RATES ENQUIRY                       *
     F*                 (FORMERLY DL3160)
     F*                                                              *
     F*     Function: This enquiry shows market rates for a selected *
     F*     (I/C)     currency against the default  base currency for*
     F*               dealing, or for 2 non base currencies where    *
     F*               cross rates and forward points are displayed.  *
     F*                                                              *
     F*     Called by: TMC0311 - TM Enquiry control                  *
     F*           via: DL3100  - Treasury management controller      *
     F*                                                              *
     F*     Calls    : ZA0250  - Clear program message queue.        *
     F*              : ZA0240  - Display program message queue.      *
     F*                                                              *
      *  (c) Finastra International Limited 2001                      *
     F*                                                              *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      *  Prev Amend No. CRE026             Date 13Jun06               *
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *                 CSD031             Date 10Apr06               *
      *                 CSE071             Date 19Jul05               *
      *                 TDA035             Date 02Apr04               *
      *                 CGL029             Date 01Sep03               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                 S01319             Date 15Aug91               *
      *                 S01280             Date 11Feb91               *
     F*                    S01195            DATE   14NOV90          *
     F*                    S01117            DATE   14NOV90          *
     F*                    S01194            DATE   14NOV90          *
     F*                    E20774            DATE   15MAR90          *
     F*                    S01199            DATE   28FEB90          *    S01199
     F*                    E17684            DATE   05/05/89         *
     F*                    E12923            DATE   29/04/88         *
     F*                    S01166            DATE   14/04/88         *    S01166
     F*                    E12791            DATE   08/04/88         *
     F*                    E12292            DATE   18/03/88         *
     F*                    E12301            DATE   15/03/88         *
     F*                    S01136            DATE   11/12/87         *    S01166
     F*                                                              *
     F****************************************************************
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CRE026 - Consumer Banking                                    *
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CSE071 - Multiple Holidays Re Securities (recompile)         *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
      *  CGL029 - Increase Account Code to 10 digits                  *
     F*    S01319  -  Remove redundant processing
     F*    S01280  - GENERAL TM ERROR FIXES:                         *
     F*            - ADD VALIDATION FOR DEALING CURRENCY             *
     F*            - ADD VALIDATION TO PREVENT SAME CURRENCY BEING   *
     F*              ENTERED IN BOTH FIELDS                          *
     F*            - DATABASE ERRORS NOT BEING DETECTED IN FILE      *
     F*              FDCCYPLL                                        *
     F*            - TIME NOT UPDATING WHEN SCREEN REFRESHED         *
     F*              (INVOLVES CHANGE TO DISPLAY FILE ALSO)          *
     F*                                                              *
     F*     S01195 - NEW HOLIDAY PROCESSING                          *    S01195
     F*                                                              *
     F*     S01117 - NEW COPYRIGHT STATEMENT                         *    S01117
     F*              DEALING PROGRAMS USED ONLY IN TREASURY MGMT.    *    S01117
     F*              MODULE NOW PREFIXED WITH 'TM'                   *    S01117
     F*                                                              *
     F*     S01194 - NEW STANDING DATA PROCESSING                    *    S01194
     F*                                                              *
     F*     E20774 - REPLACE QCAEXEC WITH QCMDEXC                    *    E20774
     F*                                                              *
     F*     S01199 - HELP SYSTEM.                                *        S01199
     F*                                                              *
     F*     E17684 - RECOMPILE OVER CHANGED DISPLAY FILE.            *
     F*                                                              *
     F*     E12923 - FIX 12301 LINES TAKEN OUT - FIX IN ERROR        *
     F*                                                              *
     F*     S01166 -  DISPLAY OUTPUT ON AS400 SCREEN INSTEAD OF PC   *    S01166
     F*                   VIA DATA AREA                              *    S01166
     F*                                                              *
     F*     E12791 - CHAGED MADE TO SUB-RTN ZA0760, BECAUSE THE      *
     F*              SPOT RATE WHEN GIVEN OUT TO THE PC WAS BEING    *
     F*              TRUNCATED.                                      *
     F*                                                              *
     F*     E12292 - SUB-RTN ZA700 NOT RESETTING THE LOW/HIGH LIMIT  *
     F*              BEFORE SUBSEQUENT READP OPERATION AFTER END OF  *
     F*              FILE IS ENCOUNTED AT PREVIOUS READ OPERATION.   *
     F*              THUS, MAKING THE READP OPER. ALSO GET EOF STATUS*
     F*              AND TRAPPED AS DATA BASE ERROR BY PROGRAM.      *
     F*                                                              *
     F*     E12301 -  WHEN THE PROGRAM LOOKS FOR THE NEXT WORKING    *
     F*               DAY, THE FIRST DAY IT CHECKS IS SPOT DATE +1   *
     F*                                                              *
     F*     S01136 -  FIX TO DISPLAY 1,0 INSTEAD OF ONLY 1           *
     F*                                                              *
     F****************************************************************
     F**  Indicator Function Summary
     F*
     F* ID F  C  H  L    FUNCTION OF INDICATORS
     F* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     F*
     F*          20    Message subfile end                                S01166
     F*          30    Eof on read of display file                        S01166
     F*                                                                   S01166
     F*          40    Display File field error (41 or 42)                S01166
     F*          41    Currency 1 (DDCCY1) not on file                    S01166
     F*          42    Currency 2 (DDCCY2) not on file                    S01166
     F*                                                                   S01166
     F*          50    User id not on file                                S01166
     F*                                                                   S01166
     F*       71/72    General Work Indicators
     F*
     F*       80 - 99  Common Routines Indicators
     F*
     F*          U6    Program Error and dump
     F*          U7    Set on with U8 if a database error occurs.
     F*          U8    File out of balance if on on its own.
     F*                                                              *
     F****************************************************************
     F*****/EJECT
     F****************************************************************
     F*
     F***  Data Base Error index
     F*
     F*      001   Day Names record not found on LF/FDDAYSLL
     F*      002   Month number not found on LF/FDMNTHLL
     F*******003***Current Prompt not found on LF/FX38CPLL                S01117
     F*******004***Currency record LF/FDCCYTLL not found (Non-base)       S01194
     F*******006***Update to FX38CPLL failed  (Current Prompts)           S01117
     F*******007***Update to AMENQ1AA failed   (Enquiry Window 1)         S01117
     F*******900***No Installation Control Record on LF/FDICDRLL          S01117
     F*******921***Currency record LF/FDCCYTLL not found (base curr.)     S01194
     F*******922***Installation*data*record*LF/FDINSTLL*not*found*********S01319
     F*      923   Exchange rates points record LF/FDCCYPLL not found
     F*      924   Exchange rates points record LF/FDCCYPLL not found
     F*      927   Exchange rates points record LF/FDCCYPLL not found
     F*      928   Exchange rates points record LF/FDCCYPLL not found
     F*      929   User not found on LF/FDUSSILL                          S01166
     F*      991   Program error -- Subroutine *PSSR
     F*      992   File error -- Subroutine INFSR
     F*                                                              *
     F****************************************************************
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
     F*                                                               *
     F*****************************************************************
     F/EJECT
     F****************************************************************
     F*
     F*  Installation control files
     F*
     FFDDAYSLLIF  E                    DISK         KINFSR INFSR      UC
     F*
     FFDMNTHLLIF  E                    DISK         KINFSR INFSR      UC
     F*
     F*FDINSTLLIF**E*******************DISK*********KINFSR*INFSR******UC**S01319
     F*
     F***FDICDRLLIF**E***        K        DISK         KINFSR INFSR  UC   S01194
     F**********  TABTB11F                          KIGNORE               S01194
     F**********  TABTB20F                          KIGNORE               S01194
     F**********                                                          S01194
     F***FDTABJLLIF**E***        K        DISK         KINFSR INFSR  UC   S01194
     F*
     F****************************************************************
     F*
     F*  Masterfiles for reference only
     F*
     F**
     F***FDCCYTLLIF**E***        K        DISK         KINFSR INFSR  UC   S01194
     F**
     FFDCCYPLLIF  E           K        DISK         KINFSR INFSR      UC
     F**
     F*FDUSSILLIF**E**********K********DISK*********KINFSR*INFSR******UC**S01319
     FMUSER   IF  E           K        DISK         KINFSR INFSR      UC  S01319
     F**
     F*                                                               *
     F*       LF/FXCCYPLL is built over PF/FDCCYPPP                   *
     F*                                                               *
     FFXCCYPLLIF  E           K        DISK         KINFSR INFSR      UC
     F            FDCCYPP0                          KRENAMEFXCCYPP0
     F**
     F****************************************************************
     F*
     F*  Update files
     F*
     F**CA38CPLLUF  E                    DISK         KINFSR INFSR      UCS01166
     F***                                           KINFDS @FXS           S01166
     F**
     F*****************************************************************
     F*                                                                   S01166
     F*  Display files                                                    S01166
     F*                                                                   S01166
     F***DL3160DDCF**E***                 WORKSTN              UC  S01166 S01117
     FTM3160DDCF  E                    WORKSTN                        UC  S01117
     F                                              KNUM        1
     F*                                                                   S01166
     F*****************************************************************   S01166
     F/EJECT
     E*****************************************************************
     E*
     E*
     E***  Arrays within the enquiry window
     E***  --------------------------------
     E*
     E**  Period Names
     E***                 @PN        13  4                                S01166
     E*
     E**  Dates / Days of Week to which Periods apply
     E                    @DP        13 12                                S01166
     E*
     E**  High Rates Column
     E                    @HR        13 13
     E*
     E**  Low Rates Column
     E                    @LR        13 13
     E*
     E*
     E*****************************************************************
     E/EJECT
     E********************************************************************
     E*
     E*
     E                    @SF     1  10 10 0
     E**  Array of scaling factors.
     E*
     E*
     E**  ARRAY FOR SR. ZA0710 - CUMULATIVE DAYS IN YEAR FOR 4 YEAR PERIOD
     E                    @YD     4   4  5 0A
     E*
     E**  ARRAY FOR SR. ZA0710 - CUMULATIVE DAYS IN YEAR PER MONTH
     E                    @MD    13  13  5 0A
     E*
     E*
     E**  ARRAY FOR SR. ZA0850 - DAYS IN A MONTH (COMPILE TIME ARRAY)
     E                    @M     12  12  2 0
     E*
     E*
     E**  ARRAY FOR SR. ZA0630 - POWERS OF TEN.
     E                    @@AY    1  10 10 0
     E*
     E*
     E**  Arrays for SR. ZA0850 - Period Units and Types
     E                    @PU     1  12  2 0 @PT     5
     E*
     E*
     E**  USED BY SR. ZA0720 - MONTH SHORTNAME
     E                    @MT        12  3
     E*
     E** ARRAY USED IN ZA0910 - CONTAINS DAY SHORTNAMES FROM FDDAYSLL
     E                    @DY         7  2
     E*
     E*
     E****ARRAYS TO HOLD OUTPUT AMOUNT                                    S01117
     E*****               @K         16  1                                S01117
     E*****               @K2        22  1                                S01117
     E*****               @TH        10  1                                S01117
     E*
     E*
     E** CHARACTER ARRAY CONTAINING FORWARD POINTS INPUT
     E                    @@7         7  1
     E*
     E** ARRAY HOLDING FORMATTED FORWARD POINTS
     E                    @7         14  1
     E*
     E*
     E**  ARRAY FOR RATE INPUT
     E                    @A         13  1
     E*
     E**  ARRAY FOR RATE OUTPUT
     E                    @B         14  1
     E*
     E****USED*BY*SR.*ZA0830*-*CURRENCY*RECORDS***                        S01195
     E**********          @CY        50  3                                S01195
     E*
     E**  USED TO INITIALISE SCALE RATE TO 99999.99999999
     E                    @IN     1   1 13 8
     E*
     E                    @TXT    1   1 29
     E**  Array FOR ERROR DESCRIPTION
     E*
     E                    @OVR    1   1 36
     E****Array*to*set*up*parameter*for*call*to*QCAEXEC                   E20774
     E**  Array to set up parameter for call to QCMDEXC                   E20774
     E*
     E                    CPY@    1   1 80                                S01117
     E* Copyright array                                                   S01117
     E/COPY ZSRSRC,ZHOLE                                                  S01195
      * New holiday array                                                 S01195
     E*****************************************************************
     E/EJECT
     I*****************************************************************
     I*
     I*
     I***IXDF
     I***           VDAT                            DVTDAT
     I*
     I*
     IPSDS       SDS
     I*
     I**  Program status data structure.
     I**  Field containing file in process.
     I                                      201 208 @FILE
     I**  Field containing workstaion  ID.
     I                                      244 253 @JOB
     I**  Field containing user ID.
     I                                      254 263 @USER
     I*
     I           UDS
     I**  Local data area for data base errors.
     I**  Field containing name of database file in error.
     I                                      134 141 DBFILE
     I**  Field containing key value causing database error.
     I                                      142 170 DBKEY
     I**  Field containing name of program causing database error.
     I                                      171 180 DBPGM
     I**  Field containing number of database error1
     I                                      181 183 DBASE
     I*
     I*
     I**  Enquiry Window 1 Layout (internally redefined)
     I*
     IAMENQ1      DS                            728
     I                                        1   1 @DUMMY
     I*
     I*************************************************************       S01166
     I*  This d/s now replaced with display fields from DL3160DD  *       S01166
     I*************************************************************       S01166
     I***@AMENQ      DS                            728                    S01166
     I***                                    01  03 @CON01                S01166
     I***                                    05  09 @CON05                S01166
     I*
     I*  The Main Date is in the date column (Overnight)
     I*
     I***                                    67  730@MAIND                S01166
     I*
     I*  Output the two currencies
     I*
     I***                                   157 159 @WCUR1                S01166
     I***                                   160 160 @SLASH                S01166
     I***                                   161 163 @WCUR2                S01166
     I*
     I*  Array @PN is Period Short Name column
     I*  Array @DP is Date/Day of week column
     I*  Array @LR is Low Rates Array
     I*  Array @HR is High Rates Array
     I***                                                                 S01166
     I***                                    61  64 @PN1                  S01166
     I***                                    67  76 @DP1                  S01166
     I***                                    78  90 @LR1                  S01166
     I***                                    92 104 @HR1                  S01166
     I***                                                                 S01166
     I***                                   113 116 @PN2                  S01166
     I***                                   119 128 @DP2                  S01166
     I***                                   130 142 @LR2                  S01166
     I***                                   144 156 @HR2                  S01166
     I***                                                                 S01166
     I***                                   165 168 @PN3                  S01166
     I***                                   171 180 @DP3                  S01166
     I***                                   182 194 @LR3                  S01166
     I***                                   196 208 @HR3                  S01166
     I***                                                                 S01166
     I***                                   217 220 @PN4                  S01166
     I***                                   223 232 8DP4                  S01166
     I***                                   234 246 @LR4                  S01166
     I***                                   248 260 @HR4                  S01166
     I***                                                                 S01166
     I***                                   269 272 @PN5                  S01166
     I***                                   275 284 @DP5                  S01166
     I***                                   286 298 @LR5                  S01166
     I***                                   300 312 @HR5                  S01166
     I***                                                                 S01166
     I***                                   321 324 @PN6                  S01166
     I***                                   327 336 @DP6                  S01166
     I***                                   338 350 @LR6                  S01166
     I***                                   352 364 @HR6                  S01166
     I***                                                                 S01166
     I***                                   373 376 @PN7                  S01166
     I***                                   379 388 @DP7                  S01166
     I***                                   390 402 @LR7                  S01166
     I***                                   404 416 @HR7                  S01166
     I***                                                                 S01166
     I***                                   425 428 @PN8                  S01166
     I***                                   431 440 @DP8                  S01166
     I***                                   442 454 @LR8                  S01166
     I***                                   456 468 @HR8                  S01166
     I***                                                                 S01166
     I***                                   477 480 @PN9                  S01166
     I***                                   483 492 @DP9                  S01166
     I***                                   494 506 @LR9                  S01166
     I***                                   508 520 @HR9                  S01166
     I***                                                                 S01166
     I***                                   529 532 @PN10                 S01166
     I***                                   535 544 @DP10                 S01166
     I***                                   546 558 @LR10                 S01166
     I***                                   560 572 @HR10                 S01166
     I***                                                                 S01166
     I***                                   581 584 @PN11                 S01166
     I***                                   587 596 @DP11                 S01166
     I***                                   598 610 @LR11                 S01166
     I***                                   612 624 @HR11                 S01166
     I***                                                                 S01166
     I***                                   633 636 @PN12                 S01166
     I***                                   639 648 @DP12                 S01166
     I***                                   650 662 @LR12                 S01166
     I***                                   664 676 @HR12                 S01166
     I***                                                                 S01166
     I***                                   685 688 @PN13                 S01166
     I***                                   691 700 @DP13                 S01166
     I***                                   702 714 @LR13                 S01166
     I***                                   716 728 @HR13                 S01166
     I*
     I*
     I***@FXS        DS                                                   S01166
     I***                                  *STATUS  @FXST                 S01166
     I***                                     9   9 @FXOPN                S01166
     I**  FILE IN. DS. TO TEST IF FILE FX38CPLL IS OPEN.
     I*
     I*
     I*                                                               *
     I**  DATA STRUCTURE FOR ZA0680/ZA0710 - DATE INPUT TO SUBROUTINES
     I            DS                              8
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        3   40@@YY
     I                                        1   20@@CC
     I                                        5   60@@MTH
     I                                        7   80@@DAY
     I*                                                               *
     I*                                                               *
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@Z71Y
     I            DS                              4
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
     I*
     I**  DATA STRUCTURE FOR SR. ZA0710 - FIELD IS @@VDT
     I            DS                              8
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
     I*
     I****Data Structure for taking the result of zero suppress FXC0060   S01117
     I*****                                                               S01117
     I*****       DS                             23                       S01117
     I*****                                   1  22 @K2                   S01117
     I*****                                  23  23 @@SIGN                S01117
     I*****                                   8  23 @@ALPH                S01117
     I*****                                   8  21 @@SIGF                S01117
     I*
     I****Data*Structure*for*key*of*holidays*file***                      S01195
     I**********                                                          S01195
     I**********  DS                             12                       S01195
     I**********                              1  12 SS0830                S01195
     I**********                              7  110@@MNO                 S01195
     I*
     I*
     I*   DATASTUCTURE TO CONVERT @@IRAT DECIMAL FIELD TO ALPHA FIELD
     I@@RTDS      DS                             13
     I                                        1  138@@IRAT
     I*
     I*
     I            DS
     I*
     I**  USED BY SR. ZA0890 - Input Points Field
     I                                        1   70@@PNTS
     I                                        1   7 @@7
     I                                        1   5 @@INTP
     I                                        6   7 @@DECP
     I                                        7   7 @@BITO
     I*
     I*
     I            DS
     I*
     I****USED*BY*SR**ZA0830*-*ARRAY*DATA*STRUCTURE***                    S01195
     I**********                              1 150 @CY                   S01195
     I**********                              1  75 @@CY1                 S01195
     I**********                             76 150 @@CY2                 S01195
     I*
     I*
     I**   Controlling parameters   (Current Prompt 1)
     I**
     I***         DS                             80                       S01166
     I***                                     1  80 FAEPT1                S01166
     I***                                     2   4 DDCCY1                S01166
     I***                                    32  34 DDCCY2                S01166
     I*
     I*
     I**   Days short names read from FDDAYSPP
     I*
     I            DS                             14
     I                                        1  14 @DY
     I                                        1   2 DND1SN
     I                                        3   4 DND2SN
     I                                        5   6 DND3SN
     I                                        7   8 DND4SN
     I                                        9  10 DND5SN
     I                                       11  12 DND6SN
     I                                       13  14 DND7SN
     I*
     I**   Month short names read from FDMNTHPP
     I*
     I            DS                             36
     I                                        1  36 @MT
     I                                        1   3 MNNM1
     I                                        4   6 MNNM2
     I                                        7   9 MNNM3
     I                                       10  12 MNNM4
     I                                       13  15 MNNM5
     I                                       16  18 MNNM6
     I                                       19  21 MNNM7
     I                                       22  24 MNNM8
     I                                       25  27 MNNM9
     I                                       28  30 MNNM10
     I                                       31  33 MNNM11
     I                                       34  36 MNNM12
     I**
     I*****Table*Files*Key***                                             S01194
     I*****Key*to*Currency*Codes*File***                                  S01194
     I**********                                                          S01194
     I**********  DS                             12                       S01194
     I**********                              1  12 @@1200         S01166 S01194
     I**********                              1   2 @PRF                  S01194
     I**********                              9  11 @CUR                  S01194
     I**********                             12  12 @SUF                  S01194
     I**********                                                          S01194
     I**********  DS                             12                S01166 S01194
     I**********                              1  12 CCYKEY         S01166 S01194
     I**********                              1   2 K20            S01166 S01194
     I**********                              9  11 KCCY           S01166 S01194
     I**********                             12  12 K1             S01166 S01194
     I*                                                                   S01166
     I*   Data structure for command in array @OVR
     I@OVRID      DS                             36
     I                                       32  350@WAIT
     I*
     ISDCURR    E DSSDCURRPD                                              S01194
     I* External DS for Currency Details                                  S01194
     ISDBANK    E DSSDBANKPD                                              S01194
     I* External DS for Bank Details                                      S01194
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     IDSSDY     E DSDSSDY                                                 S01194
     I* DS used by Access Objects (long records)                          S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* DS used by Access Objects (short records)                         S01194
      /COPY ZSRSRC,ZHOLI                                                  S01195
     I* Copy standard holiday data structure                              S01195
     I*****************************************************************
      /EJECT
     C                     MOVEACPY@      BIS@   80                       S01117
     C*
     C***        *ENTRY    PLIST                                          S01166
     C***                  PARM           @TERM   1                       S01166
     C***                  PARM           @ENQU   1                       S01166
     C*
     C**  Initial processing.
     C*
     C***        @TERM     IFNE 'T'                        B1             S01166
     C           @FCYC     IFNE 'Y'                        B*2            S01166
     C                     EXSR #A                         **2            S01166
     C                     END                             E*2            S01166
     C*
     C**  Main processing
     C*                                                                   S01166
     C********** *INU7     IFEQ '0'                        B*2            S01280
     C           *IN01     DOWEQ'0'                        B*3 til cmd3   S01166
     C           *INU7     ANDEQ'0'                        B*3 or dberr   S01280
     C                     EXSR #B                         **2
     C                     END                             E*3            S01166
     C**********           END                             E*2     S01166 S01280
     C***                  END                             E1             S01166
     C*
     C**  Termination processing
     C*
     C                     EXSR #C
     C*
     C           ENDPGM    TAG                             **ENDPGM**
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*  Index to subroutines - Order of listing due to frequency of  *
     C*                         usage.                                *
     C*                                                               *
     C*   1. #B     - Main processing                                 *
     C*   2. #BA    - Requested currency against base                 *
     C*   3. #BB    - Cross rate requested (2 non-base currencies)    *
     C*   4. #BBA   - Calculate one cross-rate for one date           *
     C*   5. #BC    - Dowmload array data to enquiry window           *
     C*                                                               *
     C*   --  Common Routines --                                      *
     C*                                                               *
     C*   6. ZA0630 - Calculate forward outright rate                 *
     C*   7. ZA0680 - Convert date YYYYMMDD to 99999                  *
     C*   8. ZA0700 - Calculate forward points                        *
     C*   9. ZA0710 - Convert date 99999 to YYYYMMDD                  *
     C*  10. ZA0720 - Convert date YYYYMMDD to DDMMMYY/MMMDDYY        *
     C*  11. ZA0760 - Convert rate to display for AS400               *
     C*  12. ZA0820 - Determine spot date                             *
     C***13**ZA0830***Determine*whether*a*day*is*a*holiday*or*not******   S01195
     C*  13. ZCHKH  - Determine whether a day is a holiday or not     *   S01195
     C*      ZACCH  - Access holidays file via Access Object          *   S01195
     C*      (/COPY from ZSRSRC)                                      *   S01195
     C*  14. ZA0850 - Calculate a period date                         *
     C*  15. ZA0890 - Edit forward points                             *
     C*  16. ZA0900 - Calculate cross exchange rate                   *
     C*  17. ZA0910 - Calculate day in the week                       *
     C*  18. ZA1150 - Convert Rate to scaled rate                     *
     C*  19. ZA1160 - Convert scaled rate to unscaled rate            *
     C*                                                               *
     C*   --  Single Call Routines  --                                *
     C*                                                               *
     C*  20. #A     - Initial processing.                             *
     C***21.*ZA0150*-*Access*ICD*file,*record*from*PF/TABTB10**********   S01194
     C*  22. ZA0870 - Retrieve number of decimals for base currency   *
     C*  23. #C     - Termination processing.                         *
     C*  24. INFSR  - Error handling sub- routine. (File errors)      *
     C*  25. *PSSR  - Error handling sub- routine. (Program errors)   *
     C*                                                               *
     C*   --  Routines which are not called --                        *
     C*                                                               *
     C***26.*ZA0730*-*Determine*next*working*day***********************   S01195
     C***25.*ZA0780*-*Apply*forward*points*to*a*rate*******************   S01194
     C*  26. ZA0790 - Calculate number of decimals for a cross rate   *
     C*                                                               *
     C*                                                               *
     C*   --  External Programs Called --                             *
     C*                                                               *
     C*      CM0020 - Format and output data to the P.C.              *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #B     - Main Processing; handles screen pro-    *
     C*                       cessing.                                *
     C*                                                               *
     C*  FIELDS USED:                                                 *
     C*                                                               *
     C*                                                               *
     C*  CALLED BY : MAIN PROGRAM                                     *
     C*  CALLS     :  #BA   --   Exchange Rates against base          *
     C*               #BB   --   Cross exchange rates                 *
     C*               #BC   --   Download work fields to enquiry      *
     C*                                                    window     *
     C*                                                               *
     C*****************************************************************
     C*
     C           #B        BEGSR
     C*
     C*
     C**  Access the current prompts file
     C*
     C*          1         CHAINFX38CPLL             71
     C***        1         CHAINCA38CPLL             71                   S01166
     C*
     C***        *IN71     IFEQ '1'                        B1             S01166
     C***                  MOVE '003'     DBASE            *1 ************S01166
     C*                    MOVEL'FX38CPLL'DBFILE           *1 *           S01166
     C***                  MOVEL'CA38CPLL'DBFILE           *1 *           S01166
     C***                  MOVE *BLANKS   DBKEY            *1 * D.B ERROR S01166
     C***                  MOVE '1'       *INU7            *1 *    003    S01166
     C***                  MOVE '1'       *INU8            *1 *           S01166
     C***                  GOTO #B9                        *1 ************S01166
     C***                  END                             E1             S01166
     C*
     C*
     C***  Clear the display arrays
     C**
     C***                  MOVE *BLANKS   @PN                             S01166
     C                     MOVE *BLANKS   @DP
     C                     MOVE *BLANKS   @LR
     C                     MOVE *BLANKS   @HR
     C*
     C                     MOVE 'Y'       @SNDYN  1
     C*                                                                   S01166
     C           *IN05     IFEQ '0'                                       S01166
     C**********           WRITEDL3160S0               30          S01166 S01117
     C                     WRITETM3160S0               30                 S01117
     C                     END                                            S01166
      *                                                                   S01280
      * Write screen header - update time                                 S01280
     C                     WRITETM3160F0               30                 S01280
     C*                                                                   S01166
     C**********           WRITEDL3160F1        30  display screen S01166 S01117
     C                     WRITETM3160F1               30  display screen S01117
     C*                                                                   S01166
     C**********           READ DL3160DD        0530read screen    S01166 S01117
     C                     READ TM3160DD               0530read screen    S01117
     C*                                                                   S01166
     C**         *IN10     DOWEQ'1'                        help    S01166 S01199
     C**                   SETOF                     10            S01166 S01199
     C**                   CALL 'SDMENU'                           S01166 S01199
     C**                   READ DL3160DD               0530        S01166 S01199
     C**                   END                                     S01166 S01199
     C*                                                                   S01166
     C           *IN05     IFEQ '1'                        cmd/5          S01166
     C                     MOVEL@WCUR1    DDCCY1             refresh      S01166
     C                     MOVEL@WCUR2    DDCCY2                          S01166
     C                     SETOF                     05                   S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C**
     C**  Call relevant routine for each enquiry type
     C*
     C*   --  #BA is called if one currency is blank (i.e against base)
     C*   --  #BB is called otherwise (genuine cross exchange rate)
     C*
     C           DDCCY1    IFEQ *BLANKS                    B1
     C*********************MOVELIDCYDL****DDCCY1************1*************S01319
     C                     MOVELBNCYDL    DDCCY1           *1             S01319
     C                     END                             E1
     C*
     C           DDCCY2    IFEQ *BLANKS                    B1
     C*********************MOVELIDCYDL****DDCCY2************1*************S01319
     C                     MOVELBNCYDL    DDCCY2           *1             S01319
     C                     END                             E1
     C*
     C                     SETOF                     404142               S01166
     C                     CALL 'ZA0250'                                  S01166
     C*                                                                   S01166
     C**********           MOVEL'20'      K20                      S01166 S01194
     C**********           MOVELDDCCY1    KCCY                     S01166 S01194
     C**********           MOVEL'1'       K1                       S01166 S01194
     C**********                                                   S01166 S01194
     C********** CCYKEY    CHAINTABTG10F             41            S01166 S01194
     C********** *IN41     IFEQ '1'                                S01166 S01194
     C**********           SETON                     40    **2     S01166 S01194
     C**********           MOVEL'BBM0013' @MSGID 10        **2     S01166 S01194
     C**********           CALL 'ZA0240'                   **2     S01166 S01194
     C**********           PARM           @MSGID           **2     S01166 S01194
     C**********           END                                     S01166 S01194
      *                                                                   S01194
      * Validate first currency via call to Access Object                 S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM *BLANKS   @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           DDCCY1                          S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
      *                                                                   S01194
     C           @RTCD     IFNE *BLANKS                                   S01194
     C                     SETON                     4041                 S01194
     C                     MOVEL'BBM0013' @MSGID 10                       S01194
     C                     CALL 'ZA0240'                                  S01194
     C                     PARM           @MSGID                          S01194
     C                     END                                            S01194
      *                                                                   S01194
     C** Currency must be a valid dealing currency                        S01280
     C*                                                                   S01280
     C           A6DLCI    IFEQ 'N'                                       S01280
     C           *IN41     ANDEQ'0'                                       S01280
     C                     MOVE '1'       *IN40                           S01280
     C                     MOVE '1'       *IN41                           S01280
     C                     MOVEL'MMM0202' @MSGID                          S01280
     C                     CALL 'ZA0240'                                  S01280
     C                     PARM           @MSGID                          S01280
     C                     END                                            S01280
     C*                                                                   S01280
     C**********                                                   S01166 S01194
     C**********           MOVEL'20'      K20                      S01166 S01194
     C**********           MOVELDDCCY2    KCCY                     S01166 S01194
     C**********           MOVEL'1'       K1                       S01166 S01194
     C**********                                                   S01166 S01194
     C********** CCYKEY    CHAINTABTG10F             42            S01166 S01194
     C********** *IN42     IFEQ '1'                                S01166 S01194
     C**********           SETON                     40    **2     S01166 S01194
     C**********           MOVEL'BBM0013' @MSGID           **2     S01166 S01194
     C**********           CALL 'ZA0240'                   **2     S01166 S01194
     C**********           PARM           @MSGID           **2     S01166 S01194
     C**********           END                                     S01166 S01194
      *                                                                   S01194
      * Validate second currency via call to Access Object                S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM *BLANKS   @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           DDCCY2                          S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
      *                                                                   S01194
     C           @RTCD     IFNE *BLANKS                                   S01194
     C                     SETON                     4042                 S01194
     C                     MOVEL'BBM0013' @MSGID 10                       S01194
     C                     CALL 'ZA0240'                                  S01194
     C                     PARM           @MSGID                          S01194
     C                     END                                            S01194
      *                                                                   S01280
     C** Currency must be a valid dealing currency                        S01280
     C*                                                                   S01280
     C           A6DLCI    IFEQ 'N'                                       S01280
     C           *IN42     ANDEQ'0'                                       S01280
     C                     MOVE '1'       *IN40                           S01280
     C                     MOVE '1'       *IN42                           S01280
     C                     MOVEL'MMM0202' @MSGID                          S01280
     C                     CALL 'ZA0240'                                  S01280
     C                     PARM           @MSGID                          S01280
     C                     END                                            S01280
     C*                                                                   S01280
      * If two currencies are the same, this is an error                  S01280
     C           DDCCY1    IFEQ DDCCY2                                    S01280
     C           *IN40     ANDEQ'0'                                       S01280
     C                     SETON                     404142               S01280
     C                     MOVEL'FXM0019' @MSGID                          S01280
     C                     CALL 'ZA0240'                                  S01280
     C                     PARM           @MSGID                          S01280
     C                     END                                            S01280
     C*                                                                   S01166
     C           *IN40     IFEQ '1'                                       S01166
     C                     GOTO #B9                                       S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C                     MOVELDDCCY1    @WCUR1  3                       S01166
     C                     MOVELDDCCY2    @WCUR2  3                       S01166
     C*
     C***********DDCCY1****IFEQ*IDCYDL*********************B1*************S01319
     C***********DDCCY2****OREQ*IDCYDL*********************X1*************S01319
     C           DDCCY1    IFEQ BNCYDL                     B1             S01319
     C           DDCCY2    OREQ BNCYDL                     X1             S01319
     C                     EXSR #BA                        *1
     C                     ELSE                            X1
     C                     EXSR #BB                        *1
     C                     END                             E1
     C*
     C           *INU7     CABEQ'1'       #B9
     C*
     C*  If no data to be sent to the PC, bypass updates to arrays
     C*
     C           @SNDYN    IFEQ 'Y'                        B1
     C*
     C** Lock DTAARA/AMENQ1AA to program and update        *1
     C*
     C***        *NAMVAR   DEFN AMENQ1AA  AMENQ1           *1             S01166
     C***        *LOCK     IN   AMENQ1                     *1             S01166
     C*                                                                   S01166
     C                     EXSR #BC                        *1             S01166
     C***                  MOVE @AMENQ    AMENQ1           *1             S01166
     C*
     C***                  OUT  AMENQ1                 71  *1             S01166
     C***        *IN71     IFEQ '1'                        B*2            S01166
     C***                  MOVE '007'     DBASE            **2************S01166
     C***                  MOVEL'AMENQ1AA'DBFILE           **2*           S01166
     C***                  MOVE *BLANKS   DBKEY            **2* D.B ERROR S01166
     C***                  MOVE '1'       *INU7            **2*    007    S01166
     C***                  MOVE '1'       *INU8            **2*           S01166
     C***                  GOTO #B9                        **2************S01166
     C***                  END                             E*2            S01166
     C                     END                             E1
     C*
     C*
     C** Set up details of Top and Bottom fields appearing in Window 1
     C** and update LF/FX38CPLL with these details.
     C** Update LF/FX38CPLL with new Top/Bottom details
     C*
     C*                    UPDATFX38CPP0               71
     C***                  UPDATCA38CPP0               71                 S01166
     C***        *IN71     IFEQ '1'                        B1             S01166
     C***                  MOVE '006'     DBASE            *1 ************S01166
     C*                    MOVEL'FX38CPP0'DBFILE           *1 *
     C***                  MOVEL'CA38CPP0'DBFILE           *1 *           S01166
     C***                  MOVE *BLANKS   DBKEY            *1 * D.B ERROR S01166
     C***                  MOVE '1'       *INU7            *1 *    006    S01166
     C***                  MOVE '1'       *INU8            *1 *           S01166
     C***                  GOTO #B9                        *1 ************S01166
     C***                  END                             E1             S01166
     C*
     C*
     C*
     C** Call CM0020 to transmit details in DTAARA/AMENQ1AA to PC
     C*
     C***                  CALL 'CM0020'                                  S01166
     C***                  PARM *BLANK    @TERM                           S01166
     C***                  PARM 'ER'      @ESER   2                       S01166
     C***                  PARM '1'       @PWNW   1                       S01166
     C***                  PARM @ENQU     @ENQU                           S01166
     C***                  PARM '018'     @ENQN   3                       S01166
     C***                  PARM *BLANK    @BLNK   1                       S01166
     C***                                                                 S01166
     C***IF U5 OR U6 ON - ERROR IN CM0020 TERMINATE PROGRAM               S01166
     C***                                                                 S01166
     C***        @TERM     CABEQ'E'       #B9                             S01166
     C***                                                                 S01166
     C           #B9       ENDSR                           **#B9**        S01166
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #BA  -  Exchange rate against base               *
     C*                                                               *
     C*                                                               *
     C*  FIELDS USED:  Input  -- DDCCY1    )    Input                 *
     C*                       -- DDCCY2    )      currencies          *
     C*                                                               *
     C*                Output -- @PN       (Period names)             *
     C*                       -- @DP       (Dates -- ddmmmyy sn)      *
     C*                       -- @LR       (Low rates)                *
     C*                       -- @HR       (High rates)               *
     C*                                                               *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*  CALLS     : ZA1150   - Convert rate to scaled rate           *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C*
     C           #BA       BEGSR
     C*
     C*
     C*  Access Currency file for the non-base currency.
      *  (via Access Object)                                              S01194
     C*
     C***********DDCCY1****IFEQ*IDCYDL*********************B1*************S01319
     C           DDCCY1    IFEQ BNCYDL                     B1             S01319
     C                     MOVELDDCCY2    @CUR             *1
     C                     ELSE                            X1
     C                     MOVELDDCCY1    @CUR             *1
     C                     END                             E1
     C********** @@1200    CHAINFDCCYTLL             80                   S01194
     C**********                                                          S01194
     C********** *IN80     IFEQ '1'                        B1             S01194
     C**********           SETON                     U7U8  *1             S01194
     C**********           MOVEL'FDCCYTLL'DBFILE           *1             S01194
     C**********           MOVEL'004'     DBASE            *1             S01194
     C**********           MOVEL@@1200    DBKEY            *1             S01194
     C**********           GOTO #BA9                       *1             S01194
     C**********           END                             E1             S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @CUR    3                       S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C***
     C***   Convert High and Low Spot Rates
     C***
     C***********DDCCY1****IFEQ*IDCYDL*********************B1*************S01319
     C           DDCCY1    IFEQ BNCYDL                     B1             S01319
     C                     Z-ADD@NQDPB    @@NDP1           *1             S01194
     C**********           Z-ADDNQDP      @@NDP2           *1             S01194
     C                     Z-ADDA6NQDP    @@NDP2  10       *1             S01194
     C                     ELSE                            X1
     C**********           Z-ADDNQDP      @@NDP1           *1             S01194
     C                     Z-ADDA6NQDP    @@NDP1  10       *1             S01194
     C                     Z-ADD@NQDPB    @@NDP2           *1
     C                     END                             E1
     C**********           Z-ADDSEXP      @@SXP1                          S01194
     C                     Z-ADDA6SCEX    @@SXP1                          S01194
     C                     Z-ADD0         @@SXP2
     C**********           Z-ADDLOSP      @@INRT                          S01194
     C                     Z-ADDA6LSPR    @@INRT                          S01194
     C                     MOVE 'M'       @@FCMD
     C                     EXSR ZA1150
     C*
     C** CHECK FOR RETURN ERROR CODE
     C           @@ERCD    IFEQ 1
     C           @@ERCD    OREQ 3
     C*
     C** SET UP DATABASE ERROR FIELDS
     C                     MOVEL'        'DBFILE           ***************
     C                     MOVEL'905'     DBASE            * DBERROR 905 *
     C**********           MOVELLOSP      DBKEY            ***************S01194
     C                     MOVELA6LSPR    DBKEY            ***************S01194
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     GOTO #BA9
     C                     END
     C*
     C                     Z-ADD@@SCRT    @@IRAT
     C*
     C                     EXSR ZA0760
     C                     MOVE @@ORAT    @LR,3
     C*
     C**********           Z-ADDHGSP      @@INRT                          S01194
     C                     Z-ADDA6HSRT    @@INRT                          S01194
     C                     EXSR ZA1150
     C*
     C** CHECK FOR RETURN ERROR CODE
     C           @@ERCD    IFEQ 1
     C           @@ERCD    OREQ 3
     C*
     C** SET UP DATABASE ERROR FIELDS
     C                     MOVEL'        'DBFILE           ***************
     C                     MOVEL'905'     DBASE            * DBERROR 905 *
     C**********           MOVELHGSP      DBKEY            ***************S01194
     C                     MOVELA6HSRT    DBKEY            ***************S01194
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     GOTO #BA9
     C                     END
     C*
     C                     Z-ADD@@SCRT    @@IRAT
     C*
     C                     EXSR ZA0760
     C                     MOVE @@ORAT    @HR,3
     C*
     C**********           MOVELFXSP      @DP,3                           S01194
     C                     MOVELA6FXSD    @DP,3                           S01194
     C           @@NDP     ADD  1         @F      20
     C*
     C** Find the points rates.
     C** Define search argument for chain to LF/FDCCYPLL.
     C*
     C                     MOVE @CUR      @@CCY
     C                     MOVE *BLANKS   @@TPRD  1
     C                     Z-ADD*ZERO     @@PRD   20
     C           KLPTS     KLIST
     C                     KFLD           @@CCY
     C                     KFLD           @@TPRD
     C                     KFLD           @@PRD
     C           KLPTS     SETLLFDCCYPLL
     C**
     C**
     C           1         DO   12        @N      20       B1
     C*
     C                     READ FDCCYPLL                 80*1
     C*
     C** Deal with Data Base Error
     C*
     C           XPDLTF    IFEQ '*'                        B*2
     C           *IN80     OREQ '1'                        X*2
     C           XPCCY     ORNE @@CCY                      X*2            S01280
     C                     MOVEL'FDCCYPLL'DBFILE           **2
     C                     MOVEL'923'     DBASE            ***************
     C                     MOVEL@@CCY     DBKEY            *             *
     C                     MOVE '1'       *INU7            * DBERROR 923 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO #BA9                       ***************
     C                     END                             E*2
     C*
     C*  Jump round Spot Rate Line  (line 3)
     C*
     C                     Z-ADD@N        @L      20       *1
     C           @N        IFGE 3                          B*2
     C                     ADD  1         @L               **2
     C                     END                             E*2
     C*
     C*  Load dates and points
     C*
     C***                  MOVELXPPRDX    @PN,@L           *1
     C                     MOVELXPPRDD    @DP,@L           *1
     C                     MOVELXPLOPT    @LR,@L           *1
     C                     MOVELXPHIPT    @HR,@L           *1
     C*
     C                     END                             E1
     C*
     C*
     C*
     C           #BA9      ENDSR                           **#BA9**
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #BB  -  Cross exchange rate enquiry              *
     C*                                                               *
     C*                                                               *
     C*  FIELDS USED:  Input  -- DDCCY1    )    Input                 *
     C*                       -- DDCCY2    )      currencies          *
     C*                                                               *
     C*                Output -- @PN       (work arrays)              *
     C*                       -- @DP       (work arrays)              *
     C*                       -- @LR       (work arrays)              *
     C*                       -- @HR       (work arrays)              *
     C*                                                               *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*  CALLS     :                                                  *
     C*                                                               *
     C*                                                               *
     C*                                                               *
     C*****************************************************************
     C*
     C*
     C           #BB       BEGSR
     C**
     C***  Access spot days and spot dates for the two currencies
     C**   (via calls to Access Object)                                   S01194
     C                     MOVELDDCCY1    @CUR
     C*
     C********** @@1200    CHAINFDCCYTLL             80                   S01194
     C**********                                                          S01194
     C********** *IN80     IFEQ '1'                        B1             S01194
     C**********           MOVEL'FDCCYTLL'DBFILE           *1             S01194
     C**********           MOVEL'004'     DBASE            *1             S01194
     C**********           MOVEL@@1200    DBKEY            *1             S01194
     C**********           MOVE '1'       *INU7            *1             S01194
     C**********           MOVE '1'       *INU8            *1             S01194
     C**********           GOTO #BB9                       *1             S01194
     C**********           END                             E1             S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @CUR                            S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C**                                                                  S01194
     C**********           Z-ADDFXSP      @@SPD1                          S01194
     C                     Z-ADDA6FXSD    @@SPD1                          S01194
     C**********           Z-ADDSPDY      @@WSP1                          S01194
     C                     Z-ADDA6SPDY    @@WSP1                          S01194
     C**********           Z-ADDHGSP      @HISP1                          S01194
     C                     Z-ADDA6HSRT    @HISP1                          S01194
     C**********           Z-ADDLOSP      @LOSP1                          S01194
     C                     Z-ADDA6LSPR    @LOSP1                          S01194
     C**********           Z-ADDDPBF      @DPBF1                          S01194
     C                     Z-ADDA6DPBF    @DPBF1                          S01194
     C**********           Z-ADDCDP       @CDP1                           S01194
     C                     Z-ADDA6NBDP    @CDP1                           S01194
     C**********           Z-ADDNQDP      @NQDP1                          S01194
     C                     Z-ADDA6NQDP    @NQDP1                          S01194
     C**********           MOVELXRMD      @XRMD1                          S01194
     C                     MOVELA6MDEX    @XRMD1                          S01194
     C*
     C**  move scale exponent to work field
     C**********           Z-ADDSEXP      @SCXP1  10                      S01194
     C                     Z-ADDA6SCEX    @SCXP1  10                      S01194
     C***
     C                     MOVELDDCCY2    @CUR
     C*
     C********** @@1200    CHAINFDCCYTLL             80                   S01194
     C**********                                                          S01194
     C********** *IN80     IFEQ '1'                        B1             S01194
     C**********           SETON                     U7U8  *1             S01194
     C**********           MOVEL'FDCCYTLL'DBFILE           *1             S01194
     C**********           MOVEL'004'     DBASE            *1             S01194
     C**********           MOVEL@@1200    DBKEY            *1             S01194
     C**********           MOVE '1'       *INU7            *1             S01194
     C**********           MOVE '1'       *INU8            *1             S01194
     C**********           GOTO #BB9                       *1             S01194
     C**********           END                             E1             S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @CUR                            S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C**                                                                  S01194
     C**********           Z-ADDFXSP      @@SPD2                          S01194
     C                     Z-ADDA6FXSD    @@SPD2                          S01194
     C**********           Z-ADDSPDY      @@WSP2                          S01194
     C                     Z-ADDA6SPDY    @@WSP2                          S01194
     C**********           Z-ADDHGSP      @HISP2                          S01194
     C                     Z-ADDA6HSRT    @HISP2                          S01194
     C**********           Z-ADDLOSP      @LOSP2                          S01194
     C                     Z-ADDA6LSPR    @LOSP2                          S01194
     C**********           Z-ADDDPBF      @DPBF2                          S01194
     C                     Z-ADDA6DPBF    @DPBF2                          S01194
     C**********           Z-ADDCDP       @CDP2                           S01194
     C                     Z-ADDA6NBDP    @CDP2                           S01194
     C**********           Z-ADDNQDP      @NQDP2                          S01194
     C                     Z-ADDA6NQDP    @NQDP2                          S01194
     C**********           MOVELXRMD      @XRMD2                          S01194
     C                     MOVELA6MDEX    @XRMD2                          S01194
     C*
     C**  move scale exponent to work field
     C**********           Z-ADDSEXP      @SCXP2  10                      S01194
     C                     Z-ADDA6SCEX    @SCXP2  10                      S01194
     C**
     C***  Calculate mutual spot day
     C**
     C                     EXSR ZA0820
     C                     MOVEL@@VDT     @DP,3
     C                     Z-ADD@@VDT     @@SPDD
     C**
     C**
     C***  Calculate two cross rates for spot date
     C**
     C                     EXSR #BBA
     C**
     C***  Decide if first rate is low (left column) or high (right)
     C**
     C           @XR1      IFLT @XR2                       B1
     C                     MOVE 'L'       @LFTRT  1        *1
     C                     ELSE                            X1
     C                     MOVE 'R'       @LFTRT           *1
     C                     END                             E1
     C**
     C**
     C                     Z-ADD@XR1      @@IRAT
     C                     EXSR ZA0760
     C           @LFTRT    IFEQ 'L'                        B1
     C                     MOVE @@ORAT    @LR,3            *1
     C                     Z-ADD@@IRAT    @LEFTR 138       *1
     C                     ELSE                            X1
     C                     MOVE @@ORAT    @HR,3            *1
     C                     Z-ADD@@IRAT    @RITER 138       *1
     C                     END                             E1
     C**
     C                     Z-ADD@XR2      @@IRAT
     C                     EXSR ZA0760
     C           @LFTRT    IFEQ 'L'                        B1
     C                     MOVE @@ORAT    @HR,3            *1
     C                     Z-ADD@@IRAT    @RITER           *1
     C                     ELSE                            X1
     C                     MOVE @@ORAT    @LR,3            *1
     C                     Z-ADD@@IRAT    @LEFTR           *1
     C                     END                             E1
     C**
     C           @@NDP     ADD  1         @F
     C**
     C**   The spot line is now filled . Use these figures to
     C***      calculate mutual forward point dates
     C**
     C           1         DO   12        @N               B1
     C**
     C**   Load dates
     C**
     C                     MOVEL@PU,@N    @@PRDU           *1
     C                     MOVEL@PT,@N    @@PRDT           *1
     C                     EXSR ZA0850                     *1
     C                     Z-ADD@N        @L               *1
     C           @N        IFGE 3                          B*2
     C                     ADD  1         @L               **2
     C                     END                             E*2
     C**
     C***  Calculate two cross rates (@XR1 AND @XR2)
     C***     and move to left or right depending on the spot decision
     C**
     C           @@ESWT    IFEQ '0'                        B*2
     C                     MOVEL@@VDT     @DP,@L           **2
     C                     EXSR #BBA                       **2
     C                     END                             E*2
     C**
     C***                  MOVE @PT,@N    @PN,@L           *1             S01166
     C           @@NDP     ADD  1         @V      20       *1
     C           @LFTRT    IFEQ 'L'                        B*2
     C           @XR1      SUB  @LEFTR    @@LRAT 138       **2
     C           @XR2      SUB  @RITER    @@HRAT 138       **2
     C                     ELSE                            X*2
     C           @XR2      SUB  @LEFTR    @@LRAT           **2
     C           @XR1      SUB  @RITER    @@HRAT           **2
     C                     END                             E*2
     C********** @@LRAT    MULT @@AY,@V   @@LPTS           *1
     C********** @@HRAT    MULT @@AY,@V   @@HPTS           *1
     C           @@LRAT    MULT @@AY,@V   @@LPTS    H      *1
     C           @@HRAT    MULT @@AY,@V   @@HPTS    H      *1
     C                     MOVEL@@LPTS    @LR,@L           *1
     C                     MOVEL@@HPTS    @HR,@L           *1
     C                     END                             E1
     C**
     C**
     C                     MOVE '0'       *IN72
     C*
     C           #BB9      ENDSR                           **#BB9**
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #BBA   - Calculate two cross rates for a date    *
     C*                                                               *
     C*                                                               *
     C*  FIELDS USED:  DDCCY1  -- First Currency                      *
     C*                DDCCY2  -- Second Currency                     *
     C*                @@VDT   -- Value Date                          *
     C*                @HISP1/2  -- First/second High Spots           *
     C*                @LOSP1/2  -- First/second Low Spots            *
     C*                @XRMD1/2  -- First/second Multiply/divides     *
     C*                @NQDP1/2  -- First/second Normal Quote Dec.Pl. *
     C*                                                               *
     C*                                                               *
     C*     OUTPUT:    @XR1    -- First Cross Rate                    *
     C*                @XR2    -- Second Cross Rate                   *
     C*                @XM1    -- First Multiply/Divide Indicator     *
     C*                @XM2    -- Second Multiply/Divide Indicator    *
     C*                                                               *
     C*  CALLED BY : #BB                                              *
     C*  CALLS     : ZA0630                                           *
     C*              ZA0900                                           *
     C*              ZA1150     - Convert rate to scaled rate         *
     C*
     C*
     C*****************************************************************
     C*
     C           #BBA      BEGSR
     C*
     C**
     C***   Calculate forward outright rates on each line
     C**        Each line has a buy and sell for each currency
     C**           Currency 1, Buy rate, is @RBC1
     C**           Currency 1, Sell rate, is @RSC1
     C**           Currency 2, Buy rate, is @RBC2
     C**           Currency 2, Sell rate, is @RSC2
     C**
     C                     MOVELDDCCY1    @@CCY            *1
     C**********           Z-ADD@HISP1    HGSP             *1             S01194
     C                     Z-ADD@HISP1    A6HSRT           *1             S01194
     C**********           Z-ADD@LOSP1    LOSP             *1             S01194
     C                     Z-ADD@LOSP1    A6LSPR           *1             S01194
     C**********           MOVEL@XRMD1    XRMD             *1             S01194
     C                     MOVEL@XRMD1    A6MDEX           *1             S01194
     C**********           MOVEL@NQDP1    NQDP             *1             S01194
     C                     MOVEL@NQDP1    A6NQDP           *1             S01194
     C*
     C** MOVE FIRST CURRENCY SCALING TO WORK FIELD
     C                     Z-ADD@SCXP1    @@SXP1           *1
     C**
     C                     MOVE 'B'       @@BYSL           *1
     C                     EXSR ZA0630                     *1
     C*
     C** If database error branch to end of subroutine
     C           *INU7     CABEQ'1'       #BBA9
     C*
     C                     Z-ADD@@MOR     @RBC1  138       *1
     C**
     C                     MOVE 'S'       @@BYSL           *1
     C                     EXSR ZA0630                     *1
     C*
     C** If database error branch to end of subroutine
     C           *INU7     CABEQ'1'       #BBA9
     C*
     C                     Z-ADD@@MOR     @RSC1  138       *1
     C**
     C                     MOVELDDCCY2    @@CCY            *1
     C**********           Z-ADD@HISP2    HGSP             *1             S01194
     C                     Z-ADD@HISP2    A6HSRT           *1             S01194
     C**********           Z-ADD@LOSP2    LOSP             *1             S01194
     C                     Z-ADD@LOSP2    A6LSPR           *1             S01194
     C**********           MOVEL@XRMD2    XRMD             *1             S01194
     C                     MOVEL@XRMD2    A6MDEX           *1             S01194
     C**********           MOVEL@NQDP2    NQDP             *1             S01194
     C                     MOVEL@NQDP2    A6NQDP           *1             S01194
     C*
     C** MOVE SECOND CURRENCY SCALING TO WORK FIELD
     C                     Z-ADD@SCXP2    @@SXP1           *1
     C**
     C                     MOVE 'B'       @@BYSL           *1
     C                     EXSR ZA0630                     *1
     C*
     C** If database error branch to end of subroutine
     C           *INU7     CABEQ'1'       #BBA9
     C*
     C                     Z-ADD@@MOR     @RBC2  138       *1
     C**
     C                     MOVE 'S'       @@BYSL           *1
     C                     EXSR ZA0630                     *1
     C*
     C** If database error branch to end of subroutine
     C           *INU7     CABEQ'1'       #BBA9
     C*
     C                     Z-ADD@@MOR     @RSC2  138       *1
     C**
     C****   Calculate two cross rates
     C**
     C                     Z-ADD@RBC1     @@RAT1           *1
     C                     Z-ADD@RSC2     @@RAT2           *1
     C                     MOVEL@XRMD1    @@MDI1           *1
     C                     MOVEL@XRMD2    @@MDI2           *1
     C                     EXSR ZA0900                     *1
     C                     Z-ADD@@CSRT    @XR1             *1
     C                     MOVEL@@FCMD    @XM1    1        *1
     C**
     C                     Z-ADD@RSC1     @@RAT1 138       *1
     C                     Z-ADD@RBC2     @@RAT2 138       *1
     C                     MOVEL@XRMD1    @@MDI1           *1
     C                     MOVEL@XRMD2    @@MDI2           *1
     C                     EXSR ZA0900                     *1
     C                     Z-ADD@@CSRT    @XR2             *1
     C                     MOVEL@@FCMD    @XM2    1        *1
     C*
     C**
     C**    Convert CROSS rate to scale rate
     C                     Z-ADD@SCXP1    @@SXP1  10
     C                     Z-ADD@SCXP2    @@SXP2  10
     C                     Z-ADD@XR1      @@INRT
     C                     MOVE 'M'       @@FCMD
     C                     EXSR ZA1150
     C*
     C**    MOVE SCALE RATED
     C                     Z-ADD@@SCRT    @XR1
     C*
     C** STORE OUTPUT FIELDS FROM ZA1150 TO WORK FIELD FOR FIRST CCY
     C                     Z-ADD@@ISRT    @ISRT1
     C                     Z-ADD@@ERCD    @ERCD1
     C*
     C**  Convert CROSS rate to scale rate
     C                     Z-ADD@XR2      @@INRT
     C                     EXSR ZA1150
     C*
     C** STORE OUTPUT FIELDS FROM ZA1150 TO WORK FIELD FOR SECOND CCY
     C                     Z-ADD@@ISRT    @ISRT2
     C                     Z-ADD@@ERCD    @ERCD2
     C*
     C**    MOVE SCALE RATED
     C                     Z-ADD@@SCRT    @XR2
     C*
     C**  CHECK  IF RETURN CODE1 ='1'  OR RETURN CODE2 = '1'
     C**         USE INVERSE OF SCALE RATE FOR BOTH CROSS RATES
     C           @ERCD1    IFEQ 1                          B1
     C           @ERCD2    OREQ 1                          B1
     C                     Z-ADD@ISRT1    @XR1             *1
     C                     Z-ADD@ISRT2    @XR2             *1
     C                     END                             E1
     C*
     C**  CHECK  IF RETURN CODE ='3' USE 99999.99999999
     C           @ERCD1    IFEQ 3                          B1
     C           @ERCD2    OREQ 3                          B1
     C                     Z-ADD@IN,1     @XR1             *1
     C                     Z-ADD@IN,1     @XR2             *1
     C                     END                             E1
     C*
     C                     GOTO #BBA9
     C*
     C** DEFINE WORK FIELDS
     C           *LIKE     DEFN @@ISRT    @ISRT1
     C           *LIKE     DEFN @@ERCD    @ERCD1
     C           *LIKE     DEFN @@ISRT    @ISRT2
     C           *LIKE     DEFN @@ERCD    @ERCD2
     C*
     C           #BBA9     ENDSR                           **#BBA9**
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #BC    - Load work fields to window data area    *
     C*                                                               *
     C*                                                               *
     C*  FIELDS USED:                                                 *
     C*                                                               *
     C*                                                               *
     C*  CALLED BY : #B                                               *
     C*  CALLS     :                                                  *
     C*                                                               *
     C*****************************************************************
     C*
     C           #BC       BEGSR
     C*
     C*** Edit the days, so far stored as 'YYYYMMDD  '
     C***             to be translated to 'DDMMMYY SN'
     C***                              or 'MMMDDYY SN'
     C***     according to Installation control record
     C**
     C           1         DO   13        @N               B1
     C           @DP,@N    IFNE *BLANKS                    B*2
     C                     MOVEL@DP,@N    @@DTIN           **2
     C                     EXSR ZA0720                     **2
     C                     MOVE *BLANKS   @DP,@N           **2
     C                     MOVEL@@DATE    @DP,@N           **2
     C                     EXSR ZA0910                     **2
     C                     MOVE @@DNAM    @DP,@N           **2
     C                     END                             E*2
     C*
     C*** Edit the points, so far stored as '9999999   '
     C***             to be translated to '   .999999' aligned
     C***     a certain number of places to the right of the
     C***     spot rate decimal point. The offset is held in @F
     C**
     C*
     C           @N        IFNE 3                          B*2
     C                     MOVEL@LR,@N    @X7     7        **2
     C                     MOVE @X7       @@PNTS           **2
     C                     EXSR ZA0890                     **2
     C                     MOVE @@EPNT    @LR,@N           **2
     C                     MOVEL@HR,@N    @X7              **2
     C                     MOVEL@X7       @@PNTS           **2
     C                     EXSR ZA0890                     **2
     C                     MOVE @@EPNT    @HR,@N           **2
     C***
     C***  Fill in the default period names if none on LF/FDCCYPLL
     C***
     C***        @PN,@N    IFEQ *BLANKS                    B**3           S01166
     C***                  Z-ADD@N        @L               ***3           S01166
     C***        @N        IFGT 3                          B***4          S01166
     C***                  SUB  1         @L               ****4          S01166
     C***                  END                             E***4          S01166
     C***                  MOVE @PT,@L    @PN,@N           ***3           S01166
     C***                  END                             E**3           S01166
     C                     END                             E*2
     C***
     C                     END                             E1
     C***
     C***  Load working storage arrays to the enquiry window
     C***
     C***                  MOVEL@PN,1     @PN1                            S01166
     C                     MOVEL@DP,1     DDDP01                          S01166
     C                     MOVEL@HR,1     DDHR01                          S01166
     C                     MOVEL@LR,1     DDLR01                          S01166
     C*
     C***                  MOVEL@PN,2     @PN2                            S01166
     C                     MOVEL@DP,2     DDDP02                          S01166
     C                     MOVEL@HR,2     DDHR02                          S01166
     C                     MOVEL@LR,2     DDLR02                          S01166
     C*
     C                     MOVEL@DP,3     DDDP03                          S01166
     C                     MOVEL@HR,3     DDHR03                          S01166
     C                     MOVEL@LR,3     DDLR03                          S01166
     C*
     C***                  MOVEL@PN,4     @PN4                            S01166
     C                     MOVEL@DP,4     DDDP04                          S01166
     C                     MOVEL@HR,4     DDHR04                          S01166
     C                     MOVEL@LR,4     DDLR04                          S01166
     C*
     C***                  MOVEL@PN,5     @PN5                            S01166
     C                     MOVEL@DP,5     DDDP05                          S01166
     C                     MOVEL@HR,5     DDHR05                          S01166
     C                     MOVEL@LR,5     DDLR05                          S01166
     C*
     C***                  MOVEL@PN,6     @PN6                            S01166
     C                     MOVEL@DP,6     DDDP06                          S01166
     C                     MOVEL@HR,6     DDHR06                          S01166
     C                     MOVEL@LR,6     DDLR06                          S01166
     C*
     C***                  MOVEL@PN,7     @PN7                            S01166
     C                     MOVEL@DP,7     DDDP07                          S01166
     C                     MOVEL@HR,7     DDHR07                          S01166
     C                     MOVEL@LR,7     DDLR07                          S01166
     C*
     C***                  MOVEL@PN,8     @PN8                            S01166
     C                     MOVEL@DP,8     DDDP08                          S01166
     C                     MOVEL@HR,8     DDHR08                          S01166
     C                     MOVEL@LR,8     DDLR08                          S01166
     C*
     C***                  MOVEL@PN,9     @PN9                            S01166
     C                     MOVEL@DP,9     DDDP09                          S01166
     C                     MOVEL@HR,9     DDHR09                          S01166
     C                     MOVEL@LR,9     DDLR09                          S01166
     C*
     C***                  MOVEL@PN,10    @PN10                           S01166
     C                     MOVEL@DP,10    DDDP10                          S01166
     C                     MOVEL@HR,10    DDHR10                          S01166
     C                     MOVEL@LR,10    DDLR10                          S01166
     C*
     C***                  MOVEL@PN,11    @PN11                           S01166
     C                     MOVEL@DP,11    DDDP11                          S01166
     C                     MOVEL@HR,11    DDHR11                          S01166
     C                     MOVEL@LR,11    DDLR11                          S01166
     C*
     C***                  MOVEL@PN,12    @PN12                           S01166
     C                     MOVEL@DP,12    DDDP12                          S01166
     C                     MOVEL@HR,12    DDHR12                          S01166
     C                     MOVEL@LR,12    DDLR12                          S01166
     C*
     C***                  MOVEL@PN,13    @PN13                           S01166
     C                     MOVEL@DP,13    DDDP13                          S01166
     C                     MOVEL@HR,13    DDHR13                          S01166
     C                     MOVEL@LR,13    DDLR13                          S01166
     C*
     C*
     C           #BC9      ENDSR                           **#BC9**
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0630 - THIS SUBROUTINE CALCULATES THE FORWARD OUTRIGHT RATE*
     C*                                                              *
     C* CALLED BY:   #B                                              *
     C*                                                              *
     C* CALLS :   ZA0700                                             *
     C*       :   ZA1150   - Convert rate to scaled rate             *
     C*       :   ZA1160   - Convert scale rate to unscaled rate      *
     C*                                                              *
     C* INPUT  :  @@BYSL BUY/SELL RATE                         (1A)  *
     C*        :  @@SXP1 FIRST CURRENCY  SCALING EXPONENT      (1N)  *
     C*        :  @@SXP2 SECOND CURRENCY SCALING EXPONENT      (1N)  *
     C*                                                              *
     C*                                                              *
     C* OUTPUT :  @@MOR  FORWARD OUTRIGHT RATE                 (13N) *
     C*           @@MDI1 MULTIPLY/DIVIDE INDICATOR             (1A)  *
     C*                                                              *
     C* USES :    @@SPRT SPOT RATE                                   *
     C*           @@FPT  FORWARD POINTS                              *
     C*           @@C    ARRAY INDEX                                 *
     C*           @@AY   ARRAY OF POWERS OF 10                       *
     C*           @@WF1  WORKFIELD                                   *
     C*****************************************************************
     C*
     C           ZA0630    BEGSR
     C           @@BYSL    IFEQ 'B'                        B1
     C*
     C** If multiply/divide indicator is 'M' move high spot rate to
     C** spot rate work field otherwise fill with low spot rate.
     C********** XRMD      IFEQ 'M'                        B*2            S01194
     C           A6MDEX    IFEQ 'M'                        B*2            S01194
     C**********           MOVE HGSP      @@SPRT 138       **2            S01194
     C                     MOVE A6HSRT    @@SPRT 138       **2            S01194
     C*
     C** Otherwise multiply/divide is 'D'.
     C                     ELSE                            X*2
     C**********           MOVE LOSP      @@SPRT           **2            S01194
     C                     MOVE A6LSPR    @@SPRT           **2            S01194
     C                     END                             E*2
     C                     END                             E1
     C*
     C           @@BYSL    IFEQ 'S'                        B1
     C*
     C** If multiply/divide indicator is 'M' move low spot rate to
     C** spot rate work field otherwise fill with high spot rate.
     C********** XRMD      IFEQ 'M'                        B*2            S01194
     C           A6MDEX    IFEQ 'M'                        B*2            S01194
     C**********           MOVE LOSP      @@SPRT           **2            S01194
     C                     MOVE A6LSPR    @@SPRT           **2            S01194
     C*
     C** Otherwise multiply/divide is 'D'.
     C                     ELSE                            X*2
     C**********           MOVE HGSP      @@SPRT           **2            S01194
     C                     MOVE A6HSRT    @@SPRT           **2            S01194
     C                     END                             E*2
     C                     END                             E1
     C*
     C** Store multiply/divide indicator for output from routine.
     C**********           MOVE XRMD      @@MDI1  1                       S01194
     C                     MOVE A6MDEX    @@MDI1  1                       S01194
     C                     Z-ADD@@SXP1    @@SXP1
     C                     Z-ADD0         @@SXP2
     C                     Z-ADD@@SPRT    @@INRT
     C                     MOVE 'M'       @@FCMD
     C                     EXSR ZA1150
     C*
     C** CHECK FOR RETURN ERROR CODE
     C           @@ERCD    IFEQ 1
     C           @@ERCD    OREQ 3
     C*
     C** SET UP DATABASE ERROR FIELDS
     C**********           MOVEL'FDCCYTLL'DBFILE           ***************S01194
     C                     MOVEL'SDCURRPD'DBFILE           ***************S01194
     C                     MOVEL'905'     DBASE            * DBERROR 905 *
     C                     MOVEL@TXT,1    DBKEY            ***************
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C                     GOTO ZA0639
     C                     END
     C*
     C** MOVE scale rate TO WORK FIELD
     C                     Z-ADD@@SCRT    @@SPRT
     C*
     C** ZA0700  is an internal subroutine which is used
     C** to obtain forward points(@@FPT).
     C                     EXSR ZA0700
     C*
     C** Calculate forward outright rate by adding high/low spot rate
     C** to forward points & then dividing the result by 10 to the
     C***power*of*NQDP*(normally*quoted*decimal*places)***                S01194
     C** power of A6NQDP (normally quoted decimal places).                S01194
     C**********           Z-ADDNQDP      @@C     20                      S01194
     C                     Z-ADDA6NQDP    @@C     20                      S01194
     C                     ADD  1         @@C
     C           @@FPT     DIV  @@AY,@@C  @@WF1  158H
     C           @@WF1     ADD  @@SPRT    @@MOR  138
     C*
     C** Unscale forward outright rate
     C                     Z-ADD@@SXP1    @@SEXP
     C                     Z-ADD@@MOR     @@INRT
     C                     EXSR ZA1160
     C                     Z-ADD@@USRT    @@MOR
     C                     GOTO ZA0639
     C*
     C** Unexecuted processing to define fields used in routine.
     C                     MOVE @@BYSL    @@BYSL  1
     C                     MOVE @@FPT     @@FPT   72
     C*
     C           ZA0639    ENDSR
     C*
     C*****************************************************************
     C/EJECT
     C*******************************************************************
     C*
     C* ZA0680 - THIS SUBROUTINE CONVERTS YYYYMMDD FORMAT DATE TO
     C*          MIDAS DAY NUMBER FORMAT (NO. DAYS FROM 31/12/71)
     C*
     C*                                                               *
     C* CALLED BY :   ZA0700    (5 times)
     C****************ZA0730********************************************* S01195
     C*               ZA0850    (3 times)
     C*               ZA0910
     C*
     C*
     C* CALLS :
     C*
     C* INPUT  : @@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)
     C*
     C* OUTPUT : @@MDNO MIDAS DAY NUMBER  (SIZE : 5N)
     C*
     C* USES :   @@CC   NUMBER OF CENTURIES IN DATE
     C*          @@DAY  DAY NUMBER
     C*          @@REM  REMAINDER FROM DIVIDE
     C*          @@MTH  MONTH NUMBER
     C*          @MD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 MONTH
     C*          @@WK2  WORK FIELD (2,0)
     C*          @@WK5  WORK FIELD (5,0)
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @@YY   YEAR (2 CHARACTER)
     C*          @YD    COMPILATION TIME ARRAY FOR CUMULATIVE DAYS IN
     C*                 A FOUR YEAR PERIOD
     C*
     C*******************************************************************
     C*
     C           ZA0680    BEGSR
     C*
     C**  CLEAR OUT ANY 'OLD' DATA IN FIELD
     C                     Z-ADD0         @@MDNO  50
     C*
     C**   IF DATE GREATER THAN 31/12/2071 NEED EXTRA PROCESSING
     C           @@YYYY    IFGE 2072                       B1
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN CENTURY (SINCE 1971)
     C           @@CC      SUB  19        @@WK2   20       *1
     C           @@WK2     MULT 36524     @@MDNO           *1
     C*
     C**  YEAR 2000 IS A LEAP YEAR MUST ALLOW EXTRA DAY
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C           @@YYYY    ADD  28        @@WK2
     C*
     C           @@WK2     DIV  4         @@WK2
     C                     MVR            @@REM   10
     C*
     C**    MULTIPLY BY NUMBER OF DAYS IN FOUR YEAR PERIOD
     C           @@WK2     MULT 1461      @@WK5   50
     C                     ADD  @@WK5     @@MDNO
     C*
     C**  CHECK REMAINDER AND MONTH NUMBER
     C           @@REM     IFEQ 0                          B1
     C           @@MTH     ANDGT2                          B1
     C                     ADD  1         @@MDNO           *1
     C                     END                             E1
     C*
     C**  YEAR NOT LEAP YEAR,  ADD CUMULATIVE DAYS FOR YEAR
     C           @@REM     IFNE 0                          B1
     C                     ADD  @YD,@@REM @@MDNO           *1
     C                     END                             E1
     C*
     C**  ADD MONTHS THIS YEAR
     C                     ADD  @MD,@@MTH @@MDNO
     C*
     C**  ADD DAYS THIS MONTH
     C                     ADD  @@DAY     @@MDNO
     C*
     C           ZA0689    ENDSR                           **ZA0689 TAG**
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0700 - THIS SUBROUTINE CALCULATES FORWARD POINTS           *
     C*                                                              *
     C* CALLED BY:ZA0630                                             *
     C*                                                              *
     C* CALLS :   ZA0680                                             *
     C*                                                              *
     C* INPUT  :  @@VDT  VALUE DATE                            (8N)  *
     C*           @@CCY  CURRENCY CODE                         (3A)  *
     C*           @@BYSL BUY/SELL RATE                         (1A)  *
     C*                                                              *
     C*                                                              *
     C* OUTPUT :  @@FPT  FORWARD POINTS                        (7N)  *
     C*                                                              *
     C*                                                              *
     C* ADDITIONAL WORK FIELDS USED WITHIN THIS ROUTINE :
     C*                                                              *
     C*           @@SPDT SPOT DATE             (MIDAS DAY NO.)       *
     C*           @@VDAT VALUE DATE            (MIDAS DAY NO.)       *
     C*           @@TPRD TYPE OF PERIOD        ('W' IS WEEKS)        *
     C*           @@PRD  NUMBER OF PERIODS                           *
     C*           @@FP1  FORWARD POINTS FROM 1ST REC. USED IN CALC.  *
     C*           @@FP2  FORWARD POINTS FROM 2ND REC. USED IN CALC.  *
     C*           @@D1   MIDAS DAY NO. CORRESPONDING WITH @@FP1      *
     C*           @@D2   MIDAS DAY NO. CORRESPONDING WITH @@FP2      *
     C*           @@WF1  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@WF2  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *
     C*                                                  CALCULATION.*
     C*           @@MDNO MIDAS DAY NUMBER RETURNED FROM SR @@MDNO    *
     C*           @@DTWF DATE WORKFIELD                              *
     C*                                                              *
     C*                                                              *
     C*     AMEND NO. XXXXX                    DATE XX/XX/XX         *
     C*                                                              *
     C*****************************************************************
     C*
     C           ZA0700    BEGSR
     C*
     C**  Find first record on file for currency.
     C                     MOVE *LOVAL    @@DTWF  80
     C*
     C**  Load key used to access LF/FXCCYPLL.
     C           CCYLOW    KLIST
     C                     KFLD           @@CCY
     C                     KFLD           @@DTWF
     C           CCYLOW    SETLLFXCCYPLL
     C                     READ FXCCYPLL                 81
     C*
     C** If currency for record has not been found
     C** then there is a database error.
     C           @@CCY     IFNE XPCCY                      B1
     C                     MOVEL'FXCCYPLL'DBFILE           *1
     C                     MOVEL'924'     DBASE            ***************
     C                     MOVEL@@CCY     DBKEY            *             *
     C                     MOVE '1'       *INU7            * DBERROR 924 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C** If the value date is spot date , or before the first record
     C** on file for the currency then the points are zero.
     C*
     C********** @@VDT     IFEQ FXSP                       B1             S01194
     C           @@VDT     IFEQ A6FXSD                     B1             S01194
     C           @@VDT     ORLT XPPRDD                     *1
     C                     Z-ADD0         @@FPT   72       *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C**  Load key used to access LF/FXCCYPLL.
     C           CCYVDT    KLIST
     C                     KFLD           @@CCY
     C                     KFLD           @@VDT
     C           CCYVDT    SETLLFXCCYPLL
     C                     READ FXCCYPLL                 81
     C*
     C** If currency has not been found check previous record.
     C           @@CCY     IFNE XPCCY                       B1
     C           *IN81     OREQ '1'                         *1
     C**                                                                  E12292
     C** IF *IN81 IS ON, EOF IS ENCOUNTERED AND NEED REPOSITION FILE      E12292
     C** TO EOF MARK AND RESET THE EOF STATUS SAVE UP BY SYSTEM.          E12292
     C           *IN81     IFEQ '1'                         B*2           E12292
     C           CCYVDT    SETGTFXCCYPLL                    **2           E12292
     C                     END                              E*2           E12292
     C                     GOTO ZA0708                      *1
     C                     END                              E1
     C*
     C** Find midas day number of value date.
     C                     Z-ADD@@VDT     @@DTIN
     C                     EXSR ZA0680
     C                     Z-ADD@@MDNO    @@VDAT  50
     C*
     C** IF    record with = date found
     C           @@VDT     IFEQ XPPRDD                     B1
     C*
     C** IF Type of period is not 'D'
     C           XPTPRD    IFNE 'D'                        B*2
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B**3
     C********** XRMD      ANDEQ'D'                        ***3           S01194
     C           A6MDEX    ANDEQ'D'                        ***3           S01194
     C                     MOVE XPLOPT    @@FPT            ***3
     C                     GOTO ZA0709                     ***3
     C                     END                             E**3
     C*
     C           @@BYSL    IFEQ 'S'                        B**3
     C********** XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FPT            ***3
     C                     GOTO ZA0709                     ***3
     C                     END                             E**3
     C*
     C                     MOVE XPHIPT    @@FPT            **2
     C                     GOTO ZA0709                     **2
     C                     END                             E*2
     C*
     C** The type of period is 'D'.
     C** Date is spot + 1 , spot - 1 or spot - 2 days.
     C** Linear interpolation or extrapolation used between one week
     C** rate & 0 on the spot date.
     C*
     C*
     C** Find the one week rate.
     C** Define search argument for chain to LF/FDCCYPLL.
     C                     MOVE 'W'       @@TPRD  1        *1
     C                     Z-ADD1         @@PRD   20       *1
     C           WEEKRT    KLIST                           *1
     C                     KFLD           @@CCY            *1
     C                     KFLD           @@TPRD           *1
     C                     KFLD           @@PRD            *1
     C*
     C** CHAIN TO FILE FDCCYPLL
     C           WEEKRT    CHAINFDCCYPLL             80    *1
     C           XPDLTF    IFEQ '*'                        B*2
     C                     MOVE '1'       *IN80            **2
     C                     END                             E*2
     C*
     C** DEAL WITH DATA BASE ERROR
     C           *IN80     IFEQ '1'                        B1
     C                     MOVEL'FDCCYPLL'DBFILE           *1
     C                     MOVEL'923'     DBASE            ***************
     C                     MOVEL@@CCY     DBKEY            *             *
     C                     MOVE '1'       *INU7            * DBERROR 923 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B*2
     C********** XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP2   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C********** XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP2            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP2            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** Find 1 week date & spot date as a day number.
     C                     Z-ADDXPPRDD    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D2    50       *1
     C*
     C**********           Z-ADDFXSP      @@DTIN           *1             S01194
     C                     Z-ADDA6FXSD    @@DTIN           *1             S01194
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@SPDT  50       *1
     C*
     C*
     C** Forward points can now be calculated.
     C           @@VDAT    SUB  @@SPDT    @@WF1  158       *1
     C           @@FP2     MULT @@WF1     @@WF1            *1
     C           @@D2      SUB  @@SPDT    @@WF2   80       *1
     C           @@WF1     DIV  @@WF2     @@FPT            *1
     C                     GOTO ZA0709                     *1
     C*
     C                     END                             E1
     C*
     C*
     C** IF    record with > date found
     C           XPPRDD    IFGT @@VDT                      B1
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B*2
     C********** XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP2   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C********** XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP2            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP2            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** Find day number of date.
     C                     Z-ADDXPPRDD    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D2    50       *1
     C*
     C** READ PREVIOUS record on LF/FXCCYPLL
     C                     READPFXCCYPLL               8180*1
     C*
     C** IF read prior was unsuccessful then there is a database error.
     C           *IN80     IFEQ '1'                        B*2
     C           *IN81     OREQ '1'                        **2
     C                     MOVEL'FXCCYPLL'DBFILE           **2
     C                     MOVEL'927'     DBASE            ***************
     C                     MOVE '1'       *INU7            *             *
     C                     MOVE '1'       *INU8            * DBERROR 927 *
     C                     GOTO ZA0709                     *             *
     C                     END                             E*2************
     C*
     C           @@BYSL    IFEQ 'B'                        B*2
     C********** XRMD      ANDEQ'D'                        **2            S01194
     C           A6MDEX    ANDEQ'D'                        **2            S01194
     C                     MOVE XPLOPT    @@FP1   72       **2
     C*
     C                     ELSE                            X*2
     C           @@BYSL    IFEQ 'S'                        B**3
     C********** XRMD      ANDEQ'M'                        ***3           S01194
     C           A6MDEX    ANDEQ'M'                        ***3           S01194
     C                     MOVE XPLOPT    @@FP1            ***3
     C*
     C                     ELSE                            X**3
     C                     MOVE XPHIPT    @@FP1            ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** Find day number of date.
     C                     Z-ADDXPPRDD    @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C                     Z-ADD@@MDNO    @@D1    50       *1
     C*
     C** Forward points can now be calculated.
     C           @@FP2     SUB  @@FP1     @@WF1            *1
     C           @@VDAT    SUB  @@D1      @@WF2            *1
     C           @@WF1     MULT @@WF2     @@WF1            *1
     C           @@D2      SUB  @@D1      @@WF2            *1
     C           @@WF1     DIV  @@WF2     @@WF1            *1
     C********** @@WF1     ADD  @@FP1     @@FPT            *1
     C           @@WF1     ADD  @@FP1     @@FPT     H      *1
     C                     GOTO ZA0709                     *1
     C*
     C                     END                             E1
     C*
     C** No record with > or = date has been found at this stage
     C** of processing so the points on the furthest forward
     C** record are used.
     C** Find the furthest forward record
     C*
     C** READ PREVIOUS record on LF/FXCCYPLL
     C           ZA0708    TAG
     C                     MOVE *HIVAL    @@VDT
     C           CCYVDT    SETGTFXCCYPLL
     C                     READPFXCCYPLL               8081
     C           @@CCY     IFNE XPCCY                      B1
     C                     MOVE '1'       *IN80            *1
     C                     END                             E1
     C*
     C** IF read prior was unsuccessful then there is a database error.
     C           *IN80     IFEQ '1'                        B1
     C           *IN81     OREQ '1'                        *1
     C                     MOVEL'FXCCYPLL'DBFILE           ***************
     C                     MOVEL'928'     DBASE            *             *
     C                     MOVE '1'       *INU7            * DBERROR 928 *
     C                     MOVE '1'       *INU8            *             *
     C                     GOTO ZA0709                     ***************
     C                     END                             E1
     C*
     C** If the buy/sell rate indicator is 'B' & the currency multiply
     C** /divide exchange rate indicator is 'D' ,
     C** or 'S' & 'M' respectively,use low points otherwise use high
     C** points.
     C           @@BYSL    IFEQ 'B'                        B1
     C********** XRMD      ANDEQ'D'                        *1             S01194
     C           A6MDEX    ANDEQ'D'                        *1             S01194
     C                     MOVE XPLOPT    @@FPT            *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C           @@BYSL    IFEQ 'S'                        B1
     C********** XRMD      ANDEQ'M'                        *1             S01194
     C           A6MDEX    ANDEQ'M'                        *1             S01194
     C                     MOVE XPLOPT    @@FPT            *1
     C                     GOTO ZA0709                     *1
     C                     END                             E1
     C*
     C                     MOVE XPHIPT    @@FPT
     C*
     C                     GOTO ZA0709
     C*
     C** Unexecuted processing to define fields used by this subroutine.
     C                     MOVE @@MDNO    @@MDNO  50
     C*
     C           ZA0709    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       TITLE:CALCULATE MIDAS DAY NO. TO DRS (YYYYMMDD) FORMAT. *
     C*                                                               *
     C*       SUBROUTINE ZA0710 EXPECTS FIELD '@@DAYN' TO BE          *
     C*       PASSED TO IT IN 5,0 FORMAT.IF THE ABOVE FIELD IS LESS   *
     C*       THAN 1 IT RETURNS 1 IN FIELD '@@RTN'.THE MAIN PROGRAM   *
     C*       SHOULD CHECK FOR THIS CONDITION AND DO THE NECESSARY.   *
     C*       IF '@@RTN' IS NOT EQUAL TO 1 IT RETURNS THE FIELD       *
     C*       '@@VDT'  IN 'YYYYMMDD' FORMAT.                          *
     C*                                                               *
     C* NOTE: FIELD TO BE DEFINED BY EXTERNAL ROUTINE IS
     C*                                                               *
     C*       1) @@DAYN   LENGTH 5,0.                                 *
     C*                                                               *
     C*       FIELDS USED AND ALREADY DEFINED IN THE ROUTINE ARE:     *
     C*                                                               *
     C*       1) @@VDT    LENGTH 8,0 DEFINED BY A DS.                 *
     C*       2) @@RTN    LENGTH 1,0.                                 *
     C*       3) @@I      LENGTH 2,0 USED TO ACCESS ARRAY @YD         *
     C*       4) @@J      LENGTH 2,0 USED TO ACCESS ARRAY @MD         *
     C*       5) @@Z71Y   LENGTH 4,0 DEFINED BY A DS.                 *
     C*       6) @@RDAY   LENGTH 5,0.                                 *
     C*       7) @@LEAP   LENGTH 1,0.
     C*                                                               *
     C*       INDICATORS USED ARE:                                    *
     C*                                                               *
     C*       1) 80       CHECK FOR LOW AND EQUAL ON ARRAY @YD        *
     C*       2) 81       CHECK FOR LOW ON ARRAY @MD.                 *
     C*                                                               *
     C* INPUT FIELD:       @@DAYN                                     *
     C*                                                               *
     C* OUTPUT FIELD:      @@VDT                                      *
     C*                                                               *
     C* WORK FIELDS:       @@RTN                                      *
     C*                    @@Z71Y                                     *
     C*                    @@RDAY                                     *
     C*                    @@LEAP                                     *
     C*                    @@I                                        *
     C*                    @@J                                        *
     C*                                                               *
     C* ARRAYS USED:       @YD COMPILE TIME ARRAY.
     C*                    @MD COMPILE TIME ARRAY.
     C*
     C******CALLED*BY:***ZA0730****************************************   S01195
     C*     CALLED BY:                                                    S01195
     C*                  ZA0820
     C*                  ZA0850
     C*
     C*****************************************************************
     C*
     C           ZA0710    BEGSR
     C*
     C                     SETOF                     8081
     C                     Z-ADD0         @@RTN   10
     C                     Z-ADD0         @@VDT
     C                     Z-ADD1         @@I     20
     C                     Z-ADD1         @@J     20
     C                     Z-ADD1         @@LEAP  10
     C*
     C           @@DAYN    IFLT 1
     C                     Z-ADD1         @@RTN
     C                     GOTO ZA0719
     C                     END
     C*
     C* DIVISION TO DETERMINE WETHER LEAP YEAR.
     C*
     C           @@DAYN    DIV  1461      @@Z71Y
     C                     MVR            @@RDAY  50
     C*
     C* CALCULATING YEAR.
     C*
     C           @@Z71Y    MULT 4         @@Z71Y
     C                     ADD  1972      @@Z71Y
     C*
     C* CHECKING IF YEAR IS GREATER THAN OR EQUAL TO 2100
     C*
     C           @@Z71Y    IFGE 2100
     C                     ADD  @@SSY2    @@RDAY
     C                     END
     C*
     C* LOKUP ARRAY @YD TO SEE HOW MANY YEARS OF A FOUR YEAR CYCLE
     C* HAVE PASSED.
     C*
     C           @@RDAY    LOKUP@YD,@@I                8080
     C*
     C* IF YEAR IS A LEAP YEAR SSLEAP IS SET TO ZERO.
     C*
     C           *IN80     IFEQ '0'
     C                     Z-ADD0         @@LEAP
     C                     END
     C*
     C* ADD INDEX TO YEAR TO GIVE CORRECT YEAR AND ADJUST '@@RDAY'.
     C*
     C           @@LEAP    IFEQ 1
     C           @@RDAY    SUB  @YD,@@I   @@RDAY
     C                     ADD  @@I       @@Z71Y
     C                     END
     C*
     C* PROCESSING FOR A LEAP YEAR.
     C*
     C           @@LEAP    IFEQ 0
     C*
     C* IF '@@RDAY' = 60 DATE MUST BE 29TH OF FEBRUARY.
     C*
     C           @@RDAY    IFEQ 60
     C                     Z-ADD29        @@Z71D
     C                     Z-ADD2         @@Z71M
     C                     GOTO ZA0711
     C                     END
     C*
     C* IF '@@RDAY' > 60 DATE IS AFTER 29TH OF FEBRUARY,CONVERSION CAN
     C* PROCEED AS USUAL AFTER SUBTRACTING THE EXTRA DAY FOR THE LEAP
     C* YEAR. NOTE : '@@RDAY' < 60 CONVERSION PROCEEDS AS USUAL.
     C*
     C           @@RDAY    IFGT 60
     C           @@RDAY    SUB  1         @@RDAY
     C                     END
     C*
     C                     END
     C*
     C* IF DAY '@@DAYN' IS EXACTLY DIVISIBLE BY 1461 (NUMBER OF DAYS
     C* IN 4 YEARS) THEN DATE MUST BE LAST DAY OF PREVIOUS FOUR YEAR
     C* GROUP.
     C*
     C           @@RDAY    IFEQ 0
     C                     Z-ADD31        @@Z71D
     C                     Z-ADD12        @@Z71M
     C                     SUB  1         @@Z71Y
     C                     GOTO ZA0711
     C                     END
     C*
     C* LOOK UP ARRAY ARRAY @MD TO DETERMINE WHICH MONTH '@@RDAY'
     C* OCCURS IN
     C*
     C           @@RDAY    LOKUP@MD,@@J                81
     C                     Z-ADD@@J       @@Z71M
     C           @@RDAY    SUB  @MD,@@J   @@Z71D
     C*
     C* DS @@VDT  IS RETURNED IN YYYYMMDD FORMAT
     C*
     C           ZA0711    TAG
     C*
     C                     MOVE @@Z71Y    @@YR
     C*
     C           ZA0719    ENDSR
     C*****************************************************************
     C/EJECT
     C********************************************************************
     C*
     C* ZA0720 - THIS SUBROUTINE CONVERTS DATE FORMAT YYYYMMDD TO
     C*          DDMMMYY OR TO MMMDDYY DEPENDING UPON THE VALUE OF
     C***********TABTB10***ICDR1****                                      S01194
     C*          SDBANKPD - BJDFIN (DATE FORMAT INDICATOR)                S01194
     C*
     C* CALLED BY :   #B
     C*
     C* CALLS :
     C*
     C*
     C* INPUT  : @@DTIN DATE INPUT (YYYYMMDD)  - IN DATA STRUCTURE
     C*
     C* OUTPUT : @@DATE DATE OUTPUT 7 DIGIT FORMAT EITHER
     C*          DDMMMYY OR MMMDDYY
     C*
     C* USES :   @@MTH  MONTH NUMBER
     C*          @@MNM  MONTH SHORTNAME
     C*          @@DAY  DAY NUMBER
     C*          @@YYYY YEAR (4 CHARACTER)
     C*          @MT    RUN TIME ARRAY FOR MONTH SHORTNAMES
     C*          @@DMD5 Either DDMMM or MMMDD as required
     C*          @@DATE OUTPUT DATE FIELD
     C*
     C********************************************************************
     C           ZA0720    BEGSR
     C*
     C**   TABTB10F  IS EXPECTED FILE MOVE CODING 2 LEFT TO REMOVE **
     C**           KEY       CHAINTABTB10F             80
     C*
     C**   FDMNTHP0  IS EXPECTED FILE MOVE CODING 2 LEFT TO REMOVE **
     C**           SS0720    CHAINFDMNTHP0             80
     C*
     C                     MOVE @@YYYY    @@DATE  7
     C*
     C**  CONVERT DATE FORMAT
     C********** DATF      IFEQ 'M'                        B1             S01194
     C           BJDFIN    IFEQ 'M'                        B1             S01194
     C*
     C**  CONVERT TO MMMDDYY
     C                     MOVE @@DAY     @@DMD5  5        *1
     C                     MOVEL@MT,@@MTH @@DMD5           *1
     C                     ELSE                            X1
     C*
     C**  CONVERT TO DDMMMYY
     C                     MOVE @MT,@@MTH @@DMD5           *1
     C                     MOVEL@@DAY     @@DMD5           *1
     C                     END                             E1
     C*
     C                     MOVEL@@DMD5    @@DATE
     C*
     C**  END OF SUBROUTINE
     C           ZA0729    ENDSR                              *** ZA0720 T
     C****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C*                                                              *
     C*     MIDAS/DRS - STANDING DATA MODULE                         *
     C*                                                              *
     C*     ZA0760 -  CONVERT RATE TO DISPLAY -38                    *
     C*                                                              *
     C*                                                              *
     C*                                                              *
     C* CALLED BY :   #B                                             *
     C*                                                              *
     C* CALLS:                                                       *
     C*                                                              *
     C*                                                              *
     C*       INPUT: @@IRAT 13,8N  (INPUT RATE)                      *
     C*              DDCCY1 3A     (INPUT CURRENCY 1)                *
     C*              DDCCY2 3A     (INPUT CURRENCY 2)                *
     C*              @@NDP1 1,0    (DECIMAL PLACES FOR CURRENCY 1)   *
     C*              @@NDP2 1,0    (DECIMAL PLACES FOR CURRENCY 2)   *
     C*                                                              *
     C*      OUTPUT: @@ORAT 14A    (OUTPUT RATE)                     *
     C*                                                              *
     C*        USES:                                                 *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA0760    BEGSR
     C*
     C********   PUT INPUT RATE INTO @A & BLANKS INTO @B
     C*********
     C*********            MOVEA@@RTDS    @A
     C*********            MOVEA*BLANKS   @B
      *
      **  SAVE THE @@IRAT SO IT ISNT CORRUPTED
     C           *LIKE     DEFN @@IRAT    @@RATS
     C                     Z-ADD@@IRAT    @@RATS
      *
     C*
     C*          FIND IF EITHER CCY IS BASE
     C*
     C           DDCCY1    IFEQ *BLANKS                    B1
     C*********************MOVE*IDCYDL****DDCCY1************1*************S01319
     C                     MOVE BNCYDL    DDCCY1           *1             S01319
     C                     END                             E1
     C*
     C           DDCCY2    IFEQ *BLANKS                    B1
     C*********************MOVE*IDCYDL****DDCCY2************1*************S01319
     C                     MOVE BNCYDL    DDCCY2           *1             S01319
     C                     END                             E1
     C*
     C*          FIND HOW MANY DECIMAL PLACES TO REPORT/EDIT
     C*
     C***********DDCCY1****IFEQ*IDCYDL*********************B1*************S01319
     C           DDCCY1    IFEQ BNCYDL                     B1             S01319
     C                     MOVE @@NDP2    @@NDP   10       *1
     C                     ELSE                            X1
     C*
     C***********DDCCY2****IFEQ*IDCYDL*********************B*2************S01319
     C           DDCCY2    IFEQ BNCYDL                     B*2            S01319
     C                     MOVE @@NDP1    @@NDP            **2
     C                     ELSE                            X*2
     C*
     C*          IF NEITHER CCY IS BASE...
     C*
     C           @@NDP1    IFEQ @@NDP2                     B**3
     C           @@NDP1    ANDEQ5                          X**3
     C                     Z-ADD@@NDP1    @@NDP   10       ***3
     C                     Z-ADD@@IRAT    @@FLD5 135H      ***3
     C                     Z-ADD@@FLD5    @@IRAT           ***3
     C                     ELSE                            X**3
     C*
      ** MUST ROUND THE RATE WITH HALF ADJUST
     C           @@IRAT    IFGE 100                        B***4
     C                     Z-ADD2         @@NDP            ****4
     C                     Z-ADD@@IRAT    @@FLD2 132H      ****4
     C                     Z-ADD@@FLD2    @@IRAT           ****4
     C                     ELSE                            X***4
     C           @@IRAT    IFGE 20                         B****5
     C                     Z-ADD3         @@NDP            *****5
     C                     Z-ADD@@IRAT    @@FLD3 133H      *****5
     C                     Z-ADD@@FLD3    @@IRAT           *****5
     C                     ELSE                            X****5
     C           @@IRAT    IFGE 1                          B*****6
     C                     Z-ADD4         @@NDP            ******6
     C                     Z-ADD@@IRAT    @@FLD4 134H      ******6
     C                     Z-ADD@@FLD4    @@IRAT           ******6
     C                     ELSE                            X*****6
     C                     Z-ADD5         @@NDP            ******6
     C                     Z-ADD@@IRAT    @@FLD5    H      ******6
     C                     Z-ADD@@FLD5    @@IRAT           ******6
     C                     END                             E*****6
     C                     END                             E****5
     C                     END                             E***4
     C                     END                             E**3
     C                     END                             E*2
     C                     END                             E1
      *
      **  PUT INPUT RATE INTO @A & BLANKS INTO @B
     C                     MOVEA@@RTDS    @A
     C                     MOVEA*BLANKS   @B
     C*
     C*
     C*          MOVE 4 LEFTMOST CHARACTERS FROM @A TO CORRESPONDING
     C*          POSITION IN @B - IF LEFTMOST CHARACTER IS '0' A BLANK
     C*          IS MOVED.
     C*
     C                     MOVE '0'       *IN81
     C           1         DO   4         @@C     20       B1
     C*
     C*          SET FLAG ON IF LEFTMOST CHARACTER IS NON ZERO
     C*
     C           @A,@@C    IFNE '0'                        B*2
     C                     MOVE '1'       *IN81            **2
     C                     END                             E*2
     C           *IN81     IFEQ '0'                        B*2
     C                     MOVE ' '       @B,@@C           **2
     C                     ELSE                            X*2
     C                     MOVE @A,@@C    @B,@@C           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C*          AFTER FIFTH CHARACTER IS MOVED - MOVE DECIMAL
     C*          SEPARATOR TO @B.
     C*
     C                     MOVE @A,@@C    @B,@@C
     C                     ADD  1         @@C
     C*********************MOVE*IDDCSP****@B,@@C**************************S01319
     C                     MOVE BNDCSP    @B,@@C                          S01319
     C           @@C       ADD  1         @@D     20
     C*
     C*          MOVE REMAINING CHARACTERS STOPPING WHEN REMAINDER
     C*          =0 OR NO.OF DEC.PLACES NORMALLY QUOTED HAS BEEN
     C*          REACHED.
     C*
     C                     Z-ADD13        @@E     20
     C           5         ADD  @@NDP     LIMIT   20
     C           @@E       DOWGTLIMIT                      B1
     C           @@E       ANDGT6                          B1             S01136
     C           @A,@@E    IFEQ '0'                        B*2
     C                     MOVE ' '       @A,@@E           **2
     C                     SUB  1         @@E              **2
     C                     ELSE                            X*2
     C********             Z-ADDLIMIT     @@E              **2            E12791
     C                     Z-ADD@@E       LIMIT            **2            E12791
     C                     END                             E*2
     C                     END                             E1
     C*
     C*          MOVE REMAIDER OF @A TO @B
     C*
     C********   @@D       DOWLT15                         B1             S01136
     C           @@D       DOUEQ15                         B1             S01136
     C********   @@C       ANDLELIMIT                      B1             S01136
     C           @@C       ORGT LIMIT                      B1             S01136
     C                     MOVE @A,@@C    @B,@@D           *1
     C                     ADD  1         @@C              *1
     C                     ADD  1         @@D              *1
     C                     END                             E1
     C*
     C** Coding to remove trailing zeros from rates
     C                     Z-ADD14        @@E
     C           @B,@@E    DOWEQ' '                        B1
     C                     SUB  1         @@E              *1
     C                     END                             E1
     C           @B,@@E    DOWEQ'0'                        B1
     C           @@E       ANDGT7                          B1
     C                     MOVE *BLANK    @B,@@E           *1
     C                     SUB  1         @@E              *1
     C                     END                             E1
     C*
     C                     Z-ADD@@RATS    @@IRAT
     C                     MOVEA@B        @@ORAT 14
     C           ZA0769    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       TITLE:DETERMINE SPOT DATE.      .                       *
     C*                                                               *
     C* INPUT  :DDCCY1 CURRENCY-1.                        -FORMAT(3A) *
     C*         DDCCY2 CURRENCY-2.                        -FORMAT(3A) *
     C*         @@WSP1 SPOT DAYS CURRENCY-1               -FORMAT(3N) *
     C*         @@WSP2 SPOT DAYS CURRENCY-2               -FORMAT(3N) *
     C*         @@SPD1 SPOT DATE FOR CURRENCY-1           -FORMAT(8N) *
     C*         @@SPD2 SPOT DATE FOR CURRENCY-2           -FORMAT(8N) *
     C**********IDCYDL*BASE*CURRENCY*FOR*DEALING**********-FORMAT(3A)*****S01319
     C*         BNCYDL BASE CURRENCY FOR DEALING          -FORMAT(3A) *   S01319
     C*                                                               *
     C* OUTPUT :@@VDT  DATE (YYYYMMDD)                    -FORMAT(8N) *
     C*                                                               *
     C* USES :   @@DAYN MIDAS DAY NO USED BY SR ZA0710                *
     C***********@@MNO**MIDAS*DAY*NO*USED*BY*SR*ZA0830*&*THIS*ROUTINE**   S01195
     C***********@@HIND*HOLIDAY*IND.RETURNED*BY*ZA0830*****************   S01195
     C*          ZIND   HOLIDAY IND.RETURNED BY ZCHKH                 *   S01195
     C***********@@CCY**CURRENCY*SHORTNAME*FIELD*USED*BY*ZA0830********   S01195
     C*          ZCCY   CURRENCY SHORTNAME FIELD USED BY ZCHKH        *   S01195
     C*          ZLOC   CURRENCY LOCATION CODE USED BY ZCHKH          *   S01195
     C*          @@CDYN CALCULATED SPOT DATE DAY NO.                  *
     C*          @@SPDY NO. OF SPOT DAYS REQUIRED.                    *
     C*          @@WDAD NO. OF WORKING DAYS ADDED TO CURRENT DAY NO.  *
     C*                                                              *
     C* CALLED BY:  #B                                               *
     C*                                                              *
     C*                                                              *
     C* CALLS:                                                       *
     C*                                                              *
     C*                                                               *
     C*     AMEND NO. 000001                  DATE   14/07/86        *
     C*       Amendment to calculate Spot Date on the basis of only  *
     C*       mutual working days.                                   *
     C*                                                              *
     C*****************************************************************
     C*                                                               *
     C           ZA0820    BEGSR
     C*
     C**  DEFINE AND INITIALISE FIELDS USED IN THIS ROUTINE.
     C                     Z-ADD0         @@CDYN  50
     C                     Z-ADD0         @@VDT   80
     C                     Z-ADD0         @@SPDY  30
     C                     Z-ADD0         @@WDAD  30
     C                     MOVE *BLANKS   @@CCY   3
     C                     Z-ADD0         @@DAYN  50
     C                     Z-ADD0         @@MNO   50
     C*
     C**  CHECK IF THE FIRST CURRENCY IS THE BASE CURRENCY FOR DEALING
     C**  - IF IT IS BLANK THIS ALSO MEANS IT IS THE BASE CURRENCY.
     C***********DDCCY1****IFEQ*IDCYDL*********************B1*************S01319
     C           DDCCY1    IFEQ BNCYDL                     B1             S01319
     C           DDCCY1    OREQ *BLANK                     X1
     C*
     C**  IF IT IS THE BASE CURRENCY FOR DEALING, USE THE SPOT DATE FOR
     C**  THE OTHER CURRENCY - THEN BY-PASS FURTHER PROCESSING.
     C                     Z-ADD@@SPD2    @@VDT            *1
     C                     GOTO ZA0829                     *1
     C*
     C                     END                             E1
     C*
     C**  CHECK IF THE SECOND CURRENCY IS THE BASE CURRENCY FOR DEALING
     C**  - IF IT IS BLANK THIS ALSO MEANS IT IS THE BASE CURRENCY.
     C***********DDCCY2****IFEQ*IDCYDL*********************B1*************S01319
     C           DDCCY2    IFEQ BNCYDL                     B1             S01319
     C           DDCCY2    OREQ *BLANK                     X1
     C*
     C**  IF IT IS THE BASE CURRENCY FOR DEALING, USE THE SPOT DATE FOR
     C**  THE OTHER CURRENCY - THEN BY-PASS FURTHER PROCESSING.
     C                     Z-ADD@@SPD1    @@VDT            *1
     C                     GOTO ZA0829                     *1
     C*
     C                     END                             E1
     C*
     C**  NEITHER CURRENCY IS THE BASE CURRENCY FOR DEALING - CALCULATE
     C**  THE SPOT DATE.
     C*
     C**  SET THE SPOT DATE TO BE CALCULATED TO THE MIDAS RUNDATE.
     C**********           Z-ADDRUND      @@CDYN                          S01194
     C                     Z-ADDBJRDNB    @@CDYN                          S01194
     C*
     C**  DETERMINE WHICH OF THE CURRENCIES HAS THE LARGER NUMBER OF
     C**  SPOT DAYS AND USE THAT FIGURE AS THE NUMBER OF SPOT DAYS
     C**  REQUIRED.
     C           @@WSP1    IFGT @@WSP2
     C*
     C                     Z-ADD@@WSP1    @@SPDY
     C*
     C                     ELSE
     C*
     C                     Z-ADD@@WSP2    @@SPDY
     C*
     C                     END
     C*
     C**  INITIALISE THE NUMBER OF WORKING DAYS ADDED TO THE CURRENT
     C**  DATE.
     C                     Z-ADD0         @@WDAD
      *                                                                   S01195
      * Set up location code input for SR.ZCHKH as system location        S01195
      * from PF/SDBANKPD                                                  S01195
     C                     MOVELBJSLCD    ZLOC                            S01195
     C*
     C**  CONTINUE PROCESSING WHILST THE NUMBER OF SPOT DAYS REQUIRED
     C**  IS GREATER THAN THE NUMBER OF WORKING DAYS ADDED TO THE
     C**  CURRENT DATE.
     C           @@SPDY    DOWGT@@WDAD                     B1
     C*
     C**  CONTINUE PROCESSING WHILST THE CALC. SPOT DATE IS A HOLIDAY
     C**  FOR EITHER CURRENCY.
     C**********           MOVE 'H'       @@HIND           *1             S01195
     C                     MOVE 'H'       ZIND             *1             S01195
     C********** @@HIND    DOWEQ'H'                        B*2            S01195
     C           ZIND      DOWEQ'H'                        B*2            S01195
     C*
     C**  INCREMENT THE SPOT DATE BEING CALCULATED BY ONE DAY.
     C                     ADD  1         @@CDYN           **2
     C*
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE FIRST
     C****CURRENCY*BY*EXECUTING*SR**ZA0830***                             S01195
     C**  CURRENCY BY EXECUTING SR. ZCHKH                                 S01195
     C**********           MOVE DDCCY1    @@CCY            **2            S01195
     C                     MOVE DDCCY1    ZCCY             **2            S01195
     C**********           Z-ADD@@CDYN    @@MNO            **2            S01195
     C                     Z-ADD@@CDYN    ZDAYNO           **2            S01195
     C**********           EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C*
     C**  IF THE SPOT DATE IS NOT A HOLIDAY FOR THE FIRST CURRENCY,
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE
     C****SECOND*CURRENCY*BY*EXECUTING*SR**ZA0830***                      S01195
     C**  SECOND CURRENCY BY EXECUTING SR. ZCHKH                          S01195
     C********** @@HIND    IFNE 'H'                        B**3           S01195
     C           ZIND      IFNE 'H'                        B**3           S01195
     C*
     C**********           MOVE DDCCY2    @@CCY            ***3           S01195
     C                     MOVE DDCCY2    ZCCY             ***3           S01195
     C**********           Z-ADD@@CDYN    @@MNO            ***3           S01195
     C                     Z-ADD@@CDYN    ZDAYNO           ***3           S01195
     C**********           EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C**  INCREMENT THE NO. OF WORKING DAYS ADDED TO THE CURRENT DATE
     C**  BY ONE DAY.
     C                     ADD  1         @@WDAD           *1
     C*
     C                     END                             E1
     C**  CONVERT THE RESULTING SPOT DATE TO YYYYMMDD FORM.
     C*
     C                     Z-ADD@@CDYN    @@DAYN
     C                     EXSR ZA0710
     C*
     C           ZA0829    ENDSR                           **ZA8029**
     C*****************************************************************
     C/EJECT
     C********************************************************************S01195
     C**********                                                          S01195
     C**ZA0830*- THIS SUBROUTINE FINDS OUT WHETHER A PARTICULAR DAY       S01195
     C********** IS A HOLIDAY IN A PARTICULAR CURRENCY                    S01195
     C**********                                                          S01195
     C**CALLED*BY :   ZA0730                                              S01195
     C**********      ZA0820   (2 times)                                  S01195
     C**********      ZA0850                                              S01195
     C**********      ZA0820   (8 times)                                  S01195
     C**********                                                          S01195
     C**********                                                          S01195
     C**CALLS*:*                                                          S01195
     C**********                                                          S01195
     C**INPUT**: @@MNO  MIDAS DAY NUMBER 5N                               S01195
     C********** @@CCY  CURRENCY CODE 3A                                  S01195
     C**********                                                          S01195
     C**OUTPUT*: @@HIND HOLIDAY/WORKING DAY INDICATOR 1A                  S01195
     C**********                                                          S01195
     C**USES*:** @@MNO  MIDAS DAY NUMBER                                  S01195
     C********** @@CCY  CURRENCY CODE                                     S01195
     C********** @@ONCE FIRST TIME THROUGH INDICATOR                      S01195
     C********** @@CY1  FIRST HALF OF CURRENCY ARRAY                      S01195
     C********** @@CY2  SECOND HALF OF CURRENCY ARRAY                     S01195
     C********** @@MNO6 MIDAS NUMBER WITH TRAILING BLANK                  S01195
     C********** @@HIND HOLIDAY/WORKING DAY INDICATOR                     S01195
     C********** @@INEX INCLUDE/EXCLUDE INDICATOR                         S01195
     C**********                                                          S01195
     C********** INDICATORS                                               S01195
     C********** 80 RECORD NOT FOUND                                      S01195
     C********** 81 CURRENCY NOT FOUND ON RECORD                          S01195
     C**********                                                          S01195
     C********************************************************************S01195
     C********** ZA0830    BEGSR                                          S01195
     C**********                                                          S01195
     C***OPEN*CURRENCY/HOLIDAY FILE IF FIRST TIME THROUGH                 S01195
     C********** @@ONCE    IFNE 'Y'                        B1             S01195
     C**********           OPEN FDTABJLL                   *1             S01195
     C**********           MOVE 'Y'       @@ONCE  1        *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***BLANK*OUT ARRAY                                                  S01195
     C**********           MOVE *BLANKS   @@CY1                           S01195
     C**********           MOVE *BLANKS   @@CY2                           S01195
     C**********           MOVE 'W'       @@HIND  1                       S01195
     C**********                                                          S01195
     C***ACCESS*TABLE ON FIRST KEY                                        S01195
     C**********           MOVEL'22    '  SS0830                          S01195
     C**********           MOVE '1'       SS0830                          S01195
     C********** SS0830    CHAINTABLETJF             80                   S01195
     C**********                                                          S01195
     C***IF*RECORD NOT FOUND OR DELETED                                   S01195
     C********** *IN80     CABEQ'1'       ZA0839                          S01195
     C********** RECI      CABEQ'*'       ZA0839                          S01195
     C**********                                                          S01195
     C***MOVE*FIRST 25 CURRENCIES TO ARRAY                                S01195
     C**********           MOVE HCCY      @@CY1                           S01195
     C**********                                                          S01195
     C***ACCESS*TABLE ON SECOND KEY                                       S01195
     C**********           MOVE '2'       SS0830                          S01195
     C********** SS0830    CHAINTABLETJF             80                   S01195
     C**********                                                          S01195
     C***IF*SECOND RECORD FOUND AND NOT DELETED                           S01195
     C********** *IN80     IFEQ '0'                        B1             S01195
     C********** RECI      ANDNE'*'                        *1             S01195
     C**********           MOVE HCCY      @@CY2            *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***SEARCH*ARRAY FOR INPUT CURRENCY                                  S01195
     C********** @@CCY     LOKUP@CY                      81               S01195
     C**********                                                          S01195
     C***IF*INPUT CURRENCY IS IN ARRAY                                    S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'E'                              S01195
     C**********                                                          S01195
     C********** *IN81     IFEQ '1'                        B1             S01195
     C********** INEX      ANDNE'E'                        X1             S01195
     C**********           MOVE 'H'       @@HIND           *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C***IF*INPUT CURRENCY IS NOT IN ARRAY                                S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'I'                              S01195
     C**********                                                          S01195
     C********** *IN81     IFEQ '0'                        B1             S01195
     C********** INEX      ANDNE'I'                        X1             S01195
     C**********           MOVE 'H'       @@HIND           *1             S01195
     C**********           END                             E1             S01195
     C**********                                                          S01195
     C********** ZA0839    ENDSR                                          S01195
     C********************************************************************S01195
     C* Copy new holiday processing routines                              S01195
      /COPY ZSRSRC,ZCHKH                                                  S01195
      /COPY ZSRSRC,ZACCH                                                  S01195
     C*****************************************************************
     C*                                                               *
     C*       TITLE:CALCULATE A PERIOD DATE.                          *
     C*                                                               *
     C*       SUBROUTINE ZA0850 ACCEPTS A SPOT DATE(8N),PERIOD        *
     C*       UNITS (2N),PERIOD TYPE (1A),CURRENCY 1 AND CURRENCY 2.  *
     C*       IT THEN USES THE ABOVE FIELDS AND CALCULATES A PERIOD   *
     C*       DATE ACCORDINGLY.                                       *
     C*                                                               *
     C*                                                               *
     C* INPUT  :@@SPDD  SPOT DATE     FORMAT(8N)                      *
     C*         @@PRDU  PERIOD UNIT   FORMAT(2N)                      *
     C*         @@PRDT  PERIOD TYPE   FORMAT(1A)                      *
     C*         DDCCY1  CURRENCY 1    FORMAT(3A)                      *
     C*         DDCCY2  CURRENCY 2    FORMAT(3A)                      *
     C*                                                               *
     C* OUTPUT :@@VDT   SPOT DATE RETURNED FORMAT(8N)                 *
     C*         @@ESWT  SWITCH SET IF ERROR OCCURS  FORMAT(1A)        *
     C*                                                               *
     C* USES   :@@SPDD  SPOT DATE                                     *
     C*         @@PRDU  PERIOD UNIT                                   *
     C*         @@PRDT  PERIOD TYPE                                   *
     C*         DDCCY1  CURRENCY 1                                    *
     C*         DDCCY2  CURRENCY 2                                    *
     C*         @@CDAY  DAYS IN MONTH + 1                             *
     C*         @@SDAY  NO OF DAYS IN A MONTH SAVED                   *
     C*         @@HSWT  HOLIDAY SWITCH USED FOR DO OPERATIONS         *
     C*         @@LSWT  LAST DAY SWITCH INDICATING SPOT DAY IS THE    *
     C*                 LAST WORKING DAY OF THE MONTH                 *
     C*         @@WDSB  NO. OF DAYS PRIOR TO CURRENT DATE REQUIRED    *
     C*         @@DTIN  INPUT FOR ZA0680 - (YYYYMMDD)                 *
     C*         @@MDNO  OUTPUT OF ZA0680 - (MIDAS DAY NO.)            *
     C*         @@DAYN  INPUT FOR ZA0710 - (MIDAS DAY NO.)            *
     C*         @@VDT   OUTPUT OF ZA0710 - (YYYYMMDD)                 *
     C**********@@CCY***INPUT*FOR*ZA0830*-*(CURRENCY*CODE)*************   S01195
     C*         ZCCY    INPUT FOR ZCHKH  - (CURRENCY CODE)            *   S01195
     C**********@@MNO***INPUT*FOR*ZA0830*-*(MIDAS*DAY*NO.)*************   S01195
     C*         ZDAYNO  INPUT FOR ZCHKH  - (MIDAS DAY NO.)            *   S01195
     C**********@@HIND**OUTPUT*OF*ZA0830*-*(HOLIDAY*INDICATOR)*********   S01195
     C*         ZIND    OUTPUT OF ZCHKH  - (HOLIDAY INDICATOR)        *   S01195
     C*         ZLOC    CURRENCY LOCATION CODE INPUT TO ZCHKH         *   S01195
     C*         @@Z71D  DAY PART OF SPOT DATE                         *
     C*         @@Z71M  MONTH PART OF SPOT DATE                       *
     C*         @@Z71Y  YEAR PART OF SPOT DATE                        *
     C*                                                               *
     C* ARRAYS USED:                                                  *
     C*         @M      USED BY ZA0850  (COMPILE TIME)                *
     C*         @YD     USED BY ZA0680 AND ZA0710 (COMPILE TIME)      *
     C*         @MD     USED BY ZA0680 AND ZA0710 (COMPILE TIME)      *
     C**********@CY*****USED*BY*ZA0830**(EXECUTION*TIME)***************   S01195
     C*                                                               *
     C* SUBROUTINES CALLED:                                           *
     C*         ZA0680  CONVERT DATE FORMAT(YYYYMMDD) TO MIDAS DAY NO.*
     C*         ZA0710  CONVERT MIDAS DAY NO. TO DATE FORMAT(YYYYMMDD)*
     C**********ZA0830**CHECK*IF*DATE*IS*A*WORKING*DAY*OR*NOT**********   S01195
     C*         ZCHKH   CHECK IF DATE IS A WORKING DAY OR NOT         *   S01195
     C*                                                               *
     C*     LAST AMEND NO. FX0078             DATE   16/09/86         *
     C*     PREV AMEND NO. 000001             DATE   16/07/86         *
     C*                                                               *
     C*****************************************************************
     C*                                                               *
     C           ZA0850    BEGSR
     C*
     C* VALIDATING PERIOD UNIT AGAINST PERIOD TYPE
     C*
     C                     MOVE '0'       @@ESWT  1
     C*
     C* VALIDATING FOR DAY
     C*
     C           @@PRDT    IFEQ 'D'                        B1
     C           @@PRDU    ANDNE-2                         *1
     C           @@PRDU    ANDNE-1                         *1
     C           @@PRDU    ANDNE1                          *1
     C                     MOVE '1'       @@ESWT  1        *1
     C                     GOTO ZA0859                     *1
     C                     END                             E1
     C*
     C* VALIDATING FOR WEEK
     C*
     C           @@PRDT    IFEQ 'W'                        B1
     C           @@PRDU    ANDNE1                          *1
     C           @@PRDU    ANDNE2                          *1
     C           @@PRDU    ANDNE3                          *1
     C                     MOVE '1'       @@ESWT           *1
     C                     GOTO ZA0859                     *1
     C                     END                             E1
     C*
     C* VALIDATING FOR MONTH
     C*
     C           @@PRDT    IFEQ 'M'                        B1
     C           @@PRDU    IFLT 0                          B*2
     C           @@PRDU    ORGT 12                         **2
     C                     MOVE '1'       @@ESWT           **2
     C                     GOTO ZA0859                     **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* VALIDATING FOR YEAR
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C           @@PRDU    IFNE 1                          B*2
     C                     MOVE '1'       @@ESWT           **2
     C                     GOTO ZA0859                     **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* IF PERIOD TYPE IS MONTH OR YEAR THEN PROCESSING IS DIFFERENT
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C           @@PRDT    OREQ 'M'                        *1
     C                     GOTO ZA0851                     *1
     C                     END                             E1
     C*
     C* PROCESSING FOR DAY AND WEEK
     C*
     C* CONVERT SPOT DATE TO MIDAS DAY NO.
     C                     Z-ADD@@SPDD    @@DTIN  80
     C                     EXSR ZA0680
     C*
     C* IF PERIOD TYPE IS 'W' THEN CONVERT PERIOD UNITS AND ADD TO THE
     C* MIDAS DAY NO. (NOTE THAT 1 DAY IS ADDED IN NEXT PROCESSING,
     C* HENCE, (N WEEKS TIMES 7) - 1 DAY. )
     C           @@PRDT    IFEQ 'W'                        B1
     C*
     C           @@PRDU    IFEQ 1                          B*2
     C                     ADD  6         @@MDNO           **2
     C                     END                             E*2
     C*
     C           @@PRDU    IFEQ 2                          B*2
     C                     ADD  13        @@MDNO           **2
     C                     END                             E*2
     C*
     C           @@PRDU    IFEQ 3                          B*2
     C                     ADD  20        @@MDNO           **2
     C                     END                             E*2
     C*
     C                     END                             E*1
      *                                                                   S01195
      * Set up location code input for SR.ZCHKH as system location        S01195
      * from PF/SDBANKPD                                                  S01195
     C                     MOVELBJSLCD    ZLOC                            S01195
     C*
     C**  IF THE DATE TO BE FOUND IS FOR THE NEXT WORKING DAY, OR FOR
     C**  THE NEXT WORKING DAY AFTER 1,2 OR 3 WEEKS, USE THE FOLLOWING
     C**  PROCESSING.
     C           @@PRDU    IFGT 0                          B1
     C*
     C**  CONTINUE PROCESSING WHILST THE CALC. SPOT DATE IS A HOLIDAY
     C**  FOR EITHER CURRENCY.
     C**********           MOVE 'H'       @@HIND           *1             S01195
     C                     MOVE 'H'       ZIND             *1             S01195
     C********** @@HIND    DOWEQ'H'                        B*2            S01195
     C           ZIND      DOWEQ'H'                        B*2            S01195
     C*
     C**  INCREMENT THE SPOT DATE BEING CALCULATED BY ONE DAY.
     C                     ADD  1         @@MDNO           **2
     C*
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE FIRST
     C****CURRENCY*BY*EXECUTING*SR**ZA0830***                             S01195
     C**  CURRENCY BY EXECUTING SR. ZCHKH                                 S01195
     C**********           MOVE DDCCY1    @@CCY   3        **2            S01195
     C                     MOVE DDCCY1    ZCCY             **2            S01195
     C**********           Z-ADD@@MDNO    @@MNO   50       **2            S01195
     C                     Z-ADD@@MDNO    ZDAYNO  50       **2            S01195
     C**********           EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C*
     C**  IF THE SPOT DATE IS NOT A HOLIDAY FOR THE FIRST CURRENCY,
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE
     C****SECOND*CURRENCY*BY*EXECUTING*SR**ZA0830***                      S01195
     C**  SECOND CURRENCY BY EXECUTING SR. ZCHKH                          S01195
     C********** @@HIND    IFNE 'H'                        B**3           S01195
     C           ZIND      IFNE 'H'                        B**3           S01195
     C*
     C**********           MOVE DDCCY2    @@CCY            ***3           S01195
     C                     MOVE DDCCY2    ZCCY             ***3           S01195
     C**********           Z-ADD@@MDNO    @@MNO            ***3           S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ***3           S01195
     C**********           EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C*
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C**  IF THE DATE TO BE FOUND IS FOR 1 OR 2 WORKING DAYS PRIOR TO
     C**  THE CURRENT DATE, USE THE FOLLOWING PROCESSING.
     C           @@PRDU    IFLT 0                          B1
     C*
     C**  INITIALISE THE NUMBER OF WORKING DAYS SUBTRACTED FROM THE
     C**  CURRENT DATE.
     C                     Z-ADD0         @@WDSB  10       *1
     C*
     C**  CONTINUE PROCESSING WHILST THE ABSOLUTE NO. OF MUTUAL WORKING
     C**  DAYS PRIOR TO THE CURRENT DATE IS GREATER THAN THE ABSOLUTE
     C**  NO. OF DAYS SUBTRACTED FROM THE CURRENT DATE.
     C           @@PRDU    DOWLT@@WDSB                     B*2
     C*
     C**  CONTINUE PROCESSING WHILST THE CALC. SPOT DATE IS A HOLIDAY
     C**  FOR EITHER CURRENCY.
     C**********           MOVE 'H'       @@HIND           **2
     C                     MOVE 'H'       ZIND             **2
     C********** @@HIND    DOWEQ'H'                        B**3
     C           ZIND      DOWEQ'H'                        B**3
     C*
     C**  DECREMENT THE SPOT DATE BEING CALCULATED BY ONE DAY.
     C                     SUB  1         @@MDNO           ***3
     C*
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE FIRST
     C****CURRENCY*BY*EXECUTING*SR**ZA0830***                             S01195
     C**  CURRENCY BY EXECUTING SR. ZCHKH                                 S01195
     C**********           MOVE DDCCY1    @@CCY            ***3           S01195
     C                     MOVE DDCCY1    ZCCY             ***3           S01195
     C**********           Z-ADD@@MDNO    @@MNO            ***3           S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ***3           S01195
     C**********           EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C*
     C**  IF THE SPOT DATE IS NOT A HOLIDAY FOR THE FIRST CURRENCY,
     C**  CHECK WHETHER THE CALC. SPOT DATE IS A HOLIDAY FOR THE
     C****SECOND*CURRENCY*BY*EXECUTING*SR**ZA0830***                      S01195
     C**  SECOND CURRENCY BY EXECUTING SR. ZCHKH                          S01195
     C********** @@HIND    IFNE 'H'                        B***4          S01195
     C           ZIND      IFNE 'H'                        B***4          S01195
     C*
     C**********           MOVE DDCCY2    @@CCY            ****4          S01195
     C                     MOVE DDCCY2    ZCCY             ****4          S01195
     C**********           Z-ADD@@MDNO    @@MNO            ****4          S01195
     C                     Z-ADD@@MDNO    ZDAYNO           ****4          S01195
     C**********           EXSR ZA0830                     ****4          S01195
     C                     EXSR ZCHKH                      ****4          S01195
     C*
     C                     END                             E***4
     C*
     C                     END                             E**3
     C*
     C**  INCREMENT THE NO. OF WORKING DAYS ADDED TO THE CURRENT DATE
     C**  BY ONE DAY.
     C                     SUB  1         @@WDSB           **2
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* CONVERTING MIDAS DAY NO. TO DATE(YYYYMMDD)
     C*
     C                     Z-ADD@@MDNO    @@DAYN  50
     C                     EXSR ZA0710
     C                     GOTO ZA0859
     C*
     C           ZA0851    TAG
     C*
     C                     MOVE 'N'       @@NXTM  1
     C                     MOVE '1'       @@HSWT  1
     C                     MOVE @@SPDD    @@VDT
     C*
     C* CHECKING FOR LEAP YEAR
     C*
     C           @@YR      DIV  4         @@LP    40
     C                     MVR            @@RM    10
     C*
     C* STORING DAYS IN A MONTH FOR SPOT DATE INPUTED
     C*
     C                     MOVE @M,@@Z71M @@SDAY
     C*
     C           @@RM      IFEQ 0                          B1
     C           @@Z71M    IFEQ 2                          B*2
     C                     MOVE 29        @@SDAY  20       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* CHECKING IF SPOT DATE IS THE LAST WORKING DAY OF THE MONTH
     C*
     C******               ADD  1         @@Z71D
     C                     Z-ADD@@Z71D    @@CDAY  20
     C                     ADD  1         @@CDAY
     C*
     C* IF NEXT DAY IS GREATER THAN DAYS IN A MONTH THEN SPOT DATE
     C* IS THE LAST WORKING DAY
     C*
     C           @@CDAY    IFGT @@SDAY                     B1
     C                     MOVE '1'       @@LSWT  1        *1
     C******               Z-ADD@@SDAY    @@Z71D           *1
     C******               ELSE                            X1       E12301E12923
     C******               Z-ADD@@CDAY    @@Z71D           *1       E12301E12923
     C                     END                             E1
     C*
     C* CHECKING FOR NEXT WORKING DATE
     C*
     C           @@LSWT    IFEQ '0'                        B1
     C*
     C           @@HSWT    DOWEQ'1'                        B*2
     C*
     C* GET MIDAS DAY NO
     C*
     C                     Z-ADD@@VDT     @@DTIN           **2
     C                     EXSR ZA0680                     **2
     C*
     C* CHECK IF WORKIN DAY
     C*
     C**********           Z-ADD@@MDNO    @@MNO            **2            S01195
     C                     Z-ADD@@MDNO    ZDAYNO           **2            S01195
     C**********           MOVE DDCCY1    @@CCY            **2            S01195
     C                     MOVE DDCCY1    ZCCY             **2            S01195
     C**********           EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C*
     C********** @@HIND    IFEQ 'W'                        B**3           S01195
     C           ZIND      IFEQ 'W'                        B**3           S01195
     C**********           MOVE DDCCY2    @@CCY            ***3           S01195
     C                     MOVE DDCCY2    ZCCY             ***3           S01195
     C**********           EXSR ZA0830                     ***3           S01195
     C                     EXSR ZCHKH                      ***3           S01195
     C                     END                             E**3
     C*
     C* IF HOLIDAY ADD 1 TO DAY
     C*
     C********** @@HIND    IFEQ 'H'                        B**3           S01195
     C           ZIND      IFEQ 'H'                        B**3           S01195
     C                     ADD  1         @@Z71D           ***3
     C                     ELSE                            X**3
     C                     MOVE '0'       @@HSWT           ***3
     C                     END                             E**3
     C*
     C* IF DAY GREATER THAN DAYS IN A MONTH THEN EXIT OUT OF DO AND SETON
     C* LAST DAY SWITCH ALSO MOVE DAYS IN THE MONTH TO DAY
     C*
     C           @@Z71D    IFGT @@SDAY                     B**3
     C                     MOVE '0'       @@HSWT           ***3
     C                     MOVE '1'       @@LSWT           ***3
     C                     MOVE @@SDAY    @@Z71D           ***3
     C                     END                             E**3
     C*
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C* IF LAST DAY SWITCH IS NOT ON THEN MOVE SPOT DATE INPUTED TO
     C* WORK DATE BEING USED
     C*
     C           @@LSWT    IFEQ '0'                        B1
     C                     Z-ADD@@SPDD    @@VDT            *1
     C                     END                             E1
     C*
     C* IF PERIOD TYPE IS 'Y' THEN ADD PERIOD UNIT TO YEAR ELSE ADD IT
     C* TO MONTH
     C*
     C           @@PRDT    IFEQ 'Y'                        B1
     C                     ADD  @@PRDU    @@YR             *1
     C                     ELSE                            X1
     C                     ADD  @@PRDU    @@Z71M           *1
     C                     END                             E1
     C*
     C* CHECKING IF MONTH IS GREATER THAN 12
     C*
     C           @@Z71M    IFGT 12                         B1
     C           @@Z71M    SUB  12        @@Z71M           *1
     C                     ADD  1         @@YR             *1
     C                     END                             E1
     C*
     C* CHECKING FOR LEAP YEAR
     C*
     C           @@YR      DIV  4         @@LP    40
     C                     MVR            @@RM    10
     C                     MOVE '1'       @@HSWT
     C*
     C                     MOVE @M,@@Z71M @@SDAY
     C*
     C           @@RM      IFEQ 0                          B1
     C           @@Z71M    IFEQ 2                          B*2
     C                     MOVE 29        @@SDAY  20       **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C* IF LAST DAY SWITCH IS ON THEN MOVE DAYS IN A MONTH TO DAY FIELD
     C*
     C           @@LSWT    IFEQ '1'                        B1
     C                     MOVE @@SDAY    @@Z71D           *1
     C                     END                             E1
     C*
     C* IF DAY FIELD IS GREATER THAN DAYS IN A MONTH THEN MOVE DAYS IN A
     C* MONTH TO DAY FIELD
     C*
     C           @@Z71D    IFGT @@SDAY                     B1
     C                     Z-ADD@@SDAY    @@Z71D           *1
     C                     END                             E1
     C*
     C* CHECKING IF A WORKING DAY
     C*
     C           @@HSWT    DOWEQ'1'                        B1
     C*
     C                     Z-ADD@@VDT     @@DTIN           *1
     C                     EXSR ZA0680                     *1
     C**********           Z-ADD@@MDNO    @@MNO            *1             S01195
     C                     Z-ADD@@MDNO    ZDAYNO           *1             S01195
     C**********           MOVE DDCCY1    @@CCY            *1             S01195
     C                     MOVE DDCCY1    ZCCY             *1             S01195
     C**********           EXSR ZA0830                     *1             S01195
     C                     EXSR ZCHKH                      *1             S01195
     C*
     C********** @@HIND    IFEQ 'W'                        B*2            S01195
     C           ZIND      IFEQ 'W'                        B*2            S01195
     C**********           MOVE DDCCY2    @@CCY            **2            S01195
     C                     MOVE DDCCY2    ZCCY             **2            S01195
     C**********           EXSR ZA0830                     **2            S01195
     C                     EXSR ZCHKH                      **2            S01195
     C                     END                             E*2
     C*
     C* IF HOLIDAY ADD 1 TO DAY FIELD.IF DAY FIELD IS GREATER THAN DAYS IN
     C* A MONTH THEN SUBTRACT 2 TO GET THE PREVIOUS DAY
     C*
     C********** @@HIND    IFEQ 'H'                        B*2            S01195
     C           ZIND      IFEQ 'H'                        B*2            S01195
     C                     ADD  1         @@Z71D           **2
     C           @@Z71D    IFGT @@SDAY                     B**3
     C           @@NXTM    OREQ 'Y'                        ***3
     C                     SUB  2         @@Z71D           ***3
     C                     MOVE 'Y'       @@NXTM           ***3
     C                     END                             E**3
     C                     END                             E*2
     C*
     C********** @@HIND    IFEQ 'W'                        B*2            S01195
     C           ZIND      IFEQ 'W'                        B*2            S01195
     C                     MOVE '0'       @@HSWT           **2
     C                     END                             E*2
     C*
     C                     END                             E1
     C*
     C                     GOTO ZA0859
     C*                    MOVE @@SPDD    @@SPDD  80
     C*                    MOVE @@PRDU    @@PRDU  20
     C*                    MOVE @@PRDT    @@PRDT  1
     C                     MOVE DDCCY1    DDCCY1  3
     C                     MOVE DDCCY2    DDCCY2  3
     C*
     C           ZA0859    ENDSR
     C*******************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C* ZA0890   - EDIT FORWARD POINTS FOR SIGN, DECIMAL POINT AND    *
     C*            ZERO SUPPRESSION                                   *
     C*                                                               *
     C* CALLS             -                                           *
     C*                                                               *
     C* CALLED BY  #B     - MAIN CONTROLLING SUBROUTINE               *
     C*                                                               *
     C* FLDS USED  @@PNTS - UNEDITED FORWARD POINTS INPUT - NOTE THIS *
     C*                     FIELD MAY BE EITHER (5,0) OR (5,2)        *
     C*            @@EPNT - EDITED FORWARD POINTS RETURNED FROM ZA0890*
     C*            @@7    - CHARACTER ARRAY OF INPUT FORWARD POINTS   *
     C*            @7     - CHARACTER ARRAY OF EDITED FORWARD POINTS  *
     C*            @@B    - INDEX TO ARRAY OF EDITED FORWARD POINTS   *
     C*            @@TRIL - INDICATES LEADING ZERO LOCATED            *
     C*            @@A    - INDEX TO UNEDITED ARRAY OF FORWARD POINTS *
     C*            @@PSNV - FORWARD POINTS POSITIVE (P) / NEGATIVE (N)*
     C*            @@INTP - CONTAINS INTEGER PORTION OF FORWARD POINTS*
     C*            @@DECP - CONTAINS DECIMAL PORTION OF FORWARD POINTS*
     C*                                                               *
     C*****************************************************************
     C           ZA0890    BEGSR
     C*
     C*
     C** IF FORWARD POINTS ARE ZERO MOVE BLANKS INTO FIELD RETURNED TO
     C** CALLING PROGRAM
     C           @@PNTS    IFEQ 0                          B1
     C                     MOVE *BLANKS   @@EPNT           *1
     C                     GOTO ZA0899                     *1
     C                     END                             E1
     C*
     C** CHECK WHETHER FORWARD POINTS POSITIVE OR NEGATIVE.
     C** MAKE LAST NUMBER OF ARRAY @@7  POSITIVE ALLOWING EASIER
     C** MANIPULATION
     C                     TESTB'2'       @@BITO     80
     C*
     C           *IN80     IFEQ '1'                        B1
     C                     MOVE 'N'       @@PSNV  1        *1
     C                     BITON'2'       @@BITO           *1
     C                     ELSE                            X1
     C                     MOVE 'P'       @@PSNV           *1
     C                     END                             E1
     C*
     C*
     C** SET UP OFFSET OF POINTS TO SPOT AND CLEAR ARRAY OF OUTPUT DATA
     C                     MOVEA*BLANKS   @7,1
     C*
     C** RESET FIELDS ALTERED WHEN ZA0890 PREVIOUSLY CALLED
     C                     MOVE 'N'       @@TRIL  1
     C*
     C** REMOVE LEADING ZEROES AND AND SET UP INTEGER PORTION OF
     C** REFORMATTED FORWARD POINTS
     C           @@INTP    IFNE '00000'                    B1
     C*
     C           1         DO   5         @@A     10       B*2
     C           @@7,@@A   IFNE '0'                        B**3
     C           @@TRIL    OREQ 'Y'                        ***3
     C                     MOVE 'Y'       @@TRIL           ***3
     C           @@A       ADD  @F        @@B     20       ***3
     C           @@B       IFLT 15                         B***4
     C                     MOVE @@7,@@A   @7,@@B           ****4
     C                     END                             E***4
     C                     END                             E**3
     C                     END                             E*2
     C*
     C** CHECK WHETHER DECIMAL POINT AND DECIMAL DETAILS REQUIRED AND
     C** IF REQUIRED SET DETAILS UP.
     C*
     C                     ELSE                            X1
     C           5         ADD  @F        @@B              *1
     C*
     C** IF INTEGER PORTION OF FORWARD POINTS IS ZERO MOVE ZERO INTO
     C** FORMATTED ARRAY BEFORE DECIMAL SEPARATOR
     C           @@DECP    IFNE '00'                       B*2
     C                     MOVE '0'       @7,@@B           **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** SET UP DECIMAL SEPARATOR
     C                     ADD  1         @@B
     C           @@DECP    IFNE '00'                       B1
     C*********************MOVE*IDDCSP****@7,@@B************1*************S01319
     C                     MOVE BNDCSP    @7,@@B           *1             S01319
     C                     ADD  1         @@B              *1
     C*
     C** NOW MOVE FIELDS AFTER DECIMAL SEPARATOR INTO ARRAY
     C           @@B       IFLT 15                         B*2
     C                     MOVEA@@DECP    @7,@@B           **2
     C                     ADD  2         @@B              **2
     C                     END                             E*2
     C                     END                             E1
     C*
     C** IF NEGATIVE MOVE '-' SIGN INTO NEXT FIELD OF ARRAY
     C           @@B       IFGT 14                         B1
     C                     Z-ADD14        @@B              *1
     C                     END                             E1
     C*
     C           @@PSNV    IFEQ 'N'                        B1
     C                     MOVE '-'       @7,@@B           *1
     C                     ELSE                            X1
     C                     MOVE '+'       @7,@@B           *1
     C                     END                             E1
     C*
     C** SET UP FIELD CONTAINING REFORMATTED DATA FOR OUTPUT
     C                     MOVEA@7,1      @@EPNT 14
     C*
     C           ZA0899    ENDSR
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0900 - THIS SUBROUTINE CALCULATES THE CROSS EXCHANGE RATE  *
     C*                                                              *
     C* CALLED BY :  #B                                              *
     C*                                                              *
     C* CALLS :                                                      *
     C*                                                              *
     C* INPUT  : @@MDI1  FIRST MULTIPLY/DIVIDE INDICATOR             *
     C*          @@MDI2  SECOND MULTIPLY/DIVIDE INDICATOR            *
     C*          @@RAT1  FIRST RATE (SIZE : 13,8)                    *
     C*          @@RAT2  SECOND RATE (SIZE : 13,8)                   *
     C*                                                              *
     C* OUTPUT : @@CSRT  CROSS RATE  (SIZE : 13,8)                   *
     C*          @@FCMD  FIRST CCY MULTIPLY/DIVIDE INDICATOR         *
     C*                                                              *
     C* USES :                                                       *
     C*                                                              *
     C*     LAST AMEND NO. 000003             DATE   21/08/86        *
     C*      Amendment to prevent divide by zero.                    *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA0900    BEGSR
     C*
     C           @@RAT1    IFEQ *ZERO                      B1
     C                     Z-ADD1         @@RAT1           *1
     C                     END                             E1
     C*
     C           @@RAT2    IFEQ *ZERO                      B1
     C                     Z-ADD1         @@RAT2           *1
     C                     END                             E1
     C*
     C**  IF THE FIRST RATE M/D INDICATOR IS 'M' MULTIPLY,
     C**             ELSE DIVIDE
     C*
     C           @@MDI1    IFEQ 'M'                        B1
     C                     Z-ADD@@RAT1    @@CSRT 138       *1
     C                     ELSE                            X1
     C           1         DIV  @@RAT1    @@CSRT    H      *1
     C                     END                             E1
     C*
     C**  IF THE SECOND RATE M/D INDICATOR IS 'D' MULTIPLY,
     C**             ELSE DIVIDE
     C*
     C           @@MDI2    IFEQ 'D'                        B1
     C           @@CSRT    MULT @@RAT2    @@CSRT           *1
     C                     ELSE                            X1
     C           @@CSRT    DIV  @@RAT2    @@CSRT    H      *1
     C                     END                             E1
     C*
     C*
     C**  SET FIRST CCY MULTIPLY/DIVIDE *IN TO MULTIPLY
     C                     MOVE 'M'       @@FCMD  1
     C*
     C           ZA0909    ENDSR                           **ZA0909 TAG**
     C*****************************************************************
     C/EJECT
     C****************************************************************
     C*                                                              *
     C* ZA0910 - SUBROUTINE CALCULATES DAY IN WEEK                   *
     C*                                                              *
     C* CALLED BY -  #B                                              *
     C*                                                              *
     C* CALLS  ZA0680 - DATE TO DAY NUMBER CONVERSION                *
     C*                                                              *
     C* INPUT  :  @@DTIN DATE FOR WHICH DAY IN WEEK TO BE CALC (8N)  *
     C*                                                              *
     C* OUTPUT :  @@DNAM DAY IN WEEK SHORTNAME                 (2A)  *
     C*           @@DYNO DAY IN WEEK NUMBER                    (1N)  *
     C*                                                              *
     C* WORKFIELDS : @DY    - ARRAY OF DAY SHORTNAMES                *
     C*              @@WEEK - NUMBER OF WEEKS FROM 01JAN72           *
     C*              @@P    - DAY NO. & INDEX TO DAY SHORTNAME ARRAY *
     C*              @@MDNO - MIDAS DAY NUMBER                       *
     C*                                                              *
     C*****************************************************************
     C           ZA0910    BEGSR
     C*
     C*
     C** CONVERT DATE TO DAY NUMBER USING ZA0680
     C                     EXSR ZA0680
     C*
     C** CALCULATE DAY IN WEEK NUMBER
     C           @@MDNO    DIV  7         @@WEEK  50
     C                     MVR            @@P     10
     C*
     C** AS MIDAS DAY NO 1 WAS A SATURDAY AND DAY 1 IN WEEK FOR FX IS A
     C** MONDAY NEED TO ADJUST REM TO SET UP CORRECT DAY SHORTNAME
     C           @@P       IFGE 3                          B1
     C           @@P       SUB  2         @@P              *1
     C                     ELSE                            X1
     C           @@P       ADD  5         @@P              *1
     C                     END                             E1
     C*
     C** SET UP OUTPUT FIELDS WITH DAY NUMBER AND SHORTNAME
     C                     MOVE @DY,@@P   @@DNAM  2
     C                     Z-ADD@@P       @@DYNO  10
     C*
     C           ZA0919    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE:  #A  - Initial processing; initialisation and    *
     C*                     retrieval of ICD and user data.           *
     C*                                                               *
     C*  FIELDS USED:         @ACTN  - program work field holding     *
     C*                                action code                    *
     C*                                                               *
     C*  CALLED BY :  MAIN PROGRAM                                    *
     C***CALLS*****:**ZA0150*******************************************   S01194
     C*  CALLS     :  AOBANKR0 - ACCESS OBJECT FOR BANK DETAILS       *   S01194
     C*                                                               *
     C*****************************************************************
     C*
     C           #A        BEGSR
     C*
     C**  Set on Message Subfile end indicator.                           S01166
     C                     MOVE '1'       *IN20                           S01166
     C*                                                                   S01166
     C**  Initialise screen msg queue.                                    S01166
     C                     MOVEL'*'       DDPGMQ                          S01166
     C*                                                                   S01166
     C**  Move workstation ID to screen field.                            S01166
     C                     MOVEL@JOB      DDWSID                          S01166
     C*                                                                   S01166
     C**
     C**  Define program work fields with reference to file fields.
     C**
     C********** *LIKE     DEFN SPDY      @@WSP1                          S01194
     C********** *LIKE     DEFN SPDY      @@WSP2                          S01194
     C********** *LIKE     DEFN FXSP      @@SPD1                          S01194
     C********** *LIKE     DEFN FXSP      @@SPD2                          S01194
     C********** *LIKE     DEFN HGSP      @HISP1                          S01194
     C********** *LIKE     DEFN HGSP      @HISP2                          S01194
     C********** *LIKE     DEFN LOSP      @LOSP1                          S01194
     C********** *LIKE     DEFN LOSP      @LOSP2                          S01194
     C********** *LIKE     DEFN CDP       @CDP1                           S01194
     C********** *LIKE     DEFN CDP       @CDP2                           S01194
     C********** *LIKE     DEFN DPBF      @DPBF1                          S01194
     C********** *LIKE     DEFN DPBF      @DPBF2                          S01194
     C********** *LIKE     DEFN NQDP      @NQDP1                          S01194
     C********** *LIKE     DEFN NQDP      @NQDP2                          S01194
     C********** *LIKE     DEFN XRMD      @XRMD1                          S01194
     C********** *LIKE     DEFN XRMD      @XRMD2                          S01194
     C           *LIKE     DEFN A6SPDY    @@WSP1                          S01194
     C           *LIKE     DEFN A6SPDY    @@WSP2                          S01194
     C           *LIKE     DEFN A6FXSD    @@SPD1                          S01194
     C           *LIKE     DEFN A6FXSD    @@SPD2                          S01194
     C           *LIKE     DEFN A6HSRT    @HISP1                          S01194
     C           *LIKE     DEFN A6HSRT    @HISP2                          S01194
     C           *LIKE     DEFN A6LSPR    @LOSP1                          S01194
     C           *LIKE     DEFN A6LSPR    @LOSP2                          S01194
     C           *LIKE     DEFN A6NBDP    @CDP1                           S01194
     C           *LIKE     DEFN A6NBDP    @CDP2                           S01194
     C           *LIKE     DEFN A6DPBF    @DPBF1                          S01194
     C           *LIKE     DEFN A6DPBF    @DPBF2                          S01194
     C           *LIKE     DEFN A6NQDP    @NQDP1                          S01194
     C           *LIKE     DEFN A6NQDP    @NQDP2                          S01194
     C           *LIKE     DEFN A6MDEX    @XRMD1                          S01194
     C           *LIKE     DEFN A6MDEX    @XRMD2                          S01194
     C           *LIKE     DEFN XPPRDD    @@SPDD
     C           *LIKE     DEFN XPPRD     @@PRDU
     C           *LIKE     DEFN XPTPRD    @@PRDT
     C           *LIKE     DEFN @@MDI1    @@MDI2
     C********** *LIKE     DEFN HGSP      @XR1                            S01194
     C           *LIKE     DEFN A6HSRT    @XR1                            S01194
     C********** *LIKE     DEFN LOSP      @XR2                            S01194
     C           *LIKE     DEFN A6LSPR    @XR2                            S01194
     C           *LIKE     DEFN XPHIPT    @@HPTS
     C           *LIKE     DEFN XPLOPT    @@LPTS
     C**
     C**                                                              *
     C***   Initialise Data Structure Fields
     C**
     C**                   MOVE *BLANK    @K2
     C*                                                               *
     C*****************************************************************
     C**
     C*
     C** Load constants fields to window
     C*
     C***                  MOVEL'MKT'     @CON01                          S01166
     C***                  MOVEL'Rates'   @CON05                          S01166
     C***                  MOVEL'Spot'    @PN3                            S01166
     C***                  MOVEL'/'       @SLASH                          S01166
     C*
     C**********           MOVEL'20'      @PRF                            S01194
     C**********           MOVE '1'       @SUF                            S01194
     C*
     C** Negative signs on period dates in the past
     C*
     C                     Z-SUB@PU,1     @PU,1
     C                     Z-SUB@PU,2     @PU,2
     C*
     C**
     C**  Open all files not already open
     C**
     C                     OPEN FDDAYSLL
     C*
     C                     OPEN FDMNTHLL
     C*
     C**********           OPEN FDICDRLL                                  S01194
     C*
     C                     OPEN FDCCYPLL
     C*
     C                     OPEN FXCCYPLL
     C*
     C*********************OPEN*FDUSSILL****************************S01166S01319
     C                     OPEN MUSER                                     S01319
     C**************************************************************S01166S01319
     C*********************MOVEL@USER*****@USER3**3*****************S01166S01319
     C**************************************************************S01166S01319
     C***********@USER3****CHAINFDUSSIP0*************71************S01166*S01319
     C**************************************************************S01166S01319
     C**db*err*if*user*not*found************************************S01166S01319
     C************IN71*****IFEQ*'1'************************B1*******S01166S01319
     C*********************MOVE*'929'*****DBASE*************1*******S01166S01319
     C*********************MOVE*'FDUSSILL'DBFILE************1*******S01166S01319
     C*********************MOVEL@USER3****DBKEY*************1**ERRORS01166S01319
     C*********************MOVE*'1'********INU7*************1***929*S01166S01319
     C*********************MOVE*'1'********INU8*************1*******S01166S01319
     C*********************GOTO*#A9*************************1*******S01166S01319
     C*********************END*****************************E1*******S01166S01319
     C           @USER     CHAINMUSER                71                   S01319
     C*                                                                   S01319
     C           *IN71     IFEQ '1'                        B1             S01319
     C*                                                                   S01319
     C                     MOVEL'MUSER'   DBFILE           ***************S01319
     C                     MOVE '929'     DBASE            *             *S01319
     C                     MOVEL@USER     DBKEY            * DBERROR 929 *S01319
     C                     MOVE '1'       *INU7                           S01319
     C                     MOVE '1'       *INU8            ************** S01319
     C                     GOTO #A9                                       S01319
     C*                                                                   S01319
     C                     END                             E1             S01319
     C*                                                                   S01166
     C* do file overide before open                                       S01166
     C***********USREF*****IFEQ*'Y'                        B2      S01166 S01319
     C           AURF      IFEQ 'Y'                        B2             S01319
     C                     MOVEL@OVR,1    @OVRID           *2             S01166
     C*********************Z-ADDUSRFPD****@WAIT*************2*******S01166S01319
     C                     Z-ADDREFP      @WAIT            *2             S01319
     C                     Z-ADD36        QCALEN 155       *2             S01166
     C*********************CALL 'QCAEXEC'                  *2       S01166E20774
     C                     CALL 'QCMDEXC'                  *2             E20774
     C                     PARM           @OVRID           *2             S01166
     C                     PARM           QCALEN           *2             S01166
     C                     END                             E2             S01166
     C*                                                                   S01166
     C**********           OPEN DL3160DD                           S01166 S01117
     C                     OPEN TM3160DD                                  S01117
     C*
     C***        @FXOPN    IFEQ ' '                        B1             S01166
     C*                    OPEN FX38CPLL                   *1             S01166
     C***                  OPEN CA38CPLL                   *1             S01166
     C***                  END                             E1             S01166
     C*
     C                     MOVE 'Y'       @FCYC   1
     C*
     C****Call*subroutine*to*access*ICD*file*for*MIDAS*run*date***        S01194
     C**********                                                          S01194
     C**********           EXSR ZA0150                                    S01194
     C**********                                                          S01194
     C****Access*TABTB10*record*from*ICD*file***                          S01194
     C****Check*for*data*base*error*************                          S01194
     C**********                                                          S01194
     C********** *IN80     IFEQ '1'                        B1 ************S01194
     C**********           MOVE '1'       *INU7            *1 *           S01194
     C**********           MOVE '1'       *INU8            *1 * D.B ERROR S01194
     C**********           GOTO #A9                        *1 *   900     S01194
     C**********           END                             E1 *           S01194
     C**********                                              ************S01194
      *                                                                   S01194
      * Get Bank's details from SDBANKPD via Access Object                S01194
      * (Note that *DBERR is used as standard return code although        S01194
      * this will not normally produce a DB error due to access           S01194
      * object having already been called in SD1600)                      S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
      *                                                                   S01194
     C**  Read the FDDAYSLL record for day short names
     C*
     C           1         CHAINFDDAYSLL             7171
     C           *IN71     IFEQ '1'                        B1
     C                     MOVE '001'     DBASE            *1 ************
     C                     MOVEL'FDDAYSLL'DBFILE           *1 *
     C                     MOVE *BLANKS   DBKEY            *1 * D.B ERROR
     C                     MOVE '1'       *INU7            *1 *    001
     C                     MOVE '1'       *INU8            *1 *
     C                     GOTO #A9                        *1 ************
     C                     END                             E1
     C*
     C*
     C**  Read the FDMNTHLL record for month short names
     C*
     C           1         CHAINFDMNTHLL             7171
     C           *IN71     IFEQ '1'                        B1
     C                     MOVE '002'     DBASE            *1 ************
     C                     MOVEL'FDMNTHLL'DBFILE           *1 *
     C                     MOVE *BLANKS   DBKEY            *1 * D.B ERROR
     C                     MOVE '1'       *INU7            *1 *    002
     C                     MOVE '1'       *INU8            *1 *
     C                     GOTO #A9                        *1 ************
     C                     END                             E1
     C*
     C*
     C***ACCESS*FDINSTLL*IF*THIS*HAS*NOT*ALREADY*BEEN*DONE.***************S01319
     C*  ACCESS SDDEALPD                                                  S01319
     C***********IDRCID****IFNE*'ID'***********************B1*************S01319
     C                     EXSR ZA0870                     *1
     C********************************************************************S01319
     C***EXIT*IF*DATABASE*ERROR.******************************************S01319
     C************IN80*****IFEQ*'1'************************B*2************S01319
     C*********************GOTO*#A9**************************2************S01319
     C*********************END*****************************E*2************S01319
     C*********************END*****************************E1*************S01319
     C*
     C           #A9       ENDSR                           **#A9**
     C*****************************************************************
     C/EJECT
     C*****************************************************************   S01194
     C**********                                                      *   S01194
     C********SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF/  *   S01194
     C********FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD *   S01194
     C********1*(HELD ON PF/TABTB10)                                  *   S01194
     C********INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD *   S01194
     C********IS FLAGGED FOR DELETION.                                *   S01194
     C********IF INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED      *   S01194
     C********ACCESS ARE PLACED IN THE LDA.                           *   S01194
     C**********                                                      *   S01194
     C********FIELDS USED : SS0150 - KEY USED TO ACCESS FDICDRLL      *   S01194
     C**********                                                      *   S01194
     C***CALLED*BY : #A                                               *   S01194
     C***CALLS**   :                                                  *   S01194
     C**********                                                      *   S01194
     C**********                                                      *   S01194
     C*****************************************************************   S01194
     C**********                                                          S01194
     C********** ZA0150    BEGSR                                          S01194
     C**********                                                          S01194
     C***SET*UP*KEY TO OBTAIN FORMAT TABTB10F '01        10'              S01194
     C**********           MOVEL'01'      SS0150 12                       S01194
     C**********           MOVE '10'      SS0150                          S01194
     C**********                                                          S01194
     C***CHAIN*TO FILE FDICDRLL                                           S01194
     C********** SS0150    CHAINFDICDRLL             8080                 S01194
     C********** RECI      IFNE 'D'                        B1             S01194
     C**********           MOVE '1'       *IN80            *1             S01194
     C**********           END                             E1             S01194
     C**********                                                          S01194
     C***DEAL*WITH DATA BASE ERROR                                        S01194
     C********** *IN80     IFEQ '1'                        ***************S01194
     C**********           MOVEL'FDICDRLL'DBFILE           *             *S01194
     C**********           MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C**********           MOVELSS0150    DBKEY            *             *S01194
     C**********           END                             ***************S01194
     C**********                                                          S01194
     C********** ZA0159    ENDSR                                          S01194
     C*****************************************************************   S01194
     C/EJECT
      *****************************************************************
      *                                                               *
      *       TITLE:RETRIEVE NO.OF DECIMAL POSITIONS FOR BASE         *
      *             CURRENCY DEALING.                                 *
      *                                                               *
     C********SUBROUTINE*ZA0870*WILL*ACCESS*'FDINSTLL'.*THE*BASE**********S01319
      *       SUBROUTINE ZA0870 WILL ACCESS 'SDDEALPD'. THE BASE      *   S01319
      ********CURRENCY*CODE*IS*THEN*USED**TO*ACCESS*FILE*"FDCCYTLL"****   S01194
      *       CURRENCY CODE IS THEN USED  TO ACCESS FILE "SDCURRPD"   *   S01194
      *       (VIA AN ACCESS OBJECT)                                  *   S01194
      *       TO PICK UP NUMBER OF DECIMALS FOR BASE CURRENCY WHICH   *
      *       IS THEN STORED IN THE FIELD @@NDPB.                     *
      *                                                               *
      *       This process is only EXSR'ed from a 'Top Level' Program *
      *       not in Common (ZA) routines, where it is considered     *
      *                                          'Expected'           *
      *       This routine runs at First Cycle Only and should only   *
      *       run once.                                               *
      *                                                               *
     C*****************************************************************
     C*                                                               *
     C********FIELDS*USED*:*IDCYDL*-*CURRENCY*CODE*FROM*FDINSTLL**********S01319
     C*       FIELDS USED : BNCYDL - CURRENCY CODE FROM FDINSTLL      *   S01319
     C*                     @@NDPB - NO.OF DEC.PLACES IN BASE CURR.   *
     C*                                                               *
     C*       INPUT FIELDS: IDCYDL                                    *
     C*                                                               *
     C*       OUTPUT FIELD: @@NDPB                                    *
     C*                                                              *
     C*     CALLED BY:  #A                                           *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*                                                              *
     C*                                                               *
     C*   CHECKS MADE ARE :                                           *
     C*                                                               *
     C****A)*IF*RECORD*NOT*FOUND*ON*LOGICAL*FILE*'FDCCYTLL'*OR*********   S01194
     C***********'FDINSTLL'*SETON*INDICATORS*U7*,*U8*&*80**************   S01194
     C*   A) IF RECORD NOT FOUND ON LOGICAL FILE 'FDINSTLL'           *   S01194
     C*          SETON INDICATORS U7 , U8 & 80 AND EXIT               *   S01194
     C*************AND*EXIT********************************************   S01194
     C*      IF RECORD NOT FOUND ON SDCURRPD D/BASE ERROR HANDLED     *   S01194
     C*           BY ACCESS OBJECT                                    *   S01194
     C*      ELSE                                                     *
     C************STORE*CDP*IN*FIELD*@@NDPB.***************************   S01194
     C*           STORE CDP (A6NBDP) IN FIELD @@NDPB.                 *   S01194
     C*                                                               *
     C*****************************************************************
     C*
     C           ZA0870    BEGSR
     C*
     C********** *LIKE     DEFN CDP       @@NDPB                          S01194
     C           *LIKE     DEFN A6NBDP    @@NDPB                          S01194
     C********** *LIKE     DEFN NQDP      @NQDPB                          S01194
     C           *LIKE     DEFN A6NQDP    @NQDPB                          S01194
     C                     Z-ADD0         @@NDPB
     C                     Z-ADD0         @NQDPB
     C*
     C*  Access Installation control data for Base Currency Dealing.
     C*
     C*********************OPEN*FDINSTLL**********************************S01319
     C***********1*********SETLLFDINSTLL**********************************S01319
     C*********************READ*FDINSTLL*****************80***************S01319
     C********************************************************************S01319
     C************IN80*****IFEQ*'1'************************B1*************S01319
     C*********************SETON*********************U7U8***1*************S01319
     C*********************MOVEL'FDINSTLL'DBFILE************1*************S01319
     C*********************MOVEL'922'*****DBASE*************1*************S01319
     C*********************MOVEL*BLANKS***DBKEY*************1*************S01319
     C*********************GOTO*ZA0879************************************S01319
     C*********************END********************************************S01319
     C*                                                                   S01319
     C** Access Deal details via access program                           S01319
      *  (database error handling done in access program)                 S01319
     C**********           CALL 'AODEALR0'                                             S01319 CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*DBERR ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                                        S01319 CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
     C*
     C***                  MOVEL'20      '@PRF
     C***                  MOVE '1'       @SUF
     C**********           MOVELIDCYDL    @CUR                            S01194
     C**********                                                          S01194
     C***Access*Currency*file*for*Base*decimal*places***                  S01194
     C**********                                                          S01194
     C**********           OPEN FDCCYTLL                                  S01194
     C********** @@1200    CHAINFDCCYTLL             80                   S01194
     C**********                                                          S01194
     C********** *IN80     IFEQ '1'                        B1             S01194
     C**********           SETON                     U7U8  *1             S01194
     C**********           MOVEL'FDCCYTLL'DBFILE           *1             S01194
     C**********           MOVEL'921'     DBASE            *1             S01194
     C**********           MOVEL@@1200    DBKEY            *1             S01194
     C**********           GOTO ZA0879                                    S01194
     C**********           END                                            S01194
      *                                                                   S01194
      * Call Access Object to get Base Currency Decimal Places            S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C*********************PARM*IDCYDL****@CKEY***3*****************S01194S01319
     C                     PARM BNCYDL    @CKEY   3                       S01319
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01194
     C**********           Z-ADDCDP       @@NDPB                          S01194
     C                     Z-ADDA6NBDP    @@NDPB                          S01194
     C**********           Z-ADDNQDP      @NQDPB                          S01194
     C                     Z-ADDA6NQDP    @NQDPB                          S01194
     C*
     C           ZA0879    ENDSR
     C*****************************************************************
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: #C     - Terminates program.                     *
     C*                                                               *
     C*  FIELDS USED:                                                 *
     C*                                                               *
     C*  CALLED BY : Main processing                                  *
     C*  CALLS     :                                                  *
     C*                                                               *
     C*****************************************************************
     C*
     C           #C        BEGSR
     C*
     C**  Termination request
     C*
     C***        @TERM     IFEQ 'T'                        B1             S01166
     C                     MOVE '1'       *INLR            *1             S01166
     C***                  END                             E1             S01166
     C*
     C*
     C**  Inform Calling Program of Database Error
     C**  Move program name into *LDA field.
     C**
     C           *INU7     IFEQ '1'                        B1
     C**********           MOVEL'DL3160'  DBPGM            *1             S01117
     C                     MOVEL'TM3160'  DBPGM            *1             S01117
     C                     MOVE '1'       *INLR            *1
     C                     DUMP                                           S01280
     C***                  MOVE 'E'       @TERM            *1             S01166
     C                     END                             E1
     C*
     C                     RETRN
     C*
     C           #C9       ENDSR                           **#C9**
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: *INFSR -- File Error handling subroutine.        *
     C*                                                               *
     C*  FIELDS USED:                                                 *
     C*                                                               *
     C*  CALLED BY : This routine is called if there are any          *
     C*              errors on add-to files.                          *
     C*  CALLS :                                                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           INFSR     BEGSR
     C*
     C** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C***                  MOVE 'E'       @TERM                           S01166
     C                     MOVE '*CANCL'  EXTTAG  6
     C*
     C                     MOVE '1'       *INU7
     C                     MOVE '1'       *INU8
     C*
     C** SET UP FIELDS IN LOCAL DATA AREA
     C                     MOVE @FILE     DBFILE
     C**********           MOVEL'DL3160'  DBPGM                           S01117
     C                     MOVEL'TM3160'  DBPGM                           S01117
     C                     MOVE '992'     DBASE
     C*
     C                     DUMP
     C*
     C                     RETRN
     C*
     C           INFSR9    ENDSREXTTAG                      ***INFSR9*
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C*                                                               *
     C*  SUBROUTINE: *PSSR - Error handling subroutine.               *
     C*                                                               *
     C*  FIELDS USED:                                                 *
     C*                                                               *
     C*  CALLED BY : This routine is called if there are any program  *
     C*              or file errors.                                  *
     C*  CALLS :                                                      *
     C*                                                               *
     C*****************************************************************
     C*
     C           *PSSR     BEGSR
     C*
     C**  SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR1     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR1   1        *1
     C*
     C**********           MOVEL'DL3160'  DBPGM            *1             S01117
     C                     MOVEL'TM3160'  DBPGM            *1             S01117
     C                     MOVE '991'     DBASE            *1
     C*
     C                     DUMP                            *1
     C*
     C***                  MOVE 'E'       @TERM            *1             S01166
     C*
     C                     END                             E1
     C*
     C                     MOVE '1'       *INU6            *1
     C                     MOVE '1'       *INLR
     C                     RETRN
     C*
     C           #PSSR9    ENDSR                            ***PSSR9**
     C*
     C*****************************************************************
     C/EJECT
     C*****************************************************************   S01195
     C**********                                                      *   S01195
     C********TITLE:DETERMINE NEXT WORKING DAY.                       *   S01195
     C**********                                                      *   S01195
     C********SUBROUTINE ZA0730 EXPECTS FIELD '@@DTIN' TO BE          *   S01195
     C********PASSED TO IT IN 'YYYYMMDD' FORMAT.IT THEN DETERMINES    *   S01195
     C********THE NEXT WORKING DAY AND RETURNS.                       *   S01195
     C**********                                                      *   S01195
     C**INPUT**:@@DTIN DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)*   S01195
     C**********@@CCY  CURRENCY CODE   - IN FORMAT(3A)                *   S01195
     C**********                                                      *   S01195
     C**OUTPUT*:@@VDT  DATE (YYYYMMDD) - IN DATA STRUCTURE (SIZE : 8N)*   S01195
     C**********                                                      *   S01195
     C**USES*:** @@MDNO MIDAS DAY NO USED BY SR ZA0680                *   S01195
     C********** @@DAYN MIDAS DAY NO USED BY SR ZA0710                *   S01195
     C********** @@MNO  MIDAS DAY NO USED BY SR ZA0830                *   S01195
     C********** @@HIND HOLIDAY IND.RETURNED BY ZA0830                *   S01195
     C**********                                                      *   S01195
     C**CALLED*BY :                                                   *   S01195
     C**********                                                      *   S01195
     C**CALLS*:*                                                      *   S01195
     C**********                                                      *   S01195
     C**********                                                      *   S01195
     C*****************************************************************   S01195
     C********** ZA0730    BEGSR                                          S01195
     C**********                                                          S01195
     C**CONVERT*YYYYMMDD FORMAT TO MIDAS DAY NO.                          S01195
     C**********                                                          S01195
     C**********           EXSR ZA0680                                    S01195
     C**********                                                          S01195
     C********** ZA0731    TAG                                            S01195
     C**********                                                          S01195
     C**********           ADD  1         @@MDNO  50                      S01195
     C**********                                                          S01195
     C**CHECK*IF DAY NO. IS A HOLIDAY          .                          S01195
     C**********                                                          S01195
     C**********           Z-ADD@@MDNO    @@MNO   50                      S01195
     C**********                                                          S01195
     C**********           EXSR ZA0830                                    S01195
     C**********                                                          S01195
     C********** @@HIND    IFEQ 'H'                                       S01195
     C**********           GOTO ZA0731                                    S01195
     C**********           END                                            S01195
     C**********                                                          S01195
     C**CONVERT*MIDAS DAY NO. TO YYYYMMDD FORMAT.                         S01195
     C**********                                                          S01195
     C**********           Z-ADD@@MDNO    @@DAYN  50                      S01195
     C**********                                                          S01195
     C**********           EXSR ZA0710                                    S01195
     C**********                                                          S01195
     C********** ZA0739    ENDSR                                       ** S01195
     C****************************************************************    S01195
     C/EJECT
     C****************************************************************    S01194
     C**********                                                     *    S01194
     C**ZA0780*- APPLY FORWARD POINTS TO A RATE.                     *    S01194
     C**********                                                     *    S01194
     C***This*subroutine calculates an outright rate given rate ,    *    S01194
     C***points*& the two currencies.                                *    S01194
     C**********                                                     *    S01194
     C**CALLED*BY:                                                   *    S01194
     C**********                                                     *    S01194
     C**CALLS:**  ZA0790                                             *    S01194
     C**********                                                     *    S01194
     C**INPUT**:  @@IRAT INPUT RATE                          (13 8)  *    S01194
     C**********  DDCCY1 CURRENCY CODE                         (3A)  *    S01194
     C**********  DDCCY2 CURRENCY CODE                         (3A)  *    S01194
     C**********  @@FPT  FORWARD POINTS                        (7N)  *    S01194
     C**********  @@NDP1 NORMALLY QUOTED DECIMAL PLACES(DDCCY1)(1N)  *    S01194
     C**********  @@NDP2 NORMALLY QUOTED DECIMAL PLACES(DDCCY2)(1N)  *    S01194
     C**********                                                     *    S01194
     C**********                                                     *    S01194
     C**OUTPUT*:  @@NEWR NEW RATE                             (13N)  *    S01194
     C**********                                                     *    S01194
     C**********                                                     *    S01194
     C**ADDITIONAL WORK FIELDS USED WITHIN THIS ROUTINE :            *    S01194
     C**********                                                     *    S01194
     C**********  @@WF1  WORK FIELD HOLDING INTERMEDIATE RESULT FROM *    S01194
     C**********                                         CALCULATION.*    S01194
     C**********  @@NDP  NORMAL DECIMAL PLACES                  (1 0)*    S01194
     C**********  @@C    INDEX TO ARRAY                              *    S01194
     C**********  @@AY   ARRAY OF POWERS OF 10                       *    S01194
     C**********                                                     *    S01194
     C******AMEND NO. XXXXX                    DATE XX/XX/XX         *    S01194
     C**********                                                     *    S01194
     C****************************************************************    S01194
     C**********                                                          S01194
     C********** ZA0780    BEGSR                                          S01194
     C**********                                                          S01194
     C***IF*EITHER CURRENCY IS BLANK ASSUME IT IS THE BASE CURRENCY       S01194
     C***FOR*DEALING.                                                     S01194
     C**********                                                          S01194
     C***IF*EITHER CURRENCY IS THE BASE CURRENCY OBTAIN NUMBER OF         S01194
     C***NORMALLY QUOTED DECIMAL PLACES FOR THE OTHER CURRENCY.           S01194
     C********** DDCCY1    IFEQ IDCYDL                     B1             S01194
     C********** DDCCY1    OREQ *BLANKS                    *1             S01194
     C********** DDCCY2    OREQ IDCYDL                     *1             S01194
     C********** DDCCY2    OREQ *BLANKS                    *1             S01194
     C**********                                                          S01194
     C********** DDCCY1    IFEQ IDCYDL                     B*2            S01194
     C********** DDCCY1    OREQ *BLANKS                    **2            S01194
     C**********           MOVE @@NDP2    @@NDP   10       **2            S01194
     C**********           ELSE                            X*2            S01194
     C**********           MOVE @@NDP1    @@NDP            **2            S01194
     C**********           END                             E*2            S01194
     C**********                                                          S01194
     C***IF*NEITHER IS BASE CURRENCY OBTAIN THE NUMBER OF QUOTED          S01194
     C***DECIMAL PLACES USING ZA0790.                                     S01194
     C**********           ELSE                            X1             S01194
     C**********           EXSR ZA0790                     *1             S01194
     C**********           END                             E1             S01194
     C**********                                                          S01194
     C***NOW*APPLY FORWARD POINTS TO EXCHANGE RATE.                       S01194
     C**********           Z-ADD@@NDP     @@C     20                      S01194
     C**********           ADD  1         @@C                             S01194
     C********** @@FPT     DIV  @@AY,@@C  @@WF1  158                      S01194
     C********** @@WF1     ADD  @@IRAT    @@NEWR 138                      S01194
     C**********                                                          S01194
     C**********           GOTO ZA0789                                    S01194
     C**********                                                          S01194
     C***UNEXECUTED PROCESSING TO DEFINE WORKFIELDS USED BY SUBROUTINE.   S01194
     C**********           MOVE @@NDP1    @@NDP1  10                      S01194
     C**********           MOVE @@NDP2    @@NDP2  10                      S01194
     C**********           MOVE @@IRAT    @@IRAT 138                      S01194
     C**********           MOVE @@FPT     @@FPT   72                      S01194
     C**********                                                          S01194
     C********** ZA0789    ENDSR                                          S01194
     C*****************************************************************   S01194
     C/EJECT
     C*****************************************************************
     C*                                                               *
     C*       TITLE:CALCULATE NO.OF DECIMALS FOR QUOTING A CROSS      *
     C*             RATE.                                             *
     C*                                                               *
     C*     AMEND NO. 000001                  DATE   04/07/86        *
     C*                                                               *
     C*       SUBROUTINE ZA0790 EXPECTS TWO READ OPERATIONS TO        *
     C********HAVE*BEEN*DONE*ON*LOGICAL*FILE*"FDCCYTLL"*AND*THE********   S01194
     C*       HAVE BEEN DONE ON SDCURRPD (VIA ACCESS OBJECT) AND      *   S01194
     C********FIELD*"NQDP*MOVED*INTO*@@NDP1*OR*@@NDP2*DEPENDING********   S01194
     C*       FIELD "A6NQDP" MOVED INTO @@NDP1 OR @@NDP2 DEPENDING    *   S01194
     C*       ON THE READ OPERATION.IT ALSO EXPECTS THE EXCHANGE      *
     C*       RATE TO BE MOVED INTO FIELD @@IRAT.THE ROUTINE WILL     *
     C*       THEN RETURN THE NUMBER OF DECIMAL PLACES FOR QUOTING    *
     C*       A CROSS RATE IN FIELD @@NDP.                            *
     C*                                                               *
     C* NOTE: @@NDP1 , @@NDP2 AND @@NDP HAVE BEEN DEFINED AS 1,0.     *
     C*       @@IRAT HAS TO BEEN DEFINED AS 13,8.                     *
     C*                                                               *
     C*****************************************************************
     C*                                                               *
     C*       FIELDS USED : @@NDP1 - NO.OF DEC.PLACES IN CURRENCY-1   *
     C*                     @@NDP2 - NO.OF DEC.PLACES IN CURRENCY-2   *
     C*                     @@IRAT - EXCHANGE RATE                    *
     C*                     @@NDP  - NO.OF DEC.PLACES IN CROSS RATE   *
     C*                                                               *
     C*       INPUT FIELDS: @@NDP1                                    *
     C*                     @@NDP2                                    *
     C*                     @@IRAT                                    *
     C*                                                               *
     C*       OUTPUT FIELD: @@NDP                                     *
     C*                                                               *
     C*   CHECKS MADE ARE :                                           *
     C*                                                               *
     C*   A) IF @@NDP1 = @@NDP2 = 5                                   *
     C*      THEN @@NDP = 5.                                          *
     C*   B) IF @@NDP1 *NE @@NDP2                                     *
     C*             OR
     C*      IF @@NDP1 = @@NDP2 AND *NE 5
     C*      THEN                                                     *
     C*      1:- IF @@IRAT *GE 100                                    *
     C*          THEN @@NDP = 2.                                      *
     C*      2:- IF 100 *GT @@IRAT *GE 20                             *
     C*          THEN @@NDP = 3.                                      *
     C*      3:- IF 20 *GT @@IRAT *GE 1                               *
     C*          THEN @@NDP = 4.                                      *
     C*      4:- IF 1 *GT @@IRAT                                      *
     C*          THEN @@NDP = 5.                                      *
     C*                                                              *
     C* CALLED BY:  ZA0760                                           *
     C*                                                              *
     C*                                                              *
     C* CALLS:                                                       *
     C*                                                              *
     C*****************************************************************
     C*
     C           ZA0790    BEGSR
     C*
     C           @@NDP1    IFEQ @@NDP2                     B1
     C           @@NDP1    ANDEQ5                          *1
     C                     Z-ADD5         @@NDP   10       *1
     C                     GOTO ZA0799                     *1
     C                     END                             E1
     C*
     C           @@IRAT    IFGE 100                        B1
     C                     Z-ADD2         @@NDP            *1
     C                     ELSE                            X1
     C           @@IRAT    IFLT 100                         B2
     C           @@IRAT    ANDGE20                          *2
     C                     Z-ADD3         @@NDP             *2
     C                     ELSE                             X2
     C           @@IRAT    IFLT 20                           B3
     C           @@IRAT    ANDGE1                            *3
     C                     Z-ADD4         @@NDP              *3
     C                     ELSE                              X3
     C           @@IRAT    IFLT 1                             B4
     C                     Z-ADD5         @@NDP               *4
     C                     END                                E4
     C                     END                               E3
     C                     END                              E2
     C                     END                             E1
     C*
     C           ZA0799    ENDSR
     C*****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1150 -  Convert rate to scaled rate.                   *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SXP1 - First currency scaling exponent.       *
     C*              @@SXP2 - Second currency scaling exponent.      *
     C*              @@INRT - Rate to be scaled.                     *
     C*              @@FCMD - First Currency Multiply/Divide Ind.    *
     C*                                                              *
     C*     OUTPUT:  @@SCRT - Scaled rate.                           *
     C*              @@ISRT - Inverse of scaled rate.                *
     C*              @@ERCD - Error code.                            *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCF1 - Scaling factor for currency 1.         *
     C*              @@SCF2 - Scaling factor for currency 2.         *
     C*              @@WKA  - Work field, 15,0N.                     *
     C*              @@WKB  - Work field, 15,0N.                     *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1150    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SXP1    @@SXP1  10
     C                     Z-ADD@@SXP2    @@SXP2  10
     C                     Z-ADD@@INRT    @@INRT 128
     C                     MOVE @@FCMD    @@FCMD  1
     C*
     C                     Z-ADD*ZEROS    @@SCRT 128
     C                     Z-ADD*ZEROS    @@ISRT 128
     C                     Z-ADD*ZEROS    @@ERCD  10
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCF1 100
     C                     Z-ADD*ZEROS    @@SCF2 100
     C                     Z-ADD*ZEROS    @@WKA  150
     C                     Z-ADD*ZEROS    @@WKB  150
     C*
     C**  If the input rate is zero, the two output rates are zero,
     C**  by-pass further processing.
     C           @@INRT    CABEQ0         ZA1159
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the first currency.
     C                     Z-ADD@@SXP1    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF1
     C*
     C**  Determine the scaling factor from the scaling exponent for
     C**  the second currency.
     C                     Z-ADD@@SXP2    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCF2
     C*
     C**  If the M/D indicator is M, then the scaled rate is calculated
     C**  as follows....
     C           @@FCMD    IFEQ 'M'                        B1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF1    @@SCRT           *1
     C           @@SCF2    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF1    @@WKA            *1
     C           @@SCF2    DIV  @@INRT    @@WKB     H      *1
     C*
     C**  Otherwise, calculate the rate as follows....
     C                     ELSE                            X1
     C*
     C**  Calculate the scaled rate and its inverse.
     C           @@INRT    MULT @@SCF2    @@SCRT           *1
     C           @@SCF1    DIV  @@INRT    @@ISRT    H      *1
     C*
     C**  Calculate the scaled rate and its inverse, placing the result
     C**  into 15,0 fields to check for overflow.
     C           @@INRT    MULT @@SCF2    @@WKA            *1
     C           @@SCF1    DIV  @@INRT    @@WKB     H      *1
     C*
     C                     END                             E1
     C*
     C**  If the work fields are greater than 9999.99999999, set up the
     C**  error codes.
     C           @@WKA     IFGE 10000                      B1
     C                     Z-ADD1         @@ERCD           *1
     C                     END                             E1
     C           @@WKB     IFGE 10000                      B1
     C                     Z-ADD2         @@ERCD           *1
     C                     END                             E1
     C           @@WKA     IFGE 10000                      B1
     C           @@WKB     ANDGE10000                      B1
     C                     Z-ADD3         @@ERCD           *1
     C                     END                             E1
     C*
     C           ZA1159    ENDSR                           **ZA1159**
      /EJECT
     C****************************************************************
     C*                                                              *
     C*     ZA1160 -  Convert scaled rate to unscaled rate.          *
     C*                                                              *
     C*     CALLS:                                                   *
     C*                                                              *
     C*     INPUT:   @@SEXP - Scaling exponent.                      *
     C*              @@INRT - Rate to be unscaled.                   *
     C*                                                              *
     C*     OUTPUT:  @@USRT - Unscaled rate.                         *
     C*                                                              *
     C*     USES:    @SF    - Array of scaling factors.              *
     C*              @@C    - Index for array @SF.                   *
     C*              @@SCAF - Scaling factor.                        *
     C*                                                              *
     C*     LAST AMEND NO. 000000             DATE   XX/XX/XX        *
     C*                                                              *
     C****************************************************************
     C*
     C           ZA1160    BEGSR
     C*
     C**  Define and initialise fields used and output fields.
     C                     Z-ADD@@SEXP    @@SEXP  10
     C                     Z-ADD@@INRT    @@INRT 128
     C*
     C                     Z-ADD*ZEROS    @@USRT 128
     C*
     C                     Z-ADD*ZEROS    @@C     20
     C                     Z-ADD*ZEROS    @@SCAF 100
     C*
     C**  If the input rate is zero, the output rate is zero, by-pass
     C**  further processing.
     C           @@INRT    CABEQ0         ZA1169
     C*
     C**  Determine the scaling factor from the scaling exponent.
     C                     Z-ADD@@SEXP    @@C
     C                     ADD  1         @@C
     C                     Z-ADD@SF,@@C   @@SCAF
     C*
     C**  Calculate the unscaled rate.
     C           @@INRT    DIV  @@SCAF    @@USRT    H
     C*
     C           ZA1169    ENDSR                           **ZA1169**
      /EJECT
** Scaling factors array - @SF
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
** @YD  USED BY SR. ZA0710 - YEARS, IN DAYS, CUMULATIVE IN 4 YEAR SPAN
00366007310109601461
** @MD  USED BY SR. ZA0710 - MONTHS IN DAYS CUMULATIVE THROUGH YEAR
00000000310005900090001200015100181002120024300273003040033400365
** @M  USED BY SR. ZA0850 - DAYS IN A MONTH
312831303130313130313031
**   @@C    - Array of powers of 10.
0000000001
0000000010
0000000100
0000001000
0000010000
0000100000
0001000000
0010000000
0100000000
1000000000
**
 2D O/N
 1D T/N
 1D S/N
 1W  1W
 2W  2W
 3W  3W
 1M  1M
 2M  2M
 3M  3M
 6M  6M
 9M  9M
 1Y   Y
** @IN   USED TO INITIALISE SCALE RATE TO 99999.99999999
9999999999999
** ERROR DESCRIPTION  - @TXT
HIGH/LOW RATE UNABLE TO SCALE
** @OVR  CL COMMAND FOR CALL TO QCMDEXC                                   E20774
OVRDSPF FILE(TM3160DD) WAITRCD(    )                                      S01117
** CPY@ - COPYRIGHT STATEMENT                                             S01117
(c) Finastra International Limited 2001
