     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas TM MM negotiable assets - daily deals')
      *****************************************************************
      *                                                               *
      *                                                               *
      *  Midas - Treasury Management Module                           *
      *                                                               *
      *          TM3210 - NEGOTIABLE ASSETS  -  DAILY DEALS           *
      *                   (FORMERLY DL3210)                           *
      *                                                               *
     F*     Function: This enquiry shows holdings in negotiable assets*
     F*     (I/C)     by maturity date for all days forward including *
     F*               today. N/As contracted to be bought are included*
     F*               but N/As contracted to be sold are excluded to  *
     F*               reduce the risk of duplicate sales.             *
     F*                                                               *
     F*     Called by: TMC0311 - TM Enquiry control                   *
     F*           via: DL3100  - Treasury management controller       *
     F*                                                               *
     F*     Calls    : ZA0250  - Clear program message queue.         *
     F*              : ZA0240  - Display program message queue.       *
     F*              : ZA0270  - Convert date to Midas day number.    *
     F*                                                               *
      *  (c) Misys International Banking Systems Ltd. 2001            *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Last Amend No. CSD031             Date 10Apr06               *
      *  Prev Amend No. CDL049             Date 11May06               *
      *                 CSD027             Date 09Dec05               *
      *                 CDL038             Date 10May05               *
      *                 CSE071             Date 19Jul05               *
      *                 CSW037A            Date 02May05               *
      *                 CSD025             Date 11Jan05               *
      *                 CSW037             Date 15Dec04               *
      *                 CSW036             Date 15Dec04               *
      *                 CLE025             Date 20Oct03               *
      *                 TDA035             Date 02Apr04               *
      *                 CGL029             Date 01Sep03               *
      *                 222727             Date 05Nov03               *
      *                 CDL010             Date 02Aug02               *
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *                        S01378    DATE 05MAY92
      *                        S01319    DATE 14AUG91
      *                        S01280    DATE   23APR91               *
      *                        S01117    DATE   26NOV90               *
      *                        S01194    DATE   26NOV90               *
      *                        S01195    DATE   26NOV90               *
      *                        E20774    DATE   15MAR90               *
      *                        S01199    DATE   28FEB90               *   S01199
      *                        E19854    DATE   14NOV89               *
      *                        E17887    DATE   19SEP89               *
      *                        E17654    DATE   05/04/89              *
      *                        E90092    DATE   02/02/89              *
      *                        S01166    DATE   27/06/88              *
      *                                                               *
      *                                                               *
      *****************************************************************
      *  CSD031 - Enhanced Centralised Static Data (Recompile)        *
      *  CDL049 - Addition of a Reference Rate field (recompile)      *
      *  CSD027 - Conversion Of Customer Number to Alpha              *
      *  CDL038 - Extended Deal Sub Type (Recompile)                  *
      *  CSE071 - Multiple Holidays Re Securities (recompile)         *
      *  CSW037A- Additional Field extended to 40 chars (recompile)   *
      *  CSD025 - Customer De-Activation                              *
      *  CSW037 - Additional Field Data on MT300/MT320                *
      *  CSW036 - Dual SWIFT BIC held on Client Details               *
      *  CLE025 - Credit Lines (Recompile)                            *
      *  TDA035 - RTS Signon changes for MidasPlus. (Recompile)       *
      *  CGL029 - Increase Account Code to 10 digits                  *
      *  222727 - Release 5.0 errors  (Recompile)                     *
      *  CDL010 - Prevent last user that actioned the trade from      *
      *           authorising it.  Recompile due to changes in        *
      *           MMDENBPP, MMDENSP.                                  *
      *     S01378 - Facilitates the partial sale of a parcel         *
      *              of negotiable instruments which have been        *
      *              previously input to the system as a single       *
      *              transaction (was MOF53). Must ensure amounts     *
      *              of parcelled NABS remove sold amounts. AND       *
      *              show NABS with sales in reverse. AND remove old  *
      *              code. AND set up date to default to run date.    *
     F*     S01319  -  Remove redundant processing
     F*     S01280 - Include FRA,IRS,FUTURES and CUSTOMER LENDING     *
     F*                                                               *
     F*     S01117 - NEW COPYRIGHT STATEMENT                          *   S01117
     F*              DEALING PROGRAMS USED ONLY IN TREASURY MGMT.     *   S01117
     F*              MODULE NOW PREFIXED WITH 'TM'                    *   S01117
     F*                                                               *
     F*     S01194 - NEW STANDING DATA PROCESSING                     *   S01194
     F*                                                               *
     F*     S01195 - NEW HOLIDAY PROCESSING                           *   S01195
     F*                                                               *
     F*     E20774 - REPLACE QCAEXEC WITH QCMDEXC                     *   E20774
     F*                                                               *
     F*     S01199 - HELP SYSTEM.                                 *       S01199
     F*                                                               *
     F*     E19854 - TO DISPLAY ALL DEALS BY MATURITY DATE FROM       *
     F*              START DATE REQUESTED                             *
     F*                                                               *
     F*     E17887 - BOOK TOTAL FACE VALUE WAS INCORRECT BECAUSE      *
     F*              THE INPUT AMOUNT FOR SUBROUTINE MM1015, @@IAMT,  *
     F*              WAS MOVED INTO @BKT INSTEAD OF THE OUTPUT AMOUNT,*
     F*              @@AMOT.                                          *
     F*                                                               *
     F*     E17654 - GET SHORTNAMES FROM CLINT                        *
     F*                                                               *
     F*                                                               *
     F*     E90092 - BOOK TOTAL NOT APPEARING ON SCREEN; ENQUIRY      *
     F*              SHOULD BE SAME AS DRS EQUIVALENT.                *
     F*                                                               *
     F*                                                               *
     F*     LAST AMEND NO. S01166    DATE   27/06/88                  *
     F*     Changed from MM0084                                       *
     F*                                                               *
     F*  C R E A T I O N     P A R A M E T E R S                      *
     F*                                                               *
      /EJECT
      *****************************************************************
      *
      * ID F  C  H  L    FUNCTION OF INDICATORS
      *
      *       01         RECORD IDENTIFIER  -  KEYED ON FIRST CCY
      *       37         PREVENT TOTALS DISPLAYED IF NO RECORDS           S01280
      *       60         SUCCESSFUL LOKUP OF @MT
      *       61         RECORDS HAVE BEEN PROCESSED FOR THIS ENQUIRE
      *       70         NO MORE RECORDS ON ROLL-UP OR ROLL-DOWN.
      *       72         RECORDS FOUND FOR CURRENCY                       S01280
      *       73         WORK                                             S01280
      *       74         LAST RECORD FOR CURRENCY READ                    S01280
      *       75         READ END OF FILE
      *       76         CHAIN FAIL
      *       77         NEGATIVE RATE
      *       78         BEGINNING OF FILE ON READP OF MMDENALL           S01280
      *
      *       U6         PROGRAM ERROR
      *       U7         DATA BASE OR EXCEPTION ERROR
      *       U8         DATA BASE OR EXCEPTION ERROR
      *
      *****************************************************************
      /EJECT
     F***FDICDRLLIF**E***        K        DISK         KINFSR INFSR  UC   S01194
     F**********  TABTB11F                          KIGNORE               S01194
     F**********  TABTB20F                          KIGNORE               S01194
     FFDMNTHLLIF  E                    DISK         KINFSR INFSR      UC
     F*FDINSTLLIF**E*******************DISK*********KINFSR*INFSR******UC**S01319
     F***FDCCYTLLIF**E***        K        DISK         KINFSR INFSR  UC   S01194
     F**38CPLLUF  E                    DISK         KINFSR INFSR      UC  SO1166
     F**FWDTLLIF  E           K        DISK         KINFSR INFSR      UC  SO1166
     FMMFWDTLLIF  E           K        DISK         KINFSR INFSR      UC  E90092
     FMMDENALLIF  E           K        DISK         KINFSR INFSR      UC
     F            MMDENSP0                          KIGNORE
     F***DL3210DDCF**E***                 WORKSTN          UC      SO1166 S01117
     F**********                              RRN   KSFILE DL3210S1SO1166 S01117
     F**********                                    KNUM        1  SO1166 S01117
     FTM3210DDCF  E                    WORKSTN                        UC  S01117
     F                                        RRN   KSFILE TM3210S1       S01117
     F                                              KNUM        1         S01117
     F*FDUSSILLIF**E**********K********DISK*********KINFSR*INFSRUC**S01166S01319
     FMUSER   IF  E           K        DISK         KINFSR INFSR      UC  S01319
     F***FDTABJLLIF**E***        K        DISK  KINFSR INFSR  UC   SO1166 S01194
     F***CLINT***IF**E***        K        DISK  KINFSR INFSR  UC   E17654 S01194
      /EJECT
      *
      **  Array to hold output rate.
     E                    @W         13  1
      *
      **  Array of MMDENALL information.
     E*******             @AM        10 52                                SO1166
     E                    @AM        12 52                                SO1166
      *
      **  Array of MMDENALL information.
     E*******             @DN        10  6                                SO1166
     E                    @DN        12  6                                SO1166
      *
     E**  ARRAY TO HOLD INPUT RATE                                        SO1166
     E                    @A         13  1  A                             SO1166
     E*                                                                   SO1166
      **  Array to hold output rate.
     E                    @B          8  1
      *
      **  Array for amount input.   (S.R. MM1015)
     E                    @D         15  1
      *
      **  Array for display amount. (S.R. MM1015)
     E                    @J         12  1
      *
      ** Month Shortnames   (S.R. ZA0720)
     E                    @MT        12  3
      *                                                                   SO1166
      ****Array*to*set*up*parameter*for*call*to*QCAEXEC             SO1166E20774
      **  Array to set up parameter for call to QCMDEXC                   E20774
     E                    @OVR    1   1 36                                SO1166
     E*                                                                   SO1166
     E****USED*BY*SR**ZA0830***CURRENCY*RECORDS***                 SO1166 S01195
     E**********          @CY        50  3                         SO1166 S01195
      *                                                                   SO1166
     E                    CPY@    1   1 80                                S01117
     E* Copyright array                                                   S01117
     E/COPY ZSRSRC,ZHOLE                                                  S01195
      * New holiday array                                                 S01195
      /EJECT
      *
      ** processing                                               **
      ** Data structure for data area AMENQ1AA.
     I*AMENQ      DS                            728                       SO1166
     I*******                                30  36 @DATE                 SO1166
     I*******                                40  42 @FCCY                 SO1166
     I*******                                53  82 @DN5                  SO1166
     I*******                                99 103 @STEND                SO1166
     I*******                               105 134 @DN10                 SO1166
     I*******                               157 676 @AM                   SO1166
     I*******                               698 709 @BKT                  SO1166
     I*******                               711 720 @NET                  SO1166
      *                                                                   SO1166
     I@AMENQ      DS                            802                       SO1166
     I                                       30  36 @DATE                 SO1166
     I                                       40  42 @FCCY                 SO1166
     I                                       53  82 @DN5                  SO1166
     I                                       99 103 @STEND                SO1166
     I                                      105 134 @DN10                 SO1166
     I                                      157 780 @AM                   SO1166
     I                                      781 792 @BKT                  SO1166
     I                                      793 802 @NET                  SO1166
      *                                                                   SO1166
      ****Data*structure which holds MMDENSLL information.                S01378
     I*@DETLS******DS                             52                      S01378
     I***********                             1   7 @MVDAT                S01378
     I**********                              9  10 HLTYPE                S01280
     I***********                             9  10 HLMTYP          S01280S01378
     I***********                            11  11 @SLDB                 S01378
     I***********                            12  21 HLCSNM                S01378
     I***********                            23  31 @FVAL                 S01378
     I***********                            33  42 @NVAL                 S01378
     I***********                            44  52 @INTRT                S01378
      *
      **  Data structure to concatenate dates.
     I            DS
      **  Value date.
     I                                        1   80@VDATE
     I                                        1   40HLVDYY
     I                                        5   60HLVDMM
     I                                        7   80HLVDDD
      **  Maturity date.
     I                                        9  160@MDATE
     I                                        9  120HLMDYY
     I                                       13  140HLMDMM
     I                                       15  160HLMDDD
      **  Requested date. (Converted from FAEPT1)
     I                                       17  240@RDATE
     I                                       17  200@HLCY
     I                                       21  220@HLMM
     I                                       23  240@HLDD
      *
      **  Data structure to subdivide input parameter @RRFSH.
     I@TBKY       DS
     I                                        1   80@TBDAT
     I                                        9  140@DLNO
      *
      **  Data structure to subdivide input parameter @RRFSH.
     I@RRFSH      DS                             24
     I                                        1   40@HLCY1
     I                                        5   60@HLMM1
     I                                        7   80@HLDD1
     I                                        9  140@HLDNO
     I                                    P  15  220@HLAMN
      *
      **  Data structure to subdivide field FAEPT1 on CA38CPLL.
     IFAEPT1      DS
     I                                        2   4 @HLCCY
     I                                        6  12 @FDATE
     I                                        6   7 @FDD
     I                                        8  10 @FMTH
     I                                       11  12 @FYR
      *
      **  Data structure to convert @@IAMT decimal field to alpha field
     I@@AMDS      DS                             15
     I                                        1  150@@IAMT
      *
      ** Data structure to convert decimal rate to character.
     I            DS
     I                                        1  138@@RIN
     I                                        1  13 @A
     I*
      **  Month shortname data structure.                                 SO1166
     I@MONTH    E DSFDMNTHPP                                              SO1166
     I                                       24  59 @MT                   SO1166
      *
      **  Date input in YYYYMMDD format. (Used by SR. ZA0720).
     I@DTIN       DS
     I                                        1   80@@DTIN
     I                                        1   40@@YYYY
     I                                        5   60@@MTH
     I                                        7   80@@DAY
      *
     I            DS                                                      SO1166
     I*                                                                   SO1166
     I****USED*BY*SR**ZA0830***ARRAY*DATA*STRUCTURE***             SO1166 S01195
     I**********                              1 150 @CY            SO1166 S01195
     I**********                              1  75 @@CY1          SO1166 S01195
     I**********                             76 150 @@CY2          SO1166 S01195
      *
      **  Data structure for SR. MM1009 - date field YYYYMMDD
     I@DATA       DS
     I                                        1   80@@DATA
     I                                        1   40@@YY1
     I                                        5   60@@MM1
     I                                        7   80@@DD1
      *
      **  Data structure for SR. MM1009 - date field YYYYMMDD
     I@DATB       DS
     I                                        1   80@@DATB
     I                                        1   40@@YY2
     I                                        5   60@@MM2
     I                                        7   80@@DD2
      *
      **  Data structure for SR. ZA0710 - field is @@Z71Y
     I@Z71Y       DS
     I                                        1   40@@Z71Y
     I                                        1   10@@SSY1
     I                                        2   20@@SSY2
     I                                        3   30@@SSY3
     I                                        4   40@@SSY4
      *
      **  Data structure for SR. ZA0710 - field is @@VDT
     I@VDT        DS
     I                                        1   80@@VDT
     I                                        1   40@@YR
     I                                        5   60@@Z71M
     I                                        7   80@@Z71D
      *                                                                   S01280
      * Data structure to split Midas run date field for conversion       S01280
     I            DS                                                      S01280
     I                                        1   7 @@MRDT                S01280
     I                                        1   2 @WDAY                 S01280
     I                                        3   5 @WMTH                 S01280
     I                                        6   7 @WYR                  S01280
      *                                                                   S01280
      * Data structure containing converted form of Midas run date        S01280
      * (used to compare with dates from forward book file)               S01280
     I            DS                                                      S01280
     I                                        1   80@WRUND                S01280
     I                                        1   40@WYRN                 S01280
     I                                        5   60@WMTHN                S01280
     I                                        7   80@WDAYN                S01280
      *
      **  Program status data structure.
     IPSDS       SDS
     I                                      201 208 @FILE
     I                                      244 253 @JOB
     I                                      254 263 @USER
      *
      *                                                                   SO1166
     I@PRMPT      DS                            256                       SO1166
     I                                        1   3 DDCCY                 SO1166
     I                                        4  10 DDDMY                 SO1166
     I                                        4   5 @DD                   SO1166
     I                                        6   8 @MMM                  SO1166
     I                                        9  100@YY                   SO1166
     I                                        9  10 @YYC                  SO1166
      *                                                                   SO1166
      ** Data structure to set up file key from current prompt            SO1166
     I            DS                                                      SO1166
     I                                        1   60@SRDAT                SO1166
     I                                        1   20@SRDD                 SO1166
     I                                        3   40@SRMM                 SO1166
     I                                        5   60@SRYY                 SO1166
      *                                                                   SO1166
      ** Data structure for command in array @OVR                         SO1166
     I@OVRID      DS                             36                       SO1166
     I                                       32  350@WAIT                 SO1166
      *                                                                   SO1166
      **  Local data area for database error.
     ILDA        UDS                            256
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 183 DBASE
     I*
     ISDCURR    E DSSDCURRPD                                              S01194
     I* External DS for Currency Details                                  S01194
     ISDBANK    E DSSDBANKPD                                              S01194
     I* External DS for Bank Details                                      S01194
     ISDCUST    E DSSDCUSTPD                                              S01194
     I* External DS for Customer Details                                  S01194
     ISDDEAL    E DSSDDEALPD                                              S01319
     I** EXTERNAL DS FOR DEALING DETAILS                                  S01319
     IDSSDY     E DSDSSDY                                                 S01194
     I* DS used by Access Objects (long records)                          S01194
     IDSFDY     E DSDSFDY                                                 S01194
     I* DS used by Access Objects (short records)                         S01194
      /COPY ZSRSRC,ZHOLI                                                  S01195
     I* Copy standard holiday data structure                              S01195
      /EJECT
      *****************************************************************
      *                                                               *
      * CONTROL PROCESSING - THIS ROUTINE CONTROLS THE WHOLE PROGRAM  *
      *                                                               *
      * CALLED BY :                                                   *
      *                                                               *
      * CALLS :      #A                                               *
      *              #B                                               *
      *              #C                                               *
      *                                                               *
      * USES :                                                        *
      *                                                               *
      *****************************************************************
     C                     MOVEACPY@      BIS@   80                       S01117
      *
      **  Initial processing.
     C                     EXSR #A
      *
      **  Main processing.
     C           *INLR     DOWEQ'0'                                       SO1166
     C           *INU7     ANDEQ'0'                                       SO1166
      **  Do while not cmd/3                                              SO1166
     C           *IN01     DOWEQ'0'                                       SO1166
     C                     EXSR #B
     C                     END                                            SO1166
     C                     END                                            SO1166
      *
      **  Final processing.
     C                     EXSR #C
      *
     C           ENDPGM    TAG                             ** ENDPGM **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      * SUBROUTINES USED                                              *
      * ----------------                                              *
      *                                                               *
      *  1 #B     -   MAIN PROCESSING                                 *
      *  2 ZA0720 -   CONVERT DATE YYYYMMDD TO DDMMMYY/MMMDDYY        *
      *  3 MM1015 -   CONVERT AMOUNT TO DISPLAY -38 (12A)             *
      *  5 #ZA    -   CONVERT SHORT RATE TO DISPLAY (MODIFIED ZA0880) *
      *  6 #BA    -   CURRENT PROMPT PROCESSING                       *
      *  7 #BB    -   REFRESH PROCESSING                              *
      *  8 #BC    -   FIRST PAGE PROCESSING                           *
      *  9 #BD    -   LAST PAGE PROCESSING                            *
      * 10 #BE    -   ROLL UP PROCESSING                              *
      * 11 #BF    -   ROLL DOWN PROCESSING                            *
      * 12 #BG    -   READ FILE BACKWARDS                             *
      * 13 #BH    -   READ FILE FORWARDS                              *
      * 14 #A     -   INITIAL PROCESSING                              *
      * 15 #C     -   FINAL PROCESSING                                *
      **16*ZA0150*-***READ*FDICDRLL************************************   S01194
      * 17 ZA0280 -   READ FDMNTHLL                                   *
      * 18 *PSSR  -   PROGRAM EXCEPTION/ERROR SUBROUTINE              *
      * 19 INFSR  -   FILE EXCEPTION/ERROR ROUTINE                    *
      *    ZCHKH  -   DETERMINE IF DAY NO. IS A HOLIDAY FOR CCY       *   S01195
      *    ZACCH  -   ACCESS HOLIDAY FILE VIA ACCESS OBJECT           *   S01195
      *               (/COPY FROM ZSRSRC)                             *   S01195
      *                                                               *
      * EXTERNAL ROUTINE                                              *
      * 20 CM0020 -   CONTROL MODULE PC FORMAT/TRANSMISSION PROGRAM   *
      *                                                               *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #B - THIS ROUTINE CONTROLS THE MAIN PROCESSING OF THE        *
      *       PROGRAM.                                                *
      *                                                               *
      *  CALLED BY : CONTROL PROCESSING                               *
      *                                                               *
      *  CALLS :     MM1015                                           *
      *              #BA                                              *
      *              #BC                                              *
      *              #BD                                              *
      *              #BE                                              *
      *              #BF                                              *
      *              #BB                                              *
      *              #BG                                              *
      *              #BH                                              *
      *                                                               *
      *  USES :    @ENQ   - ENQUIRY UPDATED INPUT PARAMETER           *
      *            @FYR   - YEAR FROM FAEPT1 (2N)                     *
      *            @RDATE - REQUESTED DATE FROM FAEPT1 YYYYMMDD       *
      *            @HLCY  - YEAR FROM FAEPT1 (4N)                     *
      *            @M     - MONTH INDEX                               *
      *            @FMTH  - MONTH FROM FAEPT1 (3A)                    *
      *            @MT    - ARRAY OF MONTH SHORTNAMES                 *
      *            @HLMM  - MONTH FROM FAEPT1 (2N)                    *
      *            @FDD   - DAY FROM FAEPT1 (2A)                      *
      *            @HLDD  - DAY FROM FAEPT1 (2N)                      *
      *            @HLCCY - CURRENCY FROM FAEPT1                      *
      *            @FCCY  - CURRENCY TO BE DISPLAYED                  *
      *            @@IAMT - INPUT AMOUNT TO S.R. MM1015               *
      *            @@CCY  - INPUT CURRENCY TO S.R. MM1015             *
      *            @@AMOT - OUTPUT AMOUNT FROM S.R. MM1015            *
      *            @NET   - NET MOVEMENT TO BE DISPLAYED              *
      *            @HLKY4 - PARTIAL KEY FOR FILE MMDENALL             *
      *            @HLCY1 - YEAR FROM ROLL/REFRESH KEY FIELD          *
      *            @HLMM1 - MONTH FROM ROLL/REFRESH KEY FIELD         *
      *            @HLDD1 - DAY FROM ROLL/REFRESH KEY FIELD           *
      *            @HLDNO - DEALER NUMBER FROM ROLL/REFRESH KEY FIELD *
      *            @PREVE - PREVIOUS ENQUIRY TYPE                     *
      *                                                               *
      *****************************************************************
      *
     C           #B        BEGSR
      *
      **  If last record indicator is set, or database error occurred,
      **  no further processing in this routine.
     C           *INLR     CABEQ'1'       #B9
     C           *INU7     CABEQ'1'       #B9
      *
     C*   CLEAR THE MESSAGE QUEUE OF ANY OLD MESSAGES AND RESET           S01166
     C*   ANY ERROR INDICATORS                                            S01166
     C                     EXSR #ZC                        *1             S01166
     C*                                                                   S01166
      **  If the enquiry updated parameter is ' ', and year (from         SO1166
      **  FAEPT1) is blank, use the last 2 chars of the alpha run         SO1166
      **  date from TABTB10.                                              SO1166
     C*******    @ENQ      IFEQ ' '                        B1             SO1166
     C*******    @FYR      ANDEQ' '                        X1             SO1166
     C*******              MOVE RUNA      @FYR             *1             SO1166
     C*******              END                             E1             SO1166
      *
      ***Move*prompt*fields****                                    SO1166 S01194
     C**********           MOVE DDDMY     @FDATE                   SO1166 S01194
     C**********           MOVE DDCCY     @HLCCY                   SO1166 S01194
      *                                                                   SO1166
     C           @ENQ      IFEQ ' '                        B1
      *
      **  This is the first processing for this enquire so setoff *in61
      **  (unless a subfile already on screen - to allow rollup/down)     S01280
     C           DDCURR    IFEQ *BLANKS                                   S01280
     C                     MOVE '0'       *IN61
     C                     END
      *
      ** Validate currency                                                SO1166
      ** (via Access Object)                                              S01194
     C**********           MOVEL'20'      @KEY2  12                S01166 S01194
     C**********           MOVE '1'       @ENDKY  4                S01166 S01194
     C**********           MOVELDDCCY     @ENDKY                   S01166 S01194
     C**********           MOVE @ENDKY    @KEY2                    S01166 S01194
     C********** @KEY2     CHAINFDCCYTLL             65            S01166 S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM *BLANKS   @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           DDCCY                           S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
     C*                                                                   S01166
      ** If currency found set up field for dec places                    SO1166
     C********** *IN65     IFNE '1'                                SO1166 S01194
     C           @RTCD     IFEQ *BLANKS                            SO1166 S01194
     C**********           Z-ADDCDP       @CDP1   10               SO1166 S01194
     C                     Z-ADDA6NBDP    @CDP1   10               SO1166 S01194
     C                     ELSE                                           SO1166
     C**********           SETON                     69            SO1166 S01194
     C                     SETON                     6965                 S01194
     C                     MOVEL'RTM0002' @MSGID                          SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
      ** Validate Date                                                    SO1166
      ** Lookup Month                                                     SO1166
     C                     Z-ADD1         @M      20                      SO1166
     C           @MMM      LOKUP@MT,@M                   89               SO1166
      *                                                                   SO1166
      ** Check day and year numeric                                       SO1166
     C           *IN89     IFEQ '1'                                       SO1166
     C                     TESTN          @DD        89                   SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
     C           *IN89     IFEQ '1'                                       SO1166
     C                     TESTN          @YYC       89                   SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
      ** If still ok convert to MIDAS date                                SO1166
     C           *IN89     IFEQ '1'                                       SO1166
     C                     MOVE @DD       @SRDD                           SO1166
     C                     Z-ADD@M        @SRMM                           SO1166
     C                     MOVE @YYC      @SRYY                           SO1166
     C                     MOVE @SRDAT    DDMMYY  60                      SO1166
     C                     MOVE 'D'       @DATF   1                       SO1166
      *                                                                   SO1166
     C                     CALL 'ZA0270'                                  SO1166
     C                     PARM           DDMMYY                          SO1166
     C                     PARM           @DATF                           SO1166
     C           @RTCDE    PARM           @RTCDE  1                       SO1166
     C           @@MNO     PARM           @@MNO   50                      SO1166
      *                                                                   SO1166
     C           @RTCDE    IFEQ '1'                                       SO1166
     C                     MOVEL'RTM0003' @MSGID 10                       SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     MOVE '1'       *IN69                           SO1166
     C                     MOVE '1'       *IN66                           SO1166
      *                                                                   SO1166
     C                     ELSE                                           SO1166
      *                                                                   SO1166
      ** If currency is found see if date is holiday                      SO1166
      ** (CCY location ZLOC always set to system location code)           S01195
     C           *IN65     IFEQ '0'                                       SO1166
     C**********           MOVE DDCCY     @@CCY                    SO1166 S01195
     C                     MOVE DDCCY     ZCCY                            S01195
     C                     Z-ADD@@MNO     ZDAYNO                          S01195
     C**********           EXSR ZA0830                             SO1166 S01195
     C                     EXSR ZCHKH                                     S01195
      *                                                                   SO1166
     C********** @@HIND    IFEQ 'H'                                SO1166 S01195
     C           ZIND      IFEQ 'H'                                       S01195
     C                     MOVEL'RTM0007' @MSGID                          SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     MOVE '1'       *IN69                           SO1166
     C                     MOVE '1'       *IN66                           SO1166
     C                     END                                            SO1166
     C                     END                                            SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
     C                     ELSE                                           SO1166
      *                                                                   SO1166
     C                     MOVEL'RTM0003' @MSGID                          SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     MOVE '1'       *IN69                           SO1166
     C                     MOVE '1'       *IN66                           SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
      ** Date entered must be greater than today's date                   SO1166
     C********** @@MNO     IFLT RUND                               SO1166 S01194
     C           @@MNO     IFLT BJRDNB                                    S01194
     C                     MOVEL'RTM0005' @MSGID                          SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     MOVE '1'       *IN69                           SO1166
     C                     MOVE '1'       *IN66                           SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
      ** If validation errors found in prompts bypass processing          SO1166
     C           *IN69     IFEQ '1'                                       SO1166
     C                     GOTO #B8                                       SO1166
     C                     END                                            SO1166
      *                                                                   S01194
      ** Move prompt fields                                               S01194
     C                     MOVE DDDMY     @FDATE                          S01194
     C                     MOVE DDCCY     @HLCCY                          S01194
      *                                                                   S01194
      **  Set up century.
     C                     Z-ADD*ZEROS    @RDATE
     C                     MOVE @FYR      @HLCY
     C           @HLCY     IFGE 72                         B1
     C                     ADD  1900      @HLCY            *1
     C                     ELSE                            X1
     C                     ADD  2000      @HLCY            *1
     C                     END                             E1
      *
      **  Convert month from 3 alpha to 2 numeric.
     C                     Z-ADD1         @M      20
     C           @FMTH     LOKUP@MT,@M                   60
     C                     Z-ADD@M        @HLMM
      *
     C                     MOVE @FDD      @HLDD
      *
     C                     Z-ADD@RDATE    @RQDAT  80
      *
      **  Set currency to be displayed.
     C                     MOVE @HLCCY    @FCCY
      *
      **  Set net movement to be displayed.                               SO1166
     C*******              MOVE *BLANKS   @NET                            SO1166
     C*******              MOVE *BLANKS   @BKT                            SO1166
     C*******    @HLKY2    CHAINMMFWDTLL             76                   SO1166
     C*******    *IN76     IFEQ '0'                        B1             SO1166
     C*******              MOVE HVNSNV    @@IAMT                          SO1166
     C*******              MOVE @HLCCY    @@CCY                           SO1166
     C*******              EXSR MM1015                                    SO1166
     C*******              MOVE @@AMOT    @NET                            SO1166
     C*******              MOVE HVNSFV    @@IAMT                          SO1166
     C*******              EXSR MM1015                                    SO1166
     C*******              MOVE @@AMOT    @BKT                            SO1166
     C*******              ELSE                                           SO1166
     C*******              MOVE 0         @NET                            SO1166
     C*******              MOVE 0         @BKT                            SO1166
     C*******              END                                            SO1166
      *
      ** Set book total amounts.                                          E90092
     C                     MOVE *BLANKS   DDNET                           E90092
     C                     MOVE *BLANKS   DDBKT                           E90092
     C           @HLKY2    CHAINMMFWDTLL             76                   E90092
     C           *IN76     IFEQ '0'                                       E90092
     C                     MOVE HVNSNV    @@IAMT                          E90092
     C                     MOVE @HLCCY    @@CCY                           E90092
     C                     EXSR MM1015                                    E90092
     C                     MOVE @@AMOT    DDNET                           E90092
     C                     MOVE HVNSFV    @@IAMT                          E90092
     C                     EXSR MM1015                                    E90092
     C*****************    MOVE @@IAMT    DDBKT                    E90092 E17887
     C                     MOVE @@AMOT    DDBKT                           E17887
     C                     ELSE                                           E90092
     C                     MOVE 0         DDNET                           E90092
     C                     MOVE 0         DDBKT                           E90092
     C                     END                                            E90092
      **  Ensure that date is in correct format.                          E90092
     C********** DATF      IFEQ 'M'                        B1             S01194
     C           BJDFIN    IFEQ 'M'                        B1             S01194
     C                     MOVEL@FMTH     @DATE            *1
     C                     MOVEL@FDD      @DT47   4        *1
     C                     MOVE @FYR      @DT47            *1
     C                     MOVE @DT47     @DATE            *1
     C                     ELSE                            X1
     C                     MOVE @FDATE    @DATE            *1
     C                     END                             E1
      *
      **  Initialise roll past EOF/BOF indicator.
     C                     MOVE '0'       *IN70
      *
     C**  See if any records exist for enquiry.                           SO1166
     C***********@HLKY4****SETLLMMDENALL                 72     SO1166    E19854
     C           @HLKY4    SETLLMMDENALL                                  E19854
     C                     READ MMDENALL                 72               E19854
     C  N72      HLCCY     IFEQ @HLCCY                                    E19854
     C                     MOVE '1'       *IN72                           E19854
     C                     MOVE '1'       *IN73                           S01280
     C                     END                                            E19854
      *                                                                   S01280
      * If at EOF check last record in file, as date entered may          S01280
      * be past last date on file for currency                            S01280
     C           *IN72     IFEQ '1'                                       S01280
     C           *IN73     ANDEQ'0'                                       S01280
     C           *HIVAL    SETLLMMDENALL                                  S01280
     C                     READPMMDENALL                 74               S01280
     C           *IN74     IFEQ '1'                                       S01280
     C           @HLCCY    ORNE HLCCY                                     S01280
     C                     MOVE '0'       *IN72                           S01280
     C                     ELSE                                           S01280
     C                     MOVE '1'       *IN74                           S01280
     C                     END                                            S01280
     C                     END                                            S01280
      *                                                                   S01280
      * If not at EOF, but currencies did not match, get last             S01280
      * record for currency if any exist                                  S01280
     C           *IN72     IFEQ '0'                                       S01280
     C           *IN73     ANDEQ'0'                                       S01280
     C           @HLKY1    SETGTMMDENALL                                  S01280
     C                     READPMMDENALL                 74               S01280
     C           *IN74     IFEQ '1'                                       S01280
     C           @HLCCY    ORNE HLCCY                                     S01280
     C                     MOVE '0'       *IN72                           S01280
     C                     ELSE                                           S01280
     C                     MOVE '1'       *IN74                           S01280
     C                     MOVE '1'       *IN72                           S01280
     C                     END                                            S01280
     C                     END                                            S01280
      *                                                                   S01280
      * If only the last record for currency is to be displayed,          S01280
      * send 'Date entered past last date...' message                     S01280
      * Also need to reset the key fields to the value of the             S01280
      * last date on file                                                 S01280
     C           *IN72     IFEQ '1'                                       S01280
     C           *IN74     ANDEQ'1'                                       S01280
     C                     MOVEL'RTM0014' @MSGID                          S01280
     C                     CALL 'ZA0240'                                  S01280
     C                     PARM           @MSGID                          S01280
     C                     MOVELHLCCY     @HLCCY                          S01280
     C                     MOVE HLMDYY    @FYR                            S01280
     C                     MOVE HLMDDD    @FDD                            S01280
     C                     MOVE HLMDYY    @HLCY                           S01280
     C                     MOVE HLMDMM    @HLMM                           S01280
     C                     MOVE @FDD      @HLDD                           S01280
     C                     Z-ADD@RDATE    @RQDAT                          S01280
     C                     Z-ADDHLDN38    @DLNO                           S01280
      *                                                                   S01280
      * Convert 2N month number to 3A shortname                           S01280
     C                     Z-ADDHLMDMM    @C      10                      S01280
     C                     MOVEL@MT,@C    @FMTH                           S01280
     C                     END                                            S01280
     C*                                                                   SO1166
     C**  If no records then write message to screen                      SO1166
     c**  - and bypass further processing                                 S01280
     C           *IN72     IFEQ '0'                                       SO1166
     C                     MOVEL'RTM0008' @MSGID                          SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     MOVE '1'       *IN70                           SO1166
      *                                                                   S01280
      * Prevent totals being displayed - this is needed in case           S01280
      * subfile control has to be written with *IN35 on to clear          S01280
      * screen                                                            S01280
     C                     MOVE '1'       *IN37                           SO1166
     C                     MOVE *BLANKS   DDSTEN                          S01280
     C                     MOVELDDCCY     DDCURR                          S01280
     C                     MOVE 'X'       @ENQ                            S01280
      *                                                                   S01280
      * Clear subfile                                                     S01280
     C                     SETOF                     3536                 S01280
     C                     WRITETM3210C1                                  S01280
     C                     SETON                     3536                 S01280
     C                     END                                            SO1166
      *                                                                   S01280
     C                     END                                            S01280
      *
      **  If there were no records for first enquire full key will not
      **  have been loaded so treat as first enquiry
     C           *IN61     IFNE '1'                        B1
     C                     MOVE *BLANK    @ENQ             *1
     C                     END                             E1
      *
      **  Position file pointer according to value of enquiry updated
      **  input parameter.
     C           @ENQ      IFEQ 'R'                        B1
     C                     EXSR #BB                        *1
     C                     END                             E1
      *
     C           @ENQ      CASEQ' '       #BA              B1
     C*******    @ENQ      CASEQ'F'       #BC              *1             SO1166
     C*******    @ENQ      CASEQ'L'       #BD              *1             SO1166
     C           @ENQ      CASEQ'U'       #BE              *1
     C           @ENQ      CASEQ'D'       #BF              *1
     C                     END                             E1
      *
      **  If records to be accessed, set up fields in @AMENQ.
     C           *IN70     IFEQ '0'                        B1
      *
     C*******    @ENQ      IFEQ 'L'                        B*2            SO1166
     C*******    @ENQ      OREQ 'D'                        X*2            SO1166
     C           @ENQ      IFEQ 'D'                        B*2            SO1166
      *
      **  Read backwards.
     C                     EXSR #BG                        **2
      *
     C                     ELSE                            X*2
      *
      **  Read forwards.
     C                     EXSR #BH                        **2
     C                     END                             E*2
      *
      **  Place Deal numbers in screen map.                               SO1166
     C*******              MOVEA@DN,1     @DN5                            SO1166
     C*******              MOVEA@DN,6     @DN10                           SO1166
      *
     C** Move work fields to output                                       S01166
     C                     MOVE @STEND    DDSTEN                          S01166
     C                     MOVE @FCCY     DDCURR                          S01166
     C*                                                                   S01166
     C                     ELSE                                           S01166
     C** Trying to page up/down beyond first/last record                  S01166
     C           @ENQ      IFEQ 'D'                                       S01166
     C           @ENQ      OREQ 'U'                                       S01166
     C                     MOVEL'RTM0001' @MSGID 10                       SO1166
     C                     CALL 'ZA0240'                                  SO1166
     C                     PARM           @MSGID                          SO1166
     C                     END                                            S01166
     C*                                                                   S01166
     C                     END                             E1
      *
     C           #B8       TAG                                            S01166
     C*                                                                   S01166
     C* set subfile clear flag                                            S01166
     C                     MOVE 'N'       @SFLCL  1                       SO1166
     C*
      **  Store enquiry code for reference
     C                     MOVE @ENQ      @PREVE  1
      *
     C* if there is data to refresh/roll etc allow cmd keys               S01166
     C           DDCURR    IFNE *BLANKS                    B1             S01166
     C                     SETON                     27    *1             S01166
     C                     END                             E1             S01166
     C*                                                                   S01280
     C** Update time for display                                          S01280
     C                     TIME           DDTIME                          S01280
     C*                                                                   S01166
     C* write heading text                                                SO1166
     C**********           WRITEDL3210F0               51          SO1166 S01117
     C                     WRITETM3210F0               51                 S01117
     C*                                                                   S01166
     C                     SETON                     3536                 SO1166
     C*                                                                   S01166
     C* write msg subfile                                                 SO1166
     C                     MOVE '1'       *IN46                           SO1166
     C**********           WRITEDL3210C0                           SO1166 S01117
     C                     WRITETM3210C0                                  S01117
     C**********           WRITEDL3210F1                           SO1166 S01117
     C                     WRITETM3210F1                                  S01117
     C*                                                                   SO1166
     C* setof subfile display if no records                               S01166
     C           DDCURR    IFEQ *BLANKS                    B*2
     C           *IN69     OREQ '1'                        B*2
     C                     SETOF                     35    **2            S01166
     C                     END                             E*2
     C*                                                                   SO1166
     C* Only write subfile if records found                               S01166
      * unless already a subfile on screen - in which case *IN35          S01280
      * must be on to display the cleared subfile                         S01280
     C           *IN72     IFEQ '0'                                       S01166
     C           *IN69     ANDEQ'0'                                       S01280
     C           @SFILE    ANDNE'Y'                                       S01280
     C                     SETOF                     35    **2            S01166
     C                     END                                            S01166
     C*                                                                   S01166
     C**********           WRITEDL3210C1                   *1      S01166 S01117
     C                     WRITETM3210C1                   *1             S01117
     C*                                                                   S01166
     C                     SETOF                     0512  *1             S01166
     C                     SETOF                     2526  *1             S01166
     C*                                                                   S01166
     C**********           READ DL3210DD        0589*1read scrn    S01166 S01117
     C                     READ TM3210DD               0589*1read scrn    S01117
      *                                                                   S01280
      * Initialize start/end text                                         S01280
     C                     MOVE *BLANKS   @STEND                          S01280
      *                                                                   SO1166
      ** Set up prompts                                                   SO1166
     C                     MOVE ' '       @ENQ    1                       SO1166
      *                                                                   SO1166
     C           *IN05     IFEQ '1'                                       SO1166
     C                     MOVE 'R'       @ENQ                            SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
     C           *IN25     IFEQ '1'                                       SO1166
     C                     MOVE 'U'       @ENQ                            SO1166
     C                     END                                            SO1166
      *                                                                   SO1166
     C           *IN26     IFEQ '1'                                       SO1166
     C                     MOVE 'D'       @ENQ                            SO1166
     C                     END                                            SO1166
     C*                                                                   S01166
     C* help                                                              S01166
     C**         *IN10     DOWEQ'1'                        B*2     S01166 S01199
     C**                   SETOF                     10    **2     S01166 S01199
     C**                   CALL 'SDMENU'                   **2     S01166 S01199
     C**                   READ DL3210DD               0589**2     S01166 S01199
     C**                   END                             E*2     S01166 S01199
     C*                                                                   S01166
     C* exit                                                              S01166
     C           *IN01     IFEQ '1'                        B*2            S01166
     C                     MOVE 'Q'       @TERM            **2            S01166
     C                     MOVE '1'       *INLR            **2            S01166
     C                     GOTO #B9                        **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C* roll or refresh                                                   S01166
     C           @ENQ      IFEQ 'R'                        B*2            S01166
     C           @ENQ      OREQ 'U'                        B*2            S01166
     C           @ENQ      OREQ 'D'                        B*2            S01166
     C                     MOVE DDCURR    DDCCY            **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C* clear msg subfile                                                 S01166
     C                     CALL 'ZA0250'                                  S01166
     C                     SETOF                     6566
     C**********           SETOF                     69                   S01280
     C**********           SETOF                     7276          SO1166 S01280
     C                     SETOF                       76                 S01280
     C                     SETOF                     7374                 S01280
     C                     SETOF                     37                   S01280
      *                                                                   S01280
     C           @ENQ      IFEQ ' '                                       S01280
     C                     MOVE '0'       *IN72                           S01280
     C                     END                                            S01280
     C*                                                                   SO1166
     C           #B9       ENDSR                           ** #B9 **
      *
      *****************************************************************
      /COPY ZSRSRC,ZCHKH                                                  S01195
      /COPY ZSRSRC,ZACCH                                                  S01195
     C*****************************************************************   S01166
     C*                                                               *   S01166
     C* #ZC      - RESET ERROR INDICATORS AND CLEAR MESSAGE QUEUE     *   S01166
     C*                                                               *   S01166
     C*                                                               *   S01166
     C* CALLS    - ZA0250  -  CLEAR PROGRAM SUBFILE MESSAGE QUEUE     *   S01166
     C*                                                               *   S01166
     C* CALLED BY  #B      -  MAIN PROCESSING                         *   S01166
     C*                                                               *   S01166
     C* FLDS USED  @@ERMS  - ERROR-MESSAGE-TO-DISPLAY INDICATOR       *   S01166
     C*                                                               *   S01166
     C*****************************************************************   S01166
     C*                                                                   S01166
     C           #ZC       BEGSR                                          S01166
     C*                                                                   S01166
     C** RESET ALL FIELD ERROR INDICATORS.                                S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN60                           S01166
     C*                                                                   S01166
     C** RESET THE GENERAL-ERROR-IN-VALIDATION INDICATOR                  S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN69                           S01166
     C*                                                                   S01166
     C** RESET THE ERROR RETURN CODE FROM ZA0270                          S01166
     C*                                                                   S01166
     C                     MOVE ' '       @RTCDE                          S01166
     C*                                                                   S01166
     C** RESET THE ERROR-MESSAGE-TO-DISPLAY INDICATOR                     S01166
     C*                                                                   S01166
     C                     MOVE 'N'       @@ERMS  1                       S01166
     C*                                                                   S01166
     C** CLEAR SCREEN MESSAGE QUEUE.                                      S01166
     C*                                                                   S01166
     C                     CALL 'ZA0250'                                  S01166
     C*                                                                   S01166
     C           #ZC9      ENDSR                                          S01166
     C*****************************************************************   S01166
     C/EJECT                                                              S01166
      *****************************************************************
      *                                                               *
      *  MM1017  -  subroutine to convert a rate to display, no sign  *
      *                                                               *
      *  CALLED BY : CONTROL PROCESSING                               *
      *                                                               *
      *  CALLS :                                                      *
      *                                                               *
      *  INPUT :   @@INPR - Rate to be edited                         *
      *                                                               *
      *  OUTPUT:   @@OUTR - Edited output rate                        *
      *                                                               *
      *  USES  :   @@INPR - Rate to be edited                         *
      *            @@OUTR - Edited output rate                        *
      *            @@DECS - Field to hold decimal digits              *
      *            @@INTS - Field to hold intigers for input rate     *
      *            @@N    - Counter field                             *
      *            @@Q    - Second counter field                      *
      *            @@STRP - Rate start position after zero suppression*
      *            @W     - Work array                                *
      *                                                               *
      *****************************************************************
     C*******    MM1017    BEGSR                                          SO1166
      *******                                                             SO1166
      **  Define fields used                                              SO1166
     C*******              Z-ADD@@INPR    @@INPR 117                      SO1166
     C*******              MOVE *BLANKS   @@OUTR 13                       SO1166
     C*******              MOVE *BLANKS   @@DECS  7                       SO1166
     C*******              MOVE *BLANKS   @@INTS  4                       SO1166
     C*******              Z-ADD0         @@N     20                      SO1166
     C*******              Z-ADD0         @@Q     20                      SO1166
     C*******              Z-ADD0         @@STRP  20                      SO1166
      *******                                                             SO1166
      **  Initialise work array                                           SO1166
     C*******              MOVEA*BLANKS   @W                              SO1166
      *******                                                             SO1166
      **  If the rate is negative reverse the sign                        SO1166
     C*******    @@INPR    IFLT 0                                         SO1166
     C*******              Z-SUB@@INPR    @@INPR                          SO1166
     C*******              END                                            SO1166
      *******                                                             SO1166
      **  Seperate integers and decimal digits into two fields.           SO1166
     C*******              MOVE @@INPR    @@DECS                          SO1166
     C*******              MOVE @@INPR    @@INTS                          SO1166
      *******                                                             SO1166
      **  Move integers, decimal seperator and decimal digits into        SO1166
      **  work array.                                                     SO1166
     C*******              MOVEA@@INTS    @W                              SO1166
     C*******              MOVE IDDCSP    @W,5                            SO1166
     C*******              MOVEA@@DECS    @W,6                            SO1166
      *******                                                             SO1166
      **  Remove leading zeros and replace with blanks.                   SO1166
     C*******              Z-ADD1         @@N                             SO1166
     C*******    @@N       DOWLE3                                         SO1166
     C*******    @W,@@N    ANDEQ'0'                                       SO1166
     C*******              MOVE *BLANK    @W,@@N                          SO1166
     C*******              ADD  1         @@N                             SO1166
     C*******              END                                            SO1166
      *******                                                             SO1166
     C*******              Z-ADD@@N       @@STRP                          SO1166
      *******                                                             SO1166
      **  Truncate trailing zeros and replace with blanks. If rate is     SO1166
      **  an intiger a single zero after the decimal place should be      SO1166
      **  displayed.                                                      SO1166
     C*******              Z-ADD12        @@Q                             SO1166
     C*******    @@N       IFNE @@Q                                       SO1166
     C*******    @@N       DOWGE@@STRP                                    SO1166
     C*******              MOVE @W,@@N    @W,@@Q                          SO1166
     C*******              MOVE *BLANK    @W,@@N                          SO1166
     C*******              SUB  1         @@N                             SO1166
     C*******              SUB  1         @@Q                             SO1166
     C*******              END                                            SO1166
     C*******              END                                            SO1166
      *******                                                             SO1166
      **  Move the final array into the output field.                     SO1166
     C*******              MOVEA@W        @@OUTR                          SO1166
      *******                                                             SO1166
     C*******    M10179    ENDSR                                          SO1166
      *******                                                             SO1166
      ***********************************************************************
      /EJECT
     C*****************************************************************   SO1166
     C*                                                               *   SO1166
     C*  SUBROUTINE ZA0880 - CONVERT SHORT RATE TO DISPLAY            *   SO1166
     C*                                                               *   SO1166
     C*                      THIS SUBROUTINE RECEIVES A 13/8 INPUT    *   SO1166
     C*                      RATE @@RIN & OUTPUTS A 8A RATE WITH      *   SO1166
     C*                      DECIMAL SEPERATOR @B                     *   SO1166
     C*                                                               *   SO1166
     C*  CALLED BY   :                                                *   SO1166
     C*                                                               *   SO1166
     C*  INPUT       : @A     - INPUT RATE ARRAY  (13A)               *   SO1166
     C*  OUTPUT      : @B     - OUTPUT RATE ARRAY (8A)                *   SO1166
     C*                                                               *   SO1166
     C*  WORK FIELDS : @@1    - ARRAY INDEX FOR @@C1 (2,0)            *   SO1166
     C*              : @@B    - ARRAY INDEX FOR @@C2 (1,0)            *   SO1166
     C*                                                               *   SO1166
     C*   INDICATOR  :  82    - LOOKUP ARRAY                          *   SO1166
     C*                                                               *   SO1166
     C*****************************************************************   SO1166
     C*                                                                   SO1166
     C           ZA0880    BEGSR                                          SO1166
     C*                                                                   SO1166
     C**  LOKUP FOR FIRST NON-ZERO ELEMENT.                               SO1166
     C                     Z-ADD1         @@1     20                      SO1166
     C           *ZERO     LOKUP@A,@@1               82                   SO1166
     C*                                                                   SO1166
     C**  IF NON-ZERO ELEMENT FOUND AFTER POSITION 5 RESET INDEX TO 5     SO1166
     C           @@1       IFGT 5                          B1             SO1166
     C                     Z-ADD5         @@1              *1             SO1166
     C                     END                             E1             SO1166
     C*                                                                   SO1166
     C**  RESET INDEX TO OUTPUT RATE ARRAY                                SO1166
     C                     Z-ADD*ZERO     @@B     10                      SO1166
     C*                                                                   SO1166
     C**  LOAD 8 POSITION OUTPUT ARRAY                                    SO1166
     C           @@B       DOUEQ8                          B1             SO1166
     C*                                                                   SO1166
     C**  INCREMENT INDEX AND MOVE INPUT ELEMENT TO OUTPUT RATE ARRAY     SO1166
     C                     ADD  1         @@B              *1             SO1166
     C                     MOVE @A,@@1    @B,@@B           *1             SO1166
     C*                                                                   SO1166
     C**  IF INDEX TO INPUT RATE ARRAY = 5 MOVE DEC. SEP. TO OUTPUT       SO1166
     C**  ARRAY AND SETON INDICATOR TO STOP THIS BEING REPEATED.          SO1166
     C           @@1       IFEQ 5                          B*2            SO1166
     C*                                                                   SO1166
     C                     ADD  1         @@B              **2            SO1166
     C*********************MOVE*IDDCSP****@B,@@B*************2*****SO1166 S01319
     C                     MOVE BNDCSP    @B,@@B           **2            S01319
     C                     END                             E*2            SO1166
     C*                                                                   SO1166
     C                     ADD  1         @@1              *1             SO1166
     C*                                                                   SO1166
     C                     END                             E1             SO1166
     C           ZA0889    ENDSR                           ***ZA0889***   SO1166
      ***********************************************************************
      /EJECT                                                              SO1166
      ***********************************************************************
      *                                                                     *
      * ZA0720 - Converts YYYYMMDD to DDMMMYY or MMMDDYY depending          *
      ***********on*instalation*control*date*format*(TABTB10)*************S01194
      *          on instalation control date format (SDBANKPD)            S01194
      *                                                                     *
      * CALLED BY :                                                         *
      *                                                                     *
      * CALLS :                                                             *
      *                                                                     *
      * INPUT  : @@DTIN DATE INPUT (YYYYMMDD)  - IN DATA STRUCTURE          *
      *                                                                     *
      * OUTPUT : @@DATE DATE OUTPUT 7 DIGIT FORMAT EITHER                   *
      *          DDMMMYY OR MMMDDYY                                         *
      *
      * USES :   @@MTH  MONTH NUMBER                                        *
      *          @@MNM  MONTH SHORTNAME                                     *
      *          @@DAY  DAY NUMBER                                          *
      *          @@YYYY YEAR (4 CHARACTER)                                  *
      *          @MT    RUN TIME ARRAY FOR MONTH SHORTNAMES                 *
      *          @@DAY5 DAY NUMBER WITH THREE LEADING BLANKS                *
      *          @@MTH5 MONTH SHORTNAME WITH TWO LEADING BLANKS             *
      *          @@DATE OUTPUT DATE FIELD                                   *
      *                                                                     *
      *     LAST AMEND NO. ME1257              DATE 02/04/87
      *     When date input is zero set output date to blanks               *
      *                                                                     *
      ***********************************************************************
     C           ZA0720    BEGSR
      *
     C           @@DTIN    IFNE 0                          B1
      *
      **  Convert to MMMDDYY
     C********** DATF      IFEQ 'M'                        B*2            S01194
     C           BJDFIN    IFEQ 'M'                        B*2            S01194
     C                     MOVE @@DAY     @@DAY5  5        **2
     C                     MOVE @@YYYY    @@DATE  7        **2
     C                     MOVEL@@DAY5    @@DATE           **2
     C                     MOVEL@MT,@@MTH @@DATE           **2
     C                     ELSE                            X*2
      *
      **  Convert to DDMMMYY
     C                     MOVE @MT,@@MTH @@MTH5  5        **2
     C                     MOVE @@YYYY    @@DATE  7        **2
     C                     MOVEL@@MTH5    @@DATE           **2
     C                     MOVEL@@DAY     @@DATE           **2
     C                     END                             E*2
      *
      **  Set output date to blanks & exit if input date is zero.
     C                     ELSE                            X1
     C                     MOVE *BLANKS   @@DATE           *1
     C                     END                             E1
      *
     C           ZA0729    ENDSR                              *** ZA0720 TAG ***
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *     MM1015 -  CONVERT AMOUNT TO DISPLAY -38                   *
      *     This routine converts a 15N amount with up to 3 implied   *
      *     decimal places into a 12A field with thousands integer    *
      *     half adjusted & leading zeroes suppressed.                *
      *                                                               *
      *       CALLS: NONE                                             *
      *                                                               *
      *       INPUT: @@IAMT 15,0  INPUT AMOUNT                        *
      *              @@CCY  3A    INPUT CURRENCY                      *
      *                                                               *
      *      OUTPUT: @@AMOT 12A   AMOUNT TO DISPLAY                   *
      *                                                               *
      *        USES: @@CCY2       STORED CURRENCY                     *
      *              @@CDP        CURRENCY DECIMAL PLACES             *
      *              @@I          INDEX TO ARRAY OF AMOUNT            *
      *              @@C          INDEX TO ARRAY OF DISPLAY AMOUNT    *
      *              @D           ARRAY OF AMOUNT                     *
      *              @J           ARRAY OF DISPLAY AMOUNT             *
      *                                                               *
      *                                                               *
      *****************************************************************
      *
     C           MM1015    BEGSR
      *
      **  Initialise array.
     C                     MOVEA*BLANKS   @D
     C                     MOVEA*BLANKS   @J
      *
      **  Compare input currency this time with last time value
     C           @@CCY     IFNE @@CCY2                     B1
      *
      **  Access currencies file
      **  (via access object)                                             S01194
      ****Load*key**                                                      S01194
     C**********           MOVEL'20'      @@KEY  12        *1             S01194
     C**********           MOVE '1'       @@ENDK  4        *1             S01194
     C**********           MOVEL@@CCY     @@ENDK           *1             S01194
     C**********           MOVE @@ENDK    @@KEY            *1             S01194
      **********                                                          S01194
     C********** @@KEY     CHAINFDCCYTLL             80    *1             S01194
      **********                                                          S01194
     C********** *IN80     IFEQ '1'                        B*2            S01194
     C**********           MOVE '931'     DBASE            ***************S01194
     C**********           MOVEL'FDCCYTLL'DBFILE           *             *S01194
     C**********           MOVEL@@KEY     DBKEY            * DBERROR 931 *S01194
     C**********           MOVE '1'       *INU7            *             *S01194
     C**********           MOVE '1'       *INU8            ***************S01194
     C**********           GOTO M10159                     **2            S01194
     C**********           END                             E*2            S01194
      *                                                                   S01194
     C                     CALL 'AOCURRR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @@CCY                           S01194
     C           SDCURR    PARM SDCURR    DSSDY                           S01194
      *                                                                   S01194
     C                     MOVE @@CCY     @@CCY2  3        *1
      *
      ** Store number of decimal places for the currency
     C**********           MOVE CDP       @@CDP   10       *1             S01194
     C                     MOVE A6NBDP    @@CDP   10       *1             S01194
      *
     C                     END                             E1
      *
      ** Ensure input amount is +ve.
     C           @@IAMT    IFLT 0                          B1
     C                     Z-SUB@@IAMT    @@IAMT           *1
     C                     END                             E1
      *
      ** Round up figures to the nearest thousand.
      ** & store initial array index value
     C           @@CDP     IFEQ 0                          B1
     C                     ADD  500       @@IAMT 150       *1
     C                     Z-ADD12        @@I              *1
     C                     END                             E1
      *
     C           @@CDP     IFEQ 1                          B1
     C                     ADD  5000      @@IAMT           *1
     C                     Z-ADD11        @@I              *1
     C                     END                             E1
      *
     C           @@CDP     IFEQ 2                          B1
     C                     ADD  50000     @@IAMT           *1
     C                     Z-ADD10        @@I              *1
     C                     END                             E1
      *
     C           @@CDP     IFEQ 3                          B1
     C                     ADD  500000    @@IAMT           *1
     C                     Z-ADD9         @@I              *1
     C                     END                             E1
      *
      **  Place input amount into a 15 x 1 byte array
     C                     MOVEA@@AMDS    @D
      *
      **  Load output amount into a 12 x 1 byte array
     C                     Z-ADD12        @@C
     C           @@I       DOWGT0                          B1
     C                     MOVE @D,@@I    @J,@@C           *1
     C                     SUB  1         @@C     20       *1
     C                     SUB  1         @@I     20       *1
     C                     END                             E1
      *
      ** Test successive elements of output amount setting zeroes to
      ** blanks until the first element or a 'non zero' is reached.
     C                     Z-ADD1         @@C
      *
     C           @J,@@C    DOUNE'0'                        B1
     C           @J,@@C    ANDNE*BLANK                     *1
     C           @@C       OREQ 12                         *1
     C                     MOVE *BLANK    @J,@@C           *1
     C                     ADD  1         @@C              *1
     C                     END                             E1
      *
      ** Move @J to display field.
     C                     MOVEA@J        @@AMOT 12
      *
     C           M10159    ENDSR                           ** M10159 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BA - THIS ROUTINE CONTROLS THE FILE POSITIONING FOR         *
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETERS VALUES: *
      *                                                               *
      *            ' ' - CURRENT PROMPT                               *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :                                                      *
      *                                                               *
      *  USES :      @HLKY4 - PARTIAL KEY FOR MMDENALL                *
      *              @STEND - START/END NARRATIVE                     *
      *                                                               *
      *****************************************************************
      *
     C           #BA       BEGSR
      *
      **  Position file before the first record for currency/date.
     C           @HLKY4    SETLLMMDENALL
      *
      **  Set start/end narrative.
     C                     MOVE 'START'   @STEND
      *
     C           #BA9      ENDSR                           ** #BA9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BB - THIS ROUTINE CONTROLS THE FILE POSITIONING FOR         *
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETERS VALUES: *
      *                                                               *
      *            'R' - REFRESH                                      *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :                                                      *
      *                                                               *
      *  USES :    @ENQ   - ENQUIRY UPDATED INPUT PARAMETER           *
      *            @HLKY5 - KEY FOR MMDENALL                          *
      *            @HLCCY - CURRENCY FROM FAEPT1                      *
      *            @VDATE - VALUE DATE YYYYMMDD                       *
      *            @RDATE - REQUESTED DATE FROM FAEPT1 YYYYMMDD       *
      *            @MDATE - MATURITY DATE YYYYMMDD                    *
      *            @STEND - START/END NARRATIVE                       *
      *            @PREVE - PREVIOUS ENQUIRY TYPE                     *
      *                                                               *
      *****************************************************************
      *
     C           #BB       BEGSR
      *
     C                     MOVELFARKT1    @TBKY
     C                     Z-ADD@TBDAT    @RDATE
      *
      **  Check if there are any more records for this currency.
      *
     C           @HLKY5    SETGTMMDENALL
     C                     READ MMDENALL                 75
      *
      **
     C           HLCCY     IFNE @HLCCY
     C                     MOVE '1'       *IN75
     C                     END
      *
      **  If there are no further records on MMDENALL for this currency,
      **  & last enquiry was for roll down or last page then repeat
      **  last page processing so that records displayed at bottom of
      **  screen do not shift to top.
     C           *IN75     IFEQ '1'                        B1
      *
     C           @PREVE    IFEQ 'L'                        B*2
     C           @PREVE    OREQ 'D'                        **2
     C                     MOVE @PREVE    @ENQ             **2
     C                     GOTO #BB9                       **2
     C                     END                             E*2
     C                     END                             E1
      *
      ****Check*if*at*start*of*currency***                                S01280
     C********** @HLKY5    SETGTMMDENALL                                  S01280
     C**********           READPMMDENALL                 75               S01280
      **********                                                          S01280
     C********** *IN75     IFEQ '0'                        B1             S01280
      **********                                                          S01280
      ****Determine*whether*currency/date*has*changed.***                 S01280
     C********** HLCCY     IFNE @HLCCY                     B*2            S01280
     C**********           MOVE '1'       *IN75            **2            S01280
      **********                                                          S01280
     C**********           ELSE                            X*2            S01280
      **********                                                          S01280
     C********** @MDATE    IFLT @RQDAT                     B**3           S01280
     C**********           MOVE '1'       *IN75            ***3           S01280
     C**********           END                             E**3           S01280
      **********                                                          S01280
     C**********           END                             E*2            S01280
      **********                                                          S01280
     C**********           END                             E1             S01280
      **********                                                          S01280
      ****If*no*previous*records*for*currency/date,*set*start/end**       S01280
      ****narrative.***                                                   S01280
     C********** *IN75     IFEQ '1'                        B1             S01280
     C**********           MOVE 'START'   @STEND           *1             S01280
     C**********           END                             E1             S01280
      *
      **  Position file before record for currency/date/roll-refresh
      **  key field.
     C           @HLKY5    SETLLMMDENALL
      *
     C           #BB9      ENDSR                           ** #BB9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************   SO1166
      *                                                               *   SO1166
      *  #BC - THIS ROUTINE CONTROLS THE FILE POSITIONING FOR         *   SO1166
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *   SO1166
      *                                                               *   SO1166
      *            'F' - FIRST PAGE                                   *   SO1166
      *                                                               *   SO1166
      *  CALLED BY : #B                                               *   SO1166
      *                                                               *   SO1166
      *  CALLS :                                                      *   SO1166
      *                                                               *   SO1166
      *  USES:       @HLKY4 - PARTIAL KEY FOR MMDENALL                *   SO1166
      *              @STEND - START/END NARRATIVE                     *   SO1166
      *                                                               *   SO1166
      *****************************************************************   SO1166
      *******                                                             SO1166
     C*******    #BC       BEGSR                                          SO1166
      *******                                                             SO1166
      **  Set start/end narrative.                                        SO1166
     C*******              MOVE 'START'   @STEND                          SO1166
      *******                                                             SO1166
      **  Position file before the first record for currency/date.        SO1166
     C*******    @HLKY4    SETLLMMDENALL                                  SO1166
      *******                                                             SO1166
     C*******    #BC9      ENDSR                           ** #BC9 **     SO1166
      *******                                                             SO1166
      *****************************************************************   SO1166
      /EJECT                                                              SO1166
      *****************************************************************   SO1166
      *                                                               *   SO1166
      *  #BD - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *   SO1166
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *   SO1166
      *                                                               *   SO1166
      *            'L' - LAST PAGE                                    *   SO1166
      *                                                               *   SO1166
      *  CALLED BY : #B                                               *   SO1166
      *                                                               *   SO1166
      *  CALLS :                                                      *   SO1166
      *                                                               *   SO1166
      *  USES:       @HLKY4 - PARTIAL KEY FOR MMDENALL                *   SO1166
      *              @STEND - START/END NARRATIVE                     *   SO1166
      *                                                               *   SO1166
      *****************************************************************   SO1166
      *******                                                             SO1166
     C*******    #BD       BEGSR                                          SO1166
      *******                                                             SO1166
      **  Set start/end narrative.                                        SO1166
     C*******              MOVE 'END  '   @STEND                          SO1166
      *******                                                             SO1166
      **  Position file after the last record for currency/date.          SO1166
     C*******    @HLKY1    SETGTMMDENALL                                  SO1166
      *******                                                             SO1166
     C*******    #BD9      ENDSR                           ** #BD9 **     SO1166
      *******                                                             SO1166
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BE - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
      *                                                               *
      *            'U' - ROLL UP                                      *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :                                                      *
      *                                                               *
      *  USES:     @HLKY4 - PARTIAL KEY FOR MMDENALL                  *
      *            @HLCCY - CURRENCY FROM FAEPT1                      *
      *            @VDATE - VALUE DATE YYYYMMDD                       *
      *            @RDATE - REQUESTED DATE FROM FAEPT1 YYYYMMDD       *
      *            @MDATE - MATURITY DATE YYYYMMDD                    *
      *            @STEND - START/END NARRATIVE                       *
      *                                                               *
      *****************************************************************
      *
     C           #BE       BEGSR
      *
     C                     MOVELFARKB1    @TBKY
     C                     Z-ADD@TBDAT    @RDATE
      *
      ****Check*if*at*start*of*currency/date/deal*no.***                  S01280
     C********** @HLKY5    SETGTMMDENALL                                  S01280
     C**********           READPMMDENALL                 75               S01280
     C********** *IN75     IFEQ '0'                        B1             S01280
      **********                                                          S01280
      ****Determine*whether*currency/date*has*changed.***                 S01280
     C********** HLCCY     IFNE @HLCCY                     B*2            S01280
     C**********           MOVE '1'       *IN75            **2            S01280
      **********                                                          S01280
     C**********           ELSE                            X*2            S01280
      **********                                                          S01280
     C********** @MDATE    IFLT @RQDAT                     B**3           S01280
     C**********           MOVE '1'       *IN75            ***3           S01280
     C**********           END                             E**3           S01280
      **********                                                          S01280
     C**********           END                             E*2            S01280
      **********                                                          S01280
     C**********           END                             E1             S01280
      **********                                                          S01280
      ****If*no*previous*records*for*currency/date,*set*start/end**       S01280
      ****narrative.***                                                   S01280
     C********** *IN75     IFEQ '1'                        B1             S01280
     C**********           MOVE 'START'   @STEND           *1             S01280
     C**********           END                             E1             S01280
      *
      **  Check if there are any more records for this currency/date      SO1166
     C           @HLKY5    SETGTMMDENALL                                  SO1166
     C********** @HLKY4    READEMMDENALL                 70        SO1166 S01280
     C                     READ MMDENALL                 70               S01280
      *                                                                   S01280
      * Check if currency has changed                                     S01280
     C           *IN70     IFNE '1'                                       S01280
     C           HLCCY     IFNE @HLCCY                                    S01280
     C                     MOVE '1'       *IN70                           S01280
     C                     ELSE                                           S01280
      *
      **  Position file after record for currency/roll-refresh
      **  key field.
     C           @HLKY5    SETGTMMDENALL
     C                     END                                            S01280
     C                     END                                            S01280
      *
     C****If*70*has*been*set*we*are*at*end*so*move*'END'*message** SO1166 S01280
     C********** *IN70     IFEQ '1'                        B1      SO1166 S01280
     C**********           MOVE 'END  '   @STEND           *1      SO1166 S01280
     C**********           END                             E1      SO1166 S01280
      **********                                                   SO1166 S01280
     C           #BE9      ENDSR                           ** #BE9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BF - THIS ROUTINE CONTROLS THE GENERATION OF DATES FOR      *
      *        THE FOLLOWING ENQUIRY UPDATED INPUT PARAMETER VALUES:  *
      *                                                               *
      *            'D' - ROLL DOWN                                    *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :                                                      *
      *                                                               *
      *  USES:       HL     - FULL KEY FOR MMDENALL                   *
      *              @STEND - START/END NARRATIVE                     *
      *                                                               *
      *****************************************************************
      *
     C           #BF       BEGSR
      *
     C                     MOVELFARKT1    @TBKY
     C                     Z-ADD@TBDAT    @RDATE
      *
      ****Check*if*start*point*of*roll*down*is*last*record*for**          S01280
      ****currency/date.****                                              S01280
     C********** @HLKY5    SETLLMMDENALL                                  S01280
     C*******    @HLKY5    READEMMDENALL                 75               SO1166
     C********** @HLKY4    READEMMDENALL                 75        SO1166 S01280
      **********                                                          S01280
      ****Set*start/end*narrative.***                                     S01280
     C********** *IN75     IFEQ '1'                        B1             S01280
     C**********           MOVE 'END  '   @STEND           *1             S01280
     C**********           END                             E1             S01280
      *
      **  Check if there are any previous records for this
      ****currency/date.***                                               S01280
      **  currency                                                        S01280
     C*******    @HLKY4    SETLLMMDENALL                                  SO1166
     C           @HLKY5    SETLLMMDENALL                                  SO1166
     C                     READPMMDENALL                 70
     C           *IN70     IFEQ '0'                        B1
      *
      **  Determine whether currency/date has changed.
      *   or if date is earlier than run date                             S01280
     C           HLCCY     IFNE @HLCCY                     B*2
     C           @MDATE    ORLT @WRUND                     B*2            S01280
     C                     MOVE '1'       *IN70            **2
      *
     C**********           ELSE                            X*2            S01280
      **********                                                          S01280
     C********** @MDATE    IFLT @RQDAT                     B**3           S01280
     C**********           MOVE '1'       *IN70            ***3           S01280
     C**********           END                             E**3           S01280
      *
     C                     END                             E*2
      *
     C                     END                             E1
      *
      **  Position file before record for currency/date/roll-refresh
      **  key field.
     C           @HLKY5    SETLLMMDENALL
      *
     C**  If 70 has been set we are at top so move 'START' message        SO1166
     C           *IN70     IFEQ '1'                        B1             SO1166
     C                     MOVE 'START'   @STEND           *1             SO1166
     C                     END                             E1             SO1166
      *                                                                   SO1166
     C           #BF9      ENDSR                           ** #BF9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BG - THIS ROUTINE SETS UP FIELDS DERIVED FROM MMDENALL      *
      *        IN THE DATA STRUCTURE @AMENQ AS FOLLOWS:               *
      *                                                               *
      *        A MAXIMUM OF 12 RECORDS ARE EXTRACTED FOR SPECIFIED    *
      *        CURRENCY/DATE FROM MMDENALL BY READING BACKWARDS.      *
      *                                                               *
      *        AMOUNTS, RATES AND DATES ARE EDITED FOR DISPLAY.       *
      *                                                               *
      *        ALL EDITED FIELDS SO OBTAINED ARE PLACED IN THEIR      *
      *        CORRESPONDING POSITIONS OF THE DATA STRUCTURE @DETLS,  *
      *        WHICH IS THEN MOVED INTO THE RELEVANT POSITION FOR     *
      *        THIS RECORD IN THE DATA STRUCTURE @AMENQ USING THE     *
      *        ARRAY @AM.                                             *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :     MM1015                                           *
      *              ZA0720                                           *
      *              #ZA                                              *
      *                                                               *
      *  USES:     @I     - COUNTER                                   *
      *            @HLCCY - CURRENCY FROM FAEPT1                      *
      *            @VDATE - VALUE DATE YYYYMMDD                       *
      *            @RDATE - REQUESTED DATE FROM FAEPT1 YYYYMMDD       *
      *            @MDATE - MATURITY DATE YYYYMMDD                    *
      *            @STEND - START/END NARRATIVE                       *
      *            @@DTIN - INPUT DATE TO ZA0720 YYYYMMDD             *
      *            @@DATE - OUTPUT DATE FROM ZA0720 DDMMMYY/MMMDDYY   *
      *            @MVDAT - EDITED 'OTHER' DATE DDMMMYY/MMMDDYY       *
      *            @@RIN  - INPUT RATE TO #ZA                         *
      *            @B     - OUTPUT RATE FROM #ZA                      *
      *            @INTRT - EDITED RATE                               *
      *            @@IAMT - INPUT AMOUNT TO MM1015                    *
      *            @@CCY  - INPUT CURRENCY TO MM1015                  *
      *            @@AMOT - OUTPUT AMOUNT FROM MM1015                 *
      *            @FVAL  - EDITED AMOUNT                             *
      *            @X     - INDEX                                     *
      *            @DETLS - DATA STRUCTURE WHICH HOLDS MMDENALL       *
      *                     INFORMATION FOR EACH RECORD               *
      *            @AM    - ARRAY OF MMDENALL DATA FOR EACH RECORD    *
      *            @RRFSH - ROLL/REFRESH KEY FIELD                    *
      *                                                               *
      *****************************************************************
      *
     C           #BG       BEGSR
      *                                                                   S01280
      * Setof subfile end indicator                                       S01280
     C                     SETOF                     30                   S01280
      *
      **  Read the previous 10 records on MMDENALL for currency/date.     SO1166
     C*******              DO   11        @I      20       B1             SO1166
      **  Read the previous 12 records on MMDENALL for currency/date.     SO1166
     C                     DO   13        @I      20       B1             SO1166
     C                     READPMMDENALL                 75*1
      *
     C           *IN75     IFEQ '0'                        B*2
      *
      **  Determine whether currency/date has changed.
      *   or if date is earlier than run date                             S01280
     C           HLCCY     IFNE @HLCCY                     B**3
     C           @MDATE    ORLT @WRUND                     B**3           S01280
     C                     MOVE '1'       *IN75            ***3
      *
     C**********           ELSE                            X**3           S01280
      **********                                                          S01280
     C********** @MDATE    IFLT @RQDAT                     B***4          S01280
     C**********           MOVE '1'       *IN75            ****4          S01280
     C**********           END                             E***4          S01280
      *
     C                     END                             E**3
      *
     C                     END                             E*2
      *
      **  If no more records for currency/date, end process.
     C           *IN75     IFEQ '1'                        B*2
      *
     C*******    @STEND    IFNE 'END  '                    B**3           SO1166
     C                     MOVE 'START'   @STEND           ***3
     C*******              END                             E**3           SO1166
      *                                                                   S01280
      * If less than 13 records have been read position pointer           S01280
      * after last record read, set @ENQ to blanks and process            S01280
      * as for an 'Enter' - to ensure a full page displayed               S01280
     C           @I        IFLT 13                                        S01280
     C                     READ MMDENALL                 74               S01280
     C                     MOVE *BLANKS   @ENQ                            S01280
     C                     MOVE HLCCY     @HLCCY                          S01280
     C                     MOVE HLMDYY    @HLCY                           S01280
     C                     MOVE HLMDMM    @HLMM                           S01280
     C                     MOVE HLMDDD    @HLDD                           S01280
     C                     MOVE HLDN38    @DLNO                           S01280
     C           @HLKY5    SETLLMMDENALL                                  S01280
     C                     MOVE 'START'   @STEND                          S01280
      *                                                                   S01280
      * Clear subfile                                                     S01280
     C                     SETOF                     3536                 S01280
     C                     WRITETM3210C1                                  S01280
     C                     SETON                     3536                 S01280
     C                     EXSR #BH                                       S01280
     C                     END                                            S01280
      *                                                                   S01280
     C                     GOTO #BG9                       **2
     C                     END                             E*2
      *
      **  Eleventh read to check start of file only.
     C*******    @I        CABEQ11        #BG9             *1
     C           @I        CABEQ13        #BG9             *1
      *
      **  Convert maturity date from YYYYMMDD to DDMMMYY/MMMDDYY.
     C                     Z-ADD@MDATE    @@DTIN           *1
     C                     EXSR ZA0720                     *1
     C***********          MOVE @@DATE    @MVDAT           *1             S01378
     C                     MOVE @@DATE    @MVDAT  7        *1             S01378
      *
      **  Edit Face Value amount.
     C                     Z-ADDHLFVAL    @@IAMT           *1
     C                     MOVE HLCCY     @@CCY   3        *1
     C                     EXSR MM1015                     *1
     C***********          MOVE @@AMOT    @FVAL            *1             S01378
     C                     MOVE @@AMOT    @FVAL   9        *1             S01378
      *
      **  Edit Net Value amount.
     C                     Z-ADDHLNANV    @@IAMT           *1
     C                     MOVE HLCCY     @@CCY   3        *1
     C                     EXSR MM1015                     *1
     C***********          MOVE @@AMOT    @NVAL            *1             S01378
     C                     MOVE @@AMOT    @NVAL  10        *1             S01378
      *
      **  Set up being sold indicator
      **  to display NA with forward sales against them in reverse image  S01378
     C*******    HLSLDB    IFNE *BLANKS                    B2             SO1166
     C***********HLSOLD    IFNE *BLANKS                    B2       SO1166S01378
     C           HLPCLI    IFEQ *BLANKS                    B2             S01378
     C           HLDADN    ANDNE*BLANKS                    B2             S01378
      *                                                                   S01378
     C           HLPCLI    OREQ 'P'                        B2             S01378
     C           HLNSLD    ANDNE*ZERO                      B2             S01378
     C***********          MOVE 'S'       @SLDB            *2             S01378
     C                     MOVE 'S'       @SLDB   1        *2             S01378
     C                     ELSE                            X2
     C                     MOVE *BLANKS   @SLDB            *2
     C                     END                             E2
      *
      **  Edit deal yeald rate.
     C                     MOVE *BLANKS   @INTRT           *1
     C                     Z-ADDHLINTR    @@RIN            *1
     C*******              EXSR MM1017                     *1             SO1166
     C                     EXSR ZA0880                     *1             SO1166
     C***********          MOVEA@B        @INTRT           *1             S01378
     C                     MOVEA@B        @INTRT  9        *1             S01378
      *
      **   Set up display line, and corresponding deal no.
     C*******    11        SUB  @I        @X      20       *1             SO1166
     C*******              MOVE @DETLS    @AM,@X           *1             SO1166
     C           13        SUB  @I        @X      20                      SO1166
     C                     EXSR #ZE                        *3             SO1166
     C                     MOVE HLDN38    @DN,@X           *1
      *
      **   If first read i.e. last line on screen, set up CA38CPLL field.
     C           @I        IFEQ 1                          B*2
     C                     MOVEL@@DTIN    @RRFSH           **2
     C                     MOVE HLDN38    @HLDNO           **2
     C                     Z-ADDHLAMNP    @HLAMN           **2
     C                     MOVE @RRFSH    FARKB1           **2
     C                     END                             E*2
      *
      **   Could be top line of screen: Set up CA38CPLL field.
     C                     MOVEL@@DTIN    @RRFSH           *1
     C                     MOVE HLDN38    @HLDNO           *1
     C                     Z-ADDHLAMNP    @HLAMN           *1
     C                     MOVE @RRFSH    FARKT1           *1
      *
      **   Set on indicator to show that records have been processed
     C                     MOVE '1'       *IN61            *1
      *
     C                     END                             E1
      *
     C           #BG9      ENDSR                           ** #BG9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #BH - THIS ROUTINE SETS UP FIELDS DERIVED FROM MMDENALL      *
      *        IN THE DATA STRUCTURE @AMENQ AS FOLLOWS:               *
      *                                                               *
      *        A MAXIMUM OF 13 RECORDS ARE EXTRACTED FOR SPECIFIED    *
      *        CURRENCY/DATE FROM MMDENALL BY READING FORWARDS.       *
      *                                                               *
      *        AMOUNTS, RATES AND DATES ARE EDITED FOR DISPLAY.       *
      *                                                               *
      *        ALL EDITED FIELDS SO OBTAINED ARE PLACED IN THEIR      *
      *        CORRESPONDING POSITIONS OF THE DATA STRUCTURE @DETLS,  *
      *        WHICH IS THEN MOVED INTO THE RELEVANT POSITION FOR     *
      *        THIS RECORD IN THE DATA STRUCTURE @AMENQ USING THE     *
      *        ARRAY @AM.                                             *
      *                                                               *
      *  CALLED BY : #B                                               *
      *                                                               *
      *  CALLS :     MM1015                                           *
      *              ZA0720                                           *
      *              #ZA                                              *
      *                                                               *
      *  USES:       @I     - COUNTER                                 *
      *              @HLKY4 - PARTIAL KEY FOR MMDENALL                *
      *              @STEND - START/END NARRATIVE                     *
      *              @VDATE - VALUE DATE YYYYMMDD                     *
      *              @@DTIN - INPUT DATE TO ZA0720 YYYYMMDD           *
      *              @@DATE - OUTPUT DATE FROM ZA0720 DDMMMYY/MMMDDYY *
      *              @MVDAT - EDITED 'OTHER' DATE DDMMMYY/MMMDDYY     *
      *              @MDATE - MATURITY DATE YYYYMMDD                  *
      *              @@RIN  - INPUT RATE TO #ZA                       *
      *              @B     - OUTPUT RATE FROM #ZA                    *
      *              @INTRT - EDITED RATE                             *
      *              @@IAMT - INPUT AMOUNT TO MM1015                  *
      *              @@CCY  - INPUT CURRENCY TO MM1015                *
      *              @@AMOT - OUTPUT AMOUNT FROM MM1015               *
      *              @FVAL  - EDITED AMOUNT                           *
      *              @DETLS - DATA STRUCTURE WHICH HOLDS MMDENALL     *
      *                       INFORMATION FOR EACH RECORD             *
      *              @AM    - ARRAY OF MMDENALL DATA FOR EACH RECORD  *
      *              @RRFSH - ROLL/REFRESH KEY FIELD                  *
      *                                                               *
      *****************************************************************
      *
     C           #BH       BEGSR
      *                                                                   S01280
      * If any previous records for currency, blank out 'START' text      S01280
      * (Only need to check this if new prompt entered)                   S01280
      * If the maturity date of previous record is before run date        S01280
      * display 'START' as can't rolldown will not be allowed             S01280
     C           @ENQ      IFEQ *BLANKS                                   S01280
     C                     READPMMDENALL                 75               S01280
     C           *IN75     IFEQ '0'                                       S01280
     C           HLCCY     ANDEQ@HLCCY                                    S01280
     C           @MDATE    ANDGE@WRUND                                    S01280
     C                     MOVE *BLANKS   @STEND                          S01280
     C                     END                                            S01280
      * Reposition pointer                                                S01280
     C           @HLKY4    SETLLMMDENALL                                  S01280
     C                     SETOF                         75               S01280
     C                     END                                            S01280
      *
      **  Read the next 10 records on MMDENALL for currency/date.
     C*******              DO   11        @I      20       B1             SO1166
     C                     DO   13        @I      20       B1             SO1166
     C                     READ MMDENALL                 75*1
      *
      **  If currency changes end process.
     C           HLCCY     IFNE @HLCCY
     C                     MOVE '1'       *IN75
     C                     END                                            SO1166
      *
      **  If no more records for currency/date, end process.
     C           *IN75     IFEQ '1'                        B*2
     C                     MOVE 'END  '   @STEND           **2
     C                     SETON                     30    **2            S01280
     C                     GOTO #BH9                       **2
     C                     END                             E*2
      *
      **  Eleventh read to check end of file only.
     C*******    @I        CABEQ11        #BH9             *1             SO1166
     C           @I        CABEQ13        #BH9             *1             SO1166
      *
      **  Convert maturity date from YYYYMMDD to DDMMMYY/MMMDDYY.
     C                     Z-ADD@MDATE    @@DTIN           *1
     C                     EXSR ZA0720                     *1
     C                     MOVE @@DATE    @MVDAT           *1
      *
      **  Edit Face value amount.
     C                     Z-SUBHLFVAL    @@IAMT           *1
     C                     MOVE HLCCY     @@CCY   3        *1
     C                     EXSR MM1015                     *1
     C                     MOVE @@AMOT    @FVAL            *1
      *
      **  Edit Net Value amount.
     C                     Z-ADDHLNANV    @@IAMT           *1
     C                     MOVE HLCCY     @@CCY   3        *1
     C                     EXSR MM1015                     *1
     C                     MOVE @@AMOT    @NVAL            *1
      *
      **  Set up being sold indicator
     C*******    HLSLDB    IFNE *BLANKS                    B2             SO1166
     C***********HLSOLD    IFNE *BLANKS                    B2       SO1166S01378
     C           HLPCLI    IFEQ *BLANKS                    B2             S01378
     C           HLDADN    ANDNE*BLANKS                    B2             S01378
      *                                                                   S01378
     C           HLPCLI    OREQ 'P'                        B2             S01378
     C           HLNSLD    ANDNE*ZERO                      B2             S01378
     C                     MOVE 'S'       @SLDB            *2
     C                     ELSE                            X2
     C                     MOVE *BLANKS   @SLDB            *2
     C                     END                             E2
      *
      **  Edit deal yeald rate.
     C                     MOVE *BLANKS   @INTRT           *1
     C                     Z-ADDHLINTR    @@RIN            *1
     C*******              EXSR MM1017                     *1             SO1166
     C                     EXSR ZA0880                     *1             SO1166
     C                     MOVEA@B        @INTRT           *1
      *
      **   Set up display line.
     C*******              MOVE @DETLS    @AM,@I           *1
     C                     Z-ADD@I        @X               *3             SO1166
     C                     EXSR #ZE                        *3             SO1166
     C                     MOVE HLDN38    @DN,@I           *1
      *
      **   If first line, set up CA38CPLL field.
     C           @I        IFEQ 1                          B*2
     C                     MOVEL@@DTIN    @RRFSH           **2
     C                     MOVE HLDN38    @HLDNO           **2
     C                     Z-ADDHLAMNP    @HLAMN           **2
     C                     MOVE @RRFSH    FARKT1 24        **2
     C                     END                             E*2
      *
      **   Could be last line on screen: Set up CA38CPLL field.
     C                     MOVEL@@DTIN    @RRFSH           *1
     C                     MOVE HLDN38    @HLDNO           *1
     C                     Z-ADDHLAMNP    @HLAMN           *1
     C                     MOVE @RRFSH    FARKB1 24        *1
      *
      **   Set on indicator to show that records have been processed
     C                     MOVE '1'       *IN61            *1
      *
     C                     END                             E1
      *
     C********** #BH9      ENDSR                           ** #BH9 **     S01280
     C           #BH9      TAG                             ** #BH9 **     S01280
      *                                                                   S01280
      * If another page to display setof subfile end indicator            S01280
     C           *IN75     IFNE '1'                                       S01280
     C                     SETOF                     30                   S01280
     C                     END                                            S01280
      *                                                                   S01280
     C                     ENDSR                                          S01280
      *****************************************************************
      /EJECT
     C****************************************************************
     C*                                                              *
     C*    #ZE  WRITES TO ENQUIRY SUBFILE                            *
     C*        CALLED BY  : #BG  #BH                                 *
     C*        CALLS      :                                          *
     C*                                                              *
     C****************************************************************
     C*
     C           #ZE       BEGSR
     C*
     C* clear subfile
     C           @SFLCL    IFEQ 'N'
     C                     SETOF                     3536
     C**********           WRITEDL3210C1                                  S01117
     C                     WRITETM3210C1                                  S01117
     C                     MOVE 'Y'       @SFLCL
     C                     END
     C*
     C                     MOVE HLMTYP    DDTYPE                          S01280
     C***********          MOVE HLTYPE    DDTYPE                          S01280
     C**********           MOVE HLCSNM    DDCUST                          E17654
     C********** HLCNUM    CHAINCLINT                99            E17654 S01194
      *                                                                   S01194
      * Set up Customer no. as 10A parameter                              S01194
     C                     MOVE *BLANKS   @CUKEY                          S01194
     C                     MOVELHLCNUM    @CUKEY                          S01194
      *                                                                   S01194
      * Call access object to get customer shortname                      S01194
     C                     CALL 'AOCUSTR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*KEY   ' @OPTN   7                       S01194
     C                     PARM           @CUKEY 10                       S01194
     C                     PARM *BLANKS   @KYST   7                       S01194
     C           SDCUST    PARM SDCUST    DSSDY                           S01194
      *                                                                   S01194
     C**********           MOVE CSNM      DDCUST                   E17654 S01194
     C                     MOVE BBCSSN    DDCUST                          S01194
     C                     MOVE @MVDAT    DDMDAT
     C                     MOVE @INTRT    DDYLD
     C                     MOVE @FVAL     DDFVAL
     C                     MOVE @NVAL     DDNVAL
     C*
     C**  If Deal type is 'SOLD' display in reverse video
     C           @SLDB     IFEQ 'S'
     C                     MOVE '1'       *IN80
     C                     ELSE
     C                     MOVE '0'       *IN80
     C                     END
     C*
     C                     Z-ADD@X        RRN     20
     C*
     C**********           WRITEDL3210S1                                  S01117
     C                     WRITETM3210S1                                  S01117
     C*
      * Set on subfile written flag                                       S01280
     C                     MOVE 'Y'       @SFILE  1                       S01280
     C*
     C                     ENDSR
     C/EJECT
      *****************************************************************
      *                                                               *
      *  #A - THIS ROUTINE PERFORMS INITIAL PROCESSING                *
      *                                                               *
      *  CALLED BY : CONTROL PROCESSING                               *
      *                                                               *
      ***CALLS*:*****ZA0150********************************************   S01194
      *  CALLS :                                                      *   S01194
      *              ZA0280                                           *
      *                                                               *
      *                                                               *
      *  USES :    @TERM  - TERMINATION INPUT PARAMETER               *
      *            @ENQ   - ENQUIRY UPDATED INPUT PARAMETER           *
      *            @RRFSH - ROLL/REFRESH INPUT PARAMETER              *
      *            @FCYC  - FIRST TIME PROGRAM CALLED IN CURRENT      *
      *                     INVOCATION                                *
      *            @AMENQ - SCREEN ENQUIRY DATA AREA                  *
      *                                                               *
      *****************************************************************
      *
     C           #A        BEGSR
      *
      **  Receive input parameters.                                       SO1166
     C*******    *ENTRY    PLIST                                          SO1166
     C*******              PARM           @TERM   1                       SO1166
     C*******              PARM           @ENQ    1                       SO1166
     C*******              PARM           @RRFSH                          SO1166
      *
      **  If termination parameter is 'T', set LR. No further
      **  processing in this routine.
     C           @TERM     IFEQ 'T'                        B1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #A9                        *1
     C                     END                             E1
      *
      *   Set off all indicators                                          SO1166
     C                     MOVE '0'       *IN,01                          SO1166
      *                                                                   SO1166
      *   Set on message subfile indicator                                SO1166
     C                     MOVE '1'       *IN40                           SO1166
      *                                                                   SO1166
      **  Initialise screen message queue                                 SO1166
     C                     MOVEL'*'       DDPGMQ                          SO1166
      *                                                                   SO1166
      **  Move workstation id to screen field                             SO1166
     C                     MOVEL@JOB      DDWSID                          SO1166
      *                                                                   SO1166
      **  Check if this is the first time this program has been
      **  called in the current invocation and perform the appropriate
      **  processing.
     C           @FCYC     IFNE 'Y'                        B1
      *
      **  Set up program name in *LDA in case of data base error.
     C*******              MOVEL'MM0084'  DBPGM            *1             SO1166
     C**********           MOVEL'DL3210'  DBPGM            *1      SO1166 S01117
     C                     MOVEL'TM3210'  DBPGM            *1             S01117
      *
      ** Open all files under user control.
     C**********           OPEN FDICDRLL                   *1             S01194
     C                     OPEN FDMNTHLL                   *1
     C*******              OPEN CA38CPLL                   *1             SO1166
     C*******              OPEN MMFWDTLL                   *1             SO1166
     C                     OPEN MMFWDTLL                   *1             E90092
     C                     OPEN MMDENALL                   *1
     C*********************OPEN*FDINSTLL**********************************S01319
     C**********           OPEN FDCCYTLL                   *1             S01194
     C**********           OPEN CLINT                      *1      E17654 S01194
      *
     C****Open*FDUSSILL*if*first*time*through***********************SO1166S01319
      **  Open MUSER    if first time through                             S01319
     C           @FD1ST    IFEQ *BLANK                                    SO1166
     C                     MOVE 'N'       @FD1ST  1                       SO1166
     C*********************OPEN*FDUSSILL****************************S01166S01319
     C                     OPEN MUSER                                     S01319
     C                     END                                            SO1166
      *                                                                   SO1166
     C*********************MOVEL@USER*****@USER3**3*****************SO1166S01319
     C**************************************************************SO1166S01319
     C***********@USER3****CHAINFDUSSIP0*************71*************SO1166S01319
     C**************************************************************SO1166S01319
     C****DB*error*if*user*not*found********************************SO1166S01319
     C************IN71*****IFEQ*'1'*********************************SO1166S01319
     C*********************MOVE*'901'*****DBASE**************2******S01166S01319
     C*********************MOVE*'FDUSSILL'DBFILE*************2******S01166S01319
     C*********************MOVEL@USER3****DBKEY**************2*ERRORS01166S01319
     C*********************MOVE*'1'********INU7**************2**901*S01166S01319
     C*********************MOVE*'1'********INU8**************2******S01166S01319
     C*********************GOTO*#A9**************************2******S01166S01319
     C*********************END*****************************E*2******S01166S01319
     C           @USER     CHAINMUSER                71                   S01319
     C*                                                                   S01319
     C           *IN71     IFEQ '1'                        B1             S01319
     C*                                                                   S01319
     C                     MOVEL'MUSER'   DBFILE           ***************S01319
     C                     MOVE '901'     DBASE            *             *S01319
     C                     MOVEL@USER     DBKEY            * DBERROR 901 *S01319
     C                     MOVE '1'       *INU7             *2            S01319
     C                     MOVE '1'       *INU8             *2            S01319
     C                     GOTO #A9                        **2            S01319
     C*                                                                   S01319
     C                     END                             E1             S01319
     C*                                                                   S01166
     C* DO DISPLAY FILE OVERRIDE BEFORE OPEN                              S01166
     C***********USREF*****IFEQ*'Y'                        B*2      S01166S01319
     C           AURF      IFEQ 'Y'                        B*2            S01319
     C                     MOVEL@OVR,1    @OVRID           **2            S01166
     C*********************Z-ADDUSRFPD****@WAIT**************2******S01166S01319
     C                     Z-ADDREFP      @WAIT            **2            S01319
     C                     Z-ADD36        QCALEN 155       **2            S01166
     C*********************CALL 'QCAEXEC'                  **2      S01166E20774
     C                     CALL 'QCMDEXC'                  **2            E20774
     C                     PARM           @OVRID           **2            S01166
     C                     PARM           QCALEN           **2            S01166
     C                     END                             E*2            S01166
     C*                                                                   S01166
     C**********           OPEN DL3210DD                   *1      SO1166 S01117
     C                     OPEN TM3210DD                   *1             S01117
     C*                                                                   S01166
      ****Read*the*installation*control*data*file***                      S01194
     C**********           EXSR ZA0150                     *1             S01194
      **********                                                          S01194
      ****If*a*data*base*error*has*occured**set*U7*&*U8***                S01194
      ****No*further*processing*required****                              S01194
     C********** *IN80     IFEQ '1'                        B*2            S01194
     C**********           MOVE '1'       *INU7            **2            S01194
     C**********           MOVE '1'       *INU8            **2            S01194
     C**********           GOTO #A9                        **2            S01194
     C**********           END                             E*2            S01194
      *                                                                   S01194
      * Get Bank's details from SDBANKPD via Access Object                S01194
      * (Note that *DBERR is used as standard return code although        S01194
      * this will not normally produce a DB error due to access           S01194
      * object having already been called in SD1600)                      S01194
     C                     CALL 'AOBANKR0'                                S01194
     C                     PARM '*DBERR ' @RTCD   7                       S01194
     C                     PARM '*FIRST ' @OPTN   7                       S01194
     C           SDBANK    PARM SDBANK    DSFDY                           S01194
      *                                                                   S01195
      * Set currency location (ZLOC) to system location code for          S01195
      * use in holiday processing                                         S01195
     C                     MOVELBJSLCD    ZLOC                            S01195
      *
      **  Read the month shortnames file.
     C                     EXSR ZA0280                     *1
      *
      **  If a data base error has occured, set U7 & U8.
      **  No further processing required.
     C           *IN80     IFEQ '1'                        B*2
     C                     MOVE '1'       *INU7            **2
     C                     MOVE '1'       *INU8            **2
     C                     GOTO #A9                        **2
     C                     END                             E*2
      *                                                                   S01280
      * Convert Midas run date from DDMMMYY to YYYYMMDD form              S01280
     C                     MOVELBJMRDT    @@MRDT                          S01280
     C                     Z-ADD0         @WYRN                           S01280
     C                     MOVE @WYR      @WYRN                           S01280
     C           @WYRN     IFGE 91                                        S01280
     C                     ADD  1900      @WYRN                           S01280
     C                     ELSE                                           S01280
     C                     ADD  2000      @WYRN                           S01280
     C                     END                                            S01280
     C                     Z-ADD1         @XX     20                      S01280
     C           @WMTH     LOKUP@MT,@XX                  82               S01280
     C                     Z-ADD@XX       @WMTHN                          S01280
     C                     MOVE @WDAY     @WDAYN                          S01280
      *                                                                   S01378
      ** Default prompt date to run date (must move numeric to convert    S01378
      ** ' 3' to '03' as required by validation).                         S01378
     C                     MOVELBJMRDT    DDDMY                           S01378
     C                     MOVEL@WDAYN    DDDMY                           S01378
      *
      **  Read the installation control data file.
     C***********1*********CHAINFDINSTLL*************76*****1*************S01319
     C********************************************************************S01319
     C****If*no*record*found.*********************************************S01319
     C************IN76*****IFEQ*'1'************************B*2************S01319
     C*********************MOVEL'001'*****DBASE***************************S01319
     C*********************MOVEL'FDINSTLL'DBFILE**************************S01319
     C*********************MOVEL'1'*******DBKEY**************DBERROR*001**S01319
     C*********************MOVE*'1'********INU7***************************S01319
     C*********************MOVE*'1'********INU8***************************S01319
     C*********************GOTO*#A9**************************2************S01319
     C*********************END*****************************E*2************S01319
     C*                                                                   S01319
     C** Access Deal details via access program                           S01319
      *  (database error handling done in access program)                 S01319
     C**********           CALL 'AODEALR0'                                             S01319 CGL029
     C                     CALL 'AODEALR1'                                                    CGL029
     C                     PARM '*DBERR ' @RTCD   7                       S01319
     C                     PARM '*FIRST ' @OPTN   7                       S01319
     C********** SDDEAL    PARM SDDEAL    DSFDY                                        S01319 CGL029
     C           SDDEAL    PARM SDDEAL    DSSDY                                               CGL029
      *
      **  Set flag that first invocation processing has been
      **  successfully completed.
     C                     MOVE 'Y'       @FCYC   1        *1
     C                     END                             E1
      *
      **  Read CA38CPLL.                                                  SO1166
     C*******    1         CHAINCA38CPLL             76                   SO1166
      *******                                                             SO1166
      **  If no record found.                                             SO1166
     C*******    *IN76     IFEQ '1'                        B1             SO1166
     C*******              MOVEL'002'     DBASE            ***************SO1166
     C*******              MOVEL'CA38CPLL'DBFILE           *             *SO1166
     C*******              MOVEL'1'       DBKEY            * DBERROR 002 *SO1166
     C*******              MOVE '1'       *INU7            *             *SO1166
     C*******              MOVE '1'       *INU8            ***************SO1166
     C*******              GOTO #A9                        *1             SO1166
     C*******              END                             E1             SO1166
      *
      **  Define, read and initialise data area AMENQ1AA.                 SO1166
     C*******    *NAMVAR   DEFN AMENQ1AA  @AMENQ                          SO1166
     C*******    *LOCK     IN   @AMENQ                                    SO1166
     C                     MOVE *BLANKS   @AMENQ
      *
      **  Define MMFWDTLL key.                                            SO1166
     C*******    @HLKY2    KLIST                                          SO1166
     C*******              KFLD           @HLCCY  3                       SO1166
     C           @HLKY2    KLIST                                          E90092
     C                     KFLD           @HLCCY  3                       E90092
      *
      **  Define MMDENALL partial key.
     C           @HLKY4    KLIST
     C                     KFLD           @HLCCY  3
     C                     KFLD           @HLCY   40
     C                     KFLD           @HLMM   20
     C                     KFLD           @HLDD   20
      *
      **  Define MMDENALL key.
     C           @HLKY5    KLIST
     C                     KFLD           @HLCCY  3
     C                     KFLD           @HLCY   40
     C                     KFLD           @HLMM   20
     C                     KFLD           @HLDD   20
     C                     KFLD           @DLNO   60
      *
      **  Define MMDENALL partial key.
     C           @HLKY1    KLIST
     C                     KFLD           @HLCCY  3
      *
     C* set subfile clear flag                                            S01166
     C                     MOVE 'N'       @SFLCL  1                       SO1166
     C*
     C*   INHIBIT ROLL KEYS AND SET ON END OF MESSAGE AND ENQUIRY         S01166
     C*   SUBFILE INDICATORS                                              S01166
     C                     MOVE '0'       *IN27                           S01166
     C                     MOVE '1'       *IN40                           S01166
     C                     MOVE '1'       *IN30                           S01166
     C*                                                                   S01166
      **  Write screen header and command key text
     C*                                                                   S01280
     C** Update time for display                                          S01280
     C                     TIME           DDTIME                          S01280
     C**********           WRITEDL3210F0               63          S01166 S01117
     C                     WRITETM3210F0               63                 S01117
     C**********           WRITEDL3210F1               63          S01166 S01117
     C                     WRITETM3210F1               63                 S01117
     C*                                                                   S01166
     C*                                                                   S01166
     C                     MOVE '0'       *IN35                           S01166
     C                     MOVE '1'       *IN36                           S01166
     C*                                                                   S01166
     C*  WRITE THE PROMPT SCREEN BY SETTING                               S01166
     C*  ON THE SUBFILE DISPLAY CONTROL INDICATOR                         S01166
     C**********           EXFMTDL3210C1               63          S01166 S01117
     C                     EXFMTTM3210C1               63                 S01117
      *                                                                   S01280
      * Initialize start/end text                                         S01280
     C                     MOVE *BLANKS   @STEND                          S01280
     C*                                                                   S01166
     C** PROCESS HELP WHILE IT IS REQUESTED AND RE-READ THE SCREEN        S01166
     C*                                                                   S01166
     C**         *IN10     DOWEQ'1'                        B1      S01166 S01199
     C**                   CALL 'SDMENU'                   *1      S01166 S01199
     C**                   MOVE '0'       *IN10            *1      S01166 S01199
     C**                   READ DL3210DD               0589*1      S01166 S01199
     C**                   END                             E1      S01166 S01199
      *
      ** EXIT
     C           *IN01     IFEQ '1'
     C                     MOVE '1'       *INLR
     C                     END                             E1             S01166
      *
     C           #A9       ENDSR                           ** #A9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      *  #C - THIS ROUTINE PERFORMS FINAL PROCESSING                  *
      *                                                               *
      *  CALLED BY :  CONTROL PROCESSING                              *
      *                                                               *
      *  CALLS :      CM0020                                          *
      *                                                               *
      *  USES :       @AMENQ    -  SCREEN ENQUIRY DATA AREA           *
      *               @ENQ      -  ENQUIRY UPDATED INPUT PARAMETER    *
      *               @TERM     -  CM0020 PARAMETER                   *
      *               @EMID     -  CM0020 PARAMETER                   *
      *               @SWER     -  CM0020 PARAMETER                   *
      *               @PARM2    -  CM0020 PARAMETER                   *
      *               @PARM3    -  CM0020 PARAMETER                   *
      *               @PARM4    -  CM0020 PARAMETER                   *
      *                                                               *
      *****************************************************************
      *
     C           #C        BEGSR
      *
      **  If last record indicator set, no further processing.
     C           *INLR     CABEQ'1'       #C9
      *
      **  If U7 set, close program.
     C           *INU7     IFEQ '1'                        B1
     C                     MOVE 'E'       @TERM   1        *1
     C                     MOVE '1'       *INLR            *1
     C                     GOTO #C8                        *1
     C                     END                             E1
      *
      **  If enquiry-updated input parameter is either 'U' or 'D'
      **  and no records to be displayed.
     C           @ENQ      IFEQ 'U'                        B1
     C           *IN70     ANDEQ'1'                        X1
     C           @ENQ      OREQ 'D'                        X1
     C           *IN70     ANDEQ'1'                        X1
      *
      **  Release the CA38CPLL record.
     C*******              EXCPT@RLS01                     *1             SO1166
      *
      **  Unlock AMENQ1AA.                                                SO1166
     C*******              UNLCK@AMENQ                     *1             SO1166
      *
      **  Call PC format/transmission program.                            SO1166
     C*******              CALL 'CM0020'                   *1             SO1166
     C*******              PARM *BLANK    @TERM   1        *1             SO1166
     C*******              PARM 'ER'      @EMID   2        *1             SO1166
     C*******              PARM '1'       @SWER   1        *1             SO1166
     C*******              PARM @ENQ      @PARM2  1        *1             SO1166
     C*******              PARM '999'     @PARM3  3        *1             SO1166
     C*******              PARM *BLANK    @PARM4  1        *1             SO1166
      *
     C                     GOTO #C8                        *1
     C                     END                             E1
      *
      **  PROCESSING FOR NORMAL UPDATE OF AMENQ1AA.                       SO1166
      **  Update CA38CPLL.                                                SO1166
     C*******              EXCPT@UPD01                                    SO1166
      *
      **  Update AMENQ1AA.
     C*******              OUT  @AMENQ                                    SO1166
      *
      **  Call PC format/transmission program.                            SO1166
     C*******              CALL 'CM0020'                                  SO1166
     C*******              PARM *BLANK    @TERM   1                       SO1166
     C*******              PARM 'ER'      @EMID                           SO1166
     C*******              PARM '1'       @SWER                           SO1166
     C*******              PARM @ENQ      @PARM2                          SO1166
     C*******              PARM '103'     @PARM3                          SO1166
     C*******              PARM *BLANK    @PARM4                          SO1166
      *
     C           #C8       TAG                              ** #C8 **
      *
      **  Return to calling program.
     C                     RETRN
      *
     C           #C9       ENDSR                            ** #C9 **
      *
      *****************************************************************
      /EJECT
      *****************************************************************   S01194
      **********                                                      *   S01194
      ********SUBROUTINE ZA0150 - THIS SUBROUTINE CHAINS TO FILE LF/  *   S01194
      ********FDICDRLL TO GET THE INSTALLATION CONTROL DETAILS RECORD *   S01194
      ********1*(HELD ON PF/TABTB10)                                  *   S01194
      ********INDICATOR 80 IS SET ON IF THE CHAIN FAILS OR THE RECORD *   S01194
      ********IS FLAGGED FOR DELETION.                                *   S01194
      ********IF INDICATOR 80 IS SET ON DETAILS OF THE ATTEMPTED      *   S01194
      ********ACCESS ARE PLACED IN THE LDA.                           *   S01194
      **********                                                      *   S01194
      ********FIELDS USED : SS0150 - KEY USED TO ACCESS FDICDRLL      *   S01194
      **********                                                      *   S01194
      *****************************************************************   S01194
      **********                                                          S01194
     C********** ZA0150    BEGSR                                          S01194
      **********                                                          S01194
      ***SET*UP*KEY TO OBTAIN FORMAT TABTB10F '01        10'              S01194
     C**********           MOVEL'01'      SS0150 12                       S01194
     C**********           MOVE '10'      SS0150                          S01194
      **********                                                          S01194
      ***CHAIN*TO FILE FDICDRLL                                           S01194
     C********** SS0150    CHAINFDICDRLL             80                   S01194
     C********** RECI      IFNE 'D'                        B1             S01194
     C**********           MOVE '1'       *IN80            *1             S01194
     C**********           END                             E1             S01194
      **********                                                          S01194
      ***DEAL*WITH DATA BASE ERROR                                        S01194
     C********** *IN80     IFEQ '1'                        ***************S01194
     C**********           MOVEL'FDICDRLL'DBFILE           *             *S01194
     C**********           MOVEL'900'     DBASE            * DBERROR 900 *S01194
     C**********           MOVELSS0150    DBKEY            *             *S01194
     C**********           END                             ***************S01194
      **********                                                          S01194
     C********** ZA0159    ENDSR                           ** ZA0159 **   S01194
      *****************************************************************   S01194
      /EJECT
      *****************************************************************
      *                                                               *
      *       SUBROUTINE ZA0280 - THIS SUBROUTINE READS THE ONLY      *
      *       RECORD ON LF/FDMNTHLL TO GET MONTH NAMES AND SHORTNAMES.*
      *       INDICATOR 80 IS SET ON IF THE RECORD IS NOT PRESENT OR  *
      *       IS FLAGGED FOR DELETION.                                *
      *       IF INDICATOR IS SET ON INFORMATION ABOUT THE NATURE     *
      *       OF THE ATTEMPTED FILE ACCESS WILL BE PLACED IN THE LDA. *
      *                                                               *
      *       FIELDS USED : SS0280 - KEY USED TO ACCESS FDMNTHLL      *
      *                                                               *
      *****************************************************************
      *
     C           ZA0280    BEGSR
      *
      **  READ FIRST RECORD ON FILE LF/FDINSTPP
     C                     Z-ADD1         SS0280  10
     C           SS0280    CHAINFDMNTHLL             80
      *
      **  CHECK LOGICAL DELETE FLAG BLANK
     C           MNDLTF    IFNE ' '                        B1
     C                     MOVE '1'       *IN80            *1
     C                     END                             E1
      *
      ** DEAL WITH DATA BASE ERROR
     C           *IN80     IFEQ '1'                        ***************
     C                     MOVEL'FDMNTHLL'DBFILE           *             *
     C                     MOVE *BLANKS   DBKEY            * DBERROR 906 *
     C                     MOVEL'906'     DBASE            *             *
     C                     END                             ***************
      *
     C           ZA0289    ENDSR                           ** ZA0289 **
      *****************************************************************
      /EJECT
      **********                                                          S01195
     C********************************************************************S01195
     C**********                                                          S01195
     C**ZA0830*- THIS SUBROUTINE FINDS OUT WHETHER A PARTICULAR DAY       S01195
     C********** IS A HOLIDAY IN A PARTICULAR CURRENCY                    S01195
     C**********                                                          S01195
     C**CALLED*BY :                                                       S01195
     C**********                                                          S01195
     C**CALLS*:*                                                          S01195
     C**********                                                          S01195
     C**INPUT**: @@MNO  MIDAS DAY NUMBER 5N                               S01195
     C********** @@CCY  CURRENCY CODE 3A                                  S01195
     C**********                                                          S01195
     C**OUTPUT*: @@HIND HOLIDAY/WORKING DAY INDICATOR 1A                  S01195
     C**********                                                          S01195
     C**USES*:** @@MNO  MIDAS DAY NUMBER                                  S01195
     C********** @@CCY  CURRENCY CODE                                     S01195
     C********** @@ONCE FIRST TIME THROUGH INDICATOR                      S01195
     C********** @@CY1  FIRST HALF OF CURRENCY ARRAY                      S01195
     C********** @@CY2  SECOND HALF OF CURRENCY ARRAY                     S01195
     C********** @@MNO6 MIDAS NUMBER WITH TRAILING BLANK                  S01195
     C********** @@HIND HOLIDAY/WORKING DAY INDICATOR                     S01195
     C********** @@INEX INCLUDE/EXCLUDE INDICATOR                         S01195
     C**********                                                          S01195
     C********** INDICATORS                                               S01195
     C********** 80 RECORD NOT FOUND                                      S01195
     C********** 81 CURRENCY NOT FOUND ON RECORD                          S01195
     C**********                                                          S01195
     C********************************************************************S01195
     C********** ZA0830    BEGSR                                   SO1166 S01195
     C**********                                                   SO1166 S01195
     C***OPEN*CURRENCY/HOLIDAY FILE IF FIRST TIME THROUGH          SO1166 S01195
     C********** @@ONCE    IFNE 'Y'                        B1      SO1166 S01195
     C**********           OPEN FDTABJLL                   *1      SO1166 S01195
     C**********           MOVE 'Y'       @@ONCE  1        *1      SO1166 S01195
     C**********           END                             E1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***BLANK*OUT ARRAY                                           SO1166 S01195
     C**********           MOVE *BLANKS   @@CY1                    SO1166 S01195
     C**********           MOVE *BLANKS   @@CY2                    SO1166 S01195
     C**********                                                   SO1166 S01195
     C***ACCESS*TABLE ON FIRST KEY                                 SO1166 S01195
     C**********           MOVEL@@MNO     @@MNO6  6                SO1166 S01195
     C**********           MOVE @@MNO6    @@0830 12                SO1166 S01195
     C**********           MOVEL'22    '  @@0830                   SO1166 S01195
     C**********           MOVE '1'       @@0830                   SO1166 S01195
     C********** @@0830    CHAINTABLETJF             80            SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*RECORD NOT FOUND OR DELETED                            SO1166 S01195
     C********** *IN80     IFEQ '1'                        B1      SO1166 S01195
     C********** RECI      OREQ '*'                        *1      SO1166 S01195
     C**********           MOVE 'W'       @@HIND           *1      SO1166 S01195
     C**********           GOTO ZA0839                     *1      SO1166 S01195
     C**********           END                             E1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***MOVE*FIRST 25 CURRENCIES TO ARRAY                         SO1166 S01195
     C**********           MOVE HCCY      @@CY1                    SO1166 S01195
     C**********                                                   SO1166 S01195
     C***ACCESS*TABLE ON SECOND KEY                                SO1166 S01195
     C**********           MOVE '2'       @@0830                   SO1166 S01195
     C********** @@0830    CHAINTABLETJF             80            SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*SECOND RECORD FOUND AND NOT DELETED                    SO1166 S01195
     C********** *IN80     IFEQ '0'                        B1      SO1166 S01195
     C********** RECI      ANDNE'*'                        *1      SO1166 S01195
     C**********           MOVE HCCY      @@CY2            *1      SO1166 S01195
     C**********           END                             E1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***SEARCH*ARRAY FOR INPUT CURRENCY                           SO1166 S01195
     C********** @@CCY     LOKUP@CY                      81        SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*INPUT CURRENCY IS IN ARRAY                             SO1166 S01195
     C********** *IN81     IFEQ '1'                        B1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'E'                       SO1166 S01195
     C********** INEX      IFEQ 'E'                        B*2     SO1166 S01195
     C**********           MOVE 'W'       @@HIND  1        **2     SO1166 S01195
     C**********           ELSE                            X*2     SO1166 S01195
     C**********           MOVE 'H'       @@HIND           **2     SO1166 S01195
     C**********           END                             E*2     SO1166 S01195
     C**********           END                             E1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*INPUT CURRENCY IS NOT IN ARRAY                         SO1166 S01195
     C********** *IN81     IFEQ '0'                        B1      SO1166 S01195
     C**********                                                   SO1166 S01195
     C***IF*INCLUDE/EXCLUDE INDICATOR EQ 'I'                       SO1166 S01195
     C********** INEX      IFEQ 'I'                        B*2     SO1166 S01195
     C**********           MOVE 'W'       @@HIND           **2     SO1166 S01195
     C**********           ELSE                            X*2     SO1166 S01195
     C**********           MOVE 'H'       @@HIND           **2     SO1166 S01195
     C**********           END                             E*2     SO1166 S01195
     C**********           END                             E1      SO1166 S01195
     C********** ZA0839    ENDSR                                   SO1166 S01195
      /EJECT                                                              SO1166
      *****************************************************************
      *                                                               *
      * *PSSR - PROGRAM ERROR SUBROUTINE                              *
      *                                                               *
      * CALLED BY:   EXECUTES WHENEVER PROGRAM ERROR OCCURS           *
      *                                                               *
      * CALLS:                                                        *
      *                                                               *
      * USES :  @ERR1  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
      *         @TERM  - TERMINATION PARAMETER                        *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR
      *
      ** SET @ERR1 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR1     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR1   1        *1
     C                     MOVE '1'       *INU6            *1
      *                                                    *1
      ** SET UP FIELDS IN LOCAL DATA AREA                  *1
     C*******              MOVEL'MM0084'  DBPGM            *1             SO1166
     C**********           MOVEL'DL3210'  DBPGM            *1      SO1166 S01117
     C                     MOVEL'TM3210'  DBPGM            *1             S01117
     C                     MOVE '991'     DBASE            *1
      *                                                    *1
      ** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     MOVE 'E'       @TERM
     C                     END                             E1
      *
      ** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * INFSR - FILE EXCEPTION/ERROR SUBROUTINE                       *
      *                                                               *
      * CALLED BY:   EXECUTES WHENEVER FILE EXCEPTION/ERROR OCCURS    *
      *                                                               *
      * CALLS:                                                        *
      *                                                               *
      * USES :  @ERR2  - FLAG TO PREVENT LOOPING IF FURTHER ERRORS    *
      *         @TERM  - TERMINATION PARAMETER                        *
      *         @FILE  - FILENAME FOR WHICH EXCEPTION/ERROR           *
      *                  OCCURRED (POSNS 201-208 OF PSDS)             *
      *                                                               *
      *****************************************************************
      *
     C           INFSR     BEGSR
      *
      ** SET @ERR2 TO 'Y' TO PREVENT LOOPING IF FURTHER ERRORS
     C           @ERR2     IFNE 'Y'                        B1
     C                     MOVE 'Y'       @ERR2   1        *1
     C                     MOVE '1'       *INU7            *1
     C                     MOVE '1'       *INU8            *1
      *                                                    *1
      ** SET UP FIELDS IN LOCAL DATA AREA                  *1
     C                     MOVEL@FILE     DBFILE           *1
     C                     MOVE '992'     DBASE            *1
      *                                                    *1
      ** DUMP THE PROGRAM                                  *1
     C                     DUMP                            *1
     C                     MOVE 'E'       @TERM
     C                     END                             E1
      *
      ** TERMINATE THE PROGRAM
     C                     MOVE '1'       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *
      *****************************************************************
      /EJECT
** @OVR  CL COMMAND FOR CALL TO QCMDEXC                             S01166E20774
OVRDSPF FILE(TM3210DD) WAITRCD(9999)                                S01166S01117
** CPY@ - COPYRIGHT STATEMENT                                             S01117
(c) Misys International Banking Systems Ltd. 2001
