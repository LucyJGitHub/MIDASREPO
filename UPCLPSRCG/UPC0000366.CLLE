/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas UP OTU post upgrade')                           */
/*********************************************************************/
/*                                                                   */
/*       Midas - Bridge                                              */
/*                                                                   */
/*       UPC0000366- OTU post upgrade                                */
/*                                                                   */
/*       Function: This program performs the post upgrade tasks      */
/*                 similar to UPC000036.                             */
/*                                                                   */
/*       (c) Finastra International Limited 2022                     */
/*                                                                   */
/*       Last Amend No. MD061906           Date 23Sep23              */
/*       Prev Amend No. MD061880           Date 14Sep23              */
/*                      MD061516           Date 15Jun23              */
/*                      CUP044   *CREATE   Date 22May22              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD061906 - Bridge journalling improvement                   */
/*       MD061880 - Include Fix package installation                 */
/*       MD061516 - SCSWPSVL is removed from Bridge library after    */
/*                  database upgrade (same as MD060005)              */
/*       CUP044 - One Touch Bridge Automation Changes - Release/     */
/*                Patch Upgrade                                      */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&LAYER)

             DCL        VAR(&LAYER) TYPE(*CHAR) LEN(7)

             DCL        VAR(&PFX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BRGSRCLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BRGBRGLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&IASP_YN) TYPE(*CHAR) LEN(1)
             DCL        VAR(&IASP) TYPE(*CHAR) LEN(10)

             DCL        VAR(&MENUOPT) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SUBOPT) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SAVLIBL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&CHECKSVAL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STATUS) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ERRPGM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FAIL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ERRORFLAG) TYPE(*CHAR) LEN(1)
             DCL        VAR(&SRERROR) TYPE(*INT)
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(7)
             DCL        VAR(&RTNFLAG) TYPE(*CHAR) LEN(1)

             DCL        VAR(&SVAL1) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK1) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL2) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK2) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL3) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK3) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL4) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK4) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL5) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK5) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL6) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK6) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL7) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK7) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL8) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK8) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL9) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK9) TYPE(*CHAR) LEN(20)
             DCL        VAR(&SVAL10) TYPE(*CHAR) LEN(200)
             DCL        VAR(&SVALK0) TYPE(*CHAR) LEN(20)

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2014')

/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))

/* Prepare temporary files, job, etc. */
             CALLSUBR   SUBR(PREPARE)

/* Retrieve required System Values. */
             CALLSUBR   SUBR(RTVSVAL)
/* For a general error just report. */
             IF         COND(&ERRORFLAG *EQ 'E') THEN(DO)
                GOTO       CMDLBL(ERROR)
             ENDDO
/* If a System Value is blank then send specific error message. */
             IF         COND(&ERRORFLAG *EQ 'B') THEN(DO)
                CALLSUBR   SUBR(BLANKSVAL)
                GOTO       CMDLBL(ENDPGM)
             ENDDO

/* Set up variables for the program. */
             CHGVAR     VAR(&MENUOPT) VALUE('PostUpgrade')

/* Set up library list. */
             CALLSUBR   SUBR(SETUPLIBL)

/* Make sure all mandatory features have their password set */                          /*MD059593*/
/* Check that VLDL does exist in &BRGBRGLIB */                                          /*MD059593*/
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)                               /*MD059593*/
             CHKOBJ     OBJ(&BRGBRGLIB/UPVLDZVL) OBJTYPE(*VLDL)                         /*MD059593*/
             MONMSG     MSGID(CPF9801) EXEC(DO)                                         /*MD059593*/
/**********     GOTO       CMDLBL(RUNUPGPGM)                */                 /*MD059593 MD059471*/
             GOTO       CMDLBL(SWIFTVLDL)                                               /*MD059471*/
             ENDDO       /*MD059593*/
             CALL       PGM(UP000712) PARM(&BRGBRGLIB &PFX &RTNCODE)                    /*MD059593*/
             IF         COND(&RTNCODE *NE ' ') THEN(DO)                                 /*MD059593*/
                CHGVAR     VAR(&ERRPGM) VALUE('UP000712')                               /*MD059593*/
                GOTO       CMDLBL(ERROR)                                                /*MD059593*/
             ENDDO       /*MD059593*/
                                                                                        /*MD059471*/
SWIFTVLDL:                                                                              /*MD059471*/
/**********  CHKOBJ     OBJ(&BRGBRGLIB/SCSWPSVL) OBJTYPE(*VLDL)  */            /*MD059471 MD061516*/
             CHKOBJ     OBJ(&BRGBRGLIB/SCSWPSVLB) OBJTYPE(*VLDL)                        /*MD061516*/
             MONMSG     MSGID(CPF9801) EXEC(DO)                                         /*MD059471*/
                GOTO       CMDLBL(RUNUPGPGM)                                            /*MD059471*/
             ENDDO                                                                      /*MD059471*/
             CALL       PGM(UP000714) PARM(&BRGBRGLIB &PFX &RTNCODE)                    /*MD059471*/
             IF         COND(&RTNCODE *NE ' ') THEN(DO)                                 /*MD059471*/
                CHGVAR     VAR(&ERRPGM) VALUE('UP000712')                               /*MD059471*/
                GOTO       CMDLBL(ERROR)                                                /*MD059471*/
             ENDDO                                                                      /*MD059471*/
             ENDDO       /*MD059593*/
                                                                                        /*MD059593*/
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)                             /*MD059593*/
             CHKOBJ     OBJ(&BRGBRGLIB/UPVLDGVL) OBJTYPE(*VLDL)                         /*MD059593*/
             MONMSG     MSGID(CPF9801) EXEC(DO)                                         /*MD059593*/
                GOTO       CMDLBL(RUNUPGPGM)                                            /*MD059593*/
             ENDDO       /*MD059593*/
             CALL       PGM(UP000713) PARM(&BRGBRGLIB &PFX &RTNCODE)                    /*MD059593*/
             IF         COND(&RTNCODE *NE ' ') THEN(DO)                                 /*MD059593*/
                CHGVAR     VAR(&ERRPGM) VALUE('UP000713')                               /*MD059593*/
                GOTO       CMDLBL(ERROR)                                                /*MD059593*/
             ENDDO       /*MD059593*/
             ENDDO       /*MD059593*/
                                                                                        /*MD059593*/
                                                                                        /*MD059593*/
/* Run Upgrade Programs after deliverable data changes. */                                /*CUP042*/
RUNUPGPGM:                                                                                /*CUP042*/
             CHGVAR     VAR(&SUBOPT) VALUE('RunUpgradePgmsPostDD')                        /*CUP042*/
             CHGVAR     VAR(&ERRPGM) VALUE('UP000012')                                    /*CUP042*/
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)                                                 /*CUP042*/
             IF         COND(&STATUS *EQ 'E') THEN(DO)                                    /*CUP042*/
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')                                 /*CUP042*/
                GOTO       CMDLBL(ERROR)                                                  /*CUP042*/
             ENDDO       /*CUP042*/
             IF         COND(&STATUS *NE 'C') THEN(DO)                                    /*CUP042*/
                CALL       PGM(UP000012) PARM(&LAYER '*POSTDD' &RTNFLAG)                  /*CUP042*/
                CALLSUBR   SUBR(ERRORHAND1) RTNVAL(&SRERROR)                              /*CUP042*/
                IF         COND(&SRERROR *EQ 1) THEN(DO)                                  /*CUP042*/
                   GOTO       CMDLBL(ENDPGM)                                              /*CUP042*/
                ENDDO       /*CUP042*/
                IF         COND(&SRERROR *EQ 2) THEN(DO)                                  /*CUP042*/
                   GOTO       CMDLBL(ERROR)                                               /*CUP042*/
                ENDDO       /*CUP042*/
             ENDDO       /*CUP042*/

/* Update adoption programs. */
ADOPTPGMS:
             CHGVAR     VAR(&SUBOPT) VALUE('AdoptionPgms')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC000031')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC000031) PARM(&LAYER &PFX &IASP &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Create stored procedures. */
PROCEDURES:
/* If no source library has been provided, skip and go to ROUTE_ENTS */                 /*MD061880*/
             IF         COND(&BRGSRCLIB *EQ ' ') THEN(DO)                               /*MD061880*/
             GOTO       CMDLBL(ROUTE_ENTS)                                              /*MD061880*/
             ENDDO                                                                      /*MD061880*/
                                                                                        /*MD061880*/
             CHGVAR     VAR(&SUBOPT) VALUE('Procedures')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC002001')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC002001) PARM('*UPG' &LAYER &PFX +
                             &BRGSRCLIB &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Set routing entries. */
ROUTE_ENTS:
             CHGVAR     VAR(&SUBOPT) VALUE('RoutingEntries')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC000119')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC000119) PARM(&LAYER &PFX &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Reset SQL auto-generated fields. */
SQLAUTOGEN:
             CHGVAR     VAR(&SUBOPT) VALUE('AutoGenFields')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC000004')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC000004) PARM('*UPG' &LAYER &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Journalling is now done in DBU/aDBU */                                               /*MD061906*/
/**Start*journaling. */                                                                 /*MD061906*/
/*STARTJRN:*/                                                                           /*MD061906*/
/**********  CHGVAR     VAR(&SUBOPT) VALUE('StartJournaling') */                        /*MD061906*/
/**********  IF         COND(&LAYER *EQ '*ZONE') THEN(DO) */                            /*MD061906*/
/**********     CHGVAR     VAR(&ERRPGM) VALUE('SCBEGINJRN') */                          /*MD061906*/
/**********  ENDDO */                                                                   /*MD061906*/
/**********  IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO) */                          /*MD061906*/
/**********     CHGVAR     VAR(&ERRPGM) VALUE('GPBEGINJRN') */                          /*MD061906*/
/**********  ENDDO */                                                                   /*MD061906*/
/**********  CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS) */                                            /*MD061906*/
/**********  IF         COND(&STATUS *EQ 'E') THEN(DO) */                               /*MD061906*/
/**********     CHGVAR     VAR(&ERRPGM) VALUE('UP000009') */                            /*MD061906*/
/**********     GOTO       CMDLBL(ERROR) */                                             /*MD061906*/
/**********  ENDDO */                                                                   /*MD061906*/
/**********  IF         COND(&STATUS *NE 'C') THEN(DO) */                               /*MD061906*/
/**********     CALL       PGM(&ERRPGM) PARM(&PFX '*START') */                          /*MD061906*/
/**********     MONMSG     MSGID(CPF0000) EXEC(DO) */                                   /*MD061906*/
/**********        CHGVAR     VAR(&RTNFLAG) VALUE('E') */                               /*MD061906*/
/**********     ENDDO */                                                                /*MD061906*/
/**********     CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR) */                         /*MD061906*/
/**********     IF         COND(&SRERROR *EQ 2) THEN(DO) */                             /*MD061906*/
/**********        GOTO       CMDLBL(ERROR) */                                          /*MD061906*/
/**********     ENDDO */                                                                /*MD061906*/
/**********  ENDDO */                                                                   /*MD061906*/

/* Start triggering. */
STARTTRG:
             CHGVAR     VAR(&SUBOPT) VALUE('StartTriggering')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC000149')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC000149) PARM(&LAYER &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Start subsystem. */
STARTSBS:
             CHGVAR     VAR(&SUBOPT) VALUE('StartSubsystem')
             CHGVAR     VAR(&ERRPGM) VALUE('UPC000146')
             CALL       PGM(UP000009) PARM('*CHK' &MENUOPT &SUBOPT +
                          &LAYER &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&STATUS *NE 'C') THEN(DO)
                CALL       PGM(UPC000146) PARM(&LAYER &PFX &RTNFLAG)
                CALLSUBR   SUBR(ERRORHAND2) RTNVAL(&SRERROR)
                IF         COND(&SRERROR *EQ 2) THEN(DO)
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO

/* Reset settings from the start of the program. */
             CALL       PGM(UP000009) PARM('*RST' ' ' ' ' ' ' &STATUS)
             IF         COND(&STATUS *EQ 'E') THEN(DO)
                CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                GOTO       CMDLBL(ERROR)
             ENDDO
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
                IF         COND(&SAVLIBL *EQ 'Y') THEN(DO)
                   RSTLIBL    SAVEDLIBL(UPC000036)
                   MONMSG     MSGID(CPF0000 MCH0000)
                ENDDO
             ENDDO

             GOTO       CMDLBL(ENDPGM)
ERROR:
             CHGJOB     SWS(XXXXXX11)
             DMPCLPGM

ENDPGM:
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
/**********     RSTLIBL    SAVEDLIBL(UPC000029)                     */                  /*MD054336*/
                IF         COND(&SAVLIBL *EQ 'Y') THEN(DO)                              /*MD054336*/
                   RSTLIBL    SAVEDLIBL(UPC000036)                                      /*MD054336*/
                   MONMSG     MSGID(CPF0000 MCH0000)                                    /*MD054336*/
                ENDDO       /*MD054336*/
             ENDDO
             ELSE       CMD(DO)
                RMVLIBLE   LIB(&BRGBRGLIB)
                MONMSG     MSGID(CPF0000)
             ENDDO

/******************************************************************************/
/*                                                                            */
/* Subroutine to prepare for run.                                             */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(PREPARE)

             CHGJOB     SWS(XXXXXX00)

/* Create data area for screen message handling. */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800)

/* Create error handling file in QTEMP. */
             DLTF       FILE(QTEMP/UPERRMQT)
             MONMSG     MSGID(CPF0000)
             CRTPF      FILE(QTEMP/UPERRMQT) RCDLEN(100)

             ENDSUBR

/******************************************************************************/
/*                                                                            */
/* Subroutine to retrieve System Values.                                      */
/* Note: even if the job is being run for a zone it still needs to retrieve   */
/*  some global values.                                                       */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(RTVSVAL)

/* Retrieve the appropriate System Values and perform other layer specific */
/*  code.                                                                  */
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
                CHGVAR     VAR(&SVALK3) VALUE('BrgMidasSystemPrefix')
                CHGVAR     VAR(&SVALK4) VALUE('BrgDeliveredBrgLib')
                CHGVAR     VAR(&SVALK5) VALUE('BrgDeliveredSrcLib')
                CHGVAR     VAR(&SVALK6) VALUE('BrgDeliveredStrPrLib')                     /*CUP044*/
                CHGVAR     VAR(&ERRPGM) VALUE('AOSVALR0')
                CALL       PGM(AOSVALR0) PARM(&RTNCODE &SVALK1 &SVAL1 +
                             &SVALK2 &SVAL2 &SVALK3 &SVAL3 &SVALK4 +
                             &SVAL4 &SVALK5 &SVAL5 &SVALK6 &SVAL6 +
                             &SVALK7 &SVAL7 &SVALK8 &SVAL8 &SVALK9 +
                             &SVAL9 &SVALK0 &SVAL10)
                CHGVAR     VAR(&CHECKSVAL) VALUE('Z')
                CALLSUBR   SUBR(CHECKSVAL)
                CHGVAR     VAR(&PFX) VALUE(%SST(&SVAL3 1 2))
                CHGVAR     VAR(&BRGBRGLIB) VALUE(%SST(&SVAL4 1 10))
                IF         COND(&SVAL6 *EQ ' ') THEN(DO)                                  /*CUP044*/
                CHGVAR     VAR(&BRGSRCLIB) VALUE(%SST(&SVAL5 1 10))
                ENDDO                                                                     /*CUP044*/
                ELSE       CMD(DO)                                                        /*CUP044*/
                CHGVAR     VAR(&BRGSRCLIB) VALUE(%SST(&SVAL6 1 10))                       /*CUP044*/
                ENDDO                                                                     /*CUP044*/

                CHGVAR     VAR(&SVALK1) VALUE('IASPinstallation')
                CHGVAR     VAR(&SVALK2) VALUE('IASPgroup')
                CHGVAR     VAR(&SVALK3) VALUE(' ')
                CHGVAR     VAR(&SVALK4) VALUE(' ')
                CHGVAR     VAR(&SVALK5) VALUE(' ')
                CHGVAR     VAR(&ERRPGM) VALUE('GPAOSVALR0')
                CALL       PGM(GPAOSVALR0) PARM(&RTNCODE &SVALK1 &SVAL1 +
                             &SVALK2 &SVAL2 &SVALK3 &SVAL3 &SVALK4 +
                             &SVAL4 &SVALK5 &SVAL5 &SVALK6 &SVAL6 +
                             &SVALK7 &SVAL7 &SVALK8 &SVAL8 &SVALK9 +
                             &SVAL9 &SVALK0 &SVAL10)
                CHGVAR     VAR(&CHECKSVAL) VALUE('G')
                CALLSUBR   SUBR(CHECKSVAL)
                CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))
                IF         COND(&IASP_YN *EQ 'Y') THEN(DO)
                   CHGVAR     VAR(&IASP) VALUE(%SST(&SVAL2 1 10))
                ENDDO
             ENDDO

             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
                CHGVAR     VAR(&SVALK1) VALUE('IASPinstallation')
                CHGVAR     VAR(&SVALK2) VALUE('IASPgroup')
                CHGVAR     VAR(&SVALK3) VALUE('BrgMidasGlobalPrefix')
                CHGVAR     VAR(&SVALK4) VALUE('BrgDeliveredBrgLib')
                CHGVAR     VAR(&SVALK5) VALUE('BrgDeliveredSrcLib')
                CHGVAR     VAR(&SVALK6) VALUE('BrgDeliveredStrPrLib')                     /*CUP044*/
                CHGVAR     VAR(&ERRPGM) VALUE('GPAOSVALR0')
                CALL       PGM(GPAOSVALR0) PARM(&RTNCODE &SVALK1 &SVAL1 +
                             &SVALK2 &SVAL2 &SVALK3 &SVAL3 &SVALK4 +
                             &SVAL4 &SVALK5 &SVAL5 &SVALK6 &SVAL6 +
                             &SVALK7 &SVAL7 &SVALK8 &SVAL8 &SVALK9 +
                             &SVAL9 &SVALK0 &SVAL10)
                CALLSUBR   SUBR(CHECKSVAL)
                CHGVAR     VAR(&IASP_YN) VALUE(%SST(&SVAL1 1 1))
                IF         COND(&IASP_YN *EQ 'Y') THEN(DO)
                   CHGVAR     VAR(&IASP) VALUE(%SST(&SVAL2 1 10))
                ENDDO
                CHGVAR     VAR(&PFX) VALUE(%SST(&SVAL3 1 2))
                CHGVAR     VAR(&BRGBRGLIB) VALUE(%SST(&SVAL4 1 10))
                IF         COND(&SVAL6 *EQ ' ') THEN(DO)                                  /*CUP044*/
                CHGVAR     VAR(&BRGSRCLIB) VALUE(%SST(&SVAL5 1 10))
                ENDDO                                                                     /*CUP044*/
                ELSE       CMD(DO)                                                        /*CUP044*/
                CHGVAR     VAR(&BRGSRCLIB) VALUE(%SST(&SVAL6 1 10))                       /*CUP044*/
                ENDDO                                                                     /*CUP044*/
             ENDDO

             ENDSUBR

/******************************************************************************/
/*                                                                            */
/* Subroutine for checking the call to System Values.                         */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(CHECKSVAL)

             IF         COND(&RTNCODE *NE ' ') THEN(DO)
                CHGVAR     VAR(&ERRORFLAG) VALUE('E')
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
                IF         COND(&CHECKSVAL *EQ 'G') THEN(DO)
                   IF         COND(%SST(&SVAL1 1 1) *EQ '*') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                   ENDDO
                   IF         COND(&SVAL1 *EQ ' ') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                   ENDDO
/* As this is a check for the IASP group it is only relevant if IASP is being */
/*  used.                                                                     */
                   IF         COND(%SST(&SVAL1 1 1) *EQ 'Y') THEN(DO)
                      IF         COND(%SST(&SVAL2 1 1) *EQ '*') THEN(DO)
                         CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                      ENDDO
                      IF         COND(&SVAL2 *EQ ' ') THEN(DO)
                         CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                      ENDDO
                   ENDDO
                ENDDO
                IF         COND(&CHECKSVAL *EQ 'Z') THEN(DO)
                   IF         COND(%SST(&SVAL3 1 1) *EQ '*') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                   ENDDO
                   IF         COND(&SVAL3 *EQ ' ') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                   ENDDO
                   IF         COND(%SST(&SVAL4 1 1) *EQ '*') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                   ENDDO
                   IF         COND(&SVAL4 *EQ ' ') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                   ENDDO
                   IF         COND(%SST(&SVAL5 1 1) *EQ '*') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                   ENDDO
                   IF         COND(&SVAL5 *EQ ' ') THEN(DO)
/* BrgDeliveredSrcLib can be blank if Fix package */                                    /*MD061880*/
/**********           CHGVAR     VAR(&ERRORFLAG) VALUE('B') */                          /*MD061880*/
                   ENDDO
                ENDDO
             ENDDO

             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
                IF         COND(%SST(&SVAL1 1 1) *EQ '*') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                ENDDO
                IF         COND(&SVAL1 *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                ENDDO
/* As this is a check for the IASP group it is only relevant if IASP is being */
/*  used.                                                                     */
                IF         COND(&SVAL1 *EQ 'Y') THEN(DO)
                   IF         COND(%SST(&SVAL2 1 1) *EQ '*') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                   ENDDO
                   IF         COND(&SVAL2 *EQ ' ') THEN(DO)
                      CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                   ENDDO
                ENDDO
                IF         COND(%SST(&SVAL3 1 1) *EQ '*') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                ENDDO
                IF         COND(&SVAL3 *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                ENDDO
                IF         COND(%SST(&SVAL4 1 1) *EQ '*') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                ENDDO
                IF         COND(&SVAL4 *EQ ' ') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('B')
                ENDDO
                IF         COND(%SST(&SVAL5 1 1) *EQ '*') THEN(DO)
                   CHGVAR     VAR(&ERRORFLAG) VALUE('E')
                ENDDO
                IF         COND(&SVAL5 *EQ ' ') THEN(DO)
/* BrgDeliveredSrcLib can be blank if Fix package */                                    /*MD061880*/
/**********        CHGVAR     VAR(&ERRORFLAG) VALUE('B') */                             /*MD061880*/
                ENDDO
             ENDDO

             ENDSUBR

/******************************************************************************/
/*                                                                            */
/* Subroutine for reporting blank System Values.                              */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(BLANKSVAL)


             CHGJOB     SWS(XXXXXX11)
             DMPCLPGM

             ENDSUBR

/******************************************************************************/
/*                                                                            */
/* Subroutine to set up the library list.                                     */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(SETUPLIBL)

             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
                CALL       PGM(UPC0014) PARM(&PFX)
             ENDDO
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
                SAVLIBL    SAVDTL(UPC000036)
                CHGVAR     VAR(&SAVLIBL) VALUE('Y')
                CALL       PGM(GPC000016) PARM(&PFX)
             ENDDO
             RMVLIBLE   LIB(&BRGBRGLIB)
             MONMSG     MSGID(CPF0000)
             ADDLIBLE   LIB(&BRGBRGLIB) POSITION(*FIRST)

             ENDSUBR

/******************************************************************************/
/*                                                                            */
/* Subroutine for handling errors in programs using driving file.             */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(ERRORHAND1)

             IF         COND(&RTNFLAG *NE ' ') THEN(DO)
                CHGVAR     VAR(&SRERROR) VALUE(2)
                GOTO       CMDLBL(EXITEHSR1)
             ENDDO
             CALL       PGM(UP000011) PARM('*CHK' &ERRPGM &FAIL)
             IF         COND(&FAIL *EQ 'Y') THEN(DO)
                CHGVAR     VAR(&STATUS) VALUE('F')
                CALL       PGM(UP000009) PARM('*UPD' &MENUOPT &SUBOPT +
                             &LAYER &STATUS)
                IF         COND(&STATUS *EQ 'E') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                   CHGVAR     VAR(&SRERROR) VALUE(2)
                   GOTO       CMDLBL(EXITEHSR1)
                ENDDO
                CHGJOB     SWS(XXXXXX11)
             DMPCLPGM
                CHGVAR     VAR(&SRERROR) VALUE(1)
                GOTO       CMDLBL(EXITEHSR1)
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&STATUS) VALUE('C')
                CALL       PGM(UP000009) PARM('*UPD' &MENUOPT &SUBOPT +
                             &LAYER &STATUS)
                IF         COND(&STATUS *EQ 'E') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                   CHGVAR     VAR(&SRERROR) VALUE(2)
                   GOTO       CMDLBL(EXITEHSR1)
                ENDDO
                CALL       PGM(UP000011) PARM('*RST' ' ' ' ' ' ')
             ENDDO

EXITEHSR1:
             ENDSUBR    RTNVAL(&SRERROR)

/******************************************************************************/
/*                                                                            */
/* Subroutine for handling errors in programs not using driving file.         */
/*                                                                            */
/******************************************************************************/
             SUBR       SUBR(ERRORHAND2)

             IF         COND(&RTNFLAG *NE ' ') THEN(DO)
                CHGVAR     VAR(&STATUS) VALUE('F')
                CALL       PGM(UP000009) PARM('*UPD' &MENUOPT &SUBOPT +
                             &LAYER &STATUS)
                IF         COND(&STATUS *EQ 'E') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                   CHGVAR     VAR(&SRERROR) VALUE(2)
                   GOTO       CMDLBL(EXITEHSR2)
                ENDDO
                CHGVAR     VAR(&SRERROR) VALUE(2)
                GOTO       CMDLBL(EXITEHSR2)
             ENDDO
             ELSE       CMD(DO)
                CHGVAR     VAR(&STATUS) VALUE('C')
                CALL       PGM(UP000009) PARM('*UPD' &MENUOPT &SUBOPT +
                             &LAYER &STATUS)
                IF         COND(&STATUS *EQ 'E') THEN(DO)
                   CHGVAR     VAR(&ERRPGM) VALUE('UP000009')
                   CHGVAR     VAR(&SRERROR) VALUE(2)
                   GOTO       CMDLBL(EXITEHSR2)
                ENDDO
             ENDDO

EXITEHSR2:
             ENDSUBR    RTNVAL(&SRERROR)

             ENDPGM
