/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas UP On-screen compare libraries')                */
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC000110V - Validity checker for BRIDGECOMP                */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2005           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*       Last Amend No. CSM005  *CREATE    Date 07Sep05              */
/*       Prev Amend No. xxxxxx             Date ddMmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CSM005 - New program to control Bridge compares.            */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PREFIX &BASLIB &CMPLIB &MRGLIB &WRKLIB +
                          &JOBD)
 
             DCL        VAR(&PREFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&BASLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CMPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MRGLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&WRKLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBD) TYPE(*CHAR) LEN(20)
 
             DCL        VAR(&JOBDNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBDLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GVLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(1)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2005')
 
/* Global monitor message. */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
/* Set up job description. */
             CHGVAR     VAR(&JOBDNAME) VALUE(%SST(&JOBD 1 10))
             CHGVAR     VAR(&JOBDLIB) VALUE(%SST(&JOBD 11 10))
 
/* Set library names to retrieve UPJOBE* files. */
             CHGVAR     VAR(&GVLIB) VALUE(&PREFIX *TCAT 'GVLIB')
             CHGVAR     VAR(&GPLIB) VALUE(&PREFIX *TCAT 'GPLIB')
 
/* Check that the base library exists. */
             CHKOBJ     OBJ(&BASLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                             MSGDTA('0000Library' *BCAT &BASLIB *BCAT +
                             'does not exist.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that the comparison library exists. */
             CHKOBJ     OBJ(&CMPLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                             MSGDTA('0000Library' *BCAT &CMPLIB *BCAT +
                             'does not exist.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that the new source library exists. */
             CHKOBJ     OBJ(&MRGLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                             MSGDTA('0000Library' *BCAT &MRGLIB *BCAT +
                             'does not exist.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that the work library exists. */
             CHKOBJ     OBJ(&WRKLIB) OBJTYPE(*LIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                             MSGDTA('0000Library' *BCAT &WRKLIB *BCAT +
                             'does not exist.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that global libraries exist but only if UPJOBEPD is not already */
/*  in the work library. */
             CHKOBJ     OBJ(&WRKLIB/UPJOBEPD) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CHKOBJ     OBJ(&GPLIB) OBJTYPE(*LIB)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                                MSGDTA('0000Library' *BCAT &GPLIB *BCAT +
                                'does not exist.') MSGTYPE(*DIAG)
                   CHGVAR     VAR(&ERROR) VALUE('Y')
                   GOTO       CMDLBL(ERROR)
                ENDDO
                CHKOBJ     OBJ(&GVLIB) OBJTYPE(*LIB)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                                MSGDTA('0000Library' *BCAT &GVLIB *BCAT +
                                'does not exist.') MSGTYPE(*DIAG)
                   CHGVAR     VAR(&ERROR) VALUE('Y')
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO
 
/* Check that UPJOBE* files exist in expected libraries but only if UPJOBEPD */
/*  does not already exist in the work library.                              */
             CHKOBJ     OBJ(&WRKLIB/UPJOBEPD) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                CHKOBJ     OBJ(&GPLIB/UPJOBEPD) OBJTYPE(*FILE)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                                MSGDTA('0000File UPJOBEPD does not exist +
                                in' *BCAT &GPLIB *TCAT '.') MSGTYPE(*DIAG)
                   CHGVAR     VAR(&ERROR) VALUE('Y')
                   GOTO       CMDLBL(ERROR)
                ENDDO
                CHKOBJ     OBJ(&GVLIB/UPJOBEL0) OBJTYPE(*FILE)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                                MSGDTA('0000File UPJOBEL0 does not exist +
                                in' *BCAT &GVLIB *TCAT '.') MSGTYPE(*DIAG)
                   CHGVAR     VAR(&ERROR) VALUE('Y')
                   GOTO       CMDLBL(ERROR)
                ENDDO
                CHKOBJ     OBJ(&GVLIB/UPJOBEL1) OBJTYPE(*FILE)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                                MSGDTA('0000File UPJOBEL1 does not exist +
                                in' *BCAT &GVLIB *TCAT '.') MSGTYPE(*DIAG)
                   CHGVAR     VAR(&ERROR) VALUE('Y')
                   GOTO       CMDLBL(ERROR)
                ENDDO
             ENDDO
 
/* Check that job desciption/library combination exists. */
             CHKOBJ     OBJ(&JOBDLIB/&JOBDNAME) OBJTYPE(*JOBD)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) MSGDTA('0000Job +
                             description' *BCAT &JOBDNAME *BCAT 'in' +
                             *BCAT &JOBDLIB *BCAT 'does not exist.') +
                             MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
             MONMSG     MSGID(CPF9810) EXEC(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) +
                             MSGDTA('0000Library' *BCAT &JOBDLIB *BCAT +
                             'does not exist.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that the Base and Comparison libraries are not the same. */
             IF         COND(&BASLIB *EQ &CMPLIB) THEN(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) MSGDTA('0000The +
                             base and comparison libraries must not be +
                             the same.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
/* Check that the Merge library is not the same as either the Base */
/*  or the Comparison library.                                     */
             IF         COND(&MRGLIB *EQ &BASLIB *OR &MRGLIB *EQ +
                          &CMPLIB) THEN(DO)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) MSGDTA('0000The +
                             merge library must not be the same as the +
                             base or comparison library.') MSGTYPE(*DIAG)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
             GOTO       CMDLBL(ENDPGM)
 
 ERROR:
             IF         COND(&ERROR *EQ 'Y') THEN(DO)
                SNDPGMMSG  MSGID(CPF0002) MSGF(QCPFMSG) MSGTYPE(*ESCAPE)
             ENDDO
 ENDPGM:
             ENDPGM
