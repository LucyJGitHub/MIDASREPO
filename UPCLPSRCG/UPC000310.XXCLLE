/*********************************************************************/
/*S*D****CLPBASEBND***************************************************/
/*E*I****TEXT('Midas*UP*Copy*Orig*UDF*extension*files*to*New')********/
/*********************************************************************/
/*                                                                   */
/*       Midas - Bridge Upgrade Program                              */
/*                                                                   */
/*       UPC000310 - Copy original UDF extension files to the       **/
/*                   new system library                             **/
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2004           */
/*                                                                   */
/*       Last Amend No. MD034724 *REDUNDANT  Date 05Jun15            */
/*       Prev Amend No. CUP002             Date 19Aug10              */
/*                      BUG27793           Date 08Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/*                      241378             Date 26Feb07              */
/*                      243281             Date 24Oct06              */
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK025             Date 22Jun06              */
/*                      CPK024             Date 10Feb06              */
/*                      BG8399 *CREATE     Date 05Sep05              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD034724 - Replaced by new program to handle core changes.  */
/*       CUP002 - New utility to rename zone.  Recompile.            */
/*       BUG27793 - Make migration multi-streamed.                   */
/*       241378 - Applied core fix CPK025 to resolve issue on        */
/*                delete of logical views.                           */
/*       243281 - Error in original code stops UDF files from        */
/*                copying.                                           */
/*              - applied by CPK025                                  */
/*       CPK025 - Handle views if built over the tables.             */
/*       CPK024 - Creation of MIDASMSG should be in calling program. */
/*       BG8399 - Program to aid the migration of UDF Extension      */
/*                files                                              */
/*                                                                   */
/*********************************************************************/
/**********  PGM        PARM(&WRKLIB &FROMLIB &TOLIB)                                  */ /*CPK025*/
             PGM        PARM(&FROMLIB &TOLIB)                                             /*CPK025*/

/**********  DCL        VAR(&WRKLIB) TYPE(*CHAR) LEN(10)                               */ /*CPK025*/
             DCL        VAR(&TOPFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&FROMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TOLIB) TYPE(*CHAR) LEN(10)

/**********  DCL        VAR(&STM_STR) TYPE(*CHAR) LEN(80)                            */ /*BUG27793*/
/**********  DCL        VAR(&DBOWNER) TYPE(*CHAR) LEN(10)                              */ /*CPK025*/
/**********  DCL        VAR(&DBAUTL) TYPE(*CHAR) LEN(10)                               */ /*CPK025*/
             DCL        VAR(&VIEWS) TYPE(*CHAR) LEN(5)                                    /*CPK025*/
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE('N')                   /*BUG27793*/

/**********  DCLF       FILE(UPUDFUPD)                                                 */ /*CPK024*/
             DCLF       FILE(SMGNMGPD)                                                    /*CPK024*/

             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2005')

/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))

             CHGJOB     SWS(XXXXXX00)

             CALL       PGM(SM000008) PARM('UPC000310' '*PGM' +
                          '*UPDATE' 'ACTIVE')                                           /*BUG27793*/

/**Create*data*area*MIDASMSG*in*QTEMP**/ /*                                            */ /*CPK024*/
/**********  DLTDTAARA  DTAARA(QTEMP/MIDASMSG)                                         */ /*CPK024*/
/**********  MONMSG     MSGID(CPF0000)                                                 */ /*CPK024*/
/**********  CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +                  */ /*CPK024*/
/**********               VALUE(' ')                                                   */ /*CPK024*/

/**********  CHGVAR     VAR(&TOPFIX) VALUE('VALUE(%SST(&TOLIB 1 2)')                   */ /*CPK025*/
             CHGVAR     VAR(&TOPFIX) VALUE(%SST(&TOLIB 1 2))                              /*CPK025*/
/**********  CHGVAR     VAR(&DBOWNER) VALUE(&TOPFIX *CAT 'OWNER')                      */ /*CPK025*/
/**********  CHGVAR     VAR(&DBAUTL) VALUE(&TOPFIX *CAT 'DATABASE')                    */ /*CPK025*/

/**********  DSPFD      FILE(&FROMLIB/T_GZ*) TYPE(*RCDFMT)   +                         */ /*CPK025*/
/**********             OUTPUT(*OUTFILE) OUTFILE(&WRKLIB/UDFEXTFLDF)                   */ /*CPK025*/

/**********  DSPFD      FILE(&TOLIB/T_GZ*) TYPE(*RCDFMT)     +                         */ /*CPK025*/
/**********             OUTPUT(*OUTFILE) OUTFILE(&WRKLIB/UDFEXTFLDT)                   */ /*CPK025*/

/**Create*and*rename*temporary*source*file*for*RUNSQLSTM.**/ /*                        */ /*CPK025*/
/**********  DLTF       FILE(QTEMP/RUNSQLSTM)                                          */ /*CPK025*/
/**********  MONMSG     MSGID(CPF0000)                                                 */ /*CPK025*/
/**********  DLTF       FILE(QTEMP/RUNSQL)                                             */ /*CPK025*/
/**********  MONMSG     MSGID(CPF0000)                                                 */ /*CPK025*/
/**********  CRTSRCPF   FILE(QTEMP/RUNSQLSTM) RCDLEN(112) +                            */ /*CPK025*/
/**********               MBR(RUNSQLSTM) TEXT('Temporary source +                      */ /*CPK025*/
/**********               file for UPC003010')                                         */ /*CPK025*/
/**********  RNMOBJ     OBJ(QTEMP/RUNSQLSTM) OBJTYPE(*FILE) +                          */ /*CPK025*/
/**********               NEWOBJ(RUNSQL)                                               */ /*CPK025*/

/**Fill*the*file*UPUDFUPD*using*SQL.**/ /*                                             */ /*CPK025*/
/**********  CHGVAR     VAR(&STM_STR) VALUE('INSERT INTO' *BCAT +                      */ /*CPK025*/
/**********              'UPUDFUPD (FUFILE, FULEN, FULIB)')                            */ /*CPK025*/

/**Call*standard*program*to*write*to*source*file*...**/ /*                             */ /*CPK025*/
/**********  CALL       PGM(UTWRTSQL) PARM(&STM_STR '*CLEAR')                          */ /*CPK025*/

/**Add*the*fields*to*the*new*Table.**/ /*                                              */ /*CPK025*/
/**********  CHGVAR     VAR(&STM_STR) VALUE('SELECT TO.RFFILE, +                       */ /*CPK025*/
/**********               TO.RFLEN, TO.RFLIB FROM UDFEXTFLDT AS TO')                   */ /*CPK025*/
/**********  CALL       PGM(UTWRTSQL) PARM(&STM_STR '      ')                          */ /*CPK025*/
/**********  CHGVAR     VAR(&STM_STR) VALUE('LEFT JOIN UDFEXTFLDF AS +                 */ /*CPK025*/
/**********               FROM ON TO.RFFILE = FROM.RFFILE')                            */ /*CPK025*/
/**********  CALL       PGM(UTWRTSQL) PARM(&STM_STR '      ')                          */ /*CPK025*/
/**********  CHGVAR     VAR(&STM_STR) VALUE('WHERE TO.RFFILE LIKE +                    */ /*CPK025*/
/**********               ''T_GZ%EX'' AND TO.RFLEN <> FROM.RFLEN')                     */ /*CPK025*/
/**********  CALL       PGM(UTWRTSQL) PARM(&STM_STR '      ')                          */ /*CPK025*/

/**********  RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +                      */ /*CPK025*/
/**********               COMMIT(*NONE)                                                */ /*CPK025*/
/**********  MONMSG     MSGID(SQL9010)                                                 */ /*CPK025*/

/**Receive*the*file*UPUDFUPD*and*copy*the*old*files*to*the*new.***/ /*                 */ /*CPK025*/
/* Read file SMGNMGPD and look for records flagged as being UDF extension tables. */      /*CPK025*/
 FILEXIST:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
/**********     GOTO       CMDLBL(END)                                               */ /*BUG27793*/
                GOTO       CMDLBL(SUCCESS)                                              /*BUG27793*/
             ENDDO

             IF         COND(&NCETBL *EQ 'Y') THEN(DO)                                    /*CPK025*/
/*Check if file exists in from library; if it doesn't then read next record. */           /*CPK025*/
                CHKOBJ     OBJ(&FROMLIB/&NCOBJ) OBJTYPE(*FILE)                            /*CPK025*/
                MONMSG     MSGID(CPF9801) EXEC(DO)                                        /*CPK025*/
                   GOTO       CMDLBL(FILEXIST)                                            /*CPK025*/
                ENDDO                                                                     /*CPK025*/
/* Display database relations so that if there are any views these are */                 /*CPK025*/
/*  dealt with.                                                        */                 /*CPK025*/
                DSPDBR     FILE(&TOLIB/&NCOBJ) OUTPUT(*OUTFILE) +
                             OUTFILE(QTEMP/UPC000310)                                     /*CPK025*/
                MONMSG     MSGID(CPF3012) EXEC(DO)                                        /*CPK025*/
                   GOTO       CMDLBL(COPY)                                                /*CPK025*/
                ENDDO                                                                     /*CPK025*/

                CALL       PGM(UPC000311) PARM('*DELETE ' &VIEWS)                         /*CPK025*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CPK025*/
                   GOTO       CMDLBL(ABNOR)                                               /*CPK025*/
                ENDDO                                                                     /*CPK025*/

/**********  DLTF FILE(&TOLIB/&FUFILE)                                                 */ /*CPK025*/
                DLTF FILE(&TOLIB/&NCOBJ)                                                  /*CPK025*/

COPY:                                                                                     /*CPK025*/
/**********  CPYF FROMFILE(&FROMLIB/&FUFILE) +                                         */ /*CPK025*/
/**********  TOFILE(&TOLIB/&FUFILE) CRTFILE(*YES)                                      */ /*CPK025*/
                CPYF FROMFILE(&FROMLIB/&NCOBJ) +
                TOFILE(&TOLIB/&NCOBJ) CRTFILE(*YES)                                       /*CPK025*/

/* Call program to restore logicals, if any. */                                           /*CPK025*/
                IF         COND(&VIEWS *EQ '*SOME') THEN(DO)                              /*CPK025*/
                   CALL       PGM(UPC000311) PARM('*RESTORE' &VIEWS)                      /*CPK025*/
                   IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                            /*CPK025*/
                      GOTO       CMDLBL(ABNOR)                                            /*CPK025*/
                   ENDDO                                                                  /*CPK025*/
                ENDDO                                                                     /*CPK025*/
                CHGVAR     VAR(&VIEWS) VALUE(' ')                                         /*CPK025*/

/**********  CHGOWNAUT OBJ(&TOLIB/&FUFILE) OBJTYPE(*FILE)     +                        */ /*CPK025*/
/**********  NEWOWN(&DBOWNER) PUBAUT(*AUTL) AUTL(&DBAUTL)    +                         */ /*CPK025*/
/**********  CHGLIB(N)                                                                 */ /*CPK025*/

             ENDDO                                                                        /*CPK025*/
             GOTO       CMDLBL(FILEXIST)

SUCCESS:                                                                                /*BUG27793*/
             CALL       PGM(SM000008) PARM('UPC000310' '*PGM' +
                          '*UPDATE' 'PASSED')                                           /*BUG27793*/
             GOTO       CMDLBL(END)                                                     /*BUG27793*/

ABNOR:
             IF         COND(&RECURSIVE *EQ 'N') THEN(DO)                               /*BUG27793*/
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')                                   /*BUG27793*/
                CALL       PGM(SM000008) PARM('UPC000310' '*PGM' +
                             '*UPDATE' 'PASSED')                                        /*BUG27793*/
                CHGJOB     SWS(XXXXXX11)
             ENDDO                                                                      /*BUG27793*/

END:
             ENDPGM
