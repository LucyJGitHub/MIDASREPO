/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI *  TEXT('Midas UP Merge two driving files')                    */
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC0098 - Merge two driving files                           */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*       Last Amend No. CUP042 *REWRITE    Date 20May15              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4.01 -----------------------------------------------*/
/*       Prev Amend No. CPK015             Date 05Mar02              */
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.02 ---------------------------------------------------*/
/*                      CUP005 *CREATE     Date 29Oct99              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP042 - Simplification of deliverables list.               */
/*       CPK015 - 4.01 packaging. Add MONMSG to error processing.    */
/*       CUP002 - Introduction of BRIDGE utility                     */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&BASLIB &MRGLIB &TGTLIB)
 
             DCL        VAR(&BASLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MRGLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TGTLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(128)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) +
                          VALUE('N')
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2001')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
/* Delete and recreate temporary error message file. */
             DLTF       FILE(QTEMP/UPERRMQT)
             MONMSG     MSGID(CPF0000)
             CRTPF      FILE(QTEMP/UPERRMQT) RCDLEN(100) +
                          TEXT('Temporary error file for MRGDLVLST')
 
/* If Target library not same as Base library then copy driving file */
             IF         COND(&TGTLIB *NE '*BASELIB') THEN(DO)
                CPYF       FROMFILE(&BASLIB/UPDLVCPD) +
                             TOFILE(&TGTLIB/UPDLVCPD) +
                             MBROPT(*REPLACE) CRTFILE(*YES)
                CHGVAR     VAR(&BASLIB) VALUE(&TGTLIB)
             ENDDO
 
             OVRDBF     FILE(UPDLVCB) TOFILE(&BASLIB/UPDLVCPD) +
                          OVRSCOPE(*JOB)
             OVRDBF     FILE(UPDLVCM) TOFILE(&MRGLIB/UPDLVCPD) +
                          OVRSCOPE(*JOB)
             CALL       PGM(UP0098) PARM(&BASLIB &MRGLIB)
             DLTOVR     FILE(UPDLVCB UPDLVCM) LVL(*JOB)
 
             GOTO       CMDLBL(ENDPGM)
ERROR:
             IF         COND(&RECURSIVE *EQ 'N') THEN(DO)
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')
RCVMSG:
                RCVMSG     MSGTYPE(*DIAG) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                             MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                IF         COND(&MSGID *NE ' ') THEN(DO)
                   SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                                MSGDTA(&MSGDTA) MSGTYPE(*DIAG)
                   GOTO       CMDLBL(RCVMSG)
                ENDDO
                RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                             MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                             MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
             ENDDO
ENDPGM:
             ENDPGM
