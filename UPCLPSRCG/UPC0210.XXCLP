/*********************************************************************/
/*S*D****CLPBASE******************************************************/
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC0210 - Manage Foreign Logical Files                      */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*       Last Amend No. CUP041 *REDUNDANT  Date 01Aug14              */
/*       Prev Amend No. AR878243           Date 12Dec11              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK018  *MOVED     Date 25Apr04              */
/* Midas Release 4 --------------- Base -----------------------------*/
/*                      192731             Date 11Jul01              */
/*                      CUP015             Date 15Jun01              */
/* Midas DBA 3.01 ---------------------------------------------------*/
/*                      CPK010             Date 13Oct99              */
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*                      CUP001 *CREATE     Date 06Aug98              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP041 - New Bridge methodology to combine menu options     */
/*       AR878243 - Bridge is not processing the HIL files/views     */
/*                  using HDBU option.                               */
/*       CPK018 - MidasPlus packaging.  Moved to global layer.       */
/*       192731 - Change SAVOBJ cmd to have USEOPTBLK *NO            */
/*                instead of *YES                                    */
/*       CUP015 - Change CPYFRMQRYF to use *MAP *DROP so that any    */
/*                 future IBM changes to system files should not     */
/*                 impact the program.                               */
/*       CPK010 - Problems found in DBAR3.00 alpha site              */
/*       CUP001 - Introduction of BRIDGE                             */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PTFUPG &RETURN)
 
             DCL        VAR(&PTFUPG) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(1)
 
             DCL        VAR(&SAVF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TEXT) TYPE(*CHAR) LEN(50)
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&REPLY1) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2001')
 
             DCLF       FILE(UPTDBRQF)
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHKOBJ     OBJ(TESTDBR) OBJTYPE(*FILE)                                       /*192731*/
             MONMSG     MSGID(CPF9801) EXEC(DO)                                           /*192731*/
                GOTO       CMDLBL(END)                                                    /*192731*/
             ENDDO                                                                        /*192731*/
                                                                                          /*192731*/
             OPNQRYF    FILE((TESTDBR)) FORMAT(UPTDBRQF) +
                          KEYFLD((TDREFX) (TDRELX)) GRPFLD(TDREFX +
                          TDRELX) MAPFLD((TDREFI '%MAX(WHREFI)') +
                          (TDRELI '%MAX(WHRELI)') (TDRTYP +
                          '%MAX(WHRTYP)') (TDRFI '%MAX(WHRFI)') +
                          (TDRLI '%MAX(WHRLI)') (TDRMB +
                          '%MAX(WHRMB)') (TDRRD '%MAX(WHRRD)') +
                          (TDNO '%MAX(WHNO)') (TDDTM '%MAX(WHDTM)') +
                          (TDREMB '%MAX(WHREMB)') (TDTYPE +
                          '%MAX(WHTYPE)') (TDJDIL '%MAX(WHJDIL)') +
                          (TDJREF '%MAX(WHJREF)') (TDSYSN +
                          '%MAX(WHSYSN)') (TDREFX WHREFI) (TDRELX +
                          WHRELI))
/************CPYFRMQRYF FROMOPNID(TESTDBR) TOFILE(&PTFUPG/UPTDBRQF) +                  */ /*CUP015*/
/************             MBROPT(*REPLACE) CRTFILE(*YES)                               */ /*CUP015*/
             CPYFRMQRYF FROMOPNID(TESTDBR) TOFILE(&PTFUPG/UPTDBRQF) +
                          MBROPT(*REPLACE) CRTFILE(*YES) +
                          FMTOPT(*MAP *DROP)                                              /*CUP015*/
                                                                                        /*AR878243*/
             CLOF       OPNID(TESTDBR)                                                  /*AR878243*/
READNEXT:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(REPORT)
             ENDDO
             CHGVAR     VAR(&RECURSIVE) VALUE('N')                                        /*CPK010*/
RETRY:
             CHGVAR     VAR(&RETURN) VALUE(' ')
             IF         COND(&TDREFI *NE '          ') THEN(DO)
                CHKOBJ     OBJ(&TDREFI) OBJTYPE(*FILE) MBR(&TDREFI)
                MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(READNEXT))
                MONMSG     MSGID(CPF9815)
 
/* Retrieve logical file description */
                RTVOBJD    OBJ(&TDREFI) OBJTYPE(*FILE) TEXT(&TEXT)
 
/* Create save file, back up logical and then delete logical */
/************   CHGVAR    VAR(&SAVF) VALUE('LF' *CAT %SST(&TDREFI 1 8))                */ /*CPK010*/
                CHGVAR     VAR(&SAVF) VALUE(&TDREFI)                                      /*CPK010*/
 
                CRTSAVF    FILE(&PTFUPG/&SAVF) TEXT(&TEXT)
                MONMSG     MSGID(CPF5813 CPF7302) EXEC(DO)
                   CLRSAVF    FILE(&PTFUPG/&SAVF)
                   MONMSG     MSGID(CPF0000)
                ENDDO
 
/**********     SAVOBJ     OBJ(&TDREFI) LIB(&TDRELI) DEV(*SAVF) +
/**********               SAVF(&PTFUPG/&SAVF)                                         /*192731*/
                SAVOBJ     OBJ(&TDREFI) LIB(&TDRELI) DEV(*SAVF) +
                          SAVF(&PTFUPG/&SAVF) USEOPTBLK(*NO)                          /*192731*/
/* DELETE THE FILE */
                DLTF       FILE(&TDRELI/&TDREFI)
             ENDDO
 
             GOTO       CMDLBL(READNEXT)
REPORT:
/* Produce report on all logical files which have been identified as */
/* site specific */
             DLTF       FILE(&PTFUPG/UPNCLFPD)
             MONMSG     MSGID(CPF0000)
 
/************DSPOBJD    OBJ(&PTFUPG/LF*) OBJTYPE(*FILE) +                              */ /*CPK010*/
/************             OUTPUT(*OUTFILE) OUTFILE(&PTFUPG/UPNCLFPD)                   */ /*CPK010*/
             DSPFD      FILE(&PTFUPG/*ALL) TYPE(*BASATR) +
                          OUTPUT(*OUTFILE) FILEATR(*SAVF) +
                          OUTFILE(&PTFUPG/UPNCLFPD)
/************MONMSG     MSGID(CPF2123) EXEC(GOTO CMDLBL(END))                          */ /*CPK010*/
             MONMSG     MSGID(CPF3020 CPF3012) EXEC(GOTO CMDLBL(END))                     /*CPK010*/
             CALL       PGM(UP0210)
 
             GOTO       CMDLBL(END)
 ABNOR:
/* Error handling brought in through /COPY */
             IF         COND(&RECURSIVE *NE 'Y') THEN(DO)
                CHGVAR     VAR(&RECURSIVE) VALUE('Y')
                RTVMSG    MSGID(UPM0002) MSGF(UTMSGF) MSGDTA(UPC0210) +
                          MSG(&MESSAGE)
/*/COPY UPCPYSRCG,C_UPERRA                                           */
             ENDDO
 
END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited')
             ENDPGM
