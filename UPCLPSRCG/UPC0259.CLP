/*********************************************************************/
/*XBI    OVRDBF FILE(CPYDTA) TOFILE(QADSPOBJ)                        */
/*STD    CLPBASE                                                     */
/*EXI *  TEXT('Midas UP Copy data from one library to another')      */
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC0259 - Copy data from one library to another             */
/*                                                                   */
/*       (c) Finastra International Limited 2001                     */
/*                                                                   */
/*********************************************************************/
/* This program monitors for a large and specific set of messages    */
/* which may be generated by the CPYF commands.  If this monitoring  */
/* is amended in any way he following programs may also need to be   */
/* changed:                                                          */
/*             UPC0245                                               */
/*             UPC0246                                               */
/*             UPC0263                                               */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       Last Amend No. BUG27793           Date 08Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. 256038             Date 21Jun08              */
/*                      CUP034  *MOVED     Date 03Oct06              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CUP102             Date 23Aug05              */
/* Midas Release 4.01.03 --------------------------------------------*/
/*                      CUP020             Date 08Jan03              */
/* Midas Release 4.01 -----------------------------------------------*/
/*                      CPK015             Date 13Mar02              */
/* Midas Release 4 --------------- Base -----------------------------*/
/*                      CUP015             Date 20Jun01              */
/* Midas DBA 3.04 ---------------------------------------------------*/
/*                      CUP011             Date 31Oct00              */
/* Midas DBA 3.03 ---------------------------------------------------*/
/*                      CUP007             Date 03Apr00              */
/* Midas DBA 3.02 ---------------------------------------------------*/
/*                      CUP006             Date 16Nov99              */
/* Midas DBA 3.01 ---------------------------------------------------*/
/*                      CPK010 *CREATE     Date 08Jul99              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       BUG27793 - Make migration multi-streamed.                   */
/*       256038 - Only call UPC8005 for DMLIBs.                      */
/*       CUP034 - Reduce size of implementation library.             */
/*       CUP102 - Improve error handling.                            */
/*       CUP020 - Separation of System ID changes.                   */
/*       CPK015 - 4.01 packaging.  Improvements to CPYDBLIB.         */
/*                                 Handle data queues.               */
/*       CUP015 - Make all calls to core programs, & ensure all file */
/*                types are handled.                                 */
/*       CUP011 - Correctly handle errors when job is submitted.     */
/*       CUP007 - Allow for different formats of DSPOBJD outfile.    */
/*       CUP006 - Enhancement to utility - alllow retry              */
/*       CPK010 - DBA R3.00 alpha site problems.                     */
/*                                                                   */
/*********************************************************************/
/************PGM        PARM(&LIBF &LIBT &CRT &SYSPFX &THRESHOLD &JUMP)                */ /*CPK015*/
             PGM        PARM(&LIBF &LIBT &CRT &RERUN &SYSPFX +
                          &EXCEPTION &EXCPTACT &QUALJOBQ &THRESHOLD +
                          &JUMP)                                                          /*CPK015*/
 
             DCL        VAR(&LIBF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CRT) TYPE(*CHAR) LEN(4)
             DCL        VAR(&RERUN) TYPE(*CHAR) LEN(4)                                    /*CPK015*/
             DCL        VAR(&SYSPFX) TYPE(*CHAR) LEN(4)
             DCL        VAR(&EXCEPTION) TYPE(*CHAR) LEN(362)                              /*CPK015*/
             DCL        VAR(&EXCPTACT) TYPE(*CHAR) LEN(7)                                 /*CPK015*/
             DCL        VAR(&QUALJOBQ) TYPE(*CHAR) LEN(20)                                /*CPK015*/
             DCL        VAR(&THRESHOLD) TYPE(*DEC) LEN(2 0)
             DCL        VAR(&JUMP) TYPE(*DEC) LEN(2 0)
 
             DCL        VAR(&EXCPTOBJ) TYPE(*CHAR) LEN(10)                                /*CPK015*/
             DCL        VAR(&EXCPTTYP) TYPE(*CHAR) LEN(8)                                 /*CPK015*/
             DCL        VAR(&NOOFEXCPTB) TYPE(*CHAR) LEN(2)                               /*CPK015*/
             DCL        VAR(&NOOFEXCPTS) TYPE(*DEC) LEN(2 0)                              /*CPK015*/
             DCL        VAR(&JOBQ) TYPE(*CHAR) LEN(10)                                    /*CPK015*/
             DCL        VAR(&JOBQLIB) TYPE(*CHAR) LEN(10)                                 /*CPK015*/
 
             DCL        VAR(&COUNT) TYPE(*DEC) LEN(2 0)                                   /*CPK015*/
             DCL        VAR(&STARTOBJ) TYPE(*DEC) LEN(3 0)                                /*CPK015*/
             DCL        VAR(&STARTTYP) TYPE(*DEC) LEN(3 0)                                /*CPK015*/
             DCL        VAR(&PREFIX) TYPE(*CHAR) LEN(2)
             DCL        VAR(&FPREFIX) TYPE(*CHAR) LEN(2)                                  /*CUP020*/
/************DCL        VAR(&TIDTA) TYPE(*CHAR) LEN(128)                               */ /*CUP020*/
             DCL        VAR(&SYSPCTBEF) TYPE(*DEC) LEN(7 4)
             DCL        VAR(&SYSPCTAFT) TYPE(*DEC) LEN(7 4)
             DCL        VAR(&SYSTOT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&RETURNCODE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MESSAGE) TYPE(*CHAR) LEN(50)
             DCL        VAR(&TYPE) TYPE(*CHAR) LEN(1)
             DCL        VAR(&REPLY1) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RTNCODE) TYPE(*CHAR) LEN(1)                                  /*CPK015*/
             DCL        VAR(&REMOVE) TYPE(*CHAR) LEN(1) VALUE('Y')                        /*CPK015*/
             DCL        VAR(&NOTFOUND) TYPE(*CHAR) LEN(1) VALUE('N')                      /*CPK015*/
 
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(100)
             DCL        VAR(&IN01) TYPE(*LGL)
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Finastra International Limited +
                          2001')
 
             DCLF       FILE(CPYDTA)
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/* Create data area /MIDASMSG in QTEMP */
             DLTDTAARA  DTAARA(QTEMP/MIDASMSG)
             MONMSG     MSGID(CPF0000)
             CRTDTAARA  DTAARA(QTEMP/MIDASMSG) TYPE(*CHAR) LEN(800) +
                          VALUE(' ')
 
             RTVJOBA    TYPE(&TYPE)
 
/* Attempt to add 'from' library to library list. */                                      /*CPK015*/
             ADDLIBLE   LIB(&LIBF)                                                        /*CPK015*/
             MONMSG     MSGID(CPF2103) EXEC(DO)                                           /*CPK015*/
                CHGVAR     VAR(&REMOVE) VALUE('N')                                        /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
/************DLTF       FILE(QTEMP/CPYDTA)                                             */ /*CPK015*/
/************MONMSG     MSGID(CPF0000)                                                 */ /*CPK015*/
/************DSPOBJD    OBJ(&LIBF/*ALL) OBJTYPE(*ALL) +                                */ /*CPK015*/
/************             OUTPUT(*OUTFILE) OUTFILE(QTEMP/CPYDTA)                       */ /*CPK015*/
 
             CLRPFM     FILE(UPNOTFPD)                                                    /*CUP020*/
             MONMSG     MSGID(CPF3142)                                                    /*CUP020*/
 
             IF         COND(&RERUN *EQ '*NO') THEN(DO)                                   /*CPK015*/
                DLTF       FILE(&LIBF/CPYDTA)                                             /*CPK015*/
                MONMSG     MSGID(CPF0000)                                                 /*CPK015*/
                DSPOBJD    OBJ(&LIBF/*ALL) OBJTYPE(*ALL) +
                             OUTPUT(*OUTFILE) OUTFILE(&LIBF/CPYDTA)                       /*CPK015*/
/* Make sure empty copies of files exist */
/************   CLRPFM     FILE(UPNOTFPD)                                              */ /*CUP020*/
 
/************CHKOBJ     OBJ(QTEMP/UPCERRQT) OBJTYPE(*FILE)                             */ /*CPK015*/
/************MONMSG     MSGID(CPF9801) EXEC(DO)                                        */ /*CPK015*/
/************   DSPOBJD    OBJ(QTEMP/CPYDTA) OBJTYPE(*FILE) +                          */ /*CPK015*/
/************                OUTPUT(*OUTFILE) OUTFILE(QTEMP/UPCERRQT)                  */ /*CPK015*/
/************ENDDO                                                                     */ /*CPK015*/
/************CLRPFM     FILE(QTEMP/UPCERRQT)                                           */ /*CPK015*/
                CHKOBJ     OBJ(&LIBF/UPCERRQT) OBJTYPE(*FILE)                             /*CPK015*/
                MONMSG     MSGID(CPF9801) EXEC(DO)                                        /*CPK015*/
                   DSPOBJD    OBJ(&LIBF/CPYDTA) OBJTYPE(*FILE) +
                             OUTPUT(*OUTFILE) OUTFILE(&LIBF/UPCERRQT)                     /*CPK015*/
                ENDDO                                                                     /*CPK015*/
                CLRPFM     FILE(&LIBF/UPCERRQT)                                           /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
/* Check if any items have been specified on the exceptions list. */
             CHGVAR     VAR(&NOOFEXCPTB) VALUE(%SST(&EXCEPTION 1 2))                      /*CPK015*/
             CHGVAR     VAR(&NOOFEXCPTS) VALUE(%BIN(&NOOFEXCPTB))                         /*CPK015*/
             IF         COND(&NOOFEXCPTS *GT 0 *AND &EXCPTACT *EQ +
                          '*SUBMIT') THEN(DO)                                             /*CPK015*/
                CHGVAR     VAR(&JOBQ) VALUE(%SST(&QUALJOBQ 1 10))                         /*CPK015*/
                CHGVAR     VAR(&JOBQLIB) VALUE(%SST(&QUALJOBQ 11 10))                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
 READNEXT:
 /* Update previous record as having completed successfully  */                           /*CPK015*/
 /*  and check system storage.                               */                           /*CPK015*/
             IF         COND(&ODOBNM *NE ' ' *AND &REPLY1 *NE 'I' +
                          *AND &NOTFOUND *NE 'Y') THEN(DO)                                /*CPK015*/
                CALL       PGM(UP0262) PARM(&ODOBNM &ODOBTP '*UPDATE' +
                             &RTNCODE)                                                    /*CPK015*/
                CALL       PGM(UP0249) PARM(&RETURNCODE &SYSPCTAFT +
                          &SYSTOT)                                                        /*CPK015*/
                IF         COND((&SYSPCTAFT *GE &THRESHOLD) *OR +
                          (&SYSPCTAFT - &SYSPCTBEF *GE &JUMP)) +
                          THEN(GOTO CMDLBL(OVERFLOW))                                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
             ELSE       CMD(DO)                                                           /*CPK015*/
                CHGVAR     VAR(&NOTFOUND) VALUE('N')                                      /*CPK015*/
                CHGVAR     VAR(&REPLY1) VALUE(' ')                                        /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
             OVRDBF     FILE(CPYDTA) TOFILE(&LIBF/CPYDTA) +
                          OVRSCOPE(*JOB)                                                  /*CUP020*/
 
READSKIP:                                                                                 /*CPK015*/
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(EXCEPT))
 
/* If the file is one of the temporary utility files then ignore it. */                   /*CPK015*/
             IF         COND(&ODOBNM *EQ 'CPYDTA' *OR &ODOBNM *EQ +
                          'UPCERRQT') THEN(DO)                                            /*CPK015*/
                GOTO       CMDLBL(READSKIP)                                               /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
/* Before attempting to copy check if it has already been copied  */                      /*CPK015*/
/*  but only if it is a re-run.                                   */                      /*CPK015*/
             IF         COND(&RERUN *EQ '*YES') THEN(DO)                                  /*CPK015*/
                CHGVAR     VAR(&RTNCODE) VALUE(' ')                                       /*CPK015*/
                CALL       PGM(UP0262) PARM(&ODOBNM &ODOBTP '*CHECK' +
                             &RTNCODE)                                                    /*CPK015*/
                IF         COND(&RTNCODE *EQ 'Y') THEN(DO)                                /*CPK015*/
                   GOTO       CMDLBL(READSKIP)                                            /*CPK015*/
                ENDDO                                                                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
             IF         COND(&NOOFEXCPTS *NE 0) THEN(DO)                                  /*CPK015*/
                CHGVAR     VAR(&COUNT) VALUE(1)                                           /*CPK015*/
                CHGVAR     VAR(&STARTOBJ) VALUE(3)                                        /*CPK015*/
                CHGVAR     VAR(&STARTTYP) VALUE(13)                                       /*CPK015*/
LOOP1:                                                                                    /*CPK015*/
                IF         COND(&COUNT *LE &NOOFEXCPTS) THEN(DO)                          /*CPK015*/
                   CHGVAR     VAR(&EXCPTOBJ) VALUE(%SST(&EXCEPTION +
                                &STARTOBJ 10))                                            /*CPK015*/
                   CHGVAR     VAR(&EXCPTTYP) VALUE(%SST(&EXCEPTION +
                                &STARTTYP 8))                                             /*CPK015*/
                   IF         COND(&ODOBNM *EQ &EXCPTOBJ *AND &ODOBTP *EQ +
                                &EXCPTTYP) THEN(DO)                                       /*CPK015*/
                      IF         COND(&EXCPTACT *EQ '*SKIP') THEN(DO)                     /*CPK015*/
                         GOTO       CMDLBL(READSKIP)                                      /*CPK015*/
                      ENDDO                                                               /*CPK015*/
                      IF         COND(&EXCPTACT *EQ '*SUBMIT') THEN(DO)                   /*CPK015*/
                         SBMJOB     CMD(CALL PGM(UPC0263) PARM(&LIBF &LIBT +
                                      &ODOBNM &ODOBTP &ODOBAT &CRT)) +
                                      JOB(&ODOBNM) JOBQ(&JOBQLIB/&JOBQ)                   /*CPK015*/
                         GOTO       CMDLBL(READSKIP)                                      /*CPK015*/
                      ENDDO                                                               /*CPK015*/
                   ENDDO                                                                  /*CPK015*/
                   CHGVAR     VAR(&COUNT) VALUE(&COUNT + 1)                               /*CPK015*/
                   CHGVAR     VAR(&STARTOBJ) VALUE(&STARTOBJ + 18)                        /*CPK015*/
                   CHGVAR     VAR(&STARTTYP) VALUE(&STARTTYP + 18)                        /*CPK015*/
                   GOTO       CMDLBL(LOOP1)                                               /*CPK015*/
                ENDDO                                                                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
RETRY:                                                                                    /*CUP006*/
             IF         COND(%SST(&ODOBAT 1 2) *EQ 'PF') THEN(DO)
/***Find*out*how*much*system*storage*space*has*been*used*before*+*                     */ /*CPK015*/
/***starting*the*copy;*if*over*the*specified*threshold,*end*without*+*                 */ /*CPK015*/
/***doing*the*copy.**/ /*                                                              */ /*CPK015*/
/* Find out how much system storage space has been used before. */                        /*CPK015*/
                CALL       PGM(UP0249) PARM(&RETURNCODE &SYSPCTBEF +
                          &SYSTOT)
/************   IF         COND(&SYSPCTBEF *GE &THRESHOLD) THEN(GOTO +                 */ /*CPK015*/
/************             CMDLBL(OVERFLOW))                                            */ /*CPK015*/
 
/* Before attempting copy check if file exists in both libraries */                       /*CPK015*/
/*  and that members match.                                      */                       /*CPK015*/
                CALL       PGM(UPC0262) PARM(&ODOBNM &LIBF &LIBT)                         /*CPK015*/
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                               /*CUP102*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CUP102*/
                   IF         COND(&TYPE = '1') THEN(DO)                                  /*CUP102*/
                      GOTO       CMDLBL(CHOOSE)                                           /*CUP102*/
                   ENDDO                                                                  /*CUP102*/
                   ELSE       CMD(DO)                                                     /*CUP102*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP102*/
                   ENDDO                                                                  /*CUP102*/
                ENDDO                                                                     /*CUP102*/
 
                CHGVAR     VAR(&MSGID) VALUE(' ')
                CPYF       FROMFILE(&LIBF/&ODOBNM) +
                           TOFILE(&LIBT/&ODOBNM) FROMMBR(*ALL) +
                           TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                           CRTFILE(&CRT) FMTOPT(*NONE)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 1        */
/*                                                                   */
/* First category of monitored messages are critical errors and will */
/* be flagged as failed without attempting other types of CPYF as    */
/* they would also fail.                                             */
/*********************************************************************/
/* If to-file does not exist copy record to new file for later use */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2861) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CUP007*/
/************             TOFILE(UPNOTFPD) MBROPT(*ADD) +                              */ /*CUP007*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CUP007*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CUP007*/
/************      CPYF   FROMFILE(QTEMP/CPYDTA) TOFILE(UPNOTFPD) +                    */ /*CPK015*/
/************             MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +                     */ /*CPK015*/
/************             ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +                       */ /*CPK015*/
/************             '*FILE')) FMTOPT(*MAP *DROP)                         /*CUP007*/ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) TOFILE(UPNOTFPD) +
                                MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +
                                ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +
                                '*FILE')) FMTOPT(*MAP *DROP)                              /*CPK015*/
                   CHGVAR     VAR(&NOTFOUND) VALUE('Y')                                   /*CPK015*/
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If from-file does not exist */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2802) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If insufficient authority to either from-file or to-file */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2864) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2862) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If from-file has more fields than to-file, treat as error */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2965) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If, because of overrides, utility thinks it is copying to itself */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2874) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
/************      CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/************             TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If from-file not found; this error may be caused by an existing */
/*  override.                                                      */
                MONMSG     MSGID(CPF2875) EXEC(DO)
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If error in writing to 'to' member then it is unable to work    */                     /*CUP011*/
/*  out why; therefore flag as failure.                            */                     /*CUP011*/
                MONMSG     MSGID(CPF2972) EXEC(DO)                                        /*CUP011*/
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                  /*CUP011*/ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)                                /*CUP011*/
                      GOTO       CMDLBL(CHOOSE)                                           /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO                                                                     /*CUP011*/
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 2        */
/*                                                                   */
/* Second category of monitored messages are non-critical errors and */
/* will be flagged as completed without attempting other types of    */
/* as they would also fail.                                          */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   RMVM       FILE(&LIBT/&ODOBNM) MBR(*ALL)                               /*CPK015*/
                   MONMSG     MSGID(CPF7301)                                              /*CPK015*/
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 3        */
/*                                                                   */
/* Third category of monitored messages are for possibly critical    */
/* errors but further CPYFs should be attempted.                     */
/*********************************************************************/
/* If different FMTOPT required */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2969) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2963) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2962) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
 
/* If CPYF worked then read next record */
                GOTO       CMDLBL(READNEXT)
 TAG02:
                CPYF       FROMFILE(&LIBF/&ODOBNM) +
                           TOFILE(&LIBT/&ODOBNM) FROMMBR(*ALL) +
                           TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                           CRTFILE(&CRT) FMTOPT(*MAP *DROP)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 1   */
/*                                                                   */
/* It is possible that a message from the 3rd category for the first */
/* CPYF was received first; therefore, some category 1 errors must   */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
/***********          CPYF       FROMFILE(QTEMP/CPYDTA) +                              */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If to-file has incorrect data in any fields */                                         /*CUP007*/
                MONMSG     MSGID(CPF2972) EXEC(DO)                                        /*CUP007*/
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                  /*CUP007*/ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)                                /*CUP007*/
                      GOTO       CMDLBL(CHOOSE)                                           /*CUP007*/
                   ENDDO                                                                  /*CUP007*/
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO                                                                     /*CUP007*/
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 2   */
/*                                                                   */
/* It is possible that a message from the 3rd category for the first */
/* CPYF was received first; therefore, some category 2 errors must   */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 3   */
/*                                                                   */
/* Third category of monitored messages are for possibly critical    */
/* errors but further CPYFs should be attempted.                     */
/*********************************************************************/
/* If different FMTOPT required */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2963) EXEC(DO)
                   GOTO       CMDLBL(TAG03)
                ENDDO
 
/* If CPYF worked then read next record */
                GOTO       CMDLBL(READNEXT)
 TAG03:
                CPYF       FROMFILE(&LIBF/&ODOBNM) +
                           TOFILE(&LIBT/&ODOBNM) FROMMBR(*ALL) +
                           TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                           CRTFILE(&CRT) FMTOPT(*NOCHK)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NOCHK) - Category 1       */
/*                                                                   */
/* It is possible that a message from the 3rd category for the       */
/* second CPYF was received first; therefore, some category 1 errors */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
/***********       CPYF       FROMFILE(QTEMP/CPYDTA) +                                 */ /*CPK015*/
/***********              TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +                        */ /*CPK015*/
/***********              CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CPK015*/
/***********              &ODOBNM) (*AND ODOBTP *EQ '*FILE'))                          */ /*CPK015*/
                   CPYF       FROMFILE(&LIBF/CPYDTA) +
                                TOFILE(&LIBF/UPCERRQT) MBROPT(*ADD) +
                                INCREL((*IF ODOBNM *EQ &ODOBNM) (*AND +
                                ODOBTP *EQ '*FILE'))                                      /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   ELSE       CMD(DO)                                                     /*CUP011*/
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO                                                                  /*CUP011*/
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NOCHK) - Category 2       */
/*                                                                   */
/* It is possible that a message from the 3rd category for the       */
/* second CPYF was received first; therefore, some category 2 errors */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
 
/** Find out how much system storage space is used now; if it is +
    over the threshold, OR if it has increased by the specified +
    amount or more, end the copy. */
/************   CALL       PGM(GETSYSSTG) PARM(&RETURNCODE &SYSPCTAFT +                   /*CUP015*/
/************             &SYSTOT)                                                        /*CUP015*/
/************   CALL       PGM(UP0249) PARM(&RETURNCODE &SYSPCTAFT +
/************             &SYSTOT)                                             /*CUP015*/ /*CPK015*/
/************   IF         COND((&SYSPCTAFT *GE &THRESHOLD) *OR +                      */ /*CPK015*/
/************             (&SYSPCTAFT - &SYSPCTBEF *GE &JUMP)) +                       */ /*CPK015*/
/************             THEN(GOTO CMDLBL(OVERFLOW))                                  */ /*CPK015*/
             ENDDO
 
             IF         COND(&ODOBTP *EQ *DTAARA) THEN(DO)
/* Find out how much system storage space has been used before. */                        /*CPK015*/
                CALL       PGM(UP0249) PARM(&RETURNCODE &SYSPCTBEF +
                          &SYSTOT)                                                        /*CPK015*/
/* Check if it exists in 'to' library; if it doesn't then copy rec. */
                CHKOBJ     OBJ(&LIBT/&ODOBNM) OBJTYPE(*DTAARA)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   IF         COND(&CRT *EQ '*NO') THEN(DO)
/************         CPYF       FROMFILE(QTEMP/CPYDTA) +                              */ /*CUP007*/
/************             TOFILE(UPNOTFPD) MBROPT(*ADD) +                              */ /*CUP007*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CUP007*/
/************             &ODOBNM) (*AND ODOBTP *EQ '*DTAARA'))                        */ /*CUP007*/
/***********          CPYF   FROMFILE(QTEMP/CPYDTA) TOFILE(UPNOTFPD) +                 */ /*CPK015*/
/***********              MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +                     */ /*CPK015*/
/***********              ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +                       */ /*CPK015*/
/***********              '*DTAARA')) FMTOPT(*MAP *DROP)                       /*CUP007*/ /*CPK015*/
                      CPYF       FROMFILE(&LIBF/CPYDTA) TOFILE(UPNOTFPD) +
                                   MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +
                                   ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +
                                   '*DTAARA')) FMTOPT(*MAP *DROP)                         /*CPK015*/
                      CHGVAR     VAR(&NOTFOUND) VALUE('Y')                                /*CPK015*/
                   ENDDO
                   IF         COND(&CRT *EQ '*YES') THEN(DO)
                      CRTDUPOBJ  OBJ(&ODOBNM) FROMLIB(&LIBF) +
                           OBJTYPE(*DTAARA)   TOLIB(&LIBT)
                   ENDDO
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                CPYDTAARA FMDTAARA(&LIBF/&ODOBNM) +
                                  TODTAARA(&LIBT/&ODOBNM)
                MONMSG     MSGID(CPF0000) EXEC(DO)
                   IF         COND(&TYPE *EQ '1') THEN(DO)
                      GOTO       CMDLBL(CHOOSE)
                   ENDDO
                   IF         COND(&TYPE *EQ '0') THEN(DO)
                      CPYF       FROMFILE(QTEMP/CPYDTA) +
                          TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +
                          CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +
                          &ODOBNM) (*AND ODOBTP *EQ '*DTAARA'))
                      GOTO       CMDLBL(READNEXT)                                         /*CUP011*/
                   ENDDO
                ENDDO
             ENDDO
 
/* Copy data queues. */                                                                   /*CPK015*/
             IF         COND(&ODOBTP *EQ *DTAQ) THEN(DO)                                  /*CPK015*/
/* Find out how much system storage space has been used before. */                        /*CPK015*/
                CALL       PGM(UP0249) PARM(&RETURNCODE &SYSPCTBEF +
                          &SYSTOT)                                                        /*CPK015*/
/* Check if it exists in 'to' library; if it doesn't then copy rec. */                    /*CPK015*/
                CHKOBJ     OBJ(&LIBT/&ODOBNM) OBJTYPE(*DTAQ)                              /*CPK015*/
                MONMSG     MSGID(CPF9801) EXEC(DO)                                        /*CPK015*/
                   IF         COND(&CRT *EQ '*NO') THEN(DO)                               /*CPK015*/
                      CPYF       FROMFILE(&LIBF/CPYDTA) TOFILE(UPNOTFPD) +
                                   MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +
                                   ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +
                                   '*DTAQ')) FMTOPT(*MAP *DROP)                           /*CPK015*/
                      CHGVAR     VAR(&NOTFOUND) VALUE('Y')                                /*CPK015*/
                   ENDDO                                                                  /*CPK015*/
                   IF         COND(&CRT *EQ '*YES') THEN(DO)                              /*CPK015*/
                      CPYDTAQ    FMDTAQ(&LIBF/&ODOBNM) TODTAQ(&LIBT/&ODOBNM) +
                                   CRTDTAQ(*YES)                                          /*CPK015*/
                   ENDDO                                                                  /*CPK015*/
                   GOTO       CMDLBL(READNEXT)                                            /*CPK015*/
                ENDDO                                                                     /*CPK015*/
                CPYDTAQ    FMDTAQ(&LIBF/&ODOBNM) TODTAQ(&LIBT/&ODOBNM)                    /*CPK015*/
                MONMSG     MSGID(CPF0000 RPG0000 MCH0000) EXEC(DO)                        /*CPK015*/
                   IF         COND(&TYPE *EQ '1') THEN(DO)                                /*CPK015*/
                      GOTO       CMDLBL(CHOOSE)                                           /*CPK015*/
                   ENDDO                                                                  /*CPK015*/
                   IF         COND(&TYPE *EQ '0') THEN(DO)                                /*CPK015*/
                      CPYF       FROMFILE(QTEMP/CPYDTA) +
                          TOFILE(QTEMP/UPCERRQT) MBROPT(*ADD) +
                          CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +
                          &ODOBNM) (*AND ODOBTP *EQ '*DTAQ'))                             /*CPK015*/
                      GOTO       CMDLBL(READNEXT)                                         /*CPK015*/
                   ENDDO                                                                  /*CPK015*/
                ENDDO                                                                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
 
/* If object not phsical file or data area then just move to "not found" */               /*CUP015*/
/*  - or data queue.                                                     */               /*CPK015*/
/************IF         COND(%SST(&ODOBAT 1 2) *NE 'PF' *AND &ODOBTP +                 */ /*CPK015*/
/************             *NE '*DTAARA') THEN(DO)                              /*CUP015*/ /*CPK015*/
             IF         COND(%SST(&ODOBAT 1 2) *NE 'PF' *AND &ODOBTP +
                          *NE '*DTAARA' *AND &ODOBTP *NE '*DTAQ') +
                          THEN(DO)                                                        /*CPK015*/
/**If*object*not file or data area then just move to "not found" */                       /*CUP015*/
/************IF         COND(&ODOBTP *NE '*FILE' *AND &ODOBTP *NE +                       /*CUP015*/
/************             '*DTAARA') THEN(DO)                                             /*CUP015*/
/************   CPYF       FROMFILE(QTEMP/CPYDTA) +                                    */ /*CUP007*/
/************             TOFILE(UPNOTFPD) MBROPT(*ADD) +                              */ /*CUP007*/
/************             CRTFILE(*YES) INCREL((*IF ODOBNM *EQ +                       */ /*CUP007*/
/************             &ODOBNM) (*AND ODOBTP *EQ &ODOBTP))                          */ /*CUP007*/
/************   CPYF      FROMFILE(QTEMP/CPYDTA) TOFILE(UPNOTFPD) +                    */ /*CPK015*/
/************             MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +                     */ /*CPK015*/
/************             ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +                       */ /*CPK015*/
/************             &ODOBTP)) FMTOPT(*MAP *DROP)                         /*CUP007*/ /*CPK015*/
                CPYF       FROMFILE(&LIBF/CPYDTA) TOFILE(UPNOTFPD) +
                             MBROPT(*ADD) CRTFILE(*YES) INCREL((*IF +
                             ODOBNM *EQ &ODOBNM) (*AND ODOBTP *EQ +
                             &ODOBTP)) FMTOPT(*MAP *DROP)                                 /*CPK015*/
                CHGVAR     VAR(&NOTFOUND) VALUE('Y')                                      /*CPK015*/
             ENDDO
 
             GOTO       CMDLBL(READNEXT)
 
OVERFLOW:
/** This section will be executed if the system storage: +
    a) was over the threshold value before a file was copied; +
    b) was over the threshold after a file was copied; or +
    c) has increased by the 'jump' amount or more during the copy +
       of one file. */
 
/** First close down the called program. */
             RCLRSC
 
/** Set up and send the message; it is sent as an escape message, so +
    the program will halt at this point. */
             CHGVAR     VAR(&MSGDTA) VALUE('System storage threshold +
                          violation occurred.  Copy terminated')
             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
/*********************************************************************/
EXCEPT:
/* Change references to system ID in to system */
             IF         COND(&SYSPFX *EQ '*YES') THEN(DO)
                IF         COND(%SST(&LIBT 3 5) *EQ 'DMLIB') THEN(DO)                     /*256038*/
                   CHGVAR     VAR(&PREFIX) VALUE(%SST(&LIBT 1 2))
                   CHGVAR     VAR(&FPREFIX) VALUE(%SST(&LIBF 1 2))                        /*CUP020*/
/* Call program to update system references. */                                           /*CUP020*/
/**********        CALL       PGM(UPC8005) PARM(&FPREFIX &PREFIX)         */ /*CUP020*/ /*BUG27793*/
                   CALL       PGM(UPC8005) PARM(&FPREFIX &PREFIX '*CPY')                /*BUG27793*/
                   IF         COND(%SWITCH(XXXXXX11)) THEN(DO)                            /*CUP020*/
                      GOTO       CMDLBL(ABNOR)                                            /*CUP020*/
                   ENDDO                                                                  /*CUP020*/
                ENDDO                                                                     /*256038*/
/*SDSTAT:***                                                                           */ /*CUP020*/
/***********    CHKOBJ     OBJ(&LIBT/SDSTAT) OBJTYPE(*DTAARA)                          */ /*CUP020*/
/***********    MONMSG     MSGID(CPF9801) EXEC(DO)                                     */ /*CUP020*/
/***********       GOTO       CMDLBL(CGDTA)                                            */ /*CUP020*/
/***********    ENDDO                                                                  */ /*CUP020*/
/***********    CHGDTAARA  DTAARA(&LIBT/SDSTAT (6 2)) VALUE(&PREFIX)                   */ /*CUP020*/
/*CGDTA:****                                                                           */ /*CUP020*/
/***********    CHKOBJ     OBJ(&LIBT/CGDTA) OBJTYPE(*DTAARA)                           */ /*CUP020*/
/***********    MONMSG     MSGID(CPF9801) EXEC(DO)                                     */ /*CUP020*/
/***********       GOTO       CMDLBL(TIDTA)                                            */ /*CUP020*/
/***********    ENDDO                                                                  */ /*CUP020*/
/***********    CHGDTAARA  DTAARA(&LIBT/CGDTA (7 2)) VALUE(&PREFIX)                    */ /*CUP020*/
/*TIDTA:****                                                                           */ /*CUP020*/
/***********    CHKOBJ     OBJ(&LIBT/TIDTA) OBJTYPE(*DTAARA)                           */ /*CUP020*/
/***********    MONMSG     MSGID(CPF9801) EXEC(DO)                                     */ /*CUP020*/
/***********       GOTO       CMDLBL(ENDPGM)                                           */ /*CUP020*/
/***********    ENDDO                                                                  */ /*CUP020*/
/***********    RTVDTAARA  DTAARA(&LIBT/TIDTA) RTNVAR(&TIDTA)                          */ /*CUP020*/
/***********    IF         COND(%SST(&TIDTA 11 2) *NE ' ') THEN(DO)                    */ /*CUP020*/
/***********       CHGDTAARA  DTAARA(&LIBT/TIDTA (11 2)) VALUE(&PREFIX)                */ /*CUP020*/
/***********    ENDDO                                                                  */ /*CUP020*/
             ENDDO
 
             GOTO       CMDLBL(ENDPGM)
CHOOSE:
             CHGVAR     VAR(&REPLY1) VALUE(' ')
             RTVMSG     MSGID(UPM0020) MSGF(UTMSGF) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (101 50)) VALUE(&MESSAGE)
             RTVMSG     MSGID(UPM0007) MSGF(UTMSGF) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (151 50)) VALUE(&MESSAGE)
             RTVMSG     MSGID(UPM0011) MSGF(UTMSGF) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (251 50)) VALUE(&MESSAGE)
             RTVMSG     MSGID(UPM0017) MSGF(UTMSGF) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (301 50)) VALUE(&MESSAGE)
             RTVMSG     MSGID(UPM0018) MSGF(UTMSGF) MSG(&MESSAGE)
             CHGDTAARA  DTAARA(MIDASMSG (351 50)) VALUE(&MESSAGE)
             RTVMSG     MSGID(UPM0009) MSGF(UTMSGF) MSG(&MESSAGE)                         /*CUP006*/
             CHGDTAARA  DTAARA(MIDASMSG (401 50)) VALUE(&MESSAGE)                         /*CUP006*/
             CALL  PGM(SCC0010) PARM('UPC0259' 'OPTION2' &REPLY1)
             IF         COND(&REPLY1 *EQ 'J') THEN(DO)
                DSPJOBLOG
                GOTO       CMDLBL(CHOOSE)
             ENDDO
             IF         COND(&REPLY1 *EQ 'C') THEN(DO)
                CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')
                GOTO       CMDLBL(ENDPGM)
             ENDDO
             IF         COND(&REPLY1 *EQ 'I') THEN(DO)
                CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')
                GOTO       CMDLBL(READNEXT)
             ENDDO
             IF         COND(&REPLY1 *EQ 'R') THEN(DO)                                    /*CUP006*/
                CHGDTAARA  DTAARA(MIDASMSG *ALL) VALUE(' ')                               /*CUP006*/
                GOTO       CMDLBL(RETRY)                                                  /*CUP006*/
             ENDDO                                                                        /*CUP006*/
/* If not one of the options then redisplay screen with message */
/************IF      COND(&REPLY1 *NE 'J' *AND &REPLY1 *NE 'I' +                       */ /*CUP006*/
/************          *AND &REPLY1 *NE 'C') THEN(DO)                                  */ /*CUP006*/
             IF         COND(&REPLY1 *NE 'J' *AND &REPLY1 *NE 'I' +
                          *AND &REPLY1 *NE 'C' *AND &REPLY1 *NE +
                          'R') THEN(DO)                                                   /*CUP006*/
                RTVMSG  MSGID(UPM0012) MSGF(UTMSGF) MSG(&MESSAGE)
                CHGDTAARA DTAARA(MIDASMSG (551 50)) VALUE(&MESSAGE)
                GOTO       CMDLBL(CHOOSE)
             ENDDO
/*********************************************************************/
ABNOR:
 /* Recursive error */
             IF         COND(&IN01) THEN(DO)
                SNDPGMMSG  MSGID(CPF9898) MSGF(*LIBL/QCPFMSG) +
                          MSGDTA('Recursive error in pgm UPC0259') +
                          MSGTYPE(*ESCAPE)
             ENDDO
 
             CHGVAR     VAR(&IN01) VALUE('1')
ABNOR2:
 /* Receive escape error message */
             RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                          MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
 /* Pass it back to calling program */
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
             CHGVAR     VAR(&REPLY1) VALUE(C)
ENDPGM:
             IF         COND(&REPLY1 *NE 'C') THEN(DO)
/* Call program to report on items that failed to copy */
/***********    OVRDBF     FILE(UPCERRQT) TOFILE(QTEMP/UPCERRQT)                       */ /*CPK015*/
                OVRDBF     FILE(UPCERRQT) TOFILE(&LIBF/UPCERRQT)                          /*CPK015*/
                CALL       PGM(UP0259)
                DLTOVR     FILE(UPCERRQT)
/* Call program to report on items that weren't found in 'to' library */
/*  if CREATE = *NO.                                                  */                  /*CPK015*/
                IF         COND(&CRT *EQ '*NO') THEN(DO)                                  /*CPK015*/
                   CALL       PGM(UP0260)
                   IF         COND(&TYPE *EQ '1') THEN(DO)
/* Call program to display selection screen for items not found in   */
/* 'to' library.                                                    */
                      CALL       PGM(UP0261) PARM(&LIBT)
                   ENDDO
                ENDDO                                                                     /*CPK015*/
             ENDDO
 
             DLTOVR     FILE(CPYDTA) LVL(*JOB)                                            /*CUP020*/
 
/* Remove 'from' library from library list if it was added. */                            /*CPK015*/
             IF         COND(&REMOVE *EQ 'Y') THEN(DO)                                    /*CPK015*/
                RMVLIBLE   LIB(&LIBF)                                                     /*CPK015*/
             ENDDO                                                                        /*CPK015*/
             CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Finastra International Limited')
             RCLRSC
             ENDPGM
