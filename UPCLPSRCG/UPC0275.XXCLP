/*********************************************************************/
/*S*D****CLPBASE******************************************************/
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC0275 - Create Data areas                                 */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*       Last Amend No. CUP041  *REDUNDANT Date 01Aug14              */
/*       Prev Amend No. A1076141           Date 11Jan13              */
/*                      CBF012             Date 04Jul11              */
/*                      CUT008              Date 09Feb11             */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CUP030             Date 31Dec04              */
/*                      CPK018             Date 03Mar04              */
/* Midas Release 4.01 -----------------------------------------------*/
/*                      CPK015             Date 02Apr02              */
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.03 ---------------------------------------------------*/
/*                      CUP008             Date 21Jul00              */
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*                      CUP002             Date 28Apr99              */
/*                      CUP001 *CREATE     Date 06Aug98              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP041 - New Bridge methodology to combine menu options     */
/*       A1076141 - Change back to only having one type of DBU.      */
/*       CBF012 - BF Infrastructure: Upgradability                   */
/*       CUT008  - CRTOBJ rewrite.                                   */
/*                 Change of CRTOBJ parameters.                      */
/*       CUP030 - End journaling on moved objects.                   */
/*       CPK018 - MidasPlus packaging.  Upgrade of global layer.     */
/*       CPK015 - 4.01 packaging.  Handling DZLIB.                   */
/*       CUP008 - Create renames by using variable.                  */
/*       CUP002 - Additional monitoring of CRTOBJ.                   */
/*       CUP001 - Introduction of BRIDGE                             */
/*                                                                   */
/*********************************************************************/
/**********  PGM        PARM(&PTFSRC &LIBMOV &SBS &OWNER &AUTL &RETURN)  */               /*CBF012*/
/**********  PGM        PARM(&PTFSRC &LIBMOV &SBS &OWNER &AUTL &RETURN &MODE) */ /*CBF012 A1076141*/
             PGM        PARM(&PTFSRC &LIBMOV &SBS &OWNER &AUTL &RETURN)                 /*A1076141*/
 
             DCL        VAR(&PTFSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SBS) TYPE(*CHAR) LEN(2)
             DCL        VAR(&LIBMOV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OWNER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&AUTL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(1)
/**********  DCL        VAR(&MODE) TYPE(*CHAR) LEN(4)                         */ /*CBF012 A1076141*/
 
             DCL        VAR(&FRLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RTNLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DPLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTALIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DZLIB) TYPE(*CHAR) LEN(10)                                   /*CPK015*/
             DCL        VAR(&GMLIB) TYPE(*CHAR) LEN(10)                                   /*CPK018*/
             DCL        VAR(&GPLIB) TYPE(*CHAR) LEN(10)                                   /*CPK018*/
             DCL        VAR(&GTALIB) TYPE(*CHAR) LEN(10)                                  /*CPK018*/
             DCL        VAR(&LIBTYPE) TYPE(*CHAR) LEN(2)
             DCL        VAR(&USTS) TYPE(*CHAR) LEN(1)
             DCL        VAR(&NEWNAM) TYPE(*CHAR) LEN(10)                                  /*CUP008*/
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2001')
 
             DCLF       FILE(UPDLVCL6)
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGVAR     VAR(&DMLIB) VALUE(&SBS *CAT 'DMLIB')
             CHGVAR     VAR(&DPLIB) VALUE(&SBS *CAT 'DPLIB')
             CHGVAR     VAR(&DTALIB) VALUE(&SBS *CAT 'DTALIB')
             CHGVAR     VAR(&DZLIB) VALUE(&SBS *CAT 'DZLIB')                              /*CPK015*/
             CHGVAR     VAR(&GMLIB) VALUE(&SBS *CAT 'GMLIB')                              /*CPK018*/
             CHGVAR     VAR(&GPLIB) VALUE(&SBS *CAT 'GPLIB')                              /*CPK018*/
             CHGVAR     VAR(&GTALIB) VALUE(&SBS *CAT 'GTALIB')                            /*CPK018*/
 
             CHGVAR     VAR(&RETURN) VALUE(' ')
             CHGVAR     VAR(&USTS) VALUE('C')
 
READNEXT:
             IF         COND(&AUMBNM *NE ' ') THEN(DO)
/*/COPY UPCPYSRCG,C_UP0020A                                           */
             ENDDO
 
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(END)
             ENDDO
 
/**********  IF         COND(((&MODE *EQ '*NML') *AND +                              */ /*A1076141*/
/**********               (%SUBSTRING(&AUSRCF 1 2) *EQ 'HI')) *OR +                  */ /*A1076141*/
/**********               ((&MODE *EQ '*HIL') *AND +                                 */ /*A1076141*/
/**********               (%SUBSTRING(&AUSRCF 1 2) *NE 'HI'))) THEN(DO)       */ /*CBF012 A1076141*/
/**********     GOTO       CMDLBL(READNEXT)                                   */ /*CBF012 A1076141*/
/**********  ENDDO                                                            */ /*CBF012 A1076141*/
 
             CHGVAR     VAR(&LIBTYPE) VALUE('   ')
             CHGVAR     VAR(&LIBTYPE) VALUE(%SST(&AUSRCF 9 2))
             IF         COND(&LIBTYPE *EQ 'QT') THEN(GOTO +
                          CMDLBL(READNEXT))
             IF         COND(&LIBTYPE *EQ 'DT') THEN(DO)
                CHGVAR     VAR(&FRLIB) VALUE(&DTALIB)
             ENDDO
             IF         COND(&LIBTYPE *EQ 'DM') THEN(DO)
                CHGVAR     VAR(&FRLIB) VALUE(&DMLIB)
             ENDDO
             IF         COND(&LIBTYPE *EQ 'DP') THEN(DO)
                CHGVAR     VAR(&FRLIB) VALUE(&DPLIB)
             ENDDO
             IF         COND(&LIBTYPE *EQ 'DZ') THEN(DO)                                  /*CPK015*/
                CHGVAR     VAR(&FRLIB) VALUE(&DZLIB)                                      /*CPK015*/
             ENDDO                                                                        /*CPK015*/
             IF         COND(&LIBTYPE *EQ 'GM') THEN(DO)                                  /*CPK018*/
                CHGVAR     VAR(&FRLIB) VALUE(&GMLIB)                                      /*CPK018*/
             ENDDO                                                                        /*CPK018*/
             IF         COND(&LIBTYPE *EQ 'GP') THEN(DO)                                  /*CPK018*/
                CHGVAR     VAR(&FRLIB) VALUE(&GPLIB)                                      /*CPK018*/
             ENDDO                                                                        /*CPK018*/
             IF         COND(&LIBTYPE *EQ 'GT') THEN(DO)                                  /*CPK018*/
                CHGVAR     VAR(&FRLIB) VALUE(&GTALIB)                                     /*CPK018*/
             ENDDO                                                                        /*CPK018*/
 
/* If object not found then just create */
             RTVOBJD    OBJ(&AUMBNM) OBJTYPE(*DTAARA) RTNLIB(&RTNLIB)
             MONMSG     MSGID(CPF9801) EXEC(DO)
                GOTO CRTOBJ
             ENDDO
             MOVOBJ     OBJ(&RTNLIB/&AUMBNM) OBJTYPE(*DTAARA) +
                          TOLIB(&LIBMOV)
             MONMSG     MSGID(CPF2112) EXEC(DO)
/* If object already exists then try to rename it and move again */
/************   RNMOBJ     OBJ(&LIBMOV/&AUMBNM) OBJTYPE(*DTAARA) +                     */ /*CUP008*/
/************             NEWOBJ('#.' *TCAT &AUMBNM)                                   */ /*CUP008*/
                CHGVAR     VAR(&NEWNAM) VALUE('#.' *TCAT &AUMBNM)                         /*CUP008*/
                RNMOBJ     OBJ(&LIBMOV/&AUMBNM) OBJTYPE(*DTAARA) +
                          NEWOBJ(&NEWNAM)                                                 /*CUP008*/
/* If renamed object already exists then flag as failure */
                MONMSG     MSGID(CPF2112) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MOVOBJ     OBJ(&RTNLIB/&AUMBNM) OBJTYPE(*DTAARA) +
                          TOLIB(&LIBMOV)
             ENDDO
 
             ENDJRNOBJ  OBJ(&LIBMOV/&AUMBNM) OBJTYPE(*DTAARA)                             /*CUP030*/
             MONMSG     MSGID(CPF0000)                                                    /*CUP030*/
 
CRTOBJ:
/**********  CRTOBJ     SRCMBR(&AUMBNM) SRCFILE(&PTFSRC/&AUSRCF) +                     */ /*CUT008*/
/**********               PLIB(&FRLIB) OWNER(&OWNER) AUTL(&AUTL)                       */ /*CUT008*/
             CRTOBJ     OBJ(&FRLIB/&AUMBNM) SRCFILE(&PTFSRC/&AUSRCF) +
                          SRCMBR(*OBJ) OWNER(&OWNER) AUTL(&AUTL)                          /*CUT008*/
/************MONMSG     MSGID(SYS9898 SYS0011) EXEC(DO)            */ /*CUP002*/
             MONMSG     MSGID(SYS9898 SYS0011 SYS0017) EXEC(DO)       /*CUP002*/
                CHGVAR     VAR(&USTS) VALUE('F')
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
/* If moved version not found then data area is newe  */
             CHKOBJ     OBJ(&LIBMOV/&AUMBNM) OBJTYPE(*DTAARA)
             MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(READNEXT))
 
             CPYDTAARA  FMDTAARA(&LIBMOV/&AUMBNM) +
                          TODTAARA(&FRLIB/&AUMBNM) /*CUP009*/
             MONMSG     MSGID(CPF0000) EXEC(DO)
                CHGVAR     VAR(&USTS) VALUE('F')
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
             GOTO       CMDLBL(READNEXT)
 
             GOTO       CMDLBL(END)
 
 ABNOR:
             CHGVAR     VAR(&RETURN) VALUE('F')
 
END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
 
             ENDPGM
