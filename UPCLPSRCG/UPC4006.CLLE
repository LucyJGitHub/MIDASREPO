/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas UP ADBU Compare Report Generation')             */
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC4006 - ADBU Compare Report Generation                    */
/*                                                                   */
/*       (c) Finastra International Limited 2020                     */
/*                                                                   */
/*       Last Amend No. MD061992           Date 23Oct23              */
/*       Prev Amend No. CUT017 *CREATE     Date 17Mar20              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD061992 - Allow 3 char prefix for reference libraries      */
/*       CUT017 - Adapptive Database Upgrade                         */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&LIB1 &LIB2 &LAYER &BRGBRGLIB)

             DCL        VAR(&LIB1) TYPE(*CHAR) LEN(2)
/**********  DCL        VAR(&LIB2) TYPE(*CHAR) LEN(2) */                                /*MD061992*/
             DCL        VAR(&LIB2) TYPE(*CHAR) LEN(3)                                   /*MD061992*/
             DCL        VAR(&BRGBRGLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LAYER) TYPE(*CHAR) LEN(7)
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FLDUPD) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FLDVAL) TYPE(*CHAR) LEN(100)
             DCL        VAR(&WLENGTH) TYPE(*DEC) LEN(5 0) VALUE(50)
             DCL        VAR(&WMSG) TYPE(*CHAR) LEN(50) VALUE('DONE')
             DCL        VAR(&JBNO) TYPE(*CHAR) LEN(6)
             DCL        VAR(&NMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LOGFILEA) TYPE(*CHAR) LEN(10)

             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2020')

/* Global Monitor Message */

             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO CMDLBL(ABNOR))

/* Update Report Job Number */
             RTVJOBA    NBR(&JBNO)
             CHGVAR     VAR(&NMBR) VALUE('C_' *TCAT &JBNO)
             CHGVAR        VAR(&FLDUPD) VALUE('UPRPJN')
             CHGVAR     VAR(&FLDVAL) VALUE(&JBNO)
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CALL UPGCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CALL UPZCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO

/* Update Report Status with 'Running' */
             CHGVAR        VAR(&FLDUPD) VALUE('UPRPSS')
             CHGVAR     VAR(&FLDVAL) VALUE('R')
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CALL UPGCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CALL UPZCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO

/* Generate report */
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(OVRDBF +
                          FILE(UPCLOGPD) TOFILE(UPGLOGPD))
             IF         COND(&LAYER *EQ '*ZONE') THEN(OVRDBF +
                          FILE(UPCLOGPD) TOFILE(UPZLOGPD))
             OVRPRTF    FILE(UP4007P1) OUTQ(*JOB)
             CALL       PGM(UP4007) PARM(&LIB1 &LIB2 &LAYER)
             OVRPRTF    FILE(UP4006P1) OUTQ(*JOB)
             CALL       PGM(UP4006) PARM(&LIB1 &LIB2 &LAYER '         ')

/* Generate driver file */
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
                CLRPFM     FILE(UPZDRVTD)
             CALL       PGM(UP4008) PARM(&LIB1 &LIB2)
                CLRPFM     FILE(UPZXRIPD)
             CALL       PGM(UPZXRFLSI) PARM(&LIB2 &ERROR)
             ENDDO

/* Generate driver file */
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
                CLRPFM     FILE(UPGDRVTD)
             CALL       PGM(UP4009) PARM(&LIB1 &LIB2)
                CLRPFM     FILE(UPGXRIPD)
             CALL       PGM(UPGXRFLSI) PARM(&LIB2 &ERROR)
             ENDDO

/* List of dependent files based on driver file */
/*If *GLOBAL */
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CHGVAR     VAR(&LOGFILEA) VALUE('UPGLOGPD')
             ENDDO
/*If *ZONE */
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CHGVAR     VAR(&LOGFILEA) VALUE('UPZLOGPD')
             ENDDO

             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CLRPFM     FILE(UPGXRFPD)
             OVRDBF     FILE(UPXREFPD) TOFILE(UPGXRFPD)
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CLRPFM     FILE(UPZXRFPD)
             OVRDBF     FILE(UPXREFPD) TOFILE(UPZXRFPD)
             ENDDO
             OVRDBF     FILE(UPCLOGPD) TOFILE(&LOGFILEA)

             CALL       PGM(UPXREFLS2) PARM(&LAYER)

/* List of dependent files in Ref System based on driver file */
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CLRPFM     FILE(UPZXRRPD)
             CALL       PGM(UPZXRFLSR) PARM(&LIB2 &ERROR)
             ENDDO

/* List of dependent files in Ref System based on driver file */
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CLRPFM     FILE(UPGXRRPD)
             CALL       PGM(UPGXRFLSR) PARM(&LIB2 &ERROR)
             ENDDO


/* Update Compare Work File job Status with 'Complete' */
             CHGVAR        VAR(&FLDUPD) VALUE('UPRPSS')
             CHGVAR     VAR(&FLDVAL) VALUE('C')
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CALL UPGCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
/* Send message to server */
             CALL       PGM(QSNDDTAQ) PARM('ADBC_GSVR' '*LIBL     ' +
                               &WLENGTH &WMSG)
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CALL UPZCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
/* Send message to server */
             CALL       PGM(QSNDDTAQ) PARM('ADBC_ZSVR' '*LIBL     ' +
                               &WLENGTH &WMSG)
             ENDDO

             GOTO       CMDLBL(END)

/* Abnormal termination */

 ABNOR:      CHGJOB     SWS(XXXXXX11)

/* Update Compare Work File job Status with 'Abnormal' */
             CHGVAR        VAR(&FLDUPD) VALUE('UPRPSS')
             CHGVAR     VAR(&FLDVAL) VALUE('A')
             IF         COND(&LAYER *EQ '*GLOBAL') THEN(DO)
             CALL UPGCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO
             IF         COND(&LAYER *EQ '*ZONE') THEN(DO)
             CALL UPZCMPWR ('*UPDATE   ' &LIB1 &FLDUPD &FLDVAL &ERROR &RETURN)
             IF         COND(&ERROR *NE '          ') THEN(GOTO ABNOR)
             ENDDO

             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Program UPC4006 ended +
                          abnormally - see job log') TOMSGQ(MOPERQ)
             MONMSG     MSGID(CPF0000 MCH0000)

/* End program */

 END:        ENDPGM
