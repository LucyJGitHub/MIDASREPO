/*********************************************************************/
/*XBI    OVRDBF FILE(UPDLVCQT) TOFILE(UPDLVCPD)                      */
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas UP Review/Conflict/Process *ALL Action Files')  */
/*********************************************************************/
/*                                                                   */
/*       Midas - Bridge                                              */
/*                                                                   */
/*       UPC8003 - Review/Conflict/Process *ALL Action Files         */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2003           */
/*                                                                   */
/*       Last Amend No. CUP040  *REWRITE   Date 04Mar13              */
/*       Prev Amend No. CUP021             Date 24Jan11              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK020             Date 02Aug04              */
/*                      CUP022             Date 08Apr04              */
/*                      CUP020  *CREATE    Date 03Jan02              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUP040 - New deliverable data methodology.                  */
/*       CUP021 - Rewrite of Action File processing.                 */
/*       CPK020 - Take out unnecessary error handling.               */
/*       CUP022 - Pass in &DPLIB instead of &SBSID.                  */
/*                Perform validity check before action file cmd is   */
/*                called.                                            */
/*                When error, output to error message file and       */
/*                generate error report at the end of this program.  */
/*                Remove DSPFFD because it will be done in UPC000799.*/
/*       CUP020 - Additional changes for Action Files                */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&MODE &NEWLIB)
 
             DCL        VAR(&MODE) TYPE(*CHAR) LEN(9)
             DCL        VAR(&NEWLIB) TYPE(*CHAR) LEN(10)
 
             DCL        VAR(&OLDLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&AAORIF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UPGTYPE) TYPE(*CHAR) LEN(5)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ERROR)    TYPE(*CHAR) LEN(1)
/* Parameters passed to UP008010. */
             DCL        VAR(&GENPGM)   TYPE(*CHAR) LEN(10)  VALUE(UPC8003)
             DCL        VAR(&ERRORMSG) TYPE(*CHAR) LEN(100)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2013')
 
             DCLF       FILE(UPDLVCQT)
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
READNEXT:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(END)
             ENDDO
 
/* Check program to see if file has Action File and retrieve original file. */
             CALL       PGM(UP000799V) PARM(&AUMBNM &AAORIF &RETURN)
             IF         COND(&RETURN *EQ 'Y') THEN(DO)
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
/* Find out where the current deliverable data file is. */
             RTVOBJD    OBJ(&AUMBNM) OBJTYPE(*FILE) RTNLIB(&OLDLIB)
/* Call program to find migration type; if file is new and the methodology is */
/*  new then there is no processing.                                          */
             CALL       PGM(UPC000800) PARM('*UPG' &OLDLIB &AUMBNM +
                          &AAORIF ' ' &UPGTYPE)
 
/* REVIEW */
             IF         COND(&MODE *EQ '*REVIEW') THEN(DO)
                IF         COND(&UPGTYPE *EQ '*OTOO' *OR &UPGTYPE *EQ +
                             '*NEWO') THEN(DO)
                   ACTIONFILE MODE(*RVW) FILE(&AUMBNM)
                ENDDO
                ELSE       CMD(DO)
                   CALL       PGM(UPC000699) PARM('*RVW' &AUMBNM &OLDLIB +
                                &NEWLIB &UPGTYPE)
                ENDDO
             ENDDO
 
/* CONFLICT */
             IF         COND(&MODE *EQ '*CONFLICT') THEN(DO)
                IF         COND(&UPGTYPE *EQ '*OTOO' *OR &UPGTYPE *EQ +
                             '*NEWO') THEN(DO)
                   ACTIONFILE MODE(*CFT) FILE(&AUMBNM)
                ENDDO
                ELSE       CMD(DO)
                   CALL       PGM(UPC000699) PARM('*CFT' &AUMBNM &OLDLIB +
                                &NEWLIB)
                ENDDO
             ENDDO
 
/* PROCESS  */
             IF         COND(&MODE *EQ '*PROCESS') THEN(DO)
                IF         COND(&UPGTYPE *EQ '*OTOO' *OR &UPGTYPE *EQ +
                             '*NEWO') THEN(DO)
                   ACTIONFILE MODE(*PRC) FILE(&AUMBNM)
                ENDDO
                ELSE       CMD(DO)
                   CALL       PGM(UPC000699) PARM('*PRC' &AUMBNM &OLDLIB +
                                &NEWLIB)
                ENDDO
             ENDDO
 
/* If an error, send error line and read next record. */
             IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                CHGJOB     SWS(XXXXXX00)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                CHGVAR     VAR(&ERRORMSG) VALUE('Error when running +
                             Action File for' *BCAT &AUMBNM)
                CALL       PGM(UP008010) PARM('*WRITE' &GENPGM &ERRORMSG)
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                   GOTO       CMDLBL(ABNOR)
                ENDDO
             ENDDO
 
             GOTO       CMDLBL(READNEXT)
 
ABNOR:
             CHGJOB     SWS(XXXXXX11)
             GOTO       CMDLBL(ABNOREND)
 
END:
/* Call program to produce report. */
             IF         COND(&ERROR *EQ 'Y') THEN(DO)
                CALL       PGM(UP008010) PARM('*REPORT' &GENPGM ' ')
                IF         COND(%SWITCH(XXXXXX11)) THEN(DO)
                   GOTO       CMDLBL(ABNOREND)
                ENDDO
                CHGSPLFA   FILE(UP008010P1) SPLNBR(*LAST) USRDTA(&MODE)
             ENDDO
 
ABNOREND:
             ENDPGM
