/*********************************************************************/
/*STD    CLPBASE                                                     */
/*EXI    TEXT('Midas UP Physical files upgrade for DMLIB only')      */
/*********************************************************************/
/*                                                                   */
/*       Midas - Upgrade Module                                      */
/*                                                                   */
/*       UPC0246 - Physical Files Upgrade for DMLIB only             */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/*********************************************************************/
/* This program monitors for a large and specific set of messages    */
/* which may be generated by the CPYF commands.  If this monitoring  */
/* is amended in any way he following programs may also need to be   */
/* changed:                                                          */
/*             SMC000037                                             */                   /*CUP038*/
/*             SMC000038                                             */                   /*CUP038*/
/*             SMC000045                                             */                   /*CUP038*/
/*             UPC0245                                               */
/*             UPC0259                                               */
/*             UPC0263                                               */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       Last Amend No. CUT008              Date 09Feb11             */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/*       Prev Amend No. CUP038             Date 13Sep07              */
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.03 ---------------------------------------------------*/
/*                      CUP008             Date 21Jul00              */
/*                      CUP007             Date 16May00              */
/* Midas DBA 3.01 ---------------------------------------------------*/
/*                      CPK010             Date 22Oct99              */
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*                      CUP002             Date 26Apr99              */
/*                      CUP001 *CREATE     Date 06Aug98              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUT008  - CRTOBJ rewrite.                                   */
/*                 Change of CRTOBJ parameters.                      */
/*       CUP038 - Re-organisation of migration tools.  Cosmetic.     */
/*       CUP008 - Create renames by using variable.                  */
/*       CUP007 - Additional handling for special case files.        */
/*       CPK010 - Problems found at DBA R3.00 alpha site             */
/*       CUP002 - Additional message monitoring                      */
/*       CUP001 - Introduction of BRIDGE                             */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&PTFSRC &DMLIBUPG &OWNER &AUTL +
                          &DMLIBMOV &RETURN)
 
             DCL        VAR(&PTFSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMLIBUPG) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DMLIBMOV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OWNER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&AUTL) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RETURN) TYPE(*CHAR) LEN(1)
 
             DCL        VAR(&USTS) TYPE(*CHAR) LEN(1)
             DCL        VAR(&NEWNAM) TYPE(*CHAR) LEN(10)                                  /*CUP008*/
             DCL        VAR(&CPYFLD) TYPE(*CHAR) LEN(64) VALUE('(c) +
                          Misys International Banking Systems Ltd. +
                          2001')
 
             DCLF       FILE(UPDLVCL5)
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGVAR     VAR(&RETURN) VALUE(' ')
             CHGVAR     VAR(&USTS) VALUE('C')
READNEXT:
             IF         COND(&AUMBNM *NE ' ') THEN(DO)
/*/COPY UPCPYSRC,C_UP0020A                                           */
             ENDDO
 
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
                GOTO       CMDLBL(END)
             ENDDO
 
/* If file not in DMLIB then ignore */
             IF         COND(%SST(&AUSRCF 9 2) *EQ 'DM') THEN(DO)
/* If object not found then ignore */
                CHKOBJ     OBJ(&DMLIBUPG/&AUMBNM) OBJTYPE(*FILE)
                MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(READNEXT))
 
                MOVOBJ     OBJ(&DMLIBUPG/&AUMBNM) OBJTYPE(*FILE) +
                          TOLIB(&DMLIBMOV)
                MONMSG     MSGID(CPF3201) EXEC(DO)
/* If object already exists then try to rename it and move again */
/************      RNMOBJ     OBJ(&DMLIBMOV/&AUMBNM) OBJTYPE(*FILE) +                  */ /*CUP008*/
/************             NEWOBJ('#.' *TCAT &AUMBNM)                                   */ /*CUP008*/
                   CHGVAR     VAR(&NEWNAM) VALUE('#.' *TCAT &AUMBNM)                      /*CUP008*/
                   RNMOBJ     OBJ(&DMLIBMOV/&AUMBNM) OBJTYPE(*FILE) +
                          NEWOBJ(&NEWNAM)                                                 /*CUP008*/
/* If renamed object already exists then flag as failure */
                   MONMSG     MSGID(CPF3201) EXEC(DO)
                      CHGVAR     VAR(&USTS) VALUE('F')
                      GOTO       CMDLBL(READNEXT)
                   ENDDO
                   MOVOBJ     OBJ(&DMLIBUPG/&AUMBNM) OBJTYPE(*FILE) +
                          TOLIB(&DMLIBMOV)
                ENDDO
CRTOBJ:
/**********     CRTOBJ     SRCMBR(&AUMBNM) SRCFILE(&PTFSRC/&AUSRCF) +                  */ /*CUT008*/
/**********               PLIB(&DMLIBUPG) OWNER(&OWNER) AUTL(&AUTL)                    */ /*CUT008*/
                CRTOBJ     OBJ(&DMLIBUPG/&AUMBNM) +
                             SRCFILE(&PTFSRC/&AUSRCF) SRCMBR(*OBJ) +
                             OWNER(&OWNER) AUTL(&AUTL)                                    /*CUT008*/
/************   MONMSG     MSGID(SYS9898 SYS0011) EXEC(DO)         */ /*CUP002*/
                MONMSG     MSGID(SYS9898 SYS0011 SYS0017) EXEC(DO)    /*CUP002*/
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
CPYF:
                CLRPFM     FILE(&DMLIBUPG/&AUMBNM)
                MONMSG     MSGID(CPF0000)
                                                                                          /*CUP007*/
/* Check for special processing before attempting standard copies */                      /*CUP007*/
                IF         COND(%SST(&AUFMTO 1 1) *EQ 'S') THEN(DO)                       /*CUP007*/
                   IF         COND(%SST(&AUFMTO 2 4) *EQ '*MAP') THEN(DO)                 /*CUP007*/
                      GOTO       CMDLBL(TAG02)                                            /*CUP007*/
                   ENDDO                                                                  /*CUP007*/
                   IF         COND(%SST(&AUFMTO 2 6) *EQ '*NOCHK') THEN(DO)               /*CUP007*/
                      GOTO       CMDLBL(TAG03)                                            /*CUP007*/
                   ENDDO                                                                  /*CUP007*/
                ENDDO                                                                     /*CUP007*/
                                                                                          /*CUP007*/
                CPYF       FROMFILE(&DMLIBMOV/&AUMBNM) +
                          TOFILE(&DMLIBUPG/&AUMBNM) FROMMBR(*ALL) +
                          TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                          FMTOPT(*NONE)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 1        */
/*                                                                   */
/* First category of monitored messages are critical errors and will */
/* be flagged as failed without attempting other types of CPYF as    */
/* they would also fail.                                             */
/*********************************************************************/
/* If either from-file or to-file does not exist */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2861) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2802) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If insufficient authority to either from-file or to-file */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2864) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2862) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If from-file has more fields than to-file, treat as error */                           /*CPK010*/
             MONMSG     MSGID(CPF2817) CMPDTA(CPF2965) EXEC(DO)                           /*CPK010*/
                CHGVAR     VAR(&USTS) VALUE('F')                                          /*CPK010*/
                GOTO       CMDLBL(READNEXT)                                               /*CPK010*/
             ENDDO                                                                        /*CPK010*/
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 2        */
/*                                                                   */
/* Second category of monitored messages are non-critical errors and */
/* will be flagged as completed without attempting other types of    */
/* as they would also fail.                                          */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)    /*CUP002*/
                   GOTO       CMDLBL(READNEXT)                        /*CUP002*/
                ENDDO                                                 /*CUP002*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NONE) - Category 3        */
/*                                                                   */
/* Third category of monitored messages are for possibly critical    */
/* errors but further CPYFs should be attempted.                     */
/*********************************************************************/
/* If different FMTOPT required */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2969) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2963) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2962) EXEC(DO)
                   GOTO       CMDLBL(TAG02)
                ENDDO
 
/* If CPYF worked then read next record */
                GOTO       CMDLBL(READNEXT)
 TAG02:
                CPYF       FROMFILE(&DMLIBMOV/&AUMBNM) +
                          TOFILE(&DMLIBUPG/&AUMBNM) FROMMBR(*ALL) +
                          TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 1   */
/*                                                                   */
/* It is possible that a message from the 3rd category for the first */
/* CPYF was received first; therefore, some category 1 errors must   */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 2   */
/*                                                                   */
/* It is possible that a message from the 3rd category for the first */
/* CPYF was received first; therefore, some category 2 errors must   */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)    /*CUP002*/
                   GOTO       CMDLBL(READNEXT)                        /*CUP002*/
                ENDDO                                                 /*CUP002*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*MAP *DROP) - Category 3   */
/*                                                                   */
/* Third category of monitored messages are for possibly critical    */
/* errors but further CPYFs should be attempted.                     */
/*********************************************************************/
/* If different FMTOPT required */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2963) EXEC(DO)
                   GOTO       CMDLBL(TAG03)
                ENDDO
 
/* If CPYF worked then read next record */
                GOTO       CMDLBL(READNEXT)
 TAG03:
                CPYF       FROMFILE(&DMLIBMOV/&AUMBNM) +
                          TOFILE(&DMLIBUPG/&AUMBNM) FROMMBR(*ALL) +
                          TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                          FMTOPT(*NOCHK)
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NOCHK) - Category 1       */
/*                                                                   */
/* It is possible that a message from the 3rd category for the       */
/* second CPYF was received first; therefore, some category 1 errors */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file or to-file is locked, or to-file is in use */
                MONMSG     MSGID(CPF2952 CPF2909) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/* If to-file has insufficient allowed number of members */
                MONMSG     MSGID(CPF2888) EXEC(DO)
                   CHGVAR     VAR(&USTS) VALUE('F')
                   GOTO       CMDLBL(READNEXT)
                ENDDO
/*********************************************************************/
/*     Message monitoring for CPYF FMTOPT(*NOCHK) - Category 2       */
/*                                                                   */
/* It is possible that a message from the 3rd category for the       */
/* second CPYF was received first; therefore, some category 2 errors */
/* be monitored for again.                                           */
/*********************************************************************/
/* If from-file has no members or its only member is empty */
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2868) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2869) EXEC(DO)    /*CUP002*/
                   GOTO       CMDLBL(READNEXT)                        /*CUP002*/
                ENDDO                                                 /*CUP002*/
                MONMSG     MSGID(CPF2817) CMPDTA(CPF2870) EXEC(DO)
                   GOTO       CMDLBL(READNEXT)
                ENDDO
 
/* If CPYF worked then read next record */
                GOTO       CMDLBL(READNEXT)
             ENDDO
 
             GOTO       CMDLBL(READNEXT)
 
             GOTO       CMDLBL(END)
 ABNOR:
             CHGVAR     VAR(&RETURN) VALUE('F')
 
END:         CHGVAR     VAR(&CPYFLD) VALUE('(c) +
                          Misys International Banking Systems Ltd.')
 
             ENDPGM
