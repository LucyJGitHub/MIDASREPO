     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2010')
      *****************************************************************
/*XBIA***OVRDBF*FILE(RAME1)*TOFILE(UPRAMETPD)**************************                       CUP021
/*XBIB***OVRDBF*FILE(RAME2)*TOFILE(UPRAMETPD)**************************                       CUP021
/*STD****RPGBASEBND****************************************************                       CUP021
      *****************************************************************
      *                                                               *
      *  Midas - Bridge                                               *
      *                                                               *
      *  UP001838 - Build Action File for CBRAMEPD                    *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2010            *
      *                                                               *
      *  Last Amend No. CUP021  *REDUNDANT Date 11Feb11               *
      *  Prev Amend No. BUG27914*CREATE    Date 21Jul10               *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  CUP021 - Rewrite of Action File processing                   *
      *  BUG27914 - RAME Design Changes                               *
      *                                                               *
      *****************************************************************
      *                                                               *
      * Function of indicators                                        *
      *                                                               *
      *       20      End of file                                     *
      *       30      Chain - record not found                        *
      *       69      Read, write or chain fail                       *
      *       70 - 72 Indicators for changed fields                   *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E  I N D E X                               *
      *                                                               *
      * *PSSR - Error processing                                      *
      * *INZSR - Initialise                                           *
      *                                                               *
      *    The *INZSR subroutine will only get called automatically   *
      *    on entry to the module the first time it is run            *
      *    (unless you end the program with LR on).  Similarly        *
      *    D-spec initialisation only happens the first time.  Use    *
      *    RESET for subsequent passes.                               *
      *                                                               *
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
      **
      *
     FRAME1     IF   E             DISK    INFSR(*PSSR)
     FRAME2     IF   E           K DISK    INFSR(*PSSR)
     F                                     RENAME(CBRAMED0:RAMEF) PREFIX(X)
     FUPRAMEPD  O    E             DISK    INFSR(*PSSR)
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ D-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
     D LDA           E DS           256    EXTNAME(LDA)
      *
      ** Local data area for database error details
      ** *LOCK IN LDA immediately before and OUT LDA immediately
      ** after each database error handling.
      **
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
      ** The following /COPY line includes all the defined fields in the
      ** PSDS.  They have meaningful names, prefixed by 'PS'.
      *
     D/COPY ZACPYSRC,PSDS
      *
      ** Program Status Data Structure
      *
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
      *
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
      *
      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
      *
     D MODE            S              1
     D @RUN            S              1
     D INTEST          S              3
     D INTNUM          S              3  0
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      ** +--- Start of Main processing -----------------------------------+
      ** ¦                                                                ¦
      ** ¦ Initial processing is performed automatically: the *INZSR is   ¦
      ** ¦ executed at program activation.                                ¦
      ** ¦                                                                ¦
      ** +----------------------------------------------------------------+
      *
      *********************************************************************
      * MAIN PROCEDURE                                                    *
      *********************************************************************
      *
     C                   READ      RAME1                                6920
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   DOW       *IN20 = *OFF
     C     COMP          CHAIN     RAMEF                              3069
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** If record not found then record has been deleted or added
      **  depending on mode.
      *
     C                   IF        *IN30 = *ON
     C                   MOVE      MODE          REACTC
     C                   WRITE     UPRAMED0                             69
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
     C                   ENDIF
      *
      ** Need to find differences but this should only be run once;
      **  run only if mode is 'Delete'.
      *
     C                   IF        MODE = 'D'
      *
      ** If record found then look for any differences; only look in
      **  fields that have data all of the time.
      *
     C                   IF        *IN30 = *OFF
     C                   MOVE      'A'           REACTC
      *
      ** Component Name
      *
     C                   IF        RECOTT <> XRECOTT
     C                   SETON                                        70
     C                   ENDIF
      *
      ** Component Sequence Number
      *
     C                   IF        RECSEQ <> XRECSEQ
     C                   SETON                                        71
     C                   ENDIF
      *
      ** Request Available flag
      *
     C                   IF        REFLAG <> XREFLAG
     C                   SETON                                        72
     C                   ENDIF
      *
     C                   MOVEA     *IN(70)       INTEST
     C                   MOVE      INTEST        INTNUM
      *
      ** If any indicators are set on then write record.
      *
     C                   IF        INTNUM <> 0
     C                   WRITE     UPRAMED0                             69
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
      *
      ** Set values to write second record.
      *
     C                   EVAL      RECOTT    = XRECOTT
     C                   EVAL      RECSEQ    = XRECSEQ
     C                   EVAL      REFLAG    = XREFLAG
      *
     C                   WRITE     UPRAMED0                             69
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDIF
     C                   ENDIF
      *
      ** Read next record
      *
     C                   MOVEA     '000'         *IN(70)
      *
     C                   READ      RAME1                                6920
     C                   IF        *IN69 = *ON
     C                   EXSR      *PSSR
     C                   ENDIF
      *
     C                   ENDDO
      *
     C                   SETON                                        LR
     C                   RETURN
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *INZSR - Program Initialisation routine                       *
      *                                                               *
      * Called by: Implicitly on program activation                   *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
      *
     C     *INZSR        BEGSR
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
      *
     C     COMP          KLIST
     C                   KFLD                    RECOTT
     C                   KFLD                    RECSEQ
      *
     C                   ENDSR
      *
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: None                                               *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
      *
     C     *PSSR         BEGSR
      *
     C                   IF        @RUN = *BLANK
     C                   EVAL      @RUN = 'Y'
     C                   DUMP
      *
     C                   ENDIF
      *
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
     C                   RETURN
      *
     C                   ENDSR
      *
