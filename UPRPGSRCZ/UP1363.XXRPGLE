      *****************************************************************
     H DEBUG
     H COPYRIGHT('(c) Misys International Banking Systems Ltd. 2003')
      *****************************************************************
/*S*D****RPGBASEBND****************************************************                       CUP021
      *****************************************************************
      *                                                               *
      *  Midas - Bridge                                               *
      *                                                               *
      *  UP1363 - Action file compatibilty report for UPGSASPD        *
      *                                                               *
      *  Function:  This program compares the differences between     *
      *             Action file delivered and the system.             *
      *                                                               *
      *  (c) Misys International Banking Systems Ltd. 2003            *
      *                                                               *
      *  Last Amend No. CUP021  *REDUNDANT Date 11Feb11               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      *  Prev Amend No. CUP022  *CREATE    Date 29Jan03               *
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  CUP021 - Rewrite of Action File processing                   *
      *  CUP022 - Creation of new set of Action File utilities.       *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  Use of indicators.                                           *
      *                                                               *
      *    30         Error on Read                                   *
      *    31         EOF on Read                                     *
      *    32         Chain Fail on Insert routine                    *
      *    33         Chain Fail on Delete routine                    *
      *    34         Record there on chain but different             *
      *    35         Chain Fail on Amend routine                     *
      *    36         Record there on Chain but different             *
      *    37         Compare Indicator for Delete Routine            *
      *    38         Compare Indicator for Amend Routine             *
      *    39         Switched on if a record is found on file(Delete)*
      *    40         Conflicts detected                              *
      *    41         First line of record written                    *
      *    42         Same Record in Sys and UP for Insert            *
      *    60         Do not run report if error on Amends            *
      *    70         Error on Write                                  *
      *    98         Date Format                                     *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E  I N D E X                               *
      *                                                               *
      * *PSSR - Error processing                                      *
      * *INZSR - Initialise                                           *
      *                                                               *
      *    The *INZSR subroutine will only get called automatically   *
      *    on entry to the module the first time it is run            *
      *    (unless you end the program with LR on).  Similarly        *
      *    D-spec initialisation only happens the first time.  Use    *
      *    RESET for subsequent passes.                               *
      *                                                               *
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ F-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
     FUPGSASPD  IF   E             DISK    INFSR(*PSSR) Prefix(UP_) USROPN
     FCGGSASL0  IF   E           K DISK    INFSR(*PSSR) Prefix(SYS_) USROPN
     FUP0803P1  O    E             PRINTER INFDS(SPOOL)
 
      *****************************************************************
      /EJECT
      *****************************************************************
      ** +--------------------------------------+
      ** ¦ D-specs                              ¦
      ** ¦ =======                              ¦
      ** +--------------------------------------+
     D LDA           E DS           256    EXTNAME(LDA)
      *
      ** Local data area for database error details
      ** *LOCK IN LDA immediately before and OUT LDA immediately
      ** after each database error handling.
      **
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
      *
     D RUNDAT        E DS                  EXTNAME(RUNDAT)
      *
      ** Data Area giving Installation Control Details
 
      ** The following /COPY line includes all the defined fields in the
      ** PSDS.  They have meaningful names, prefixed by 'PS'.
 
     D/COPY ZACPYSRC,PSDS
      *
      ** Program Status Data Structure
      *
      ** +--------------------------------------+
      ** ¦ Named constants                      ¦
      ** ¦ ===============                      ¦
      ** +--------------------------------------+
 
     D Header          C                   'Report of the differences between -
     D                                     the Existing System Record and the -
     D                                     Replacement Record'
 
     D Counter         C                   '---------+---------+---------+------
     D                                     ----+---------+---------+---------+--
     D                                     --------+---------+---------+'
 
      ** +--------------------------------------+
      ** ¦ Arrays and Data Structures           ¦
      ** ¦ ==========================           ¦
      ** +--------------------------------------+
     D UpdatArray      S              1A   DIM(81)
 
     D SysArray        S              1A   DIM(81)
 
     D ErrorArray      S              1A   DIM(81)
 
      ** Data Structure for the Update file
     D                 DS
     D UP_GAFGST
     D UP_GALGST
     D UP_GARECI
     D UP_GASEQA
     D UP_GADESC
     D NCU_GAAJOB                          LIKE(UP_GAAJOB)
     D NCU_GAAUSR                          LIKE(UP_GAAUSR)
     D NCU_GAATIM                          LIKE(UP_GAATIM)
     D NCU_GAARDT                          LIKE(UP_GAARDT)
     D NCU_GAAACT                          LIKE(UP_GAAACT)
     D NCU_GARDNB                          LIKE(UP_GARDNB)
     D  Updfield               1     81A
     D  UPDLIN1                1     81A
 
      ** Data Structure for the Core file
     D                 DS
     D SYS_GAFGST
     D SYS_GALGST
     D SYS_GARECI
     D SYS_GASEQA
     D SYS_GADESC
     D NCS_GAAJOB                          LIKE(SYS_GAAJOB)
     D NCS_GAAUSR                          LIKE(SYS_GAAUSR)
     D NCS_GAATIM                          LIKE(SYS_GAATIM)
     D NCS_GAARDT                          LIKE(SYS_GAARDT)
     D NCS_GAAACT                          LIKE(SYS_GAAACT)
     D NCS_GARDNB                          LIKE(SYS_GARDNB)
     D  CoreFld                1     81A
     D  SYSLIN1                1     81A
 
      ** Data Structure for the Error indicators
     D                 DS            81
     D  Indfld                 1     81A
     D  INDLIN1                1     81A
 
     DSPOOL            DS
     D SFILE                  83     92
     D SFNUM                 123    124B 0
     D OFLLN                 188    189B 0
     D PRTLN                 367    368B 0
 
      ** +--------------------------------------+
      ** ¦ Declared variables                   ¦
      ** ¦ ==================                   ¦
      ** +--------------------------------------+
 
     D @RUN            S              1
     D KEY_GAFGST      S                   LIKE(UP_GAFGST)
     D KEY_GALGST      S                   LIKE(UP_GALGST)
     D X               S              5  0
     D UPDFIL          S             10
     D SYSFIL          S             10
     D ACTION          S              7
     D RMLN            S              2  0
     D Amends          S              5  1
     D COUNT           S            100
     D COUNT81         S             81
     D WAmends         S              5  1
     D Remainder       S              1
 
      *****************************************************************
      /EJECT
      *****************************************************************
      *
      ** +--- Start of Main processing -----------------------------------+
      ** ¦                                                                ¦
      ** ¦ Initial processing is performed automatically: the *INZSR is   ¦
      ** ¦ executed at program activation.                                ¦
      ** ¦                                                                ¦
      ** +----------------------------------------------------------------+
 
      *********************************************************************
      * MAIN PROCEDURE                                                    *
      *********************************************************************
      *
      * Fill fields not to be compared with '='s, so that they  will not be
      * any different between the system file and the update file.
     C                   EVAL      NCU_GAAJOB  = '=========='
     C                   EVAL      NCU_GAAUSR  = '=========='
     C                   EVAL      NCU_GAATIM  = 0
     C                   EVAL      NCU_GAARDT  = '======='
     C                   EVAL      NCU_GAAACT  = '='
     C                   EVAL      NCU_GARDNB  = 0
     C                   EVAL      NCS_GAAJOB  = '=========='
     C                   EVAL      NCS_GAAUSR  = '=========='
     C                   EVAL      NCS_GAATIM  = 0
     C                   EVAL      NCS_GAARDT  = '======='
     C                   EVAL      NCS_GAAACT  = '='
     C                   EVAL      NCS_GARDNB  = 0
      *
      ** Read in Installation Data
      *
     C     *DTAARA       DEFINE                  RUNDAT
     C     *DTAARA       DEFINE                  LDA
     C                   IN        RUNDAT
      *
      ** Set Date Format Indicator *IN98  on if date format is MMDDYY
      *
     C                   IF        AGDFF = 'M'
     C                   EVAL      *IN98 = *ON
     C                   END
      *
      ** Sub Routine to check that there are an equal number or Amends
      ** before running reports.
      *
     C                   EXSR      CHKA
 
      *There was no problem with an Odd number of Amends
     C                   IF        *IN60 = '0'
      * Set up key list
     C     KEY           KLIST
     C                   KFLD                    KEY_GAFGST
     C                   KFLD                    KEY_GALGST
 
     C                   READ      UPGSASPD                             3031
      *
      * If an Error or End of file reached
     C                   IF        *IN30 = '1'
      *
     C     *LOCK         IN        LDA
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      DBFILE =  'UPGSASPD'
     C                   EVAL      DBKEY  =  UP_GAFGST + UP_GALGST
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  001
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EVAL      DBPROC =  'SR/MAIN'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ELSE
      *
     C                   WRITE     HEADH                                70
      *
      * Do while a record exists
     C                   DOW       *IN31 = '0'
     C                   EVAL      ACTION = *BLANKS
     C                   EVAL      Indfld = *BLANKS
      *
      * If Action Code is Insert
     C                   IF        UP_GAACTC = 'I'
     C                   MOVEL     UP_GAFGST     KEY_GAFGST
     C                   MOVEL     UP_GALGST     KEY_GALGST
     C     KEY           CHAIN     CGGSASL0                           32
      *
      * If a record is found on the chain then print out a message
     C                   IF        *IN32 = '0'
      * If the two records are different - Move along Character by Character indicating
      * differences on the third Array (ErrorArray) ELSE the record saying Identical
     C                   IF        CoreFld <> Updfield
     C                   MOVEA     Updfield      UpdatArray
     C                   MOVEA     CoreFld       SysArray
     C                   CLEAR                   ErrorArray
     C                   Z-ADD     1             X
     C                   DOU       X > 81
     C     SysArray(X)   COMP      UpdatArray(X)                          43
     C                   IF        *IN43 = '0'
     C                   EVAL      *IN39 = '1'
     C                   MOVEA     '*'           ErrorArray(X)
     C                   ENDIF
     C                   ADD       1             X
     C                   ENDDO
      * Move error indicator array to field for output
     C                   MOVEA     ErrorArray    IndFld
      *
     C                   MOVEL     'INSERT'      ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
     C                   ELSE
     C                   EVAL      *IN42 = '1'
     C                   MOVEL     'INSERT'      ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      * If Action Code is Delete
     C                   IF        UP_GAACTC = 'D'
     C                   MOVEL     UP_GAFGST     KEY_GAFGST
     C                   MOVEL     UP_GALGST     KEY_GALGST
     C     KEY           CHAIN     CGGSASL0                           33
      *
      * If a file is not found on the chain print out a message
     C                   IF        *IN33 = '1'
     C                   MOVEL     'DELETE'      ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
     C                   ELSE
      *
      * If the two records are different - Move along Character by Character indicating
      * differences on the third Array (ErrorArray)
     C                   IF        Corefld <> Updfield
     C                   MOVEA     Updfield      UpdatArray
     C                   MOVEA     CoreFld       SysArray
     C                   CLEAR                   ErrorArray
     C                   Z-ADD     1             X
     C                   DOU       X > 81
     C     SysArray(X)   COMP      UpdatArray(X)                          36
     C                   IF        *IN36 = '0'
     C                   EVAL      *IN34 = '1'
     C                   MOVEA     '*'           ErrorArray(X)
     C                   EndIf
     C                   ADD       1             X
     C                   EndDo
      * Move error indicator array to field for output
     C                   MOVEA     ErrorArray    IndFld
      *
      * Write out all three data structures with the indicator showing
      * where the error is
     C                   MOVEL     'DELETE'      ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      * If Action Code is Amend
     C                   IF        UP_GAACTC = 'A'
     C                   MOVEL     UP_GAFGST     KEY_GAFGST
     C                   MOVEL     UP_GALGST     KEY_GALGST
     C     KEY           CHAIN     CGGSASL0                           35
      *
      * If a file is not found on the chain print out a message
     C                   IF        *IN35 = '1'
     C                   MOVEL     'AMEND'       ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
      * Because amends come in pairs read the after image of amend.
     C                   READ      UPGSASPD                               31
     C                   ELSE
      * If the before image record and core record are different, read
      * the after amend image record and compare it with the core record.
     C                   IF        CoreFld <> Updfield
     C                   READ      UPGSASPD                               31
      *
      * If The two records are different - Move along Character by Character indicating
      * differences on the third Array (ErrorArray)
     C                   IF        CoreFld <> Updfield
     C                   MOVEA     Updfield      UpdatArray
     C                   MOVEA     CoreFld       SysArray
     C                   CLEAR                   ErrorArray
     C                   Z-ADD     1             X
     C                   DOU       X > 81
     C     SysArray(X)   COMP      UpdatArray(X)                          38
     C                   IF        *IN38 = '0'
     C                   EVAL      *IN36 = '1'
     C                   MOVEA     '*'           ErrorArray(X)
     C                   ENDIF
     C                   ADD       1             X
     C                   ENDDO
      * Move error indicator array to field for output
     C                   MOVEA     ErrorArray    IndFld
      *
      * Write out all three data structures with the indicator showing
      *  where the error is.
      * Write the after image data.
     C                   MOVEL     'AMEND'       ACTION
     C                   EXSR      REPORT
     C                   EVAL      *IN40 = '1'
     C                   ENDIF
     C                   ELSE
      *  If the before image record is same as core record,
      *  read the after image record but nothing is done.
     C                   READ      UPGSASPD                               31
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
     C                   MOVEA     '000000000'   *IN(30)
     C                   MOVEA     '0'           *IN(39)
     C                   MOVEA     '00'          *IN(41)
     C                   READ      UPGSASPD                             3031
      *
      * If an Error
     C                   IF        *IN30 = '1'
      *
     C     *LOCK         IN        LDA
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      DBFILE =  'UPGSASPD'
     C                   EVAL      DBKEY  =  UP_GAFGST + UP_GALGST
     C                   EVAL      DBPGM  =  PSProcPgm
     C                   EVAL      DBASE  =  002
     C                   EVAL      DBMOD  =  PSProcMod
     C                   EVAL      DBPROC =  'SR/MAIN'
     C                   OUT       LDA
     C                   EXSR      *PSSR
     C                   ENDIF
     C                   ENDDO
     C                   ENDIF
      * If there are no differences between the two files UP and Sys
      * Print No Differences ...
     C                   IF        *IN40 = '0'
     C                   WRITE     NODIFS                               70
     C                   ENDIF
      *
      * ... else Error in No of Amend Records
     C                   ELSE
     C                   WRITE     HEADH
     C                   WRITE     AMENDERR
     C                   ENDIF
      *
     C                   WRITE     TRAILP                               70
 
 
     C                   SETON                                        LR
     C                   RETURN
      **********************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * REPORT - WRITE To the printer file                            *
      *                                                               *
      * Called by: Main Prcessing                                     *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     REPORT        BEGSR
      *
      *
     C                   IF        (*IN33 = '1') OR
     C                             (*IN35 = '1') OR
     C                             (*IN42 = '1')
      * Overflow check for an Insert that exists or an Amend/Delete that is missing
     C                   EXSR      OFLOW
      * Write the 81 characters
     C                   MOVEL     *BLANKS       UPDLIN
     C                   MOVEL     *BLANKS       COUNT
     C                   MOVEL     UPDLIN1       UPDLIN
     C                   MOVEL     Counter       COUNT81
     C                   MOVEL     COUNT81       COUNT
     C                   WRITE     DTL1                                 70
      * Set Off *IN41
     C                   EVAL      *IN41 ='0'
     C                   ENDIF
      *
     C                   IF        (*IN34 = '1') OR
     C                             (*IN36 = '1') OR
     C                             (*IN39 = '1')
      * Overflow check for an Insert that exists or an Amend/Delete that is missing
     C                   EXSR      OFLOW2
      * Write the 81 characters
     C                   MOVEL     *BLANKS       SYSLIN
     C                   MOVEL     *BLANKS       UPDLIN
     C                   MOVEL     *BLANKS       INDLIN
     C                   MOVEL     *BLANKS       COUNT
     C                   MOVEL     UPDLIN1       UPDLIN
     C                   MOVEL     INDLIN1       INDLIN
     C                   MOVEL     SYSLIN1       SYSLIN
     C                   MOVEL     Counter       COUNT81
     C                   MOVEL     COUNT81       COUNT
     C                   WRITE     DTL2                                 70
      * Set Off *IN41
     C                   EVAL      *IN41 ='0'
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * OFLOW - OVERFLOW Processing  for fields that                  *
      *                 For Inserts that are there and Amends and     *
      *                 Deletes that are missing                      *
      *                                                               *
      * Called by: Main Prcessing                                     *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     OFLOW         BEGSR
      *
     C     OFLLN         SUB       PRTLN         RMLN
     C                   IF        RMLN <= 8
     C                   WRITE     HEADH                                70
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * OFLOW2- OVERFLOW Processing for differences on >200 chars     *
      *         with file differences                                 *
      *                                                               *
      * Called by: Main Prcessing                                     *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     OFLOW2        BEGSR
      *
     C     OFLLN         SUB       PRTLN         RMLN
     C                   IF        RMLN <= 14
     C                   WRITE     HEADH                                70
     C                   ENDIF
 
     C                   ENDSR
      *****************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * CHKA  - Check there are an even number of Amend Records       *
      *         with file differences                                 *
      *                                                               *
      * Called by: Main Prcessing                                     *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     CHKA          BEGSR
      *
     C                   READ      UPGSASPD                               70
     C                   DOW       *IN70 = '0'
     C                   IF        UP_GAACTC = 'A'
     C                   ADD       1             Amends
     C                   ENDIF
     C                   READ      UPGSASPD                               70
     C                   ENDDO
      *
      * Check to see if the No. of Amends is divisible by 2 and not equal 0
     C                   IF        Amends <> 0
     C     Amends        DIV       2             WAmends
     C                   MOVE      WAmends       Remainder
      * If the remainder is ='5' Set on indicator to stop File processing
     C                   IF        REMAINDER ='5'
     C                   EVAL      *IN60 = '1'
     C                   ENDIF
     C                   ENDIF
     C     *START        SETLL     UPGSASPD
 
     C                   ENDSR
      **********************************************************************
      /EJECT
      *****************************************************************
      *                                                               *
      * *INZSR - Program Initialisation routine                       *
      *                                                               *
      * Called by: Implicitly on program activation                   *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
 
     C     *INZSR        BEGSR
      * Initialise program name
      *
     C                   MOVEL     'UP1363'      DBPGM
      *
      * Move in program fields
     C                   MOVEL     'CGGSASPD'    SYSFIL
     C                   MOVEL     'UPGSASPD'    UPDFIL
     C                   MOVEL     HEADER        HEAD
      * Open files
     C                   OPEN      UPGSASPD
     C                   OPEN      CGGSASL0
     C                   ENDSR
 
      /EJECT
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: (**calling routines**)                             *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      *****************************************************************
      *
     C     *PSSR         BEGSR
      *
     C                   IF        @RUN = *BLANK
     C                   EVAL      @RUN = 'Y'
     C                   DUMP
      *
     C                   ENDIF
      *
     C                   EVAL      *INU7 = *ON
     C                   EVAL      *INU8 = *ON
     C                   EVAL      *INLR = *ON
     C                   RETURN
      *
     C                   ENDSR
      *
