/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas UT Create an SQL object from creation parms')   */
/*XBI    CRTSRCPF FILE(QTEMP/SQLCRTPRM)  RCDLEN(112)                 */
/*********************************************************************/
/*                                                                   */
/*       Midas - Utilities Module                                    */
/*                                                                   */
/*       UTC000007 - Create an SQL Object from Creation Parameters   */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2003           */
/*                                                                   */
/*       Last Amend No. CUT008 *REWRITE    Date 20Jan11              */
/*       Prev Amend No. BUG27832           Date 11Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CPK025             Date 11May06              */
/*                      BUG6316            Date 28Nov05              */
/*                      BG4923R            Date 18Nov04              */
/*                      BG4923             Date 18Nov04              */
/*                      BUG870             Date 31Mar04              */
/*                      BG1485             Date 31Mar04              */
/*                      CPK018  *MOVED     Date 26Apr04              */
/*                      CAP084             Date 03Oct03              */
/*                      CPK016  *CREATE    Date 15Aug03              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       CUT008  - CRTOBJ rewrite                                    */
/*       BUG27832- Cater for System generated data areas used by SQL */
/*                SEQUENCE function                                  */
/*       CPK025 - Improve handling for the type of stored procedures */
/*                that are not visible on the iSeries.               */
/*       BUG6316 - SQL files are created with LVLCHK(*YES).          */
/*       BG4923R- Reopen - call UTC0021 to search *LIBL for SQLBASE  */
/*       BG4923 - Externalise RUNSQLSTM parameters                   */
/*       BUG870 - Stop CRTOBJ falling over when creating RPGLE       */
/*                stored procedures                                  */
/*       BUG1485- Change bug to repair delete of incorrect file.     */
/*       CPK018 - MidasPlus packaging.  Moved to global layer        */
/*       CAP084 - MidasPlus wrapper project                          */
/*       CPK016 - R5.00 Packaging.                                   */
/*                - Change CRTOBJ to create SQL objects.             */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&OBJECT &OBJECTLIB &SOURCE &SOURCELIB +
                        &SRCMBR &SRCTYPE &OBJTYPE)
 
             DCL        VAR(&OBJECT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OBJECTLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SOURCE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SOURCELIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCTYPE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OBJTYPE) TYPE(*CHAR) LEN(8)
 
             DCL        VAR(&CRTPRMSRC) TYPE(*CHAR) LEN(7)
             DCL        VAR(&JOBNBR)    TYPE(*CHAR) LEN(6)
             DCL        VAR(&OBJEXIST) TYPE(*CHAR) LEN(1)
             DCL        VAR(&QCMDSTRING) TYPE(*CHAR) LEN(500)
             DCL        VAR(&DROPPROC) TYPE(*CHAR) LEN(80)
 
 
             DCLF       FILE(SQLCRTPRM)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2011')
 
/* Global monitor message */
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
             CHGJOB     SWS(00000000)
 
/* Delete existing execution file */
             DLTF       FILE(QTEMP/UTSQLEXC)
             MONMSG     MSGID(CPF2105)
 
/* Recreate execution file */
             CRTSRCPF   FILE(QTEMP/UTSQLEXC) RCDLEN(112)
 
/* Copy the code from the source member */
             CPYF       FROMFILE(&SOURCELIB/&SOURCE) +
                          TOFILE(QTEMP/UTSQLEXC) FROMMBR(&SRCMBR) +
                          TOMBR(&SRCMBR) MBROPT(*ADD) +
                          INCCHAR(SRCDTA 1 *EQ ' ') FMTOPT(*MAP)
 
/* Replace the object name and library in the execution source */
             CALL       PGM(UT000007) PARM(&OBJECTLIB &OBJECT)
 
             IF         COND(&SRCTYPE *EQ 'SQLPROC') THEN(DO)
/* Create a temporary source file to enable the running of an SQL statement */
/*  (if it doesn't already exist).                                          */
                DLTF       FILE(QTEMP/RUNSQLSTM)
                MONMSG     MSGID(CPF0000)
                CHKOBJ     OBJ(QTEMP/RUNSQL) OBJTYPE(*FILE) MBR(RUNSQLSTM)
                MONMSG     MSGID(CPF9801) EXEC(DO)
                   GOTO       CMDLBL(CRTRUNSQL)
                ENDDO
                MONMSG     MSGID(CPF9815) EXEC(DO)
                   DLTF       FILE(RUNSQL/QTEMP)
                   GOTO       CMDLBL(CRTRUNSQL)
                ENDDO
 
                GOTO       CMDLBL(DROPPROC)
CRTRUNSQL:
                CRTSRCPF   FILE(QTEMP/RUNSQLSTM) RCDLEN(112) +
                             MBR(RUNSQLSTM)
                RNMOBJ     OBJ(QTEMP/RUNSQLSTM) OBJTYPE(*FILE) +
                             NEWOBJ(RUNSQL)
 
/* Attempt to drop procedure if it already exists. */
DROPPROC:
                CHGVAR     VAR(&DROPPROC) VALUE('DROP PROCEDURE' *BCAT +
                             &OBJECTLIB *TCAT '/' *TCAT &OBJECT)
                CALL       PGM(UTWRTSQL) PARM(&DROPPROC '*CLEAR')
                RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                             COMMIT(*NONE)
                MONMSG     MSGID(SQL0000)
 
             ENDDO
 
CHKOBJ:
             CHKOBJ     OBJ(&OBJECTLIB/&OBJECT) OBJTYPE(&OBJTYPE)
             MONMSG     MSGID(CPF9801) EXEC(CHGVAR VAR(&OBJEXIST) +
                          VALUE('N'))
 
             RTVJOBA    NBR(&JOBNBR)
             CHGVAR     VAR(&CRTPRMSRC) VALUE('W' *CAT &JOBNBR)
 
             OVRDBF     FILE(SQLCRTPRM) TOFILE(QTEMP/&CRTPRMSRC) +
                          MBR(&SRCMBR)
Loop:
             RCVF
             MONMSG     MSGID(CPF0864) EXEC(GOTO CMDLBL(ENDOFFILE))
             CHGVAR     VAR(&QCMDSTRING) VALUE(&QCMDSTRING *BCAT +
                          %SUBSTRING(&SRCDTA 7 63))
             GOTO       CMDLBL(LOOP)
 
EndOfFile:
/* Execute the SQL statement */
             CHGVAR     VAR(&QCMDSTRING) VALUE(&QCMDSTRING *BCAT +
                          'SRCMBR(' *CAT &SRCMBR *TCAT ')')
             CALL       PGM(QCMDEXC) PARM(&QCMDSTRING 500)
 
/* Delete temporary work files                                             */
             DLTF       FILE(QTEMP/UTSQLEXC)
             MONMSG     MSGID(CPF0000)
             DLTF       FILE(QTEMP/RUNSQLSTM)
             MONMSG     MSGID(CPF0000)
 
             GOTO       CMDLBL(END)
 
ABNOR:
             CHGJOB     SWS(XXXXXX11)
 
             IF   (&OBJEXIST *EQ 'N') THEN(DO)
                IF         COND(&OBJTYPE *EQ '*FILE') THEN(DO)
                   DLTF       FILE(&OBJECTLIB/&OBJECT)
                MONMSG     MSGID(CPF2105)
                ENDDO
                IF         COND(&OBJTYPE *EQ '*PGM') THEN(DO)
/* This SQL statement has already been created at the beginning of this program. */
                   RUNSQLSTM  SRCFILE(QTEMP/RUNSQL) SRCMBR(RUNSQLSTM) +
                                COMMIT(*NONE)
                   MONMSG     MSGID(SQL0000)
                ENDDO
             ENDDO
 
END:
             ENDPGM
