/*********************************************************************/
/*STD    CLPBASEBND                                                  */
/*EXI    TEXT('Midas UT Retrieve member text from source')           */
/*********************************************************************/
/*                                                                   */
/*       Midas - Utilities                                           */
/*                                                                   */
/*       UTC000023 - Retrieve member text from source                */
/*                                                                   */
/*       (c) Finastra International Limited 2015                     */
/*                                                                   */
/*       Last Amend No. MD046248           Date 27Oct17              */
/*       Prev Amend No. CUP042  *CREATE    Date 17May15              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       MD046248 - Finastra Rebranding                              */
/*       CUP042 - New utility to retrieve member text from source    */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&SRC &OVRTXT)
 
             DCL        VAR(&SRC) TYPE(*CHAR) LEN(20)
             DCL        VAR(&OVRTXT) TYPE(*CHAR) LEN(4)
 
             DCL        VAR(&SRCFILE) TYPE(*CHAR) STG(*DEFINED) +
                          LEN(10) DEFVAR(&SRC)
             DCL        VAR(&SRCLIB) TYPE(*CHAR) STG(*DEFINED) +
                          LEN(10) DEFVAR(&SRC 11)
             DCL        VAR(&MSGSUB) TYPE(*CHAR) LEN(30)
             DCL        VAR(&MSGTXT) TYPE(*CHAR) LEN(132)
 
             DCL        VAR(&ERROR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&RECURSIVE) TYPE(*CHAR) LEN(1) VALUE('N')
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(100)
 
             COPYRIGHT TEXT('(c) Finastra International Limited +
                          2015')
 
             MONMSG     MSGID(CPF0000 MCH0000) EXEC(GOTO CMDLBL(ERROR))
 
/* Check that the source exists.  As *ALL or *generic is allowed then use  */
/*  DSPOBJD *PRINT.                                                        */
             DSPOBJD    OBJ(&SRCLIB/&SRCFILE) OBJTYPE(*FILE) +
                          OUTPUT(*PRINT)
/* Specified file not found. */
             MONMSG     MSGID(CPF2105) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE(&SRCFILE *CAT &SRCLIB +
                             *CAT 'FILE')
                RTVMSG     MSGID(CPF2105) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
/* No objects exist in the library. */
             MONMSG     MSGID(CPF2123) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE(&SRCFILE *CAT &SRCLIB)
                RTVMSG     MSGID(CPF2123) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
/* Authority issues. */
             MONMSG     MSGID(CPF2189) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE(&SRCFILE *CAT &SRCLIB +
                             *CAT 'FILE')
                RTVMSG     MSGID(CPF2189) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
             MONMSG     MSGID(CPF2182) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE(&SRCLIB)
                RTVMSG     MSGID(CPF2182) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
             MONMSG     MSGID(CPF2124) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE('          ' *CAT &SRCLIB)
                RTVMSG     MSGID(CPF2124) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
/* Specified library not found. */
             MONMSG     MSGID(CPF2110) EXEC(DO)
                CHGVAR     VAR(&MSGSUB) VALUE(&SRCLIB)
                RTVMSG     MSGID(CPF2110) MSGF(QCPFMSG) MSGDTA(&MSGSUB) +
                             MSG(&MSGTXT)
                CHGVAR     VAR(&ERROR) VALUE('Y')
                GOTO       CMDLBL(ERROR)
             ENDDO
 
             GOTO       CMDLBL(ENDPGM)
 
ERROR:
/* If validity error then send message back to command ... */
             IF         COND(&ERROR *EQ 'Y') THEN(DO)
                CHGVAR     VAR(&MSGTXT) VALUE('0000' *TCAT &MSGTXT)
                SNDPGMMSG  MSGID(CPD0006) MSGF(QCPFMSG) MSGDTA(&MSGTXT) +
                             MSGTYPE(*DIAG)
                SNDPGMMSG  MSGID(CPF0002) MSGF(QCPFMSG) MSGTYPE(*ESCAPE)
             ENDDO
/* ...  else send generic message. */
             ELSE       CMD(DO)
                IF         COND(&RECURSIVE *EQ 'N') THEN(DO)
                   CHGVAR     VAR(&RECURSIVE) VALUE('Y')
RCVMSG:
                   RCVMSG     MSGTYPE(*DIAG) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                                MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                   IF         COND(&MSGID *NE ' ') THEN(DO)
                      SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                                   MSGDTA(&MSGDTA) MSGTYPE(*DIAG)
                      GOTO       CMDLBL(RCVMSG)
                   ENDDO
                   RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                                MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
                   SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                                MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
                ENDDO
             ENDDO
 
ENDPGM:
             ENDPGM
