/*********************************************************************/
/*S*D****CLPBASEBND***************************************************/ /*             */ /*CUP002*/
/*********************************************************************/
/*                                                                   */
/*       Midas - Utilities Module                                    */
/*                                                                   */
/*       UTC0045 - Reset journaling environment                      */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2003           */
/*                                                                   */
/*       Last Amend No. CUP002  *MOVED     Date 25Aug10              */
/*       Prev Amend No. CSC043             Date 18Jun10              */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/*                      CSC020             Date 28Jul04              */
/* Midas Release 4.01.03 --------------------------------------------*/
/*                      CUP021  *CREATE    Date 10Jan03              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*       CUP002 - Incorrect journal receiver reference.              */
/*              - Moved to global layer.                             */
/*       CSC043 - MidasPlus IASP Enablement                          */
/*       CSC020 - Journaling changes for MidasPlus.                  */
/*       CUP021 - Automation of system refresh                       */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&MIDASSYSID)
 
             DCL        VAR(&MIDASSYSID) TYPE(*CHAR) LEN(2)
 
             DCL        VAR(&JLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OWNER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JRN) TYPE(*CHAR) LEN(10)                                     /*CSC020*/
             DCL        VAR(&RCV) TYPE(*CHAR) LEN(10)                                     /*CSC020*/
             DCL        VAR(&TEXT) TYPE(*CHAR) LEN(50)                                    /*CSC020*/
             DCL        VAR(&RSTJRNENV) TYPE(*CHAR) LEN(1)                                /*CSC020*/
 
             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(100)
             DCL        VAR(&IN01) TYPE(*LGL)
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2003')
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ERROR))
 
/* Work out whether system is zone or global. */                                          /*CSC020*/
             RTVDTAARA  DTAARA(QTEMP/RSTJRNENV) RTNVAR(&RSTJRNENV)                        /*CSC020*/
 
             IF         COND(&RSTJRNENV *EQ 'Z') THEN(DO)                                 /*CSC020*/
                CHGVAR     VAR(&JLIB) VALUE(&MIDASSYSID *TCAT 'JLIB')
                CHGVAR     VAR(&JRN) VALUE('ICJRN')                                       /*CSC020*/
                CHGVAR     VAR(&RCV) VALUE('IR00000001')                                  /*CSC020*/
                CHGVAR     VAR(&TEXT) VALUE('Midas SC Initial system +
                             journal receiver')                                           /*CSC020*/
             ENDDO                                                                        /*CSC020*/
             ELSE       CMD(DO)                                                           /*CSC020*/
/**********     CHGVAR     VAR(&JLIB) VALUE(&MIDASSYSID *TCAT 'GXLIB')  */         /*CSC020 CSC043*/
                CHGVAR     VAR(&JLIB) VALUE(&MIDASSYSID *TCAT 'GJLIB')                    /*CSC043*/
                CHGVAR     VAR(&JRN) VALUE('GPJRN')                                       /*CSC020*/
                CHGVAR     VAR(&RCV) VALUE('GR00000001')                                  /*CSC020*/
                CHGVAR     VAR(&TEXT) VALUE('Midas GP journal receiver')                  /*CSC020*/
             ENDDO                                                                        /*CSC020*/
 
             CHGVAR     VAR(&OWNER) VALUE(&MIDASSYSID *TCAT 'OWNER')
 
/**Change*the*journal*to*next*receiver*to*ensure*that*ICRCV001*is*not*attached.**/ /*  */ /*CSC020*/
/**********  CHGJRN     JRN(&JLIB/ICJRN) JRNRCV(*GEN)                                  */ /*CSC020*/
/* Change the journal to next receiver to ensure that *00000001 is not attached. */       /*CSC020*/
             CHGJRN     JRN(&JLIB/&JRN) JRNRCV(*GEN)                                      /*CSC020*/
 
DLTJRNRCV1:
/* Delete journal reciever, ignoring message and monitoring for */
/*  the receiver that is currently attached.                    */
/**********  DLTJRNRCV  JRNRCV(&JLIB/ICRCV*) DLTOPT(*IGNINQMSG)                        */ /*CSC020*/
             IF         COND(&RSTJRNENV *EQ 'Z') THEN(DO)                                 /*CSC020*/
                DLTJRNRCV  JRNRCV(&JLIB/I*) DLTOPT(*IGNINQMSG)                            /*CSC020*/
                MONMSG     MSGID(CPF2117)
             ENDDO                                                                        /*CSC020*/
             ELSE       CMD(DO)                                                           /*CSC020*/
                DLTJRNRCV  JRNRCV(&JLIB/G*) DLTOPT(*IGNINQMSG)                            /*CSC020*/
                MONMSG     MSGID(CPF2117)                                                 /*CSC020*/
             ENDDO                                                                        /*CSC020*/
 
RESET:
/* Create new 001 receiver. */
/**********  CRTJRNRCV  JRNRCV(&JLIB/ICRCV001) THRESHOLD(1900000) +                    */ /*CSC020*/
/**********               TEXT('Midas SC Initial system journal +                      */ /*CSC020*/
/**********               receiver')                                                   */ /*CSC020*/
/**********  CHGOWNAUT  OBJ(&JLIB/ICRCV001) OBJTYPE(*JRNRCV) +                         */ /*CSC020*/
/**********               NEWOWN(&OWNER) PUBAUT(*EXCLUDE) CHGLIB(N)                    */ /*CSC020*/
             CRTJRNRCV  JRNRCV(&JLIB/&RCV) THRESHOLD(1900000) +
                          TEXT(&TEXT)                                                     /*CSC020*/
             CHGOWNAUT  OBJ(&JLIB/&RCV) OBJTYPE(*JRNRCV) +
                          NEWOWN(&OWNER) PUBAUT(*EXCLUDE) CHGLIB(N)                       /*CSC020*/
 
/* Attach it to the journal. */
/**********  CHGJRN     JRN(&JLIB/ICJRN) JRNRCV(&JLIB/ICRCV001) +                      */ /*CSC020*/
/**********               SEQOPT(*RESET)                                               */ /*CSC020*/
             CHGJRN     JRN(&JLIB/&JRN) JRNRCV(&JLIB/&RCV) +
                          SEQOPT(*RESET)                                                  /*CSC020*/
 
DLTJRNRCV2:
/* Delete journal reciever, ignoring message and monitoring for */
/*  the receiver that is currently attached.                    */
/**********  DLTJRNRCV  JRNRCV(&JLIB/ICRCV*) DLTOPT(*IGNINQMSG)                        */ /*CSC020*/
             IF         COND(&RSTJRNENV *EQ 'Z') THEN(DO)                                 /*CSC020*/
                DLTJRNRCV  JRNRCV(&JLIB/I*) DLTOPT(*IGNINQMSG)                            /*CSC020*/
                MONMSG     MSGID(CPF2117)
             ENDDO                                                                        /*CSC020*/
             ELSE       CMD(DO)                                                           /*CSC020*/
                DLTJRNRCV  JRNRCV(&JLIB/G*) DLTOPT(*IGNINQMSG)                            /*CSC020*/
                MONMSG     MSGID(CPF2117)                                                 /*CSC020*/
             ENDDO                                                                        /*CSC020*/
 
JNSTAT:
             IF         COND(&RSTJRNENV *EQ 'Z') THEN(DO)                                 /*CSC020*/
/**********     CHGDTAARA  DTAARA(&JLIB/JNSTAT (1 8)) VALUE('ICRCV001')                */ /*CUP002*/
                CHGDTAARA  DTAARA(&JLIB/JNSTAT (1 10)) VALUE('IR00000001')                /*CUP002*/
             ENDDO                                                                        /*CSC020*/
 
/*GENERAL:*                                                                            */ /*CUP002*/
/**********  IF         COND(&RSTJRNENV *EQ 'Z') THEN(DO)                   */ /*CSC020*/ /*CUP002*/
/**********     CALL       PGM(UPC8007) PARM(&MIDASSYSID)                              */ /*CUP002*/
/**********  ENDDO                                                          */ /*CSC020*/ /*CUP002*/
 
             GOTO       CMDLBL(ENDPGM)
ERROR:
 /* Recursive error */
             IF         COND(&IN01) THEN(DO)
                SNDPGMMSG  MSGID(CPF9898) MSGF(*LIBL/QCPFMSG) +
                             MSGDTA('Recursive error in pgm UTC0045') +
                             MSGTYPE(*ESCAPE)
             ENDDO
 
             CHGVAR     VAR(&IN01) VALUE('1')
 
ERROR2:
 /* Receive diagnostic error message */
             RCVMSG     MSGTYPE(*DIAG) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                          MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
 
             IF         COND(&MSGID *NE ' ') THEN(DO)
 /* Pass it back to calling program */
                SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                             MSGDTA(&MSGDTA) MSGTYPE(*DIAG)
                GOTO       CMDLBL(ERROR2)
             ENDDO
 /* Receive escape error message */
             RCVMSG     MSGTYPE(*EXCP) MSGDTA(&MSGDTA) MSGID(&MSGID) +
                          MSGF(&MSGF) SNDMSGFLIB(&MSGFLIB)
 /* Pass it back to calling program */
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) MSGTYPE(*ESCAPE)
 
ENDPGM:
             ENDPGM
