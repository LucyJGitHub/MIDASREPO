/*********************************************************************/
/*STD    CLPBASEMOD                                                  */
/*EXI *  TEXT('Midas UT Create a data queue')                        */
/*********************************************************************/
/*                                                                   */
/*       Midas    - Utilities module                                 */
/*                                                                   */
/*       UTCRTDTAQ - Create a data queue                             */
/*                                                                   */
/*       (c) Misys International Banking Systems Ltd. 2001           */
/*                                                                   */
/* Bank Fusion Midas 1.4 Base ---------------------------------------*/
/* Midas Plus 1.4 Base 04 -------------------------------------------*/
/* Midas Plus 1.4 Base ----------------------------------------------*/
/* Midas Plus 1.3 ---------------- Base -----------------------------*/
/* Midas Release 4 --------------- Base -----------------------------*/
/* Midas DBA 3.00 ---------------- Base -----------------------------*/
/*       Last Amend No. 153108  *CREATE    Date 13Jan99              */
/*       Prev Amend No. Xnnnnn             Date ddmmmyy              */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*       153108 - Written for Midas APIs, because there is at        */
/*                present no mechanism for creating data queues.     */
/*                This module can be used wherever creation of a     */
/*                data queue is required, however, not just in       */
/*                APIs.                                              */
/*                                                                   */
/*********************************************************************/
             PGM        PARM(&RETURNCODE  /* Return code */         +
                             &DTAQUEUE    /* Data queue name */     +
                             &DTAQLIB     /* Library for queue */   +
                             &LENGTH      /* Maximum entry length */+
                             &TEXT        /* Queue text */          +
                             &DELETE)     /* Delete if already there */
 
/*/COPY WNCPYSRC,UTCRTDTAQ01                                          */
 
 
/* ------------------------------------------------------------------ +
   Parameters +
/* ------------------------------------------------------------------ + */
             DCL        VAR(&RETURNCODE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTAQUEUE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DTAQLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LENGTH) TYPE(*CHAR) LEN(5)
             DCL        VAR(&TEXT) TYPE(*CHAR) LEN(50)
             DCL        VAR(&DELETE) TYPE(*CHAR) LEN(1)
 
/* ------------------------------------------------------------------ +
   'Named constants' +
/* ------------------------------------------------------------------ + */
             DCL        VAR(&OBJTYPE) TYPE(*CHAR) LEN(7) +
                          VALUE('*DTAQ')
 
             COPYRIGHT TEXT('(c) Misys International Banking Systems Ltd. +
                          2001')
 
/* Global monitor message */
 
             MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO +
                          CMDLBL(ABNOR))
 
/*/COPY WNCPYSRC,UTCRTDTAQ02                                          */
 
/* Clear the return code */
             CHGVAR     VAR(&RETURNCODE) VALUE(' ')
 
/* Check for the existence of the queue */
             CALLPRC    PRC(UTCHOBJEX) PARM(&RETURNCODE &DTAQUEUE +
                          &DTAQLIB &OBJTYPE ' ')
 
/* +
   If the queue exists and the delete flag is 'Y', delete it. +
*/
             IF         COND(&RETURNCODE *EQ 'Exist' *AND &DELETE +
                          *EQ 'Y') THEN(DO)
 
                DLTDTAQ    DTAQ(&DTAQLIB/&DTAQUEUE)
 
             ENDDO
 
/* Clear the return code */
             CHGVAR     VAR(&RETURNCODE) VALUE(' ')
 
/* Create the queue */
             CRTDTAQ    DTAQ(&DTAQLIB/&DTAQUEUE) MAXLEN(&LENGTH) +
                          TEXT(&TEXT)
 
 
/*/COPY WNCPYSRC,UTCRTDTAQ03                                          */
 
             GOTO       CMDLBL(END)
 
 ABNOR:
/* Abnormal termination */
 
/*/COPY WNCPYSRC,UTCRTDTAQ04                                          */
 
             CHGVAR     VAR(&RETURNCODE) VALUE('Error')
 
 END:
 
/*/COPY WNCPYSRC,UTCRTDTAQ05                                          */
 
             ENDPGM
