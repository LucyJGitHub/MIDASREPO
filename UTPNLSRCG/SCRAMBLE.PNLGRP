.**********************************************************************
.*STD    PNLBASE                                                      *
.*EXI    TEXT('Midas UT Help for SCRAMBLE command')                   *
.**********************************************************************
.*                                                                    *
.*  Midas - Utilities                                                 *
.*                                                                    *
.*  SCRAMBLE - Help for SCRAMBLE command                              *
.*                                                                    *
.*  (c) Finastra International Limited 2010                           *
.*                                                                    *
.*  Last Amend No. BUG27787  *CREATE  Date 19Jul10                    *
.*  Prev Amend No. xxxxxx             Date ddmmmyy                    *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.*  BUG27787 - New version of SCRAMBLE utility                        *
.*                                                                    *
.**********************************************************************
:PNLGRP.
.*
:HELP name='SCRAMBLE'.
Scramble sensitive data (SCRAMBLE) Help
:P.
This command allows a user to overwrite potentially sensitive data, normally
found in a version of the client database.  This would include customer names,
addresses, etc.  It uses SQL to perform updates which means that it can be
used on any release of Midas.
:P.
This help is mainly intended to help the user tailor the driving file for
their own purposes if required as well as giving a basic idea of how it works.
:P.
The file that drives this tool is called UTSCRMPD which is a keyed physical
and it uses a logical called UTSCRML0.  Below is a description of the fields
and how they are used.
:H3.SBRECT - Record type
:PC.
This has two values, 'H' and 'D'.  Each file / field combination should have
one 'H' record and can have any number of 'D' records, including zero.
:P.
If, for whatever reason, you which to exclude a file or even just a field then
the 'H' can be set to '*' and that record will be ignored.
:H3.SBLAYR - Layer
:PC.
This has two values, '*GLOB' and '*ZONE'.  Each 'H' type record needs an
entry and should indicate in which layer the file is found.  See
:HP2.LAYER:EHP2. for more information.
:H3.SBFILE - File
:PC.
The name of the file that is to be updated.  If the file does not exist in the
library list when the utility is run then it is ignored.
:H3.SBFLD - Field
:PC.
The name of the field that is to be updated.  Typically the field is updated
with some concatenated values.  The utility checks that the field does exist
on the file and, if it doesn't, it ignores it.
:H3.SBFSEQ - Field sequence
:PC.
It may be that fields have to be updated in a particlar order and this would
be when the sequence is used.  The lower the sequence number the higher the
priority.  The file / field combination must have the same sequence.
:H3.SBSSEQ - Substitution sequence
:PC.
As mentioned before a field may get updated by concatenating several values.
Each file / field combination represents one of those values (unless it is an
exception record; see below) and this sequence determines in what order the
values are concatenated.
:P.
It is a convention that the concatenation sequence begins at 001.
:H3.SBSQLT - SQL type
:PC.
This has two values, 'C' and 'X'.  'C' represents a concatenation type while
'X' means it is an exception.  This is explained in more detail below.
:H3.SBSVAL - Substitution value
:PC.
This is what will be put into the field that is being updated.  It can be
either a literal value or the name of another field which must exist on the
file that is being updated.
:P.
If a literal is requested then it must be enclosed in single quotes; blanks can
be embedded if needed.  If a field is requested the utilty checks whether it is
numeric or alpha and, if numeric, pads it with zeros if required.
:P.
This field can also contain an exception statement but this is only recognised
as such if the SQL type is 'X'.  An exception statement would be something like
FIELD1 <> 'A'.  Basically it is saying 'update the field but only if a
condition is met'.
:P.
It is a convention that the exception sequence begins at 100.
:H3.SBSTYP - Substitution type
:PC.
This can have two values, 'F' and 'L'.  'F represents a field is being used as
a substitution value while 'L' represents a literal.  If an exception statement
is entered then this field does not have a bearing.
:EHELP.
.*
:HELP name='SCRAMBLE/LAYER'.
Scramble sensitive data (SCRAMBLE) Help
:H3.Layer (LAYER)
:P.
The database layer (global or zone) that is to be scrambled.  This does not
stop the utility working with pre-Midas Plus however.  Specify *ALL and
the utility, as mentioned, checks whether the file and field exist in the
library list, ignoring them if not found.
:P.
The default is *ALL.
:P.
:H2.*ALL
:PC.
Both the zone and the global layers of the database are scrambled.
:H3.*ZONE
:PC.
Only the zone layer of the database is scrambled.
:H3.*GLOB
:PC.
Only the global layer of the database is scrambled.
:EHELP.
:EPNLGRP.
