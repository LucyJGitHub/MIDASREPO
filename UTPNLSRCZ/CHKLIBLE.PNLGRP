.**********************************************************************
.*STD    PNLGRP                                                       *
.*EXI *  TEXT('Midas UT Help panel group for CHKLIBLE')
.**********************************************************************
.*
.*  Midas Utilities module
.*
.*  CHKLIBLE - Check no. of libraries to be entered help
.*
.*  (c) Finastra International Limited 2001
.*
.* Bank Fusion Midas 1.4 Base -----------------------------------------
.* Midas Plus 1.4 Base 04 ---------------------------------------------
.* Midas Plus 1.4 Base ------------------------------------------------
.* Midas Plus 1.3 ---------------- Base -------------------------------
.*  Last Amend No. CSC017             Date 14Feb03
.* Midas Release 4 --------------- Base -------------------------------
.* Midas DBA 3.00 ---------------- Base -------------------------------
.*  Prev Amend No. CUP001 *CREATE     Date 23Dec98
.*
.*-------------------------------------------------------------------
.*  CSC017 - Change to 250 library list.
.*  CUP001 - Introduction of BRIDGE
.*
.********************************************************************
:PNLGRP.
.*
:HELP name='CHKLIBLE'.Check no. of libraries to be entered - Help
:P.
CHKLIBLE is designed to check a library list before a program attempts
to add libraries to it, to ensure that there are enough spaces.  It can
perform two types of checks and is only allowed to run within a program.
:P.
The first check is to see if the current job's library list has a
sufficient number of spaces for a given a number of libraries to be
added to the library list.
:P.
The second check looks at a list of library names to see if they can be
added to the current job's library list.  This differs from the first
type of check in that it looks to see if any of the specified libraries
already exist in the job's library list; if it does then the utility
considers this as allowed.
:P.
Neither check performs any error handling beyond returning a value of
'F' to the calling program if there is an insufficient number of
spaces for the number of libraries or the named libraries to be added
to the job's library list.  All error handling should be put into the
calling program; care should be taken to discriminate between
interactive and batch jobs.
:P.
Please note: the utility is designed only to do one check or the other;
this is controlled by putting a value into either the NOOFLIBS or the
LIBS parameter.  If a value is put into both options then only the
first check is carried out.
:EHELP.
.*
:HELP name='CHKLIBLE/NOOFLIBS'.Check number of libraries to be entered - Help
:H3.
No. of libraries to be added (NOOFLIBS)
:P.
.* Start of CSC017
.*The*number*of*libraries*that*are*to*be*added.**Valid*values*are*0*-*25;*                    CSC017
The number of libraries that are to be added.  Valid values are 0 - 250;
.* End of CSC017
an entry of 0 will ignore this parameter while any other value will
cause the LIBS parameter to be ignored.
:EHELP.
.*
:HELP name='CHKLIBLE/LIBS'.Check number of libraries to be entered - Help
:H3.
Libraries required to be added (LIBS)
:P.
The list of libraries that are required to be added to the library
.* Start of CSC017
.*list;*the*list*can*contain*25*library*names.**If*a*library*already*                         CSC017
list; the list can contain 250 library names.  If a library already
.* End of CSC017
exists in the library list then this is considered as allowed but
this assumes that the calling program is going to perform a
RMVLIBLE for the relevant library before attempting to add it.
:EHELP.
.*
:HELP name='CHKLIBLE/RETURN'.Check number of libraries to be entered - Help
:H3.
Return value (RETURN)
:P.
Value returned to calling program.  An 'F' is returned if the utility
has found that there are not enough library spaces in the library list
available.  Any error handling required should be put into the calling
program.
:EHELP.
:EPNLGRP.
