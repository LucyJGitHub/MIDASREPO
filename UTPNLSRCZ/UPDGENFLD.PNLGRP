.**********************************************************************
.*STD    PNLGRP                                                       *
.*EXI *  TEXT('Midas UT Update GENFLDNOS driving file')
.**********************************************************************
.*                                                                    *
.*  Midas - Utilities module                                          *
.*                                                                    *
.*  UPDGENFLD - Update GENFLDNOS driving file                         *
.*                                                                    *
.*  (c) Finastra International Limited 2001                           *
.*                                                                    *
.* Bank Fusion Midas 1.4 Base -----------------------------------------
.* Midas Plus 1.4 Base 04 ---------------------------------------------
.* Midas Plus 1.4 Base ------------------------------------------------
.* Midas Plus 1.3 ---------------- Base -------------------------------
.* Midas Release 4.01.03 ----------------------------------------------
.*  Last Amend No. CUP021 *CREATE     Date 12Nov02                    *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.*       CUP021 - Re-write of GENFLDNOS, to make it file driven.      *
.*                                                                    *
.**********************************************************************
:PNLGRP.
.*
:HELP NAME='UPDGENFLD'.
.*
Generate field numbers (UPDGENFLD) - Help
:P.
The UPDGENFLD creates the driving file for the command GENFLDNOS.
The GENFLDNOS command allows the user to create unique numbers for a list
of fields as defined in a number of files, corresponding to a Meridian
Message.  The names of these files are stored in UPGENFPD, which is updated
with the command UPDGENFLD.  The first file will normally be the generic API
header file (which is the default).  The second (the "primary detail file")
will be the main interface definition file for the particular API.  The
remainder will be settlement or extra detail files etc.
:p.
.*
Existing file lists will be cleared, unless the special value *EXTEND
is used for the HEADERFILE parameter.
:p.
.*
:EHELP.
.*
:HELP NAME='UPDGENFLD/APINAME'.
.*
API name (APINAME) - Help
:XH3.
API name (APINAME)
:P.
The name of the API for which field numbers are to be generated.  If the
API already exists in UTGENFPD, the user will be prompted with the first
20 files from the current list of files for this API.
:p.
.*
:EHELP.
.*
:HELP NAME='UPDGENFLD/HEADERFILE'.
.*
Header file (HEADERFILE) - Help
:XH3.
Header file (HEADERFILE)
:P.
The first of the files containing fields for which numbers are to be
generated.  This is normally the generic Midas API header file, which is
the default value.
:p.
The possible values are:
:p.
.** Start parameter list
:PARML.
.** Make 'APHEADPD' appear as a programming keyword
:PT.:PK DEF.APHEADPD:EPK.
:PD.
The standard Midas API generic header file will be used for the header
fields definition.
:p.
.** Make '*EXTEND' appear as a programming keyword
:PT.:PK DEF.*EXTEND:EPK.
:PD.
Use this keyword to add files to an existing API file list.
:p.
.** Make the other parameters appear as parameter variables
.*
:PT.:PV.file-name:EPV.
.*
:PD.
Enter the name of a file to be used for the header fields definition.
.*
:EPARML.
.*
:p.
:imhelp name='UPDGENFLD/LIBRARY'.
.*
:EHELP.
.*
:HELP NAME='UPDGENFLD/DETAIL'.
.*
Detail files (DETAIL) - Help
:XH3.
Detail files (DETAIL)
:P.
Up to twenty files containing fields for which numbers are to be
generated.  At least one must be specified; this is normally the format
definition file for the API being defined.
:p.
.*
:imhelp name='UPDGENFLD/LIBRARY'.
.*
:EHELP.
.*
:HELP NAME='UPDGENFLD/LIBRARY'.
.*
:p.
The possible library values are:
:p.
.** Start parameter list
:PARML.
.** Make '*LIBL' appear as a programming keyword
:PT.:PK DEF. *LIBL:EPK.
:PD.
All libraries in the user and system portion of the job's library list
are searched until the first match is found.
.**
:p.
.** Make the other parameters appear as parameter variables
.*
:PT.:PV.*CURLIB:EPV.
.*
:PD.
The current library for the job is used to locate the file.  If no
library is specified as the current library for the job, QGPL is
used.
.*
:PT.:PV.library-name:EPV.
.*
:PD.
Specify the library to be searched.
:EPARML.
.*
:EHELP.
.*
:EPNLGRP.
