     H        1
      *****************************************************************
/*OVR *  CRTPF FILE(QTEMP/SPOOLS) RCDLEN(211) MBR(*NONE)              *
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas UT Add control record to spool file outfile')
      *****************************************************************
      *                                                               *
      *  Midas - Utilities module                                     *
      *                                                               *
      *  UT0210 - Add a control record to spooled files outfile       *
      *                                                               *
      *  Function:  This program processes a member of the outfile    *
      *             generated by the CPYFRMOUTQ command.  It reads    *
      *             backwards through the member for three records    *
      *             and, if that record is blank, writes some control *
      *             data to it.  If the selected record is not blank  *
      *             it tries another.  If it can't find an suitable   *
      *             record, it reports an error.  The file specified  *
      *             in this program, SPOOLS, does not exist; it will  *
      *             have been overridden to a real file and member    *
      *             by the calling CL.                                *
      *                                                               *
      *  Called By: UTC0210 - CPYFRMOUTQ CPP.                         *
      *                                                               *
      *  (c) Finastra International Limited 2001                      *
      *                                                               *
      *  Last Amend No. MD046248           Date 27Oct17               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      * Midas DBA 3.00 ---------------- Base -------------------------*
      *  Prev Amend No. CAA002 *CREATE     Date 31OCT95               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  MD046248 - Finastra Rebranding                               *
      *  CAA002 - Development of utility to save, edit and restore    *
      *           spooled files.                                      *
      *                                                               *
      *****************************************************************
     F/EJECT
     F*
     FSPOOLS  UF  E                    DISK         KINFSR *PSSR
     F*
     F** The above is a dummy file name; the real name has been
     F** defined in the calling CL.
     F** Rename the format to avoid clashing with the file or field
     F** name.
     F            SPOOLS                            KRENAMESPOOLSF
     F*
     E/EJECT
     E                    CPY@    1   1 80
     E*
     E** Array containing Copyright statement
     I*
     ISPOOLSF
     I*
     I** Rename the external field name to avoid clashing with the
     I** file or format names.
     I              SPOOLS                          SPOOL
     I*
     I/COPY UTCPYSRC,UTSPLREC
     I*
     IPSDS       SDS
      *
      ** Program Status Data Structure
      *
     I                                     *PROGRAM PGM
     I                                      244 253 WSID
     I                                      254 263 USER
     I*
     C*                       MAIN LINE PROCESSING
     C*                       ==================
     C*
     C** Set up copyright parameter
     C*
     C                     MOVEACPY@      ACT@   80
     C*
     C** Position the file pointer at the end of the member.
     C           *HIVAL    SETGTSPOOLSF
     C*
     C** Read back three records
     C                     DO   3
     C                     READPSPOOLSF                  99
     C*
     C** Check for errors.
     C                     EXSR ERRCHK
     C*
     C                     ENDDO
     C*
     C** Check whether the record read is blank.  If it is, turn it into
     C** the control record.
     C** First call subroutine to remove intial character from SPOOL.
     C                     EXSR BLNKST
     C           SPOOL     IFEQ *BLANK
     C                     EXSR CTLREC
     C                     ELSE
     C*
     C** If the record is not blank, try to find a blank one.
     C                     EXSR HUNTER
     C                     ENDIF
     C*
     C** Normal termination: exit the program, shutting it down by
     C** switching LR on.
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
      /EJECT
     C*****************************************************************
     C           BLNKST    BEGSR
     C*
     C** Subroutine to remove the first character from the SPOOL
     C** field; there will nearly always be a value in this position,
     C** but it is not printable data, which is all we are interested
     C** in at present.
     C*
     C** Save position 1.
     C                     MOVELSPOOL     SPL1ST  1
     C*
     C** Put positions 2 onwards into a new field.
     C                     SUBSTSPOOL:2   SUBSPL210
     C*
     C** Now concatenate a blank with the new field, and put it into
     C** SPOOL.
     C           ' '       CAT  SUBSPL    SPOOL
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C           CTLREC    BEGSR
     C*
     C** Create the control record by updating the record with the
     C** values specified in the SPLREC data structure.
     C                     MOVELSPLREC    SPOOL
     C*
     C** Reinstate the original value of the first position of
     C** SPOOL.
     C                     MOVELSPL1ST    SPOOL
     C                     UPDATSPOOLSF
     C*
     C** Set a flag to tell other subroutines that the file has been
     C** updated.
     C                     MOVE 'Y'       SUCCES  1
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C           HUNTER    BEGSR
     C*
     C** Read back up to a further five records.  If no suitable
     C** record is found after that, report the situation to the
     C** calling program, and end.
     C                     DO   5
     C                     READPSPOOLSF                  99
     C*
     C** Check for errors
     C                     EXSR ERRCHK
     C*
     C** Check whether the record read is blank.  If it is, turn it into
     C** the control record.
     C** First call subroutine to remove intial character from SPOOL.
     C                     EXSR BLNKST
     C           SPOOL     IFEQ *BLANK
     C*
     C** If the record is blank, use it as the control record and leave
     C** the DO group.
     C                     EXSR CTLREC
     C                     LEAVE
     C                     ENDIF
     C                     ENDDO
     C*
     C** If the field SUCCES is not 'Y' at this point, the five records
     C** have been tried without a suitable one being found.  Report
     C** the error to the calling program.
     C           SUCCES    IFNE 'Y'
     C                     MOVEL'NOLINE'  RETCDE
     C                     DUMP
     C                     ENDIF
     C*
     C                     ENDSR
     C*
     C*****************************************************************
      /EJECT
     C*****************************************************************
     C           ERRCHK    BEGSR
     C*
     C** End in error if a record not found.
     C           *IN99     IFEQ *ON
     C                     MOVEL'FILEERR' RETCDE
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     EXSR *PSSR
     C                     ENDIF
     C                     ENDSR
     C*****************************************************************
      /EJECT
     C*****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      * Called by: (**calling routines**)                             *
      *                                                               *
      * Calls: None                                                   *
      *                                                               *
      ************ CALL DBERRCTL IF INTERACTIVE PROGRAM ***************
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR                           ** *PSSR SR **
      *
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
     C                     DUMP
      ************ CALL DBERRCTL IF INTERACTIVE PROGRAM ******************
      *
     C*********            CALL 'DBERRCTL'
      *
      ********************************************************************
     C                     ENDIF
      *
      ************ END PROGRAM IF DBERRCTL NOT CALLED ********************
     C                     SETON                     U7U8LR
     C                     RETRN
      ********************************************************************
      *
     C                     ENDSR
      *
      ********************************************************************
     C********************************************************************
     C           INIT      BEGSR
     C           *ENTRY    PLIST
     C                     PARM           RETCDE 10
     C                     ENDSR
**  CPY@
(c) Finastra International Limited 2001
