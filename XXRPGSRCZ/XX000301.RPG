     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Midas/OPICS i/face ICD maint')                *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      ***SD9481R*-*Midas-OPICS*Interface*ICD*Maintenance***************                       JMI111
      *  XX000301 - Midas-OPICS Interface ICD Maintenance             *                       JMI111
      *                                                               *
      *  Function:  This program allows the user to amend the         *
      *             Midas-OPICS Interface ICD file.                   *
      *                                                               *
      ***(c)*Misys*International*Banking*Systems*Ltd.*2007*************                       JMI111
      *  (c) Finastra  International Limited 2018                     *                       JMI111
      *                                                               *
      *  Last Amend No. JMI111             Date 16May18               *
      *  Prev Amend No. CGL019  *CREATE    Date 20Apr07               *
      *                                                               *
      *-------------------------------------------------------------- *
      *                                                               *
      *  JMI111 - Midas-OPICS Interface. Upgrade to FBM 2.1           *
      *  CGL019 - Midas-OPICS Interface Phase                         *
      *                                                               *
      *****************************************************************
     F*SD9481R#CF*  E                    WORKSTN                        UC                    JMI111
     FXX0301DFCF  E                    WORKSTN                        UC                      JMI111
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      * DSP: Midas SD Midas-OPICS i/face ICD maint
      *
     F*SDOPINL1IF* E           K        DISK                           UC                     JMI111
     FXXOPINL1IF  E           K        DISK                           UC                      JMI111
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas/OPICS interface ICD retrieval
      *
     FSDDEPTL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Department Codes          Retrieval index
      *
     FSDRETRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * RTV : Midas SD Retail transaction types retrieval
      *
     FSDPRFCL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * RTV : Midas SD Profit centres retrieval
      *
     FSDBOOKL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0005
     F                                              KINFSR *PSSR
      * RTV : Midas SD Book details retrieval
      *
     FSDMMODL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0006
     F                                              KINFSR *PSSR
      * RTV : Midas SD Midas module flags retrieval
      *
     FSDGELRL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0007
     F                                              KINFSR *PSSR
      * RTV : Midas SD General ledger ICD details retrieval
      *
     F*SDOPINL0UF  E           K        DISK                           UC                     JMI111
     FXXOPINL0UF  E           K        DISK                           UC                      JMI111
     F                                              KCOMIT
     F                                              KINFDS ID0008
     F                                              KINFSR *PSSR
      * UPD : Midas SD MIDAS/OP interface ICD update
      *
     FSDFCTLL0UF  E           K        DISK                           UC
     F                                              KCOMIT
     F                                              KINFDS ID0009
     F                                              KINFSR *PSSR
      * UPD : Midas SD Standing data controls update
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Copyright array
     I*
     I* Description     : Copyright notice for inclusion in all programs
     I*
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I*@1DBRC****E DSSDOPINL0                                                                 JMI111
     I@1DBRC    E DSXXOPINL0                                                                  JMI111
      * UPD : Midas SD MIDAS/OP interface ICD update
      * Current/previous master file format fields for change control
     ISDACOD    E DSSDACODPD
      **  Account code details
      *
     ISDTIIN    E DSSDTIINPD
      **  TI ICD details
      *
     I#1DBRC      DS                             61
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IYARDCS      DS                             61
     IQSDFC1    E DSSDFCTLL0
      * UPD : Midas SD Standing data controls update
     IYBRDCS      DS                             22
     IA@CPY       DS
      * Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IYRSW0A      DS                           9999
     IYRSW0B      DS                           9999
     IYRSW0C      DS                           9999
     IYRSW0D      DS                           9999
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
     IID0005      DS                            528
      * File information data structure
      *
     IID0006      DS                            528
      * File information data structure
      *
     IID0007      DS                            528
      * File information data structure
      *
     IID0008      DS                            528
      * File information data structure
      *
     IID0009      DS                            528
      * File information data structure
      *
      /EJECT
     IDATA        DS                           1024
     I                                        1  10 #1INKY
      * Parameter declarations
     IP1PARM      DS                             10
      * KEY: Midas SD Midas/OPICS interface ICD retrieval
      * I : RST Midas/OPICS Interface Key
     I                                        1  10 P1INKY
     IP2PARM      DS
      * O :  *Return code
     I                                        1   7 P2RTN
     IP3PARM      DS
      * B : MAP Work Return code
     I                                        1   5 P3WRTC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'OPICS Dept Blank'
      * Department
     I                                        1   3 ZA0003
      * Message data for 'OPICS Dept not on Dept File'
      * Department
     I                                        1   3 ZA0004
      * Message data for 'OPICS Transaction Type blank'
      * Transaction Type (OP)
     I                                        1   5 ZA0005
      * Message data for 'OPICS Transaction Type inval'
      * Transaction Type (OP)
     I                                        1   5 ZA0006
      * Message data for 'OPICS Prof Centre blank'
      * Profit centre code  MIDAS
     I                                        1   4 ZA0007
      * Message data for 'OPICS Profit Centre Invalid'
      * Profit centre code  MIDAS
     I                                        1   4 ZA0008
      * Message data for 'OPICS Book blank'
      * Book
     I                                        1   2 ZA0009
      * Message data for 'OPICS Book invalid'
      * Book
     I                                        1   2 ZA0010
      * Message data for 'Lower Rng Batch Size invd'
      * Lower Rng Batch Nbr (scr)
     I                                        1   3 ZA0018
      * Message data for 'Lower Rng Batch Size invd'
      * Lower Rng Batch Nbr (scr)
     I                                        1   3 ZA0019
      * Message data for 'Lower Rng Batch Size invd'
      * Lower Rng Batch Nbr (scr)
     I                                        1   3 ZA0020
      * Message data for 'Upper Rng Batch Size invd'
      * Upper Rng Batch Nbr (scr)
     I                                        1   3 ZA0021
      * Message data for 'Upper Rng Batch Size invd'
      * Upper Rng Batch Nbr (scr)
     I                                        1   3 ZA0022
      * Message data for 'Upper Rng Batch Size invd'
      * Upper Rng Batch Nbr (scr)
     I                                        1   3 ZA0023
     ISCSARD    E DSSCSARDPD
      **  Switchable Features File Details
     IDSFDY     E DSDSFDY
      **  Short data structure for access programs
      *
     IDSSDY     E DSDSSDY
      ** Second DS for access programs, Long Date Structure
     I*
     I              '        ?'           C         C#QM9
     I              '         ?'          C         C#QM10
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Midas/OP I
     C           P2RTN     PARM P2RTN     WP0001  7        *Return code
     C           P3WRTC    PARM P3WRTC    WP0002  5        Work Return cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1INKY    IFEQ *BLANK                     Midas/OP Interf
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           OPINKY           Midas/OP Interf
      * Setup key
     C                     MOVEL#1INKY    OPINKY           Midas/OP Interf
     C           KRTV      CHAIN@OPINL1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     9931  *
      * Send message 'MIDAS/OP Interface ICD NF'
     C                     MOVEL'OPX0001' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * USER: Initialize detail screen (existing record)
      * Move data to the screen fields
     C                     MOVEL#1LRBN    #DLRBS           Lower Rng Batch
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DLRBS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0015  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0016 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0017  10       ZALIGN No Of De
     C                     PARM 3         WQ0018  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0019 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0020 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0021  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
     C                     Z-ADD3         YRSW03
     C                     Z-ADD14        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00016
     C           ZQ        ORGT 00016
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTWUZASF:ZQ #DLRBS    P  90  Lower Rng Batch
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     MOVEL#1URBN    #DURBS           Upper Rng Batch
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DURBS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0022  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0023 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0024  10       ZALIGN No Of De
     C                     PARM 3         WQ0025  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0026 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0027 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0028  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
     C                     Z-ADD3         YRSW03
     C                     Z-ADD14        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00016
     C           ZQ        ORGT 00016
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTWUZASF:ZQ #DURBS    P  90  Upper Rng Batch
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     END
      *
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Select existing record
     C                     EXSR VACKRL
      * USER: Validate key screen
      * MIDAS/OP Interface Key required
     C           #1INKY    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * Bypass Key screen if F12 is pressed on detail screen
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      *
      * USER: Validate detail screen fields
      *
      * Validate Department
      * CASE: DTL.Department is Blank
     C           #1DEPT    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1DEPT    ZA0003           Department
      * Send message 'OPICS Dept Blank'
     C                     MOVEL'OPX0002' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1DEPT    WUQMEN           question mark e
      * Question mark processing
      * CASE: WRK.question mark entered is Question mark
     C           WUQMEN    IFEQ '?'                        *IF
      * Select Department Codes - Department Codes  *
     C                     CALL 'SD0121S'              90  Select Departme
     C                     PARM *BLANK    W0RTN   7
     C           #1DEPT    PARM #1DEPT    WQ0038  3        Dept Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0121S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check Existance Of Dept - Department Codes  *
     C                     EXSR SBRVGN
      * Check record exists flag
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1DEPT    ZA0004           Department
      * Send message 'TI Dept not on Dept File'
     C                     MOVEL'OPX0003' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C* Only validate the Transaction Type if Retail module is on....
     C           *IN78     IFEQ *ON
      * Validate Transaction Type
      * CASE: DTL.Transaction Type (TI) is Blank
     C           #1TRTP    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1TRTP    ZA0005           Transaction Typ
      * Send message 'TI Transaction Type blank'
     C                     MOVEL'OPX0006' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1TRTP    WUQMEN           question mark e
      * Question mark processing
      * CASE: WRK.question mark entered is Question mark
     C           WUQMEN    IFEQ '?'                        *IF
      * Select Retail Transaction - Retail Transaction Types  *
     C                     CALL 'SD0130S'              90  Select Retail T
     C                     PARM *BLANK    W0RTN   7
     C           #1TRTP    PARM #1TRTP    WQ0039  5        Retail Transact
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0130S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check Rcd & get CR/DB Ind - Retail Transaction Types  *
     C                     EXSR SCRVGN
      * Check record exists flag
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1TRTP    ZA0006           Transaction Typ
      * Send message 'TI Transaction Type inval'
     C                     MOVEL'OPX0004' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      * Validate Profit Centre if profit centres are used
      * CASE: WRK.Profit Centres Used is Yes
     C           WUPRCU    IFEQ 'Y'                        *IF
      * Validate Profit Centre
      * CASE: DTL.Profit centre code  MIDAS is Blank
     C           #1PRFC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1PRFC    ZA0007           Profit centre c
      * Send message 'TI Prof Centre blank'
     C                     MOVEL'OPX0007' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1PRFC    WUQMEN           question mark e
      * Question mark processing
      * CASE: WRK.question mark entered is Question mark
     C           WUQMEN    IFEQ '?'                        *IF
      * Select Profit Centres - Profit Centres  *
     C                     CALL 'SD0480S'              90  Select Profit C
     C                     PARM *BLANK    W0RTN   7
     C           #1PRFC    PARM #1PRFC    WQ0040  4        Profit Centre C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0480S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Retrieve Profit Descr. - Profit Centres  *
     C                     EXSR SDRVGN
      * Check record exists flag
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1PRFC    ZA0008           Profit centre c
      * Send message 'TI Profit Centre Invalid'
     C                     MOVEL'OPX0005' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Book
      * CASE: DTL.Book is Blank
     C           #1BOOK    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1BOOK    ZA0009           Book
      * Send message 'TI Book blank'
     C                     MOVEL'OPX0008' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#1BOOK    WUQMEN           question mark e
      * Question mark processing
      * CASE: WRK.question mark entered is Question mark
     C           WUQMEN    IFEQ '?'                        *IF
      * Select Book Details - Book Details  *
     C                     CALL 'SD0310S'              90  Select Book Det
     C                     PARM *BLANK    W0RTN   7
     C           #1BOOK    PARM #1BOOK    WQ0041  2        Book Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0310S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     ELSE
      * CASE: *OTHERWISE
      * Check Existance Of Book. - Book Details  *
     C                     EXSR SERVGN
      * Check record exists flag
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
     C                     MOVEL#1BOOK    ZA0010           Book
      * Send message 'TI Book invalid'
     C                     MOVEL'OPX0009' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Lower Range Batch Number
      * CASE: DTL.Lower Rng Batch Nbr (scr) is Blank
     C           #DLRBS    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DLRBS    ZA0018           Lower Rng Batch
      * Send message 'Lower Rng Batch Size invd'
     C                     MOVEL'OPX0010' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DLRBS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0056  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0057 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0058  10       ZALIGN No Of De
     C                     PARM 3         WQ0059  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0060 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0061 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0062  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DLRBS    ZA0019           Lower Rng Batch
      * Send message 'Lower Rng Batch Size invd'
     C                     MOVEL'OPX0010' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD3         YRSW03
     C                     Z-ADD14        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00016
     C           ZQ        ORGT 00016
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTWUZASF:ZQ #DLRBS    P  90  Lower Rng Batch
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     MOVE WUZAFF    #1LRBN           Lower Range Bat
      * Is Lower Range Batch Number between 0 and 999 ?
      * CASE: DTL.Lower Range Batch Number is Valid Range
     C*
     C* Additionally make sure that batch numbers do not fall in range
     C* of TI Batch Numbers.
     C*
     C* Make sure lower range correct.
     C*
     C           BGN3ST    IFEQ 'Y'
     C*
     C           #1LRBN    IFGE *ZERO                      *IF
     C           #1LRBN    ANDLTTILRBN
     C           #1LRBN    ORGE *ZERO                      *IF
     C           #1LRBN    ANDGTTIURBN
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#DLRBS    ZA0020           Lower Rng Batch
      * Send message 'Lower Rng Batch Size invd'
     C                     MOVEL'OPX0010' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Upper Range Batch Number
      * CASE: DTL.Upper Rng Batch Nbr (scr) is Blank
     C* Additionally make sure that batch numbers do not fall in range
     C* of TI batch numnbers
     C*
     C* MAKE #DURBS NUMERIC FURTHER CHECKS REQUIRED.                      156783
     C*                                                                   156783
     C                     MOVEL#DURBS    HIGHSC  30                      156783
     C*                                                                   156783
     C           HIGHSC    IFGT 999                                       156783
     C           HIGHSC    ORLT 000                                       156783
     C*
      * Setup message data for message
     C                     MOVEL#DURBS    ZA0021           Upper Rng Batch
      * Send message 'Upper Rng Batch Size invd'
     C                     MOVEL'OPX0011' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      *
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUZASF           ZALIGN Screen F
     C                     MOVEL#DURBS    WUZASF           ZALIGN Screen F
      * Call ZALIGN & ZEDIT
      * ZALIGN Screen Field - Standard Functions  *
     C                     CALL 'ZALIGN'               90  ZALIGN Screen F
     C           W0RTN     PARM W0RTN     WQ0063  7        *Return code
     C           WUZASF    PARM WUZASF    WQ0064 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0065  10       ZALIGN No Of De
     C                     PARM 3         WQ0066  20       ZALIGN No Of Di
     C           WUZAFF    PARM *BLANK    WQ0067 16        ZALIGN File Fie
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZALIGN'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is Old Table Error
     C           W0RTN     IFEQ '*ERROR*'                  *IF
     C                     MOVEL'Y'       WUERCD           Err Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUERCD           Err Code
      * ZEDIT Screen Field - Standard Functions  *
     C                     CALL 'ZEDIT'                90  ZEDIT Screen Fi
     C           WUZASF    PARM WUZASF    WQ0068 16        ZALIGN Screen F
     C                     PARM *ZERO     WQ0069  10       ZALIGN No Of De
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ZEDIT'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
      * CASE: WRK.Err Code is Error Found
     C           WUERCD    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVEL#DURBS    ZA0022           Upper Rng Batch
      * Send message 'Upper Rng Batch Size invd'
     C                     MOVEL'OPX0011' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD3         YRSW03
     C                     Z-ADD14        ZQ      50
     C           YRSW03    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW03    ORGT 00016
     C           ZQ        ORGT 00016
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW03    SUBSTWUZASF:ZQ #DURBS    P  90  Upper Rng Batch
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     MOVE WUZAFF    #1URBN           Upper Range Bat
      * Upper Range Batch Number > Lower Range Batch Number ?
      * CASE: DTL.Upper Range Batch Number LE DTL.Lower Range Batch Numbe
     C           #1URBN    IFLE #1LRBN                     *IF
      * Setup message data for message
     C                     MOVEL#DURBS    ZA0023           Upper Rng Batch
      * Send message 'Upper Rng Batch Size invd'
     C                     MOVEL'OPX0011' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
      *
     C                     ELSE
      *
     C           BGN3ST    IFEQ 'Y'
     C*
     C           #1URBN    IFGE *ZERO                      *IF
     C           #1URBN    ANDGTTIURBN
     C           #1URBN    ORGE *ZERO                      *IF
     C           #1URBN    ANDLTTILRBN
      *
     C                     ELSE
      * Setup message data for message
     C                     MOVEL#DURBS    ZA0023           Upper Rng Batch
      * Send message 'Upper Rng Batch Size invd'
     C                     MOVEL'OPX0011' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9939  *
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
      * Validate balancing account code
      * An account code must be entered
     C           #1BALA    IFEQ *BLANKS                    *IF
     C                     MOVEL'USR9111' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
     C                     ELSE
      * Question mark processing
     C           #1BALA    IFEQ '?   '
     C           #1BALA    OREQ ' ?  '
     C           #1BALA    OREQ '  ? '
     C           #1BALA    OREQ '   ?'
     C           #1BALA    OREQ '    ?'
     C           #1BALA    OREQ '     ?'
     C           #1BALA    OREQ '      ?'
     C           #1BALA    OREQ '       ?'
     C           #1BALA    OREQ C#QM9
     C           #1BALA    OREQ C#QM10
     C                     CALL 'SD0031S'              90  Select Account
     C                     PARM *BLANK    W0RTN   7
     C           #1BALA    PARM #1BALA    WQ0078 10        Account Code
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SD0031S' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
      * Check that account code exists
     C                     CALL 'AOACODR0'             9090
     C                     PARM *BLANKS   P@RTCD  7
     C                     PARM '*KEY   ' P@OPTN  7
     C                     PARM           #1BALA
     C           SDACOD    PARM *BLANKS   DSSDY
      *
     C           *IN90     IFEQ '1'
     C           P@RTCD    ORNE *BLANKS
     C                     MOVEL'USR0069' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9947  *
     C                     END
     C                     ENDIF
     C                     ENDIF
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      * USER: Process command keys
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
     C                     EXSR SFCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1INKY    IFEQ *BLANK                     MIDAS/OP Interf
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUPRCU    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Enable key screen
     C                     SETON                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     Z-ADD*ZERO     #1LRBN           Lower Range Bat
     C                     Z-ADD*ZERO     #1URBN           Upper Range Bat
     C                     MOVEL*BLANK    #1TYLC           Type of Last Ch
     C                     Z-ADD*ZERO     #1LCD            Last Change Dat
     C                     MOVEL*BLANK    #1DEPT           Department
     C                     MOVEL*BLANK    #1TRTP           Transaction Typ
     C                     MOVEL*BLANK    #1PRFC           Profit centre c
     C                     MOVEL*BLANK    #1BOOK           Book
     C                     MOVEL*BLANK    #DLRBS           Lower Rng Batch
     C                     MOVEL*BLANK    #DURBS           Upper Rng Batch
     C                     MOVEL*BLANK    #1BALA           Balancing account code
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @OPINL1 fields to screen
      *================================================================
     C                     MOVELOPINKY    #1INKY           MIDAS/OP Interf
     C                     Z-ADDOPLRBN    #1LRBN           Lower Range Bat
     C                     Z-ADDOPURBN    #1URBN           Upper Range Bat
     C                     MOVELOPTYLC    #1TYLC           Type of Last Ch
     C                     Z-ADDOPLCD     #1LCD            Last Change Dat
     C                     MOVELOPDEPT    #1DEPT           Department
     C                     MOVELOPTRTP    #1TRTP           Transaction Typ
     C                     MOVELOPPRFC    #1PRFC           Profit centre c
     C                     MOVELOPBOOK    #1BOOK           Book
     C                     MOVELOPBALA    #1BALA           Balancing account code
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      * Initialize work field for batch size
     C                     Z-ADD*ZERO     W#MAX   40
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP3WRTC    #PWRTC           Work Return cod
     C                     MOVELP1INKY    #1INKY           MIDAS/OP Interf
      * USER: Initialize key screen
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Check Existance Of Dept - Department Codes  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           AEDPCD           Dept Code
      * Move fields to key list
     C                     MOVEL#1DEPT    AEDPCD           Dept Code
     C           KRSSB     CHAIN@AECPAN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0013' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Check Rcd & get CR/DB Ind - Retail Transaction Types  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           A1RTTY           Retail Transact
      * Move fields to key list
     C                     MOVEL#1TRTP    A1RTTY           Retail Transact
     C           KRSSC     CHAIN@A1RECX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0061' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELA1DCIN    WUDCIN           Debit/Credit In
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Retrieve Profit Descr. - Profit Centres  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DSPCCD           Profit Centre C
      * Move fields to key list
     C                     MOVEL#1PRFC    DSPCCD           Profit Centre C
     C           KRSSD     CHAIN@DSREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0647' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELDSPCDS    WUPCDS           Profit Centre D
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Check Existance Of Book. - Book Details  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BDBKCD           Book Code
      * Move fields to key list
     C                     MOVEL#1BOOK    BDBKCD           Book Code
     C           KRSSE     CHAIN@BDREDK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0085' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Change Midas/OPICS Interface - Midas/OPICS Interface ICD  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YARDC   1
      *
      * Move key fields to @OPINL0
     C                     MOVE *BLANK    OPINKY           MIDAS/OP Interf
     C                     MOVEL'OPIN'    OPINKY           MIDAS/OP Interf
      *
     C           KLCHSF    KLIST
     C                     KFLD           OPINKY           MIDAS/OP Interf
     C           KLCHSF    CHAIN@OPINL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SFEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C***********          UNLCKSDOPINL0               91  *                                  JMI111
     C                     UNLCKXXOPINL0               91  *                                  JMI111
     C                     GOTO SFEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * USER: Processing after Data read
      * Save last change date for record
     C                     Z-ADDOPLCD     WULCD            Last Change Dat
      * Move non-key fields to @OPINL0
     C                     MOVEL#1DEPT    OPDEPT           Department
     C                     MOVEL#1TRTP    OPTRTP           Transaction Typ
     C                     MOVEL#1PRFC    OPPRFC           Profit centre c
     C                     MOVEL#1BOOK    OPBOOK           Book
     C                     Z-ADD#1LRBN    OPLRBN           Lower Range Bat
     C                     Z-ADD#1URBN    OPURBN           Upper Range Bat
     C                     MOVEL#1BALA    OPBALA           Balancing account code
     C                     Z-ADDWULCD     OPLCD            Last Change Dat
     C                     MOVEL'A'       OPTYLC           Type of Last Ch
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * USER: Processing before Data update
      * Window processing
      * CASE: WRK.Window processing requir. is Yes
     C           WUWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C                     CALL 'WN0010'
     C                     PARM ##PGM     UPGM   10        Program
     C                     PARM *BLANK    UFKEY   2        Function Key
     C                     PARM 'A'       UACTCD  1        Action  S01212
     C                     PARM           DATA             Trans Data
     C                     PARM *BLANK    W0RTN            Return Code
     C                     PARM           SPARE 256        Spare Field
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C                     MOVE 'Y'       YARDC
     C                     END
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@OPINL0                91  *
     C                     ELSE
      * Release record lock
     C***********          UNLCKSDOPINL0               91  *                                  JMI111
     C                     UNLCKXXOPINL0               91  *                                  JMI111
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * Update file controls
      * CASE: WRK.Last Change Date NE WRK.Run day number
     C           WULCD     IFNE WURDNB                     *IF
      * Update only if file has not already been updated
     C                     Z-ADD*ZERO     WUNORC           No. of Records
     C                     Z-ADD*ZERO     WUNOIN           No. of Inserts
     C                     Z-ADD*ZERO     WUNODL           No. of Deletes
     C                     Z-ADD1         WUNOAM           No. of Amends
      * Change Standing Data Cont - Standing Data Controls  *
     C                     EXSR SGCHRC
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Change Standing Data Cont - Standing Data Controls  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YBRDC   1
      *
      * Move key fields to @AHREAU
     C                     MOVE *BLANK    AHFLNM           Filename
     C                     MOVEL'SDICDRPD'AHFLNM           Filename
      *
     C           KLCHSG    KLIST
     C                     KFLD           AHFLNM           Filename
     C           KLCHSG    CHAIN@AHREAU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SGEXIT
     C                     END
      *
      * Store record data for null update check
     C                     MOVE QSDFC1    YBRDCS
      * USER: Processing after Data read
     C                     ADD  AHNORC    WUNORC           No. of Records
     C                     ADD  AHNOIN    WUNOIN           No. of Inserts
     C                     ADD  AHNOAM    WUNOAM           No. of Amends
     C                     ADD  AHNODL    WUNODL           No. of Deletes
      * Move non-key fields to @AHREAU
     C                     Z-ADDWUNORC    AHNORC           No. of Records
     C                     Z-ADDWUNOIN    AHNOIN           No. of Inserts
     C                     Z-ADDWUNOAM    AHNOAM           No. of Amends
     C                     Z-ADDWUNODL    AHNODL           No. of Deletes
      *
      * Set PGM.*Record Data Changed flag
     C           QSDFC1    IFNE YBRDCS
     C                     MOVE 'Y'       YBRDC
     C                     END
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AHREAU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKSDFCTLL0               91  *
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Get 'Window required' ind - MIDAS Modules  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BGMODS           Modules
      * Move fields to key list
     C                     MOVE *BLANK    BGMODS           Modules
     C                     MOVEL'MMOD'    BGMODS           Modules
     C           KRSSH     CHAIN@BGREC8              90    *
      * Data record not found
     C   90                MOVEL'USR0096' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUWDPR           Window processi
     C                     END                             *FI
     C*
     C* If Retail Module is on then seton *IN78
     C*
     C           BGRTBN    IFEQ 'Y'
     C                     MOVE *ON       *IN78
     C                     ENDIF
     C*
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Check Profit Centres Used - General Ledger Details  *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           BKGNLG           General Ledger
      * Move fields to key list
     C                     MOVE *BLANK    BKGNLG           General Ledger
     C                     MOVEL'GELR'    BKGNLG           General Ledger
     C           KRSSI     CHAIN@BKREEC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0199' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELBKPRCU    WUPRCU           Profit Centres
     C                     END
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1INKY    WK1X01  1
     C           WK1X01    IFEQ '?'                        MIDAS/OP Interf
     C                     CALL 'SDUESRR'              90  Select MIDAS/OP
     C                     PARM *BLANK    W0RTN   7
     C           #1INKY    PARM #1INKY    WQ0036 10        MIDAS/OP Interf
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDUESRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'SDU8E1R' W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      *
      ** Access the switchable features file, to see if the feature
      ***CGL019*is*on.                                                                        JMI111
      ** JMI111 is on.                                                                        JMI111
     C                     CALL 'AOSARDR0'
     C                     PARM *BLANKS   @RTCD   7
     C                     PARM '*VERIFY' @OPTN   7
     C***********          PARM 'CGL019'  @KEY    6                                           JMI111
     C                     PARM 'JMI111'  @KEY    6                                           JMI111
     C           SCSARD    PARM SCSARD    DSFDY
      *
     C           @RTCD     IFNE *BLANKS
     C                     MOVE '1'       *INLR
     C                     RETRN
     C                     END
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field ZALIGN Screen Fun Field
     C                     MOVEL*BLANK    WUZASF 16
      * Define work field ZALIGN File Field
     C                     MOVEL*BLANK    WUZAFF 16
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field question mark entered
     C                     MOVEL*BLANK    WUQMEN  1
      * Define work field Debit/Credit Indicator
     C                     MOVEL*BLANK    WUDCIN  1
      * Define work field Profit Centres Used
     C                     MOVEL*BLANK    WUPRCU  1
      * Define work field Profit Centre Description
     C                     MOVEL*BLANK    WUPCDS 30
      * Define work field Last Change Date
     C                     Z-ADD*ZERO     WULCD   50
      * Define work field Window processing requir.
     C                     MOVEL*BLANK    WUWDPR  1
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field No. of Records
     C                     Z-ADD*ZERO     WUNORC  50
      * Define work field No. of Inserts
     C                     Z-ADD*ZERO     WUNOIN  50
      * Define work field No. of Deletes
     C                     Z-ADD*ZERO     WUNODL  50
      * Define work field No. of Amends
     C                     Z-ADD*ZERO     WUNOAM  50
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW02  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW03  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW04  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW05  50       *Synon (5,0) wo
     C                     MOVEL*BLANKS   YRSW06  1        *String work fi
     C                     MOVEL*BLANKS   YRSW07  1        *String work fi
     C                     MOVEL*BLANKS   YRSW08  7        *Return code
     C                     MOVEL*BLANKS   YRSW09  1        *String work fi
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0A           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0B           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0C           *Synon (9999) w
      * *Synon (9999) work field
     C                     MOVEL*BLANKS   YRSW0D           *Synon (9999) w
     C                     MOVEL*BLANKS   YRSW0E  1        *String work fi
     C                     MOVEL*BLANKS   YRSW0F  1        *String work fi
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C***********          OPEN SD9481R#                                                      JMI111
     C**********           OPEN SDOPINL1                                                      JMI111
     C                     OPEN XX0301DF                                                      JMI111
     C                     OPEN XXOPINL1                                                      JMI111
     C                     OPEN SDDEPTL1
     C                     OPEN SDRETRL1
     C                     OPEN SDPRFCL1
     C                     OPEN SDBOOKL1
     C                     OPEN SDMMODL1
     C                     OPEN SDGELRL1
     C**********           OPEN SDOPINL0                                                      JMI111
     C                     OPEN XXOPINL0                                                      JMI111
     C                     OPEN SDFCTLL0
     C                     MOVEL'N'       W0PMT   1
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * SD9481R Precompiler - MIDAS/OP Interface ICD  *
      * Copyright Statement 1997 - Standard Functions  *
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      * Get 'Window required' ind - MIDAS Modules  *
     C                     EXSR SHRVGN
      * Midas-TI ICD Data Struct - MIDAS/OP Interface ICD  *
      * Check to see if profit centres are used
      * Check Profit Centres Used - General Ledger Details  *
     C                     EXSR SIRVGN
      *
     C           BGN3ST    IFEQ 'Y'
     C                     CALL 'AOTIINR0'
     C                     PARM '*MSG'    WWRTCD  7
     C                     PARM '*FIRST'  WWOPTN  7
     C           SDTIIN    PARM SDTIIN    DSFDY
      *
     C           WWRTCD    IFNE *BLANKS
      * Data record not found
     C                     MOVEL'USR0199' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     END
     C                     END
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      * Core function specific processing.
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
** CPY@     : Copyright notice for inclusion in all programs
(c) Finastra International Limited 2018                                                       JMI111
