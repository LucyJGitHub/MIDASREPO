     H        1
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas RE Stamp Duty Code Maintenance')                 *
      *****************************************************************
      *                                                               *
      *  Midas    - Retail Module                                     *
      *                                                               *
      ***REM001R  - Stamp Duty Code Maintenance                       *   LUC140
      *  XX1401R  - Stamp Duty Code Maintenance                       *   LUC140
      *                                                               *
      *  Function:  To create new stamp duty code or to maintain      *
      *   (I/C)     stamp duty code                                   *
      *                                                               *
      *                                                               *
      ***Called*By:*REM001D                                           *   LUC140
      *  Called By: XX1401D                                           *   LUC140
      *                                                               *
      *  Calls    : AOCURRR0 - Currency Codes Access Object           *
      *             AONARRR0 - Narrative Codes Access Object          *
      *             AORETRR0 - Transaction Type Access Object         *
      *             AOCUSTR0 - Customer Details Access Object         *
      *             AOACODR0 - Account Codes Access Object            *
      *                                                               *
      *  (C) Copyright Midas-Kapiti International Ltd. 1998           *
      *                                                               *
      *  Last Amend No. LUC140             Date 24Feb21               *
      *  Prev Amend No. MMI013 *CREATE     Date 20Mar98               *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  LUC140 - Upgrade MMI013 to FM2.1                             *
      *  MMI013 - Retail Stamp Duty and Account Changes               *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  F U N C T I O N   O F   I N D I C A T O R S                  *
      *                                                               *
      *   01  -  First-time loop                                      *
      *   03  -  F3  KEY - Exit program                               *
      *   12  -  F12 KEY - Previous screen                            *
      *   21  -  Invalid SDC code                                     *
      *   23  -  Invalid Currency                                     *
      *   24  -  Invalid Yearly Amount                                *
      *   25  -  Invalid Narrative Code-DR                            *
      *   26  -  Invalid Transaction Type-DR                          *
      *   27  -  Invalid Narrative Code-CR                            *
      *   28  -  Invalid Customer Code-CR                             *
      *   29  -  Invalid A/c Code-CR                                  *
      *   30  -  Invalid A/c Sequence                                 *
      ****31**-**Database error in updating RESDCDV1                  *   LUC140
      ****32**-**Database error in writing records to RESDCDV1        *   LUC140
      *   31  -  Database error in updating XXSDCDV1                  *   LUC140
      *   32  -  Database error in writing records to XXSDCDV1        *   LUC140
      *   40  -  General error field indicator.                       *
      * U7+U8 -  Database Error                                       *
      *   LR  -  Last record                                          *
      *                                                               *
      *****************************************************************
      *                                                               *
      *  S U B R O U T I N E   I N D E X                              *
      *                                                               *
      *  #MINIT - Initialise program.                                 *
      *  #MMAIN - Main Processing.                                    *
      *  #MVALD - Validate Screen Processing.                         *
      *  #MSN01 - Screen 1 processing.                                *
      *  #MSR02 - Screen 2 processing.                                *
      *  #MVAL1 - Validate Screen 1                                   *
      *  #MVAL2 - Validate Screen 2                                   *
      *  #MFIL2 - Get data from file and format output for screen 2   *
      *  #MEXIT - End processing .                                    *
      *  #MCLER - Clear the message file.                             *
      *  ZASNMS - Send message to the program message queue.          *
      *  *PSSR  - Error processing subroutine                         *
      *  *INZSR - Auto program initialisation                         *
      *                                                               *
      *****************************************************************
     F**********REM001RDCF  E                    WORKSTN                  LUC140
     FXX1401RDCF  E                    WORKSTN                            LUC140
      ** Stamp Duty Code Maintenance Display
      *
     F**********RESDCDV1UF  E           K        DISK         KCOMIT       A    LUC140
     FXXSDCDV1UF  E           K        DISK         KCOMIT       A              LUC140
     F                                              KINFSR *PSSR
      ** Stamp Duty Codes File - Update
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *
      ** Copyright Array
      *
     E                    CPY@    1   1 80
      *
      ** Array containing Copyright statement
      *
     E/COPY ZSRSRC,ZALIGNZ1
      *
      ** Array for CMTTXT commitment text
      *
     E                    DET       256  1
      *
      *****************************************************************
      /SPACE 3
      *****************************************************************
      *
     IA@CPY       DS
     I                                        1  80 CPY@
      ** Copyright array
      *
     IDSFDY     E DSDSFDY
      ** Short data structure for Access Programs
      *
     IDSSDY     E DSDSSDY
      ** Long data structure for Access Programs
      *
     IRUNDAT    E DSRUNDAT
      ** Data Area giving Installation Control Details
      *
     ILDA       E DSLDA                         256
     I              SPARE                           W24
      *
      ** Local data area for database error details
      ** *LOCK IN LDA immediately before and OUT LDA immediately
      ** after each database error handling.
      **
      **                                    134 141 DBFILE
      **       Defines:                     142 170 DBKEY
      **                                    171 180 DBPGM
      **                                    181 1830DBASE
     IPSDS       SDS
      *
      ** Program Status Data Structure - gives Job/Workstation name and
      ** User ID
     I                                     *PROGRAM ##PGM
     I                                      244 253 JOB
     I                                      244 246 WSID
     I                                      254 263 USER
     IRUNDT       DS
      ** Data Area Rundat
      *
     I                                        1   7 RUNA
     I                                        3   5 UMONH
     I                                    P   8  100RUND
     I                                       11  11 SSF
     I                                       12  12 DATF
     I                                       13  13 MBIN
     I/COPY ZSRSRC,ZTNLU1Z1
     ICMTTXT      DS
      ** Data Structure to setup of commit text
      *
     I                                        1   50NATN
     I                                        6   7 MDID
     I                                        8  15 PGMN
     I                                       16  18 WSIDX
     I                                       19  240MTIME
     I                                       25  25 ACTNX
     I                                       26  35 USIDX
     I                                       51 306 DET
      ** Key fields for CMTTXT
      *
     I                                        1  14 SCRCTL
     I                                        1   2 USDC
     I                                        3   3 UACTD
      ** Screen fields for CMTTXT
      *
     IDETS        DS                                                      S01179
     I                                        1   2 SSDC                  S01179
     I                                        3  32 SDESC                 S01179
     I                                       33  35 SCYCD                 S01179
     I                                       36  50 SYAMT                 S01179
     I                                       51  52 SNADR                 S01179
     I                                       53  57 STTYP                 S01179
     I                                       58  59 SNACR                 S01179
     I                                       60  65 SCUST                 S01179
     I**********                             66  69 SACOD          S01179 LUC140
     I**********                             70  71 SACSQ          S01179 LUC140
     I                                       66  75 SACOD                 LUC140
     I                                       76  77 SACSQ                 LUC140
     ISDCURR    E DSSDCURRPD
      **  External data structures for Currency Details
      *
     ISDNARR    E DSSDNARRPD
      ** External data structure for Narrative Code details
      *
     ISDRETR    E DSSDRETRPD
     I*  External data structure for Transaction Type details
     I*
     ISDCUST    E DSSDCUSTPD
     I*  External data structure for Customer details
     I*
     ISDACOD    E DSSDACODPD
     I*  External data structure for Account Codes details
     I*
     I/EJECT
     C/TITLE Main Processing
      *================================================================
      *  M A I N L I N E  -  P R O G R A M   S T A R T                *
      *================================================================
      *
      ** Program Initialisation
      *
     C                     EXSR #MINIT
      *
      ** Mainline Processing
      *
     C                     EXSR #MMAIN
      *
      ** Exit Program
      *
     C                     EXSR #MEXIT
      *
      *================================================================
      *  P R O G R A M   E N D                                        *
      *================================================================
     C/TITLE SR/#MINIT
      *****************************************************************
      *                                                               *
      *  #MINIT - Initialise program.                                 *
      *                                                               *
      *  Called By: Mainline Processing                               *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           #MINIT    BEGSR
      *
      ** Only do first time through
      *
     C           *IN01     IFEQ *OFF
      *
      ** Move the copyright array.
      *
     C                     MOVELCPY@,1    COPY   80
      *
      ** Define the LDA for error handling
      *
     C           *NAMVAR   DEFN           LDA
     C           *LOCK     IN   LDA
     C**********           MOVEL'REM001R' DBPGM                           LUC140
     C                     MOVEL'XX1401R' DBPGM                           LUC140
     C                     OUT  LDA
      *
      ** Get run date from data area
      *
     C           *NAMVAR   DEFN RUNDAT    RUNDT
     C                     IN   RUNDT
      *
      ** Prepare comit text
      *
     C                     MOVEL'RE'      MDID
     C**********           MOVEL'REM001R' PGMN                            LUC140
     C                     MOVEL'XX1401R' PGMN                            LUC140
     C                     MOVELWSID      WSIDX
     C                     MOVELUSER      USIDX
      *
      ** Initialise work fields
      *
     C           *LIKE     DEFN MACSQ     UWSCRN
     C           *LIKE     DEFN MSDC      UUPD
      *
      ** If amend mode go to second screen else first screen
      *
     C           @ACTD     IFEQ 'A'
     C                     Z-ADD2         UWSCRN
     C                     ELSE
     C                     Z-ADD1         UWSCRN
     C                     ENDIF
      *
      ** Define message file name
      *
     C                     MOVEL'ITUSRMSG'ZAMSGF
      *
      ** This work field is used to redisplay screen if
      ** it is not blank . If a '?' is entered in any
      ** of the input fields , this field is set to '?'
      *
     C                     MOVE '?'       UREAP
      *
      ** Get account currency if in amend mode
      *
     C           @ACTD     IFEQ 'A'
     C********** @SDC      CHAINRESDCDV1            N97                   LUC140
     C           @SDC      CHAINXXSDCDV1            N97                   LUC140
     C           *IN97     IFEQ *ON
     C           *LOCK     IN   LDA
     C                     MOVEL@SDC      DBKEY            ***************
     C                     Z-ADD001       DBASE            * DB ERROR 01 *
     C**********           MOVEL'RESDCDV1'DBFILE           ***************LUC140
     C                     MOVEL'XXSDCDV1'DBFILE           ***************LUC140
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
      *
      ** Get the number of decimal places for the yearly amount
      *
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   PRTCD   7
     C                     PARM '*KEY   ' POPTN   7
     C                     PARM MCYCD     PTCCY   3
     C           SDCURR    PARM SDCURR    DSSDY
     C           PRTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     MOVELMCYCD     DBKEY            ***************
     C                     Z-ADD002       DBASE            * DB ERROR 02 *
     C                     MOVEL'SDCURRPD'DBFILE           ***************
     C                     OUT  LDA
     C                     EXSR *PSSR
     C                     ENDIF
     C                     ENDIF
      *
     C                     MOVE *ON       *IN01
      *
     C                     ENDIF
      *
     C                     ENDSR
      *****************************************************************
      /TITLE SR/#MMAIN
      *****************************************************************
      *                                                               *
      *  #MMAIN - Main screen processing                              *
      *                                                               *
      *  Called By: Mainline Processing                               *
      *  Calls: #MSR01 , #MSR02                                       *
      *                                                               *
      *****************************************************************
      *
     C           #MMAIN    BEGSR
      *
      ** Loop until either a command key hit or redisplay field is
      ** blank
      *
     C           *IN12     DOUEQ*ON
     C           *IN03     OREQ *ON
     C           UREAP     OREQ *BLANK
      *
      ** Go to screen 1 if in create mode else go to screen 2 in
      ** amend mode
      *
     C           UWSCRN    CASEQ1         #MSR01
     C           UWSCRN    CASEQ2         #MSR02
     C                     ENDCS
      *
     C                     ENDDO
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/#MSR01
      *****************************************************************
      *                                                               *
      *  #MSR01 - Screen 1 processing                                 *
      *                                                               *
      *  Called By: MAIN                                              *
      *  Calls: #MCLER , #MVAL1                                       *
      *                                                               *
      *****************************************************************
      *
     C           #MSR01    BEGSR
      *
      ** Display screen 1
      *
     C                     EXFMTREM001F1
      *
      ** If F3 is pressed , return to calling program
      *
     C           *IN03     IFEQ '1'
     C                     MOVE 'E'       @RCMD
     C                     ENDIF
      *
      ** If F12 is pressed , return to calling program
      *
     C           *IN12     IFEQ '1'
     C                     MOVE 'F'       @RCMD
     C                     ENDIF
      *
      ** Clear message queue
      *
     C           *IN40     IFEQ '1'
     C                     EXSR #MCLER
     C                     END
      *
      ** Validate input fields
      *
     C                     EXSR #MVAL1
      *
      ** If error , display error message else go to screen 2
      *
     C           @RCMD     IFEQ *BLANK
     C           *IN40     IFEQ '1'
     C                     WRITEREM001S1
     C                     MOVE '?'       UREAP
     C                     ELSE
     C                     EXSR #MCLER
     C                     WRITEREM001S1
     C                     Z-ADD2         UWSCRN
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/#MSR02
      *****************************************************************
      *                                                               *
      *  #MSR02 - Screen 2 processing                                 *
      *                                                               *
      *  Called By: MAIN                                              *
      *  Calls: #MFIL2 , #MCLER , #MVAL2                              *
      *                                                               *
      *****************************************************************
      *
     C           #MSR02    BEGSR
      *
      ** Get Stamp Code Details
      *
     C                     EXSR #MFIL2
      *
      ** Display screen 2
      *
     C                     EXFMTREM001F2
      *
      ** If F3 is pressed , return to calling program
      *
     C           *IN03     IFEQ '1'
     C                     MOVE 'E'       @RCMD
     C                     ENDIF
      *
      ** If F12 is pressed , return to calling program
      *
     C           *IN12     IFEQ '1'
     C                     MOVE 'F'       @RCMD
     C                     ENDIF
      *
      ** Clear message queue
      *
     C           *IN40     IFEQ '1'
     C                     EXSR #MCLER
     C                     END
      *
      ** Clear work field to stop redisplay
      *
     C                     CLEARUREAP
      *
      ** Validate input fields
      *
     C                     EXSR #MVAL2
      *
      ** If error , display error message else update file
      *
     C           @RCMD     IFEQ *BLANK
      *
     C           *IN40     IFEQ '1'
     C                     WRITEREM001S1
     C                     MOVE '?'       UREAP
      *
     C                     ELSE
      *
     C                     EXSR #MCLER
     C                     WRITEREM001S1
     C                     MOVE SDESC     MDESC
      *
     C           UUPD      IFEQ '  '
     C                     UPDATRESDCDPP               31
      *
      ***Data*base error in file RESDCDV1                                 LUC140
      ** Data base error in file XXSDCDV1                                 LUC140
      *
     C           *IN31     IFEQ *ON
     C           *LOCK     IN   LDA
     C                     Z-ADD003       DBASE            ***************
     C**********           MOVEL'RESDCDV1'DBFILE           *DB ERROR 003 *LUC140
     C                     MOVEL'XXSDCDV1'DBFILE           *DB ERROR 003 *LUC140
     C                     OUT  LDA                        ***************
     C                     ROLBK
     C                     EXSR *PSSR
     C                     ENDIF
      *
     C                     EXSR ZTNLU1
     C                     TIME           MTIME
     C                     MOVEL@ACTD     ACTNX
     C                     MOVEASCRCTL    DET,01
     C                     MOVEADETS      DET,09
     C           CMTTXT    COMIT
      *
     C           UREAP     IFEQ *BLANK
     C                     MOVE 'F'       @RCMD
     C                     MOVE *ON       *IN12
     C                     ENDIF
      *
     C                     ELSE
      *
     C                     MOVE SSDC      MSDC
     C                     WRITERESDCDPP               32
      *
      ***Data*base error in file RESDCDV1                                 LUC140
      ** Data base error in file XXSDCDV1                                 LUC140
      *
     C           *IN32     IFEQ *ON
     C           *LOCK     IN   LDA
     C                     Z-ADD004       DBASE            ***************
     C**********           MOVEL'RESDCDV1'DBFILE           *DB ERROR 004 *LUC140
     C                     MOVEL'XXSDCDV1'DBFILE           *DB ERROR 004 *LUC140
     C                     OUT  LDA                        ***************
     C                     ROLBK
     C                     EXSR *PSSR
     C                     ENDIF
      *
     C                     EXSR ZTNLU1
     C                     TIME           MTIME
     C                     MOVEL@ACTD     ACTNX
     C                     MOVEASCRCTL    DET,01
     C                     MOVEADETS      DET,09
     C           CMTTXT    COMIT
      *
     C                     CLEARUUPD
     C           UREAP     IFEQ *BLANK
     C                     MOVE 'F'       @RCMD
     C                     MOVE *ON       *IN12
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/#MFIL2
      *****************************************************************
      *                                                               *
      *  #MFIL2 - Get data from file and format output for screen 2   *
      *                                                               *
      *  Called By: MAIN                                              *
      *  Calls:                                                       *
      *                                                               *
      *****************************************************************
      *
     C           #MFIL2    BEGSR
      *
      ** Get data from file and format output
      *
     C           @ACTD     IFEQ 'A'
      *
     C********** @SDC      CHAINRESDCDV1             97                   LUC140
     C           @SDC      CHAINXXSDCDV1             97                   LUC140
     C           *IN97     IFEQ *ON
     C                     MOVE '97'      UUPD
     C                     ELSE
     C                     MOVE *BLANKS   UUPD
     C                     ENDIF
      *
     C                     ELSE
      *
     C********** SSDC      CHAINRESDCDV1             97                   LUC140
     C           SSDC      CHAINXXSDCDV1             97                   LUC140
     C           *IN97     IFEQ *ON
     C                     MOVE '97'      UUPD
     C                     ELSE
     C                     MOVE *BLANKS   UUPD
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** If record exists
      *
     C           *IN97     IFEQ *OFF
     C           *IN40     ANDEQ*OFF
      *
      ** Format Yearly Amount
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE MYAMT     ZFIELD
     C                     Z-ADDA6NBDP    ZADEC
     C                     EXSR ZEDIT
     C                     MOVE ZFIELD    SYAMT
      *
      ** Format Transaction Type-DR
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE MTTYP     STTYP
      *
      ** Format Customer Code-CR
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE MCUST     SCUST
      *
      ** Move A/c Code-CR to screen
      *
     C                     MOVE MACOD     SACOD
      *
      ** Move A/c Sequence-CR to screen
      *
     C                     MOVE MACSQ     SACSQ
      *
      ** Move apha fields from file to screen
      *
     C                     MOVE MSDC      SSDC
     C                     MOVE MCYCD     SCYCD
     C                     MOVE MNADR     SNADR
     C                     MOVE MNACR     SNACR
     C                     MOVE MDESC     SDESC
      *
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/#MVAL1
      *****************************************************************
      *                                                               *
      *  #MVAL1 - Validate screen 1                                   *
      *                                                               *
      *  Called By: #MSR01                                            *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           #MVAL1    BEGSR
      *
      ** Validate if F3 or F12 not pressed
      *
     C           @RCMD     IFEQ *BLANK
      *
      ** Stamp Code Validation
      *
     C           SSDC      IFEQ *BLANK
     C                     MOVE *ON       *IN21
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0016' ZAMSID
     C                     EXSR ZASNMS
     C                     ENDIF
      *
     C********** SSDC      CHAINRESDCDV1            N97                   LUC140
     C           SSDC      CHAINXXSDCDV1            N97                   LUC140
     C           *IN97     IFEQ *OFF
     C                     MOVE *ON       *IN21
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0015' ZAMSID
     C                     EXSR ZASNMS
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/#MVAL2
      *****************************************************************
      *                                                               *
      *  #MVAL2 - Validate screen 2                                   *
      *                                                               *
      *  Called By: #MSCR2                                            *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           #MVAL2    BEGSR
      *
      ** Validate if F3 or F12 not pressed
      *
     C           @RCMD     IFEQ *BLANK
      *
      ** Currency Validation
      *
     C           SCYCD     IFEQ *BLANK
     C                     MOVE *ON       *IN23
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0017' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSCYCD     USRCH   1
     C                     ENDIF
      *
     C                     CALL 'AOCURRR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM SCYCD     PTCCY   3
     C           SDCURR    PARM SDCURR    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN23
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0018' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP   1
     C                     MOVELDSSDY     SCYCD
     C                     MOVE SCYCD     MCYCD
     C                     ELSE
     C                     MOVE SCYCD     MCYCD
     C                     ENDIF
     C                     ENDIF
      *
      ** Yearly Amount Validation
      *
     C           SYAMT     IFEQ *BLANK
     C                     MOVE *ON       *IN24
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0019' ZAMSID
     C                     EXSR ZASNMS
     C                     ENDIF
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE SYAMT     ZFIELD
     C           15        SUB  A6NBDP    ZADIG
     C                     Z-ADDA6NBDP    ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ '1'
     C                     MOVE *ON       *IN24
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0020' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE ZFIELD    MYAMT
     C                     ENDIF
      *
      ** Narrative Code-DR validation
      *
     C           SNADR     IFEQ *BLANK
     C                     MOVE *ON       *IN25
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0021' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSNADR     USRCH
     C                     ENDIF
      *
     C                     CALL 'AONARRR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM SNADR     PTNAR   2
     C           SDNARR    PARM SDNARR    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN25
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0022' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP
     C                     MOVELDSSDY     SNADR
     C                     MOVE SNADR     MNADR
     C                     ELSE
     C                     MOVE SNADR     MNADR
     C                     ENDIF
     C                     ENDIF
      *
      ** Transaction Type-DR validation
      *
     C           STTYP     IFEQ *BLANK
     C                     MOVE *ON       *IN26
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0023' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSTTYP     USRCH
     C                     ENDIF
      *
     C                     CALL 'AORETRR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM STTYP     PTTRT   5
     C           SDRETR    PARM SDRETR    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN26
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0024' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP
     C                     MOVELDSSDY     STTYP
     C                     MOVE STTYP     MTTYP
     C                     ELSE
     C                     MOVE STTYP     MTTYP
     C                     ENDIF
     C                     ENDIF
      *
      ** Narrative Code-CR validation
      *
     C           SNACR     IFEQ *BLANK
     C                     MOVE *ON       *IN27
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0025' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSNACR     USRCH
     C                     ENDIF
      *
     C                     CALL 'AONARRR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM SNACR     PTNRC   2
     C           SDNARR    PARM SDNARR    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN27
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0026' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP
     C                     MOVELDSSDY     SNACR
     C                     MOVE SNACR     MNACR
     C                     ELSE
     C                     MOVE SNACR     MNACR
     C                     ENDIF
     C                     ENDIF
      *
      ** Customer Code Validation
      *
     C           SCUST     IFEQ *BLANK
     C                     MOVE *ON       *IN28
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0027' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSCUST     USRCH
     C                     ENDIF
      *
     C                     CLEARPTCUS
     C                     MOVELSCUST     PTCUS
     C                     CALL 'AOCUSTR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C                     PARM           PTCUS  10
     C                     PARM           PTKST   7
     C           SDCUST    PARM SDCUST    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN28
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0028' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP
     C                     MOVELDSSDY     SCUST
     C                     MOVE SCUST     MCUST
     C                     ELSE
     C                     MOVE SCUST     MCUST
     C                     ENDIF
     C                     ENDIF
      *
      ** A/c Code-CR Validation
      *
     C           SACOD     IFEQ *BLANK
     C                     MOVE *ON       *IN29
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0029' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVELSACOD     USRCH
     C                     ENDIF
      *
     C                     CALL 'AOACODR0'
     C                     PARM *BLANKS   PRTCD
     C                     PARM '*KEY   ' POPTN
     C**********           PARM SACOD     PTACD   4                       LUC140
     C                     PARM SACOD     PTACD  10                       LUC140
     C           SDACOD    PARM SDACOD    DSSDY
     C           PRTCD     IFNE *BLANKS
     C                     MOVE *ON       *IN29
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0030' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C           USRCH     IFEQ '?'
     C                     MOVE USRCH     UREAP
     C                     MOVELDSSDY     SACOD
     C                     MOVE SACOD     MACOD
     C                     ELSE
     C                     MOVE SACOD     MACOD
     C                     ENDIF
     C                     ENDIF
      *
      ** A/c Sequence Validation
      *
     C           SACSQ     IFEQ *BLANK
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0031' ZAMSID
     C                     EXSR ZASNMS
     C                     ENDIF
      *
     C                     MOVE *BLANKS   ZFIELD
     C                     MOVE SACSQ     ZFIELD
     C           2         SUB  0         ZADIG
     C                     Z-ADD0         ZADEC
     C                     EXSR ZALIGN
     C           *IN99     IFEQ '1'
     C                     MOVE *ON       *IN30
     C                     MOVE *ON       *IN40
     C                     MOVEL'XXX0032' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     MOVE SACSQ     UACSQ   1
     C                     CLEARMACSQ
     C           UACSQ     IFEQ *BLANK
     C                     MOVELSACSQ     UACSQ
     C                     MOVE UACSQ     MACSQ
     C                     ELSE
     C                     MOVE SACSQ     MACSQ
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDIF
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/ZASNMS
      *****************************************************************
      *                                                               *
      *  ZASNMS - Send message to the program message queue.          *
      *                                                               *
      *  Called By: #MVAL1 , #MVAL2                                   *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           ZASNMS    BEGSR
      *
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     ENDIF
      *
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file.
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
      *
     C           ZAEXIT    ENDSR
      *
      *****************************************************************
      /TITLE SR/#MCLER
      *****************************************************************
      *                                                               *
      *  #MCLER - Clear the message file.                             *
      *                                                               *
      *  Called By: MAIN                                              *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           #MCLER    BEGSR
      *
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      *
     C                     SETOF                     40
      *
     C                     ENDSR
      *
      *
      *****************************************************************
      /TITLE SR/#MEXIT
      *****************************************************************
      *                                                               *
      *  #MEXIT - End processing .                                    *
      *                                                               *
      *  Called By: MAIN                                              *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           #MEXIT    BEGSR
      *
     C                     MOVE *ON       *INLR
     C                     RETRN
      *
     C                     ENDSR
      *
      *****************************************************************
      /TITLE SR/*PSSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
     C           *PSSR     BEGSR
      *
     C           @RUN      IFEQ *BLANK
     C                     MOVE 'Y'       @RUN    1
     C                     MOVE *ON       *INU7
     C                     MOVE *ON       *INU8
     C                     MOVE *ON       *INLR
      *
     C                     DUMP
     C                     CALL 'DBERRCTL'
     C                     ENDIF
      *
     C                     ENDSR
      *
      ****************************************************************
      /TITLE SR/*INZSR
      *****************************************************************
      *                                                               *
      *  *INZSR - Auto Program Initialisation                         *
      *                                                               *
      *  Called By: Program                                           *
      *  Calls: None                                                  *
      *                                                               *
      *****************************************************************
      *
     C           *INZSR    BEGSR
      *
      ** Receive parameters from Calling Program
      *
     C           *ENTRY    PLIST
     C                     PARM           @SDC    2
     C                     PARM           @ACTD   1
     C                     PARM           @RCMD   1
      *
      ** Move Stamp Duty Code and ACtion Code to CMTTXT
      *
     C                     MOVE @SDC      USDC
     C                     MOVE @ACTD     UACTD
      *
     C                     ENDSR
      *
      *****************************************************************
     C/COPY ZSRSRC,ZALIGNZ2
      ** Right-align the amount
      *
     C/COPY ZSRSRC,ZEDITZ2
      ** Format the amount based on the number of decimal places
      *
      /EJECT
      ****************************************************************
     C/COPY ZSRSRC,ZTNLU1Z2
** CPY@   **      OBJECT COPYRIGHT
(C) Copyright Midas-Kapiti International Ltd. 1998
