     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Pooling Accounts Maintenance')                *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      ***SDJ101D*-*Pooling*Accounts Maintenance************************         JMI108
      *  XXJ101D - Pooling Accounts Maintenance                       *         JMI108
      *                                                               *
      *  Function:  This program maintains the Retail Accounts to be  *
      *             included in Pooling Process.  Pooling Scheme      *
      *             Type and Inter-Office Account Flag can be entered *
      *             same with the Bank's Internal Branch Code against *
      *             individual retail accounts.                       *
      *                                                               *
      ***(c)*Misys*International*Banking*Systems*Ltd.*2007*************         JMI108
      *  (c) Finastra International Limited 2018                      *         JMI108
      *                                                               *
      *  Last Amend No. JMI108             Date 31May18               *
      *  Prev Amend No. TFJ011  *CREATE    Date 22Jan07               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  JMI108 - Account Balance Pooling. Upgrade to FBM 2.1         *
      *  TFJ011 - Account Balance Pooling                             *
      *                                                               *
      *****************************************************************
     F***SDJ101D#CF  E                    WORKSTN                        UC     JMI108
     FXXJ101D#CF  E                    WORKSTN                        UC        JMI108
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      ** Midas SD Display Pooling Accounts
      *
     F***SDPLACV0IF  E           K        DISK                           UC     JMI108
     FXXPLACV0IF  E           K        DISK                           UC        JMI108
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      ** Midas SD Pooling Account Details Retrieval - Account Number
      *
     F***SDPLACV4IF  E           K        DISK                           UC     JMI108
     F*********** SDPLACD0                          KRENAMESDPLACD4             JMI108
     FXXPLACV4IF  E           K        DISK                           UC        JMI108
     F            XXPLACD0                          KRENAMEXXPLACD4             JMI108
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      ** Midas SD Pooling Account Details Retrieval - Retail Account
      *
     E********************************************************************
     E                    ZMNM   12  12  3
      ** Month Description for conversion of date
      *
     E                    CPY@    1   1 80               Misys Copyright array
      ** Copyright notice for inclusion in all programs
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IID0001      DS                            528
      * File information data structure
      *
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
     IA@CPY       DS
     I* Misys Copyright array
     I                                        1  80 CPY@
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  Display file mode
     I                                        1   1 P1DFMD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'value for field not valid'
      * *SFLSEL
     I                                        1   1 ZA0001
      * Message data for 'value for field not valid'
      * *SFLSEL
     I                                        1   1 ZA0002
      * Message data for 'value for field not valid'
      * *SFLSEL
     I                                        1   1 ZA0003
      *
      ** Data Structure for Account
     I            DS
     I                                        1  28 #1ACNT
     I                                        1   3 #1BRCA
     I                                        4   4 DASH1
     I                                        5  10 #1CNUM
     I                                       11  11 DASH2
     I                                       12  14 #1CCY
     I                                       15  15 DASH3
     I                                       16  25 #1ACOD
     I                                       26  26 DASH4
     I                                       27  28 #1ACSQ
      *
     I            DS
     I                                        1  24 #1ACCD
     I                                        1   3 #BRCA
     I                                        4   9 #CNUM
     I                                       10  12 #CCY
     I                                       13  22 #ACOD
     I                                       23  24 #ACSQ
      *
      ** Data Structure for Date
     I            DS
     I                                        1   7 #2LAMD
     I                                        1   2 #2DAY
     I                                        3   5 #2MON
     I                                        6   7 #2YEAR
      *
     I            DS
     I                                        1   60#2DATE
     I                                        1   2 #2DD
     I                                        3   4 #2MM
     I                                        5   6 #2YY
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1DFMD    PARM           WP0001  1        Display file mo
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   05                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * Position DBF file
     C           KPOS1     KLIST
     C                     KFLD           JBRCA            Branch
     C                     KFLD           JCNUM            Customer
     C                     KFLD           JCCY             Currency
     C                     KFLD           JACOD            Account Code
     C                     KFLD           JACSQ            Account Seq
      *
     C           KPOS2     KLIST
     C                     KFLD           JACNO            Account Number
      * Setup key
     C                     MOVEL#2BRCA    JBRCA            Branch
     C                     MOVEL#2CNUM    JCNUM            Customer
     C                     MOVEL#2CCY     JCCY             Currency
     C                     MOVEL#2ACOD    JACOD            Account Code
     C                     MOVEL#2ACSQ    JACSQ            Account Seq
     C                     MOVEL#2ACNO    JACNO            Account Number
      *
     C           #2ACNO    IFEQ *BLANKS
     C********** KPOS1     SETLLSDPLACV0                                        JMI108
     C**********           READ SDPLACV0               8782*82=EOF              JMI108
     C           KPOS1     SETLLXXPLACV0                                        JMI108
     C                     READ XXPLACV0               8782*82=EOF              JMI108
     C                     ELSE
     C********** KPOS2     SETLLSDPLACV4                                        JMI108
     C**********           READ SDPLACV4               8782*82=EOF              JMI108
     C           KPOS2     SETLLXXPLACV4                                        JMI108
     C                     READ XXPLACV4               8782*82=EOF              JMI108
     C                     ENDIF
      *
      * Save previous selector values
     C           *LIKE     DEFN #2RECI    WZRECI
     C                     MOVEL#2RECI    WZRECI           RECI
     C           *LIKE     DEFN #2LCD     WZLCD
     C                     MOVEL#2LCD     WZLCD            Last Change Date
     C           *LIKE     DEFN #2TYLC    WZTYLC
     C                     MOVEL#2TYLC    WZTYLC           Last Change Type
     C           *LIKE     DEFN #2LTME    WZLTME
     C                     MOVEL#2LTME    WZLTME           Last Change  Time
     C           *LIKE     DEFN #2BRCA    WZBRCA
     C                     MOVEL#2BRCA    WZBRCA           Branch
     C           *LIKE     DEFN #2CNUM    WZCNUM
     C                     MOVEL#2CNUM    WZCNUM           Customer
     C           *LIKE     DEFN #2CCY     WZCCY
     C                     MOVEL#2CCY     WZCCY            Currency
     C           *LIKE     DEFN #2ACOD    WZACOD
     C                     MOVEL#2ACOD    WZACOD           Account Code
     C           *LIKE     DEFN #2ACSQ    WZACSQ
     C                     MOVEL#2ACSQ    WZACSQ           Account Sequence
     C           *LIKE     DEFN #2ACNO    WZACNO
     C                     MOVEL#2ACNO    WZACNO           Account Number
     C           *LIKE     DEFN #2ANAM    WZANAM
     C                     MOVEL#2ANAM    WZANAM           Account Name
     C           *LIKE     DEFN #2CHMA    WZCHMA
     C                     MOVEL#2CHMA    WZCHMA           Schema Actual
     C           *LIKE     DEFN #2CHMS    WZCHMS
     C                     MOVEL#2CHMS    WZCHMS           Schema Sweep
     C           *LIKE     DEFN #2CHMT    WZCHMT
     C                     MOVEL#2CHMT    WZCHMT           Schema Transfer
     C           *LIKE     DEFN #2CHMI    WZCHMI
     C                     MOVEL#2CHMI    WZCHMI           Schema Inter-Office
     C           *LIKE     DEFN #2BRCH    WZBRCH
     C                     MOVEL#2BRCH    WZBRCH           Internal Branch
     C           *LIKE     DEFN #2LAMD    WZLAMD
     C                     MOVEL#2LAMD    WZLAMD           Last Amend Date
      * Translate search mask for text field
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2ANAM    WQANAM           Account Name
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 25        WQA5N   50
     C                     PARM #2ANAM    WQANAM           Account Name
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C           #2ACNO    IFEQ *BLANKS
     C   27                DO
     C**N82*************** READPSDPLACD0                 90*                    JMI108
     C**N82*************** READ SDPLACD0                 90*                    JMI108
     C  N82                READPXXPLACD0                 90*                    JMI108
     C  N82                READ XXPLACD0                 90*                    JMI108
     C                     END
     C                     ELSE
     C   27                DO
     C**N82*************** READPSDPLACD4                 90*                    JMI108
     C**N82*************** READ SDPLACD4                 90*                    JMI108
     C  N82                READPXXPLACD4                 90*                    JMI108
     C  N82                READ XXPLACD4                 90*                    JMI108
     C                     END
     C                     ENDIF
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,44
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2RECI    IFNE *BLANK                     RECI
     C           JRECI     CABNE#2RECI    BB020            RECI
     C                     END
     C           #2LCD     IFNE *ZERO                      Last Change Date
     C           JLCD      CABNE#2LCD     BB020            Last Change Date
     C                     END
     C           #2TYLC    IFNE *BLANK                     Last Change Type
     C           JTYLC     CABNE#2TYLC    BB020            Last Change Type
     C                     END
     C           #2LTME    IFNE *ZERO                      Last Change Time
     C           JLTME     CABNE#2LTME    BB020            Last Change Time
     C                     END
     C           #2ANAM    IFNE *BLANK                     Account Name
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           JANAM            Account Name
      * Length
     C                     PARM 20        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQANAM
      * Length
     C                     PARM 20        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2BRCA    IFNE *BLANK                     Branch
     C           JBRCA     CABNE#2BRCA    BB020            Branch
     C                     END
     C           #2CNUM    IFNE *BLANK                     Customer
     C******************** MOVE #2CNUM    WCNUM   60       JMI108
     C                     MOVE #2CNUM    WCNUM   6        JMI108
     C           JCNUM     CABNEWCNUM     BB020            Customer
     C                     END
     C           #2CCY     IFNE *BLANK                     Currency
     C           JCCY      CABNE#2CCY     BB020            Currency
     C                     END
     C           #2ACOD    IFNE *BLANK                     Acount Code
     C                     MOVE #2ACOD    WACOD  100
     C           JACOD     CABNEWACOD     BB020            Acount Code
     C                     END
     C           #2ACSQ    IFNE *BLANK                     Acount Seq
     C                     MOVE #2ACSQ    WACSQ   20
     C           JACSQ     CABNEWACSQ     BB020            Acount Seq
     C                     END
     C           #2CHMA    IFNE *BLANK                     Schema Actual
     C           JSCHMA    CABNE#2CHMA    BB020            Schema Actual
     C                     END
     C           #2CHMS    IFNE *BLANK                     Schema Sweep
     C           JSCHMS    CABNE#2CHMS    BB020            Schema Sweep
     C                     END
     C           #2CHMT    IFNE *BLANK                     Schema Transfer
     C           JSCHMT    CABNE#2CHMT    BB020            Schema Transfer
     C                     END
     C           #2CHMI    IFNE *BLANK                     Schema Inter-Office
     C           JSCHMI    CABNE#2CHMI    BB020            Schema Inter-Office
     C                     END
     C           #2BRCH    IFNE *BLANK                     Internal Branch
     C           JBRCH     CABNE#2BRCH    BB020            Internal Branch
     C                     END
     C           #2LAMD    IFNE *BLANK                     Last Amend Date
     C                     Z-ADD1         X       20
     C                     Z-ADD0         WLCD    50
     C           #2MON     LOKUPZMNM,X                   90
     C           *IN90     IFEQ '1'
     C                     MOVE #2DAY     #2DD
     C                     MOVE X         #2MM
     C                     MOVE #2YEAR    #2YY
     C                     CALL 'ZDATE1'               90  Check Screen Da
     C                     PARM W0RTN     WQ0012  7        *Return code
     C                     PARM #2DATE    WQ0013  60       Work Screen Dat
     C                     PARM 'D'       WQ0014  1        Date format fla
     C           WLCD      PARM *ZERO     WQ0015  50       Work File Date
     C                     ENDIF
     C           JLCD      CABNEWLCD      BB020            Last Amend Date
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           #2ACNO    IFEQ *BLANKS
     C******************** READ SDPLACV0                 82*82=EOF              JMI108
     C                     READ XXPLACV0                 82*82=EOF              JMI108
     C                     ELSE
     C******************** READ SDPLACV4                 82*82=EOF              JMI108
     C                     READ XXPLACV4                 82*82=EOF              JMI108
     C                     ENDIF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
      * Change of position specified
     C           WZBRCA    CASNE#2BRCA    FBRQRL
     C           WZCNUM    CASNE#2CNUM    FBRQRL
     C           WZCCY     CASNE#2CCY     FBRQRL
     C           WZACOD    CASNE#2ACOD    FBRQRL
     C           WZACSQ    CASNE#2ACSQ    FBRQRL
     C           WZACNO    CASNE#2ACNO    FBRQRL
     C           WZANAM    CASNE#2ANAM    FBRQRL
     C           WZCHMA    CASNE#2CHMA    FBRQRL
     C           WZCHMS    CASNE#2CHMS    FBRQRL
     C           WZCHMT    CASNE#2CHMT    FBRQRL
     C           WZCHMI    CASNE#2CHMI    FBRQRL
     C           WZBRCH    CASNE#2BRCH    FBRQRL
     C           WZLAMD    CASNE#2LAMD    FBRQRL
     C                     END
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: Process command keys
      * CASE: PAR.Display file mode is Maintenance mode
     C           P1DFMD    IFEQ 'M'                        *IF
      * CASE: CTL.*CMD key is *Go to 'Add' mode
     C           *IN09     IFEQ '1'                        *IF
      *
      * Account Code Edit - Account Codes  *
     C******************** CALL 'SDJ101R'              90  Account              JMI108
     C                     CALL 'XXJ101R'              90  Account              JMI108
     C                     PARM *BLANK    W0RTN   7
     C                     PARM *BLANK    WQ0001 24        Account
     C                     PARM 'I'       WQ0002  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C******************** MOVEL'SDJ101R' W0CLPG                                JMI108
     C                     MOVEL'XXJ101R' W0CLPG                                JMI108
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is *Go to 'Add' mode
     C           *IN09     IFEQ '1'                        *IF
      * Send message 'Function key not allowed'
     C                     MOVEL'USR0533' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,44
     C                     SETOF                     98    *
      * USER: Process subfile record (Pre-confirm)
      * Enquire processing
      * CASE: RCD.*SFLSEL is *Enquire
     C           #1SEL     IFEQ 'E'                        *IF
      *
     C                     EXSR SRACTN
     C           @ERR      IFNE *ZEROS
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
     C                     GOTO DCEXIT                     *QUIT
     C                     ENDIF
      *
     C                     MOVEL#1BRCA    #BRCA
     C                     MOVEL#1CNUM    #CNUM
     C                     MOVEL#1CCY     #CCY
     C                     MOVEL#1ACOD    #ACOD
     C                     MOVEL#1ACSQ    #ACSQ
      *
      * Account Code display - Account Codes  *
     C******************** CALL 'SDJ101R'              90  Account              JMI108
     C                     CALL 'XXJ101R'              90  Account              JMI108
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1ACCD    WQ0003 24        Account
     C                     PARM 'E'       WQ0002  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C******************** MOVEL'SDJ101R' W0CLPG                                JMI108
     C                     MOVEL'XXJ101R' W0CLPG                                JMI108
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Maintenance processing
      * CASE: PAR.Display file mode is Maintenance mode
     C           P1DFMD    IFEQ 'M'                        *IF
      * Amend processing
      * CASE: RCD.*SFLSEL is *Amend
     C           #1SEL     IFEQ 'A'                        *IF
      *
     C                     EXSR SRACTN
     C           @ERR      IFNE *ZEROS
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
     C                     GOTO DCEXIT                     *QUIT
     C                     ENDIF
      *
     C                     MOVEL#1BRCA    #BRCA
     C                     MOVEL#1CNUM    #CNUM
     C                     MOVEL#1CCY     #CCY
     C                     MOVEL#1ACOD    #ACOD
     C                     MOVEL#1ACSQ    #ACSQ
      *
      * Account Edit - Account *
     C******************** CALL 'SDJ101R'              90  Account              JMI108
     C                     CALL 'XXJ101R'              90  Account              JMI108
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1ACCD    WQ0004 24        Account
     C                     PARM 'A'       WQ0005  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C******************** MOVEL'SDJ101R' W0CLPG                                JMI108
     C                     MOVEL'XXJ101R' W0CLPG                                JMI108
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Delete processing
      * CASE: RCD.*SFLSEL is *Delete
     C           #1SEL     IFEQ 'D'                        *IF
      *
      * Deletion processing (only allowed if ssf is set off)
      * CASE: WRK.Allow Manual Deletion is No
     C           WUMDEL    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'value for field not valid'
     C                     MOVEL'USR0553' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     MOVEL'Y'       WUDELT           Delete allowed
      * Deletion allowed
      * CASE: WRK.Delete allowed is YES
     C           WUDELT    IFEQ 'Y'                        *IF
      *
     C                     EXSR SRACTN
     C           @ERR      IFNE *ZEROS
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
     C                     GOTO DCEXIT                     *QUIT
     C                     ENDIF
      *
     C                     MOVEL#1BRCA    #BRCA
     C                     MOVEL#1CNUM    #CNUM
     C                     MOVEL#1CCY     #CCY
     C                     MOVEL#1ACOD    #ACOD
     C                     MOVEL#1ACSQ    #ACSQ
      *
      * Account Code Edit - Account Codes  *
     C******************** CALL 'SDJ101R'              90  Account              JMI108
     C                     CALL 'XXJ101R'              90  Account              JMI108
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1ACCD    WQ0006 24        Account Code
     C                     PARM 'D'       WQ0007  1        Action Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C******************** MOVEL'SDJ101R' W0CLPG                                JMI108
     C                     MOVEL'XXJ101R' W0CLPG                                JMI108
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'Y'       WUDELT           Delete allowed
     C                     END                             *FI
      *
     C                     END                             *FI
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Amend processing
      * CASE: RCD.*SFLSEL is *Amend
     C           #1SEL     IFEQ 'A'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0002           *SFLSEL
      * Send message 'value for field not valid'
     C                     MOVEL'USR0553' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      * Delete processing
      * CASE: RCD.*SFLSEL is *Delete
     C           #1SEL     IFEQ 'D'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0003           *SFLSEL
      * Send message 'value for field not valid'
     C                     MOVEL'USR0553' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9844  *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      **Move*SDPLACV4*fields*to*subfile*******************************          JMI108
      * Move XXPLACV4 fields to subfile                                         JMI108
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELJRECI     #1RECI           RECI
     C                     MOVELJLCD      #1LCD            Last Change Date
     C                     MOVELJTYLC     #1TYLC           Last Change Type
     C                     MOVELJLTME     #1LTME           Last Change Time
     C                     MOVELJBRCA     #1BRCA           Branch
     C                     MOVELJCNUM     #1CNUM           Customer
     C                     MOVELJCCY      #1CCY            Currency
     C                     MOVELJACOD     #1ACOD           Account Code
     C                     MOVELJACSQ     #1ACSQ           Account Seq
     C                     MOVELJACNO     #1ACNO           Account Number
     C                     MOVELJANAM     #1ANAM           Account Name
     C                     MOVELJSCHMA    #1CHMA           Schema Actual
     C                     MOVELJSCHMS    #1CHMS           Schema Sweep
     C                     MOVELJSCHMT    #1CHMT           Schema Transfer
     C                     MOVELJSCHMI    #1CHMI           Schema Inter-Office
     C                     MOVELJBRCH     #1BRCH           Internal Branch
      *
      ** Convert Last Amend Date to DDMMMYY Format
      *
     C                     CALL 'ZDATE2'               90
     C                     PARM JLCD      WQ0008  50
     C                     PARM WUDFF     WQ0009  1
     C           WUWCDT    PARM *ZERO     WQ0010  60
     C           WUWADT    PARM *BLANK    WQ0011  7
      *
     C                     MOVELWUWADT    #1LAMD           Last Amend Date
     C                     MOVEL'-'       DASH1
     C                     MOVEL'-'       DASH2
     C                     MOVEL'-'       DASH3
     C                     MOVEL'-'       DASH4
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #2RECI           RECI
     C                     MOVEL*BLANK    #2LCD            Last Change Date
     C                     MOVEL*BLANK    #2TYLC           Last Change Type
     C                     MOVEL*BLANK    #2LTME           Last Change Time
     C                     MOVEL*BLANK    #2BRCA           Branch
     C                     MOVEL*BLANK    #2CNUM           Customer
     C                     MOVEL*BLANK    #2CCY            Currency
     C                     MOVEL*BLANK    #2ACOD           Account Code
     C                     MOVEL*BLANK    #2ACSQ           Account Sequence
     C                     MOVEL*BLANK    #2ACNO           Account Number
     C                     MOVEL*BLANK    #2ANAM           Account Name
     C                     MOVEL*BLANK    #2CHMA           Schema Actual
     C                     MOVEL*BLANK    #2CHMS           Schema Sweep
     C                     MOVEL*BLANK    #2CHMT           Schema Transfer
     C                     MOVEL*BLANK    #2CHMI           Schema Inter-Office
     C                     MOVEL*BLANK    #2BRCH           Internal Branch
     C                     MOVEL*BLANK    #2LAMD           Last Amend Date
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         SRACTN    BEGSR
      *================================================================
      * Validate Action Code for User
      *================================================================
      *
      ** For single branch system, check if user is authorised to the
      ** action
      *
     C                     Z-ADD*ZEROS    @ERR
     C           WUMBIN    IFEQ 'N'
     C                     CALL 'ZVACTU'
     C                     PARM #1SEL     @ZACTN
     C                     PARM           @ERR
     C           @ERR      IFNE *ZEROS
     C                     MOVEL'USR8636' ZAMSID
     C                     ENDIF
      *
      ** For multibranching system, branch code must be valid for
      ** the user
     C                     ELSE
     C                     CALL 'ZVACTBU'
     C                     PARM #1SEL     @ZACTN  1
     C                     PARM #1BRCA    @ZBR    3
     C                     PARM           @ERR    10
      * REMOVE LATER HPL
     C                     Z-ADD0         @ERR
      *
     C           @ERR      IFEQ 1
     C                     MOVEL'USR8637' ZAMSID
     C                     ENDIF
     C           @ERR      IFEQ 2
     C                     MOVEL'USR8638' ZAMSID
     C                     ENDIF
     C                     ENDIF
      *
      *================================================================
     CSR         ACEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      *
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
      *
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Allow Manual Deletion
     C                     MOVEL*BLANK    WUMDEL  1
      * Define work field Delete allowed
     C                     MOVEL*BLANK    WUDELT  1
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Date Result MMDDYY Format
     C                     Z-ADD*ZERO     WUWCDT  60
      * Define work field Date Result DDMMMYY Format
     C                     MOVEL*BLANK    WUWADT  7
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C******************** OPEN SDJ101D#                                        JMI108
     C******************** OPEN SDPLACV0                                        JMI108
     C******************** OPEN SDPLACV4                                        JMI108
     C                     OPEN XXJ101D#                                        JMI108
     C                     OPEN XXPLACV0                                        JMI108
     C                     OPEN XXPLACV4                                        JMI108
     C                     MOVEL'N'       W0PMT   1
     C                     Z-ADD14        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD500       W0SLM   50
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Get Rundate - Rundate  *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      *
      * If ssf is on - deletion is not allowed
      * CASE: WRK.Set Up Complete is Yes
     C           WUSUC     IFEQ 'Y'                        *IF
     C                     MOVEL'N'       WUMDEL           Allow Manual De
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WUMDEL           Allow Manual De
     C                     END                             *FI
      *
      * Set-up Dsp. file footer - Standard Functions  *
      * MOVE THE CORRECT TEXT INTO THE DISPLAY FILE'S FOOTER DEPENDING ON THE
      * MODE
      *
     C                     MOVEL'SDUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
     C           P1DFMD    IFEQ 'E'
      * Setup footer text:
      * E=Enquire   F3=Main Menu   F5=Refresh
     C                     MOVEL'USR3341' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C           P1DFMD    IFEQ 'M'
     C                     MOVE WUMDEL    WUMDEL  1
     C           WUMDEL    IFNE 'N'
      * Setup footer text:
      * A=Amend  D=Delete  E=Enquire  F3=Main Menu  F5=Refresh
      * F9=Go to 'Add'
     C                     MOVEL'USR3334' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C           WUMDEL    IFEQ 'N'
      * Setup footer text:
      * A=Amend  E=Enquire  F3=Main Menu  F5=Refresh  F9=Go to 'Add' Mode
     C                     MOVEL'USR3335' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C                     END
      *
      * Set up Display File Title - Pooling Accounts Maintenance *
      ********************************************************************
      *                                                                  *
      *     Set up Title for Display File according to Mode              *
      *                                                                  *
      ********************************************************************
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
     C           P1DFMD    IFEQ 'M'
      * Setup footer text:
      * Pooling Accounts Maintenance
     C                     MOVEL'XXX1121' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##URPT
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     ELSE
      * Setup footer text:
      * Pooling Accounts Enquiry
     C                     MOVEL'XXX1122' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    WQ0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    WQ0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    WQ0288 80        Message Text
     C                     MOVELWUMTXT    ##URPT
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     Z-ADD99999     W0SLM            *Scan limit
      *
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      ** Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *================================================================
     CSR                   ENDSR
      *================================================================
**   ZMNM - MONTHS SHORT NAMES
JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC
** CPY@
(c) Finastra International Limited 2018
