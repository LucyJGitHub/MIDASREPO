     H        1   Y
      *****************************************************************
/*STD *  RPGBASE                                                      *
/*EXI *  TEXT('Midas SD Pooling Accounts Maintenance')                *
      *****************************************************************
      *                                                               *
      *  Midas - Standing Data Module                                 *
      *                                                               *
      ***SDJ101R*-*Pooling*Accounts Maintenance************************         EML110
      *  XXJ101R - Pooling Accounts Maintenance                       *         EML110
      *                                                               *
      *  Function:  This program maintains the Retail Accounts to be  *
      *             included in Pooling Process.  Pooling Scheme      *
      *             Type and Inter-Office Account Flag can be entered *
      *             same with the Bank's Internal Branch Code against *
      *             individual retail accounts.                       *
      *                                                               *
      ***(c)*Misys*International*Banking*Systems*Ltd.*2007*************         EML110
      *  (c) Finastra International Limited 2018                      *         EML110
      *                                                               *
      *  Last Amend No. EML110             Date 20Jan20               *
      *  Prev Amend No. TFJ011  (CHG001)   Date 12Aug05               *
      *                 TFJ011  *CREATE    Date 11Mar05               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  EML110 - Account Balance Pooling. Upgrade to FBM 2.1.        *
      *  TFJ011 - (CHG001) Cannot delete Closed Accounts              *
      *  TFJ011 - Account Balance Pooling                             *
      *                                                               *
      *****************************************************************
     F***SDJ101R#CF  E                    WORKSTN                        UC     EML110
     FXXJ101R#CF  E                    WORKSTN                        UC  EML110
     F                                              KINFDS INFDS#
     F                                              KINFSR *PSSR
      ** Midas SD Display Pooling Accounts
      *
     F***SDPLACV0IF  E           K        DISK                           UC     EML110
     FXXPLACV0IF  E           K        DISK                           UC  EML110
     F                                              KINFDS INFDS1
     F                                              KINFSR *PSSR
      ** Midas SD Pooling Account Details Retrieval
      *
     FACCBR   IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      ** Midas GL Accounts by branch
      *
     FACNUM   IF  E           K        DISK                           UC
     F            ACCNTABF                          KRENAMEACCNTAB
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      ** Midas RE Account numbers files
      *
     F***SDPLACV1UF  E           K        DISK                      A    UC     EML110
     F***            SDPLACD0                          KRENAMESDPLACD1    EML110
     FXXPLACV1UF  E           K        DISK                      A    UC        EML110
     F            XXPLACD0                          KRENAMEXXPLACD1       EML110
     F                                              KCOMIT
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      ** Midas SD Pooling Account Details Update
      *
     F***SDJ101PPO   E           K        DISK                      A    UC     EML110
     FXXJ101PPO   E           K        DISK                      A    UC  EML110
     F                                              KINFSR *PSSR
      ** Midas SD Pooling Accounts Details
      *
     E* Description     : Copyright notice for inclusion in all programs
     E*
     E********************************************************************
     E                    CPY@    1   1 80               Misys Copyright array
      ** Description     : Copyright notice for inclusion in all programs
      *
     IDATA        DS                           1024
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I***@1DBRC    E DSSDPLACV1                                           EML110
     I@1DBRC    E DSXXPLACV1                                              EML110
      * UPD : Midas SD Pooling Account update
      * Current/previous master file format fields for change control
      *
     I***#1DBRC      DS                             59                    EML110
     I#1DBRC      DS                             61                       EML110
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     I            DS
     I***********************************     1  58 DS101B                EML110
     I                                        1  60 DS101B                EML110
     I                                        1   3 BRCA@1
     I*********************************** P   4   70CNUM@1                EML110
     I***********************************     8  10 CURR@1                EML110
     I*********************************** P  11  160ACOD@1                EML110
     I*********************************** P  17  180ACSQ@1                EML110
     I*********************************** P  19  240ACNO@1                EML110
     I***********************************    25  44 ANAM@1                EML110
     I***********************************    45  45 CHMA@1                EML110
     I***********************************    46  46 CHMS@1                EML110
     I***********************************    47  47 CHMT@1                EML110
     I***********************************    48  48 CHMI@1                EML110
     I***********************************    49  51 IBRC@1                EML110
     I***********************************    52  52 TYLC@1                EML110
     I***********************************    53  58 TIME@1                EML110
     I                                        4   9 CNUM@1                EML110
     I                                       10  12 CURR@1                EML110
     I                                    P  13  180ACOD@1                EML110
     I                                    P  19  200ACSQ@1                EML110
     I                                    P  21  260ACNO@1                EML110
     I                                       27  46 ANAM@1                EML110
     I                                       47  47 CHMA@1                EML110
     I                                       48  48 CHMS@1                EML110
     I                                       49  49 CHMT@1                EML110
     I                                       50  50 CHMI@1                EML110
     I                                       51  53 IBRC@1                EML110
     I                                       54  54 TYLC@1                EML110
     I                                       55  60 TIME@1                EML110
      *
     I            DS
     I***********************************     1  58 DS101A                EML110
     I                                        1  60 DS101A                EML110
     I                                        1   3 BRCA#1
     I*********************************** P   4   70CNUM#1                EML110
     I***********************************     8  10 CURR#1                EML110
     I*********************************** P  11  160ACOD#1                EML110
     I*********************************** P  17  180ACSQ#1                EML110
     I*********************************** P  19  240ACNO#1                EML110
     I***********************************    25  44 ANAM#1                EML110
     I***********************************    45  45 CHMA#1                EML110
     I***********************************    46  46 CHMS#1                EML110
     I***********************************    47  47 CHMT#1                EML110
     I***********************************    48  48 CHMI#1                EML110
     I***********************************    49  51 IBRC#1                EML110
     I***********************************    52  52 TYLC#1                EML110
     I***********************************    53  58 TIME#1                EML110
     I                                        4   9 CNUM#1                EML110
     I                                       10  12 CURR#1                EML110
     I                                    P  13  180ACOD#1                EML110
     I                                    P  19  200ACSQ#1                EML110
     I                                    P  21  260ACNO#1                EML110
     I                                       27  46 ANAM#1                EML110
     I                                       47  47 CHMA#1                EML110
     I                                       48  48 CHMS#1                EML110
     I                                       49  49 CHMT#1                EML110
     I                                       50  50 CHMI#1                EML110
     I                                       51  53 IBRC#1                EML110
     I                                       54  54 TYLC#1                EML110
     I                                       55  60 TIME#1                EML110
      *
      * Stored master file format fields
      *
      *-------------------------------------------------------------------
      * Outward parameters
      *
     I*****YERDCS      DS                             59                  EML110
     IYERDCS      DS                             59                       EML110
     IA@CPY       DS
     I* Misys Copyright array
     I                                        1  80 CPY@
     IRUNDAT      DS
     I                                        1   7 MRDT
     I                                    P   8  100RDNB
     I                                       11  11 SUC
     I                                       12  12 DFF
     I                                       13  13 MBIN
      *
      ** Local Data Area
     ILDA         DS                            256
     I                                      134 141 DBFILE
     I                                      142 170 DBKEY
     I                                      171 180 DBPGM
     I                                      181 1830DBASE
      *
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Pooling Accounts
      * I : MAP Account
     I                                        1  24 P1ACCD
     IP2PARM      DS
      * I :  Action Code
     I                                        1   1 P2ANCD
     I            DS
     I                                        1 132 ZAMSDA
     I                                        1  24 ZA0001
      * Message data for 'Must be a valid Account'
      * Account
     I                                        1  24 ZA0002
      * Message data for 'Pooling Account already exists'
      * Account
     I                                        1  24 ZA0003
      * Message data for 'Pooling Account  Cannot be ?'
      * Account
     I                                        1  24 ZA0004
      * Message data for 'Asterisk invalid'
      * Account
     I                                        1  10 ZA0005
      * Message data for 'Scheme must have at least one entry'
      * Scheme
     I                                        1   1 ZA0006
      * Message data for 'Scheme Actual Pooling must be "A"'
      * Scheme Actual
     I                                        1   1 ZA0007
      * Message data for 'Scheme Sweep must be "S"'
      * Scheme Sweep
     I                                        1   1 ZA0008
      * Message data for 'Scheme Transfer Account must be "T"'
      * Scheme Transfer
     I                                        1   1 ZA0009
      * Message data for 'Scheme Inter-office must be "I"'
      * Scheme Inter-office
     I                                        1   3 ZA0010
      * Message data for 'Internal Branch Req'
      * Internal Branch
      *
      ** Data Structure for Account
     I            DS
     I                                        1  24 ACKEY
     I                                        4  24 ACKEY1
     I                                        1   3 WWBRCA
     I**************************************  4   90WWCNUM                EML110
     I                                        4   9 WWCNUM                EML110
     I                                       10  12 WWCCY
     I                                       13  220WWACOD
     I                                       23  240WWACSQ
     I                                        1  10 RETKY
     I                                       11  24 ACCKY
     I            DS
     I                                        1  100WWRKEY
      *
      ** Data Structure for Scheme
     I            DS
     I                                        1   4 #1SCHM
     I                                        1   1 #1CHMA
     I                                        2   2 #1CHMS
     I                                        3   3 #1CHMT
     I                                        4   4 #1CHMI
      *
      ** Data Structure for Account
     I            DS
     I                                        1  28 #1ACNT
     I                                        1   3 #1BRCA
     I                                        4   4 DASH1
     I                                        5  10 #1CNUM
     I                                       11  11 DASH2
     I                                       12  14 #1CCY
     I                                       15  15 DASH3
     I                                       16  25 #1ACOD
     I                                       26  26 DASH4
     I                                       27  28 #1ACSQ
      *
      ** Data Structures for use with Access Objects
      *
     ISDBRCH    E DSSDBRCHPD
      *  External DS for Branch Details
     ISDMMOD    E DSSDMMODPD
      *  External DS for Midas Modules Details
     I***SDPICD    E DSSDPICDPP                                           EML110
     IXXPICD    E DSXXPICDPP                                              EML110
      *  External DS for Pooling ICD Details
     I              JPITM10                         JITM10
     I              JPITM11                         JITM11
     I              JPITM12                         JITM12
     I              JPITM13                         JITM13
     I              JPITM14                         JITM14
     I              JPITM15                         JITM15
     I              JPITM16                         JITM16
     I              JPITM17                         JITM17
     I              JPITM18                         JITM18
     I              JPITM19                         JITM19
     I              JPITM20                         JITM20
     I              JPOTM10                         JOTM10
     I              JPOTM11                         JOTM11
     I              JPOTM12                         JOTM12
     I              JPOTM13                         JOTM13
     I              JPOTM14                         JOTM14
     I              JPOTM15                         JOTM15
     I              JPOTM16                         JOTM16
     I              JPOTM17                         JOTM17
     I              JPOTM18                         JOTM18
     I              JPOTM19                         JOTM19
     I              JPOTM20                         JOTM20
     IDSFDY     E DSDSFDY
      *  First DS for Access Programs, Short Data Structure
     IDSSDY     E DSDSSDY
      *  Second DS for Access Programs, Long Data Structure
     I***DS101     E DSSDJ101PP                                                 EML110
     IDS101     E DSXXJ101PP                                                    EML110
      *  External DS for Pooling Account Details
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1ACCD    PARM           WP0001 24        Pooling Account
     C           P2ANCD    PARM           WP0002  1        Action Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1ACCD    IFEQ *BLANK                     Pooling Account
      * One or more key fields is blank
     C           *IN05     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   12                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   05                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
      *
      * Check for existing record
     C********** WWACKB    CHAINSDPLACV0             9091  *                    EML110
     C           WWACKB    CHAINXXPLACV0             9091  *                    EML110
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * Verify record existence against program mode
     C           W0PMD     IFNE 'ADD'
      * If record does not exist, error
     C           *IN90     IFEQ '1'
     C                     SETON                     9931  *
      * Send message 'Account Not Found'
     C                     MOVEL'XXX1126' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      *
      * USER: Initialize detail screen (existing record)
      * Set-up DTL Screen Footer - Standard Functions  *
      *
      *  DETAIL LINE COMMAND KEY TEXT
      *
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
      *  If Action Code is Delete :
      *
     C           P2ANCD    IFEQ 'D'
     C                     SETON                     7071
      * Setup footer text:
      * F10=Delete   F12=Previous
     C                     MOVEL'XXX1138' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      *  If Action Code is Insert :
      *
     C           P2ANCD    IFEQ 'I'
      * Setup footer text:
      *  F3= Initial Screen   F12=Previous
     C                     MOVEL'XXX1141' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      *  If Action Code is Amend :
      *
     C           P2ANCD    IFEQ 'A'
     C           P2ANCD    OREQ 'E'
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C*
     C           *IN90     IFEQ '1'
     C* Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     MOVEL'N'       WUDELA           Deletion Allowe
      * CASE: WRK.Set Up Complete is No
     C           WUSUC     IFEQ 'N'                        *IF
     C                     MOVEL'Y'       WUDELA           Deletion Allowe
     C                     END                             *FI
      *
     C                     END
      *
     C                     ELSE
      * If record already exists, error
     C           *IN90     IFEQ '0'
     C                     SETON                     9931  *
      * Send message 'Pooling Account already exists'
     C                     MOVEL'XXX1124' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
      * USER: Initialize detail screen (new record)
      * Set-up DTL Screen Footer - Standard Functions  *
      *
      *  DETAIL LINE COMMAND KEY TEXT
      *
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
      *  If Action Code is Delete :
      *
     C           P2ANCD    IFEQ 'D'
     C                     SETON                     7071
      * Setup footer text:
      * F10=Delete   F12=Previous
     C                     MOVEL'XXX1138' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
     C*
     C*  If Action Code is Insert :
     C*
     C           P2ANCD    IFEQ 'I'
      * Setup footer text:
      *  F3= Initial Screen   F12=Previous
     C                     MOVEL'XXX1141' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      *  If Action Code is Amend :
      *
     C           P2ANCD    IFEQ 'A'
     C           P2ANCD    OREQ 'E'
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
      * Select existing record
     C                     EXSR VACKRL
     C                     END
      *
     C           WWACKB    KLIST
     C                     KFLD           WWBRCA
     C                     KFLD           WWCNUM
     C                     KFLD           WWCCY
     C                     KFLD           WWACOD
     C                     KFLD           WWACSQ
      *
     C                     MOVEL*BLANKS   ACKEY
     C                     MOVEL#1ACCD    ACKEY
      *
      ** IF Positions 11 TO 15 Blank then it is a Retail Number
      ** otherwise it is a Midas Number
      *
     C           ACCKY     IFNE *BLANKS
     C           WWACKB    CHAINACCBR                81
     C                     ELSE
     C                     MOVE RETKY     WWRKEY
      *
     C           WWRKEY    CHAINACNUM                81
     C                     MOVE CNUM      WWCNUM
     C                     MOVE CCY       WWCCY
     C                     MOVE ACOD      WWACOD
     C                     MOVE ACSQ      WWACSQ
     C                     MOVE BRCA      WWBRCA
      *
     C                     END
      *
      ** Must be a valid Account
     C           P2ANCD    IFNE 'D'                                                           CHG001
     C           *IN81     IFEQ '1'                        *IF
     C           *IN81     OREQ '0'
     C           ATYP      ANDNE'R'
     C           ATYP      ANDNE'N'
     C           *IN81     OREQ '0'
     C           RECI      ANDNE'D'
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0001           Pooling Account
      * Send message 'Must be a valid Account'
     C                     MOVEL'XXX1125' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI                                CHG001
      *
      ** Populate header during Insert
      *
     C           P2ANCD    IFEQ 'I'                        *IF
     C           *IN81     ANDEQ'0'
     C                     MOVE '-'       DASH1
     C                     MOVE '-'       DASH2
     C                     MOVE '-'       DASH3
     C                     MOVE '-'       DASH4
     C                     MOVELWWBRCA    #1BRCA           Branch
     C                     MOVELWWCNUM    #1CNUM           Customer
     C                     MOVELWWCCY     #1CCY            Currency
     C                     MOVELWWACOD    #1ACOD           Account Code
     C                     MOVELWWACSQ    #1ACSQ           Account Seq
     C           ATYP      IFEQ 'R'
     C                     MOVELACNO      #1ACCN           Account Number
     C                     ELSE
     C                     MOVEL*BLANKS   #1ACCN
     C                     ENDIF
     C                     MOVELANAM      #1ANAM           Account Name
     C                     ENDIF
      *
      ** For single branch system, check if user is authorised to the
      ** action
      *
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     Z-ADD*ZEROS    @ERR
     C           WUMBIN    IFEQ 'N'
     C                     CALL 'ZVACTU'
     C                     PARM 'I'       @ZACTN
     C                     PARM           @ERR
     C           @ERR      IFNE *ZEROS
     C                     MOVEL#1ACCD    ZA0001           Pooling Account
     C                     MOVEL'USR8636' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
     C                     GOTO BFEXIT
     C                     ENDIF
      *
      ** For multibranching system, branch code must be valid for
      ** the user
     C                     ELSE
     C                     CALL 'ZVACTBU'
     C                     PARM 'I'       @ZACTN  1
     C                     PARM #1BRCA    @ZBR    3
     C                     PARM           @ERR    10
      * REMOVE LATER HPL
     C                     Z-ADD0         @ERR
      *
     C           @ERR      IFEQ 1
     C                     MOVEL#1ACCD    ZA0001           Pooling Account
     C                     MOVEL'USR8637' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
     C                     GOTO BFEXIT
     C                     ENDIF
     C           @ERR      IFEQ 2
     C                     MOVEL#1ACCD    ZA0001           Pooling Account
     C                     MOVEL'USR8638' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
     C                     GOTO BFEXIT
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      * USER: Validate key screen
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * Retrieve Record - Pooling Account *
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ 'Y2U0003'                  *IF
      *
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0002           Pooling Account
      * Send message 'Pooling Account already exists'
     C                     MOVEL'XXX1124' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     MOVEL#1ACCD    WUTIVK           Test invalid va
      * CASE: WRK.Test invalid val in key f is Question Mark
     C           WUTIVK    IFEQ '?'                        *IF
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0003           Pooling Account
      * Send message 'Pooling Account  Cannot be ?'
     C                     MOVEL'XXX1123' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      *
      * CASE: WRK.Test invalid val in key f is Asterisk
     C           WUTIVK    IFEQ '*'                        *IF
      * Setup message data for message
     C                     MOVEL#1ACCD    ZA0004           Pooling Account
      * Send message 'Asterisk invalid'
     C                     MOVEL'USR1164' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      *
      * Pooling Account
     C           #1ACCD    IFEQ *BLANK                     IF
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   05                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
      * Set-up KEY Screen Footer - Standard Functions  *
      *
      * KEY LINE COMMAND KEY TEXT
      *
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'USR0790' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      *
     C   05                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * If delete is not pending....
      * Validate details
     C  N10                CAS            DCVLDL
     C                     END
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      *
      * USER: Validate detail screen fields
      * Action code is delete
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
      * Send message 'F12/F10 Only Valid Options'
     C                     MOVEL'XXX1140' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      *
      ** Validate Scheme
      *
     C           #1SCHM    IFEQ *BLANK
      *
      *** Setup message data for message
      *
     C                     MOVEL#1SCHM    ZA0005           Scheme
      *
      *** Send message 'Scheme must have at least one entry'
      *
     C                     MOVEL'XXX1127' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     993132*
     C                     SETON                       3334*
      *
     C                     ELSE
      *
     C           #1CHMA    IFNE 'A'
     C           #1CHMA    ANDNE*BLANKS
      *
      *** Setup message data for message
      *
     C                     MOVEL#1CHMA    ZA0006           Scheme Actual
      *
      *** Send message 'Scheme Actual Pooling must be "A"'
      *
     C                     MOVEL'XXX1128' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
     C                     ENDIF
      *
     C           #1CHMS    IFNE 'S'
     C           #1CHMS    ANDNE*BLANKS
      *
      *** Setup message data for message
      *
     C                     MOVEL#1CHMS    ZA0007           Scheme Sweep
      *
      *** Send message 'Scheme Sweep must be "S"'
      *
     C                     MOVEL'XXX1129' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
     C                     ENDIF
      *
     C           #1CHMT    IFNE 'T'
     C           #1CHMT    ANDNE*BLANKS
      *
      *** Setup message data for message
      *
     C                     MOVEL#1CHMT    ZA0008           Scheme Transfer
      *
      *** Send message 'Scheme Transfer Account must be "T"'
      *
     C                     MOVEL'XXX1130' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
     C                     ENDIF
      *
     C           #1CHMI    IFNE 'I'
     C           #1CHMI    ANDNE*BLANKS
      *
      *** Setup message data for message
      *
     C                     MOVEL#1CHMI    ZA0009           Scheme Inter-office
      *
      *** Send message 'Scheme Inter-office must be "I"'
      *
     C                     MOVEL'XXX1131' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ENDIF
      *
     C                     ENDIF
      *
      ** Validate Internal Branch Code
      *
     C           #1BRCH    IFEQ *BLANK
      *
      * CASE: DTL.Internal Branch is Not Entered
      * Setup message data for message
     C                     MOVEL#1BRCH    ZA0010           Internal Branch
      * Send message 'Internal Branch Req'
     C                     MOVEL'XXX1132' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9935  *
     C                     ENDIF
      *
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
     C                     SELEC
      * Process delete request
     C           *IN10     WHEQ '1'
     C                     EXSR EDDLRQ
      *
      * Process update request 1
     C           *IN10     WHEQ '1'
     C           W0PMD     ANDNE'ADD'
     C                     EXSR EECHRQ
      *
      * Process update request 2
     C           W0PMD     WHNE 'ADD'
     C                     EXSR EECHRQ
      *
      * Process add request
     C           W0PMD     WHEQ 'ADD'
     C                     EXSR ECADRQ
      *
     C                     END
     C           W0RTN     IFNE *BLANK
      * Error: ROLLBACK any DBF changes
     C                     ROLBK
     C                     GOTO EBEXIT
     C                     ELSE
      * Otherwise COMMIT any DBF changes
     C                     COMIT
     C                     END
     C           W0RTN     IFEQ *BLANK
      *
     C           W0PMD     IFEQ 'ADD'
      * Exit after successful add
     C                     MOVEL'N'       W0RPT
     C                     END
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Pooling Account *
     C                     EXSR SPCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EDDLRQ    BEGSR
      *================================================================
      * Process delete request
      *================================================================
      * USER: Delete DBF record
      * Delete Pooling Account *
     C                     EXSR STDLRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record deleted'
     C                     MOVEL'Y2U0013' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EDEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change Pooling Account *
     C                     EXSR SYCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1ACCD    IFEQ *BLANK                     Pooling Account
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
     C           W0PMD     COMP 'ADD'                    85*
      * Protect key fields on detail screen
     C                     SETON                     88    *
      * Enable key screen
     C                     SETON                     87    *
      *----------------------------------------------------------------
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVEL*BLANK    #1RECI           RECI
     C                     MOVEL*BLANK    #1LCD            Last Change Date
     C                     MOVEL*BLANK    #1TYLC           Last Change Type
     C                     MOVEL*BLANK    #1LTME           Last Change Time
     C                     MOVEL*BLANK    #1CHMA           Schema Actual
     C                     MOVEL*BLANK    #1CHMS           Schema Sweep
     C                     MOVEL*BLANK    #1CHMT           Schema Transfer
     C                     MOVEL*BLANK    #1CHMI           Schema Inter-Office
     C                     MOVELJIBRCH    #1BRCH           Internal Branch
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      **Move*SDPLACV0*fields*to*screen************************                  EML110
      * Move XXPLACV0 fields to screen                                          EML110
      *================================================================
     C                     MOVE '-'       DASH1
     C                     MOVE '-'       DASH2
     C                     MOVE '-'       DASH3
     C                     MOVE '-'       DASH4
     C                     MOVELWWBRCA    #1BRCA           Branch
     C                     MOVELWWCNUM    #1CNUM           Customer
     C                     MOVELWWCCY     #1CCY            Currency
     C                     MOVELWWACOD    #1ACOD           Account Code
     C                     MOVELWWACSQ    #1ACSQ           Account Seq
     C           JACNO     IFNE 0
     C                     MOVELJACNO     #1ACCN           Account Number
     C                     ELSE
     C                     MOVEL*BLANKS   #1ACCN
     C                     ENDIF
     C                     MOVELJANAM     #1ANAM           Account Name
     C                     MOVELJSCHMA    #1CHMA           Schema Actual
     C                     MOVELJSCHMS    #1CHMS           Schema Sweep
     C                     MOVELJSCHMT    #1CHMT           Schema Transfer
     C                     MOVELJSCHMI    #1CHMI           Schema Inter-Office
     C                     MOVELJBRCH     #1BRCH           Internal Branch
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *
     C                     EXSR SRB101
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP1ACCD    #1ACCD           Pooling Account
      * USER: Initialize key screen
      * Set-up KEY Screen Footer - Standard Functions  *
      *
      * KEY LINE COMMAND KEY TEXT
      *
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
     C           *IN90     IFEQ '1'
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Retrieve Record - Pooling Account *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      *
      * Move fields to key list
     C********** WWACKB    CHAINSDPLACD0             90    *                    EML110
     C           WWACKB    CHAINXXPLACD0             90    *                    EML110
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'XXX1126' W0RTN   7
     C                     MOVEL'XXUSRMSG'ZAMSGF
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SPCRRC    BEGSR
      *================================================================
      * Create Pooling Accounts *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      **Move*all*fields*to*SDPLACV1*******************                          EML110
      * Move all fields to XXPLACV1                                             EML110
     C                     MOVEL'D'       JRECI            RECI
     C                     MOVELWWBRCA    JBRCA            Branch
     C                     MOVELWWCNUM    JCNUM            Customer
     C                     MOVELWWCCY     JCCY             Currency
     C                     MOVELWWACOD    JACOD            Account Code
     C                     MOVELWWACSQ    JACSQ            Account Seq
     C                     Z-ADDACNO      JACNO            Account Number
     C                     MOVEL#1ANAM    JANAM            Account Name
     C                     MOVEL#1CHMA    JSCHMA           Schema Actual
     C                     MOVEL#1CHMS    JSCHMS           Schema Sweep
     C                     MOVEL#1CHMT    JSCHMT           Schema Transfer
     C                     MOVEL#1CHMI    JSCHMI           Schema Inter-Office
     C                     MOVEL#1BRCH    JBRCH            Internal Branch
     C                     Z-ADDWURDNB    JLCD             Last change Date
     C                     MOVEL'I'       JTYLC            Type last change
     C                     MOVEL##TME     JLTME            Last change Time
      *
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C                     CALL 'WN0010'
     C                     PARM ##PGM     UPGM   10        Program
     C                     PARM *BLANK    UFKEY   2        Function Key
     C                     PARM 'I'       UACTCD  1        Action
     C                     PARM           DATA             Trans Data
     C                     PARM *BLANK    W0RTN            Return Code
     C                     PARM           SPARE 256        Spare Field
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SPEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SPEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SPEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     END                             *FI
      *
      * Check for duplicate primary key
     C********** WWACKB    SETLLSDPLACV1                 90*                    EML110
     C           WWACKB    SETLLXXPLACV1                 90*                    EML110
     C           *IN90     IFEQ '1'
     C                     MOVEL'XXX1124' W0RTN   7
      * Send message 'Pooling Account already exists'
     C                     MOVEL'XXX1124' ZAMSID
     C                     MOVEL'XXUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SPEXIT
     C                     END
      *
     C******************** WRITESDPLACD1               91  *                    EML110
     C                     WRITEXXPLACD1               91  *                    EML110
      *
      * Write new record to Pooling Accounts Details
      *
     C                     EXSR SRB101
     C                     Z-ADDACNO      ACNO@1           Account Number
     C                     MOVEL#1ANAM    ANAM@1           Account Name
     C                     MOVEL#1CHMA    CHMA@1           Schema Actual
     C                     MOVEL#1CHMS    CHMS@1           Schema Sweep
     C                     MOVEL#1CHMT    CHMT@1           Schema Transfer
     C                     MOVEL#1CHMI    CHMI@1           Schema Inter-Office
     C                     MOVEL#1BRCH    IBRC@1           Internal Branch
     C                     MOVE DS101B    DS101
     C                     MOVE 'I'       J1TYLC
     C                     MOVEL##JTM     J1TIME
     C******************** WRITESDJ101D0                                        EML110
     C                     WRITEXXJ101D0                                        EML110
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     END
      *================================================================
     CSR         SPEXIT    ENDSR
      *================================================================
     C           SRJ101    BEGSR
      ** capture after image
     C                     EXSR SRA101
     C           DS101B    IFNE DS101A
      ** Write after image
     C                     MOVE DS101B    DS101
     C                     MOVE 'A'       J1TYLC
     C                     MOVEL##JTM     J1TIME
     C******************** WRITESDJ101D0                                        EML110
     C                     WRITEXXJ101D0                                        EML110
     C                     MOVE DS101A    DS101
     C                     MOVE 'A'       J1TYLC
     C                     MOVEL##JTM     J1TIME
     C******************** WRITESDJ101D0                                        EML110
     C                     WRITEXXJ101D0                                        EML110
     C                     ENDIF
      *
     C                     ENDSR
      /EJECT
      *================================================================
      *
      /EJECT
     CSR         STDLRC    BEGSR
      *================================================================
      * Delete Pooling Accounts *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data update
      * CASE: PAR.Action Code is Delete
     C           P2ANCD    IFEQ 'D'                        *IF
     C                     SETON                     7071
      *
      * CASE: WRK.A/C code cannot be deletd is cannot be deleted
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Function key not allowed'
     C                     MOVEL'USR0533' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y2U0004' W0RTN            *Return code
     C                     GOTO STEXIT                     *QUIT
     C                     END                             *FI
      *
      * CASE: WRK.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
      *
     C                     CALL 'WN0010'
     C                     PARM ##PGM     UPGM   10        Program
     C                     PARM *BLANK    UFKEY   2        Function Key
     C                     PARM 'D'       UACTCD  1        Action
     C                     PARM           DATA             Trans Data
     C                     PARM *BLANK    W0RTN            Return Code
     C                     PARM           SPARE 256        Spare Field
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO STEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO STEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO STEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     END                             *FI
      *
     C                     MOVEL#1ACCD    ACKEY            Pooling Account
      *
     C********** WWACKB    CHAINSDPLACV1             9091  *                    EML110
     C           WWACKB    CHAINXXPLACV1             9091  *                    EML110
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO STEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO STEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C********** WWACKB    SETLLSDPLACV0             9091  *                    EML110
     C           WWACKB    SETLLXXPLACV0             9091  *                    EML110
     C                     GOTO STEXIT
     C                     END                             FI #1DBRC
      *................................................................
     C                     MOVEL'*'       JRECI            RECI
     C                     Z-ADDWURDNB    JLCD             Last change Date
     C                     MOVEL'D'       JTYLC            Type last change
     C                     MOVEL##TME     JLTME            Last change Time
     C******************** UPDATSDPLACD1               91  *                    EML110
     C                     UPDATXXPLACD1               91  *                    EML110
      *
      * Write deleted record to Pooling Accounts Details
     C                     MOVE DS101B    DS101
     C                     SETON                     70
     C                     MOVE 'D'       J1TYLC
     C                     MOVEL##JTM     J1TIME
     C******************** WRITESDJ101D0                                        EML110
     C                     WRITEXXJ101D0                                        EML110
      *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     END
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SYCHRC    BEGSR
      *================================================================
      * Change Pooling Accounts *
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE 'N'       YERDC   1
      *
      **Move*key*fields*to*SDPLACV1******************                           EML110
      * Move key fields to XXPLACV1                                             EML110
     C                     MOVEL#1ACCD    ACKEY            Pooling Account
      *
     C********** WWACKB    CHAINSDPLACV1             9091  *                    EML110
     C           WWACKB    CHAINXXPLACV1             9091  *                    EML110
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SYEXIT
     C                     END
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     GOTO SYEXIT
     C                     END
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C******************** UNLCKSDPLACV1               91  *                    EML110
     C                     UNLCKXXPLACV1               91  *                    EML110
     C                     GOTO SYEXIT
     C                     END                             FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YERDCS
      **Move*non-key*fields*to*SDPLACV1**************                           EML110
      * Move non-key fields to XXPLACV1                                         EML110
     C                     MOVEL#1CHMA    JSCHMA           Schema Actual
     C                     MOVEL#1CHMS    JSCHMS           Schema Sweep
     C                     MOVEL#1CHMT    JSCHMT           Schema Transfer
     C                     MOVEL#1CHMI    JSCHMI           Schema Inter-Office
     C                     MOVEL#1BRCH    JBRCH            Internal Branch
     C                     Z-ADDWURDNB    JLCD             Last change Date
     C                     MOVEL'A'       JTYLC            Type last change
     C                     MOVEL##TME     JLTME            Last change Time
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YERDCS
     C                     MOVE 'Y'       YERDC
     C                     END
      * USER: Processing before Data update
      * CASE: WRK.Window processing requir. is Yes
     C           BGWDPR    IFEQ 'Y'                        *IF
      * WM call Window Manager - Window manager  *
     C                     CALL 'WN0010'
     C                     PARM ##PGM     UPGM   10        Program
     C                     PARM *BLANK    UFKEY   2        Function Key
     C                     PARM 'A'       UACTCD  1        Action
     C                     PARM           DATA             Trans Data
     C                     PARM *BLANK    W0RTN            Return Code
     C                     PARM           SPARE 256        Spare Field
      * WM Check Return
      * CASE: PAR.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: PAR.*Return code is WN Window Error
     C           W0RTN     IFEQ 'USR0563'                  *IF
      * Send message 'WN Window Error'
     C                     MOVEL'USR0563' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SYEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *DBF update error
     C           W0RTN     IFEQ 'Y2U0004'                  *IF
      * Send message 'WN Database Error'
     C                     MOVEL'USR0567' ZAMSID
     C                     MOVEL'SDUSRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SYEXIT                     *QUIT
     C                     ELSE
      * CASE: PAR.*Return code is *Previous Screen
     C           W0RTN     IFEQ 'USR0790'                  *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO SYEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     END                             *FI
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YERDCS
     C                     MOVE 'Y'       YERDC
     C                     END
      * If changed update record otherwise release record
     C           YERDC     IFEQ 'Y'
     C******************** UPDATSDPLACD1               91  *                    EML110
     C                     UPDATXXPLACD1               91  *                    EML110
     C                     EXSR SRJ101
     C                     ELSE
      * Release record lock
     C******************** UNLCKSDPLACV1               91  *                    EML110
     C                     UNLCKXXPLACV1               91  *                    EML110
     C                     END
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
     C                     END
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      *
      * CASE: KEY.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * ROLLBACK any uncommitted DBF changes
     C                     ROLBK                       90
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
      *================================================================
     C           SRB101    BEGSR
      *================================================================
      * capture BEFORE image
      *================================================================
      *
     C                     MOVELWWBRCA    BRCA@1           Branch
     C******************** Z-ADDWWCNUM    CNUM@1           Customer       EML110
     C                     MOVELWWCNUM    CNUM@1           Customer       EML110
     C                     MOVELWWCCY     CURR@1           Currency
     C                     Z-ADDWWACOD    ACOD@1           Account Code
     C                     MOVE WWACSQ    ACSQ@1           Account Seq
     C           P2ANCD    IFNE 'I'
     C                     Z-ADDACNO      ACNO@1           Account Number
     C                     MOVELJANAM     ANAM@1           Account Name
     C                     MOVELJSCHMA    CHMA@1           Schema Actual
     C                     MOVELJSCHMS    CHMS@1           Schema Sweep
     C                     MOVELJSCHMT    CHMT@1           Schema Transfer
     C                     MOVELJSCHMI    CHMI@1           Schema Inter-Office
     C                     MOVELJBRCH     IBRC@1           Internal Branch
     C                     ENDIF
     C                     ENDSR
      /EJECT
      *================================================================
     C           SRA101    BEGSR
      *================================================================
      * capture AFTER image
      *================================================================
      *
     C                     MOVELBRCA@1    BRCA#1           Branch
     C******************** Z-ADDCNUM@1    CNUM#1           Customer       EML110
     C                     MOVELCNUM@1    CNUM#1           Customer       EML110
     C                     MOVELCURR@1    CURR#1           Currency
     C                     Z-ADDACOD@1    ACOD#1           Account Code
     C                     MOVE ACSQ@1    ACSQ#1           Account Seq
     C                     Z-ADDACNO@1    ACNO#1           Account Number
     C                     MOVELANAM@1    ANAM#1           Account Name
     C                     MOVEL#1CHMA    CHMA#1           Schema Actual
     C                     MOVEL#1CHMS    CHMS#1           Schema Sweep
     C                     MOVEL#1CHMT    CHMT#1           Schema Transfer
     C                     MOVEL#1CHMI    CHMI#1           Schema Inter-Office
     C                     MOVEL#1BRCH    IBRC#1           Internal Branch
     C                     ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN Y2MGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Deletion Allowed
     C                     MOVEL*BLANK    WUDELA  1
      * Define work field Set Up Complete
     C                     MOVEL*BLANK    WUSUC   1
      * Define work field Err Code
     C                     MOVEL*BLANK    WUERCD  1
      * Define work field Return Code work field
     C                     MOVEL*BLANK    WURTCD  7
      * Define work field Test invalid val in key f
     C                     MOVEL*BLANK    WUTIVK  1
      * Define work field Numeric flag
     C                     MOVEL*BLANK    WUNMFL  1
      * Define work field question mark entered
     C                     MOVEL*BLANK    WUQMEN  1
      * Define work field Test ? in Key Field
     C                     MOVEL*BLANK    WUTQKF  1
      * Define work field Access Pgm Return Code
     C                     MOVEL*BLANK    WUAPRC  7
      * Define work field Run day number
     C                     Z-ADD*ZERO     WURDNB  50
      * Define work field Midas Run Date
     C                     MOVEL*BLANK    WUMRDT  7
      * Define work field Date format flag
     C                     MOVEL*BLANK    WUDFF   1
      * Define work field Multi-branching Indicator
     C                     MOVEL*BLANK    WUMBIN  1
      * Define work field Currency Code
     C                     MOVEL*BLANK    WUCYCD  3
      * Define work field Number of Decimal Places
     C                     Z-ADD*ZERO     WUNBDP  10
      * To memorize previous message for footer
     C           *LIKE     DEFN ##CTX1    WOCTX1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Open files
      * Begin commit control
     C                     CALL 'Y2BGCMC'
     C                     PARM           W0RTN   7
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'CPF8351'
     C                     EXSR ZYEXPG
     C                     END
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C******************** OPEN SDJ101R#                                        EML110
     C******************** OPEN SDPLACV0                                        EML110
     C******************** OPEN SDPLACV1                                        EML110
     C                     OPEN XXJ101R#                                        EML110
     C                     OPEN XXPLACV0                                        EML110
     C                     OPEN XXPLACV1                                        EML110
     C                     OPEN ACCBR
     C                     OPEN ACNUM
     C******************** OPEN SDJ101PP                                        EML110
     C                     OPEN XXJ101PP                                        EML110
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      *
      ** Get Rundate - Rundate  *
      *
     C           *NAMVAR   DEFN           RUNDAT
     C                     IN   RUNDAT
     C                     MOVE MRDT      ##MRDT  7        RUN DATE
     C                     MOVE MRDT      WUMRDT
     C                     MOVE RDNB      WURDNB           RUNDAY NO.
     C                     MOVE SUC       WUSUC            SET UP COMPLT
     C                     MOVE DFF       WUDFF            DTE FMT FLAG
     C                     MOVE MBIN      WUMBIN           MULTI BR. IND
      *
      ** Define LDA
      *
     C           *NAMVAR   DEFN           LDA
      *
      ** Set-up DTL Screen Footer - Standard Functions  *
      *
      **  DETAIL LINE COMMAND KEY TEXT
      *
     C                     MOVEL'XXUSRMSG'WUMSGF 10
     C                     MOVE *BLANKS   WUMTXT 80
      *
      ** Check Midas modules available
      *
     C                     CALL 'AOMMODR0'
     C                     PARM '        '@RTCD   7
     C                     PARM '*FIRST  '@OPTN   7
     C           SDMMOD    PARM SDMMOD    DSFDY
      *
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD1         DBASE            ***************
     C******************** MOVEL'SDJ101R 'DBPGM            ** DBASE 001 **EML110
     C                     MOVEL'XXJ101R 'DBPGM            ** DBASE 001 **EML110
     C                     MOVEL'SDMMODPD'DBFILE           ***************
     C                     OUT  LDA
     C                     SETON                     LRU7U8
     C                     EXSR *PSSR
     C                     GOTO ZZEXIT
     C                     ENDIF
      *
      ** Access Account Pooling ICD Details
      *
     C**********           CALL 'AOPICDR0'                                EML110
     C                     CALL 'XXPICDR0'                                EML110
     C                     PARM '        '@RTCD
     C                     PARM '*FIRST  '@OPTN
     C********** SDPICD    PARM SDPICD    DSSDY                           EML110
     C           XXPICD    PARM XXPICD    DSSDY                           EML110
      *
     C           @RTCD     IFNE *BLANKS
     C           *LOCK     IN   LDA
     C                     Z-ADD2         DBASE            ***************
     C******************** MOVEL'SDJ101R 'DBPGM            ** DBASE 002 **EML110
     C                     MOVEL'XXJ101R 'DBPGM            ** DBASE 002 **EML110
     C******************** MOVEL'SDPICDPP'DBFILE           ***************EML110
     C                     MOVEL'XXPICDPP'DBFILE           ***************EML110
     C                     OUT  LDA
     C                     SETON                     LRU7U8
     C                     EXSR *PSSR
     C                     GOTO ZZEXIT
     C                     ENDIF
      *
      **  If Action Code is Delete :
      *
     C           P2ANCD    IFEQ 'D'
      * Setup footer text:
      * F10=Delete   F12=Previous
     C                     MOVEL'XXX1138' WUMSID  7        Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      ** If Action Code is Insert :
      *
     C           P2ANCD    IFEQ 'I'
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      **  If Action Code is Amend :
      *
     C           P2ANCD    IFEQ 'A'
     C           P2ANCD    OREQ 'E'
      * Setup footer text:
      * F12=Previous
     C                     MOVEL'XXX1139' WUMSID           Message Identifier
     C                     CALL 'SDRTVTXT'             90  Retrieve MSGF message
     C           WUMSID    PARM WUMSID    KE0286  7        Message Identifier
     C           WUMSGF    PARM WUMSGF    KE0287 10        Message File Name
     C           WUMTXT    PARM WUMTXT    KE0288 80        Message Text
     C                     MOVELWUMTXT    ##CTX1
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'SDRTVTXT'W0CLPG
     C* Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
     C                     END
      **
      * CASE: PAR.Action Code is Insert
     C           P2ANCD    IFEQ 'I'                        *IF
     C                     MOVEL'ADD'     W0PMD            *Program mode
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'CHG'     W0PMD            *Program mode
     C                     END                             *FI
      * CASE: PAR.Account is blank
     C           P1ACCD    IFEQ *BLANK                     *IF
     C                     MOVEL'ADD'     W0PMD            *Program mode
     C                     END                             *FI
      * CASE: PAR.Enquiry Mode
     C           P2ANCD    IFEQ 'E'
     C                     SETON                     70    *Enquiry mode
     C                     END                             *FI
      *
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *****************************************************************
      *                                                               *
      * *PSSR  - Program exception error routine                      *
      *          Called automatically if a program error occurs,      *
      *          or directly by the program code using EXSR.          *
      *          This subroutine DUMPs the program just once.         *
      *                                                               *
      *****************************************************************
      *
      ** Standard Midas PSSR processing.
      *
     C/COPY SDCPYSRC,SDPSSRINT
      *
      *================================================================
     CSR                   ENDSR
      *================================================================
** CPY@
(c) Finastra International Limited 2018
