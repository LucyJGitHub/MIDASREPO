      *****************************************************************
      *                                                               *
      *  Midas - /COPY Member (RPG)                                   *
      *                                                               *
      *  XXXXXXX - (/COPY Name)                                       *
      *                                                               *
      * Bank Fusion Midas 1.4 Base -----------------------------------*
      * Midas Plus 1.4 Base 04 ---------------------------------------*
      * Midas Plus 1.4 Base ------------------------------------------*
      * Midas Plus 1.3 ----------- Base ------------------------------*
      * Midas Release 4 --------------- Base -------------------------*
      *  Last Amend No. nnnnnn  *CREATE    Date ddmmmyy               *
      *  Prev Amend No. nnnnnn             Date ddmmmyy               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *  nnnnnn - (change description)                                *
      *                                                               *
      *****************************************************************
  *********************************************************************
  **                                                                 **
  ** This subroutine is created under SAR no. S01502, BLI Telekurs   **
  ** Processing dated 08JUL94.                                       **
  **                                                                 **
  *********************************************************************
 
  STANDARD SUBROUTINE - ZSEFMT
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
  Purpose:
  ~~~~~~~~
   THE ZSEFMT subroutine converts a numeric figure of length 13,8
   to a 14 alphanumeric field for output to screen or report.  The
   subroutine will clear all leading and trailing zeroes placing a
   decimal point in the correct position.  If the numeric figure is
   less than 1 then a zero is placed before the decimal point.  If
   the PRICE BASIS is P then % is added.  This subroutine is created
   for the Security Module.
 
  Notes for when including in RPG pgm for compiling:
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   /COPY ZSRSRC ZSEFMT1 should be included in the 'E' specifications
   /COPY ZSRSRC ZSEFMT2 should be included in the 'I' specifications
   /COPY ZSRSRC ZSEFMT3 should be included in the subroutine section
 
 
   Requirements:
   ~~~~~~~~~~~~
   The subroutine references two execution time arrays which must
   be described on extension specifications.
 
   RAT    -     A numeric array of 13 one-byte elements which will
                contain the input field.
 
   OUT    -     An alphameric array of 14 one-byte elements which will
                contain the formated output array.
 
   Input:
   ~~~~~
 
   ZRT13   -    A numeric field of length 13 to contain the numeric
                input.
 
   ZPBAS   -    A one alphanumeric PRICE BASIS indicator.
 
 
   Procedure:
   ~~~~~~~~~
 
   1.   The array RAT will get the input field ZRT13.
 
   2.   ZRT13A is filled with blanks ready for output to it.
 
   3.   All leading zeroes will be cleared.  This is made possible
        by going through the first 5 digit in the array RAT.  If the
        digit is a 0 a blank is output to the array OUT however if
        the digit is non-zero then the digit will be output to the
        array OUT.
 
   4.   A decimal point is then place on position 6 of the array OUT.
        The input numeric field is 13,8 which means that there can be a
        maximum of 5 digit before the decimal point and 8 digits after
        the decimal point.  If all the digits before the decimal point
        are zeroes, a 0 is output to position 5 of the array OUT.
 
   5.   All trailing zeroes will be cleared.  This is made possible
        by going through the last 8 digit of array RAT starting from
        the last digit.  If the digit is a 0, a blank is output to
        the array OUT however if it's a non-zero digit the digit
        itself will be output to the array OUT.
 
   6.   If the Price Basis is a percentage then a "%" will be added
        at the end of the array OUT.
 
   7.   The formated numeric field (OUT) will then be moved to
        ZRT13A.
 
 
   Output:
   ~~~~~~
 
   ZRT13A - the 14 character alphameric field containing the formated
            numeric field w/ decimal point and "%" symbol if the price
            basis is a percentage.
